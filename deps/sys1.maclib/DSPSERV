*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  DSPSERV                               -03/15/23-<3> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Data Space Services                           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1988, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      DSPSERV provides an interface to request data space services.  * 00002100
*                                                                     * 00002200
*      The following services are provided:                           * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      CREATE   CREATE a data space.                                  * 00002600
*                                                                     * 00002700
*      DELETE   DELETE a data space.                                  * 00002800
*                                                                     * 00002900
*      RELEASE  RELEASE an area of a data space.                      * 00003000
*                                                                     * 00003100
*      DEFINE   DEFINE attributes for an area of a data space.        * 00003200
*                                                                     * 00003300
*      EXTEND   EXTEND the current size of a data space.              * 00003400
*                                                                     * 00003500
*      OUT      indicate that an area of a data space should no       * 00003600
*               longer occupy central storage.                        * 00003700
*                                                                     * 00003800
*      LOAD     request that an area of a data space be brought into  * 00003900
*               central storage.                                      * 00004000
*                                                                     * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*      Register Usage:                                                * 00004400
*                                                                     * 00004500
*      AR/GPRs 0, 1, 14, and 15 are not preserved. AR/GPRs 2-13 are   * 00004600
*      preserved.  No save area is required and the contents of GPR   * 00004700
*      13 are not used.                                               * 00004800
*                                                                     * 00004900
*      Upon return GPR 15 contains a return code and GPR 0 may        * 00005000
*      contain a reason code.                                         * 00005100
*                                                                     * 00005200
*01* EXTERNAL CLASSIFICATION:                                         * 00005300
*                                                                     * 00005400
*02* GUPI: BASE                                                       * 00005500
*                                                                     * 00005600
*02* NONE: FIELDS                                                     * 00005700
*          PCIEIO                                                     * 00005800
*          DMAPGTPTR                                                  * 00005900
*                                                                     * 00006000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006100
*                                                                     * 00006200
*01* ENVIRONMENT:                                                     * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*      Dispatchable unit mode: Task or SRB mode.                      * 00006600
*                                                                     * 00006700
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00006800
*                        key.                                         * 00006900
*                                                                     * 00007000
*                        The caller must be executing in supervisor   * 00007100
*                        state or with a system (0-7) PSW key to use  * 00007200
*                        the following parameters.                    * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*                        o   CREATE                                   * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*                            -   DREF YES                             * 00007900
*                                                                     * 00008000
*                            -   SCOPE ALL                            * 00008100
*                                                                     * 00008200
*                            -   SCOPE COMMON                         * 00008300
*                                                                     * 00008400
*                            -   KEY                                  * 00008500
*                                                                     * 00008600
*                            -   SHARE YES                            * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                        o   DELETE                                   * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                            -   TTOKEN                               * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*                        o   DEFINE                                   * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*      AMODE:            31-bit.                                      * 00010200
*                                                                     * 00010300
*      ASC mode:         Primary or Access Register.                  * 00010400
*                                                                     * 00010500
*                        Any primary address space, any secondary     * 00010600
*                        address space, any home address space.       * 00010700
*                                                                     * 00010800
*      Serialization:                                                 * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                        CREATE          Enabled and unlocked.        * 00011200
*                                                                     * 00011300
*                        DELETE          Enabled and unlocked.        * 00011400
*                                                                     * 00011500
*                        RELEASE         If the request is against    * 00011600
*                                        enabled reference storage:   * 00011700
*                                        Enabled and unlocked.        * 00011800
*                                        If the request is against    * 00011900
*                                        disabled reference storage:  * 00012000
*                                        Enabled or disabled.  No RSM * 00012100
*                                        locks may be held. No locks  * 00012200
*                                        higher than the RSM lock may * 00012300
*                                        be held.                     * 00012400
*                                                                     * 00012500
*                        DEFINE IOON     If the request is against    * 00012600
*                                        enabled reference storage:   * 00012700
*                                        Enabled and unlocked.        * 00012800
*                                        If the request is against    * 00012900
*                                        disabled reference (or       * 00013000
*                                        IOONed) storage:  Enabled or * 00013100
*                                        disabled.  No RSM locks may  * 00013200
*                                        be held. No locks higher     * 00013300
*                                        than the RSM lock may be     * 00013400
*                                        held.                        * 00013500
*                                                                     * 00013600
*                        DEFINE IOOFF    Enabled or disabled. No RSM  * 00013700
*                                        locks may be held. No locks  * 00013800
*                                        higher than the RSM lock may * 00013900
*                                        be held.                     * 00014000
*                                                                     * 00014100
*                        DEFINE DREFON   If the request is against    * 00014200
*                                        enabled reference storage:   * 00014300
*                                        Enabled and unlocked.        * 00014400
*                                        If the request is against    * 00014500
*                                        disabled reference (or       * 00014600
*                                        IOONed) storage:  Enabled or * 00014700
*                                        disabled.  No RSM locks may  * 00014800
*                                        be held. No locks higher     * 00014900
*                                        than the RSM lock may be     * 00015000
*                                        held.                        * 00015100
*                                                                     * 00015200
*                        DEFINE DREFOFF  Enabled or disabled. No RSM  * 00015300
*                                        locks may be held. No locks  * 00015400
*                                        higher than the RSM lock may * 00015500
*                                        be held.                     * 00015600
*                                                                     * 00015700
*                        EXTEND          Enabled and unlocked.        * 00015800
*                                                                     * 00015900
*                        OUT             Enabled and unlocked.        * 00016000
*                                                                     * 00016100
*                        LOAD            Enabled and unlocked.        * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*      Restrictions:                                                  * 00016600
*                                                                     * 00016700
*                        When DSPSERV is invoked disabled, the        * 00016800
*                        DISABLED(YES) keyword must be specifed and   * 00016900
*                        the DSPSERV parameter list must be in fixed  * 00017000
*                        or disabled reference storage.               * 00017100
*                                                                     * 00017200
*                        When using NUMRANGE and RANGLIST,            * 00017300
*                        unauthorized callers may not specify a value * 00017400
*                        greater than 16.                             * 00017500
*                                                                     * 00017600
*                        If NUMRANGE is greater than 16 or if         * 00017700
*                        DISABLED=YES is specified, then the range    * 00017800
*                        list must be in fixed storage.  Otherwise,   * 00017900
*                        the range list can be in pageable storage or * 00018000
*                        disabled reference storage.                  * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*01* SYNTAX:                                                          * 00018500
*                                                                     * 00018600
*Ýxlabel¨  DSPSERV  Ð  CREATE                                         * 00018700
*                   !     ,NAME=xname                                 * 00018800
*                   !   ÐÝ,GENNAME=NO¨                                * 00018900
*                   !   ÔÝ,GENNAME=COND                               * 00019000
*                   !   !    Ý,OUTNAME=xoutname¨¨                     * 00019100
*                   !   ¿Ý,GENNAME=YES                                * 00019200
*                   !        Ý,OUTNAME=xoutname¨¨                     * 00019300
*                   !    Ý,BLOCKS=(»xblocks!0º»,xinitial!524288º)¨    * 00019400
*                   !   ÐÝ,TYPE=BASIC                                 * 00019500
*                   !   !    Ý,DREF=»NO!YESº¨                         * 00019600
*                   !   !    Ý,SCOPE=»SINGLE!ALL!COMMONº¨             * 00019700
*                   !   !    Ý,BACK=»31!64º¨                          * 00019800
*                   !   !    Ý,PAGEFRAMESIZE=»4K!1Mº¨                 * 00019900
*                   !   !   ÐÝ,HIDEZERO=NO¨                           * 00020000
*                   !   !   ¿Ý,HIDEZERO=YES¨¨                         * 00020100
*                   !   ¿Ý,TYPE=HIPERSPACE                            * 00020200
*                   !       ÐÝ,HSTYPE=SCROLL                          * 00020300
*                   !       !    Ý,SHARE=»NO!YESº¨¨                   * 00020400
*                   !       ¿Ý,HSTYPE=CACHE                           * 00020500
*                   !            Ý,CASTOUT=»YES!NOº¨¨¨                * 00020600
*                   !   ÐÝ,CALLERKEY                                  * 00020700
*                   !   ¿ ,KEY=»xkeyº¨                                * 00020800
*                   !    Ý,FPROT=»YES!NOº¨                            * 00020900
*                   !    Ý,TTOKEN=»xttoken!0º¨                        * 00021000
*                   !     ,STOKEN=xstoken                             * 00021100
*                   !    Ý,ORIGIN=xorigin¨                            * 00021200
*                   !    Ý,NUMBLKS=xnumblks¨                          * 00021300
*                   !    Ý,CRITICALPAGING=»YES!NOº¨                   * 00021400
*                   Ô ,DELETE                                         * 00021500
*                   !     ,STOKEN=xstoken                             * 00021600
*                   !    Ý,TTOKEN=»xttoken!0º¨                        * 00021700
*                   Ô ,RELEASE                                        * 00021800
*                   !     ,STOKEN=xstoken                             * 00021900
*                   !   ÐÝ,INLIST=NO                                  * 00022000
*                   !   !     ,START=xstart                           * 00022100
*                   !   !     ,BLOCKS=xblocks¨                        * 00022200
*                   !   ¿Ý,INLIST=YES                                 * 00022300
*                   !        Ý,NUMRANGE=»xnumrange!1º¨                * 00022400
*                   !         ,RANGLIST=xranglist¨                    * 00022500
*                   !    Ý,DISABLED=»NO!YESº¨                         * 00022600
*                   !    Ý,FREESHAREDSEG=»NO!YESº¨                    * 00022700
*                   !   ÐÝ,KEEPREAL=NO¨                               * 00022800
*                   !   ¿Ý,KEEPREAL=YES                               * 00022900
*                   !        Ý,CLEAR=»YES!NOº¨¨                       * 00023000
*                   Ô ,DEFINE                                         * 00023100
*                   !     ,STOKEN=xstoken                             * 00023200
*                   !   ÐÝ,INLIST=NO                                  * 00023300
*                   !   !     ,START=xstart                           * 00023400
*                   !   !     ,BLOCKS=xblocks¨                        * 00023500
*                   !   ¿Ý,INLIST=YES                                 * 00023600
*                   !        Ý,NUMRANGE=»xnumrange!1º¨                * 00023700
*                   !         ,RANGLIST=xranglist¨                    * 00023800
*                   !    Ý,DISABLED=»NO!YESº¨                         * 00023900
*                   !   Ð ,IOON                                       * 00024000
*                   !   !   ÐÝ,STEAL=YES¨                             * 00024100
*                   !   !   ¿Ý,STEAL=NO¨                              * 00024200
*                   !   !    Ý,LONG=»YES!NOº¨                         * 00024300
*                   !   !   ÐÝ,PCIEIO=NO¨                             * 00024400
*                   !   !   ¿Ý,PCIEIO=YES                             * 00024500
*                   !   !         ,DMAPGTPTR=xdmapgtptr¨              * 00024600
*                   !   Ô ,IOOFF                                      * 00024700
*                   !   !    Ý,PCIEIO=»NO!YESº¨                       * 00024800
*                   !   Ô ,DREFON                                     * 00024900
*                   !   ¿ ,DREFOFF                                    * 00025000
*                   !        Ý,FORCE=»NO!YESº¨                        * 00025100
*                   Ô ,EXTEND                                         * 00025200
*                   !     ,STOKEN=xstoken                             * 00025300
*                   !     ,BLOCKS=xblocks                             * 00025400
*                   !    Ý,VAR=»NO!YESº¨                              * 00025500
*                   !    Ý,NUMBLKS=xnumblks¨                          * 00025600
*                   Ô ,OUT                                            * 00025700
*                   !     ,STOKEN=xstoken                             * 00025800
*                   !     ,START=xstart                               * 00025900
*                   !     ,BLOCKS=xblocks                             * 00026000
*                   ¿ ,LOAD                                           * 00026100
*                         ,STOKEN=xstoken                             * 00026200
*                         ,START=xstart                               * 00026300
*                         ,BLOCKS=xblocks                             * 00026400
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00026500
*                   ÐÝ,MF=S¨                                          * 00026600
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00026700
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*      Where:                                                         * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*      Ýxlabel¨                                                       * 00027400
*          is an optional symbol, starting in column 1, that is the   * 00027500
*          name on the DSPSERV macro invocation.  The name must       * 00027600
*          conform to the rules for an ordinary assembler language    * 00027700
*          symbol.                                                    * 00027800
*          DEFAULT: No name.                                          * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*      The following is a set of mutually exclusive keys.  This set   * 00028400
*      is required; only one key must be specified.                   * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*      CREATE                                                         * 00028800
*          Is a keyword used to request the create service.           * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*          NAME=xname                                                 * 00029200
*              is the name (RS-type), or address in register          * 00029300
*              (2)-(12), of a required 8 character input variable or  * 00029400
*              constant that contains either (1) the name to be       * 00029500
*              assigned to the data space being created (if           * 00029600
*              GENNAME=YES is not specified) or (2) the suffix for    * 00029700
*              the data space name being created (if GENNAME=YES is   * 00029800
*              specified).  Data space names must be unique within    * 00029900
*              the owning address space.                              * 00030000
*                                                                     * 00030100
*              If GENNAME=NO is specified or defaulted or             * 00030200
*              GENNAME=COND is specified, the input name must be made * 00030300
*              up of letters and numbers, left justified and padded   * 00030400
*              on the right with blanks.  The first character cannot  * 00030500
*              be a numeric.  Authorized callers use some data space  * 00030600
*              names beginning with SYS to name its own data spaces.  * 00030700
*              Therefore you should not use SYS as the first three    * 00030800
*              characters of a data space name.  Also, data space     * 00030900
*              names with SYSDS as the first five characters are      * 00031000
*              reserved for RSM use.                                  * 00031100
*                                                                     * 00031200
*              If GENNAME=COND is specified and the input name is not * 00031300
*              unique, a unique one will be returned, of the format:  * 00031400
*              xxxxxPPP, where xxxxx is generated and PPP is taken    * 00031500
*              from the prefix of the input name.                     * 00031600
*                                                                     * 00031700
*              If GENNAME=YES is specified, the NAME field will be    * 00031800
*              used as the suffix for the data space name being       * 00031900
*              created.  This suffix must follow the rules of a data  * 00032000
*              space name stated above except that the leading        * 00032100
*              character may be a numeric.                            * 00032200
*                                                                     * 00032300
*              The data space name is used to identify the data space * 00032400
*              in some dump requests and IPCS commands.               * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*          ÝGENNAME=»NO!COND!YESº¨                                    * 00033000
*              is an optional keyword input that indicates whether    * 00033100
*              the system should generate a data space name for the   * 00033200
*              new data space to be created.                          * 00033300
*                                                                     * 00033400
*              If the system does generate a data space name, it will * 00033500
*              be returned in the variable specified by the OUTNAME   * 00033600
*              keyword.  The generated name will start with a         * 00033700
*              numeric, followed by four additional characters,       * 00033800
*              followed by the first three characters of the user     * 00033900
*              supplied name (or the entire name if less than three   * 00034000
*              characters).                                           * 00034100
*                                                                     * 00034200
*              If the system needs to generate a data space name and  * 00034300
*              the set of unique name prefixes for the address space  * 00034400
*              is curently exhausted, then the request will be        * 00034500
*              rejected with a return code of 08 and a reason code of * 00034600
*              xx0012xx.                                              * 00034700
*                                                                     * 00034800
*              The set of generated names for an address space is     * 00034900
*              always restored to its full complement whenever the    * 00035000
*              number of such data spaces owned by the address space  * 00035100
*              goes to zero.                                          * 00035200
*                                                                     * 00035300
*              CAUTION: To avoid the permanent depletion of generated * 00035400
*              names for an Initiator, no job should create a data    * 00035500
*              space that (1) uses a generated name and (2) has       * 00035600
*              ownership assigned to the Initiator task or a task     * 00035700
*              higher than the Initiator in the TCB chain.            * 00035800
*                                                                     * 00035900
*              DEFAULT: NO                                            * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*              ÝGENNAME=NO¨                                           * 00036300
*                  Specifies that the system is not to generate a     * 00036400
*                  data space name.  The user must supply a data      * 00036500
*                  space name that is unique within the address space * 00036600
*                  of the data space owner for the request to be      * 00036700
*                  accepted.                                          * 00036800
*                                                                     * 00036900
*              ÝGENNAME=COND                                          * 00037000
*                  Specifies that the system should generate a unique * 00037100
*                  name for the data space only if the user supplied  * 00037200
*                  name is found to be already in use in the address  * 00037300
*                  space of the data space owner.                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                  ÝOUTNAME=xoutname¨¨                                * 00037700
*                      is the name (RS-type), or address in register  * 00037800
*                      (2)-(12), of an optional 8 character output    * 00037900
*                      variable that will contain the name assigned   * 00038000
*                      to the data space created.                     * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*              ÝGENNAME=YES                                           * 00038500
*                  Specifies that the system should ALWAYS generate a * 00038600
*                  unique name for the data space.  The user must     * 00038700
*                  still supply a data space name via the NAME        * 00038800
*                  keyword since the system generated name will       * 00038900
*                  consist, in part, of this supplied name.           * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                  ÝOUTNAME=xoutname¨¨                                * 00039300
*                      is the name (RS-type), or address in register  * 00039400
*                      (2)-(12), of an optional 8 character output    * 00039500
*                      variable that will contain the name assigned   * 00039600
*                      to the data space created.                     * 00039700
*                                                                     * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*          ÝBLOCKS=(»xblocks!0º»,xinitial!524288º)¨                   * 00040600
*                                                                     * 00040700
*            xblocks                                                  * 00040800
*              is the name (RS-type), or address in register          * 00040900
*              (2)-(12), of an optional fullword input variable or    * 00041000
*              constant that contains the maximum size of the new     * 00041100
*              data space in units of 4K byte blocks.  The minimum    * 00041200
*              data space size is 1 block (4K bytes) and the maximum  * 00041300
*              is 524,288 blocks (2G bytes).  A data space may never  * 00041400
*              be referenced nor extended beyond its maximum size.    * 00041500
*                                                                     * 00041600
*              Not all processors will support a data space with a    * 00041700
*              zero origin.  The maximum size data space supported on * 00041800
*              all processors is 524,287 blocks (2G-4K).              * 00041900
*                                                                     * 00042000
*              Installation management will have control over the     * 00042100
*              number of user key data spaces as well as the total    * 00042200
*              size of all user key data spaces owned by an address   * 00042300
*              space (on a per job step basis).                       * 00042400
*                                                                     * 00042500
*              DEFAULT: 0                                             * 00042600
*              If a size value of zero is specified or defaulted, an  * 00042700
*              installation management defined default size data      * 00042800
*              space will be created.                                 * 00042900
*                                                                     * 00043000
*            »,xinitial!524288º                                       * 00043100
*              is the name (RS-type), or address in register          * 00043200
*              (2)-(12), of an optional fullword input that specifies * 00043300
*              the initial current size of the data space in units of * 00043400
*              blocks (4K bytes).  If the new data space is           * 00043500
*              non-system key, then the specified initial size must   * 00043600
*              not cause the data space limits for the address space  * 00043700
*              to be exceeded.  If the initial size specified exceeds * 00043800
*              the maximum size, then an initial size equal to the    * 00043900
*              maximum size will be used.                             * 00044000
*                                                                     * 00044100
*              DEFAULT: 524288                                        * 00044200
*              As the default, the initial current size will be set   * 00044300
*              equal to the maximum size.                             * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*          ÝTYPE=»BASIC!HIPERSPACEº                                   * 00044900
*              is an optional keyword input specifies the type of     * 00045000
*              data space to be created.                              * 00045100
*              DEFAULT: BASIC                                         * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*              ÝTYPE=BASIC                                            * 00045500
*                  specifies that a basic data space is to be         * 00045600
*                  created.                                           * 00045700
*                  DEFAULT: 0                                         * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                  ÝDREF=»NO!YESº¨                                    * 00046100
*                      is an optional keyword input that specifies    * 00046200
*                      whether the data space will be referenced      * 00046300
*                      disabled.                                      * 00046400
*                      DEFAULT: NO                                    * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                      DREF=NO                                        * 00046800
*                          The data space will only be referenced     * 00046900
*                          enabled.                                   * 00047000
*                          If the data space is referenced disabled,  * 00047100
*                          the referencing unit of work may be        * 00047200
*                          ABENDed.                                   * 00047300
*                                                                     * 00047400
*                      DREF=YES                                       * 00047500
*                          The data space may be referenced disabled  * 00047600
*                          as well as enabled.  The data space may be * 00047700
*                          referenced disabled provided that the RSM  * 00047800
*                          lock is not held and no lock higher than   * 00047900
*                          the RSM lock is held.  Referencing a DREF  * 00048000
*                          data space while holding the RSM lock      * 00048100
*                          and/or a higher lock will result in an     * 00048200
*                          abend.                                     * 00048300
*                          YES may only be used by callers executing  * 00048400
*                          in supervisor state or with a system (0-7) * 00048500
*                          PSW key.                                   * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*                  ÝSCOPE=»SINGLE!ALL!COMMONº¨                        * 00049300
*                      is an optional keyword input that specifies    * 00049400
*                      whether the data space should be SCOPE SINGLE  * 00049500
*                      or SCOPE ALL or SCOPE COMMON.                  * 00049600
*                      DEFAULT: SINGLE                                * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*                      SCOPE=SINGLE                                   * 00050000
*                          The data space will be SCOPE SINGLE.       * 00050100
*                          SCOPE SINGLE data spaces may only be       * 00050200
*                          accessed by users whose home or current    * 00050300
*                          primary address space is the same as the   * 00050400
*                          data space owners home address space.      * 00050500
*                          SCOPE SINGLE data spaces may only be       * 00050600
*                          ALESERV ADDed to access lists (DU or PASN) * 00050700
*                          belonging to the data space owner or       * 00050800
*                          creator.                                   * 00050900
*                                                                     * 00051000
*                      SCOPE=ALL                                      * 00051100
*                          The data space will be SCOPE ALL.          * 00051200
*                          SCOPE ALL data spaces may be accessed by   * 00051300
*                          any authorized user in the system.         * 00051400
*                          SCOPE ALL data spaces may be ALESERV       * 00051500
*                          ADDed, by any authorized user, to any      * 00051600
*                          access list.                               * 00051700
*                          If an address space contains a task that   * 00051800
*                          owns a SCOPE ALL data space, the address   * 00051900
*                          space must be non-swappable.               * 00052000
*                          ALL may only be used by callers executing  * 00052100
*                          in supervisor state or with a system (0-7) * 00052200
*                          PSW key.                                   * 00052300
*                                                                     * 00052400
*                      SCOPE=COMMON                                   * 00052500
*                          Specifies that the data space is to be     * 00052600
*                          accessible from every address space, once  * 00052700
*                          the owner has added it to his PASN access  * 00052800
*                          list.  The ALET of the data space will be  * 00052900
*                          the same in every address space.           * 00053000
*                          SCOPE COMMON data spaces may be ALESERV    * 00053100
*                          ADDed, by any authorized user, to only the * 00053200
*                          PASN access list.                          * 00053300
*                          COMMON may only be used by callers         * 00053400
*                          executing in supervisor state or with a    * 00053500
*                          system (0-7) PSW key.                      * 00053600
*                                                                     * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                  ÝBACK=»31!64º¨                                     * 00054300
*                      is an optional keyword input that specifies    * 00054400
*                      whether the data space pages can be backed by  * 00054500
*                      real storage above 2GB when fixed.             * 00054600
*                      DEFAULT: 31                                    * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                      BACK=31                                        * 00055000
*                          specifies that the data space pages will   * 00055100
*                          be backed by frames below 2GB when defined * 00055200
*                          IOON                                       * 00055300
*                                                                     * 00055400
*                      BACK=64                                        * 00055500
*                          specifies that the data space pages will   * 00055600
*                          be backed by frames above or below 2GB     * 00055700
*                          when defined IOON                          * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*                                                                     * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*                  ÝPAGEFRAMESIZE=»4K!1Mº¨                            * 00056500
*                      is an optional keyword input that specifies    * 00056600
*                      the preferred size of the page frames used to  * 00056700
*                      back the virtual storage mapped by the         * 00056800
*                      allocated memory object.                       * 00056900
*                      DEFAULT: 4K                                    * 00057000
*                                                                     * 00057100
*                                                                     * 00057200
*                      PAGEFRAMESIZE=4K                               * 00057300
*                          specifies that the data space pages should * 00057400
*                          be backed by 4K page frames at first       * 00057500
*                          reference.                                 * 00057600
*                                                                     * 00057700
*                      PAGEFRAMESIZE=1M                               * 00057800
*                          specifies that the data space pages should * 00057900
*                          be backed by pageable 1M page frames at    * 00058000
*                          first reference.  If pageable 1M page      * 00058100
*                          frames are not available at first          * 00058200
*                          reference, 4K page frames will be used.    * 00058300
*                          Note that if DEFINE IOON is later          * 00058400
*                          performed against pages backed with        * 00058500
*                          pageable 1M pages, the pages will always   * 00058600
*                          be backed above 2 GB.                      * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*                  ÝHIDEZERO=»NO!YESº¨                                * 00059400
*                      is an optional keyword input that specifies    * 00059500
*                      whether the system is to hide page 0 of the    * 00059600
*                      data space so that references to that page     * 00059700
*                      will not succeed.  Regardless, the data space  * 00059800
*                      will start at the returned origin, and the     * 00059900
*                      number of blocks requested, if available, will * 00060000
*                      be allocated.                                  * 00060100
*                      DEFAULT: NO                                    * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*                      ÝHIDEZERO=NO¨                                  * 00060500
*                          indicates not to hide page 0.              * 00060600
*                                                                     * 00060700
*                      ÝHIDEZERO=YES¨¨                                * 00060800
*                          indicates to hide page 0.  The returned    * 00060900
*                          origin will indicate the lowest address    * 00061000
*                          that may be used which wil be x'1000'.     * 00061100
*                          When PageFrameSize=1M is in effect,        * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*                          o   the first segment will be backed by 4K * 00061500
*                              pages;                                 * 00061600
*                                                                     * 00061700
*                          o   if performance is critical, avoid      * 00061800
*                              using any address below x'100000'.     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*              ÝTYPE=HIPERSPACE                                       * 00062700
*                  specifies that a hiperspace is to be created.      * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                  ÝHSTYPE=»SCROLL!CACHEº¨¨                           * 00063100
*                      is an optional keyword input that specifies    * 00063200
*                      the type of hiperspace to be be created.       * 00063300
*                      DEFAULT: SCROLL                                * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*                      ÝHSTYPE=SCROLL                                 * 00063700
*                          specifies that a SCROLL type hiperspace is * 00063800
*                          to be created.                             * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*                          ÝSHARE=»NO!YESº¨¨                          * 00064200
*                              is an optional keyword input that      * 00064300
*                              specifies whether or not the scroll    * 00064400
*                              type hiperspace is to be created as    * 00064500
*                              shared or non-shared.                  * 00064600
*                              DEFAULT: NO                            * 00064700
*                                                                     * 00064800
*                                                                     * 00064900
*                              SHARE=NO                               * 00065000
*                                  specifies that the scroll type     * 00065100
*                                  hiperspace is to be created        * 00065200
*                                  non-shared.                        * 00065300
*                                                                     * 00065400
*                              SHARE=YES                              * 00065500
*                                  specifies that the scroll type     * 00065600
*                                  hiperspace is to be created as     * 00065700
*                                  shared.  SHARE=YES can only be     * 00065800
*                                  specified by authorized            * 00065900
*                                  (supervisor state and/or system    * 00066000
*                                  key) users.                        * 00066100
*                                                                     * 00066200
*                                  If a shared scroll type hiperspace * 00066300
*                                  is to be accessed from any address * 00066400
*                                  space other than the owning        * 00066500
*                                  address space, then it is required * 00066600
*                                  that either (1) the owning address * 00066700
*                                  space be non-swappable or (2) the  * 00066800
*                                  HSPSERV invoker's HOME or PRIMARY  * 00066900
*                                  address space be the same as the   * 00067000
*                                  HOME address space of the owner.   * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*                                                                     * 00067400
*                                                                     * 00067500
*                                                                     * 00067600
*                      ÝHSTYPE=CACHE                                  * 00067700
*                          specifies that a CACHE type hiperspace is  * 00067800
*                          to be created.                             * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                          ÝCASTOUT=»YES!NOº¨¨¨                       * 00068200
*                              is an optional keyword input that      * 00068300
*                              specifies the persistency of the data  * 00068400
*                              in a CACHE type hiperspace.            * 00068500
*                              DEFAULT: YES                           * 00068600
*                                                                     * 00068700
*                                                                     * 00068800
*                              CASTOUT=YES                            * 00068900
*                                  indicates that the data written to * 00069000
*                                  the CACHE hiperspace may be        * 00069100
*                                  discarded by the system if and     * 00069200
*                                  when the need for expanded storage * 00069300
*                                  arises.                            * 00069400
*                                                                     * 00069500
*                              CASTOUT=NO                             * 00069600
*                                  specifies that the system should   * 00069700
*                                  give the data in the hiperspace    * 00069800
*                                  more priority when searching for   * 00069900
*                                  candidate pages to remove from     * 00070000
*                                  expanded storage when a shortage   * 00070100
*                                  arises.  Caution must be exercised * 00070200
*                                  when using this option with a view * 00070300
*                                  toward total system performance.   * 00070400
*                                  Specifying CASTOUT(NO) can place a * 00070500
*                                  heavy demand on expanded storage   * 00070600
*                                  and is similar to a DREF data      * 00070700
*                                  space containing changed pages     * 00070800
*                                  (i.e., pages which cannot be       * 00070900
*                                  discarded nor moved to auxiliary   * 00071000
*                                  storage from expanded storage).    * 00071100
*                                                                     * 00071200
*                                  Note that, although specifying     * 00071300
*                                  CASTOUT(NO) does prevent           * 00071400
*                                  hiperspace pages from being        * 00071500
*                                  discarded from expanded storage    * 00071600
*                                  when a shortage arises, it does    * 00071700
*                                  not guarantee that the data pages, * 00071800
*                                  once written, are always available * 00071900
*                                  on a subsequent CREAD.  There are  * 00072000
*                                  other occasions when such pages    * 00072100
*                                  may be discarded.  For example,    * 00072200
*                                  the data pages in expanded store   * 00072300
*                                  will be discarded, regardless of   * 00072400
*                                  CASTOUT, if these pages occupy     * 00072500
*                                  expanded store E-frames which are  * 00072600
*                                  to be reconfigured out of the      * 00072700
*                                  system.  Also, pages will be       * 00072800
*                                  discarded if the address space     * 00072900
*                                  owning the hiperspace is           * 00073000
*                                  swapped-out.  It is this latter    * 00073100
*                                  reason that address spaces with    * 00073200
*                                  CACHE type hiperspaces should be   * 00073300
*                                  made non-swappable.                * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                                                                     * 00073800
*                                                                     * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*                                                                     * 00074500
*                                                                     * 00074600
*                                                                     * 00074700
*                                                                     * 00074800
*          The following is a set of mutually exclusive keys.  This   * 00074900
*          set is optional; only one key may be specified.            * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*          ÝCALLERKEY                                                 * 00075300
*              Specifies that the caller's PSW key will be the        * 00075400
*              storage protect key for the data space.                * 00075500
*              DEFAULT: CALLERKEY                                     * 00075600
*                                                                     * 00075700
*          KEY=»xkeyº¨                                                * 00075800
*              belongs to a set of mutually exclusive keys. It is the * 00075900
*              name (RS-type), or address in register (2)-(12), of an * 00076000
*              optional byte input variable or constant that          * 00076100
*              specifies the storage protect key to be assigned to    * 00076200
*              the data space storage.  The key must be in bits 0-3   * 00076300
*              of the variable or constant specified.  Bits 4-7 will  * 00076400
*              be ignored.                                            * 00076500
*              The KEY parameter may only be used by callers          * 00076600
*              executing in supervisor state or with a system (0-7)   * 00076700
*              PSW key.                                               * 00076800
*                                                                     * 00076900
*                                                                     * 00077000
*                                                                     * 00077100
*          End of a set of mutually exclusive optional keys.          * 00077200
*          DEFAULT: CALLERKEY                                         * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*          ÝFPROT=»YES!NOº¨                                           * 00077700
*              is an optional keyword input that specifies whether    * 00077800
*              the data space should be fetch protected.              * 00077900
*              If YES is specified or defaulted, the entire data      * 00078000
*              space will be fetch protected. This means a program    * 00078100
*              must be in the key of the data space storage (or key   * 00078200
*              0) in order to reference data in the data space.       * 00078300
*              DEFAULT: YES                                           * 00078400
*                                                                     * 00078500
*                                                                     * 00078600
*              FPROT=YES                                              * 00078700
*                  The data space will be fetch protected.            * 00078800
*                                                                     * 00078900
*              FPROT=NO                                               * 00079000
*                  The data space will not be fetch protected.        * 00079100
*                  NO may only be used by callers executing in        * 00079200
*                  supervisor state or with a system (0-7) PSW key.   * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*                                                                     * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*                                                                     * 00079900
*          ÝTTOKEN=»xttoken!0º¨                                       * 00080000
*              is the name (RS-type), or address in register          * 00080100
*              (2)-(12), of an optional 16 character input variable   * 00080200
*              that identifies the task to become the owner of the    * 00080300
*              data space.  The TTOKEN is returned by the TCBTOKEN    * 00080400
*              macro.                                                 * 00080500
*              If TTOKEN is specified, the task identified by the     * 00080600
*              TTOKEN becomes the owner of the data space.  If TTOKEN * 00080700
*              is not specified, the currently dispatched task        * 00080800
*              becomes the owner of the data space.  The task         * 00080900
*              identified by the TTOKEN must be in either the         * 00081000
*              invokers current primary or home address space.        * 00081100
*                                                                     * 00081200
*              The TTOKEN parameter must be used by callers executing * 00081300
*              in SRB mode.                                           * 00081400
*                                                                     * 00081500
*              DEFAULT: 0                                             * 00081600
*              If the TTOKEN parameter is not specified, or if 0 is   * 00081700
*              specified, and the caller is running in task mode, the * 00081800
*              currently dispatched task will become the owner of the * 00081900
*              data space.                                            * 00082000
*              SRB mode callers will be ABENDed if the TTOKEN         * 00082100
*              parameter is not specified.                            * 00082200
*                                                                     * 00082300
*                                                                     * 00082400
*                                                                     * 00082500
*                                                                     * 00082600
*          STOKEN=xstoken                                             * 00082700
*              is the name (RS-type), or address in register          * 00082800
*              (2)-(12), of a required 8 character output variable    * 00082900
*              that will contain the STOKEN for the data space being  * 00083000
*              created.  The STOKEN is a unique identifier for a data * 00083100
*              space.                                                 * 00083200
*                                                                     * 00083300
*              The STOKEN is used to identify the data space to other * 00083400
*              DSPSERV services. It is also used to gain access to    * 00083500
*              the data space via ALESERV ADD, and in certain dump    * 00083600
*              requests.                                              * 00083700
*                                                                     * 00083800
*                                                                     * 00083900
*                                                                     * 00084000
*                                                                     * 00084100
*          ÝORIGIN=xorigin¨                                           * 00084200
*              is the name (RS-type), or address in register          * 00084300
*              (2)-(12), of an optional fullword output variable that * 00084400
*              will contain the lowest address in the new data space. * 00084500
*              MVS will attempt to begin all data spaces at origin    * 00084600
*              zero however this will not be possible on all          * 00084700
*              processors. The origin is guaranteed to be zero or 4K. * 00084800
*                                                                     * 00084900
*              If desired, the programmer can use address 4K and not  * 00085000
*              check the origin. It is expected that eventually, all  * 00085100
*              active processors will support zero origin.            * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*                                                                     * 00085500
*                                                                     * 00085600
*          ÝNUMBLKS=xnumblks¨                                         * 00085700
*              is the name (RS-type), or address in register          * 00085800
*              (2)-(12), of an optional fullword output variable that * 00085900
*              will contain the size, in units of 4K bytes, of the    * 00086000
*              newly created data space.  Normally, NUMBLKS would be  * 00086100
*              used when the default for BLOCKS is specified.         * 00086200
*                                                                     * 00086300
*                                                                     * 00086400
*                                                                     * 00086500
*                                                                     * 00086600
*          ÝCRITICALPAGING=»YES!NOº¨                                  * 00086700
*              is an optional keyword input (internal users only)     * 00086800
*              that specifies whether the dataspace data should be    * 00086900
*              included as part of the data "hardened" against page   * 00087000
*              faults for address spaces marked critical.             * 00087100
*              DEFAULT: YES                                           * 00087200
*                                                                     * 00087300
*                                                                     * 00087400
*              CRITICALPAGING=YES                                     * 00087500
*                  The dataspace data will be considered as critical  * 00087600
*                  when the address space is marked as critical.      * 00087700
*                                                                     * 00087800
*              CRITICALPAGING=NO                                      * 00087900
*                  The dataspace data will not be considered critical * 00088000
*                  and pages can paged out to aux if necessary.       * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*                                                                     * 00088400
*                                                                     * 00088500
*                                                                     * 00088600
*      DELETE                                                         * 00088700
*          Is a keyword used to request the delete service.           * 00088800
*                                                                     * 00088900
*          All I/O into the data space must be complete before the    * 00089000
*          DELETE is requested.                                       * 00089100
*                                                                     * 00089200
*          No areas of the data space may be I/O DEFINEd when the     * 00089300
*          data space is DELETEd. If the DELETE service finds an I/O  * 00089400
*          DEFINEd area in the data space, the data space will be     * 00089500
*          deleted and both the DELETE caller and the data space      * 00089600
*          owner will be ABENDed.                                     * 00089700
*                                                                     * 00089800
*                                                                     * 00089900
*          STOKEN=xstoken                                             * 00090000
*              is the name (RS-type), or address in register          * 00090100
*              (2)-(12), of a required 8 character input variable     * 00090200
*              that identifies the data space.                        * 00090300
*                                                                     * 00090400
*                                                                     * 00090500
*                                                                     * 00090600
*                                                                     * 00090700
*          ÝTTOKEN=»xttoken!0º¨                                       * 00090800
*              is the name (RS-type), or address in register          * 00090900
*              (2)-(12), of an optional 16 character input variable   * 00091000
*              that identifies the task that owns the data space.     * 00091100
*              The TTOKEN is returned by the Supervisor TCBTOKEN      * 00091200
*              macro.                                                 * 00091300
*              If TTOKEN is not specified, the task issuing the       * 00091400
*              delete request must be the owner of the data space     * 00091500
*              unless the data space is a SCOPE=SINGLE data space,    * 00091600
*              the task issuing the delete request is the creator of  * 00091700
*              the data space, and the job step task is the owner of  * 00091800
*              the data space.                                        * 00091900
*              If TTOKEN is specified, it specifies the task that is  * 00092000
*              the owner of the data space.  The task identified by   * 00092100
*              the TTOKEN must be in either the invokers current      * 00092200
*              primary or home address space.                         * 00092300
*                                                                     * 00092400
*              The TTOKEN parameter may only be used by callers       * 00092500
*              executing in supervisor state or with a system (0-7)   * 00092600
*              PSW key.                                               * 00092700
*              The TTOKEN parameter must be used by callers executing * 00092800
*              in SRB mode.                                           * 00092900
*                                                                     * 00093000
*              DEFAULT: 0                                             * 00093100
*              If the TTOKEN parameter is not specified, or if 0 is   * 00093200
*              specified, and the caller is running in task mode, the * 00093300
*              currently dispatched task must be the owner of the     * 00093400
*              data space.                                            * 00093500
*              SRB mode callers will be ABENDed if the TTOKEN         * 00093600
*              parameter is not specified.                            * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*      RELEASE                                                        * 00094100
*          Is a keyword used to request the release service.          * 00094200
*                                                                     * 00094300
*          Areas of the data space that are I/O DEFINEd may not be    * 00094400
*          RELEASEd.  If the RELEASE service finds an I/O DEFINEd     * 00094500
*          block in the area to be RELEASEd, the RELEASE caller will  * 00094600
*          be ABENDed.  The caller must be executing in supervisor    * 00094700
*          state to RELEASE an area in a SCOPE ALL or SCOPE COMMON    * 00094800
*          data space.  If the caller's PSW key is not zero it must   * 00094900
*          match the key of the data space storage to be RELEASEd.    * 00095000
*                                                                     * 00095100
*          For purposes of a supervisor state caller, releasing an    * 00095200
*          area of storage within a cache hiperspace will be treated  * 00095300
*          as if the hiperspace were SCOPE=ALL.  That is, if neither  * 00095400
*          the caller's primary nor home space is the owning space,   * 00095500
*          the owning space must be non-swappable.                    * 00095600
*                                                                     * 00095700
*          For purposes of any caller, releasing an area of storage   * 00095800
*          within a scroll hiperspace will be treated as if the       * 00095900
*          hiperspace were SCOPE=SINGLE.  That is, the caller's       * 00096000
*          primary or home must be the owner of the hiperspace.       * 00096100
*                                                                     * 00096200
*                                                                     * 00096300
*          STOKEN=xstoken                                             * 00096400
*              is the name (RS-type), or address in register          * 00096500
*              (2)-(12), of a required 8 character input variable     * 00096600
*              that identifies the data space.  The STOKEN was        * 00096700
*              returned by the CREATE service.                        * 00096800
*                                                                     * 00096900
*                                                                     * 00097000
*                                                                     * 00097100
*                                                                     * 00097200
*          ÝINLIST=»NO!YESº¨                                          * 00097300
*              is an optional keyword input that indicates whether or * 00097400
*              not the input contains a range list.                   * 00097500
*              DEFAULT: NO                                            * 00097600
*                                                                     * 00097700
*                                                                     * 00097800
*              ÝINLIST=NO                                             * 00097900
*                  specifies that the input contains START and        * 00098000
*                  BLOCKS, for a single range of storage.             * 00098100
*                                                                     * 00098200
*                                                                     * 00098300
*                  START=xstart                                       * 00098400
*                      is the name (RS-type), or address in register  * 00098500
*                      (2)-(12), of a required fullword input         * 00098600
*                      variable or constant that contains the address * 00098700
*                      in the data space of the first block of        * 00098800
*                      storage to be released.  The address must be   * 00098900
*                      on a 4096 byte boundary.                       * 00099000
*                                                                     * 00099100
*                                                                     * 00099200
*                                                                     * 00099300
*                                                                     * 00099400
*                  BLOCKS=xblocks¨                                    * 00099500
*                      is the name (RS-type), or address in register  * 00099600
*                      (2)-(12), of a required fullword input         * 00099700
*                      variable or constant that contains the number  * 00099800
*                      of contiguous blocks of storage to be          * 00099900
*                      released.                                      * 00100000
*                                                                     * 00100100
*                                                                     * 00100200
*                                                                     * 00100300
*              ÝINLIST=YES                                            * 00100400
*                  specifies that the input contains NUMRANGE and     * 00100500
*                  RANGLIST, for one or more ranges of storage.       * 00100600
*                                                                     * 00100700
*                                                                     * 00100800
*                  ÝNUMRANGE=»xnumrange!1º¨                           * 00100900
*                      is the name (RS-type), or address in register  * 00101000
*                      (2)-(12), of an optional fullword input        * 00101100
*                      variable that specifies the number of entries  * 00101200
*                      in the supplied range list.  The range list is * 00101300
*                      used to specify one or more data space storage * 00101400
*                      ranges which are to be released.  The value    * 00101500
*                      specified must be a positive integer.  If      * 00101600
*                      NUMRANGE is greater than 16 or if DISABLED=YES * 00101700
*                      is specified, then the range list must be in   * 00101800
*                      fixed storage.  Otherwise, the rangelist can   * 00101900
*                      be in pageable storage.                        * 00102000
*                                                                     * 00102100
*                      Unauthorized callers may not specify a value   * 00102200
*                      greater than 16.                               * 00102300
*                                                                     * 00102400
*                      DEFAULT: 1.                                    * 00102500
*                                                                     * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*                                                                     * 00102900
*                                                                     * 00103000
*                  RANGLIST=xranglist¨                                * 00103100
*                      is the name (RS-type), or address in register  * 00103200
*                      (2)-(12), of a required 4 byte input that      * 00103300
*                      contains the address of a range list.  The     * 00103400
*                      range list consists of a number of entries (as * 00103500
*                      specified by NUMRANGE) where each entry        * 00103600
*                      specifies the start address of the data space  * 00103700
*                      storage to be released and the number of       * 00103800
*                      blocks to be released.  A mapping of each      * 00103900
*                      entry is provided in the mapping macro IARDRL. * 00104000
*                      A description of the fields in each entry is   * 00104100
*                      as follows:                                    * 00104200
*                                                                     * 00104300
*                                                                     * 00104400
*                         START_VSA     contains the starting virtual * 00104500
*                                       address of the storage to be  * 00104600
*                                       processed.                    * 00104700
*                                                                     * 00104800
*                                       The virtual address to be     * 00104900
*                                       specified must be on a page   * 00105000
*                                       (4K) boundary.                * 00105100
*                                                                     * 00105200
*                                       The length of this field is 4 * 00105300
*                                       bytes.                        * 00105400
*                                                                     * 00105500
*                         RESERVED BYTE contains value zero.          * 00105600
*                                                                     * 00105700
*                                       The length of this field is 1 * 00105800
*                                       byte.                         * 00105900
*                                                                     * 00106000
*                         NUM_BLOCKS    contains the number of 4K     * 00106100
*                                       pages to be processed.        * 00106200
*                                                                     * 00106300
*                                       The length of this field is 3 * 00106400
*                                       bytes.                        * 00106500
*                                                                     * 00106600
*                                                                     * 00106700
*                                                                     * 00106800
*                      An example of how to code the RANGLIST         * 00106900
*                      parameter when NUMRANGE=3 is as follows:       * 00107000
*                                                                     * 00107100
*                        NUMRANGE=3,RANGLIST=(5)                      * 00107200
*                           or                                        * 00107300
*                        NUMRANGE=3,RANGLIST=RANGADDR                 * 00107400
*                                                <-----8 bytes----->  * 00107500
*                         .-----.    .-----.    .-------------------. * 00107600
*                         !     +--->!     +--->!Start addr!0!blocks! * 00107700
*                         '-----'    '-----'    !----------+-+------! * 00107800
*                          Reg 5     RANGADDR   !Start addr!0!blocks! * 00107900
*                                   (fullword)  !----------+-+------! * 00108000
*                                               !Start addr!0!blocks! * 00108100
*                                               '-------------------' * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*                      The range list must be addressable in the      * 00108500
*                      caller's primary address space.  If NUMRANGE   * 00108600
*                      is greater than 16 or if DISABLED=YES is       * 00108700
*                      specified, then the range list must be in      * 00108800
*                      fixed storage.  Otherwise, the range list can  * 00108900
*                      be in pageable storage.                        * 00109000
*                                                                     * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                                                                     * 00109400
*                                                                     * 00109500
*                                                                     * 00109600
*                                                                     * 00109700
*                                                                     * 00109800
*          ÝDISABLED=»NO!YESº¨                                        * 00109900
*              is an optional keyword input that specifies whether    * 00110000
*              the caller may be running disabled.                    * 00110100
*              DEFAULT: NO                                            * 00110200
*                                                                     * 00110300
*                                                                     * 00110400
*              DISABLED=NO                                            * 00110500
*                  The caller will not be running disabled.           * 00110600
*                                                                     * 00110700
*              DISABLED=YES                                           * 00110800
*                  The caller may be running disabled.                * 00110900
*                                                                     * 00111000
*                                                                     * 00111100
*                                                                     * 00111200
*                                                                     * 00111300
*                                                                     * 00111400
*                                                                     * 00111500
*          ÝFREESHAREDSEG=»NO!YESº¨                                   * 00111600
*              is an optional keyword input (internal users only)     * 00111700
*              that specifies whether the segment was shared and the  * 00111800
*              page table may be freed                                * 00111900
*              DEFAULT: NO                                            * 00112000
*                                                                     * 00112100
*                                                                     * 00112200
*              FREESHAREDSEG=NO                                       * 00112300
*                  Do not free the page table for a shared segment.   * 00112400
*                                                                     * 00112500
*              FREESHAREDSEG=YES                                      * 00112600
*                  The segment is no longer shared and the page table * 00112700
*                  may be freed.                                      * 00112800
*                                                                     * 00112900
*                                                                     * 00113000
*                                                                     * 00113100
*                                                                     * 00113200
*                                                                     * 00113300
*                                                                     * 00113400
*          ÝKEEPREAL=»NO!YESº¨                                        * 00113500
*              is an optional keyword input (internal users only)     * 00113600
*              that specifies whether the real frame backing the page * 00113700
*              to be released is to be freed or not.                  * 00113800
*              DEFAULT: NO                                            * 00113900
*                                                                     * 00114000
*                                                                     * 00114100
*              ÝKEEPREAL=NO¨                                          * 00114200
*                  The real frame backing the page to be released is  * 00114300
*                  to be freed.                                       * 00114400
*                                                                     * 00114500
*              ÝKEEPREAL=YES                                          * 00114600
*                  The real frame backing the page to be released is  * 00114700
*                  not to be freed.                                   * 00114800
*                                                                     * 00114900
*                                                                     * 00115000
*                  ÝCLEAR=»YES!NOº¨¨                                  * 00115100
*                      is an optional keyword input (internal users   * 00115200
*                      only) that specifies whether the data in the   * 00115300
*                      range should become binary zeros.              * 00115400
*                      DEFAULT: YES                                   * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                      CLEAR=YES                                      * 00115800
*                          The data will become binary zeros.         * 00115900
*                                                                     * 00116000
*                      CLEAR=NO                                       * 00116100
*                          The data will be indeterminate.            * 00116200
*                                                                     * 00116300
*                                                                     * 00116400
*                                                                     * 00116500
*                                                                     * 00116600
*                                                                     * 00116700
*                                                                     * 00116800
*                                                                     * 00116900
*                                                                     * 00117000
*                                                                     * 00117100
*      DEFINE                                                         * 00117200
*          Is a keyword used to request the define service.           * 00117300
*                                                                     * 00117400
*                                                                     * 00117500
*          STOKEN=xstoken                                             * 00117600
*              is the name (RS-type), or address in register          * 00117700
*              (2)-(12), of a required 8 character input variable     * 00117800
*              that identifies the data space.                        * 00117900
*                                                                     * 00118000
*                                                                     * 00118100
*                                                                     * 00118200
*                                                                     * 00118300
*          ÝINLIST=»NO!YESº¨                                          * 00118400
*              is an optional keyword input that indicates whether or * 00118500
*              not the input contains a range list.                   * 00118600
*              DEFAULT: NO                                            * 00118700
*                                                                     * 00118800
*                                                                     * 00118900
*              ÝINLIST=NO                                             * 00119000
*                  specifies that the input contains START and        * 00119100
*                  BLOCKS, for a single range of storage.             * 00119200
*                                                                     * 00119300
*                                                                     * 00119400
*                  START=xstart                                       * 00119500
*                      is the name (RS-type), or address in register  * 00119600
*                      (2)-(12), of a required fullword input         * 00119700
*                      variable or constant that contains the address * 00119800
*                      in the data space of the first block of        * 00119900
*                      storage to be DEFINEd.  The address must be on * 00120000
*                      a 4096 byte boundary.                          * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*                                                                     * 00120500
*                  BLOCKS=xblocks¨                                    * 00120600
*                      is the name (RS-type), or address in register  * 00120700
*                      (2)-(12), of a required fullword input         * 00120800
*                      variable or constant that contains the number  * 00120900
*                      of contiguous blocks of storage to be DEFINEd. * 00121000
*                                                                     * 00121100
*                                                                     * 00121200
*                                                                     * 00121300
*              ÝINLIST=YES                                            * 00121400
*                  specifies that the input contains NUMRANGE and     * 00121500
*                  RANGLIST, for one or more ranges of storage.       * 00121600
*                                                                     * 00121700
*                                                                     * 00121800
*                  ÝNUMRANGE=»xnumrange!1º¨                           * 00121900
*                      is the name (RS-type), or address in register  * 00122000
*                      (2)-(12), of an optional fullword input        * 00122100
*                      variable that specifies the number of entries  * 00122200
*                      in the supplied range list.  The range list is * 00122300
*                      used to specify one or more data space storage * 00122400
*                      ranges which are to be used for the define     * 00122500
*                      service.  The value specified must be a        * 00122600
*                      positive integer.  If NUMRANGE is greater than * 00122700
*                      16 or if DISABLED=YES is specified, then the   * 00122800
*                      range list must be in fixed storage.           * 00122900
*                      Otherwise, the rangelist can be in pageable    * 00123000
*                      storage.                                       * 00123100
*                                                                     * 00123200
*                      DEFAULT: 1.                                    * 00123300
*                                                                     * 00123400
*                                                                     * 00123500
*                                                                     * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*                  RANGLIST=xranglist¨                                * 00123900
*                      is the name (RS-type), or address in register  * 00124000
*                      (2)-(12), of a required 4 byte input that      * 00124100
*                      contains the address of a range list.  The     * 00124200
*                      range list consists of a number of entries (as * 00124300
*                      specified by NUMRANGE) where each entry        * 00124400
*                      specifies the start address of the data space  * 00124500
*                      storage to be defined and the number of blocks * 00124600
*                      to be defined.  A mapping of each entry is     * 00124700
*                      provided in the mapping macro IARDRL.  A       * 00124800
*                      description of the fields in each entry is as  * 00124900
*                      follows:                                       * 00125000
*                                                                     * 00125100
*                                                                     * 00125200
*                         START_VSA     contains the starting virtual * 00125300
*                                       address of the storage to be  * 00125400
*                                       processed.                    * 00125500
*                                                                     * 00125600
*                                       The virtual address to be     * 00125700
*                                       specified must be on a page   * 00125800
*                                       (4K) boundary.                * 00125900
*                                                                     * 00126000
*                                       The length of this field is 4 * 00126100
*                                       bytes.                        * 00126200
*                                                                     * 00126300
*                         RESERVED BYTE contains value zero.          * 00126400
*                                                                     * 00126500
*                                       The length of this field is 1 * 00126600
*                                       byte.                         * 00126700
*                                                                     * 00126800
*                         NUM_BLOCKS    contains the number of 4K     * 00126900
*                                       pages to be processed.        * 00127000
*                                                                     * 00127100
*                                       The length of this field is 3 * 00127200
*                                       bytes.                        * 00127300
*                                                                     * 00127400
*                                                                     * 00127500
*                                                                     * 00127600
*                      An example of how to code the RANGLIST         * 00127700
*                      parameter when NUMRANGE=3 is as follows:       * 00127800
*                                                                     * 00127900
*                        NUMRANGE=3,RANGLIST=(5)                      * 00128000
*                           or                                        * 00128100
*                        NUMRANGE=3,RANGLIST=RANGADDR                 * 00128200
*                                                <-----8 bytes----->  * 00128300
*                         .-----.    .-----.    .-------------------. * 00128400
*                         !     +--->!     +--->!Start addr!0!blocks! * 00128500
*                         '-----'    '-----'    !----------+--------! * 00128600
*                          Reg 5     RANGADDR   !Start addr!0!blocks! * 00128700
*                                   (fullword)  !----------+--------! * 00128800
*                                               !Start addr!0!blocks! * 00128900
*                                               '-------------------' * 00129000
*                                                                     * 00129100
*                                                                     * 00129200
*                      The range list must be addressable in the      * 00129300
*                      caller's primary address space.  If NUMRANGE   * 00129400
*                      is greater than 16 or if DISABLED=YES is       * 00129500
*                      specified, then the range list must be in      * 00129600
*                      fixed storage.  Otherwise, the range list can  * 00129700
*                      be in pageable storage.                        * 00129800
*                                                                     * 00129900
*                                                                     * 00130000
*                                                                     * 00130100
*                                                                     * 00130200
*                                                                     * 00130300
*                                                                     * 00130400
*                                                                     * 00130500
*                                                                     * 00130600
*          ÝDISABLED=»NO!YESº¨                                        * 00130700
*              is an optional keyword input that specifies whether    * 00130800
*              the caller may be running disabled.                    * 00130900
*              DEFAULT: NO                                            * 00131000
*                                                                     * 00131100
*                                                                     * 00131200
*              DISABLED=NO                                            * 00131300
*                  The caller will not be running disabled.           * 00131400
*                                                                     * 00131500
*              DISABLED=YES                                           * 00131600
*                  The caller may be running disabled.                * 00131700
*                                                                     * 00131800
*                                                                     * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*                                                                     * 00132300
*          The following is a set of mutually exclusive keys.  This   * 00132400
*          set is required; only one key must be specified.           * 00132500
*                                                                     * 00132600
*                                                                     * 00132700
*          IOON                                                       * 00132800
*              Is a keyword used to request the define I/O on         * 00132900
*              service.  It specifies that a range of storage will be * 00133000
*              used for I/O.                                          * 00133100
*                                                                     * 00133200
*              I/O defined pages may be backed anywhere in real       * 00133300
*              storage.                                               * 00133400
*                                                                     * 00133500
*              I/O may only be done to virtual storage that has been  * 00133600
*              I/O DEFINEd.                                           * 00133700
*                                                                     * 00133800
*              A block is considered I/O defined until the number of  * 00133900
*              IOOFFs issued for the block is equal to the number of  * 00134000
*              IOONs previously issued for that block.                * 00134100
*                                                                     * 00134200
*              No areas of the data space may be I/O defined when the * 00134300
*              data space is DELETEd. If the DELETE service finds an  * 00134400
*              I/O defined area in the data space, both the DELETE    * 00134500
*              caller and the data space owner will be ABENDed.       * 00134600
*                                                                     * 00134700
*              All I/O to a data space must be associated with the    * 00134800
*              data space owner.  For example, issuing the EXCPVR     * 00134900
*              macro to initiate the I/O while dispatched in the      * 00135000
*              address space which owns the data space meets this     * 00135100
*              requirement.                                           * 00135200
*                                                                     * 00135300
*              Any work unit that starts I/O into a data space must   * 00135400
*              have the data space owner's address space as its       * 00135500
*              current primary or home address space.                 * 00135600
*                                                                     * 00135700
*              A user supplied resource manager must be provided to   * 00135800
*              handle outstanding I/O when the task owning the data   * 00135900
*              space terminates.  This resource manager must ensure   * 00136000
*              that all I/O into the data space is complete.  This is * 00136100
*              required for both normal and abnormal task             * 00136200
*              termination.  For example, this resource manager will  * 00136300
*              be invoked via ABEND of the data space owner if any    * 00136400
*              area of the data space is I/O defined when a delete of * 00136500
*              the data space is requested.                           * 00136600
*                                                                     * 00136700
*              The IOON keyword may only be used by callers executing * 00136800
*              in supervisor state or with a system (0-7) PSW key.    * 00136900
*                                                                     * 00137000
*                                                                     * 00137100
*              ÝSTEAL=»YES!NOº¨                                       * 00137200
*                  is an optional keyword input that specifies        * 00137300
*                  whether it is okay to steal a frame to satisfy the * 00137400
*                  request or not                                     * 00137500
*                  DEFAULT: YES                                       * 00137600
*                                                                     * 00137700
*                                                                     * 00137800
*                  ÝSTEAL=YES¨                                        * 00137900
*                      It is okay to steal a frame to satisfy the     * 00138000
*                      request                                        * 00138100
*                                                                     * 00138200
*                  ÝSTEAL=NO¨                                         * 00138300
*                      It is not okay to steal a frame to satisfy the * 00138400
*                      request                                        * 00138500
*                                                                     * 00138600
*                                                                     * 00138700
*                                                                     * 00138800
*                                                                     * 00138900
*                                                                     * 00139000
*                                                                     * 00139100
*              ÝLONG=»YES!NOº¨                                        * 00139200
*                  is an optional keyword input that specifies        * 00139300
*                  whether the expected duration of the define is     * 00139400
*                  short or long.  In general, a define is considered * 00139500
*                  to be long if the time can be measured in seconds. * 00139600
*                  DEFAULT: YES                                       * 00139700
*                                                                     * 00139800
*                                                                     * 00139900
*                  LONG=YES                                           * 00140000
*                      The define is expected to be long.             * 00140100
*                                                                     * 00140200
*                  LONG=NO                                            * 00140300
*                      The define is expected to be short.            * 00140400
*                                                                     * 00140500
*                                                                     * 00140600
*                                                                     * 00140700
*                                                                     * 00140800
*                                                                     * 00140900
*                                                                     * 00141000
*              ÝPCIEIO=»NO!YESº¨                                      * 00141100
*                  is an optional keyword input that specifies        * 00141200
*                  whether the range of storage defined in DEFINE     * 00141300
*                  IOON is used for PCIE I/O. This is not a part of   * 00141400
*                  the intended interface.  It is restricted to IBM   * 00141500
*                  use only.  When PCIEIO(YES) is specified for       * 00141600
*                  DEFINE IOON, DMAPGTPTR must also be specified.     * 00141700
*                  Also, PLISTVER 3 or higher must be specified with  * 00141800
*                  DMAPGTPTR.                                         * 00141900
*                  DEFAULT: NO                                        * 00142000
*                                                                     * 00142100
*                                                                     * 00142200
*                  ÝPCIEIO=NO¨                                        * 00142300
*                      The range of storage specified in DEFINE IOON  * 00142400
*                      is not for PCIE I/O.                           * 00142500
*                                                                     * 00142600
*                  ÝPCIEIO=YES                                        * 00142700
*                      The range of storage specified in DEFINE IOON  * 00142800
*                      is for PCIE I/O.                               * 00142900
*                                                                     * 00143000
*                                                                     * 00143100
*                      DMAPGTPTR=xdmapgtptr¨                          * 00143200
*                          is the name (RS-type), or address in       * 00143300
*                          register (2)-(12), of a required 8 byte    * 00143400
*                          input that contains the address of the DMA * 00143500
*                          page table into which the DSPSERV DEFINE   * 00143600
*                          IOON service returns the real addresses    * 00143700
*                          for the pages that are defined for PCIE    * 00143800
*                          I/O.  It is an address of an array of      * 00143900
*                          PTR(64) elements. The size of the array    * 00144000
*                          must be big enough to hold all the real    * 00144100
*                          addresses for the pages that are being     * 00144200
*                          fixed for PCIE I/O.  The DMA page table    * 00144300
*                          can reside above or below the bar but must * 00144400
*                          be in common storage.  This variable is    * 00144500
*                          only valid when PCIEIO(YES) is specified.  * 00144600
*                                                                     * 00144700
*                                                                     * 00144800
*                                                                     * 00144900
*                                                                     * 00145000
*                                                                     * 00145100
*                                                                     * 00145200
*                                                                     * 00145300
*          IOOFF                                                      * 00145400
*              Is a keyword used to request the define I/O off        * 00145500
*              service.  It specifies that a range of storage has no  * 00145600
*              I/O in progress and will no longer be used for I/O.    * 00145700
*                                                                     * 00145800
*              A block is considered I/O defined until the number of  * 00145900
*              IOOFFs issued for the block is equal to the number of  * 00146000
*              IOONs previously issued for that block.                * 00146100
*                                                                     * 00146200
*              The IOOFF keyword may only be used by callers          * 00146300
*              executing in supervisor state or with a system (0-7)   * 00146400
*              PSW key.                                               * 00146500
*                                                                     * 00146600
*                                                                     * 00146700
*              ÝPCIEIO=»NO!YESº¨                                      * 00146800
*                  is an optional keyword input that specifies        * 00146900
*                  whether the range of storage in DEFINE IOOFF is    * 00147000
*                  used for PCIE I/O.                                 * 00147100
*                  DEFAULT: NO                                        * 00147200
*                                                                     * 00147300
*                                                                     * 00147400
*                  PCIEIO=NO                                          * 00147500
*                      The range of storage specified in DEFINE IOOFF * 00147600
*                      is not for PCIE I/O.                           * 00147700
*                                                                     * 00147800
*                  PCIEIO=YES                                         * 00147900
*                      The range of storage specified in DEFINE IOOFF * 00148000
*                      is for PCIE I/O.                               * 00148100
*                                                                     * 00148200
*                                                                     * 00148300
*                                                                     * 00148400
*                                                                     * 00148500
*                                                                     * 00148600
*          DREFON                                                     * 00148700
*              Is a keyword used to request that a range of storage   * 00148800
*              in a non-DREF data space be made eligible to be        * 00148900
*              referenced disabled.                                   * 00149000
*                                                                     * 00149100
*              A block is considered defined for disabled reference   * 00149200
*              until the number of DREFOFFs issued for the block is   * 00149300
*              equal to the number of DREFONs previously issued for   * 00149400
*              that block or until a single DREFOFF FORCE YES is      * 00149500
*              issued.                                                * 00149600
*                                                                     * 00149700
*              The DREFON keyword may only be used by callers         * 00149800
*              executing in supervisor state or with a system (0-7)   * 00149900
*              PSW key.                                               * 00150000
*                                                                     * 00150100
*          DREFOFF                                                    * 00150200
*              Is a keyword used to specify that a range of storage   * 00150300
*              in a non-DREF data space will no longer be referenced  * 00150400
*              disabled.                                              * 00150500
*                                                                     * 00150600
*              A block is considered defined for disabled reference   * 00150700
*              until the number of DREFOFFs issued for the block is   * 00150800
*              equal to the number of DREFONs previously issued for   * 00150900
*              that block or until a single DREFOFF FORCE YES is      * 00151000
*              issued.                                                * 00151100
*                                                                     * 00151200
*              The DREFOFF keyword may only be used by callers        * 00151300
*              executing in supervisor state or with a system (0-7)   * 00151400
*              PSW key.                                               * 00151500
*                                                                     * 00151600
*                                                                     * 00151700
*              ÝFORCE=»NO!YESº¨                                       * 00151800
*                  is an optional keyword input that specifies        * 00151900
*                  whether the DREFOFF request is conditional or      * 00152000
*                  unconditional.                                     * 00152100
*                  DEFAULT: NO                                        * 00152200
*                                                                     * 00152300
*                                                                     * 00152400
*                  FORCE=NO                                           * 00152500
*                      The DREFOFF request is conditional.            * 00152600
*                                                                     * 00152700
*                  FORCE=YES                                          * 00152800
*                      The DREFOFF request is unconditional.  A       * 00152900
*                      single DREFOFF FORCE YES request will define   * 00153000
*                      the storage area as no longer eligible to be   * 00153100
*                      referenced disabled no matter how many         * 00153200
*                      previous DREFONs had been issued.              * 00153300
*                                                                     * 00153400
*                                                                     * 00153500
*                                                                     * 00153600
*                                                                     * 00153700
*                                                                     * 00153800
*                                                                     * 00153900
*                                                                     * 00154000
*          End of a set of mutually exclusive required keys.          * 00154100
*                                                                     * 00154200
*                                                                     * 00154300
*      EXTEND                                                         * 00154400
*          Indicates the EXTEND service.                              * 00154500
*                                                                     * 00154600
*                                                                     * 00154700
*          STOKEN=xstoken                                             * 00154800
*              is the name (RS-type), or address in register          * 00154900
*              (2)-(12), of a required 8 character input variable     * 00155000
*              that identifies the data space.  Unless the caller is  * 00155100
*              authorized (supervisor state and/or system key).  the  * 00155200
*              STOKEN must represent a data space owned by the        * 00155300
*              requesting task.                                       * 00155400
*                                                                     * 00155500
*                                                                     * 00155600
*                                                                     * 00155700
*                                                                     * 00155800
*          BLOCKS=xblocks                                             * 00155900
*              is the name (RS-type), or address in register          * 00156000
*              (2)-(12), of a required fullword input that specifies  * 00156100
*              the number of blocks by which the current size of the  * 00156200
*              data space is to increase. The request will be         * 00156300
*              rejected if the new current size would exceed the      * 00156400
*              maximum size for the data space.  The request will     * 00156500
*              also be rejected if the data space is a non-system key * 00156600
*              data space and the new current size would cause the    * 00156700
*              data space limits for the address space to be          * 00156800
*              exceeded.                                              * 00156900
*                                                                     * 00157000
*                                                                     * 00157100
*                                                                     * 00157200
*                                                                     * 00157300
*          ÝVAR=»NO!YESº¨                                             * 00157400
*              is an optional keyword input that indicates a variable * 00157500
*              block-size EXTEND.                                     * 00157600
*              DEFAULT: NO                                            * 00157700
*                                                                     * 00157800
*                                                                     * 00157900
*              VAR=NO                                                 * 00158000
*                  If NO is specified or defaulted, the EXTEND        * 00158100
*                  request is not variable size.  The value of        * 00158200
*                  xblocks is used to determine if the request        * 00158300
*                  exceeds SMF limits.                                * 00158400
*                                                                     * 00158500
*              VAR=YES                                                * 00158600
*                  If YES is specified, the EXTEND request is         * 00158700
*                  variable in nature.  If the value of xblocks       * 00158800
*                  exceeds the SMF limits or exceeds the maximum size * 00158900
*                  which was established when the data space was      * 00159000
*                  created, then the system uses a value for xblocks  * 00159100
*                  that allows both SMF criteria and data space size  * 00159200
*                  limits to be met.  If either the SMF limits are    * 00159300
*                  currently at the maximum or the data space size is * 00159400
*                  at the maximum, then the request is rejected.      * 00159500
*                                                                     * 00159600
*                                                                     * 00159700
*                                                                     * 00159800
*                                                                     * 00159900
*                                                                     * 00160000
*                                                                     * 00160100
*          ÝNUMBLKS=xnumblks¨                                         * 00160200
*              is the name (RS-type), or address in register          * 00160300
*              (2)-(12), of an optional fullword output variable that * 00160400
*              will contain the size, in units of 4K bytes, that the  * 00160500
*              data space was expanded by.  Normally, NUMBLKS would   * 00160600
*              be used when the EXTEND request is variable (when VAR  * 00160700
*              is specified).                                         * 00160800
*                                                                     * 00160900
*                                                                     * 00161000
*                                                                     * 00161100
*      OUT                                                            * 00161200
*          Is a keyword used to request the out service.              * 00161300
*                                                                     * 00161400
*          Areas of the data space that are I/O DEFINEd may not be    * 00161500
*          moved OUT. If the OUT service finds an I/O DEFINEd block   * 00161600
*          in the area to be moved out, the block is ignored.  The    * 00161700
*          caller must be executing in supervisor state to move OUT   * 00161800
*          an area in a SCOPE ALL or SCOPE COMMON data space.         * 00161900
*                                                                     * 00162000
*                                                                     * 00162100
*          STOKEN=xstoken                                             * 00162200
*              is the name (RS-type), or address in register          * 00162300
*              (2)-(12), of a required 8 character input variable     * 00162400
*              that identifies the data space.  The STOKEN was        * 00162500
*              returned by the CREATE service.                        * 00162600
*                                                                     * 00162700
*                                                                     * 00162800
*                                                                     * 00162900
*                                                                     * 00163000
*          START=xstart                                               * 00163100
*              is the name (RS-type), or address in register          * 00163200
*              (2)-(12), of a required fullword input variable or     * 00163300
*              constant that contains the address in the data space   * 00163400
*              of the first block of storage to be moved out.  The    * 00163500
*              address must be on a 4096 byte boundary.               * 00163600
*                                                                     * 00163700
*                                                                     * 00163800
*                                                                     * 00163900
*                                                                     * 00164000
*          BLOCKS=xblocks                                             * 00164100
*              is the name (RS-type), or address in register          * 00164200
*              (2)-(12), of a required fullword input variable or     * 00164300
*              constant that contains the number of contiguous blocks * 00164400
*              of storage to be moved out.                            * 00164500
*                                                                     * 00164600
*                                                                     * 00164700
*                                                                     * 00164800
*      LOAD                                                           * 00164900
*          Is a keyword used to request the load service.             * 00165000
*                                                                     * 00165100
*          Areas of the data space that are I/O DEFINEd may not be    * 00165200
*          LOADed.  If the LOAD service finds an I/O DEFINEd block in * 00165300
*          the area to be LOADed, the block is ignored.  The caller   * 00165400
*          must be executing in supervisor state to LOAD an area in a * 00165500
*          SCOPE ALL or SCOPE COMMON data space.                      * 00165600
*                                                                     * 00165700
*                                                                     * 00165800
*          STOKEN=xstoken                                             * 00165900
*              is the name (RS-type), or address in register          * 00166000
*              (2)-(12), of a required 8 character input variable     * 00166100
*              that identifies the data space.  The STOKEN was        * 00166200
*              returned by the CREATE service.                        * 00166300
*                                                                     * 00166400
*                                                                     * 00166500
*                                                                     * 00166600
*                                                                     * 00166700
*          START=xstart                                               * 00166800
*              is the name (RS-type), or address in register          * 00166900
*              (2)-(12), of a required fullword input variable or     * 00167000
*              constant that contains the address in the data space   * 00167100
*              of the first block of storage to be loaded.  The       * 00167200
*              address must be on a 4096 byte boundary.               * 00167300
*                                                                     * 00167400
*                                                                     * 00167500
*                                                                     * 00167600
*                                                                     * 00167700
*          BLOCKS=xblocks                                             * 00167800
*              is the name (RS-type), or address in register          * 00167900
*              (2)-(12), of a required fullword input variable or     * 00168000
*              constant that contains the number of contiguous blocks * 00168100
*              of storage to be loaded.                               * 00168200
*                                                                     * 00168300
*                                                                     * 00168400
*                                                                     * 00168500
*                                                                     * 00168600
*                                                                     * 00168700
*      End of a set of mutually exclusive required keys.              * 00168800
*                                                                     * 00168900
*                                                                     * 00169000
*                                                                     * 00169100
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00169200
*          is an optional byte input decimal value in the "0-3" range * 00169300
*          that specifies the macro version.  PLISTVER is the only    * 00169400
*          key allowed on the list form of MF and determines which    * 00169500
*          parameter list is generated.  The macro keys associated    * 00169600
*          with each supported version of the macro are listed in     * 00169700
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00169800
*          instead of a number, and the parameter list will be of the * 00169900
*          largest size currently supported. This size may grow from  * 00170000
*          release to release (thus possibly affecting the amount of  * 00170100
*          storage needed by your program).  If your program can      * 00170200
*          tolerate this, IBM recommends that you always specify MAX  * 00170300
*          when creating the list form parameter list as that will    * 00170400
*          ensure that the list form parameter list is always long    * 00170500
*          enough to hold whatever parameters might be specified on   * 00170600
*          the execute form.                                          * 00170700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00170800
*          default is the lowest version which allows all of the      * 00170900
*          parameters specified on the invocation to be processed.    * 00171000
*                                                                     * 00171100
*                                                                     * 00171200
*                                                                     * 00171300
*                                                                     * 00171400
*      ÝMF=»S!L!Eº¨                                                   * 00171500
*          is an optional keyword input which specifies the macro     * 00171600
*          form.                                                      * 00171700
*          DEFAULT: S                                                 * 00171800
*                                                                     * 00171900
*                                                                     * 00172000
*          ÝMF=S¨                                                     * 00172100
*              specifies the standard form of the macro.  The "S"     * 00172200
*              form generates code to put the parameters into an      * 00172300
*              in-line parameter list and invoke the desired service. * 00172400
*              Full checking for required macro keys is done along    * 00172500
*              with supplying defaults for omitted optional           * 00172600
*              parameters.                                            * 00172700
*                                                                     * 00172800
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00172900
*              specifies the list form of the macro.  The "L" form    * 00173000
*              defines an area to be used for the parameter list.     * 00173100
*              Only the PLISTVER key may be specified on the          * 00173200
*              invocation.  All other macro parameters are flagged as * 00173300
*              errors.  If PLISTVER is not specified, the original    * 00173400
*              parameter list definition is used.                     * 00173500
*                                                                     * 00173600
*            ,xmfctrl                                                 * 00173700
*              is a required input.  It is the name of a storage area * 00173800
*              for the parameter list.                                * 00173900
*                                                                     * 00174000
*            »,xmfattr!0Dº                                            * 00174100
*              is an optional 60 character input string that varies   * 00174200
*              from 1 to 60 characters. Use it to force boundary      * 00174300
*              alignment of the parameter list. Use only 0F or 0D.    * 00174400
*              DEFAULT: 0D which forces the parameter list to a       * 00174500
*              doubleword boundary.                                   * 00174600
*                                                                     * 00174700
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00174800
*              specifies the execute form of the macro.  The "E" form * 00174900
*              generates code to put the parameters into the          * 00175000
*              parameter list specified by xmfctrl and provides full  * 00175100
*              syntax checking with default setting.                  * 00175200
*                                                                     * 00175300
*            ,xmfctrl                                                 * 00175400
*              is a required input.  It is the name (RS-type), or     * 00175500
*              address in register (1)-(12), of a storage area for    * 00175600
*              the parameter list.                                    * 00175700
*                                                                     * 00175800
*            »,COMPLETEº                                              * 00175900
*              is an optional keyword input which specifies the       * 00176000
*              degree of macro parameter syntax checking.             * 00176100
*              DEFAULT: COMPLETE                                      * 00176200
*                                                                     * 00176300
*                                                                     * 00176400
*              COMPLETE                                               * 00176500
*                  Checking for required macro keys is done and       * 00176600
*                  defaults are supplied for omitted optional         * 00176700
*                  parameters.                                        * 00176800
*                                                                     * 00176900
*                                                                     * 00177000
*                                                                     * 00177100
*                                                                     * 00177200
*                                                                     * 00177300
*                                                                     * 00177400
*                                                                     * 00177500
*01* RETURN CODES:                                                    * 00177600
*                                                                     * 00177700
*                                                                     * 00177800
*       00        Successful completion.                              * 00177900
*                                                                     * 00178000
*       04        Successful completion with exceptional              * 00178100
*                 circumstance.                                       * 00178200
*                                                                     * 00178300
*       08        Request rejected.                                   * 00178400
*                                                                     * 00178500
*       0C        System failure - environmental.                     * 00178600
*                                                                     * 00178700
*                                                                     * 00178800
*                                                                     * 00178900
*01* REASON CODES:                                                    * 00179000
*                                                                     * 00179100
*       REASON    RETURN                                              * 00179200
*       CODE      CODE      DESCRIPTION                               * 00179300
*       --------  --------  -----------                               * 00179400
*                                                                     * 00179500
*                                                                     * 00179600
*       xx000Cxx  04        This processor will not support a data    * 00179700
*                           space with zero origin. A data space of   * 00179800
*                           one less block (524,287 blocks) than      * 00179900
*                           requested was created.                    * 00180000
*                                                                     * 00180100
*       xx0005xx  08        Creation of this data space would result  * 00180200
*                           in SMF criteria being violated.           * 00180300
*                                                                     * 00180400
*       xx0009xx  08        Specified data space name is not unique   * 00180500
*                           in the address space.                     * 00180600
*                                                                     * 00180700
*       xx0304xx  08        DEFINE IOON failed, caller was disabled   * 00180800
*                           and a frame could not be obtained to back * 00180900
*                           one of the pages in the requested range.  * 00181000
*                                                                     * 00181100
*       xx0006xx  0C        Due to a shortage of resources, RSM is    * 00181200
*                           unable to create any additional data      * 00181300
*                           spaces at this time.                      * 00181400
*                                                                     * 00181500
*       xx0007xx  0C        RSM is unable to obtain addressibility to * 00181600
*                           access its address space or data space.   * 00181700
*                                                                     * 00181800
*       xx0010xx  08        CACHE hiperspace creation rejected        * 00181900
*                           because there is no expanded storage on   * 00182000
*                           the system.                               * 00182100
*                                                                     * 00182200
*       xx0012xx  08        The system could not generate a data      * 00182300
*                           space name as required because the        * 00182400
*                           system's set of unique names for the      * 00182500
*                           address space is currently exhausted.     * 00182600
*                                                                     * 00182700
*       xx0502xx  08        Extend failed, extending the data space   * 00182800
*                           would cause the data space SMF limits for * 00182900
*                           the address space to be exceeded.         * 00183000
*                                                                     * 00183100
*       xx0503xx  08        Extend failed, extending the data space   * 00183200
*                           by any amount would cause the maximum     * 00183300
*                           size for the data space to be exceeded.   * 00183400
*                                                                     * 00183500
*                                                                     * 00183600
*                                                                     * 00183700
*01* ABEND CODES:                                                     * 00183800
*                                                                     * 00183900
*                                                                     * 00184000
*       01D       Data space service failed for non-environmental     * 00184100
*                 error.                                              * 00184200
*                                                                     * 00184300
*                                                                     * 00184400
*                                                                     * 00184500
*01* ABEND REASON CODES:                                              * 00184600
*                                                                     * 00184700
*       NOTE:  When an abend is for a range element, additional       * 00184800
*       diagnostic information will be provided (at time of abend);   * 00184900
*       namely, register 2 will contain the address of the range list * 00185000
*       element in error and register 3 will contain the address of   * 00185100
*       the current storage being processed.                          * 00185200
*                                                                     * 00185300
*       REASON    ABEND                                               * 00185400
*       CODE      CODE      DESCRIPTION                               * 00185500
*       --------  --------  -----------                               * 00185600
*                                                                     * 00185700
*                                                                     * 00185800
*       xx0001xx  01D       Problem program caller attempted to       * 00185900
*                           create a SCOPE ALL data space, a SCOPE    * 00186000
*                           COMMON data space, a DREF data space, or  * 00186100
*                           a hiperspace on behalf of another owner.  * 00186200
*                                                                     * 00186300
*       xx0002xx  01D       Supervisor state program attempted to     * 00186400
*                           create a data space on behalf of an owner * 00186500
*                           that is not in its HOME or PRIMARY        * 00186600
*                           address space.                            * 00186700
*                                                                     * 00186800
*       xx0003xx  01D       SRB mode request did not specify owner of * 00186900
*                           data space.                               * 00187000
*                                                                     * 00187100
*       xx0004xx  01D       Caller requested storage protect key be   * 00187200
*                           assigned to the data space and the caller * 00187300
*                           was not authorized to do so (ie., caller  * 00187400
*                           is not in supervisor state or executing   * 00187500
*                           with a system PSW key).                   * 00187600
*                                                                     * 00187700
*       xx0008xx  01D       User data space was not created because   * 00187800
*                           the designated owner does not exist.      * 00187900
*                                                                     * 00188000
*       xx000Axx  01D       Problem program caller attempted to name  * 00188100
*                           the data space starting with 'SYS' which  * 00188200
*                           is reserved for system use.               * 00188300
*                                                                     * 00188400
*       xx000Bxx  01D       An invalid number of blocks was specified * 00188500
*                           for the data space size.                  * 00188600
*                                                                     * 00188700
*       xx000Dxx  01D       Data space name incorrectly specified -   * 00188800
*                           either name is blank, or not left         * 00188900
*                           justified, or contains characters other   * 00189000
*                           than alphabetic, numeric and national     * 00189100
*                           characters, or not padded on the right    * 00189200
*                           with blanks, or name starts with numeric. * 00189300
*                                                                     * 00189400
*       xx000Exx  01D       Supervisor state caller attempted to name * 00189500
*                           the data space starting with 'SYSDS'      * 00189600
*                           which is reserved for system use.         * 00189700
*                                                                     * 00189800
*       xx000Fxx  01D       Creation of a CACHE type hiperspace       * 00189900
*                           requested by a non-authorized caller.     * 00190000
*                                                                     * 00190100
*       xx0011xx  01D       Inconsistencies in caller parameter list  * 00190200
*                           - scope-single, scope-all, scope-common,  * 00190300
*                           or dref requested with hiperspace, or     * 00190400
*                           hiperspace has both scroll and cache, or  * 00190500
*                           scroll hiperspace has nocastout, or basic * 00190600
*                           data space with scroll, cache, or         * 00190700
*                           nocastout specified.                      * 00190800
*                                                                     * 00190900
*       xx0012xx  01D       Creation of a shared scroll type          * 00191000
*                           hiperspace requested by a non-authorized  * 00191100
*                           caller.                                   * 00191200
*                                                                     * 00191300
*       xx0013xx  01D       Problem program caller attempted to       * 00191400
*                           create a data space on behalf of an owner * 00191500
*                           that is not the problem program's task or * 00191600
*                           the problem program's job step task.      * 00191700
*                                                                     * 00191800
*       xx0014xx  01D       An attempt was made to create either a    * 00191900
*                           scope=common data space while the owner   * 00192000
*                           was swappable.                            * 00192100
*                                                                     * 00192200
*       xx0016xx  01D       HIDEZERO=YES was specified with           * 00192300
*                           TYPE=HIPERSPACE                           * 00192400
*                                                                     * 00192500
*       xx0101xx  01D       problem program cannot specify TTOKEN for * 00192600
*                           DELETE                                    * 00192700
*                                                                     * 00192800
*       xx0102xx  01D       supervisor state program specified an     * 00192900
*                           invalid TTOKEN                            * 00193000
*                                                                     * 00193100
*       xx0103xx  01D       supervisor state program attempted to     * 00193200
*                           delete a data space on behalf of an owner * 00193300
*                           that is not its HOME or PRIMARY address   * 00193400
*                           space                                     * 00193500
*                                                                     * 00193600
*       xx0104xx  01D       SRB routine did not specify a required    * 00193700
*                           TTOKEN to determine owner                 * 00193800
*                                                                     * 00193900
*       xx0105xx  01D       specified STOKEN does not represent a     * 00194000
*                           valid data space                          * 00194100
*                                                                     * 00194200
*       xx0106xx  01D       specified data space owner is incorrect   * 00194300
*                                                                     * 00194400
*       xx0107xx  01D       specified data space has I/O defined      * 00194500
*                           pages                                     * 00194600
*                                                                     * 00194700
*       xx0108xx  01D       DELETE failed, specified data space has   * 00194800
*                           DIV MAPped pages.                         * 00194900
*                                                                     * 00195000
*       xx0109xx  01D       DELETE failed, specified data space has   * 00195100
*                           DIV SAVE in progress.                     * 00195200
*                                                                     * 00195300
*       xx010Axx  01D       DELETE failed, problem program may not    * 00195400
*                           delete a SCOPE ALL or a SCOPE COMMON data * 00195500
*                           space.                                    * 00195600
*                                                                     * 00195700
*       xx010Bxx  01D       DELETE failed, problem program may not    * 00195800
*                           delete a scope-single data space that has * 00195900
*                           a key different from the caller's key.    * 00196000
*                                                                     * 00196100
*       xx010Cxx  01D       DELETE failed, the calling program may    * 00196200
*                           not delete a scope-single data space      * 00196300
*                           created by the program's task unless      * 00196400
*                           either the program's task or the          * 00196500
*                           program's job step task owns the data     * 00196600
*                           space.                                    * 00196700
*                                                                     * 00196800
*       xx010Dxx  01D       DELETE failed, the hiper space is         * 00196900
*                           currently being used for an ADM           * 00197000
*                           operation.                                * 00197100
*                                                                     * 00197200
*       xx010Exx  01D       DELETE failed, the data space contains    * 00197300
*                           one or more shared segments.              * 00197400
*                                                                     * 00197500
*       xx0201xx  01D       RELEASE failed, data space does not exist * 00197600
*                                                                     * 00197700
*       xx0202xx  01D       RELEASE failed, start address is not on a * 00197800
*                           page boundary                             * 00197900
*                                                                     * 00198000
*       xx0203xx  01D       RELEASE failed, the input STOKEN is not   * 00198100
*                           valid                                     * 00198200
*                                                                     * 00198300
*       xx0204xx  01D       RELEASE failed, the number of blocks is   * 00198400
*                           not valid                                 * 00198500
*                                                                     * 00198600
*       xx0205xx  01D       RELEASE failed, the requested range of    * 00198700
*                           blocks is not in the addressable range of * 00198800
*                           the data space                            * 00198900
*                                                                     * 00199000
*       xx0206xx  01D       RELEASE failed, the Problem program       * 00199100
*                           caller attempted to release a SCOPE ALL   * 00199200
*                           or SCOPE COMMON data space                * 00199300
*                                                                     * 00199400
*       xx0207xx  01D       RELEASE failed, the Problem program       * 00199500
*                           caller attempted to release either a      * 00199600
*                           hiperspace it does not own or a scope     * 00199700
*                           single data space it did not create and   * 00199800
*                           does not own                              * 00199900
*                                                                     * 00200000
*       xx0208xx  01D       RELEASE failed, the Supervisor state      * 00200100
*                           program attempted to release a SCOPE      * 00200200
*                           SINGLE data space on behalf of an owner   * 00200300
*                           that is not in its HOME or PRIMARY        * 00200400
*                           address space.                            * 00200500
*                                                                     * 00200600
*       xx0209xx  01D       RELEASE failed, caller is not in key 0    * 00200700
*                           and the key for the data space page did   * 00200800
*                           not match caller's key                    * 00200900
*                                                                     * 00201000
*       xx020Axx  01D       RELEASE failed, an I/O DEFINEd block is   * 00201100
*                           found                                     * 00201200
*                                                                     * 00201300
*       xx020Bxx  01D       RELEASE failed, caller was disabled and   * 00201400
*                           requested release of enabled reference    * 00201500
*                           storage.                                  * 00201600
*                                                                     * 00201700
*       xx020Cxx  01D       RELEASE failed, caller attempted to       * 00201800
*                           release a page which is page-protected.   * 00201900
*                                                                     * 00202000
*       xx0213xx  01D       RELEASE failed, the input range list      * 00202100
*                           contains non-zero value in one or more    * 00202200
*                           reserved fields.                          * 00202300
*                                                                     * 00202400
*       xx0301xx  01D       DEFINE IOON failed, data space does not   * 00202500
*                           exist                                     * 00202600
*                                                                     * 00202700
*       xx0302xx  01D       DEFINE IOON failed, start address is not  * 00202800
*                           on a 4096 byte boundary                   * 00202900
*                                                                     * 00203000
*       xx0303xx  01D       DEFINE IOON failed, the input STOKEN is   * 00203100
*                           not valid                                 * 00203200
*                                                                     * 00203300
*       xx0304xx  01D       DEFINE IOON failed, the number of blocks  * 00203400
*                           is not valid (less than 1)                * 00203500
*                                                                     * 00203600
*       xx0305xx  01D       DEFINE IOON failed, the requested range   * 00203700
*                           of blocks is not in the addressable range * 00203800
*                           of the data space                         * 00203900
*                                                                     * 00204000
*       xx0306xx  01D       DEFINE IOON failed, the caller was not    * 00204100
*                           executing in supervisor state or with a   * 00204200
*                           system PSW key.                           * 00204300
*                                                                     * 00204400
*       xx0307xx  01D       DEFINE IOON failed, the requester         * 00204500
*                           attempted to DEFINE IOON a SCOPE SINGLE   * 00204600
*                           data space on behalf of an owner that is  * 00204700
*                           not in its HOME or PRIMARY address space  * 00204800
*                                                                     * 00204900
*       xx0308xx  01D       DEFINE IOON failed, data space page has   * 00205000
*                           COMMIT I/O in progress.                   * 00205100
*                                                                     * 00205200
*       xx0309xx  01D       DEFINE IOON failed, input STOKEN is for a * 00205300
*                           hiperspace.                               * 00205400
*                                                                     * 00205500
*       xx030Bxx  01D       DEFINE IOON failed, the caller was        * 00205600
*                           disabled and specified storage that was   * 00205700
*                           neither in a disabled reference (DREF)    * 00205800
*                           state nor an IOON state.                  * 00205900
*                                                                     * 00206000
*       xx030Cxx  01D       DEFINE IOON failed, the input range list  * 00206100
*                           contains non-zero value in one or more    * 00206200
*                           reserved fields.                          * 00206300
*                                                                     * 00206400
*       xx030Fxx  01D       DEFINE IOON failed, caller tried to       * 00206500
*                           DEFINE IOON (fix) a partial large page    * 00206600
*                           segment.                                  * 00206700
*                                                                     * 00206800
*       xx0310xx  01D       DEFINE IOON failed. Enabled caller tried  * 00206900
*                           to DEFINE IOON with PCIEIO(YES) on        * 00207000
*                           storage that was already FIXed in a       * 00207100
*                           regular non-PCIEIO way.                   * 00207200
*                                                                     * 00207300
*       xx0311xx  01D       DEFINE IOON failed. Disabled caller tried * 00207400
*                           to DEFINE IOON with PCIEIO(YES) on        * 00207500
*                           storage that was already PCIEIO FIXed.    * 00207600
*                                                                     * 00207700
*       xx0312xx  01D       DEFINE IOON failed. Disabled caller tried * 00207800
*                           to DEFINE IOON with PCIEIO(YES) on        * 00207900
*                           storage that was not FIXed (the regular   * 00208000
*                           non-PCIEIO way).                          * 00208100
*                                                                     * 00208200
*       xx0313xx  01D       DEFINE IOON failed. Caller tried to       * 00208300
*                           DEFINE IOON with PCIEIO(YES) on a data    * 00208400
*                           space that is not SCOPE=SINGLE.           * 00208500
*                                                                     * 00208600
*       xx0314xx  01D       DEFINE IOON failed. Caller tried to       * 00208700
*                           DEFINE IOON with PCIEIO(YES) on a data    * 00208800
*                           space backed by a large page frame size   * 00208900
*                           (1M). Only 4K page frames are supported.  * 00209000
*                                                                     * 00209100
*       xx0315xx  01D       DEFINE IOON failed. Caller tried to       * 00209200
*                           DEFINE IOON with PCIEIO(YES) with a       * 00209300
*                           DMAPGTPTR that is not on a doubleword     * 00209400
*                           boundary.                                 * 00209500
*                                                                     * 00209600
*       xx0316xx  01D       DEFINE IOON failed. Enabled caller tried  * 00209700
*                           to DEFINE IOON a data space page that was * 00209800
*                           previously PCIEIO fixed without           * 00209900
*                           specifying PCIEIO(YES) on the current     * 00210000
*                           DEFINE IOON request.                      * 00210100
*                                                                     * 00210200
*       xx0401xx  01D       DEFINE IOOFF failed, data space does not  * 00210300
*                           exist                                     * 00210400
*                                                                     * 00210500
*       xx0402xx  01D       DEFINE IOOFF failed, start address is not * 00210600
*                           on a 4096 byte boundary                   * 00210700
*                                                                     * 00210800
*       xx0403xx  01D       DEFINE IOOFF failed, the input STOKEN is  * 00210900
*                           not valid                                 * 00211000
*                                                                     * 00211100
*       xx0404xx  01D       DEFINE IOOFF failed, the number of blocks * 00211200
*                           is not valid (less than 1)                * 00211300
*                                                                     * 00211400
*       xx0405xx  01D       DEFINE IOOFF failed, the requested range  * 00211500
*                           of blocks is not in the addressable range * 00211600
*                           of the data space                         * 00211700
*                                                                     * 00211800
*       xx0406xx  01D       DEFINE IOOFF failed, the caller was not   * 00211900
*                           executing in supervisor state or with a   * 00212000
*                           system PSW key.                           * 00212100
*                                                                     * 00212200
*       xx0407xx  01D       DEFINE IOOFF failed, the requester        * 00212300
*                           attempted to DEFINE IOOFF a SCOPE SINGLE  * 00212400
*                           data space on behalf of an owner that is  * 00212500
*                           not in its HOME or PRIMARY address space  * 00212600
*                                                                     * 00212700
*       xx0409xx  01D       DEFINE IOOFF failed, input STOKEN is for  * 00212800
*                           a hiperspace.                             * 00212900
*                                                                     * 00213000
*       xx040Cxx  01D       DEFINE IOOFF failed, the input range list * 00213100
*                           contains non-zero value in one or more    * 00213200
*                           reserved fields.                          * 00213300
*                                                                     * 00213400
*       xx040Fxx  01D       DEFINE IOOFF failed, caller tried to      * 00213500
*                           DEFINE IOOFF (unfix) a partial large page * 00213600
*                           segment.                                  * 00213700
*                                                                     * 00213800
*       xx0410xx  01D       DEFINE IOOFF failed, caller tried to      * 00213900
*                           DEFINE IOOFF (unfix) with PCIEIO(YES) on  * 00214000
*                           storage that was not fixed with           * 00214100
*                           PCIEIO(YES).                              * 00214200
*                                                                     * 00214300
*       xx0413xx  01D       DEFINE IOOFF failed. Caller tried to      * 00214400
*                           DEFINE IOOFF with PCIEIO(YES) on a data   * 00214500
*                           space that is not SCOPE=SINGLE.           * 00214600
*                                                                     * 00214700
*       xx0414xx  01D       DEFINE IOOFF failed. Enabled caller tried * 00214800
*                           to DEFINE IOOFF a data space page that    * 00214900
*                           was previously PCIEIO fixed without       * 00215000
*                           specifying PCIEIO(YES) on the current     * 00215100
*                           DEFINE IOOFF request.                     * 00215200
*                                                                     * 00215300
*       xx0501xx  01D       Extend failed, the specified STOKEN does  * 00215400
*                           not represent a valid data space or       * 00215500
*                           represents a data space for which the     * 00215600
*                           caller is not authorized.                 * 00215700
*                                                                     * 00215800
*       xx0503xx  01D       Extend failed, extending the data space   * 00215900
*                           by the requested amount would cause the   * 00216000
*                           maximum size for the data space to be     * 00216100
*                           exceeded.                                 * 00216200
*                                                                     * 00216300
*       xx0601xx  01D       DEFINE DREFON failed, data space does not * 00216400
*                           exist.                                    * 00216500
*                                                                     * 00216600
*       xx0602xx  01D       DEFINE DREFON failed, start address is    * 00216700
*                           not on a 4096 byte boundary.              * 00216800
*                                                                     * 00216900
*       xx0603xx  01D       DEFINE DREFON failed, the input STOKEN is * 00217000
*                           not valid.                                * 00217100
*                                                                     * 00217200
*       xx0604xx  01D       DEFINE DREFON failed, the number of       * 00217300
*                           blocks is not valid (less than 1)         * 00217400
*                                                                     * 00217500
*       xx0605xx  01D       DEFINE DREFON failed, the requested range * 00217600
*                           of blocks is not in the addressable range * 00217700
*                           of the data space                         * 00217800
*                                                                     * 00217900
*       xx0606xx  01D       DEFINE DREFON failed, the caller was not  * 00218000
*                           executing in supervisor state or with a   * 00218100
*                           system PSW key.                           * 00218200
*                                                                     * 00218300
*       xx0607xx  01D       DEFINE DREFON failed, the requester       * 00218400
*                           attempted to DEFINE DREFON a SCOPE SINGLE * 00218500
*                           data space on behalf of an owner that is  * 00218600
*                           not in its HOME or PRIMARY address space  * 00218700
*                                                                     * 00218800
*       xx0608xx  01D       DEFINE DREFON failed, data space page has * 00218900
*                           COMMIT I/O in progress.                   * 00219000
*                                                                     * 00219100
*       xx0609xx  01D       DEFINE DREFON failed, input STOKEN is for * 00219200
*                           a hiperspace.                             * 00219300
*                                                                     * 00219400
*       xx060Axx  01D       DEFINE DREFON failed, the specified area  * 00219500
*                           is part of a data space that was CREATEd  * 00219600
*                           with the disabled reference attribute.    * 00219700
*                                                                     * 00219800
*       xx060Bxx  01D       DEFINE DREFON failed, the caller was      * 00219900
*                           disabled and specified storage that was   * 00220000
*                           neither in a disabled reference (DREF)    * 00220100
*                           state nor an IOON state.                  * 00220200
*                                                                     * 00220300
*       xx060Cxx  01D       DEFINE DREFON failed, the input range     * 00220400
*                           list contains non-zero value in one or    * 00220500
*                           more reserved fields.                     * 00220600
*                                                                     * 00220700
*       xx060Dxx  01D       DEFINE DREFON failed, data space contains * 00220800
*                           shared segments.                          * 00220900
*                                                                     * 00221000
*       xx060Fxx  01D       DEFINE DREFON failed, caller tried to     * 00221100
*                           DEFINE DREFON (fix) a partial large page  * 00221200
*                           segment.                                  * 00221300
*                                                                     * 00221400
*       xx0B01xx  01D       OUT failed, data space does not exist     * 00221500
*                                                                     * 00221600
*       xx0B02xx  01D       OUT failed, start address is not on a     * 00221700
*                           page boundary                             * 00221800
*                                                                     * 00221900
*       xx0B03xx  01D       OUT failed, input STOKEN is not           * 00222000
*                           representing a user data space            * 00222100
*                                                                     * 00222200
*       xx0B04xx  01D       OUT failed, the number of blocks is not   * 00222300
*                           valid                                     * 00222400
*                                                                     * 00222500
*       xx0B05xx  01D       OUT failed, the requested range of blocks * 00222600
*                           is not in the range of the data space     * 00222700
*                                                                     * 00222800
*       xx0B06xx  01D       OUT failed, the Problem program caller    * 00222900
*                           attempted to OUT a SCOPE ALL or SCOPE     * 00223000
*                           COMMON data space                         * 00223100
*                                                                     * 00223200
*       xx0B07xx  01D       OUT failed, the Problem program caller    * 00223300
*                           attempted to OUT a data space on behalf   * 00223400
*                           of an owner that is not in its HOME       * 00223500
*                           address space.                            * 00223600
*                                                                     * 00223700
*       xx0B08xx  01D       OUT failed, the Supervisor state program  * 00223800
*                           attempted to OUT a scope single data      * 00223900
*                           space on behalf of an owner that is not   * 00224000
*                           in its HOME or PRIMARY address space.     * 00224100
*                                                                     * 00224200
*       xx0B09xx  01D       OUT failed, the data space is a           * 00224300
*                           hiperspace                                * 00224400
*                                                                     * 00224500
*       xx0C01xx  01D       LOAD failed, data space does not exist    * 00224600
*                                                                     * 00224700
*       xx0C02xx  01D       LOAD failed, start address is not on a    * 00224800
*                           page boundary                             * 00224900
*                                                                     * 00225000
*       xx0C03xx  01D       LOAD failed, the input STOKEN is not      * 00225100
*                           valid                                     * 00225200
*                                                                     * 00225300
*       xx0C04xx  01D       LOAD failed, the number of blocks is not  * 00225400
*                           valid                                     * 00225500
*                                                                     * 00225600
*       xx0C05xx  01D       LOAD failed, the requested range of       * 00225700
*                           blocks is not in the range of the data    * 00225800
*                           space                                     * 00225900
*                                                                     * 00226000
*       xx0C06xx  01D       LOAD failed, the Problem program caller   * 00226100
*                           attempted to LOAD a SCOPE ALL or SCOPE    * 00226200
*                           COMMON data space                         * 00226300
*                                                                     * 00226400
*       xx0C07xx  01D       LOAD failed, the Problem program caller   * 00226500
*                           attempted to LOAD a data space on behalf  * 00226600
*                           of an owner that is not in its HOME       * 00226700
*                           address space.                            * 00226800
*                                                                     * 00226900
*       xx0C08xx  01D       LOAD failed, the Supervisor state program * 00227000
*                           attempted to LOAD a scope single data     * 00227100
*                           space on behalf of an owner that is not   * 00227200
*                           in its HOME or PRIMARY address space.     * 00227300
*                                                                     * 00227400
*       xx0C09xx  01D       LOAD failed, the data space is a          * 00227500
*                           hiperspace                                * 00227600
*                                                                     * 00227700
*       xx0D01xx  01D       DEFINE DREFOFF failed, data space does    * 00227800
*                           not exist.                                * 00227900
*                                                                     * 00228000
*       xx0D02xx  01D       DEFINE DREFOFF failed, start address is   * 00228100
*                           not on a 4096 byte boundary.              * 00228200
*                                                                     * 00228300
*       xx0D03xx  01D       DEFINE DREFOFF failed, the input STOKEN   * 00228400
*                           is not valid.                             * 00228500
*                                                                     * 00228600
*       xx0D04xx  01D       DEFINE DREFOFF failed, the number of      * 00228700
*                           blocks is not valid (less than 1)         * 00228800
*                                                                     * 00228900
*       xx0D05xx  01D       DEFINE DREFOFF failed, the requested      * 00229000
*                           range of blocks is not in the addressable * 00229100
*                           range of the data space                   * 00229200
*                                                                     * 00229300
*       xx0D06xx  01D       DEFINE DREFOFF failed, the caller was not * 00229400
*                           executing in supervisor state or with a   * 00229500
*                           system PSW key.                           * 00229600
*                                                                     * 00229700
*       xx0D07xx  01D       DEFINE DREFOFF failed, the requester      * 00229800
*                           attempted to DEFINE DREFOFF a SCOPE       * 00229900
*                           SINGLE data space on behalf of an owner   * 00230000
*                           that is not in its HOME or PRIMARY        * 00230100
*                           address space                             * 00230200
*                                                                     * 00230300
*       xx0D09xx  01D       DEFINE DREFOFF failed, input STOKEN is    * 00230400
*                           for a hiperspace.                         * 00230500
*                                                                     * 00230600
*       xx0D0Axx  01D       DEFINE DREFOFF failed, the specified area * 00230700
*                           is part of a data space that was CREATEd  * 00230800
*                           with the disabled reference attribute.    * 00230900
*                                                                     * 00231000
*       xx0D0Cxx  01D       DEFINE DREFOFF failed, the input range    * 00231100
*                           list contains non-zero value in one or    * 00231200
*                           more reserved fields.                     * 00231300
*                                                                     * 00231400
*       xx0D0Dxx  01D       DEFINE DREFOFF failed, data space         * 00231500
*                           contains shared segments.                 * 00231600
*                                                                     * 00231700
*       xx0D0Exx  01D       DEFINE DREFOFF failed, FORCE option was   * 00231800
*                           specified and FORCE is no longer          * 00231900
*                           supported.                                * 00232000
*                                                                     * 00232100
*       xx0D0Fxx  01D       DEFINE DREFOFF failed, caller tried to    * 00232200
*                           DEFINE DREFOFF (unfix) a partial large    * 00232300
*                           page segment.                             * 00232400
*                                                                     * 00232500
*       xxFF01xx  01D       DSPSERV failed, invalid secondary ASID.   * 00232600
*                                                                     * 00232700
*       xxFF02xx  01D       DSPSERV failed, caller held other locks.  * 00232800
*                                                                     * 00232900
*       xxFF03xx  01D       DSPSERV failed, caller issued invalid     * 00233000
*                           macro version.                            * 00233100
*                                                                     * 00233200
*       xxFF04xx  01D       DSPSERV failed, reserved fields in        * 00233300
*                           callers macro parameter list are not      * 00233400
*                           zeros.                                    * 00233500
*                                                                     * 00233600
*       xxFF05xx  01D       DSPSERV failed, user requested unknown    * 00233700
*                           service.                                  * 00233800
*                                                                     * 00233900
*       xxFF06xx  01D       DSPSERV failed, a protection exception    * 00234000
*                           occurred while referencing the parameter  * 00234100
*                           list by the requester.                    * 00234200
*                                                                     * 00234300
*       xxFF07xx  01D       DSPSERV failed, caller must be in 31 bit  * 00234400
*                           addressing mode to use any DSPSERV        * 00234500
*                           service.                                  * 00234600
*                                                                     * 00234700
*       xxFF08xx  01D       DSPSERV failed, the caller was disabled   * 00234800
*                           but requested a service that requires the * 00234900
*                           caller to be enabled.                     * 00235000
*                                                                     * 00235100
*       xxFF09xx  01D       DSPSERV failed, the caller held one or    * 00235200
*                           more locks needed by the system to        * 00235300
*                           process the request.                      * 00235400
*                                                                     * 00235500
*       xxFF0Axx  01D       DSPSERV failed, caller specified an input * 00235600
*                           range list for a service that does not    * 00235700
*                           support a range list.                     * 00235800
*                                                                     * 00235900
*       xxFF0Bxx  01D       DSPSERV failed, caller specified an       * 00236000
*                           incorrect value for NUMRANGE (must be     * 00236100
*                           greater than zero).                       * 00236200
*                                                                     * 00236300
*       xxFF0Cxx  01D       DSPSERV failed, NUMRANGE value exceeds    * 00236400
*                           maximum of 16 for unauthorized caller.    * 00236500
*                                                                     * 00236600
*       xxFF0Dxx  01D       DSPSERV failed, the input range list is   * 00236700
*                           not accessible to the service using the   * 00236800
*                           caller's execution key.                   * 00236900
*                                                                     * 00237000
*       xxFF10xx  01D       DSPSERV DEFINE failed, sub-service code   * 00237100
*                           is invalid.                               * 00237200
*                                                                     * 00237300
*                                                                     * 00237400
*                                                                     * 00237500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00237600
*                                                                     * 00237700
*02*   PROCESSOR:  ASSEM                                              * 00237800
*                                                                     * 00237900
*01* COMPONENT:  SC1CR                                                * 00238000
*                                                                     * 00238100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00238200
*                                                                     * 00238300
*01* MACRO USAGE NOTES:                                               * 00238400
*                                                                     * 00238500
*                                                                     * 00238600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00238700
*        global macro variable.  Any value other than 'NO' will       * 00238800
*        result in the macro expansion being printed.  The default is * 00238900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00239000
*        variable should be set.                                      * 00239100
*                                                                     * 00239200
*                    GBLC &ZPRINT                                     * 00239300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00239400
*                                                                     * 00239500
*                                                                     * 00239600
*    2.  The  DSPSERV macro supports multiple versions. The macro key * 00239700
*        list  below  contains the version level in which the key was * 00239800
*        first  introduced.  Positionals  are  identified by the word * 00239900
*        'Positional'  followed by the numeric value of its position. * 00240000
*        Nested  positionals  are  preceded  by their outer key.  The * 00240100
*        lowest value represents the original version and the highest * 00240200
*        value  represents  the  most  recent  version of the DSPSERV * 00240300
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00240400
*        least  as high as the highest version number of all the keys * 00240500
*        being used.                                                  * 00240600
*                                                                     * 00240700
*        VERSION   KEY                                                * 00240800
*                                                                     * 00240900
*              0      BACK                                            * 00241000
*                     BLOCKS                                          * 00241100
*                     BLOCKS(Positional_1)                            * 00241200
*                     CALLERKEY                                       * 00241300
*                     CASTOUT                                         * 00241400
*                     CLEAR                                           * 00241500
*                     CREATE                                          * 00241600
*                     CRITICALPAGING                                  * 00241700
*                     DEFINE                                          * 00241800
*                     DELETE                                          * 00241900
*                     DISABLED                                        * 00242000
*                     DREF                                            * 00242100
*                     DREFOFF                                         * 00242200
*                     DREFON                                          * 00242300
*                     EXTEND                                          * 00242400
*                     FORCE                                           * 00242500
*                     FPROT                                           * 00242600
*                     FREESHAREDSEG                                   * 00242700
*                     GENNAME                                         * 00242800
*                     HSTYPE                                          * 00242900
*                     INLIST                                          * 00243000
*                     IOOFF                                           * 00243100
*                     IOON                                            * 00243200
*                     KEEPREAL                                        * 00243300
*                     KEY                                             * 00243400
*                     LOAD                                            * 00243500
*                     LONG                                            * 00243600
*                     NAME                                            * 00243700
*                     NUMBLKS                                         * 00243800
*                     NUMRANGE                                        * 00243900
*                     ORIGIN                                          * 00244000
*                     OUT                                             * 00244100
*                     OUTNAME                                         * 00244200
*                     PAGEFRAMESIZE                                   * 00244300
*                     RANGLIST                                        * 00244400
*                     RELEASE                                         * 00244500
*                     SCOPE                                           * 00244600
*                     SHARE                                           * 00244700
*                     START                                           * 00244800
*                     STOKEN                                          * 00244900
*                     TTOKEN                                          * 00245000
*                     TYPE                                            * 00245100
*                     VAR                                             * 00245200
*              1      BLOCKS(Positional_2)                            * 00245300
*              2      HIDEZERO                                        * 00245400
*              3      DMAPGTPTR                                       * 00245500
*                     PCIEIO                                          * 00245600
*                     STEAL                                           * 00245700
*                                                                     * 00245800
*                                                                     * 00245900
*                                                                     * 00246000
*01* CHANGE ACTIVITY:                                                 * 00246100
*                                                                     * 00246200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00246300
*                                                                     * 00246400
*    $L0=DATASPAC HBB3310 860807 PD4U:  Data spaces support.          * 00246500
*    $L1=HIPER    JBB3311 880427 PDG1:  Hiperspaces support.          * 00246600
*    $01=OY19885  JBB3311 880113 PDG1:  Modify keywords for extend.   * 00246700
*    $L2=CADSS005 JBB3313 880906 PDG1:  CADS support.                 * 00246800
*    $L3=VLF27    JBB3313 890519 PDG1:  Shared Data Object Management * 00246900
*                                         Support.                    * 00247000
*    $L4=MVPGM14  JBB3313 890718 PDG1:  Move Page Support.            * 00247100
*    $L5=JUP03    HBB4410 881107 PDG1:  Jupiter III support.          * 00247200
*    $L6=SHARED00 HBB4420 901022 PD00HO:  Data space sharing in       * 00247300
*                                         problem state.              * 00247400
*    $02=OY31134  JBB3311 900925 PD00A8:  Enforce non-swappable       * 00247500
*                                         rules.                      * 00247600
*    $03=OY40152  JBB3311 910314 PD00W3:  Ensure owning address space * 00247700
*                                         is not swapped out when     * 00247800
*                                         data space or hiperspace is * 00247900
*                                         referenced.                 * 00248000
*    $D1=DKB0087  HBB4430 920429 PD00A8:  Add new reason code for ADM * 00248100
*                                         support.                    * 00248200
*    $P1=PKB2333  HBB4430 920617 PD00JV:  Enhanced subtask support    * 00248300
*                                         for LOAD and OUT.           * 00248400
*    $P2=PKB2333  HBB4430 920617 PD00JV:  Correct reason code text    * 00248500
*                                         for documentation of        * 00248600
*                                         unauthorized cross-memory   * 00248700
*                                         characteristics.            * 00248800
*    $04=OY64993  HBB4420 930902 PD00HM:  Fixed minor script syntax   * 00248900
*                                         errors and recompiled for   * 00249000
*                                         AMG SYSNDX problem          * 00249100
*    $D3=DIG0028  HBB5510 930520 PD00HM:  Pin/IOON conflict           * 00249200
*                                         improvement.  Removed       * 00249300
*                                         xx030Axx ABEND reason code. * 00249400
*    $L7=OPEN31KE JBB5522 941014 PD00G1:  Add range-list for DEFINE   * 00249500
*                                         and RELEASE.                * 00249600
*    $L8=64BIT    HBB6608 980709 PD00B7:  Add BACK(31) BACK(64) for   * 00249700
*                                         CREATE.                     * 00249800
*    $P3=PYM0322  HBB7706 010730 PD00CS:  Support FreeShareSeg option * 00249900
*                                         on RELEASE.                 * 00250000
*    $05=OA14112  HBB7707 051227 PD00VE:  Add KeepReal internal       * 00250100
*                                         keyword support to Release  * 00250200
*                                         request                     * 00250300
*    $L9=RSMHSR   HBB7770 100228 PD00B7:  Add CREATE CriticalPaging   * 00250400
*                                         option.                     * 00250500
*    $LA=LRGPGSUP HBB7790 110909 PD0MAT:  Add CREATE PAGEFRAMESIZE    * 00250600
*                                         option.                     * 00250700
*    $LB=LRGPGSUP HBB7790 120111 PD0MAT:  Correct partial large       * 00250800
*                                         reason codes.               * 00250900
*    $P4=ME23382  HBB7790 120109 PD00XB:  Add HIDEZERO option.        * 00251000
*    $LC=FPGA     HBB7790 120930 PD00JI:  PCIEIO option.              * 00251100
*    $LD=FPGA     HBB7790 121120 PD00JI:  Change PCIEIO to use        * 00251200
*                                         DSPSERV PLISTVER(3)         * 00251300
*    $P5=WI135737 HBB77B0 170428 PD00FX:  Fix complile for PLAS       * 00251400
*                                         parts.                      * 00251500
*    $06=OA52717  HBB77B0 170505 PD00CC:  HBB77B0 TRSQ Bundle 2 -     * 00251600
*                                         WI135737                    * 00251700
*    $07=OA62336  HBB77C0 220603 PD00VE:  Add STEAL internal keyword  * 00251800
*                                         support to DEFINE IOON      * 00251900
*                                         request                     * 00252000
****** END OF SPECIFICATIONS *****************************************/ 00252100
*/********************************************************************* 00252200
         MACRO                                                          00252300
&XLABEL  DSPSERV &NAME=,&GENNAME=,&OUTNAME=,&BLOCKS=,&TYPE=,&DREF=,    *00252400
               &SCOPE=,&BACK=,&PAGEFRAMESIZE=,&HIDEZERO=,&HSTYPE=,     *00252500
               &SHARE=,&CASTOUT=,&KEY=,&FPROT=,&TTOKEN=,&STOKEN=,      *00252600
               &ORIGIN=,&NUMBLKS=,&CRITICALPAGING=,&INLIST=,&START=,   *00252700
               &NUMRANGE=,&RANGLIST=,&DISABLED=,&FREESHAREDSEG=,       *00252800
               &KEEPREAL=,&CLEAR=,&STEAL=,&LONG=,&PCIEIO=,&DMAPGTPTR=, *00252900
               &FORCE=,&VAR=,&PLISTVER=,&MF=                            00253000
.*                                                                      00253100
*                    MACDATE -03/15/23-<3>                              00253200
.*                                                                      00253300
.*******************************************************************    00253400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00253500
.*******************************************************************    00253600
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00253700
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00253800
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00253900
.*                                                                      00254000
                    GBLC  &ZDSPSERV   YES=MACRO USED AT LEAST ONCE      00254100
.*******************************************************************    00254200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00254300
.*******************************************************************    00254400
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00254500
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00254600
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00254700
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00254800
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00254900
                    LCLA  &ZAWRK      USED AS A WORK AREA               00255000
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00255100
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00255200
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00255300
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00255400
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00255500
                    LCLC  &ZMAC_G     "G" or null                       00255600
&ZMAC_G             SETC  ''                                            00255700
                    LCLC  &ZMAC_LR                                      00255800
&ZMAC_LR            SETC  'LR'                                          00255900
                    LCLC  &ZMAC_L                                       00256000
&ZMAC_L             SETC  'L'                                           00256100
                    LCLC  &ZMAC_ST                                      00256200
&ZMAC_ST            SETC  'ST'                                          00256300
                    LCLC  &ZMAC_LLGT                                    00256400
&ZMAC_LLGT          SETC  'L'                                           00256500
                    LCLC  &ZMAC_LGR                                     00256600
&ZMAC_LGR           SETC  'LR'                                          00256700
                    LCLC  &ZMAC_LG                                      00256800
&ZMAC_LG            SETC  'L'                                           00256900
                    LCLC  &ZMAC_STG                                     00257000
&ZMAC_STG           SETC  'ST'                                          00257100
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00257200
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00257300
.*                                                                      00257400
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00257500
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00257600
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00257700
                    LCLC  &ZENDBASEPL           End of base PL          00257800
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00257900
.*******************************************************************    00258000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00258100
.*******************************************************************    00258200
                    LCLA  &ZI         INDEX FOR ARRAY                   00258300
                    LCLA  &ZJ         INDEX FOR PARMS                   00258400
                    LCLA  &ZK         INDEX FOR PARSE                   00258500
                    LCLA  &ZLO        LOW RANGE VALUE                   00258600
                    LCLA  &ZHI        HIGH RANGE VALUE                  00258700
                    LCLC  &ZW         WORK AREA FOR PARM                00258800
.********************************************************************   00258900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00259000
.********************************************************************   00259100
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00259200
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00259300
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00259400
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00259500
.*                                                                      00259600
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00259700
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00259800
                    SPLEVEL  TEST                                       00259900
.ZSYS2              ANOP  ,                                             00260000
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00260100
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00260200
                    SYSSTATE TEST                                       00260300
                    AGO   .ZSYS4                                        00260400
.ZSYS3              ANOP  ,                                             00260500
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00260600
.ZSYS4              ANOP  ,                                             00260700
                    AIF   ('&SYSAM64' NE 'YES').ZSYSN64                 00260800
&ZMAC_LLGT          SETC 'LLGT'                                         00260900
&ZMAC_LGR           SETC 'LGR'                                          00261000
&ZMAC_LG            SETC 'LG'                                           00261100
&ZMAC_STG           SETC 'STG'                                          00261200
.ZSYSN64            ANOP  ,                                             00261300
.*******************************************************************    00261400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00261500
.*******************************************************************    00261600
                    LCLC  &XSERVICE   ++ VALUE                          00261700
                    LCLC  &XCREATE    ++ VALUE                          00261800
                    LCLC  &XNAME      ++ NAME                           00261900
                    LCLC  &XGENNAME   ++ VALUE                          00262000
                    LCLC  &XOUTNAME   ++ NAME                           00262100
                    LCLC  &XBLOCKS    ++ NAME                           00262200
                    LCLC  &XINITIAL   ++ NAME                           00262300
                    LCLC  &XTYPE      ++ VALUE                          00262400
                    LCLC  &XDREF      ++ VALUE                          00262500
                    LCLC  &XSCOPE     ++ VALUE                          00262600
                    LCLC  &XBACK      ++ VALUE                          00262700
                    LCLC  &XPAGEFRAMESIZE       ++ VALUE                00262800
                    LCLC  &XHIDEZERO  ++ VALUE                          00262900
                    LCLC  &XHSTYPE    ++ VALUE                          00263000
                    LCLC  &XSHARE     ++ VALUE                          00263100
                    LCLC  &XCASTOUT   ++ VALUE                          00263200
                    LCLC  &XKEYSPEC   ++ NAME                           00263300
                    LCLC  &XCALLERKEY           ++ NAME                 00263400
                    LCLC  &XKEY       ++ NAME                           00263500
                    LCLC  &XFPROT     ++ VALUE                          00263600
                    LCLC  &XTTOKEN    ++ NAME                           00263700
                    LCLC  &XSTOKEN    ++ NAME                           00263800
                    LCLC  &XORIGIN    ++ NAME                           00263900
                    LCLC  &XNUMBLKS   ++ NAME                           00264000
                    LCLC  &XCRITICALPAGING      ++ VALUE                00264100
                    LCLC  &XDELETE    ++ VALUE                          00264200
                    LCLC  &XRELEASE   ++ VALUE                          00264300
                    LCLC  &XINLIST    ++ VALUE                          00264400
                    LCLC  &XSTART     ++ NAME                           00264500
                    LCLC  &XNUMRANGE  ++ NAME                           00264600
                    LCLC  &XRANGLIST  ++ NAME                           00264700
                    LCLC  &XDISABLED  ++ VALUE                          00264800
                    LCLC  &XFREESHAREDSEG       ++ VALUE                00264900
                    LCLC  &XKEEPREAL  ++ VALUE                          00265000
                    LCLC  &XCLEAR     ++ VALUE                          00265100
                    LCLC  &XDEFINE    ++ VALUE                          00265200
                    LCLC  &XDEFOP     ++ VALUE                          00265300
                    LCLC  &XIOON      ++ VALUE                          00265400
                    LCLC  &XSTEAL     ++ VALUE                          00265500
                    LCLC  &XLONG      ++ VALUE                          00265600
                    LCLC  &XPCIEIO    ++ VALUE                          00265700
                    LCLC  &XDMAPGTPTR           ++ NAME                 00265800
                    LCLC  &XIOOFF     ++ VALUE                          00265900
                    LCLC  &XDREFON    ++ VALUE                          00266000
                    LCLC  &XDREFOFF   ++ VALUE                          00266100
                    LCLC  &XFORCE     ++ VALUE                          00266200
                    LCLC  &XEXTEND    ++ VALUE                          00266300
                    LCLC  &XVAR       ++ VALUE                          00266400
                    LCLC  &XOUT       ++ VALUE                          00266500
                    LCLC  &XLOAD      ++ VALUE                          00266600
                    LCLA  &XPLISTVER  ++ VALUE                          00266700
                    LCLC  &XMF        ++ VALUE                          00266800
                    LCLC  &XMFCTRL    ++ NAME                           00266900
                    LCLC  &XMFATTR    ++ VALUE                          00267000
                    LCLC  &XMFSCK     ++ VALUE                          00267100
.*******************************************************************    00267200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00267300
.*******************************************************************    00267400
                    LCLC  &ZXSERVICE  ++ INPUT VALUE                    00267500
                    LCLC  &ZXCREATE   ++ INPUT VALUE                    00267600
                    LCLC  &ZXNAME     ++ INPUT NAME                     00267700
                    LCLC  &ZXGENNAME  ++ INPUT VALUE                    00267800
                    LCLC  &ZXOUTNAME  ++ OUTPUT NAME                    00267900
                    LCLC  &ZXBLOCKS   ++ INPUT NAME                     00268000
                    LCLC  &ZXINITIAL  ++ INPUT NAME                     00268100
                    LCLC  &ZXTYPE     ++ INPUT VALUE                    00268200
                    LCLC  &ZXDREF     ++ INPUT VALUE                    00268300
                    LCLC  &ZXSCOPE    ++ INPUT VALUE                    00268400
                    LCLC  &ZXBACK     ++ INPUT VALUE                    00268500
                    LCLC  &ZXPAGEFRAMESIZE      ++ INPUT VALUE          00268600
                    LCLC  &ZXHIDEZERO           ++ INPUT VALUE          00268700
                    LCLC  &ZXHSTYPE   ++ INPUT VALUE                    00268800
                    LCLC  &ZXSHARE    ++ INPUT VALUE                    00268900
                    LCLC  &ZXCASTOUT  ++ INPUT VALUE                    00269000
                    LCLC  &ZXKEYSPEC  ++ INPUT NAME                     00269100
                    LCLC  &ZXCALLERKEY          ++ INPUT NAME           00269200
                    LCLC  &ZXKEY      ++ INPUT NAME                     00269300
                    LCLC  &ZXFPROT    ++ INPUT VALUE                    00269400
                    LCLC  &ZXTTOKEN   ++ INPUT NAME                     00269500
                    LCLC  &ZXSTOKEN   ++ OUTPUT NAME                    00269600
                    LCLC  &ZXORIGIN   ++ OUTPUT NAME                    00269700
                    LCLC  &ZXNUMBLKS  ++ OUTPUT NAME                    00269800
                    LCLC  &ZXCRITICALPAGING     ++ INPUT VALUE          00269900
                    LCLC  &ZXDELETE   ++ INPUT VALUE                    00270000
                    LCLC  &ZXRELEASE  ++ INPUT VALUE                    00270100
                    LCLC  &ZXINLIST   ++ INPUT VALUE                    00270200
                    LCLC  &ZXSTART    ++ INPUT NAME                     00270300
                    LCLC  &ZXNUMRANGE           ++ INPUT NAME           00270400
                    LCLC  &ZXRANGLIST           ++ INPUT NAME           00270500
                    LCLC  &ZXDISABLED           ++ INPUT VALUE          00270600
                    LCLC  &ZXFREESHAREDSEG      ++ INPUT VALUE          00270700
                    LCLC  &ZXKEEPREAL           ++ INPUT VALUE          00270800
                    LCLC  &ZXCLEAR    ++ INPUT VALUE                    00270900
                    LCLC  &ZXDEFINE   ++ INPUT VALUE                    00271000
                    LCLC  &ZXDEFOP    ++ INPUT VALUE                    00271100
                    LCLC  &ZXIOON     ++ INPUT VALUE                    00271200
                    LCLC  &ZXSTEAL    ++ INPUT VALUE                    00271300
                    LCLC  &ZXLONG     ++ INPUT VALUE                    00271400
                    LCLC  &ZXPCIEIO   ++ INPUT VALUE                    00271500
                    LCLC  &ZXDMAPGTPTR          ++ INPUT NAME           00271600
                    LCLC  &ZXIOOFF    ++ INPUT VALUE                    00271700
                    LCLC  &ZXDREFON   ++ INPUT VALUE                    00271800
                    LCLC  &ZXDREFOFF  ++ INPUT VALUE                    00271900
                    LCLC  &ZXFORCE    ++ INPUT VALUE                    00272000
                    LCLC  &ZXEXTEND   ++ INPUT VALUE                    00272100
                    LCLC  &ZXVAR      ++ INPUT VALUE                    00272200
                    LCLC  &ZXOUT      ++ INPUT VALUE                    00272300
                    LCLC  &ZXLOAD     ++ INPUT VALUE                    00272400
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00272500
                    LCLC  &ZXMF       ++ INPUT VALUE                    00272600
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00272700
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00272800
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00272900
.********************************************************************   00273000
.***AC.PLV01  PROCESS PLISTVER                                      *   00273100
.********************************************************************   00273200
&XPLISTVER      SETA  0                                                 00273300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00273400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00273500
&XPLISTVER      SETA  3                                                 00273600
.ZPLV0          ANOP  ,                                                 00273700
.*                                                                      00273800
                AIF   ('&BLOCKS(2)' EQ '').ZPLV1E                       00273900
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00274000
&XPLISTVER      SETA  1                                                 00274100
.ZPLV1E         ANOP  ,                                                 00274200
.*                                                                      00274300
                AIF   ('&HIDEZERO' EQ '').ZPLV2E                        00274400
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00274500
&XPLISTVER      SETA  2                                                 00274600
.ZPLV2E         ANOP  ,                                                 00274700
.*                                                                      00274800
                AIF   ('&STEAL' EQ '').ZPLV3E                           00274900
                AIF   (&XPLISTVER GE 3).ZPLV3E                          00275000
&XPLISTVER      SETA  3                                                 00275100
.ZPLV3E         ANOP  ,                                                 00275200
.*                                                                      00275300
                AIF   ('&PCIEIO' EQ '').ZPLV4E                          00275400
                AIF   (&XPLISTVER GE 3).ZPLV4E                          00275500
&XPLISTVER      SETA  3                                                 00275600
.ZPLV4E         ANOP  ,                                                 00275700
.*                                                                      00275800
                AIF   ('&DMAPGTPTR' EQ '').ZPLV5E                       00275900
                AIF   (&XPLISTVER GE 3).ZPLV5E                          00276000
&XPLISTVER      SETA  3                                                 00276100
.ZPLV5E         ANOP  ,                                                 00276200
.*                                                                      00276300
                AIF   ('&PCIEIO' EQ '').ZPLV6E                          00276400
                AIF   (&XPLISTVER GE 3).ZPLV6E                          00276500
&XPLISTVER      SETA  3                                                 00276600
.ZPLV6E         ANOP  ,                                                 00276700
.*                                                                      00276800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00276900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00277000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00277100
.*-------------------------------------------------------------------   00277200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00277300
&ZMS            SETC  '"PLISTVER='                                      00277400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00277500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00277600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00277700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00277800
                AGO   .ZPVCK2                                           00277900
.ZPVCK3         ANOP  ,                                                 00278000
.*-------------------------------------------------------------------   00278100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00278200
&ZMS            SETC  '"PLISTVER='                                      00278300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00278400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00278500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00278600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00278700
                AGO   .ZPVCKE                                           00278800
.ZPVCK2         ANOP  ,                                                 00278900
.*-------------------------------------------------------------------   00279000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00279100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00279200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00279300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00279400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00279500
                AIF   (&ZN LE 3).ZPVCK4A   NOT HIGH                     00279600
.ZPVCK6         ANOP  ,                                                 00279700
&ZMS            SETC  '"PLISTVER='                                      00279800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00279900
&ZMS            SETC  '&ZMS THE RANGE IS "0-3"'                         00280000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00280100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00280200
&XPLISTVER      SETA  3                                                 00280300
                AGO   .ZPVCKE                                           00280400
.*-------------------------------------------------------------------   00280500
.ZPVCK4A        ANOP  ,                                                 00280600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00280700
&ZMS            SETC  'PLISTVER='                                       00280800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00280900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00281000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00281100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00281200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00281300
                AGO   .ZPVCK5                                           00281400
.ZPVCK4         ANOP  ,                                                 00281500
&XPLISTVER      SETA  &PLISTVER(1)                                      00281600
.ZPVCK5         ANOP  ,                                                 00281700
.ZPVCKE         ANOP  ,                                                 00281800
.********************************************************************   00281900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00282000
.********************************************************************   00282100
                    ACTR  10000                                         00282200
.*------------------------------------------------------------------    00282300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282400
&XMF                SETC  ''          INITIALIZE XVARIABLE              00282500
.*-------------------------------------------------------------------   00282600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282700
.ZG251              ANOP  ,                                             00282800
&ZTLC               SETC 'S'                                            00282900
                    AIF   ('&MF(1)' NE '&ZTLC').ZG252                   00283000
&XMF                SETC  'S'         SET KEYWORD                       00283100
                    AIF   (N'&MF LE 1).ZG251A   CK NUM                  00283200
&ZMS                SETC  '"MF='                                        00283300
&ZMS                SETC  '&ZMS.&MF"'                                   00283400
&ZMS                SETC  '&ZMS "MF"'                                   00283500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00283600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00283700
.ZG251A             ANOP  ,                                             00283800
.*-------------------------------------------------------------------   00283900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00284000
.ZG252              ANOP  ,                                             00284100
&ZTLC               SETC 'L'                                            00284200
                    AIF   ('&MF(1)' NE '&ZTLC').ZG259                   00284300
&XMF                SETC  'L'         SET KEYWORD                       00284400
                    AIF   (N'&MF LE 3).ZG252A   CK NUM                  00284500
&ZMS                SETC  '"MF='                                        00284600
&ZMS                SETC  '&ZMS.&MF"'                                   00284700
&ZMS                SETC  '&ZMS "MF"'                                   00284800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00284900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00285000
.ZG252A             ANOP  ,                                             00285100
.*-------------------------------------------------------------------   00285200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00285300
                    AIF   (N'&SYSLIST NE 0).ZG252B  POSITIONALS?        00285400
                    AIF   ('&NAME' NE '').ZG252B  KEYS?                 00285500
                    AIF   ('&GENNAME' NE '').ZG252B  KEYS?              00285600
                    AIF   ('&OUTNAME' NE '').ZG252B  KEYS?              00285700
                    AIF   ('&BLOCKS' NE '').ZG252B  KEYS?               00285800
                    AIF   ('&TYPE' NE '').ZG252B  KEYS?                 00285900
                    AIF   ('&DREF' NE '').ZG252B  KEYS?                 00286000
                    AIF   ('&SCOPE' NE '').ZG252B  KEYS?                00286100
                    AIF   ('&BACK' NE '').ZG252B  KEYS?                 00286200
                    AIF   ('&PAGEFRAMESIZE' NE '').ZG252B  KEYS?        00286300
                    AIF   ('&HIDEZERO' NE '').ZG252B  KEYS?             00286400
                    AIF   ('&HSTYPE' NE '').ZG252B  KEYS?               00286500
                    AIF   ('&SHARE' NE '').ZG252B  KEYS?                00286600
                    AIF   ('&CASTOUT' NE '').ZG252B  KEYS?              00286700
                    AIF   ('&KEY' NE '').ZG252B  KEYS?                  00286800
                    AIF   ('&FPROT' NE '').ZG252B  KEYS?                00286900
                    AIF   ('&TTOKEN' NE '').ZG252B  KEYS?               00287000
                    AIF   ('&STOKEN' NE '').ZG252B  KEYS?               00287100
                    AIF   ('&ORIGIN' NE '').ZG252B  KEYS?               00287200
                    AIF   ('&NUMBLKS' NE '').ZG252B  KEYS?              00287300
                    AIF   ('&CRITICALPAGING' NE '').ZG252B  KEYS?       00287400
                    AIF   ('&INLIST' NE '').ZG252B  KEYS?               00287500
                    AIF   ('&START' NE '').ZG252B  KEYS?                00287600
                    AIF   ('&NUMRANGE' NE '').ZG252B  KEYS?             00287700
                    AIF   ('&RANGLIST' NE '').ZG252B  KEYS?             00287800
                    AIF   ('&DISABLED' NE '').ZG252B  KEYS?             00287900
                    AIF   ('&FREESHAREDSEG' NE '').ZG252B  KEYS?        00288000
                    AIF   ('&KEEPREAL' NE '').ZG252B  KEYS?             00288100
                    AIF   ('&CLEAR' NE '').ZG252B  KEYS?                00288200
                    AIF   ('&STEAL' NE '').ZG252B  KEYS?                00288300
                    AIF   ('&LONG' NE '').ZG252B  KEYS?                 00288400
                    AIF   ('&PCIEIO' NE '').ZG252B  KEYS?               00288500
                    AIF   ('&DMAPGTPTR' NE '').ZG252B  KEYS?            00288600
                    AIF   ('&FORCE' NE '').ZG252B  KEYS?                00288700
                    AIF   ('&VAR' NE '').ZG252B  KEYS?                  00288800
                    AGO    .ZG252C    INVOCATION OKAY                   00288900
.ZG252B             ANOP  ,                                             00289000
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00289100
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00289200
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00289300
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00289400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00289500
.ZG252C             ANOP  ,                                             00289600
.*-------------------------------------------------------------------   00289700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00289800
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00289900
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00290000
                    AIF   (N'&MF(2) GT 1).ZG254B  MULTI                 00290100
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00290200
.ZG254B             AIF   (K'&MF(2) GT 0).ZG254C                        00290300
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00290400
&ZMS                SETC  'WHEN "L" IS SPECIFIED'                       00290500
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00290600
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00290700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00290800
.ZG254C             ANOP  ,                                             00290900
.*-------------------------------------------------------------------   00291000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00291100
                    AIF   (K'&ZXMFCTRL LE 0).ZG254P  NOT I/O            00291200
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG254P               00291300
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00291400
&ZMS                SETC  '"MF='                                        00291500
&ZMS                SETC  '&ZMS.&MF"'                                   00291600
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00291700
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00291800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00291900
.ZG254P             ANOP  ,                                             00292000
.*-------------------------------------------------------------------   00292100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00292200
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00292300
&XMFATTR            SETC  '0D'                                          00292400
                    AIF   (K'&MF(3) LE 0).ZG257B  PARM                  00292500
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00292600
                    AIF   (N'&MF(3) GT 1).ZG257B  MULTI                 00292700
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00292800
.ZG257B             ANOP  ,                                             00292900
.*-------------------------------------------------------------------   00293000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00293100
                    AIF   (K'&ZXMFATTR LE 0).ZG257P  NOT I/O            00293200
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG257P               00293300
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00293400
&ZMS                SETC  '"MF='                                        00293500
&ZMS                SETC  '&ZMS.&MF"'                                   00293600
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00293700
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00293800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00293900
.ZG257P             ANOP  ,                                             00294000
.*-------------------------------------------------------------------   00294100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00294200
                    AIF   (K'&ZXMFATTR LE 0).ZG257S  NOT I/O            00294300
                    AIF   (K'&XMFATTR LE 60).ZG257S  LNG OK             00294400
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00294500
&ZMS                SETC  '"MF='                                        00294600
&ZMS                SETC  '&ZMS.&MF"'                                   00294700
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00294800
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00294900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00295000
.ZG257S             ANOP  ,                                             00295100
.*-------------------------------------------------------------------   00295200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00295300
.ZG259              ANOP  ,                                             00295400
&ZTLC               SETC 'E'                                            00295500
                    AIF   ('&MF(1)' NE '&ZTLC').ZG267                   00295600
&XMF                SETC  'E'         SET KEYWORD                       00295700
                    AIF   (N'&MF LE 3).ZG259A   CK NUM                  00295800
&ZMS                SETC  '"MF='                                        00295900
&ZMS                SETC  '&ZMS.&MF"'                                   00296000
&ZMS                SETC  '&ZMS "MF"'                                   00296100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00296200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00296300
.ZG259A             ANOP  ,                                             00296400
.*-------------------------------------------------------------------   00296500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00296600
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00296700
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00296800
                    AIF   (N'&MF(2) GT 1).ZG261B  MULTI                 00296900
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00297000
.ZG261B             AIF   (K'&MF(2) GT 0).ZG261C                        00297100
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00297200
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00297300
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00297400
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00297500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00297600
.ZG261C             ANOP  ,                                             00297700
.*-------------------------------------------------------------------   00297800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00297900
                    AIF   (K'&ZXMFCTRL LE 0).ZG261R  NOT I/O            00298000
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG261R               00298100
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00298200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG261P                 00298300
                    AIF   (K'&ZCGPR GT 2).ZG261Q                        00298400
                    AIF   ('&ZCGPR' EQ '0').ZG261Q                      00298500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00298600
                    AIF   (T'&ZCGPR NE 'N').ZG261Q  INVALID REG NAME    00298700
.ZG261P             ANOP  ,                                             00298800
                    AIF   (T'&ZCGPR NE 'N').ZG261R  NON NUMERIC         00298900
                    AIF   ('&ZCGPR' LT '1').ZG261Q                      00299000
                    AIF   ('&ZCGPR' LE '12').ZG261R                     00299100
.ZG261Q             ANOP  ,                                             00299200
&ZMS                SETC  '"MF='                                        00299300
&ZMS                SETC  '&ZMS.&MF"'                                   00299400
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00299500
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00299600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00299700
.ZG261R             ANOP  ,                                             00299800
.*-------------------------------------------------------------------   00299900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00300000
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00300100
.ZG265A   AIF   ('&MF(3)' NE 'COMPLETE').ZG266A                         00300200
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00300300
.*-------------------------------------------------------------------   00300400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00300500
.ZG266A             AIF   (K'&XMFSCK GT 0).ZG266C  KEYWORD              00300600
                    AIF   (K'&MF(3) LE 0).ZG266B                        00300700
&ZMS                SETC  '"MF='                                        00300800
&ZMS                SETC  '&ZMS.&MF"'                                   00300900
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00301000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00301100
&ZMS                SETC  '&ZMS "COMPLETE".'                            00301200
                    MNOTE 8,' &ZMS '                                    00301300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00301400
.ZG266B             ANOP  ,                                             00301500
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00301600
.ZG266C             ANOP  ,                                             00301700
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00301800
.*------------------------------------------------------------------    00301900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00302000
.ZG267              ANOP  ,                                             00302100
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00302200
                    AIF   (K'&XMF GT 0).ZG267E  VALID ARG               00302300
                    AIF   (T'&MF EQ 'O').ZG267D  OMITTED                00302400
&ZASYSLNDX          SETA  0                                             00302500
.ZG267A             ANOP  ,           POSITIONAL MACRO KEY              00302600
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00302700
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG267C             00302800
&ZTLC               SETC 'MF'                                           00302900
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG267A    00303000
.ZG267B             ANOP  ,                                             00303100
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00303200
&ZMS                SETC  'THE "MF" KEY'                                00303300
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00303400
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00303500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00303600
                    AGO   .ZG267E                                       00303700
.ZG267C             ANOP  ,                                             00303800
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00303900
&ZMS                SETC  '"MF='                                        00304000
&ZMS                SETC  '&ZMS.&MF"'                                   00304100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00304200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00304300
&ZMS                SETC  '&ZMS "S",'                                   00304400
&ZMS                SETC  '&ZMS "L",'                                   00304500
&ZMS                SETC  '&ZMS OR "E".'                                00304600
                    MNOTE 8,' &ZMS '                                    00304700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00304800
                    AGO   .ZG267E                                       00304900
.ZG267D             ANOP  ,                                             00305000
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00305100
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00305200
.ZG267E             ANOP  ,                                             00305300
.********************************************************************   00305400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00305500
.********************************************************************   00305600
                    ACTR  10000                                         00305700
.*-------------------------------------------------------------------   00305800
.***AG.MF03 MF=(SLE)                                                    00305900
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00306000
.*-------------------------------------------------------------------   00306100
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00306200
&XSERVICE           SETC  ''          INITIALIZE XVARIABLE              00306300
&ZASYSLNDX          SETA  0                                             00306400
.ZG2A               ANOP  ,           POSITIONAL KEY SEARCH             00306500
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00306600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00306700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00306800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CREATE').ZG2A                00306900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00307000
&ZXSERVICE          SETC  'INPUT'     SET IN/OUTPUT                     00307100
&XSERVICE           SETC  'CREATE'    SET XVARIABLE                     00307200
&ZXCREATE           SETC  'INPUT'     SET IN/OUTPUT                     00307300
&XCREATE            SETC  'CREATE'    SET XVARIABLE PARM                00307400
.ZG2B               ANOP  ,                                             00307500
.*-------------------------------------------------------------------   00307600
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00307700
&ZASYSLNDX          SETA  0                                             00307800
.ZG96A              ANOP  ,           POSITIONAL KEY SEARCH             00307900
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00308000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG96C  DONE                   00308100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG96A            00308200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DELETE').ZG96A               00308300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00308400
                    AIF   (K'&XSERVICE LE 0).ZG96B  VALID               00308500
&ZMS                SETC  '"DELETE'                                     00308600
&ZMS                SETC  '&ZMS."'                                      00308700
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00308800
&ZMS                SETC  '&ZMS "&XSERVICE"'                            00308900
                    MNOTE 8,' &ZMS KEY.'                                00309000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00309100
                    AGO   .ZG96C                                        00309200
.*                                                                      00309300
.ZG96B              ANOP  ,                                             00309400
&ZXSERVICE          SETC  'INPUT'     SET IN/OUTPUT                     00309500
&XSERVICE           SETC  'DELETE'    SET XVARIABLE                     00309600
&ZXDELETE           SETC  'INPUT'     SET IN/OUTPUT                     00309700
&XDELETE            SETC  'DELETE'    SET XVARIABLE PARM                00309800
.ZG96C              ANOP  ,                                             00309900
.*-------------------------------------------------------------------   00310000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00310100
&ZASYSLNDX          SETA  0                                             00310200
.ZG103A             ANOP  ,           POSITIONAL KEY SEARCH             00310300
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00310400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG103C  DONE                  00310500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG103A           00310600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'RELEASE').ZG103A             00310700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00310800
                    AIF   (K'&XSERVICE LE 0).ZG103B  VALID              00310900
&ZMS                SETC  '"RELEASE'                                    00311000
&ZMS                SETC  '&ZMS."'                                      00311100
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00311200
&ZMS                SETC  '&ZMS "&XSERVICE"'                            00311300
                    MNOTE 8,' &ZMS KEY.'                                00311400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00311500
                    AGO   .ZG103C                                       00311600
.*                                                                      00311700
.ZG103B             ANOP  ,                                             00311800
&ZXSERVICE          SETC  'INPUT'     SET IN/OUTPUT                     00311900
&XSERVICE           SETC  'RELEASE'   SET XVARIABLE                     00312000
&ZXRELEASE          SETC  'INPUT'     SET IN/OUTPUT                     00312100
&XRELEASE           SETC  'RELEASE'   SET XVARIABLE PARM                00312200
.ZG103C             ANOP  ,                                             00312300
.*-------------------------------------------------------------------   00312400
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00312500
&ZASYSLNDX          SETA  0                                             00312600
.ZG144A             ANOP  ,           POSITIONAL KEY SEARCH             00312700
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00312800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG144C  DONE                  00312900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG144A           00313000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DEFINE').ZG144A              00313100
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00313200
                    AIF   (K'&XSERVICE LE 0).ZG144B  VALID              00313300
&ZMS                SETC  '"DEFINE'                                     00313400
&ZMS                SETC  '&ZMS."'                                      00313500
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00313600
&ZMS                SETC  '&ZMS "&XSERVICE"'                            00313700
                    MNOTE 8,' &ZMS KEY.'                                00313800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00313900
                    AGO   .ZG144C                                       00314000
.*                                                                      00314100
.ZG144B             ANOP  ,                                             00314200
&ZXSERVICE          SETC  'INPUT'     SET IN/OUTPUT                     00314300
&XSERVICE           SETC  'DEFINE'    SET XVARIABLE                     00314400
&ZXDEFINE           SETC  'INPUT'     SET IN/OUTPUT                     00314500
&XDEFINE            SETC  'DEFINE'    SET XVARIABLE PARM                00314600
.ZG144C             ANOP  ,                                             00314700
.*-------------------------------------------------------------------   00314800
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00314900
&ZASYSLNDX          SETA  0                                             00315000
.ZG204A             ANOP  ,           POSITIONAL KEY SEARCH             00315100
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00315200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG204C  DONE                  00315300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG204A           00315400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'EXTEND').ZG204A              00315500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00315600
                    AIF   (K'&XSERVICE LE 0).ZG204B  VALID              00315700
&ZMS                SETC  '"EXTEND'                                     00315800
&ZMS                SETC  '&ZMS."'                                      00315900
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00316000
&ZMS                SETC  '&ZMS "&XSERVICE"'                            00316100
                    MNOTE 8,' &ZMS KEY.'                                00316200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00316300
                    AGO   .ZG204C                                       00316400
.*                                                                      00316500
.ZG204B             ANOP  ,                                             00316600
&ZXSERVICE          SETC  'INPUT'     SET IN/OUTPUT                     00316700
&XSERVICE           SETC  'EXTEND'    SET XVARIABLE                     00316800
&ZXEXTEND           SETC  'INPUT'     SET IN/OUTPUT                     00316900
&XEXTEND            SETC  'EXTEND'    SET XVARIABLE PARM                00317000
.ZG204C             ANOP  ,                                             00317100
.*-------------------------------------------------------------------   00317200
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00317300
&ZASYSLNDX          SETA  0                                             00317400
.ZG219A             ANOP  ,           POSITIONAL KEY SEARCH             00317500
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00317600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG219C  DONE                  00317700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG219A           00317800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'OUT').ZG219A                 00317900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00318000
                    AIF   (K'&XSERVICE LE 0).ZG219B  VALID              00318100
&ZMS                SETC  '"OUT'                                        00318200
&ZMS                SETC  '&ZMS."'                                      00318300
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00318400
&ZMS                SETC  '&ZMS "&XSERVICE"'                            00318500
                    MNOTE 8,' &ZMS KEY.'                                00318600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00318700
                    AGO   .ZG219C                                       00318800
.*                                                                      00318900
.ZG219B             ANOP  ,                                             00319000
&ZXSERVICE          SETC  'INPUT'     SET IN/OUTPUT                     00319100
&XSERVICE           SETC  'OUT'       SET XVARIABLE                     00319200
&ZXOUT              SETC  'INPUT'     SET IN/OUTPUT                     00319300
&XOUT               SETC  'OUT'       SET XVARIABLE PARM                00319400
.ZG219C             ANOP  ,                                             00319500
.*-------------------------------------------------------------------   00319600
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00319700
&ZASYSLNDX          SETA  0                                             00319800
.ZG229A             ANOP  ,           POSITIONAL KEY SEARCH             00319900
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00320000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG229C  DONE                  00320100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG229A           00320200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'LOAD').ZG229A                00320300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00320400
                    AIF   (K'&XSERVICE LE 0).ZG229B  VALID              00320500
&ZMS                SETC  '"LOAD'                                       00320600
&ZMS                SETC  '&ZMS."'                                      00320700
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00320800
&ZMS                SETC  '&ZMS "&XSERVICE"'                            00320900
                    MNOTE 8,' &ZMS KEY.'                                00321000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00321100
                    AGO   .ZG229C                                       00321200
.*                                                                      00321300
.ZG229B             ANOP  ,                                             00321400
&ZXSERVICE          SETC  'INPUT'     SET IN/OUTPUT                     00321500
&XSERVICE           SETC  'LOAD'      SET XVARIABLE                     00321600
&ZXLOAD             SETC  'INPUT'     SET IN/OUTPUT                     00321700
&XLOAD              SETC  'LOAD'      SET XVARIABLE PARM                00321800
.ZG229C             ANOP  ,                                             00321900
.*------------------------------------------------------------------    00322000
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00322100
                    AIF   (K'&XSERVICE GT 0).ZG239B                     00322200
&ZXSERVICE          SETC  ''          RESET IN/OUTPUT                   00322300
&ZXCREATE           SETC  ''          RESET IN/OUTPUT                   00322400
&XSERVICE           SETC  ''          ENSURE NULL                       00322500
&XCREATE            SETC  ''          ENSURE NULL                       00322600
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00322700
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00322800
&ZMS                SETC  '&ZMS REQUIRED:'                              00322900
&ZMS                SETC  '&ZMS "CREATE",'      VALID ME KEY            00323000
&ZMS                SETC  '&ZMS "DELETE",'      VALID ME KEY            00323100
&ZMS                SETC  '&ZMS "RELEASE",'     VALID ME KEY            00323200
&ZMS                SETC  '&ZMS "DEFINE",'      VALID ME KEY            00323300
&ZMS                SETC  '&ZMS "EXTEND",'      VALID ME KEY            00323400
&ZMS                SETC  '&ZMS "OUT",'         VALID ME KEY            00323500
&ZMS                SETC  '&ZMS OR "LOAD".'     VALID ME KEY            00323600
                    MNOTE 8,' &ZMS '                                    00323700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00323800
.ZG239B             ANOP  ,                                             00323900
.*-------------------------------------------------------------------   00324000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00324100
.ZG2ZY  AIF    ('&XSERVICE' NE 'CREATE').ZG96ZY                         00324200
.*-------------------------------------------------------------------   00324300
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00324400
&ZCVAL              SETC ''           ERROR KEY FIELD                   00324500
.ZG2I0              AIF   (K'&INLIST LE 0).ZG2I1                        00324600
&ZCVAL              SETC '&ZCVAL INLIST'        DISALLOWED KEY          00324700
.ZG2I1              AIF   (K'&START LE 0).ZG2I2                         00324800
&ZCVAL              SETC '&ZCVAL START'         DISALLOWED KEY          00324900
.ZG2I2              AIF   (K'&NUMRANGE LE 0).ZG2I3                      00325000
&ZCVAL              SETC '&ZCVAL NUMRANGE'      DISALLOWED KEY          00325100
.ZG2I3              AIF   (K'&RANGLIST LE 0).ZG2I4                      00325200
&ZCVAL              SETC '&ZCVAL RANGLIST'      DISALLOWED KEY          00325300
.ZG2I4              AIF   (K'&DISABLED LE 0).ZG2I5                      00325400
&ZCVAL              SETC '&ZCVAL DISABLED'      DISALLOWED KEY          00325500
.ZG2I5              AIF   (K'&FREESHAREDSEG LE 0).ZG2I6                 00325600
&ZCVAL              SETC '&ZCVAL FREESHAREDSEG'  DISALLOWED KEY         00325700
.ZG2I6              AIF   (K'&KEEPREAL LE 0).ZG2I7                      00325800
&ZCVAL              SETC '&ZCVAL KEEPREAL'      DISALLOWED KEY          00325900
.ZG2I7              AIF   (K'&CLEAR LE 0).ZG2I8                         00326000
&ZCVAL              SETC '&ZCVAL CLEAR'         DISALLOWED KEY          00326100
.ZG2I8              AIF   (K'&XIOON LE 0).ZG2I9                         00326200
&ZCVAL              SETC '&ZCVAL XIOON'         DISALLOWED KEY          00326300
.ZG2I9              AIF   (K'&STEAL LE 0).ZG2I10                        00326400
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00326500
.ZG2I10             AIF   (K'&LONG LE 0).ZG2I11                         00326600
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00326700
.ZG2I11             AIF   (K'&PCIEIO LE 0).ZG2I12                       00326800
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00326900
.ZG2I12             AIF   (K'&DMAPGTPTR LE 0).ZG2I13                    00327000
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00327100
.ZG2I13             AIF   (K'&XIOOFF LE 0).ZG2I14                       00327200
&ZCVAL              SETC '&ZCVAL XIOOFF'        DISALLOWED KEY          00327300
.ZG2I14             AIF   (K'&XDREFON LE 0).ZG2I15                      00327400
&ZCVAL              SETC '&ZCVAL XDREFON'       DISALLOWED KEY          00327500
.ZG2I15             AIF   (K'&XDREFOFF LE 0).ZG2I16                     00327600
&ZCVAL              SETC '&ZCVAL XDREFOFF'      DISALLOWED KEY          00327700
.ZG2I16             AIF   (K'&FORCE LE 0).ZG2I17                        00327800
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00327900
.ZG2I17             AIF   (K'&VAR LE 0).ZG2I18                          00328000
&ZCVAL              SETC '&ZCVAL VAR'           DISALLOWED KEY          00328100
.ZG2I18             AIF   (K'&ZCVAL LE 0).ZG2J  KEY                     00328200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00328300
&ZMS                SETC  '"CREATE'                                     00328400
&ZMS                SETC  '&ZMS."'                                      00328500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00328600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00328700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00328800
.ZG2J               ANOP  ,                                             00328900
.*----------------------------------------------------------------***   00329000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00329100
                    AIF   (N'&NAME LE 1).ZG4A   CK NUM                  00329200
&ZMS                SETC  '"NAME='                                      00329300
&ZMS                SETC  '&ZMS.&NAME"'                                 00329400
&ZMS                SETC  '&ZMS "NAME"'                                 00329500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00329600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00329700
.ZG4A               ANOP  ,                                             00329800
.*-------------------------------------------------------------------   00329900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00330000
&ZXNAME             SETC  'INPUT'     SET IN/OUTPUT                     00330100
&XNAME              SETC  '&NAME(1)'  SET XVARIABLE                     00330200
                    AIF   (N'&NAME GT 1).ZG4B   MULTI                   00330300
&XNAME              SETC  '&NAME'     SET XVARIABLE                     00330400
.ZG4B               AIF   (K'&NAME(1) GT 0).ZG4C                        00330500
&ZXNAME             SETC  ''          RESET IN/OUTPUT                   00330600
&ZMS                SETC  ' '                                           00330700
&ZMS                SETC  '&ZMS "NAME" KEY AND ITS'                     00330800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00330900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00331000
.ZG4C               ANOP  ,                                             00331100
.*-------------------------------------------------------------------   00331200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00331300
                    AIF   (K'&ZXNAME LE 0).ZG4R  NOT I/O                00331400
                    AIF   ('&XNAME'(1,1) NE '(').ZG4R                   00331500
&ZCGPR              SETC  '&XNAME'(2,K'&XNAME-2)                        00331600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                   00331700
                    AIF   (K'&ZCGPR GT 2).ZG4Q                          00331800
                    AIF   ('&ZCGPR' EQ '0').ZG4Q                        00331900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00332000
                    AIF   (T'&ZCGPR NE 'N').ZG4Q  INVALID REG NAME      00332100
.ZG4P               ANOP  ,                                             00332200
                    AIF   (T'&ZCGPR NE 'N').ZG4R  NON NUMERIC           00332300
                    AIF   ('&ZCGPR' LT '2').ZG4Q                        00332400
                    AIF   ('&ZCGPR' LE '12').ZG4R                       00332500
.ZG4Q               ANOP  ,                                             00332600
&ZMS                SETC  '"NAME='                                      00332700
&ZMS                SETC  '&ZMS.&NAME"'                                 00332800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00332900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00333000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00333100
.ZG4R               ANOP  ,                                             00333200
.*------------------------------------------------------------------    00333300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00333400
&XGENNAME           SETC  ''          INITIALIZE XVARIABLE              00333500
.*-------------------------------------------------------------------   00333600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00333700
.ZG8                ANOP  ,                                             00333800
                    AIF   (K'&GENNAME(1) LE 0).ZG8A                     00333900
&ZTLC               SETC 'NO'                                           00334000
                    AIF   ('&GENNAME(1)' NE '&ZTLC').ZG9                00334100
&XGENNAME           SETC  'NO'        SET KEYWORD                       00334200
                    AIF   (N'&GENNAME LE 1).ZG8A  CK NUM                00334300
&ZMS                SETC  '"GENNAME='                                   00334400
&ZMS                SETC  '&ZMS.&GENNAME"'                              00334500
&ZMS                SETC  '&ZMS "GENNAME"'                              00334600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00334700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00334800
.ZG8A               ANOP  ,                                             00334900
.*------------------------------------------------------------------    00335000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00335100
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00335200
.ZG8A0              AIF   (K'&OUTNAME LE 0).ZG8A1  OK                   00335300
&ZCVAL              SETC '&ZCVAL OUTNAME'       INCORRECT KEY USED      00335400
.ZG8A1              AIF   (K'&ZCVAL LE 0).ZG8A2  OK                     00335500
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00335600
&ZMS                SETC  '"GENNAME'                                    00335700
&ZMS                SETC  '&ZMS.=&GENNAME"'                             00335800
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00335900
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00336000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00336100
.ZG8A2              ANOP  ,                                             00336200
.*-------------------------------------------------------------------   00336300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00336400
.ZG9                ANOP  ,                                             00336500
&ZTLC               SETC 'COND'                                         00336600
                    AIF   ('&GENNAME(1)' NE '&ZTLC').ZG13               00336700
&XGENNAME           SETC  'COND'      SET KEYWORD                       00336800
                    AIF   (N'&GENNAME LE 1).ZG9A  CK NUM                00336900
&ZMS                SETC  '"GENNAME='                                   00337000
&ZMS                SETC  '&ZMS.&GENNAME"'                              00337100
&ZMS                SETC  '&ZMS "GENNAME"'                              00337200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00337300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00337400
.ZG9A               ANOP  ,                                             00337500
.*----------------------------------------------------------------***   00337600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00337700
                    AIF   (N'&OUTNAME LE 1).ZG11A  CK NUM               00337800
&ZMS                SETC  '"OUTNAME='                                   00337900
&ZMS                SETC  '&ZMS.&OUTNAME"'                              00338000
&ZMS                SETC  '&ZMS "OUTNAME"'                              00338100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00338200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00338300
.ZG11A              ANOP  ,                                             00338400
.*-------------------------------------------------------------------   00338500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00338600
                    AIF   (K'&OUTNAME(1) LE 0).ZG11C  NO PARM           00338700
&ZXOUTNAME          SETC  'OUTPUT'    SET OUTPUT                        00338800
&XOUTNAME           SETC  '&OUTNAME(1)'         SET XVARIABLE           00338900
                    AIF   (N'&OUTNAME GT 1).ZG11C                       00339000
&XOUTNAME           SETC  '&OUTNAME'  SET XVARIABLE                     00339100
.ZG11C              ANOP  ,                                             00339200
.*-------------------------------------------------------------------   00339300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00339400
                    AIF   (K'&ZXOUTNAME LE 0).ZG11R  NOT I/O            00339500
                    AIF   ('&XOUTNAME'(1,1) NE '(').ZG11R               00339600
&ZCGPR              SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                  00339700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                  00339800
                    AIF   (K'&ZCGPR GT 2).ZG11Q                         00339900
                    AIF   ('&ZCGPR' EQ '0').ZG11Q                       00340000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00340100
                    AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME     00340200
.ZG11P              ANOP  ,                                             00340300
                    AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC          00340400
                    AIF   ('&ZCGPR' LT '2').ZG11Q                       00340500
                    AIF   ('&ZCGPR' LE '12').ZG11R                      00340600
.ZG11Q              ANOP  ,                                             00340700
&ZMS                SETC  '"OUTNAME='                                   00340800
&ZMS                SETC  '&ZMS.&OUTNAME"'                              00340900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00341000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00341100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00341200
.ZG11R              ANOP  ,                                             00341300
.*-------------------------------------------------------------------   00341400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341500
.ZG13               ANOP  ,                                             00341600
&ZTLC               SETC 'YES'                                          00341700
                    AIF   ('&GENNAME(1)' NE '&ZTLC').ZG17               00341800
&XGENNAME           SETC  'YES'       SET KEYWORD                       00341900
                    AIF   (N'&GENNAME LE 1).ZG13A  CK NUM               00342000
&ZMS                SETC  '"GENNAME='                                   00342100
&ZMS                SETC  '&ZMS.&GENNAME"'                              00342200
&ZMS                SETC  '&ZMS "GENNAME"'                              00342300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00342400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00342500
.ZG13A              ANOP  ,                                             00342600
.*----------------------------------------------------------------***   00342700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00342800
                    AIF   (N'&OUTNAME LE 1).ZG15A  CK NUM               00342900
&ZMS                SETC  '"OUTNAME='                                   00343000
&ZMS                SETC  '&ZMS.&OUTNAME"'                              00343100
&ZMS                SETC  '&ZMS "OUTNAME"'                              00343200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00343300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00343400
.ZG15A              ANOP  ,                                             00343500
.*-------------------------------------------------------------------   00343600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00343700
                    AIF   (K'&OUTNAME(1) LE 0).ZG15C  NO PARM           00343800
&ZXOUTNAME          SETC  'OUTPUT'    SET OUTPUT                        00343900
&XOUTNAME           SETC  '&OUTNAME(1)'         SET XVARIABLE           00344000
                    AIF   (N'&OUTNAME GT 1).ZG15C                       00344100
&XOUTNAME           SETC  '&OUTNAME'  SET XVARIABLE                     00344200
.ZG15C              ANOP  ,                                             00344300
.*-------------------------------------------------------------------   00344400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00344500
                    AIF   (K'&ZXOUTNAME LE 0).ZG15R  NOT I/O            00344600
                    AIF   ('&XOUTNAME'(1,1) NE '(').ZG15R               00344700
&ZCGPR              SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                  00344800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                  00344900
                    AIF   (K'&ZCGPR GT 2).ZG15Q                         00345000
                    AIF   ('&ZCGPR' EQ '0').ZG15Q                       00345100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00345200
                    AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME     00345300
.ZG15P              ANOP  ,                                             00345400
                    AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC          00345500
                    AIF   ('&ZCGPR' LT '2').ZG15Q                       00345600
                    AIF   ('&ZCGPR' LE '12').ZG15R                      00345700
.ZG15Q              ANOP  ,                                             00345800
&ZMS                SETC  '"OUTNAME='                                   00345900
&ZMS                SETC  '&ZMS.&OUTNAME"'                              00346000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00346100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00346200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00346300
.ZG15R              ANOP  ,                                             00346400
.*------------------------------------------------------------------    00346500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00346600
.ZG17               ANOP  ,                                             00346700
&ZXGENNAME          SETC  'INPUT'     SET IN/OUTPUT                     00346800
                    AIF   (K'&XGENNAME GT 0).ZG17E  VALID ARG           00346900
                    AIF   (T'&GENNAME EQ 'O').ZG17D  OMITTED            00347000
&ZASYSLNDX          SETA  0                                             00347100
.ZG17A              ANOP  ,           POSITIONAL MACRO KEY              00347200
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00347300
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG17C              00347400
&ZTLC               SETC 'GENNAME'                                      00347500
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG17A     00347600
.ZG17B              ANOP  ,                                             00347700
&ZXGENNAME          SETC  ''          RESET IN/OUTPUT                   00347800
&ZMS                SETC  'THE "GENNAME" KEY'                           00347900
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00348000
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00348100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00348200
                    AGO   .ZG17E                                        00348300
.ZG17C              ANOP  ,                                             00348400
&ZXGENNAME          SETC  ''          RESET IN/OUTPUT                   00348500
&ZMS                SETC  '"GENNAME='                                   00348600
&ZMS                SETC  '&ZMS.&GENNAME"'                              00348700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00348800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00348900
&ZMS                SETC  '&ZMS "NO",'                                  00349000
&ZMS                SETC  '&ZMS "COND",'                                00349100
&ZMS                SETC  '&ZMS OR "YES".'                              00349200
                    MNOTE 8,' &ZMS '                                    00349300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00349400
                    AGO   .ZG17E                                        00349500
.ZG17D              ANOP  ,                                             00349600
&XGENNAME           SETC  'NO'        SET DEFAULT KEYWORD               00349700
.ZG17E              ANOP  ,                                             00349800
.*----------------------------------------------------------------***   00349900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00350000
                    AIF   (N'&BLOCKS LE 2).ZG19A  CK NUM                00350100
&ZMS                SETC  '"BLOCKS='                                    00350200
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00350300
&ZMS                SETC  '&ZMS "BLOCKS"'                               00350400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'          00350500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00350600
.ZG19A              ANOP  ,                                             00350700
.*-------------------------------------------------------------------   00350800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00350900
&ZXBLOCKS           SETC  'INPUT'     SET IN/OUTPUT                     00351000
&XBLOCKS            SETC  '0'                                           00351100
                    AIF   (K'&BLOCKS(1) LE 0).ZG19B  PARM               00351200
&XBLOCKS            SETC  '&BLOCKS(1,1)'        SET XVARIABLE           00351300
                    AIF   (N'&BLOCKS(1) GT 1).ZG19B  MULTI              00351400
&XBLOCKS            SETC  '&BLOCKS(1)'          SET XVARIABLE           00351500
.ZG19B              ANOP  ,                                             00351600
.*-------------------------------------------------------------------   00351700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00351800
                    AIF   (K'&ZXBLOCKS LE 0).ZG19R  NOT I/O             00351900
         AIF   ('&XBLOCKS' EQ '0').ZG19R                                00352000
                    AIF   ('&XBLOCKS'(1,1) NE '(').ZG19R                00352100
&ZCGPR              SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                    00352200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                  00352300
                    AIF   (K'&ZCGPR GT 2).ZG19Q                         00352400
                    AIF   ('&ZCGPR' EQ '0').ZG19Q                       00352500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00352600
                    AIF   (T'&ZCGPR NE 'N').ZG19Q  INVALID REG NAME     00352700
.ZG19P              ANOP  ,                                             00352800
                    AIF   (T'&ZCGPR NE 'N').ZG19R  NON NUMERIC          00352900
                    AIF   ('&ZCGPR' LT '2').ZG19Q                       00353000
                    AIF   ('&ZCGPR' LE '12').ZG19R                      00353100
.ZG19Q              ANOP  ,                                             00353200
&ZMS                SETC  '"BLOCKS='                                    00353300
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00353400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00353500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00353600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00353700
.ZG19R              ANOP  ,                                             00353800
.*-------------------------------------------------------------------   00353900
.***AG.KXVAR17 NAME, OPT INPUT, POS(2) -XVARIABLE                       00354000
&XINITIAL           SETC  '524288'    SET DEFAULT                       00354100
                    AIF   (K'&BLOCKS(2) LE 0).ZG21C  PARM               00354200
&XINITIAL           SETC  '&BLOCKS(2,1)'        SET XVARIABLE           00354300
                    AIF   (N'&BLOCKS(2) GT 1).ZG21B  MULTI              00354400
&XINITIAL           SETC  '&BLOCKS(2)'          SET XVARIABLE           00354500
.ZG21B              AIF   (K'&BLOCKS(1) GT 0).ZG21C  KEY                00354600
&ZMS                SETC  '"BLOCKS'                                     00354700
&ZMS                SETC  '&ZMS.=&BLOCKS"'                              00354800
&ZMS                SETC  '&ZMS ARGUMENT 2 CAN ONLY BE SPECIFIED IF'    00354900
&ZMS                SETC  '&ZMS '                                       00355000
&ZMS                SETC  '&ZMS "BLOCKS"'                               00355100
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00355200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00355300
.ZG21C              ANOP  ,                                             00355400
&ZXINITIAL          SETC  'INPUT'     SET IN/OUTPUT                     00355500
.*-------------------------------------------------------------------   00355600
.***AG.KCK02 NAME, OPT INPUT, POS(2) -GPR OUT OF RANGE                  00355700
                    AIF   (K'&ZXINITIAL LE 0).ZG21R  NOT I/O            00355800
                    AIF   ('&XINITIAL'(1,1) NE '(').ZG21R               00355900
&ZCGPR              SETC  '&XINITIAL'(2,K'&XINITIAL-2)                  00356000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                  00356100
                    AIF   (K'&ZCGPR GT 2).ZG21Q                         00356200
                    AIF   ('&ZCGPR' EQ '0').ZG21Q                       00356300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00356400
                    AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME     00356500
.ZG21P              ANOP  ,                                             00356600
                    AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC          00356700
                    AIF   ('&ZCGPR' LT '2').ZG21Q                       00356800
                    AIF   ('&ZCGPR' LE '12').ZG21R                      00356900
.ZG21Q              ANOP  ,                                             00357000
&ZMS                SETC  '"BLOCKS='                                    00357100
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00357200
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00357300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00357400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00357500
.ZG21R              ANOP  ,                                             00357600
.*------------------------------------------------------------------    00357700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00357800
&XTYPE              SETC  ''          INITIALIZE XVARIABLE              00357900
.*-------------------------------------------------------------------   00358000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00358100
.ZG26               ANOP  ,                                             00358200
                    AIF   (K'&TYPE(1) LE 0).ZG26A                       00358300
&ZTLC               SETC 'BASIC'                                        00358400
                    AIF   ('&TYPE(1)' NE '&ZTLC').ZG53                  00358500
&XTYPE              SETC  'BASIC'     SET KEYWORD                       00358600
                    AIF   (N'&TYPE LE 1).ZG26A  CK NUM                  00358700
&ZMS                SETC  '"TYPE='                                      00358800
&ZMS                SETC  '&ZMS.&TYPE"'                                 00358900
&ZMS                SETC  '&ZMS "TYPE"'                                 00359000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00359100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00359200
.ZG26A              ANOP  ,                                             00359300
.*------------------------------------------------------------------    00359400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00359500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00359600
.ZG26A0             AIF   (K'&HSTYPE LE 0).ZG26A1  OK                   00359700
&ZCVAL              SETC '&ZCVAL HSTYPE'        INCORRECT KEY USED      00359800
.ZG26A1             AIF   (K'&SHARE LE 0).ZG26A2  OK                    00359900
&ZCVAL              SETC '&ZCVAL SHARE'         INCORRECT KEY USED      00360000
.ZG26A2             AIF   (K'&CASTOUT LE 0).ZG26A3  OK                  00360100
&ZCVAL              SETC '&ZCVAL CASTOUT'       INCORRECT KEY USED      00360200
.ZG26A3             AIF   (K'&ZCVAL LE 0).ZG26A4  OK                    00360300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00360400
&ZMS                SETC  '"TYPE'                                       00360500
&ZMS                SETC  '&ZMS.=&TYPE"'                                00360600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00360700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00360800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00360900
.ZG26A4             ANOP  ,                                             00361000
.*----------------------------------------------------------------***   00361100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00361200
                    AIF   (N'&DREF LE 1).ZG28A  CK NUM                  00361300
&ZMS                SETC  '"DREF='                                      00361400
&ZMS                SETC  '&ZMS.&DREF"'                                 00361500
&ZMS                SETC  '&ZMS "DREF"'                                 00361600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00361700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00361800
.ZG28A              ANOP  ,                                             00361900
.*-------------------------------------------------------------------   00362000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00362100
&XDREF              SETC  ''          INITIALIZE XVARIABLE              00362200
.ZG29A   AIF   ('&DREF(1)' NE 'NO').ZG30A                               00362300
&XDREF              SETC  'NO'        SET KEYWORD                       00362400
.*-------------------------------------------------------------------   00362500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00362600
.ZG30A   AIF   ('&DREF(1)' NE 'YES').ZG31A                              00362700
&XDREF              SETC  'YES'       SET KEYWORD                       00362800
.*-------------------------------------------------------------------   00362900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00363000
.ZG31A              AIF   (K'&XDREF GT 0).ZG31C  KEYWORD                00363100
                    AIF   (K'&DREF(1) LE 0).ZG31B                       00363200
&ZMS                SETC  '"DREF='                                      00363300
&ZMS                SETC  '&ZMS.&DREF"'                                 00363400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00363500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00363600
&ZMS                SETC  '&ZMS "NO"'                                   00363700
&ZMS                SETC  '&ZMS OR "YES".'                              00363800
                    MNOTE 8,' &ZMS '                                    00363900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00364000
.ZG31B              ANOP  ,                                             00364100
&XDREF              SETC  'NO'        SET DEFAULT KEYWORD               00364200
.ZG31C              ANOP  ,                                             00364300
&ZXDREF             SETC  'INPUT'     SET IN/OUTPUT                     00364400
.*----------------------------------------------------------------***   00364500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00364600
                    AIF   (N'&SCOPE LE 1).ZG33A  CK NUM                 00364700
&ZMS                SETC  '"SCOPE='                                     00364800
&ZMS                SETC  '&ZMS.&SCOPE"'                                00364900
&ZMS                SETC  '&ZMS "SCOPE"'                                00365000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00365100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00365200
.ZG33A              ANOP  ,                                             00365300
.*-------------------------------------------------------------------   00365400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00365500
&XSCOPE             SETC  ''          INITIALIZE XVARIABLE              00365600
.ZG34A   AIF   ('&SCOPE(1)' NE 'SINGLE').ZG35A                          00365700
&XSCOPE             SETC  'SINGLE'    SET KEYWORD                       00365800
.*-------------------------------------------------------------------   00365900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00366000
.ZG35A   AIF   ('&SCOPE(1)' NE 'ALL').ZG36A                             00366100
&XSCOPE             SETC  'ALL'       SET KEYWORD                       00366200
.*-------------------------------------------------------------------   00366300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00366400
.ZG36A   AIF   ('&SCOPE(1)' NE 'COMMON').ZG37A                          00366500
&XSCOPE             SETC  'COMMON'    SET KEYWORD                       00366600
.*-------------------------------------------------------------------   00366700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00366800
.ZG37A              AIF   (K'&XSCOPE GT 0).ZG37C  KEYWORD               00366900
                    AIF   (K'&SCOPE(1) LE 0).ZG37B                      00367000
&ZMS                SETC  '"SCOPE='                                     00367100
&ZMS                SETC  '&ZMS.&SCOPE"'                                00367200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00367300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00367400
&ZMS                SETC  '&ZMS "SINGLE",'                              00367500
&ZMS                SETC  '&ZMS "ALL",'                                 00367600
&ZMS                SETC  '&ZMS OR "COMMON".'                           00367700
                    MNOTE 8,' &ZMS '                                    00367800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00367900
.ZG37B              ANOP  ,                                             00368000
&XSCOPE             SETC  'SINGLE'    SET DEFAULT KEYWORD               00368100
.ZG37C              ANOP  ,                                             00368200
&ZXSCOPE            SETC  'INPUT'     SET IN/OUTPUT                     00368300
.*----------------------------------------------------------------***   00368400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00368500
                    AIF   (N'&BACK LE 1).ZG39A  CK NUM                  00368600
&ZMS                SETC  '"BACK='                                      00368700
&ZMS                SETC  '&ZMS.&BACK"'                                 00368800
&ZMS                SETC  '&ZMS "BACK"'                                 00368900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00369000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00369100
.ZG39A              ANOP  ,                                             00369200
.*-------------------------------------------------------------------   00369300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00369400
&XBACK              SETC  ''          INITIALIZE XVARIABLE              00369500
.ZG40A   AIF   ('&BACK(1)' NE '31').ZG41A                               00369600
&XBACK              SETC  '31'        SET KEYWORD                       00369700
.*-------------------------------------------------------------------   00369800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00369900
.ZG41A   AIF   ('&BACK(1)' NE '64').ZG42A                               00370000
&XBACK              SETC  '64'        SET KEYWORD                       00370100
.*-------------------------------------------------------------------   00370200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00370300
.ZG42A              AIF   (K'&XBACK GT 0).ZG42C  KEYWORD                00370400
                    AIF   (K'&BACK(1) LE 0).ZG42B                       00370500
&ZMS                SETC  '"BACK='                                      00370600
&ZMS                SETC  '&ZMS.&BACK"'                                 00370700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00370800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00370900
&ZMS                SETC  '&ZMS "31"'                                   00371000
&ZMS                SETC  '&ZMS OR "64".'                               00371100
                    MNOTE 8,' &ZMS '                                    00371200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00371300
.ZG42B              ANOP  ,                                             00371400
&XBACK              SETC  '31'        SET DEFAULT KEYWORD               00371500
.ZG42C              ANOP  ,                                             00371600
&ZXBACK             SETC  'INPUT'     SET IN/OUTPUT                     00371700
.*----------------------------------------------------------------***   00371800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00371900
                    AIF   (N'&PAGEFRAMESIZE LE 1).ZG44A  CK NUM         00372000
&ZMS                SETC  '"PAGEFRAMESIZE='                             00372100
&ZMS                SETC  '&ZMS.&PAGEFRAMESIZE"'                        00372200
&ZMS                SETC  '&ZMS "PAGEFRAMESIZE"'                        00372300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00372400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00372500
.ZG44A              ANOP  ,                                             00372600
.*-------------------------------------------------------------------   00372700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00372800
&XPAGEFRAMESIZE     SETC  ''          INITIALIZE XVARIABLE              00372900
.ZG45A   AIF   ('&PAGEFRAMESIZE(1)' NE '4K').ZG46A                      00373000
&XPAGEFRAMESIZE     SETC  '4K'        SET KEYWORD                       00373100
.*-------------------------------------------------------------------   00373200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00373300
.ZG46A   AIF   ('&PAGEFRAMESIZE(1)' NE '1M').ZG47A                      00373400
&XPAGEFRAMESIZE     SETC  '1M'        SET KEYWORD                       00373500
.*-------------------------------------------------------------------   00373600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00373700
.ZG47A              AIF   (K'&XPAGEFRAMESIZE GT 0).ZG47C  KEYWORD       00373800
                    AIF   (K'&PAGEFRAMESIZE(1) LE 0).ZG47B              00373900
&ZMS                SETC  '"PAGEFRAMESIZE='                             00374000
&ZMS                SETC  '&ZMS.&PAGEFRAMESIZE"'                        00374100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00374200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00374300
&ZMS                SETC  '&ZMS "4K"'                                   00374400
&ZMS                SETC  '&ZMS OR "1M".'                               00374500
                    MNOTE 8,' &ZMS '                                    00374600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00374700
.ZG47B              ANOP  ,                                             00374800
&XPAGEFRAMESIZE     SETC  '4K'        SET DEFAULT KEYWORD               00374900
.ZG47C              ANOP  ,                                             00375000
&ZXPAGEFRAMESIZE    SETC  'INPUT'     SET IN/OUTPUT                     00375100
.*------------------------------------------------------------------    00375200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00375300
&XHIDEZERO          SETC  ''          INITIALIZE XVARIABLE              00375400
.*-------------------------------------------------------------------   00375500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00375600
.ZG50               ANOP  ,                                             00375700
                    AIF   (K'&HIDEZERO(1) LE 0).ZG50A                   00375800
&ZTLC               SETC 'NO'                                           00375900
                    AIF   ('&HIDEZERO(1)' NE '&ZTLC').ZG51              00376000
&XHIDEZERO          SETC  'NO'        SET KEYWORD                       00376100
                    AIF   (N'&HIDEZERO LE 1).ZG50A  CK NUM              00376200
&ZMS                SETC  '"HIDEZERO='                                  00376300
&ZMS                SETC  '&ZMS.&HIDEZERO"'                             00376400
&ZMS                SETC  '&ZMS "HIDEZERO"'                             00376500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00376600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00376700
.ZG50A              ANOP  ,                                             00376800
.*-------------------------------------------------------------------   00376900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00377000
.ZG51               ANOP  ,                                             00377100
&ZTLC               SETC 'YES'                                          00377200
                    AIF   ('&HIDEZERO(1)' NE '&ZTLC').ZG52              00377300
&XHIDEZERO          SETC  'YES'       SET KEYWORD                       00377400
                    AIF   (N'&HIDEZERO LE 1).ZG51A  CK NUM              00377500
&ZMS                SETC  '"HIDEZERO='                                  00377600
&ZMS                SETC  '&ZMS.&HIDEZERO"'                             00377700
&ZMS                SETC  '&ZMS "HIDEZERO"'                             00377800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00377900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00378000
.ZG51A              ANOP  ,                                             00378100
.*------------------------------------------------------------------    00378200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00378300
.ZG52               ANOP  ,                                             00378400
&ZXHIDEZERO         SETC  'INPUT'     SET IN/OUTPUT                     00378500
                    AIF   (K'&XHIDEZERO GT 0).ZG52E  VALID ARG          00378600
                    AIF   (T'&HIDEZERO EQ 'O').ZG52D  OMITTED           00378700
&ZASYSLNDX          SETA  0                                             00378800
.ZG52A              ANOP  ,           POSITIONAL MACRO KEY              00378900
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00379000
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG52C              00379100
&ZTLC               SETC 'HIDEZERO'                                     00379200
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG52A     00379300
.ZG52B              ANOP  ,                                             00379400
&ZXHIDEZERO         SETC  ''          RESET IN/OUTPUT                   00379500
&ZMS                SETC  'THE "HIDEZERO" KEY'                          00379600
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00379700
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00379800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00379900
                    AGO   .ZG52E                                        00380000
.ZG52C              ANOP  ,                                             00380100
&ZXHIDEZERO         SETC  ''          RESET IN/OUTPUT                   00380200
&ZMS                SETC  '"HIDEZERO='                                  00380300
&ZMS                SETC  '&ZMS.&HIDEZERO"'                             00380400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00380500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00380600
&ZMS                SETC  '&ZMS "NO"'                                   00380700
&ZMS                SETC  '&ZMS OR "YES".'                              00380800
                    MNOTE 8,' &ZMS '                                    00380900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00381000
                    AGO   .ZG52E                                        00381100
.ZG52D              ANOP  ,                                             00381200
&XHIDEZERO          SETC  'NO'        SET DEFAULT KEYWORD               00381300
.ZG52E              ANOP  ,                                             00381400
.*-------------------------------------------------------------------   00381500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00381600
.ZG53               ANOP  ,                                             00381700
&ZTLC               SETC 'HIPERSPACE'                                   00381800
                    AIF   ('&TYPE(1)' NE '&ZTLC').ZG69                  00381900
&XTYPE              SETC  'HIPERSPACE'          SET KEYWORD             00382000
                    AIF   (N'&TYPE LE 1).ZG53A  CK NUM                  00382100
&ZMS                SETC  '"TYPE='                                      00382200
&ZMS                SETC  '&ZMS.&TYPE"'                                 00382300
&ZMS                SETC  '&ZMS "TYPE"'                                 00382400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00382500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00382600
.ZG53A              ANOP  ,                                             00382700
.*------------------------------------------------------------------    00382800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00382900
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00383000
.ZG53A0             AIF   (K'&DREF LE 0).ZG53A1  OK                     00383100
&ZCVAL              SETC '&ZCVAL DREF'          INCORRECT KEY USED      00383200
.ZG53A1             AIF   (K'&SCOPE LE 0).ZG53A2  OK                    00383300
&ZCVAL              SETC '&ZCVAL SCOPE'         INCORRECT KEY USED      00383400
.ZG53A2             AIF   (K'&BACK LE 0).ZG53A3  OK                     00383500
&ZCVAL              SETC '&ZCVAL BACK'          INCORRECT KEY USED      00383600
.ZG53A3             AIF   (K'&PAGEFRAMESIZE LE 0).ZG53A4  OK            00383700
&ZCVAL              SETC '&ZCVAL PAGEFRAMESIZE'  INCORRECT KEY USED     00383800
.ZG53A4             AIF   (K'&HIDEZERO LE 0).ZG53A5  OK                 00383900
&ZCVAL              SETC '&ZCVAL HIDEZERO'      INCORRECT KEY USED      00384000
.ZG53A5             AIF   (K'&ZCVAL LE 0).ZG53A6  OK                    00384100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00384200
&ZMS                SETC  '"TYPE'                                       00384300
&ZMS                SETC  '&ZMS.=&TYPE"'                                00384400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00384500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00384600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00384700
.ZG53A6             ANOP  ,                                             00384800
.*------------------------------------------------------------------    00384900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00385000
&XHSTYPE            SETC  ''          INITIALIZE XVARIABLE              00385100
.*-------------------------------------------------------------------   00385200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00385300
.ZG56               ANOP  ,                                             00385400
                    AIF   (K'&HSTYPE(1) LE 0).ZG56A                     00385500
&ZTLC               SETC 'SCROLL'                                       00385600
                    AIF   ('&HSTYPE(1)' NE '&ZTLC').ZG62                00385700
&XHSTYPE            SETC  'SCROLL'    SET KEYWORD                       00385800
                    AIF   (N'&HSTYPE LE 1).ZG56A  CK NUM                00385900
&ZMS                SETC  '"HSTYPE='                                    00386000
&ZMS                SETC  '&ZMS.&HSTYPE"'                               00386100
&ZMS                SETC  '&ZMS "HSTYPE"'                               00386200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00386300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00386400
.ZG56A              ANOP  ,                                             00386500
.*------------------------------------------------------------------    00386600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00386700
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00386800
.ZG56A0             AIF   (K'&CASTOUT LE 0).ZG56A1  OK                  00386900
&ZCVAL              SETC '&ZCVAL CASTOUT'       INCORRECT KEY USED      00387000
.ZG56A1             AIF   (K'&ZCVAL LE 0).ZG56A2  OK                    00387100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00387200
&ZMS                SETC  '"HSTYPE'                                     00387300
&ZMS                SETC  '&ZMS.=&HSTYPE"'                              00387400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00387500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00387600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00387700
.ZG56A2             ANOP  ,                                             00387800
.*----------------------------------------------------------------***   00387900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00388000
                    AIF   (N'&SHARE LE 1).ZG58A  CK NUM                 00388100
&ZMS                SETC  '"SHARE='                                     00388200
&ZMS                SETC  '&ZMS.&SHARE"'                                00388300
&ZMS                SETC  '&ZMS "SHARE"'                                00388400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00388500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00388600
.ZG58A              ANOP  ,                                             00388700
.*-------------------------------------------------------------------   00388800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00388900
&XSHARE             SETC  ''          INITIALIZE XVARIABLE              00389000
.ZG59A   AIF   ('&SHARE(1)' NE 'NO').ZG60A                              00389100
&XSHARE             SETC  'NO'        SET KEYWORD                       00389200
.*-------------------------------------------------------------------   00389300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00389400
.ZG60A   AIF   ('&SHARE(1)' NE 'YES').ZG61A                             00389500
&XSHARE             SETC  'YES'       SET KEYWORD                       00389600
.*-------------------------------------------------------------------   00389700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00389800
.ZG61A              AIF   (K'&XSHARE GT 0).ZG61C  KEYWORD               00389900
                    AIF   (K'&SHARE(1) LE 0).ZG61B                      00390000
&ZMS                SETC  '"SHARE='                                     00390100
&ZMS                SETC  '&ZMS.&SHARE"'                                00390200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00390300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00390400
&ZMS                SETC  '&ZMS "NO"'                                   00390500
&ZMS                SETC  '&ZMS OR "YES".'                              00390600
                    MNOTE 8,' &ZMS '                                    00390700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00390800
.ZG61B              ANOP  ,                                             00390900
&XSHARE             SETC  'NO'        SET DEFAULT KEYWORD               00391000
.ZG61C              ANOP  ,                                             00391100
&ZXSHARE            SETC  'INPUT'     SET IN/OUTPUT                     00391200
.*-------------------------------------------------------------------   00391300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00391400
.ZG62               ANOP  ,                                             00391500
&ZTLC               SETC 'CACHE'                                        00391600
                    AIF   ('&HSTYPE(1)' NE '&ZTLC').ZG68                00391700
&XHSTYPE            SETC  'CACHE'     SET KEYWORD                       00391800
                    AIF   (N'&HSTYPE LE 1).ZG62A  CK NUM                00391900
&ZMS                SETC  '"HSTYPE='                                    00392000
&ZMS                SETC  '&ZMS.&HSTYPE"'                               00392100
&ZMS                SETC  '&ZMS "HSTYPE"'                               00392200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00392300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00392400
.ZG62A              ANOP  ,                                             00392500
.*------------------------------------------------------------------    00392600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00392700
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00392800
.ZG62A0             AIF   (K'&SHARE LE 0).ZG62A1  OK                    00392900
&ZCVAL              SETC '&ZCVAL SHARE'         INCORRECT KEY USED      00393000
.ZG62A1             AIF   (K'&ZCVAL LE 0).ZG62A2  OK                    00393100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00393200
&ZMS                SETC  '"HSTYPE'                                     00393300
&ZMS                SETC  '&ZMS.=&HSTYPE"'                              00393400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00393500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00393600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00393700
.ZG62A2             ANOP  ,                                             00393800
.*----------------------------------------------------------------***   00393900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00394000
                    AIF   (N'&CASTOUT LE 1).ZG64A  CK NUM               00394100
&ZMS                SETC  '"CASTOUT='                                   00394200
&ZMS                SETC  '&ZMS.&CASTOUT"'                              00394300
&ZMS                SETC  '&ZMS "CASTOUT"'                              00394400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00394500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00394600
.ZG64A              ANOP  ,                                             00394700
.*-------------------------------------------------------------------   00394800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00394900
&XCASTOUT           SETC  ''          INITIALIZE XVARIABLE              00395000
.ZG65A   AIF   ('&CASTOUT(1)' NE 'YES').ZG66A                           00395100
&XCASTOUT           SETC  'YES'       SET KEYWORD                       00395200
.*-------------------------------------------------------------------   00395300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00395400
.ZG66A   AIF   ('&CASTOUT(1)' NE 'NO').ZG67A                            00395500
&XCASTOUT           SETC  'NO'        SET KEYWORD                       00395600
.*-------------------------------------------------------------------   00395700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00395800
.ZG67A              AIF   (K'&XCASTOUT GT 0).ZG67C  KEYWORD             00395900
                    AIF   (K'&CASTOUT(1) LE 0).ZG67B                    00396000
&ZMS                SETC  '"CASTOUT='                                   00396100
&ZMS                SETC  '&ZMS.&CASTOUT"'                              00396200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00396300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00396400
&ZMS                SETC  '&ZMS "YES"'                                  00396500
&ZMS                SETC  '&ZMS OR "NO".'                               00396600
                    MNOTE 8,' &ZMS '                                    00396700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00396800
.ZG67B              ANOP  ,                                             00396900
&XCASTOUT           SETC  'YES'       SET DEFAULT KEYWORD               00397000
.ZG67C              ANOP  ,                                             00397100
&ZXCASTOUT          SETC  'INPUT'     SET IN/OUTPUT                     00397200
.*------------------------------------------------------------------    00397300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00397400
.ZG68               ANOP  ,                                             00397500
&ZXHSTYPE           SETC  'INPUT'     SET IN/OUTPUT                     00397600
                    AIF   (K'&XHSTYPE GT 0).ZG68E  VALID ARG            00397700
                    AIF   (T'&HSTYPE EQ 'O').ZG68D  OMITTED             00397800
&ZASYSLNDX          SETA  0                                             00397900
.ZG68A              ANOP  ,           POSITIONAL MACRO KEY              00398000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00398100
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG68C              00398200
&ZTLC               SETC 'HSTYPE'                                       00398300
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG68A     00398400
.ZG68B              ANOP  ,                                             00398500
&ZXHSTYPE           SETC  ''          RESET IN/OUTPUT                   00398600
&ZMS                SETC  'THE "HSTYPE" KEY'                            00398700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00398800
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00398900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00399000
                    AGO   .ZG68E                                        00399100
.ZG68C              ANOP  ,                                             00399200
&ZXHSTYPE           SETC  ''          RESET IN/OUTPUT                   00399300
&ZMS                SETC  '"HSTYPE='                                    00399400
&ZMS                SETC  '&ZMS.&HSTYPE"'                               00399500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00399600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00399700
&ZMS                SETC  '&ZMS "SCROLL"'                               00399800
&ZMS                SETC  '&ZMS OR "CACHE".'                            00399900
                    MNOTE 8,' &ZMS '                                    00400000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00400100
                    AGO   .ZG68E                                        00400200
.ZG68D              ANOP  ,                                             00400300
&XHSTYPE            SETC  'SCROLL'    SET DEFAULT KEYWORD               00400400
.ZG68E              ANOP  ,                                             00400500
.*------------------------------------------------------------------    00400600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00400700
.ZG69               ANOP  ,                                             00400800
&ZXTYPE             SETC  'INPUT'     SET IN/OUTPUT                     00400900
                    AIF   (K'&XTYPE GT 0).ZG69E  VALID ARG              00401000
                    AIF   (T'&TYPE EQ 'O').ZG69D  OMITTED               00401100
&ZASYSLNDX          SETA  0                                             00401200
.ZG69A              ANOP  ,           POSITIONAL MACRO KEY              00401300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00401400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C              00401500
&ZTLC               SETC 'TYPE'                                         00401600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG69A     00401700
.ZG69B              ANOP  ,                                             00401800
&ZXTYPE             SETC  ''          RESET IN/OUTPUT                   00401900
&ZMS                SETC  'THE "TYPE" KEY'                              00402000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00402100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00402200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00402300
                    AGO   .ZG69E                                        00402400
.ZG69C              ANOP  ,                                             00402500
&ZXTYPE             SETC  ''          RESET IN/OUTPUT                   00402600
&ZMS                SETC  '"TYPE='                                      00402700
&ZMS                SETC  '&ZMS.&TYPE"'                                 00402800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00402900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00403000
&ZMS                SETC  '&ZMS "BASIC"'                                00403100
&ZMS                SETC  '&ZMS OR "HIPERSPACE".'                       00403200
                    MNOTE 8,' &ZMS '                                    00403300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00403400
                    AGO   .ZG69E                                        00403500
.ZG69D              ANOP  ,                                             00403600
&XTYPE              SETC  'BASIC'     SET DEFAULT KEYWORD               00403700
.ZG69E              ANOP  ,                                             00403800
.*-------------------------------------------------------------------   00403900
.***AG.KMEKY05 NAME, OPT INPUT, ME KEYS -NO ARGUMENTS                   00404000
&XKEYSPEC           SETC  ''          INITIALIZE XVARIABLE              00404100
&ZASYSLNDX          SETA  0                                             00404200
.ZG71A              ANOP  ,           POSITIONAL KEY SEARCH             00404300
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00404400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG71B  DONE                   00404500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG71A            00404600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CALLERKEY').ZG71A            00404700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00404800
&ZXKEYSPEC          SETC  'INPUT'     SET IN/OUTPUT                     00404900
&XKEYSPEC           SETC  'CALLERKEY'           SET XVARIABLE           00405000
&ZXCALLERKEY        SETC  'INPUT'     SET IN/OUTPUT                     00405100
&XCALLERKEY         SETC  'CALLERKEY'           SET XVARIABLE PARM      00405200
.ZG71B              ANOP  ,                                             00405300
.*----------------------------------------------------------------***   00405400
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00405500
                    AIF   (K'&KEY LE 0).ZG72D   NO ME KEY               00405600
                    AIF   (N'&KEY LE 1).ZG72A   CK NUM                  00405700
&ZMS                SETC  '"KEY='                                       00405800
&ZMS                SETC  '&ZMS.&KEY"'                                  00405900
&ZMS                SETC  '&ZMS "KEY"'                                  00406000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00406100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00406200
.ZG72A              AIF   (K'&XKEYSPEC LE 0).ZG72B                      00406300
&ZMS                SETC  '"KEY'                                        00406400
&ZMS                SETC  '&ZMS.=&KEY"'                                 00406500
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00406600
&ZMS                SETC  '&ZMS "&XKEYSPEC"'                            00406700
                    MNOTE 8,' &ZMS KEY.'                                00406800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00406900
                    AGO   .ZG72D                                        00407000
.*                                                                      00407100
.ZG72B              ANOP  ,                                             00407200
&ZXKEYSPEC          SETC  'INPUT'     SET IN/OUTPUT                     00407300
&XKEYSPEC           SETC  'KEY'       SET XVARIABLE                     00407400
&ZXKEY              SETC  'INPUT'     SET IN/OUTPUT                     00407500
&XKEY               SETC  '&KEY(1)'   SET XVARIABLE PARM                00407600
                    AIF   (N'&KEY GT 1).ZG72C                           00407700
&XKEY               SETC  '&KEY'      SET XVARIABLE PARM                00407800
.ZG72C              AIF   (K'&XKEY GT 0).ZG72D  ONE PARM                00407900
&ZXKEYSPEC          SETC  ''          RESET IN/OUTPUT                   00408000
&ZXKEY              SETC  ''          RESET IN/OUTPUT                   00408100
&ZMS                SETC  'WHEN "CREATE" IS SPECIFIED'                  00408200
&ZMS                SETC  '&ZMS , "KEY" KEY AND ITS'                    00408300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00408400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00408500
.ZG72D              ANOP  ,                                             00408600
.*------------------------------------------------------------------    00408700
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00408800
                    AIF   (K'&XKEYSPEC GT 0).ZG73B                      00408900
&ZXKEYSPEC          SETC  'INPUT'     SET IN/OUTPUT                     00409000
&XKEYSPEC           SETC  'CALLERKEY'           SET DEFAULT             00409100
&ZXCALLERKEY        SETC  'INPUT'     SET IN/OUTPUT                     00409200
&XCALLERKEY         SETC  'CALLERKEY'           SET DEFAULT PARM        00409300
.ZG73B              ANOP  ,                                             00409400
.*-------------------------------------------------------------------   00409500
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00409600
                    AIF   (K'&ZXKEY LE 0).ZG73R  NOT I/O                00409700
         AIF   ('&XKEY' EQ 'CALLERKEY').ZG73R                           00409800
                    AIF   ('&XKEY'(1,1) NE '(').ZG73R                   00409900
&ZCGPR              SETC  '&XKEY'(2,K'&XKEY-2)                          00410000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG73P                  00410100
                    AIF   (K'&ZCGPR GT 2).ZG73Q                         00410200
                    AIF   ('&ZCGPR' EQ '0').ZG73Q                       00410300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00410400
                    AIF   (T'&ZCGPR NE 'N').ZG73Q  INVALID REG NAME     00410500
.ZG73P              ANOP  ,                                             00410600
                    AIF   (T'&ZCGPR NE 'N').ZG73R  NON NUMERIC          00410700
                    AIF   ('&ZCGPR' LT '2').ZG73Q                       00410800
                    AIF   ('&ZCGPR' LE '12').ZG73R                      00410900
.ZG73Q              ANOP  ,                                             00411000
&ZMS                SETC  '"KEY='                                       00411100
&ZMS                SETC  '&ZMS.&KEY"'                                  00411200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00411300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00411400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00411500
.ZG73R              ANOP  ,                                             00411600
.*-------------------------------------------------------------------   00411700
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00411800
.ZG71ZY  AIF    ('&XKEYSPEC' NE 'CALLERKEY').ZG72ZY                     00411900
.*-------------------------------------------------------------------   00412000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00412100
.ZG72ZY  AIF    ('&XKEYSPEC' NE 'KEY').ZG73ZY                           00412200
.*-------------------------------------------------------------------   00412300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00412400
                    AIF   (K'&ZXKEY LE 0).ZG72R  NOT I/O                00412500
                    AIF   ('&XKEY'(1,1) NE '(').ZG72R                   00412600
&ZCGPR              SETC  '&XKEY'(2,K'&XKEY-2)                          00412700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                  00412800
                    AIF   (K'&ZCGPR GT 2).ZG72Q                         00412900
                    AIF   ('&ZCGPR' EQ '0').ZG72Q                       00413000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00413100
                    AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME     00413200
.ZG72P              ANOP  ,                                             00413300
                    AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC          00413400
                    AIF   ('&ZCGPR' LT '2').ZG72Q                       00413500
                    AIF   ('&ZCGPR' LE '12').ZG72R                      00413600
.ZG72Q              ANOP  ,                                             00413700
&ZMS                SETC  '"KEY='                                       00413800
&ZMS                SETC  '&ZMS.&KEY"'                                  00413900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00414000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00414100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00414200
.ZG72R              ANOP  ,                                             00414300
.*-------------------------------------------------------------------   00414400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00414500
.ZG73ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00414600
.*----------------------------------------------------------------***   00414700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00414800
                    AIF   (N'&FPROT LE 1).ZG75A  CK NUM                 00414900
&ZMS                SETC  '"FPROT='                                     00415000
&ZMS                SETC  '&ZMS.&FPROT"'                                00415100
&ZMS                SETC  '&ZMS "FPROT"'                                00415200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00415300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00415400
.ZG75A              ANOP  ,                                             00415500
.*-------------------------------------------------------------------   00415600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00415700
&XFPROT             SETC  ''          INITIALIZE XVARIABLE              00415800
.ZG76A   AIF   ('&FPROT(1)' NE 'YES').ZG77A                             00415900
&XFPROT             SETC  'YES'       SET KEYWORD                       00416000
.*-------------------------------------------------------------------   00416100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00416200
.ZG77A   AIF   ('&FPROT(1)' NE 'NO').ZG78A                              00416300
&XFPROT             SETC  'NO'        SET KEYWORD                       00416400
.*-------------------------------------------------------------------   00416500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00416600
.ZG78A              AIF   (K'&XFPROT GT 0).ZG78C  KEYWORD               00416700
                    AIF   (K'&FPROT(1) LE 0).ZG78B                      00416800
&ZMS                SETC  '"FPROT='                                     00416900
&ZMS                SETC  '&ZMS.&FPROT"'                                00417000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00417100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00417200
&ZMS                SETC  '&ZMS "YES"'                                  00417300
&ZMS                SETC  '&ZMS OR "NO".'                               00417400
                    MNOTE 8,' &ZMS '                                    00417500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00417600
.ZG78B              ANOP  ,                                             00417700
&XFPROT             SETC  'YES'       SET DEFAULT KEYWORD               00417800
.ZG78C              ANOP  ,                                             00417900
&ZXFPROT            SETC  'INPUT'     SET IN/OUTPUT                     00418000
.*----------------------------------------------------------------***   00418100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00418200
                    AIF   (N'&TTOKEN LE 1).ZG80A  CK NUM                00418300
&ZMS                SETC  '"TTOKEN='                                    00418400
&ZMS                SETC  '&ZMS.&TTOKEN"'                               00418500
&ZMS                SETC  '&ZMS "TTOKEN"'                               00418600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00418700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00418800
.ZG80A              ANOP  ,                                             00418900
.*-------------------------------------------------------------------   00419000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00419100
&ZXTTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00419200
&XTTOKEN            SETC  '0'                                           00419300
                    AIF   (K'&TTOKEN(1) LE 0).ZG80B  PARM               00419400
&XTTOKEN            SETC  '&TTOKEN(1)'          SET XVARIABLE           00419500
                    AIF   (N'&TTOKEN GT 1).ZG80B  MULTI                 00419600
&XTTOKEN            SETC  '&TTOKEN'   SET XVARIABLE                     00419700
.ZG80B              ANOP  ,                                             00419800
.*-------------------------------------------------------------------   00419900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00420000
                    AIF   (K'&ZXTTOKEN LE 0).ZG80R  NOT I/O             00420100
         AIF   ('&XTTOKEN' EQ '0').ZG80R                                00420200
                    AIF   ('&XTTOKEN'(1,1) NE '(').ZG80R                00420300
&ZCGPR              SETC  '&XTTOKEN'(2,K'&XTTOKEN-2)                    00420400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                  00420500
                    AIF   (K'&ZCGPR GT 2).ZG80Q                         00420600
                    AIF   ('&ZCGPR' EQ '0').ZG80Q                       00420700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00420800
                    AIF   (T'&ZCGPR NE 'N').ZG80Q  INVALID REG NAME     00420900
.ZG80P              ANOP  ,                                             00421000
                    AIF   (T'&ZCGPR NE 'N').ZG80R  NON NUMERIC          00421100
                    AIF   ('&ZCGPR' LT '2').ZG80Q                       00421200
                    AIF   ('&ZCGPR' LE '12').ZG80R                      00421300
.ZG80Q              ANOP  ,                                             00421400
&ZMS                SETC  '"TTOKEN='                                    00421500
&ZMS                SETC  '&ZMS.&TTOKEN"'                               00421600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00421700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00421800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00421900
.ZG80R              ANOP  ,                                             00422000
.*----------------------------------------------------------------***   00422100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00422200
                    AIF   (N'&STOKEN LE 1).ZG83A  CK NUM                00422300
&ZMS                SETC  '"STOKEN='                                    00422400
&ZMS                SETC  '&ZMS.&STOKEN"'                               00422500
&ZMS                SETC  '&ZMS "STOKEN"'                               00422600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00422700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00422800
.ZG83A              ANOP  ,                                             00422900
.*-------------------------------------------------------------------   00423000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00423100
&ZXSTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                     00423200
&XSTOKEN            SETC  '&STOKEN(1)'          SET XVARIABLE           00423300
                    AIF   (N'&STOKEN GT 1).ZG83B  MULTI                 00423400
&XSTOKEN            SETC  '&STOKEN'   SET XVARIABLE                     00423500
.ZG83B              AIF   (K'&STOKEN(1) GT 0).ZG83C                     00423600
&ZXSTOKEN           SETC  ''          RESET IN/OUTPUT                   00423700
&ZMS                SETC  ' '                                           00423800
&ZMS                SETC  '&ZMS "STOKEN" KEY AND ITS'                   00423900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00424000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00424100
.ZG83C              ANOP  ,                                             00424200
.*-------------------------------------------------------------------   00424300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00424400
                    AIF   (K'&ZXSTOKEN LE 0).ZG83R  NOT I/O             00424500
                    AIF   ('&XSTOKEN'(1,1) NE '(').ZG83R                00424600
&ZCGPR              SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                    00424700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                  00424800
                    AIF   (K'&ZCGPR GT 2).ZG83Q                         00424900
                    AIF   ('&ZCGPR' EQ '0').ZG83Q                       00425000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00425100
                    AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME     00425200
.ZG83P              ANOP  ,                                             00425300
                    AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC          00425400
                    AIF   ('&ZCGPR' LT '2').ZG83Q                       00425500
                    AIF   ('&ZCGPR' LE '12').ZG83R                      00425600
.ZG83Q              ANOP  ,                                             00425700
&ZMS                SETC  '"STOKEN='                                    00425800
&ZMS                SETC  '&ZMS.&STOKEN"'                               00425900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00426000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00426100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00426200
.ZG83R              ANOP  ,                                             00426300
.*----------------------------------------------------------------***   00426400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00426500
                    AIF   (N'&ORIGIN LE 1).ZG86A  CK NUM                00426600
&ZMS                SETC  '"ORIGIN='                                    00426700
&ZMS                SETC  '&ZMS.&ORIGIN"'                               00426800
&ZMS                SETC  '&ZMS "ORIGIN"'                               00426900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00427000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00427100
.ZG86A              ANOP  ,                                             00427200
.*-------------------------------------------------------------------   00427300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00427400
                    AIF   (K'&ORIGIN(1) LE 0).ZG86C  NO PARM            00427500
&ZXORIGIN           SETC  'OUTPUT'    SET OUTPUT                        00427600
&XORIGIN            SETC  '&ORIGIN(1)'          SET XVARIABLE           00427700
                    AIF   (N'&ORIGIN GT 1).ZG86C                        00427800
&XORIGIN            SETC  '&ORIGIN'   SET XVARIABLE                     00427900
.ZG86C              ANOP  ,                                             00428000
.*-------------------------------------------------------------------   00428100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00428200
                    AIF   (K'&ZXORIGIN LE 0).ZG86R  NOT I/O             00428300
                    AIF   ('&XORIGIN'(1,1) NE '(').ZG86R                00428400
&ZCGPR              SETC  '&XORIGIN'(2,K'&XORIGIN-2)                    00428500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                  00428600
                    AIF   (K'&ZCGPR GT 2).ZG86Q                         00428700
                    AIF   ('&ZCGPR' EQ '0').ZG86Q                       00428800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00428900
                    AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME     00429000
.ZG86P              ANOP  ,                                             00429100
                    AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC          00429200
                    AIF   ('&ZCGPR' LT '2').ZG86Q                       00429300
                    AIF   ('&ZCGPR' LE '12').ZG86R                      00429400
.ZG86Q              ANOP  ,                                             00429500
&ZMS                SETC  '"ORIGIN='                                    00429600
&ZMS                SETC  '&ZMS.&ORIGIN"'                               00429700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00429800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00429900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00430000
.ZG86R              ANOP  ,                                             00430100
.*----------------------------------------------------------------***   00430200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00430300
                    AIF   (N'&NUMBLKS LE 1).ZG89A  CK NUM               00430400
&ZMS                SETC  '"NUMBLKS='                                   00430500
&ZMS                SETC  '&ZMS.&NUMBLKS"'                              00430600
&ZMS                SETC  '&ZMS "NUMBLKS"'                              00430700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00430800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00430900
.ZG89A              ANOP  ,                                             00431000
.*-------------------------------------------------------------------   00431100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00431200
                    AIF   (K'&NUMBLKS(1) LE 0).ZG89C  NO PARM           00431300
&ZXNUMBLKS          SETC  'OUTPUT'    SET OUTPUT                        00431400
&XNUMBLKS           SETC  '&NUMBLKS(1)'         SET XVARIABLE           00431500
                    AIF   (N'&NUMBLKS GT 1).ZG89C                       00431600
&XNUMBLKS           SETC  '&NUMBLKS'  SET XVARIABLE                     00431700
.ZG89C              ANOP  ,                                             00431800
.*-------------------------------------------------------------------   00431900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00432000
                    AIF   (K'&ZXNUMBLKS LE 0).ZG89R  NOT I/O            00432100
                    AIF   ('&XNUMBLKS'(1,1) NE '(').ZG89R               00432200
&ZCGPR              SETC  '&XNUMBLKS'(2,K'&XNUMBLKS-2)                  00432300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                  00432400
                    AIF   (K'&ZCGPR GT 2).ZG89Q                         00432500
                    AIF   ('&ZCGPR' EQ '0').ZG89Q                       00432600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00432700
                    AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME     00432800
.ZG89P              ANOP  ,                                             00432900
                    AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC          00433000
                    AIF   ('&ZCGPR' LT '2').ZG89Q                       00433100
                    AIF   ('&ZCGPR' LE '12').ZG89R                      00433200
.ZG89Q              ANOP  ,                                             00433300
&ZMS                SETC  '"NUMBLKS='                                   00433400
&ZMS                SETC  '&ZMS.&NUMBLKS"'                              00433500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00433600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00433700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00433800
.ZG89R              ANOP  ,                                             00433900
.*----------------------------------------------------------------***   00434000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00434100
                    AIF   (N'&CRITICALPAGING LE 1).ZG92A  CK NUM        00434200
&ZMS                SETC  '"CRITICALPAGING='                            00434300
&ZMS                SETC  '&ZMS.&CRITICALPAGING"'                       00434400
&ZMS                SETC  '&ZMS "CRITICALPAGING"'                       00434500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00434600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00434700
.ZG92A              ANOP  ,                                             00434800
.*-------------------------------------------------------------------   00434900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00435000
&XCRITICALPAGING    SETC  ''          INITIALIZE XVARIABLE              00435100
.ZG93A   AIF   ('&CRITICALPAGING(1)' NE 'YES').ZG94A                    00435200
&XCRITICALPAGING    SETC  'YES'       SET KEYWORD                       00435300
.*-------------------------------------------------------------------   00435400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00435500
.ZG94A   AIF   ('&CRITICALPAGING(1)' NE 'NO').ZG95A                     00435600
&XCRITICALPAGING    SETC  'NO'        SET KEYWORD                       00435700
.*-------------------------------------------------------------------   00435800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00435900
.ZG95A              AIF   (K'&XCRITICALPAGING GT 0).ZG95C  KEYWORD      00436000
                    AIF   (K'&CRITICALPAGING(1) LE 0).ZG95B             00436100
&ZMS                SETC  '"CRITICALPAGING='                            00436200
&ZMS                SETC  '&ZMS.&CRITICALPAGING"'                       00436300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00436400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00436500
&ZMS                SETC  '&ZMS "YES"'                                  00436600
&ZMS                SETC  '&ZMS OR "NO".'                               00436700
                    MNOTE 8,' &ZMS '                                    00436800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00436900
.ZG95B              ANOP  ,                                             00437000
&XCRITICALPAGING    SETC  'YES'       SET DEFAULT KEYWORD               00437100
.ZG95C              ANOP  ,                                             00437200
&ZXCRITICALPAGING   SETC  'INPUT'     SET IN/OUTPUT                     00437300
.*-------------------------------------------------------------------   00437400
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00437500
.ZG96ZY  AIF    ('&XSERVICE' NE 'DELETE').ZG103ZY                       00437600
.*-------------------------------------------------------------------   00437700
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00437800
&ZCVAL              SETC ''           ERROR KEY FIELD                   00437900
.ZG96I0             AIF   (K'&NAME LE 0).ZG96I1                         00438000
&ZCVAL              SETC '&ZCVAL NAME'          DISALLOWED KEY          00438100
.ZG96I1             AIF   (K'&GENNAME LE 0).ZG96I2                      00438200
&ZCVAL              SETC '&ZCVAL GENNAME'       DISALLOWED KEY          00438300
.ZG96I2             AIF   (K'&OUTNAME LE 0).ZG96I3                      00438400
&ZCVAL              SETC '&ZCVAL OUTNAME'       DISALLOWED KEY          00438500
.ZG96I3             AIF   (K'&BLOCKS LE 0).ZG96I4                       00438600
&ZCVAL              SETC '&ZCVAL BLOCKS'        DISALLOWED KEY          00438700
.ZG96I4             AIF   (K'&TYPE LE 0).ZG96I5                         00438800
&ZCVAL              SETC '&ZCVAL TYPE'          DISALLOWED KEY          00438900
.ZG96I5             AIF   (K'&DREF LE 0).ZG96I6                         00439000
&ZCVAL              SETC '&ZCVAL DREF'          DISALLOWED KEY          00439100
.ZG96I6             AIF   (K'&SCOPE LE 0).ZG96I7                        00439200
&ZCVAL              SETC '&ZCVAL SCOPE'         DISALLOWED KEY          00439300
.ZG96I7             AIF   (K'&BACK LE 0).ZG96I8                         00439400
&ZCVAL              SETC '&ZCVAL BACK'          DISALLOWED KEY          00439500
.ZG96I8             AIF   (K'&PAGEFRAMESIZE LE 0).ZG96I9                00439600
&ZCVAL              SETC '&ZCVAL PAGEFRAMESIZE'  DISALLOWED KEY         00439700
.ZG96I9             AIF   (K'&HIDEZERO LE 0).ZG96I10                    00439800
&ZCVAL              SETC '&ZCVAL HIDEZERO'      DISALLOWED KEY          00439900
.ZG96I10            AIF   (K'&HSTYPE LE 0).ZG96I11                      00440000
&ZCVAL              SETC '&ZCVAL HSTYPE'        DISALLOWED KEY          00440100
.ZG96I11            AIF   (K'&SHARE LE 0).ZG96I12                       00440200
&ZCVAL              SETC '&ZCVAL SHARE'         DISALLOWED KEY          00440300
.ZG96I12            AIF   (K'&CASTOUT LE 0).ZG96I13                     00440400
&ZCVAL              SETC '&ZCVAL CASTOUT'       DISALLOWED KEY          00440500
.ZG96I13            AIF   (K'&XCALLERKEY LE 0).ZG96I14                  00440600
&ZCVAL              SETC '&ZCVAL XCALLERKEY'    DISALLOWED KEY          00440700
.ZG96I14            AIF   (K'&KEY LE 0).ZG96I15                         00440800
&ZCVAL              SETC '&ZCVAL KEY'           DISALLOWED KEY          00440900
.ZG96I15            AIF   (K'&FPROT LE 0).ZG96I16                       00441000
&ZCVAL              SETC '&ZCVAL FPROT'         DISALLOWED KEY          00441100
.ZG96I16            AIF   (K'&ORIGIN LE 0).ZG96I17                      00441200
&ZCVAL              SETC '&ZCVAL ORIGIN'        DISALLOWED KEY          00441300
.ZG96I17            AIF   (K'&NUMBLKS LE 0).ZG96I18                     00441400
&ZCVAL              SETC '&ZCVAL NUMBLKS'       DISALLOWED KEY          00441500
.ZG96I18            AIF   (K'&CRITICALPAGING LE 0).ZG96I19              00441600
&ZCVAL              SETC '&ZCVAL CRITICALPAGING'  DISALLOWED KEY        00441700
.ZG96I19            AIF   (K'&INLIST LE 0).ZG96I20                      00441800
&ZCVAL              SETC '&ZCVAL INLIST'        DISALLOWED KEY          00441900
.ZG96I20            AIF   (K'&START LE 0).ZG96I21                       00442000
&ZCVAL              SETC '&ZCVAL START'         DISALLOWED KEY          00442100
.ZG96I21            AIF   (K'&NUMRANGE LE 0).ZG96I22                    00442200
&ZCVAL              SETC '&ZCVAL NUMRANGE'      DISALLOWED KEY          00442300
.ZG96I22            AIF   (K'&RANGLIST LE 0).ZG96I23                    00442400
&ZCVAL              SETC '&ZCVAL RANGLIST'      DISALLOWED KEY          00442500
.ZG96I23            AIF   (K'&DISABLED LE 0).ZG96I24                    00442600
&ZCVAL              SETC '&ZCVAL DISABLED'      DISALLOWED KEY          00442700
.ZG96I24            AIF   (K'&FREESHAREDSEG LE 0).ZG96I25               00442800
&ZCVAL              SETC '&ZCVAL FREESHAREDSEG'  DISALLOWED KEY         00442900
.ZG96I25            AIF   (K'&KEEPREAL LE 0).ZG96I26                    00443000
&ZCVAL              SETC '&ZCVAL KEEPREAL'      DISALLOWED KEY          00443100
.ZG96I26            AIF   (K'&CLEAR LE 0).ZG96I27                       00443200
&ZCVAL              SETC '&ZCVAL CLEAR'         DISALLOWED KEY          00443300
.ZG96I27            AIF   (K'&XIOON LE 0).ZG96I28                       00443400
&ZCVAL              SETC '&ZCVAL XIOON'         DISALLOWED KEY          00443500
.ZG96I28            AIF   (K'&STEAL LE 0).ZG96I29                       00443600
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00443700
.ZG96I29            AIF   (K'&LONG LE 0).ZG96I30                        00443800
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00443900
.ZG96I30            AIF   (K'&PCIEIO LE 0).ZG96I31                      00444000
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00444100
.ZG96I31            AIF   (K'&DMAPGTPTR LE 0).ZG96I32                   00444200
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00444300
.ZG96I32            AIF   (K'&XIOOFF LE 0).ZG96I33                      00444400
&ZCVAL              SETC '&ZCVAL XIOOFF'        DISALLOWED KEY          00444500
.ZG96I33            AIF   (K'&XDREFON LE 0).ZG96I34                     00444600
&ZCVAL              SETC '&ZCVAL XDREFON'       DISALLOWED KEY          00444700
.ZG96I34            AIF   (K'&XDREFOFF LE 0).ZG96I35                    00444800
&ZCVAL              SETC '&ZCVAL XDREFOFF'      DISALLOWED KEY          00444900
.ZG96I35            AIF   (K'&FORCE LE 0).ZG96I36                       00445000
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00445100
.ZG96I36            AIF   (K'&VAR LE 0).ZG96I37                         00445200
&ZCVAL              SETC '&ZCVAL VAR'           DISALLOWED KEY          00445300
.ZG96I37            AIF   (K'&ZCVAL LE 0).ZG96J  KEY                    00445400
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00445500
                    AIF  (K'&ZCVAL LE 160).ZG96K                        00445600
&ZCVAL              SETC '&ZCVAL'(1,160)                                00445700
&ZCVAL              SETC '&ZCVAL....'                                   00445800
.ZG96K              ANOP                                                00445900
&ZMS                SETC  '"DELETE'                                     00446000
&ZMS                SETC  '&ZMS."'                                      00446100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00446200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00446300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00446400
.ZG96J              ANOP  ,                                             00446500
.*----------------------------------------------------------------***   00446600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00446700
                    AIF   (N'&STOKEN LE 1).ZG98A  CK NUM                00446800
&ZMS                SETC  '"STOKEN='                                    00446900
&ZMS                SETC  '&ZMS.&STOKEN"'                               00447000
&ZMS                SETC  '&ZMS "STOKEN"'                               00447100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00447200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00447300
.ZG98A              ANOP  ,                                             00447400
.*-------------------------------------------------------------------   00447500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00447600
&ZXSTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00447700
&XSTOKEN            SETC  '&STOKEN(1)'          SET XVARIABLE           00447800
                    AIF   (N'&STOKEN GT 1).ZG98B  MULTI                 00447900
&XSTOKEN            SETC  '&STOKEN'   SET XVARIABLE                     00448000
.ZG98B              AIF   (K'&STOKEN(1) GT 0).ZG98C                     00448100
&ZXSTOKEN           SETC  ''          RESET IN/OUTPUT                   00448200
&ZMS                SETC  ' '                                           00448300
&ZMS                SETC  '&ZMS "STOKEN" KEY AND ITS'                   00448400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00448500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00448600
.ZG98C              ANOP  ,                                             00448700
.*-------------------------------------------------------------------   00448800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00448900
                    AIF   (K'&ZXSTOKEN LE 0).ZG98R  NOT I/O             00449000
                    AIF   ('&XSTOKEN'(1,1) NE '(').ZG98R                00449100
&ZCGPR              SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                    00449200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                  00449300
                    AIF   (K'&ZCGPR GT 2).ZG98Q                         00449400
                    AIF   ('&ZCGPR' EQ '0').ZG98Q                       00449500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00449600
                    AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME     00449700
.ZG98P              ANOP  ,                                             00449800
                    AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC          00449900
                    AIF   ('&ZCGPR' LT '2').ZG98Q                       00450000
                    AIF   ('&ZCGPR' LE '12').ZG98R                      00450100
.ZG98Q              ANOP  ,                                             00450200
&ZMS                SETC  '"STOKEN='                                    00450300
&ZMS                SETC  '&ZMS.&STOKEN"'                               00450400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00450500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00450600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00450700
.ZG98R              ANOP  ,                                             00450800
.*----------------------------------------------------------------***   00450900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00451000
                    AIF   (N'&TTOKEN LE 1).ZG101A  CK NUM               00451100
&ZMS                SETC  '"TTOKEN='                                    00451200
&ZMS                SETC  '&ZMS.&TTOKEN"'                               00451300
&ZMS                SETC  '&ZMS "TTOKEN"'                               00451400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00451500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00451600
.ZG101A             ANOP  ,                                             00451700
.*-------------------------------------------------------------------   00451800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00451900
&ZXTTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00452000
&XTTOKEN            SETC  '0'                                           00452100
                    AIF   (K'&TTOKEN(1) LE 0).ZG101B  PARM              00452200
&XTTOKEN            SETC  '&TTOKEN(1)'          SET XVARIABLE           00452300
                    AIF   (N'&TTOKEN GT 1).ZG101B  MULTI                00452400
&XTTOKEN            SETC  '&TTOKEN'   SET XVARIABLE                     00452500
.ZG101B             ANOP  ,                                             00452600
.*-------------------------------------------------------------------   00452700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00452800
                    AIF   (K'&ZXTTOKEN LE 0).ZG101R  NOT I/O            00452900
         AIF   ('&XTTOKEN' EQ '0').ZG101R                               00453000
                    AIF   ('&XTTOKEN'(1,1) NE '(').ZG101R               00453100
&ZCGPR              SETC  '&XTTOKEN'(2,K'&XTTOKEN-2)                    00453200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                 00453300
                    AIF   (K'&ZCGPR GT 2).ZG101Q                        00453400
                    AIF   ('&ZCGPR' EQ '0').ZG101Q                      00453500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00453600
                    AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME    00453700
.ZG101P             ANOP  ,                                             00453800
                    AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC         00453900
                    AIF   ('&ZCGPR' LT '2').ZG101Q                      00454000
                    AIF   ('&ZCGPR' LE '12').ZG101R                     00454100
.ZG101Q             ANOP  ,                                             00454200
&ZMS                SETC  '"TTOKEN='                                    00454300
&ZMS                SETC  '&ZMS.&TTOKEN"'                               00454400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00454500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00454600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00454700
.ZG101R             ANOP  ,                                             00454800
.*-------------------------------------------------------------------   00454900
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00455000
.ZG103ZY  AIF    ('&XSERVICE' NE 'RELEASE').ZG144ZY                     00455100
.*-------------------------------------------------------------------   00455200
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00455300
&ZCVAL              SETC ''           ERROR KEY FIELD                   00455400
.ZG103I0            AIF   (K'&NAME LE 0).ZG103I1                        00455500
&ZCVAL              SETC '&ZCVAL NAME'          DISALLOWED KEY          00455600
.ZG103I1            AIF   (K'&GENNAME LE 0).ZG103I2                     00455700
&ZCVAL              SETC '&ZCVAL GENNAME'       DISALLOWED KEY          00455800
.ZG103I2            AIF   (K'&OUTNAME LE 0).ZG103I3                     00455900
&ZCVAL              SETC '&ZCVAL OUTNAME'       DISALLOWED KEY          00456000
.ZG103I3            AIF   (K'&TYPE LE 0).ZG103I4                        00456100
&ZCVAL              SETC '&ZCVAL TYPE'          DISALLOWED KEY          00456200
.ZG103I4            AIF   (K'&DREF LE 0).ZG103I5                        00456300
&ZCVAL              SETC '&ZCVAL DREF'          DISALLOWED KEY          00456400
.ZG103I5            AIF   (K'&SCOPE LE 0).ZG103I6                       00456500
&ZCVAL              SETC '&ZCVAL SCOPE'         DISALLOWED KEY          00456600
.ZG103I6            AIF   (K'&BACK LE 0).ZG103I7                        00456700
&ZCVAL              SETC '&ZCVAL BACK'          DISALLOWED KEY          00456800
.ZG103I7            AIF   (K'&PAGEFRAMESIZE LE 0).ZG103I8               00456900
&ZCVAL              SETC '&ZCVAL PAGEFRAMESIZE'  DISALLOWED KEY         00457000
.ZG103I8            AIF   (K'&HIDEZERO LE 0).ZG103I9                    00457100
&ZCVAL              SETC '&ZCVAL HIDEZERO'      DISALLOWED KEY          00457200
.ZG103I9            AIF   (K'&HSTYPE LE 0).ZG103I10                     00457300
&ZCVAL              SETC '&ZCVAL HSTYPE'        DISALLOWED KEY          00457400
.ZG103I10           AIF   (K'&SHARE LE 0).ZG103I11                      00457500
&ZCVAL              SETC '&ZCVAL SHARE'         DISALLOWED KEY          00457600
.ZG103I11           AIF   (K'&CASTOUT LE 0).ZG103I12                    00457700
&ZCVAL              SETC '&ZCVAL CASTOUT'       DISALLOWED KEY          00457800
.ZG103I12           AIF   (K'&XCALLERKEY LE 0).ZG103I13                 00457900
&ZCVAL              SETC '&ZCVAL XCALLERKEY'    DISALLOWED KEY          00458000
.ZG103I13           AIF   (K'&KEY LE 0).ZG103I14                        00458100
&ZCVAL              SETC '&ZCVAL KEY'           DISALLOWED KEY          00458200
.ZG103I14           AIF   (K'&FPROT LE 0).ZG103I15                      00458300
&ZCVAL              SETC '&ZCVAL FPROT'         DISALLOWED KEY          00458400
.ZG103I15           AIF   (K'&TTOKEN LE 0).ZG103I16                     00458500
&ZCVAL              SETC '&ZCVAL TTOKEN'        DISALLOWED KEY          00458600
.ZG103I16           AIF   (K'&ORIGIN LE 0).ZG103I17                     00458700
&ZCVAL              SETC '&ZCVAL ORIGIN'        DISALLOWED KEY          00458800
.ZG103I17           AIF   (K'&NUMBLKS LE 0).ZG103I18                    00458900
&ZCVAL              SETC '&ZCVAL NUMBLKS'       DISALLOWED KEY          00459000
.ZG103I18           AIF   (K'&CRITICALPAGING LE 0).ZG103I19             00459100
&ZCVAL              SETC '&ZCVAL CRITICALPAGING'  DISALLOWED KEY        00459200
.ZG103I19           AIF   (K'&XIOON LE 0).ZG103I20                      00459300
&ZCVAL              SETC '&ZCVAL XIOON'         DISALLOWED KEY          00459400
.ZG103I20           AIF   (K'&STEAL LE 0).ZG103I21                      00459500
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00459600
.ZG103I21           AIF   (K'&LONG LE 0).ZG103I22                       00459700
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00459800
.ZG103I22           AIF   (K'&PCIEIO LE 0).ZG103I23                     00459900
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00460000
.ZG103I23           AIF   (K'&DMAPGTPTR LE 0).ZG103I24                  00460100
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00460200
.ZG103I24           AIF   (K'&XIOOFF LE 0).ZG103I25                     00460300
&ZCVAL              SETC '&ZCVAL XIOOFF'        DISALLOWED KEY          00460400
.ZG103I25           AIF   (K'&XDREFON LE 0).ZG103I26                    00460500
&ZCVAL              SETC '&ZCVAL XDREFON'       DISALLOWED KEY          00460600
.ZG103I26           AIF   (K'&XDREFOFF LE 0).ZG103I27                   00460700
&ZCVAL              SETC '&ZCVAL XDREFOFF'      DISALLOWED KEY          00460800
.ZG103I27           AIF   (K'&FORCE LE 0).ZG103I28                      00460900
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00461000
.ZG103I28           AIF   (K'&VAR LE 0).ZG103I29                        00461100
&ZCVAL              SETC '&ZCVAL VAR'           DISALLOWED KEY          00461200
.ZG103I29           AIF   (K'&ZCVAL LE 0).ZG103J  KEY                   00461300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00461400
                    AIF  (K'&ZCVAL LE 160).ZG103K                       00461500
&ZCVAL              SETC '&ZCVAL'(1,160)                                00461600
&ZCVAL              SETC '&ZCVAL....'                                   00461700
.ZG103K             ANOP                                                00461800
&ZMS                SETC  '"RELEASE'                                    00461900
&ZMS                SETC  '&ZMS."'                                      00462000
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00462100
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00462200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00462300
.ZG103J             ANOP  ,                                             00462400
.*----------------------------------------------------------------***   00462500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00462600
                    AIF   (N'&STOKEN LE 1).ZG105A  CK NUM               00462700
&ZMS                SETC  '"STOKEN='                                    00462800
&ZMS                SETC  '&ZMS.&STOKEN"'                               00462900
&ZMS                SETC  '&ZMS "STOKEN"'                               00463000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00463100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00463200
.ZG105A             ANOP  ,                                             00463300
.*-------------------------------------------------------------------   00463400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00463500
&ZXSTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00463600
&XSTOKEN            SETC  '&STOKEN(1)'          SET XVARIABLE           00463700
                    AIF   (N'&STOKEN GT 1).ZG105B  MULTI                00463800
&XSTOKEN            SETC  '&STOKEN'   SET XVARIABLE                     00463900
.ZG105B             AIF   (K'&STOKEN(1) GT 0).ZG105C                    00464000
&ZXSTOKEN           SETC  ''          RESET IN/OUTPUT                   00464100
&ZMS                SETC  ' '                                           00464200
&ZMS                SETC  '&ZMS "STOKEN" KEY AND ITS'                   00464300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00464400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00464500
.ZG105C             ANOP  ,                                             00464600
.*-------------------------------------------------------------------   00464700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00464800
                    AIF   (K'&ZXSTOKEN LE 0).ZG105R  NOT I/O            00464900
                    AIF   ('&XSTOKEN'(1,1) NE '(').ZG105R               00465000
&ZCGPR              SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                    00465100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG105P                 00465200
                    AIF   (K'&ZCGPR GT 2).ZG105Q                        00465300
                    AIF   ('&ZCGPR' EQ '0').ZG105Q                      00465400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00465500
                    AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME    00465600
.ZG105P             ANOP  ,                                             00465700
                    AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC         00465800
                    AIF   ('&ZCGPR' LT '2').ZG105Q                      00465900
                    AIF   ('&ZCGPR' LE '12').ZG105R                     00466000
.ZG105Q             ANOP  ,                                             00466100
&ZMS                SETC  '"STOKEN='                                    00466200
&ZMS                SETC  '&ZMS.&STOKEN"'                               00466300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00466400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00466500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00466600
.ZG105R             ANOP  ,                                             00466700
.*------------------------------------------------------------------    00466800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00466900
&XINLIST            SETC  ''          INITIALIZE XVARIABLE              00467000
.*-------------------------------------------------------------------   00467100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00467200
.ZG109              ANOP  ,                                             00467300
                    AIF   (K'&INLIST(1) LE 0).ZG109A                    00467400
&ZTLC               SETC 'NO'                                           00467500
                    AIF   ('&INLIST(1)' NE '&ZTLC').ZG116               00467600
&XINLIST            SETC  'NO'        SET KEYWORD                       00467700
                    AIF   (N'&INLIST LE 1).ZG109A  CK NUM               00467800
&ZMS                SETC  '"INLIST='                                    00467900
&ZMS                SETC  '&ZMS.&INLIST"'                               00468000
&ZMS                SETC  '&ZMS "INLIST"'                               00468100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00468200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00468300
.ZG109A             ANOP  ,                                             00468400
.*------------------------------------------------------------------    00468500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00468600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00468700
.ZG109A0            AIF   (K'&NUMRANGE LE 0).ZG109A1  OK                00468800
&ZCVAL              SETC '&ZCVAL NUMRANGE'      INCORRECT KEY USED      00468900
.ZG109A1            AIF   (K'&RANGLIST LE 0).ZG109A2  OK                00469000
&ZCVAL              SETC '&ZCVAL RANGLIST'      INCORRECT KEY USED      00469100
.ZG109A2            AIF   (K'&ZCVAL LE 0).ZG109A3  OK                   00469200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00469300
&ZMS                SETC  '"INLIST'                                     00469400
&ZMS                SETC  '&ZMS.=&INLIST"'                              00469500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00469600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00469700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00469800
.ZG109A3            ANOP  ,                                             00469900
.*----------------------------------------------------------------***   00470000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00470100
                    AIF   (N'&START LE 1).ZG111A  CK NUM                00470200
&ZMS                SETC  '"START='                                     00470300
&ZMS                SETC  '&ZMS.&START"'                                00470400
&ZMS                SETC  '&ZMS "START"'                                00470500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00470600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00470700
.ZG111A             ANOP  ,                                             00470800
.*-------------------------------------------------------------------   00470900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00471000
&ZXSTART            SETC  'INPUT'     SET IN/OUTPUT                     00471100
&XSTART             SETC  '&START(1)'           SET XVARIABLE           00471200
                    AIF   (N'&START GT 1).ZG111B  MULTI                 00471300
&XSTART             SETC  '&START'    SET XVARIABLE                     00471400
.ZG111B             AIF   (K'&START(1) GT 0).ZG111C                     00471500
&ZXSTART            SETC  ''          RESET IN/OUTPUT                   00471600
&ZMS                SETC  'WHEN "NO" IS SPECIFIED'                      00471700
&ZMS                SETC  '&ZMS , "START" KEY AND ITS'                  00471800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00471900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00472000
.ZG111C             ANOP  ,                                             00472100
.*-------------------------------------------------------------------   00472200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00472300
                    AIF   (K'&ZXSTART LE 0).ZG111R  NOT I/O             00472400
                    AIF   ('&XSTART'(1,1) NE '(').ZG111R                00472500
&ZCGPR              SETC  '&XSTART'(2,K'&XSTART-2)                      00472600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                 00472700
                    AIF   (K'&ZCGPR GT 2).ZG111Q                        00472800
                    AIF   ('&ZCGPR' EQ '0').ZG111Q                      00472900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00473000
                    AIF   (T'&ZCGPR NE 'N').ZG111Q  INVALID REG NAME    00473100
.ZG111P             ANOP  ,                                             00473200
                    AIF   (T'&ZCGPR NE 'N').ZG111R  NON NUMERIC         00473300
                    AIF   ('&ZCGPR' LT '2').ZG111Q                      00473400
                    AIF   ('&ZCGPR' LE '12').ZG111R                     00473500
.ZG111Q             ANOP  ,                                             00473600
&ZMS                SETC  '"START='                                     00473700
&ZMS                SETC  '&ZMS.&START"'                                00473800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00473900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00474000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00474100
.ZG111R             ANOP  ,                                             00474200
.*----------------------------------------------------------------***   00474300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00474400
                    AIF   (N'&BLOCKS LE 1).ZG114A  CK NUM               00474500
&ZMS                SETC  '"BLOCKS='                                    00474600
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00474700
&ZMS                SETC  '&ZMS "BLOCKS"'                               00474800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00474900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00475000
.ZG114A             ANOP  ,                                             00475100
.*-------------------------------------------------------------------   00475200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00475300
&ZXBLOCKS           SETC  'INPUT'     SET IN/OUTPUT                     00475400
&XBLOCKS            SETC  '&BLOCKS(1)'          SET XVARIABLE           00475500
                    AIF   (N'&BLOCKS GT 1).ZG114B  MULTI                00475600
&XBLOCKS            SETC  '&BLOCKS'   SET XVARIABLE                     00475700
.ZG114B             AIF   (K'&BLOCKS(1) GT 0).ZG114C                    00475800
&ZXBLOCKS           SETC  ''          RESET IN/OUTPUT                   00475900
&ZMS                SETC  'WHEN "NO" IS SPECIFIED'                      00476000
&ZMS                SETC  '&ZMS , "BLOCKS" KEY AND ITS'                 00476100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00476200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00476300
.ZG114C             ANOP  ,                                             00476400
.*-------------------------------------------------------------------   00476500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00476600
                    AIF   (K'&ZXBLOCKS LE 0).ZG114R  NOT I/O            00476700
                    AIF   ('&XBLOCKS'(1,1) NE '(').ZG114R               00476800
&ZCGPR              SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                    00476900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                 00477000
                    AIF   (K'&ZCGPR GT 2).ZG114Q                        00477100
                    AIF   ('&ZCGPR' EQ '0').ZG114Q                      00477200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00477300
                    AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME    00477400
.ZG114P             ANOP  ,                                             00477500
                    AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC         00477600
                    AIF   ('&ZCGPR' LT '2').ZG114Q                      00477700
                    AIF   ('&ZCGPR' LE '12').ZG114R                     00477800
.ZG114Q             ANOP  ,                                             00477900
&ZMS                SETC  '"BLOCKS='                                    00478000
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00478100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00478200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00478300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00478400
.ZG114R             ANOP  ,                                             00478500
.*-------------------------------------------------------------------   00478600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00478700
.ZG116              ANOP  ,                                             00478800
&ZTLC               SETC 'YES'                                          00478900
                    AIF   ('&INLIST(1)' NE '&ZTLC').ZG123               00479000
&XINLIST            SETC  'YES'       SET KEYWORD                       00479100
                    AIF   (N'&INLIST LE 1).ZG116A  CK NUM               00479200
&ZMS                SETC  '"INLIST='                                    00479300
&ZMS                SETC  '&ZMS.&INLIST"'                               00479400
&ZMS                SETC  '&ZMS "INLIST"'                               00479500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00479600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00479700
.ZG116A             ANOP  ,                                             00479800
.*------------------------------------------------------------------    00479900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00480000
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00480100
.ZG116A0            AIF   (K'&START LE 0).ZG116A1  OK                   00480200
&ZCVAL              SETC '&ZCVAL START'         INCORRECT KEY USED      00480300
.ZG116A1            AIF   (K'&BLOCKS LE 0).ZG116A2  OK                  00480400
&ZCVAL              SETC '&ZCVAL BLOCKS'        INCORRECT KEY USED      00480500
.ZG116A2            AIF   (K'&ZCVAL LE 0).ZG116A3  OK                   00480600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00480700
&ZMS                SETC  '"INLIST'                                     00480800
&ZMS                SETC  '&ZMS.=&INLIST"'                              00480900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00481000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00481100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00481200
.ZG116A3            ANOP  ,                                             00481300
.*----------------------------------------------------------------***   00481400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00481500
                    AIF   (N'&NUMRANGE LE 1).ZG118A  CK NUM             00481600
&ZMS                SETC  '"NUMRANGE='                                  00481700
&ZMS                SETC  '&ZMS.&NUMRANGE"'                             00481800
&ZMS                SETC  '&ZMS "NUMRANGE"'                             00481900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00482000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00482100
.ZG118A             ANOP  ,                                             00482200
.*-------------------------------------------------------------------   00482300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00482400
&ZXNUMRANGE         SETC  'INPUT'     SET IN/OUTPUT                     00482500
&XNUMRANGE          SETC  '1'                                           00482600
                    AIF   (K'&NUMRANGE(1) LE 0).ZG118B  PARM            00482700
&XNUMRANGE          SETC  '&NUMRANGE(1)'        SET XVARIABLE           00482800
                    AIF   (N'&NUMRANGE GT 1).ZG118B  MULTI              00482900
&XNUMRANGE          SETC  '&NUMRANGE'           SET XVARIABLE           00483000
.ZG118B             ANOP  ,                                             00483100
.*-------------------------------------------------------------------   00483200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00483300
                    AIF   (K'&ZXNUMRANGE LE 0).ZG118R  NOT I/O          00483400
                    AIF   ('&XNUMRANGE'(1,1) NE '(').ZG118R             00483500
&ZCGPR              SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                00483600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG118P                 00483700
                    AIF   (K'&ZCGPR GT 2).ZG118Q                        00483800
                    AIF   ('&ZCGPR' EQ '0').ZG118Q                      00483900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00484000
                    AIF   (T'&ZCGPR NE 'N').ZG118Q  INVALID REG NAME    00484100
.ZG118P             ANOP  ,                                             00484200
                    AIF   (T'&ZCGPR NE 'N').ZG118R  NON NUMERIC         00484300
                    AIF   ('&ZCGPR' LT '2').ZG118Q                      00484400
                    AIF   ('&ZCGPR' LE '12').ZG118R                     00484500
.ZG118Q             ANOP  ,                                             00484600
&ZMS                SETC  '"NUMRANGE='                                  00484700
&ZMS                SETC  '&ZMS.&NUMRANGE"'                             00484800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00484900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00485000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00485100
.ZG118R             ANOP  ,                                             00485200
.*----------------------------------------------------------------***   00485300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00485400
                    AIF   (N'&RANGLIST LE 1).ZG121A  CK NUM             00485500
&ZMS                SETC  '"RANGLIST='                                  00485600
&ZMS                SETC  '&ZMS.&RANGLIST"'                             00485700
&ZMS                SETC  '&ZMS "RANGLIST"'                             00485800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00485900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00486000
.ZG121A             ANOP  ,                                             00486100
.*-------------------------------------------------------------------   00486200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00486300
&ZXRANGLIST         SETC  'INPUT'     SET IN/OUTPUT                     00486400
&XRANGLIST          SETC  '&RANGLIST(1)'        SET XVARIABLE           00486500
                    AIF   (N'&RANGLIST GT 1).ZG121B  MULTI              00486600
&XRANGLIST          SETC  '&RANGLIST'           SET XVARIABLE           00486700
.ZG121B             AIF   (K'&RANGLIST(1) GT 0).ZG121C                  00486800
&ZXRANGLIST         SETC  ''          RESET IN/OUTPUT                   00486900
&ZMS                SETC  'WHEN "YES" IS SPECIFIED'                     00487000
&ZMS                SETC  '&ZMS , "RANGLIST" KEY AND ITS'               00487100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00487200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00487300
.ZG121C             ANOP  ,                                             00487400
.*-------------------------------------------------------------------   00487500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00487600
                    AIF   (K'&ZXRANGLIST LE 0).ZG121R  NOT I/O          00487700
                    AIF   ('&XRANGLIST'(1,1) NE '(').ZG121R             00487800
&ZCGPR              SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                00487900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG121P                 00488000
                    AIF   (K'&ZCGPR GT 2).ZG121Q                        00488100
                    AIF   ('&ZCGPR' EQ '0').ZG121Q                      00488200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00488300
                    AIF   (T'&ZCGPR NE 'N').ZG121Q  INVALID REG NAME    00488400
.ZG121P             ANOP  ,                                             00488500
                    AIF   (T'&ZCGPR NE 'N').ZG121R  NON NUMERIC         00488600
                    AIF   ('&ZCGPR' LT '2').ZG121Q                      00488700
                    AIF   ('&ZCGPR' LE '12').ZG121R                     00488800
.ZG121Q             ANOP  ,                                             00488900
&ZMS                SETC  '"RANGLIST='                                  00489000
&ZMS                SETC  '&ZMS.&RANGLIST"'                             00489100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00489200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00489300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00489400
.ZG121R             ANOP  ,                                             00489500
.*------------------------------------------------------------------    00489600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00489700
.ZG123              ANOP  ,                                             00489800
&ZXINLIST           SETC  'INPUT'     SET IN/OUTPUT                     00489900
                    AIF   (K'&XINLIST GT 0).ZG123E  VALID ARG           00490000
                    AIF   (T'&INLIST EQ 'O').ZG123D  OMITTED            00490100
&ZASYSLNDX          SETA  0                                             00490200
.ZG123A             ANOP  ,           POSITIONAL MACRO KEY              00490300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00490400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG123C             00490500
&ZTLC               SETC 'INLIST'                                       00490600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG123A    00490700
.ZG123B             ANOP  ,                                             00490800
&ZXINLIST           SETC  ''          RESET IN/OUTPUT                   00490900
&ZMS                SETC  'THE "INLIST" KEY'                            00491000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00491100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00491200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00491300
                    AGO   .ZG123E                                       00491400
.ZG123C             ANOP  ,                                             00491500
&ZXINLIST           SETC  ''          RESET IN/OUTPUT                   00491600
&ZMS                SETC  '"INLIST='                                    00491700
&ZMS                SETC  '&ZMS.&INLIST"'                               00491800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00491900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00492000
&ZMS                SETC  '&ZMS "NO"'                                   00492100
&ZMS                SETC  '&ZMS OR "YES".'                              00492200
                    MNOTE 8,' &ZMS '                                    00492300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00492400
                    AGO   .ZG123E                                       00492500
.ZG123D             ANOP  ,                                             00492600
&XINLIST            SETC  'NO'        SET DEFAULT KEYWORD               00492700
.ZG123E             ANOP  ,                                             00492800
.*----------------------------------------------------------------***   00492900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00493000
                    AIF   (N'&DISABLED LE 1).ZG125A  CK NUM             00493100
&ZMS                SETC  '"DISABLED='                                  00493200
&ZMS                SETC  '&ZMS.&DISABLED"'                             00493300
&ZMS                SETC  '&ZMS "DISABLED"'                             00493400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00493500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00493600
.ZG125A             ANOP  ,                                             00493700
.*-------------------------------------------------------------------   00493800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00493900
&XDISABLED          SETC  ''          INITIALIZE XVARIABLE              00494000
.ZG126A   AIF   ('&DISABLED(1)' NE 'NO').ZG127A                         00494100
&XDISABLED          SETC  'NO'        SET KEYWORD                       00494200
.*-------------------------------------------------------------------   00494300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00494400
.ZG127A   AIF   ('&DISABLED(1)' NE 'YES').ZG128A                        00494500
&XDISABLED          SETC  'YES'       SET KEYWORD                       00494600
.*-------------------------------------------------------------------   00494700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00494800
.ZG128A             AIF   (K'&XDISABLED GT 0).ZG128C  KEYWORD           00494900
                    AIF   (K'&DISABLED(1) LE 0).ZG128B                  00495000
&ZMS                SETC  '"DISABLED='                                  00495100
&ZMS                SETC  '&ZMS.&DISABLED"'                             00495200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00495300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00495400
&ZMS                SETC  '&ZMS "NO"'                                   00495500
&ZMS                SETC  '&ZMS OR "YES".'                              00495600
                    MNOTE 8,' &ZMS '                                    00495700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00495800
.ZG128B             ANOP  ,                                             00495900
&XDISABLED          SETC  'NO'        SET DEFAULT KEYWORD               00496000
.ZG128C             ANOP  ,                                             00496100
&ZXDISABLED         SETC  'INPUT'     SET IN/OUTPUT                     00496200
.*----------------------------------------------------------------***   00496300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00496400
                    AIF   (N'&FREESHAREDSEG LE 1).ZG130A  CK NUM        00496500
&ZMS                SETC  '"FREESHAREDSEG='                             00496600
&ZMS                SETC  '&ZMS.&FREESHAREDSEG"'                        00496700
&ZMS                SETC  '&ZMS "FREESHAREDSEG"'                        00496800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00496900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00497000
.ZG130A             ANOP  ,                                             00497100
.*-------------------------------------------------------------------   00497200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00497300
&XFREESHAREDSEG     SETC  ''          INITIALIZE XVARIABLE              00497400
.ZG131A   AIF   ('&FREESHAREDSEG(1)' NE 'NO').ZG132A                    00497500
&XFREESHAREDSEG     SETC  'NO'        SET KEYWORD                       00497600
.*-------------------------------------------------------------------   00497700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00497800
.ZG132A   AIF   ('&FREESHAREDSEG(1)' NE 'YES').ZG133A                   00497900
&XFREESHAREDSEG     SETC  'YES'       SET KEYWORD                       00498000
.*-------------------------------------------------------------------   00498100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00498200
.ZG133A             AIF   (K'&XFREESHAREDSEG GT 0).ZG133C  KEYWORD      00498300
                    AIF   (K'&FREESHAREDSEG(1) LE 0).ZG133B             00498400
&ZMS                SETC  '"FREESHAREDSEG='                             00498500
&ZMS                SETC  '&ZMS.&FREESHAREDSEG"'                        00498600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00498700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00498800
&ZMS                SETC  '&ZMS "NO"'                                   00498900
&ZMS                SETC  '&ZMS OR "YES".'                              00499000
                    MNOTE 8,' &ZMS '                                    00499100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00499200
.ZG133B             ANOP  ,                                             00499300
&XFREESHAREDSEG     SETC  'NO'        SET DEFAULT KEYWORD               00499400
.ZG133C             ANOP  ,                                             00499500
&ZXFREESHAREDSEG    SETC  'INPUT'     SET IN/OUTPUT                     00499600
.*------------------------------------------------------------------    00499700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00499800
&XKEEPREAL          SETC  ''          INITIALIZE XVARIABLE              00499900
.*-------------------------------------------------------------------   00500000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00500100
.ZG136              ANOP  ,                                             00500200
                    AIF   (K'&KEEPREAL(1) LE 0).ZG136A                  00500300
&ZTLC               SETC 'NO'                                           00500400
                    AIF   ('&KEEPREAL(1)' NE '&ZTLC').ZG137             00500500
&XKEEPREAL          SETC  'NO'        SET KEYWORD                       00500600
                    AIF   (N'&KEEPREAL LE 1).ZG136A  CK NUM             00500700
&ZMS                SETC  '"KEEPREAL='                                  00500800
&ZMS                SETC  '&ZMS.&KEEPREAL"'                             00500900
&ZMS                SETC  '&ZMS "KEEPREAL"'                             00501000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00501100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00501200
.ZG136A             ANOP  ,                                             00501300
.*------------------------------------------------------------------    00501400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00501500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00501600
.ZG136A0            AIF   (K'&CLEAR LE 0).ZG136A1  OK                   00501700
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      00501800
.ZG136A1            AIF   (K'&ZCVAL LE 0).ZG136A2  OK                   00501900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00502000
&ZMS                SETC  '"KEEPREAL'                                   00502100
&ZMS                SETC  '&ZMS.=&KEEPREAL"'                            00502200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00502300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00502400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00502500
.ZG136A2            ANOP  ,                                             00502600
.*-------------------------------------------------------------------   00502700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00502800
.ZG137              ANOP  ,                                             00502900
&ZTLC               SETC 'YES'                                          00503000
                    AIF   ('&KEEPREAL(1)' NE '&ZTLC').ZG143             00503100
&XKEEPREAL          SETC  'YES'       SET KEYWORD                       00503200
                    AIF   (N'&KEEPREAL LE 1).ZG137A  CK NUM             00503300
&ZMS                SETC  '"KEEPREAL='                                  00503400
&ZMS                SETC  '&ZMS.&KEEPREAL"'                             00503500
&ZMS                SETC  '&ZMS "KEEPREAL"'                             00503600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00503700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00503800
.ZG137A             ANOP  ,                                             00503900
.*----------------------------------------------------------------***   00504000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00504100
                    AIF   (N'&CLEAR LE 1).ZG139A  CK NUM                00504200
&ZMS                SETC  '"CLEAR='                                     00504300
&ZMS                SETC  '&ZMS.&CLEAR"'                                00504400
&ZMS                SETC  '&ZMS "CLEAR"'                                00504500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00504600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00504700
.ZG139A             ANOP  ,                                             00504800
.*-------------------------------------------------------------------   00504900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00505000
&XCLEAR             SETC  ''          INITIALIZE XVARIABLE              00505100
.ZG140A   AIF   ('&CLEAR(1)' NE 'YES').ZG141A                           00505200
&XCLEAR             SETC  'YES'       SET KEYWORD                       00505300
.*-------------------------------------------------------------------   00505400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00505500
.ZG141A   AIF   ('&CLEAR(1)' NE 'NO').ZG142A                            00505600
&XCLEAR             SETC  'NO'        SET KEYWORD                       00505700
.*-------------------------------------------------------------------   00505800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00505900
.ZG142A             AIF   (K'&XCLEAR GT 0).ZG142C  KEYWORD              00506000
                    AIF   (K'&CLEAR(1) LE 0).ZG142B                     00506100
&ZMS                SETC  '"CLEAR='                                     00506200
&ZMS                SETC  '&ZMS.&CLEAR"'                                00506300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00506400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00506500
&ZMS                SETC  '&ZMS "YES"'                                  00506600
&ZMS                SETC  '&ZMS OR "NO".'                               00506700
                    MNOTE 8,' &ZMS '                                    00506800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00506900
.ZG142B             ANOP  ,                                             00507000
&XCLEAR             SETC  'YES'       SET DEFAULT KEYWORD               00507100
.ZG142C             ANOP  ,                                             00507200
&ZXCLEAR            SETC  'INPUT'     SET IN/OUTPUT                     00507300
.*------------------------------------------------------------------    00507400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00507500
.ZG143              ANOP  ,                                             00507600
&ZXKEEPREAL         SETC  'INPUT'     SET IN/OUTPUT                     00507700
                    AIF   (K'&XKEEPREAL GT 0).ZG143E  VALID ARG         00507800
                    AIF   (T'&KEEPREAL EQ 'O').ZG143D  OMITTED          00507900
&ZASYSLNDX          SETA  0                                             00508000
.ZG143A             ANOP  ,           POSITIONAL MACRO KEY              00508100
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00508200
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG143C             00508300
&ZTLC               SETC 'KEEPREAL'                                     00508400
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG143A    00508500
.ZG143B             ANOP  ,                                             00508600
&ZXKEEPREAL         SETC  ''          RESET IN/OUTPUT                   00508700
&ZMS                SETC  'THE "KEEPREAL" KEY'                          00508800
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00508900
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00509000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00509100
                    AGO   .ZG143E                                       00509200
.ZG143C             ANOP  ,                                             00509300
&ZXKEEPREAL         SETC  ''          RESET IN/OUTPUT                   00509400
&ZMS                SETC  '"KEEPREAL='                                  00509500
&ZMS                SETC  '&ZMS.&KEEPREAL"'                             00509600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00509700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00509800
&ZMS                SETC  '&ZMS "NO"'                                   00509900
&ZMS                SETC  '&ZMS OR "YES".'                              00510000
                    MNOTE 8,' &ZMS '                                    00510100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00510200
                    AGO   .ZG143E                                       00510300
.ZG143D             ANOP  ,                                             00510400
&XKEEPREAL          SETC  'NO'        SET DEFAULT KEYWORD               00510500
.ZG143E             ANOP  ,                                             00510600
.*-------------------------------------------------------------------   00510700
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00510800
.ZG144ZY  AIF    ('&XSERVICE' NE 'DEFINE').ZG204ZY                      00510900
.*-------------------------------------------------------------------   00511000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00511100
&ZCVAL              SETC ''           ERROR KEY FIELD                   00511200
.ZG144I0            AIF   (K'&NAME LE 0).ZG144I1                        00511300
&ZCVAL              SETC '&ZCVAL NAME'          DISALLOWED KEY          00511400
.ZG144I1            AIF   (K'&GENNAME LE 0).ZG144I2                     00511500
&ZCVAL              SETC '&ZCVAL GENNAME'       DISALLOWED KEY          00511600
.ZG144I2            AIF   (K'&OUTNAME LE 0).ZG144I3                     00511700
&ZCVAL              SETC '&ZCVAL OUTNAME'       DISALLOWED KEY          00511800
.ZG144I3            AIF   (K'&TYPE LE 0).ZG144I4                        00511900
&ZCVAL              SETC '&ZCVAL TYPE'          DISALLOWED KEY          00512000
.ZG144I4            AIF   (K'&DREF LE 0).ZG144I5                        00512100
&ZCVAL              SETC '&ZCVAL DREF'          DISALLOWED KEY          00512200
.ZG144I5            AIF   (K'&SCOPE LE 0).ZG144I6                       00512300
&ZCVAL              SETC '&ZCVAL SCOPE'         DISALLOWED KEY          00512400
.ZG144I6            AIF   (K'&BACK LE 0).ZG144I7                        00512500
&ZCVAL              SETC '&ZCVAL BACK'          DISALLOWED KEY          00512600
.ZG144I7            AIF   (K'&PAGEFRAMESIZE LE 0).ZG144I8               00512700
&ZCVAL              SETC '&ZCVAL PAGEFRAMESIZE'  DISALLOWED KEY         00512800
.ZG144I8            AIF   (K'&HIDEZERO LE 0).ZG144I9                    00512900
&ZCVAL              SETC '&ZCVAL HIDEZERO'      DISALLOWED KEY          00513000
.ZG144I9            AIF   (K'&HSTYPE LE 0).ZG144I10                     00513100
&ZCVAL              SETC '&ZCVAL HSTYPE'        DISALLOWED KEY          00513200
.ZG144I10           AIF   (K'&SHARE LE 0).ZG144I11                      00513300
&ZCVAL              SETC '&ZCVAL SHARE'         DISALLOWED KEY          00513400
.ZG144I11           AIF   (K'&CASTOUT LE 0).ZG144I12                    00513500
&ZCVAL              SETC '&ZCVAL CASTOUT'       DISALLOWED KEY          00513600
.ZG144I12           AIF   (K'&XCALLERKEY LE 0).ZG144I13                 00513700
&ZCVAL              SETC '&ZCVAL XCALLERKEY'    DISALLOWED KEY          00513800
.ZG144I13           AIF   (K'&KEY LE 0).ZG144I14                        00513900
&ZCVAL              SETC '&ZCVAL KEY'           DISALLOWED KEY          00514000
.ZG144I14           AIF   (K'&FPROT LE 0).ZG144I15                      00514100
&ZCVAL              SETC '&ZCVAL FPROT'         DISALLOWED KEY          00514200
.ZG144I15           AIF   (K'&TTOKEN LE 0).ZG144I16                     00514300
&ZCVAL              SETC '&ZCVAL TTOKEN'        DISALLOWED KEY          00514400
.ZG144I16           AIF   (K'&ORIGIN LE 0).ZG144I17                     00514500
&ZCVAL              SETC '&ZCVAL ORIGIN'        DISALLOWED KEY          00514600
.ZG144I17           AIF   (K'&NUMBLKS LE 0).ZG144I18                    00514700
&ZCVAL              SETC '&ZCVAL NUMBLKS'       DISALLOWED KEY          00514800
.ZG144I18           AIF   (K'&CRITICALPAGING LE 0).ZG144I19             00514900
&ZCVAL              SETC '&ZCVAL CRITICALPAGING'  DISALLOWED KEY        00515000
.ZG144I19           AIF   (K'&FREESHAREDSEG LE 0).ZG144I20              00515100
&ZCVAL              SETC '&ZCVAL FREESHAREDSEG'  DISALLOWED KEY         00515200
.ZG144I20           AIF   (K'&KEEPREAL LE 0).ZG144I21                   00515300
&ZCVAL              SETC '&ZCVAL KEEPREAL'      DISALLOWED KEY          00515400
.ZG144I21           AIF   (K'&CLEAR LE 0).ZG144I22                      00515500
&ZCVAL              SETC '&ZCVAL CLEAR'         DISALLOWED KEY          00515600
.ZG144I22           AIF   (K'&VAR LE 0).ZG144I23                        00515700
&ZCVAL              SETC '&ZCVAL VAR'           DISALLOWED KEY          00515800
.ZG144I23           AIF   (K'&ZCVAL LE 0).ZG144J  KEY                   00515900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00516000
                    AIF  (K'&ZCVAL LE 160).ZG144K                       00516100
&ZCVAL              SETC '&ZCVAL'(1,160)                                00516200
&ZCVAL              SETC '&ZCVAL....'                                   00516300
.ZG144K             ANOP                                                00516400
&ZMS                SETC  '"DEFINE'                                     00516500
&ZMS                SETC  '&ZMS."'                                      00516600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00516700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00516800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00516900
.ZG144J             ANOP  ,                                             00517000
.*----------------------------------------------------------------***   00517100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00517200
                    AIF   (N'&STOKEN LE 1).ZG146A  CK NUM               00517300
&ZMS                SETC  '"STOKEN='                                    00517400
&ZMS                SETC  '&ZMS.&STOKEN"'                               00517500
&ZMS                SETC  '&ZMS "STOKEN"'                               00517600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00517700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00517800
.ZG146A             ANOP  ,                                             00517900
.*-------------------------------------------------------------------   00518000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00518100
&ZXSTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00518200
&XSTOKEN            SETC  '&STOKEN(1)'          SET XVARIABLE           00518300
                    AIF   (N'&STOKEN GT 1).ZG146B  MULTI                00518400
&XSTOKEN            SETC  '&STOKEN'   SET XVARIABLE                     00518500
.ZG146B             AIF   (K'&STOKEN(1) GT 0).ZG146C                    00518600
&ZXSTOKEN           SETC  ''          RESET IN/OUTPUT                   00518700
&ZMS                SETC  ' '                                           00518800
&ZMS                SETC  '&ZMS "STOKEN" KEY AND ITS'                   00518900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00519000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00519100
.ZG146C             ANOP  ,                                             00519200
.*-------------------------------------------------------------------   00519300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00519400
                    AIF   (K'&ZXSTOKEN LE 0).ZG146R  NOT I/O            00519500
                    AIF   ('&XSTOKEN'(1,1) NE '(').ZG146R               00519600
&ZCGPR              SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                    00519700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG146P                 00519800
                    AIF   (K'&ZCGPR GT 2).ZG146Q                        00519900
                    AIF   ('&ZCGPR' EQ '0').ZG146Q                      00520000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00520100
                    AIF   (T'&ZCGPR NE 'N').ZG146Q  INVALID REG NAME    00520200
.ZG146P             ANOP  ,                                             00520300
                    AIF   (T'&ZCGPR NE 'N').ZG146R  NON NUMERIC         00520400
                    AIF   ('&ZCGPR' LT '2').ZG146Q                      00520500
                    AIF   ('&ZCGPR' LE '12').ZG146R                     00520600
.ZG146Q             ANOP  ,                                             00520700
&ZMS                SETC  '"STOKEN='                                    00520800
&ZMS                SETC  '&ZMS.&STOKEN"'                               00520900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00521000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00521100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00521200
.ZG146R             ANOP  ,                                             00521300
.*------------------------------------------------------------------    00521400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00521500
&XINLIST            SETC  ''          INITIALIZE XVARIABLE              00521600
.*-------------------------------------------------------------------   00521700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00521800
.ZG150              ANOP  ,                                             00521900
                    AIF   (K'&INLIST(1) LE 0).ZG150A                    00522000
&ZTLC               SETC 'NO'                                           00522100
                    AIF   ('&INLIST(1)' NE '&ZTLC').ZG157               00522200
&XINLIST            SETC  'NO'        SET KEYWORD                       00522300
                    AIF   (N'&INLIST LE 1).ZG150A  CK NUM               00522400
&ZMS                SETC  '"INLIST='                                    00522500
&ZMS                SETC  '&ZMS.&INLIST"'                               00522600
&ZMS                SETC  '&ZMS "INLIST"'                               00522700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00522800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00522900
.ZG150A             ANOP  ,                                             00523000
.*------------------------------------------------------------------    00523100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00523200
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00523300
.ZG150A0            AIF   (K'&NUMRANGE LE 0).ZG150A1  OK                00523400
&ZCVAL              SETC '&ZCVAL NUMRANGE'      INCORRECT KEY USED      00523500
.ZG150A1            AIF   (K'&RANGLIST LE 0).ZG150A2  OK                00523600
&ZCVAL              SETC '&ZCVAL RANGLIST'      INCORRECT KEY USED      00523700
.ZG150A2            AIF   (K'&ZCVAL LE 0).ZG150A3  OK                   00523800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00523900
&ZMS                SETC  '"INLIST'                                     00524000
&ZMS                SETC  '&ZMS.=&INLIST"'                              00524100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00524200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00524300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00524400
.ZG150A3            ANOP  ,                                             00524500
.*----------------------------------------------------------------***   00524600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00524700
                    AIF   (N'&START LE 1).ZG152A  CK NUM                00524800
&ZMS                SETC  '"START='                                     00524900
&ZMS                SETC  '&ZMS.&START"'                                00525000
&ZMS                SETC  '&ZMS "START"'                                00525100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00525200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00525300
.ZG152A             ANOP  ,                                             00525400
.*-------------------------------------------------------------------   00525500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00525600
&ZXSTART            SETC  'INPUT'     SET IN/OUTPUT                     00525700
&XSTART             SETC  '&START(1)'           SET XVARIABLE           00525800
                    AIF   (N'&START GT 1).ZG152B  MULTI                 00525900
&XSTART             SETC  '&START'    SET XVARIABLE                     00526000
.ZG152B             AIF   (K'&START(1) GT 0).ZG152C                     00526100
&ZXSTART            SETC  ''          RESET IN/OUTPUT                   00526200
&ZMS                SETC  'WHEN "NO" IS SPECIFIED'                      00526300
&ZMS                SETC  '&ZMS , "START" KEY AND ITS'                  00526400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00526500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00526600
.ZG152C             ANOP  ,                                             00526700
.*-------------------------------------------------------------------   00526800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00526900
                    AIF   (K'&ZXSTART LE 0).ZG152R  NOT I/O             00527000
                    AIF   ('&XSTART'(1,1) NE '(').ZG152R                00527100
&ZCGPR              SETC  '&XSTART'(2,K'&XSTART-2)                      00527200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG152P                 00527300
                    AIF   (K'&ZCGPR GT 2).ZG152Q                        00527400
                    AIF   ('&ZCGPR' EQ '0').ZG152Q                      00527500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00527600
                    AIF   (T'&ZCGPR NE 'N').ZG152Q  INVALID REG NAME    00527700
.ZG152P             ANOP  ,                                             00527800
                    AIF   (T'&ZCGPR NE 'N').ZG152R  NON NUMERIC         00527900
                    AIF   ('&ZCGPR' LT '2').ZG152Q                      00528000
                    AIF   ('&ZCGPR' LE '12').ZG152R                     00528100
.ZG152Q             ANOP  ,                                             00528200
&ZMS                SETC  '"START='                                     00528300
&ZMS                SETC  '&ZMS.&START"'                                00528400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00528500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00528600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00528700
.ZG152R             ANOP  ,                                             00528800
.*----------------------------------------------------------------***   00528900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00529000
                    AIF   (N'&BLOCKS LE 1).ZG155A  CK NUM               00529100
&ZMS                SETC  '"BLOCKS='                                    00529200
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00529300
&ZMS                SETC  '&ZMS "BLOCKS"'                               00529400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00529500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00529600
.ZG155A             ANOP  ,                                             00529700
.*-------------------------------------------------------------------   00529800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00529900
&ZXBLOCKS           SETC  'INPUT'     SET IN/OUTPUT                     00530000
&XBLOCKS            SETC  '&BLOCKS(1)'          SET XVARIABLE           00530100
                    AIF   (N'&BLOCKS GT 1).ZG155B  MULTI                00530200
&XBLOCKS            SETC  '&BLOCKS'   SET XVARIABLE                     00530300
.ZG155B             AIF   (K'&BLOCKS(1) GT 0).ZG155C                    00530400
&ZXBLOCKS           SETC  ''          RESET IN/OUTPUT                   00530500
&ZMS                SETC  'WHEN "NO" IS SPECIFIED'                      00530600
&ZMS                SETC  '&ZMS , "BLOCKS" KEY AND ITS'                 00530700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00530800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00530900
.ZG155C             ANOP  ,                                             00531000
.*-------------------------------------------------------------------   00531100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00531200
                    AIF   (K'&ZXBLOCKS LE 0).ZG155R  NOT I/O            00531300
                    AIF   ('&XBLOCKS'(1,1) NE '(').ZG155R               00531400
&ZCGPR              SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                    00531500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG155P                 00531600
                    AIF   (K'&ZCGPR GT 2).ZG155Q                        00531700
                    AIF   ('&ZCGPR' EQ '0').ZG155Q                      00531800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00531900
                    AIF   (T'&ZCGPR NE 'N').ZG155Q  INVALID REG NAME    00532000
.ZG155P             ANOP  ,                                             00532100
                    AIF   (T'&ZCGPR NE 'N').ZG155R  NON NUMERIC         00532200
                    AIF   ('&ZCGPR' LT '2').ZG155Q                      00532300
                    AIF   ('&ZCGPR' LE '12').ZG155R                     00532400
.ZG155Q             ANOP  ,                                             00532500
&ZMS                SETC  '"BLOCKS='                                    00532600
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00532700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00532800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00532900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00533000
.ZG155R             ANOP  ,                                             00533100
.*-------------------------------------------------------------------   00533200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00533300
.ZG157              ANOP  ,                                             00533400
&ZTLC               SETC 'YES'                                          00533500
                    AIF   ('&INLIST(1)' NE '&ZTLC').ZG164               00533600
&XINLIST            SETC  'YES'       SET KEYWORD                       00533700
                    AIF   (N'&INLIST LE 1).ZG157A  CK NUM               00533800
&ZMS                SETC  '"INLIST='                                    00533900
&ZMS                SETC  '&ZMS.&INLIST"'                               00534000
&ZMS                SETC  '&ZMS "INLIST"'                               00534100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00534200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00534300
.ZG157A             ANOP  ,                                             00534400
.*------------------------------------------------------------------    00534500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00534600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00534700
.ZG157A0            AIF   (K'&START LE 0).ZG157A1  OK                   00534800
&ZCVAL              SETC '&ZCVAL START'         INCORRECT KEY USED      00534900
.ZG157A1            AIF   (K'&BLOCKS LE 0).ZG157A2  OK                  00535000
&ZCVAL              SETC '&ZCVAL BLOCKS'        INCORRECT KEY USED      00535100
.ZG157A2            AIF   (K'&ZCVAL LE 0).ZG157A3  OK                   00535200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00535300
&ZMS                SETC  '"INLIST'                                     00535400
&ZMS                SETC  '&ZMS.=&INLIST"'                              00535500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00535600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00535700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00535800
.ZG157A3            ANOP  ,                                             00535900
.*----------------------------------------------------------------***   00536000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00536100
                    AIF   (N'&NUMRANGE LE 1).ZG159A  CK NUM             00536200
&ZMS                SETC  '"NUMRANGE='                                  00536300
&ZMS                SETC  '&ZMS.&NUMRANGE"'                             00536400
&ZMS                SETC  '&ZMS "NUMRANGE"'                             00536500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00536600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00536700
.ZG159A             ANOP  ,                                             00536800
.*-------------------------------------------------------------------   00536900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00537000
&ZXNUMRANGE         SETC  'INPUT'     SET IN/OUTPUT                     00537100
&XNUMRANGE          SETC  '1'                                           00537200
                    AIF   (K'&NUMRANGE(1) LE 0).ZG159B  PARM            00537300
&XNUMRANGE          SETC  '&NUMRANGE(1)'        SET XVARIABLE           00537400
                    AIF   (N'&NUMRANGE GT 1).ZG159B  MULTI              00537500
&XNUMRANGE          SETC  '&NUMRANGE'           SET XVARIABLE           00537600
.ZG159B             ANOP  ,                                             00537700
.*-------------------------------------------------------------------   00537800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00537900
                    AIF   (K'&ZXNUMRANGE LE 0).ZG159R  NOT I/O          00538000
                    AIF   ('&XNUMRANGE'(1,1) NE '(').ZG159R             00538100
&ZCGPR              SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                00538200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG159P                 00538300
                    AIF   (K'&ZCGPR GT 2).ZG159Q                        00538400
                    AIF   ('&ZCGPR' EQ '0').ZG159Q                      00538500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00538600
                    AIF   (T'&ZCGPR NE 'N').ZG159Q  INVALID REG NAME    00538700
.ZG159P             ANOP  ,                                             00538800
                    AIF   (T'&ZCGPR NE 'N').ZG159R  NON NUMERIC         00538900
                    AIF   ('&ZCGPR' LT '2').ZG159Q                      00539000
                    AIF   ('&ZCGPR' LE '12').ZG159R                     00539100
.ZG159Q             ANOP  ,                                             00539200
&ZMS                SETC  '"NUMRANGE='                                  00539300
&ZMS                SETC  '&ZMS.&NUMRANGE"'                             00539400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00539500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00539600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00539700
.ZG159R             ANOP  ,                                             00539800
.*----------------------------------------------------------------***   00539900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00540000
                    AIF   (N'&RANGLIST LE 1).ZG162A  CK NUM             00540100
&ZMS                SETC  '"RANGLIST='                                  00540200
&ZMS                SETC  '&ZMS.&RANGLIST"'                             00540300
&ZMS                SETC  '&ZMS "RANGLIST"'                             00540400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00540500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00540600
.ZG162A             ANOP  ,                                             00540700
.*-------------------------------------------------------------------   00540800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00540900
&ZXRANGLIST         SETC  'INPUT'     SET IN/OUTPUT                     00541000
&XRANGLIST          SETC  '&RANGLIST(1)'        SET XVARIABLE           00541100
                    AIF   (N'&RANGLIST GT 1).ZG162B  MULTI              00541200
&XRANGLIST          SETC  '&RANGLIST'           SET XVARIABLE           00541300
.ZG162B             AIF   (K'&RANGLIST(1) GT 0).ZG162C                  00541400
&ZXRANGLIST         SETC  ''          RESET IN/OUTPUT                   00541500
&ZMS                SETC  'WHEN "YES" IS SPECIFIED'                     00541600
&ZMS                SETC  '&ZMS , "RANGLIST" KEY AND ITS'               00541700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00541800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00541900
.ZG162C             ANOP  ,                                             00542000
.*-------------------------------------------------------------------   00542100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00542200
                    AIF   (K'&ZXRANGLIST LE 0).ZG162R  NOT I/O          00542300
                    AIF   ('&XRANGLIST'(1,1) NE '(').ZG162R             00542400
&ZCGPR              SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                00542500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG162P                 00542600
                    AIF   (K'&ZCGPR GT 2).ZG162Q                        00542700
                    AIF   ('&ZCGPR' EQ '0').ZG162Q                      00542800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00542900
                    AIF   (T'&ZCGPR NE 'N').ZG162Q  INVALID REG NAME    00543000
.ZG162P             ANOP  ,                                             00543100
                    AIF   (T'&ZCGPR NE 'N').ZG162R  NON NUMERIC         00543200
                    AIF   ('&ZCGPR' LT '2').ZG162Q                      00543300
                    AIF   ('&ZCGPR' LE '12').ZG162R                     00543400
.ZG162Q             ANOP  ,                                             00543500
&ZMS                SETC  '"RANGLIST='                                  00543600
&ZMS                SETC  '&ZMS.&RANGLIST"'                             00543700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00543800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00543900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00544000
.ZG162R             ANOP  ,                                             00544100
.*------------------------------------------------------------------    00544200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00544300
.ZG164              ANOP  ,                                             00544400
&ZXINLIST           SETC  'INPUT'     SET IN/OUTPUT                     00544500
                    AIF   (K'&XINLIST GT 0).ZG164E  VALID ARG           00544600
                    AIF   (T'&INLIST EQ 'O').ZG164D  OMITTED            00544700
&ZASYSLNDX          SETA  0                                             00544800
.ZG164A             ANOP  ,           POSITIONAL MACRO KEY              00544900
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00545000
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG164C             00545100
&ZTLC               SETC 'INLIST'                                       00545200
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG164A    00545300
.ZG164B             ANOP  ,                                             00545400
&ZXINLIST           SETC  ''          RESET IN/OUTPUT                   00545500
&ZMS                SETC  'THE "INLIST" KEY'                            00545600
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00545700
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00545800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00545900
                    AGO   .ZG164E                                       00546000
.ZG164C             ANOP  ,                                             00546100
&ZXINLIST           SETC  ''          RESET IN/OUTPUT                   00546200
&ZMS                SETC  '"INLIST='                                    00546300
&ZMS                SETC  '&ZMS.&INLIST"'                               00546400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00546500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00546600
&ZMS                SETC  '&ZMS "NO"'                                   00546700
&ZMS                SETC  '&ZMS OR "YES".'                              00546800
                    MNOTE 8,' &ZMS '                                    00546900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00547000
                    AGO   .ZG164E                                       00547100
.ZG164D             ANOP  ,                                             00547200
&XINLIST            SETC  'NO'        SET DEFAULT KEYWORD               00547300
.ZG164E             ANOP  ,                                             00547400
.*----------------------------------------------------------------***   00547500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00547600
                    AIF   (N'&DISABLED LE 1).ZG166A  CK NUM             00547700
&ZMS                SETC  '"DISABLED='                                  00547800
&ZMS                SETC  '&ZMS.&DISABLED"'                             00547900
&ZMS                SETC  '&ZMS "DISABLED"'                             00548000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00548100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00548200
.ZG166A             ANOP  ,                                             00548300
.*-------------------------------------------------------------------   00548400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00548500
&XDISABLED          SETC  ''          INITIALIZE XVARIABLE              00548600
.ZG167A   AIF   ('&DISABLED(1)' NE 'NO').ZG168A                         00548700
&XDISABLED          SETC  'NO'        SET KEYWORD                       00548800
.*-------------------------------------------------------------------   00548900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00549000
.ZG168A   AIF   ('&DISABLED(1)' NE 'YES').ZG169A                        00549100
&XDISABLED          SETC  'YES'       SET KEYWORD                       00549200
.*-------------------------------------------------------------------   00549300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00549400
.ZG169A             AIF   (K'&XDISABLED GT 0).ZG169C  KEYWORD           00549500
                    AIF   (K'&DISABLED(1) LE 0).ZG169B                  00549600
&ZMS                SETC  '"DISABLED='                                  00549700
&ZMS                SETC  '&ZMS.&DISABLED"'                             00549800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00549900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00550000
&ZMS                SETC  '&ZMS "NO"'                                   00550100
&ZMS                SETC  '&ZMS OR "YES".'                              00550200
                    MNOTE 8,' &ZMS '                                    00550300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00550400
.ZG169B             ANOP  ,                                             00550500
&XDISABLED          SETC  'NO'        SET DEFAULT KEYWORD               00550600
.ZG169C             ANOP  ,                                             00550700
&ZXDISABLED         SETC  'INPUT'     SET IN/OUTPUT                     00550800
.*-------------------------------------------------------------------   00550900
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00551000
&XDEFOP             SETC  ''          INITIALIZE XVARIABLE              00551100
&ZASYSLNDX          SETA  0                                             00551200
.ZG171A             ANOP  ,           POSITIONAL KEY SEARCH             00551300
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00551400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG171B  DONE                  00551500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG171A           00551600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'IOON').ZG171A                00551700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00551800
&ZXDEFOP            SETC  'INPUT'     SET IN/OUTPUT                     00551900
&XDEFOP             SETC  'IOON'      SET XVARIABLE                     00552000
&ZXIOON             SETC  'INPUT'     SET IN/OUTPUT                     00552100
&XIOON              SETC  'IOON'      SET XVARIABLE PARM                00552200
.ZG171B             ANOP  ,                                             00552300
.*-------------------------------------------------------------------   00552400
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00552500
&ZASYSLNDX          SETA  0                                             00552600
.ZG190A             ANOP  ,           POSITIONAL KEY SEARCH             00552700
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00552800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG190C  DONE                  00552900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG190A           00553000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'IOOFF').ZG190A               00553100
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00553200
                    AIF   (K'&XDEFOP LE 0).ZG190B  VALID                00553300
&ZMS                SETC  '"IOOFF'                                      00553400
&ZMS                SETC  '&ZMS."'                                      00553500
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00553600
&ZMS                SETC  '&ZMS "&XDEFOP"'                              00553700
                    MNOTE 8,' &ZMS KEY.'                                00553800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00553900
                    AGO   .ZG190C                                       00554000
.*                                                                      00554100
.ZG190B             ANOP  ,                                             00554200
&ZXDEFOP            SETC  'INPUT'     SET IN/OUTPUT                     00554300
&XDEFOP             SETC  'IOOFF'     SET XVARIABLE                     00554400
&ZXIOOFF            SETC  'INPUT'     SET IN/OUTPUT                     00554500
&XIOOFF             SETC  'IOOFF'     SET XVARIABLE PARM                00554600
.ZG190C             ANOP  ,                                             00554700
.*-------------------------------------------------------------------   00554800
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00554900
&ZASYSLNDX          SETA  0                                             00555000
.ZG196A             ANOP  ,           POSITIONAL KEY SEARCH             00555100
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00555200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG196C  DONE                  00555300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG196A           00555400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DREFON').ZG196A              00555500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00555600
                    AIF   (K'&XDEFOP LE 0).ZG196B  VALID                00555700
&ZMS                SETC  '"DREFON'                                     00555800
&ZMS                SETC  '&ZMS."'                                      00555900
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00556000
&ZMS                SETC  '&ZMS "&XDEFOP"'                              00556100
                    MNOTE 8,' &ZMS KEY.'                                00556200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00556300
                    AGO   .ZG196C                                       00556400
.*                                                                      00556500
.ZG196B             ANOP  ,                                             00556600
&ZXDEFOP            SETC  'INPUT'     SET IN/OUTPUT                     00556700
&XDEFOP             SETC  'DREFON'    SET XVARIABLE                     00556800
&ZXDREFON           SETC  'INPUT'     SET IN/OUTPUT                     00556900
&XDREFON            SETC  'DREFON'    SET XVARIABLE PARM                00557000
.ZG196C             ANOP  ,                                             00557100
.*-------------------------------------------------------------------   00557200
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00557300
&ZASYSLNDX          SETA  0                                             00557400
.ZG197A             ANOP  ,           POSITIONAL KEY SEARCH             00557500
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00557600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG197C  DONE                  00557700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG197A           00557800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'DREFOFF').ZG197A             00557900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00558000
                    AIF   (K'&XDEFOP LE 0).ZG197B  VALID                00558100
&ZMS                SETC  '"DREFOFF'                                    00558200
&ZMS                SETC  '&ZMS."'                                      00558300
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00558400
&ZMS                SETC  '&ZMS "&XDEFOP"'                              00558500
                    MNOTE 8,' &ZMS KEY.'                                00558600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00558700
                    AGO   .ZG197C                                       00558800
.*                                                                      00558900
.ZG197B             ANOP  ,                                             00559000
&ZXDEFOP            SETC  'INPUT'     SET IN/OUTPUT                     00559100
&XDEFOP             SETC  'DREFOFF'   SET XVARIABLE                     00559200
&ZXDREFOFF          SETC  'INPUT'     SET IN/OUTPUT                     00559300
&XDREFOFF           SETC  'DREFOFF'   SET XVARIABLE PARM                00559400
.ZG197C             ANOP  ,                                             00559500
.*------------------------------------------------------------------    00559600
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00559700
                    AIF   (K'&XDEFOP GT 0).ZG203B                       00559800
&ZXDEFOP            SETC  ''          RESET IN/OUTPUT                   00559900
&ZXIOON             SETC  ''          RESET IN/OUTPUT                   00560000
&XDEFOP             SETC  ''          ENSURE NULL                       00560100
&XIOON              SETC  ''          ENSURE NULL                       00560200
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00560300
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00560400
&ZMS                SETC  '&ZMS REQUIRED:'                              00560500
&ZMS                SETC  '&ZMS "IOON",'        VALID ME KEY            00560600
&ZMS                SETC  '&ZMS "IOOFF",'       VALID ME KEY            00560700
&ZMS                SETC  '&ZMS "DREFON",'      VALID ME KEY            00560800
&ZMS                SETC  '&ZMS OR "DREFOFF".'  VALID ME KEY            00560900
                    MNOTE 8,' &ZMS '                                    00561000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00561100
.ZG203B             ANOP  ,                                             00561200
.*-------------------------------------------------------------------   00561300
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00561400
.ZG171ZY  AIF    ('&XDEFOP' NE 'IOON').ZG190ZY                          00561500
.*-------------------------------------------------------------------   00561600
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00561700
&ZCVAL              SETC ''           ERROR KEY FIELD                   00561800
.ZG171I0            AIF   (K'&FORCE LE 0).ZG171I1                       00561900
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00562000
.ZG171I1            AIF   (K'&ZCVAL LE 0).ZG171J  KEY                   00562100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00562200
&ZMS                SETC  '"IOON'                                       00562300
&ZMS                SETC  '&ZMS."'                                      00562400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00562500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00562600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00562700
.ZG171J             ANOP  ,                                             00562800
.*------------------------------------------------------------------    00562900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00563000
&XSTEAL             SETC  ''          INITIALIZE XVARIABLE              00563100
.*-------------------------------------------------------------------   00563200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00563300
.ZG174              ANOP  ,                                             00563400
                    AIF   (K'&STEAL(1) LE 0).ZG174A                     00563500
&ZTLC               SETC 'YES'                                          00563600
                    AIF   ('&STEAL(1)' NE '&ZTLC').ZG175                00563700
&XSTEAL             SETC  'YES'       SET KEYWORD                       00563800
                    AIF   (N'&STEAL LE 1).ZG174A  CK NUM                00563900
&ZMS                SETC  '"STEAL='                                     00564000
&ZMS                SETC  '&ZMS.&STEAL"'                                00564100
&ZMS                SETC  '&ZMS "STEAL"'                                00564200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00564300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00564400
.ZG174A             ANOP  ,                                             00564500
.*-------------------------------------------------------------------   00564600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00564700
.ZG175              ANOP  ,                                             00564800
&ZTLC               SETC 'NO'                                           00564900
                    AIF   ('&STEAL(1)' NE '&ZTLC').ZG176                00565000
&XSTEAL             SETC  'NO'        SET KEYWORD                       00565100
                    AIF   (N'&STEAL LE 1).ZG175A  CK NUM                00565200
&ZMS                SETC  '"STEAL='                                     00565300
&ZMS                SETC  '&ZMS.&STEAL"'                                00565400
&ZMS                SETC  '&ZMS "STEAL"'                                00565500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00565600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00565700
.ZG175A             ANOP  ,                                             00565800
.*------------------------------------------------------------------    00565900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566000
.ZG176              ANOP  ,                                             00566100
&ZXSTEAL            SETC  'INPUT'     SET IN/OUTPUT                     00566200
                    AIF   (K'&XSTEAL GT 0).ZG176E  VALID ARG            00566300
                    AIF   (T'&STEAL EQ 'O').ZG176D  OMITTED             00566400
&ZASYSLNDX          SETA  0                                             00566500
.ZG176A             ANOP  ,           POSITIONAL MACRO KEY              00566600
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00566700
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG176C             00566800
&ZTLC               SETC 'STEAL'                                        00566900
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG176A    00567000
.ZG176B             ANOP  ,                                             00567100
&ZXSTEAL            SETC  ''          RESET IN/OUTPUT                   00567200
&ZMS                SETC  'THE "STEAL" KEY'                             00567300
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00567400
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00567500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00567600
                    AGO   .ZG176E                                       00567700
.ZG176C             ANOP  ,                                             00567800
&ZXSTEAL            SETC  ''          RESET IN/OUTPUT                   00567900
&ZMS                SETC  '"STEAL='                                     00568000
&ZMS                SETC  '&ZMS.&STEAL"'                                00568100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00568200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00568300
&ZMS                SETC  '&ZMS "YES"'                                  00568400
&ZMS                SETC  '&ZMS OR "NO".'                               00568500
                    MNOTE 8,' &ZMS '                                    00568600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00568700
                    AGO   .ZG176E                                       00568800
.ZG176D             ANOP  ,                                             00568900
&XSTEAL             SETC  'YES'       SET DEFAULT KEYWORD               00569000
.ZG176E             ANOP  ,                                             00569100
.*----------------------------------------------------------------***   00569200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00569300
                    AIF   (N'&LONG LE 1).ZG178A  CK NUM                 00569400
&ZMS                SETC  '"LONG='                                      00569500
&ZMS                SETC  '&ZMS.&LONG"'                                 00569600
&ZMS                SETC  '&ZMS "LONG"'                                 00569700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00569800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00569900
.ZG178A             ANOP  ,                                             00570000
.*-------------------------------------------------------------------   00570100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00570200
&XLONG              SETC  ''          INITIALIZE XVARIABLE              00570300
.ZG179A   AIF   ('&LONG(1)' NE 'YES').ZG180A                            00570400
&XLONG              SETC  'YES'       SET KEYWORD                       00570500
.*-------------------------------------------------------------------   00570600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00570700
.ZG180A   AIF   ('&LONG(1)' NE 'NO').ZG181A                             00570800
&XLONG              SETC  'NO'        SET KEYWORD                       00570900
.*-------------------------------------------------------------------   00571000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00571100
.ZG181A             AIF   (K'&XLONG GT 0).ZG181C  KEYWORD               00571200
                    AIF   (K'&LONG(1) LE 0).ZG181B                      00571300
&ZMS                SETC  '"LONG='                                      00571400
&ZMS                SETC  '&ZMS.&LONG"'                                 00571500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00571600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00571700
&ZMS                SETC  '&ZMS "YES"'                                  00571800
&ZMS                SETC  '&ZMS OR "NO".'                               00571900
                    MNOTE 8,' &ZMS '                                    00572000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00572100
.ZG181B             ANOP  ,                                             00572200
&XLONG              SETC  'YES'       SET DEFAULT KEYWORD               00572300
.ZG181C             ANOP  ,                                             00572400
&ZXLONG             SETC  'INPUT'     SET IN/OUTPUT                     00572500
.*------------------------------------------------------------------    00572600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00572700
&XPCIEIO            SETC  ''          INITIALIZE XVARIABLE              00572800
.*-------------------------------------------------------------------   00572900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00573000
.ZG184              ANOP  ,                                             00573100
                    AIF   (K'&PCIEIO(1) LE 0).ZG184A                    00573200
&ZTLC               SETC 'NO'                                           00573300
                    AIF   ('&PCIEIO(1)' NE '&ZTLC').ZG185               00573400
&XPCIEIO            SETC  'NO'        SET KEYWORD                       00573500
                    AIF   (N'&PCIEIO LE 1).ZG184A  CK NUM               00573600
&ZMS                SETC  '"PCIEIO='                                    00573700
&ZMS                SETC  '&ZMS.&PCIEIO"'                               00573800
&ZMS                SETC  '&ZMS "PCIEIO"'                               00573900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00574000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00574100
.ZG184A             ANOP  ,                                             00574200
.*------------------------------------------------------------------    00574300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00574400
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00574500
.ZG184A0            AIF   (K'&DMAPGTPTR LE 0).ZG184A1  OK               00574600
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     INCORRECT KEY USED      00574700
.ZG184A1            AIF   (K'&ZCVAL LE 0).ZG184A2  OK                   00574800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00574900
&ZMS                SETC  '"PCIEIO'                                     00575000
&ZMS                SETC  '&ZMS.=&PCIEIO"'                              00575100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00575200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00575300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00575400
.ZG184A2            ANOP  ,                                             00575500
.*-------------------------------------------------------------------   00575600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575700
.ZG185              ANOP  ,                                             00575800
&ZTLC               SETC 'YES'                                          00575900
                    AIF   ('&PCIEIO(1)' NE '&ZTLC').ZG189               00576000
&XPCIEIO            SETC  'YES'       SET KEYWORD                       00576100
                    AIF   (N'&PCIEIO LE 1).ZG185A  CK NUM               00576200
&ZMS                SETC  '"PCIEIO='                                    00576300
&ZMS                SETC  '&ZMS.&PCIEIO"'                               00576400
&ZMS                SETC  '&ZMS "PCIEIO"'                               00576500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00576600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00576700
.ZG185A             ANOP  ,                                             00576800
.*----------------------------------------------------------------***   00576900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00577000
                    AIF   (N'&DMAPGTPTR LE 1).ZG187A  CK NUM            00577100
&ZMS                SETC  '"DMAPGTPTR='                                 00577200
&ZMS                SETC  '&ZMS.&DMAPGTPTR"'                            00577300
&ZMS                SETC  '&ZMS "DMAPGTPTR"'                            00577400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00577500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00577600
.ZG187A             ANOP  ,                                             00577700
.*-------------------------------------------------------------------   00577800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00577900
&ZXDMAPGTPTR        SETC  'INPUT'     SET IN/OUTPUT                     00578000
&XDMAPGTPTR         SETC  '&DMAPGTPTR(1)'       SET XVARIABLE           00578100
                    AIF   (N'&DMAPGTPTR GT 1).ZG187B  MULTI             00578200
&XDMAPGTPTR         SETC  '&DMAPGTPTR'          SET XVARIABLE           00578300
.ZG187B             AIF   (K'&DMAPGTPTR(1) GT 0).ZG187C                 00578400
&ZXDMAPGTPTR        SETC  ''          RESET IN/OUTPUT                   00578500
&ZMS                SETC  'WHEN "YES" IS SPECIFIED'                     00578600
&ZMS                SETC  '&ZMS , "DMAPGTPTR" KEY AND ITS'              00578700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00578800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00578900
.ZG187C             ANOP  ,                                             00579000
.*-------------------------------------------------------------------   00579100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00579200
                    AIF   (K'&ZXDMAPGTPTR LE 0).ZG187R  NOT I/O         00579300
                    AIF   ('&XDMAPGTPTR'(1,1) NE '(').ZG187R            00579400
&ZCGPR              SETC  '&XDMAPGTPTR'(2,K'&XDMAPGTPTR-2)              00579500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG187P                 00579600
                    AIF   (K'&ZCGPR GT 2).ZG187Q                        00579700
                    AIF   ('&ZCGPR' EQ '0').ZG187Q                      00579800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00579900
                    AIF   (T'&ZCGPR NE 'N').ZG187Q  INVALID REG NAME    00580000
.ZG187P             ANOP  ,                                             00580100
                    AIF   (T'&ZCGPR NE 'N').ZG187R  NON NUMERIC         00580200
                    AIF   ('&ZCGPR' LT '2').ZG187Q                      00580300
                    AIF   ('&ZCGPR' LE '12').ZG187R                     00580400
.ZG187Q             ANOP  ,                                             00580500
&ZMS                SETC  '"DMAPGTPTR='                                 00580600
&ZMS                SETC  '&ZMS.&DMAPGTPTR"'                            00580700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00580800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00580900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00581000
.ZG187R             ANOP  ,                                             00581100
.*------------------------------------------------------------------    00581200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00581300
.ZG189              ANOP  ,                                             00581400
&ZXPCIEIO           SETC  'INPUT'     SET IN/OUTPUT                     00581500
                    AIF   (K'&XPCIEIO GT 0).ZG189E  VALID ARG           00581600
                    AIF   (T'&PCIEIO EQ 'O').ZG189D  OMITTED            00581700
&ZASYSLNDX          SETA  0                                             00581800
.ZG189A             ANOP  ,           POSITIONAL MACRO KEY              00581900
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00582000
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG189C             00582100
&ZTLC               SETC 'PCIEIO'                                       00582200
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG189A    00582300
.ZG189B             ANOP  ,                                             00582400
&ZXPCIEIO           SETC  ''          RESET IN/OUTPUT                   00582500
&ZMS                SETC  'THE "PCIEIO" KEY'                            00582600
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00582700
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00582800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00582900
                    AGO   .ZG189E                                       00583000
.ZG189C             ANOP  ,                                             00583100
&ZXPCIEIO           SETC  ''          RESET IN/OUTPUT                   00583200
&ZMS                SETC  '"PCIEIO='                                    00583300
&ZMS                SETC  '&ZMS.&PCIEIO"'                               00583400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00583500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00583600
&ZMS                SETC  '&ZMS "NO"'                                   00583700
&ZMS                SETC  '&ZMS OR "YES".'                              00583800
                    MNOTE 8,' &ZMS '                                    00583900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00584000
                    AGO   .ZG189E                                       00584100
.ZG189D             ANOP  ,                                             00584200
&XPCIEIO            SETC  'NO'        SET DEFAULT KEYWORD               00584300
.ZG189E             ANOP  ,                                             00584400
.*-------------------------------------------------------------------   00584500
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00584600
.ZG190ZY  AIF    ('&XDEFOP' NE 'IOOFF').ZG196ZY                         00584700
.*-------------------------------------------------------------------   00584800
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00584900
&ZCVAL              SETC ''           ERROR KEY FIELD                   00585000
.ZG190I0            AIF   (K'&STEAL LE 0).ZG190I1                       00585100
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00585200
.ZG190I1            AIF   (K'&LONG LE 0).ZG190I2                        00585300
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00585400
.ZG190I2            AIF   (K'&DMAPGTPTR LE 0).ZG190I3                   00585500
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00585600
.ZG190I3            AIF   (K'&FORCE LE 0).ZG190I4                       00585700
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00585800
.ZG190I4            AIF   (K'&ZCVAL LE 0).ZG190J  KEY                   00585900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00586000
&ZMS                SETC  '"IOOFF'                                      00586100
&ZMS                SETC  '&ZMS."'                                      00586200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00586300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00586400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00586500
.ZG190J             ANOP  ,                                             00586600
.*----------------------------------------------------------------***   00586700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00586800
                    AIF   (N'&PCIEIO LE 1).ZG192A  CK NUM               00586900
&ZMS                SETC  '"PCIEIO='                                    00587000
&ZMS                SETC  '&ZMS.&PCIEIO"'                               00587100
&ZMS                SETC  '&ZMS "PCIEIO"'                               00587200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00587300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00587400
.ZG192A             ANOP  ,                                             00587500
.*-------------------------------------------------------------------   00587600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00587700
&XPCIEIO            SETC  ''          INITIALIZE XVARIABLE              00587800
.ZG193A   AIF   ('&PCIEIO(1)' NE 'NO').ZG194A                           00587900
&XPCIEIO            SETC  'NO'        SET KEYWORD                       00588000
.*-------------------------------------------------------------------   00588100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00588200
.ZG194A   AIF   ('&PCIEIO(1)' NE 'YES').ZG195A                          00588300
&XPCIEIO            SETC  'YES'       SET KEYWORD                       00588400
.*-------------------------------------------------------------------   00588500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00588600
.ZG195A             AIF   (K'&XPCIEIO GT 0).ZG195C  KEYWORD             00588700
                    AIF   (K'&PCIEIO(1) LE 0).ZG195B                    00588800
&ZMS                SETC  '"PCIEIO='                                    00588900
&ZMS                SETC  '&ZMS.&PCIEIO"'                               00589000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00589100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00589200
&ZMS                SETC  '&ZMS "NO"'                                   00589300
&ZMS                SETC  '&ZMS OR "YES".'                              00589400
                    MNOTE 8,' &ZMS '                                    00589500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00589600
.ZG195B             ANOP  ,                                             00589700
&XPCIEIO            SETC  'NO'        SET DEFAULT KEYWORD               00589800
.ZG195C             ANOP  ,                                             00589900
&ZXPCIEIO           SETC  'INPUT'     SET IN/OUTPUT                     00590000
.*-------------------------------------------------------------------   00590100
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00590200
.ZG196ZY  AIF    ('&XDEFOP' NE 'DREFON').ZG197ZY                        00590300
.*-------------------------------------------------------------------   00590400
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00590500
&ZCVAL              SETC ''           ERROR KEY FIELD                   00590600
.ZG196I0            AIF   (K'&STEAL LE 0).ZG196I1                       00590700
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00590800
.ZG196I1            AIF   (K'&LONG LE 0).ZG196I2                        00590900
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00591000
.ZG196I2            AIF   (K'&PCIEIO LE 0).ZG196I3                      00591100
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00591200
.ZG196I3            AIF   (K'&DMAPGTPTR LE 0).ZG196I4                   00591300
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00591400
.ZG196I4            AIF   (K'&FORCE LE 0).ZG196I5                       00591500
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00591600
.ZG196I5            AIF   (K'&ZCVAL LE 0).ZG196J  KEY                   00591700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00591800
&ZMS                SETC  '"DREFON'                                     00591900
&ZMS                SETC  '&ZMS."'                                      00592000
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00592100
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00592200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00592300
.ZG196J             ANOP  ,                                             00592400
.*-------------------------------------------------------------------   00592500
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00592600
.ZG197ZY  AIF    ('&XDEFOP' NE 'DREFOFF').ZG203ZY                       00592700
.*-------------------------------------------------------------------   00592800
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00592900
&ZCVAL              SETC ''           ERROR KEY FIELD                   00593000
.ZG197I0            AIF   (K'&STEAL LE 0).ZG197I1                       00593100
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00593200
.ZG197I1            AIF   (K'&LONG LE 0).ZG197I2                        00593300
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00593400
.ZG197I2            AIF   (K'&PCIEIO LE 0).ZG197I3                      00593500
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00593600
.ZG197I3            AIF   (K'&DMAPGTPTR LE 0).ZG197I4                   00593700
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00593800
.ZG197I4            AIF   (K'&ZCVAL LE 0).ZG197J  KEY                   00593900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00594000
&ZMS                SETC  '"DREFOFF'                                    00594100
&ZMS                SETC  '&ZMS."'                                      00594200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00594300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00594400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00594500
.ZG197J             ANOP  ,                                             00594600
.*----------------------------------------------------------------***   00594700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00594800
                    AIF   (N'&FORCE LE 1).ZG199A  CK NUM                00594900
&ZMS                SETC  '"FORCE='                                     00595000
&ZMS                SETC  '&ZMS.&FORCE"'                                00595100
&ZMS                SETC  '&ZMS "FORCE"'                                00595200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00595300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00595400
.ZG199A             ANOP  ,                                             00595500
.*-------------------------------------------------------------------   00595600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00595700
&XFORCE             SETC  ''          INITIALIZE XVARIABLE              00595800
.ZG200A   AIF   ('&FORCE(1)' NE 'NO').ZG201A                            00595900
&XFORCE             SETC  'NO'        SET KEYWORD                       00596000
.*-------------------------------------------------------------------   00596100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00596200
.ZG201A   AIF   ('&FORCE(1)' NE 'YES').ZG202A                           00596300
&XFORCE             SETC  'YES'       SET KEYWORD                       00596400
.*-------------------------------------------------------------------   00596500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00596600
.ZG202A             AIF   (K'&XFORCE GT 0).ZG202C  KEYWORD              00596700
                    AIF   (K'&FORCE(1) LE 0).ZG202B                     00596800
&ZMS                SETC  '"FORCE='                                     00596900
&ZMS                SETC  '&ZMS.&FORCE"'                                00597000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00597100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00597200
&ZMS                SETC  '&ZMS "NO"'                                   00597300
&ZMS                SETC  '&ZMS OR "YES".'                              00597400
                    MNOTE 8,' &ZMS '                                    00597500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00597600
.ZG202B             ANOP  ,                                             00597700
&XFORCE             SETC  'NO'        SET DEFAULT KEYWORD               00597800
.ZG202C             ANOP  ,                                             00597900
&ZXFORCE            SETC  'INPUT'     SET IN/OUTPUT                     00598000
.*-------------------------------------------------------------------   00598100
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00598200
.ZG203ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00598300
.*-------------------------------------------------------------------   00598400
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00598500
.ZG204ZY  AIF    ('&XSERVICE' NE 'EXTEND').ZG219ZY                      00598600
.*-------------------------------------------------------------------   00598700
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00598800
&ZCVAL              SETC ''           ERROR KEY FIELD                   00598900
.ZG204I0            AIF   (K'&NAME LE 0).ZG204I1                        00599000
&ZCVAL              SETC '&ZCVAL NAME'          DISALLOWED KEY          00599100
.ZG204I1            AIF   (K'&GENNAME LE 0).ZG204I2                     00599200
&ZCVAL              SETC '&ZCVAL GENNAME'       DISALLOWED KEY          00599300
.ZG204I2            AIF   (K'&OUTNAME LE 0).ZG204I3                     00599400
&ZCVAL              SETC '&ZCVAL OUTNAME'       DISALLOWED KEY          00599500
.ZG204I3            AIF   (K'&TYPE LE 0).ZG204I4                        00599600
&ZCVAL              SETC '&ZCVAL TYPE'          DISALLOWED KEY          00599700
.ZG204I4            AIF   (K'&DREF LE 0).ZG204I5                        00599800
&ZCVAL              SETC '&ZCVAL DREF'          DISALLOWED KEY          00599900
.ZG204I5            AIF   (K'&SCOPE LE 0).ZG204I6                       00600000
&ZCVAL              SETC '&ZCVAL SCOPE'         DISALLOWED KEY          00600100
.ZG204I6            AIF   (K'&BACK LE 0).ZG204I7                        00600200
&ZCVAL              SETC '&ZCVAL BACK'          DISALLOWED KEY          00600300
.ZG204I7            AIF   (K'&PAGEFRAMESIZE LE 0).ZG204I8               00600400
&ZCVAL              SETC '&ZCVAL PAGEFRAMESIZE'  DISALLOWED KEY         00600500
.ZG204I8            AIF   (K'&HIDEZERO LE 0).ZG204I9                    00600600
&ZCVAL              SETC '&ZCVAL HIDEZERO'      DISALLOWED KEY          00600700
.ZG204I9            AIF   (K'&HSTYPE LE 0).ZG204I10                     00600800
&ZCVAL              SETC '&ZCVAL HSTYPE'        DISALLOWED KEY          00600900
.ZG204I10           AIF   (K'&SHARE LE 0).ZG204I11                      00601000
&ZCVAL              SETC '&ZCVAL SHARE'         DISALLOWED KEY          00601100
.ZG204I11           AIF   (K'&CASTOUT LE 0).ZG204I12                    00601200
&ZCVAL              SETC '&ZCVAL CASTOUT'       DISALLOWED KEY          00601300
.ZG204I12           AIF   (K'&XCALLERKEY LE 0).ZG204I13                 00601400
&ZCVAL              SETC '&ZCVAL XCALLERKEY'    DISALLOWED KEY          00601500
.ZG204I13           AIF   (K'&KEY LE 0).ZG204I14                        00601600
&ZCVAL              SETC '&ZCVAL KEY'           DISALLOWED KEY          00601700
.ZG204I14           AIF   (K'&FPROT LE 0).ZG204I15                      00601800
&ZCVAL              SETC '&ZCVAL FPROT'         DISALLOWED KEY          00601900
.ZG204I15           AIF   (K'&TTOKEN LE 0).ZG204I16                     00602000
&ZCVAL              SETC '&ZCVAL TTOKEN'        DISALLOWED KEY          00602100
.ZG204I16           AIF   (K'&ORIGIN LE 0).ZG204I17                     00602200
&ZCVAL              SETC '&ZCVAL ORIGIN'        DISALLOWED KEY          00602300
.ZG204I17           AIF   (K'&CRITICALPAGING LE 0).ZG204I18             00602400
&ZCVAL              SETC '&ZCVAL CRITICALPAGING'  DISALLOWED KEY        00602500
.ZG204I18           AIF   (K'&INLIST LE 0).ZG204I19                     00602600
&ZCVAL              SETC '&ZCVAL INLIST'        DISALLOWED KEY          00602700
.ZG204I19           AIF   (K'&START LE 0).ZG204I20                      00602800
&ZCVAL              SETC '&ZCVAL START'         DISALLOWED KEY          00602900
.ZG204I20           AIF   (K'&NUMRANGE LE 0).ZG204I21                   00603000
&ZCVAL              SETC '&ZCVAL NUMRANGE'      DISALLOWED KEY          00603100
.ZG204I21           AIF   (K'&RANGLIST LE 0).ZG204I22                   00603200
&ZCVAL              SETC '&ZCVAL RANGLIST'      DISALLOWED KEY          00603300
.ZG204I22           AIF   (K'&DISABLED LE 0).ZG204I23                   00603400
&ZCVAL              SETC '&ZCVAL DISABLED'      DISALLOWED KEY          00603500
.ZG204I23           AIF   (K'&FREESHAREDSEG LE 0).ZG204I24              00603600
&ZCVAL              SETC '&ZCVAL FREESHAREDSEG'  DISALLOWED KEY         00603700
.ZG204I24           AIF   (K'&KEEPREAL LE 0).ZG204I25                   00603800
&ZCVAL              SETC '&ZCVAL KEEPREAL'      DISALLOWED KEY          00603900
.ZG204I25           AIF   (K'&CLEAR LE 0).ZG204I26                      00604000
&ZCVAL              SETC '&ZCVAL CLEAR'         DISALLOWED KEY          00604100
.ZG204I26           AIF   (K'&XIOON LE 0).ZG204I27                      00604200
&ZCVAL              SETC '&ZCVAL XIOON'         DISALLOWED KEY          00604300
.ZG204I27           AIF   (K'&STEAL LE 0).ZG204I28                      00604400
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00604500
.ZG204I28           AIF   (K'&LONG LE 0).ZG204I29                       00604600
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00604700
.ZG204I29           AIF   (K'&PCIEIO LE 0).ZG204I30                     00604800
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00604900
.ZG204I30           AIF   (K'&DMAPGTPTR LE 0).ZG204I31                  00605000
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00605100
.ZG204I31           AIF   (K'&XIOOFF LE 0).ZG204I32                     00605200
&ZCVAL              SETC '&ZCVAL XIOOFF'        DISALLOWED KEY          00605300
.ZG204I32           AIF   (K'&XDREFON LE 0).ZG204I33                    00605400
&ZCVAL              SETC '&ZCVAL XDREFON'       DISALLOWED KEY          00605500
.ZG204I33           AIF   (K'&XDREFOFF LE 0).ZG204I34                   00605600
&ZCVAL              SETC '&ZCVAL XDREFOFF'      DISALLOWED KEY          00605700
.ZG204I34           AIF   (K'&FORCE LE 0).ZG204I35                      00605800
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00605900
.ZG204I35           AIF   (K'&ZCVAL LE 0).ZG204J  KEY                   00606000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00606100
                    AIF  (K'&ZCVAL LE 160).ZG204K                       00606200
&ZCVAL              SETC '&ZCVAL'(1,160)                                00606300
&ZCVAL              SETC '&ZCVAL....'                                   00606400
.ZG204K             ANOP                                                00606500
&ZMS                SETC  '"EXTEND'                                     00606600
&ZMS                SETC  '&ZMS."'                                      00606700
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00606800
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00606900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00607000
.ZG204J             ANOP  ,                                             00607100
.*----------------------------------------------------------------***   00607200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00607300
                    AIF   (N'&STOKEN LE 1).ZG206A  CK NUM               00607400
&ZMS                SETC  '"STOKEN='                                    00607500
&ZMS                SETC  '&ZMS.&STOKEN"'                               00607600
&ZMS                SETC  '&ZMS "STOKEN"'                               00607700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00607800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00607900
.ZG206A             ANOP  ,                                             00608000
.*-------------------------------------------------------------------   00608100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00608200
&ZXSTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00608300
&XSTOKEN            SETC  '&STOKEN(1)'          SET XVARIABLE           00608400
                    AIF   (N'&STOKEN GT 1).ZG206B  MULTI                00608500
&XSTOKEN            SETC  '&STOKEN'   SET XVARIABLE                     00608600
.ZG206B             AIF   (K'&STOKEN(1) GT 0).ZG206C                    00608700
&ZXSTOKEN           SETC  ''          RESET IN/OUTPUT                   00608800
&ZMS                SETC  ' '                                           00608900
&ZMS                SETC  '&ZMS "STOKEN" KEY AND ITS'                   00609000
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00609100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00609200
.ZG206C             ANOP  ,                                             00609300
.*-------------------------------------------------------------------   00609400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00609500
                    AIF   (K'&ZXSTOKEN LE 0).ZG206R  NOT I/O            00609600
                    AIF   ('&XSTOKEN'(1,1) NE '(').ZG206R               00609700
&ZCGPR              SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                    00609800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG206P                 00609900
                    AIF   (K'&ZCGPR GT 2).ZG206Q                        00610000
                    AIF   ('&ZCGPR' EQ '0').ZG206Q                      00610100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00610200
                    AIF   (T'&ZCGPR NE 'N').ZG206Q  INVALID REG NAME    00610300
.ZG206P             ANOP  ,                                             00610400
                    AIF   (T'&ZCGPR NE 'N').ZG206R  NON NUMERIC         00610500
                    AIF   ('&ZCGPR' LT '2').ZG206Q                      00610600
                    AIF   ('&ZCGPR' LE '12').ZG206R                     00610700
.ZG206Q             ANOP  ,                                             00610800
&ZMS                SETC  '"STOKEN='                                    00610900
&ZMS                SETC  '&ZMS.&STOKEN"'                               00611000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00611100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00611200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00611300
.ZG206R             ANOP  ,                                             00611400
.*----------------------------------------------------------------***   00611500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00611600
                    AIF   (N'&BLOCKS LE 1).ZG209A  CK NUM               00611700
&ZMS                SETC  '"BLOCKS='                                    00611800
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00611900
&ZMS                SETC  '&ZMS "BLOCKS"'                               00612000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00612100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00612200
.ZG209A             ANOP  ,                                             00612300
.*-------------------------------------------------------------------   00612400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00612500
&ZXBLOCKS           SETC  'INPUT'     SET IN/OUTPUT                     00612600
&XBLOCKS            SETC  '&BLOCKS(1)'          SET XVARIABLE           00612700
                    AIF   (N'&BLOCKS GT 1).ZG209B  MULTI                00612800
&XBLOCKS            SETC  '&BLOCKS'   SET XVARIABLE                     00612900
.ZG209B             AIF   (K'&BLOCKS(1) GT 0).ZG209C                    00613000
&ZXBLOCKS           SETC  ''          RESET IN/OUTPUT                   00613100
&ZMS                SETC  ' '                                           00613200
&ZMS                SETC  '&ZMS "BLOCKS" KEY AND ITS'                   00613300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00613400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00613500
.ZG209C             ANOP  ,                                             00613600
.*-------------------------------------------------------------------   00613700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00613800
                    AIF   (K'&ZXBLOCKS LE 0).ZG209R  NOT I/O            00613900
                    AIF   ('&XBLOCKS'(1,1) NE '(').ZG209R               00614000
&ZCGPR              SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                    00614100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG209P                 00614200
                    AIF   (K'&ZCGPR GT 2).ZG209Q                        00614300
                    AIF   ('&ZCGPR' EQ '0').ZG209Q                      00614400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00614500
                    AIF   (T'&ZCGPR NE 'N').ZG209Q  INVALID REG NAME    00614600
.ZG209P             ANOP  ,                                             00614700
                    AIF   (T'&ZCGPR NE 'N').ZG209R  NON NUMERIC         00614800
                    AIF   ('&ZCGPR' LT '2').ZG209Q                      00614900
                    AIF   ('&ZCGPR' LE '12').ZG209R                     00615000
.ZG209Q             ANOP  ,                                             00615100
&ZMS                SETC  '"BLOCKS='                                    00615200
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00615300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00615400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00615500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00615600
.ZG209R             ANOP  ,                                             00615700
.*----------------------------------------------------------------***   00615800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00615900
                    AIF   (N'&VAR LE 1).ZG212A  CK NUM                  00616000
&ZMS                SETC  '"VAR='                                       00616100
&ZMS                SETC  '&ZMS.&VAR"'                                  00616200
&ZMS                SETC  '&ZMS "VAR"'                                  00616300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00616400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00616500
.ZG212A             ANOP  ,                                             00616600
.*-------------------------------------------------------------------   00616700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00616800
&XVAR               SETC  ''          INITIALIZE XVARIABLE              00616900
.ZG213A   AIF   ('&VAR(1)' NE 'NO').ZG214A                              00617000
&XVAR               SETC  'NO'        SET KEYWORD                       00617100
.*-------------------------------------------------------------------   00617200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00617300
.ZG214A   AIF   ('&VAR(1)' NE 'YES').ZG215A                             00617400
&XVAR               SETC  'YES'       SET KEYWORD                       00617500
.*-------------------------------------------------------------------   00617600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00617700
.ZG215A             AIF   (K'&XVAR GT 0).ZG215C  KEYWORD                00617800
                    AIF   (K'&VAR(1) LE 0).ZG215B                       00617900
&ZMS                SETC  '"VAR='                                       00618000
&ZMS                SETC  '&ZMS.&VAR"'                                  00618100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00618200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00618300
&ZMS                SETC  '&ZMS "NO"'                                   00618400
&ZMS                SETC  '&ZMS OR "YES".'                              00618500
                    MNOTE 8,' &ZMS '                                    00618600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00618700
.ZG215B             ANOP  ,                                             00618800
&XVAR               SETC  'NO'        SET DEFAULT KEYWORD               00618900
.ZG215C             ANOP  ,                                             00619000
&ZXVAR              SETC  'INPUT'     SET IN/OUTPUT                     00619100
.*----------------------------------------------------------------***   00619200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00619300
                    AIF   (N'&NUMBLKS LE 1).ZG217A  CK NUM              00619400
&ZMS                SETC  '"NUMBLKS='                                   00619500
&ZMS                SETC  '&ZMS.&NUMBLKS"'                              00619600
&ZMS                SETC  '&ZMS "NUMBLKS"'                              00619700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00619800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00619900
.ZG217A             ANOP  ,                                             00620000
.*-------------------------------------------------------------------   00620100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00620200
                    AIF   (K'&NUMBLKS(1) LE 0).ZG217C  NO PARM          00620300
&ZXNUMBLKS          SETC  'OUTPUT'    SET OUTPUT                        00620400
&XNUMBLKS           SETC  '&NUMBLKS(1)'         SET XVARIABLE           00620500
                    AIF   (N'&NUMBLKS GT 1).ZG217C                      00620600
&XNUMBLKS           SETC  '&NUMBLKS'  SET XVARIABLE                     00620700
.ZG217C             ANOP  ,                                             00620800
.*-------------------------------------------------------------------   00620900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00621000
                    AIF   (K'&ZXNUMBLKS LE 0).ZG217R  NOT I/O           00621100
                    AIF   ('&XNUMBLKS'(1,1) NE '(').ZG217R              00621200
&ZCGPR              SETC  '&XNUMBLKS'(2,K'&XNUMBLKS-2)                  00621300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG217P                 00621400
                    AIF   (K'&ZCGPR GT 2).ZG217Q                        00621500
                    AIF   ('&ZCGPR' EQ '0').ZG217Q                      00621600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00621700
                    AIF   (T'&ZCGPR NE 'N').ZG217Q  INVALID REG NAME    00621800
.ZG217P             ANOP  ,                                             00621900
                    AIF   (T'&ZCGPR NE 'N').ZG217R  NON NUMERIC         00622000
                    AIF   ('&ZCGPR' LT '2').ZG217Q                      00622100
                    AIF   ('&ZCGPR' LE '12').ZG217R                     00622200
.ZG217Q             ANOP  ,                                             00622300
&ZMS                SETC  '"NUMBLKS='                                   00622400
&ZMS                SETC  '&ZMS.&NUMBLKS"'                              00622500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00622600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00622700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00622800
.ZG217R             ANOP  ,                                             00622900
.*-------------------------------------------------------------------   00623000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00623100
.ZG219ZY  AIF    ('&XSERVICE' NE 'OUT').ZG229ZY                         00623200
.*-------------------------------------------------------------------   00623300
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00623400
&ZCVAL              SETC ''           ERROR KEY FIELD                   00623500
.ZG219I0            AIF   (K'&NAME LE 0).ZG219I1                        00623600
&ZCVAL              SETC '&ZCVAL NAME'          DISALLOWED KEY          00623700
.ZG219I1            AIF   (K'&GENNAME LE 0).ZG219I2                     00623800
&ZCVAL              SETC '&ZCVAL GENNAME'       DISALLOWED KEY          00623900
.ZG219I2            AIF   (K'&OUTNAME LE 0).ZG219I3                     00624000
&ZCVAL              SETC '&ZCVAL OUTNAME'       DISALLOWED KEY          00624100
.ZG219I3            AIF   (K'&TYPE LE 0).ZG219I4                        00624200
&ZCVAL              SETC '&ZCVAL TYPE'          DISALLOWED KEY          00624300
.ZG219I4            AIF   (K'&DREF LE 0).ZG219I5                        00624400
&ZCVAL              SETC '&ZCVAL DREF'          DISALLOWED KEY          00624500
.ZG219I5            AIF   (K'&SCOPE LE 0).ZG219I6                       00624600
&ZCVAL              SETC '&ZCVAL SCOPE'         DISALLOWED KEY          00624700
.ZG219I6            AIF   (K'&BACK LE 0).ZG219I7                        00624800
&ZCVAL              SETC '&ZCVAL BACK'          DISALLOWED KEY          00624900
.ZG219I7            AIF   (K'&PAGEFRAMESIZE LE 0).ZG219I8               00625000
&ZCVAL              SETC '&ZCVAL PAGEFRAMESIZE'  DISALLOWED KEY         00625100
.ZG219I8            AIF   (K'&HIDEZERO LE 0).ZG219I9                    00625200
&ZCVAL              SETC '&ZCVAL HIDEZERO'      DISALLOWED KEY          00625300
.ZG219I9            AIF   (K'&HSTYPE LE 0).ZG219I10                     00625400
&ZCVAL              SETC '&ZCVAL HSTYPE'        DISALLOWED KEY          00625500
.ZG219I10           AIF   (K'&SHARE LE 0).ZG219I11                      00625600
&ZCVAL              SETC '&ZCVAL SHARE'         DISALLOWED KEY          00625700
.ZG219I11           AIF   (K'&CASTOUT LE 0).ZG219I12                    00625800
&ZCVAL              SETC '&ZCVAL CASTOUT'       DISALLOWED KEY          00625900
.ZG219I12           AIF   (K'&XCALLERKEY LE 0).ZG219I13                 00626000
&ZCVAL              SETC '&ZCVAL XCALLERKEY'    DISALLOWED KEY          00626100
.ZG219I13           AIF   (K'&KEY LE 0).ZG219I14                        00626200
&ZCVAL              SETC '&ZCVAL KEY'           DISALLOWED KEY          00626300
.ZG219I14           AIF   (K'&FPROT LE 0).ZG219I15                      00626400
&ZCVAL              SETC '&ZCVAL FPROT'         DISALLOWED KEY          00626500
.ZG219I15           AIF   (K'&TTOKEN LE 0).ZG219I16                     00626600
&ZCVAL              SETC '&ZCVAL TTOKEN'        DISALLOWED KEY          00626700
.ZG219I16           AIF   (K'&ORIGIN LE 0).ZG219I17                     00626800
&ZCVAL              SETC '&ZCVAL ORIGIN'        DISALLOWED KEY          00626900
.ZG219I17           AIF   (K'&NUMBLKS LE 0).ZG219I18                    00627000
&ZCVAL              SETC '&ZCVAL NUMBLKS'       DISALLOWED KEY          00627100
.ZG219I18           AIF   (K'&CRITICALPAGING LE 0).ZG219I19             00627200
&ZCVAL              SETC '&ZCVAL CRITICALPAGING'  DISALLOWED KEY        00627300
.ZG219I19           AIF   (K'&INLIST LE 0).ZG219I20                     00627400
&ZCVAL              SETC '&ZCVAL INLIST'        DISALLOWED KEY          00627500
.ZG219I20           AIF   (K'&NUMRANGE LE 0).ZG219I21                   00627600
&ZCVAL              SETC '&ZCVAL NUMRANGE'      DISALLOWED KEY          00627700
.ZG219I21           AIF   (K'&RANGLIST LE 0).ZG219I22                   00627800
&ZCVAL              SETC '&ZCVAL RANGLIST'      DISALLOWED KEY          00627900
.ZG219I22           AIF   (K'&DISABLED LE 0).ZG219I23                   00628000
&ZCVAL              SETC '&ZCVAL DISABLED'      DISALLOWED KEY          00628100
.ZG219I23           AIF   (K'&FREESHAREDSEG LE 0).ZG219I24              00628200
&ZCVAL              SETC '&ZCVAL FREESHAREDSEG'  DISALLOWED KEY         00628300
.ZG219I24           AIF   (K'&KEEPREAL LE 0).ZG219I25                   00628400
&ZCVAL              SETC '&ZCVAL KEEPREAL'      DISALLOWED KEY          00628500
.ZG219I25           AIF   (K'&CLEAR LE 0).ZG219I26                      00628600
&ZCVAL              SETC '&ZCVAL CLEAR'         DISALLOWED KEY          00628700
.ZG219I26           AIF   (K'&XIOON LE 0).ZG219I27                      00628800
&ZCVAL              SETC '&ZCVAL XIOON'         DISALLOWED KEY          00628900
.ZG219I27           AIF   (K'&STEAL LE 0).ZG219I28                      00629000
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00629100
.ZG219I28           AIF   (K'&LONG LE 0).ZG219I29                       00629200
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00629300
.ZG219I29           AIF   (K'&PCIEIO LE 0).ZG219I30                     00629400
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00629500
.ZG219I30           AIF   (K'&DMAPGTPTR LE 0).ZG219I31                  00629600
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00629700
.ZG219I31           AIF   (K'&XIOOFF LE 0).ZG219I32                     00629800
&ZCVAL              SETC '&ZCVAL XIOOFF'        DISALLOWED KEY          00629900
.ZG219I32           AIF   (K'&XDREFON LE 0).ZG219I33                    00630000
&ZCVAL              SETC '&ZCVAL XDREFON'       DISALLOWED KEY          00630100
.ZG219I33           AIF   (K'&XDREFOFF LE 0).ZG219I34                   00630200
&ZCVAL              SETC '&ZCVAL XDREFOFF'      DISALLOWED KEY          00630300
.ZG219I34           AIF   (K'&FORCE LE 0).ZG219I35                      00630400
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00630500
.ZG219I35           AIF   (K'&VAR LE 0).ZG219I36                        00630600
&ZCVAL              SETC '&ZCVAL VAR'           DISALLOWED KEY          00630700
.ZG219I36           AIF   (K'&ZCVAL LE 0).ZG219J  KEY                   00630800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00630900
                    AIF  (K'&ZCVAL LE 160).ZG219K                       00631000
&ZCVAL              SETC '&ZCVAL'(1,160)                                00631100
&ZCVAL              SETC '&ZCVAL....'                                   00631200
.ZG219K             ANOP                                                00631300
&ZMS                SETC  '"OUT'                                        00631400
&ZMS                SETC  '&ZMS."'                                      00631500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00631600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00631700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00631800
.ZG219J             ANOP  ,                                             00631900
.*----------------------------------------------------------------***   00632000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00632100
                    AIF   (N'&STOKEN LE 1).ZG221A  CK NUM               00632200
&ZMS                SETC  '"STOKEN='                                    00632300
&ZMS                SETC  '&ZMS.&STOKEN"'                               00632400
&ZMS                SETC  '&ZMS "STOKEN"'                               00632500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00632600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00632700
.ZG221A             ANOP  ,                                             00632800
.*-------------------------------------------------------------------   00632900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00633000
&ZXSTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00633100
&XSTOKEN            SETC  '&STOKEN(1)'          SET XVARIABLE           00633200
                    AIF   (N'&STOKEN GT 1).ZG221B  MULTI                00633300
&XSTOKEN            SETC  '&STOKEN'   SET XVARIABLE                     00633400
.ZG221B             AIF   (K'&STOKEN(1) GT 0).ZG221C                    00633500
&ZXSTOKEN           SETC  ''          RESET IN/OUTPUT                   00633600
&ZMS                SETC  ' '                                           00633700
&ZMS                SETC  '&ZMS "STOKEN" KEY AND ITS'                   00633800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00633900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00634000
.ZG221C             ANOP  ,                                             00634100
.*-------------------------------------------------------------------   00634200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00634300
                    AIF   (K'&ZXSTOKEN LE 0).ZG221R  NOT I/O            00634400
                    AIF   ('&XSTOKEN'(1,1) NE '(').ZG221R               00634500
&ZCGPR              SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                    00634600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG221P                 00634700
                    AIF   (K'&ZCGPR GT 2).ZG221Q                        00634800
                    AIF   ('&ZCGPR' EQ '0').ZG221Q                      00634900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00635000
                    AIF   (T'&ZCGPR NE 'N').ZG221Q  INVALID REG NAME    00635100
.ZG221P             ANOP  ,                                             00635200
                    AIF   (T'&ZCGPR NE 'N').ZG221R  NON NUMERIC         00635300
                    AIF   ('&ZCGPR' LT '2').ZG221Q                      00635400
                    AIF   ('&ZCGPR' LE '12').ZG221R                     00635500
.ZG221Q             ANOP  ,                                             00635600
&ZMS                SETC  '"STOKEN='                                    00635700
&ZMS                SETC  '&ZMS.&STOKEN"'                               00635800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00635900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00636000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00636100
.ZG221R             ANOP  ,                                             00636200
.*----------------------------------------------------------------***   00636300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00636400
                    AIF   (N'&START LE 1).ZG224A  CK NUM                00636500
&ZMS                SETC  '"START='                                     00636600
&ZMS                SETC  '&ZMS.&START"'                                00636700
&ZMS                SETC  '&ZMS "START"'                                00636800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00636900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00637000
.ZG224A             ANOP  ,                                             00637100
.*-------------------------------------------------------------------   00637200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00637300
&ZXSTART            SETC  'INPUT'     SET IN/OUTPUT                     00637400
&XSTART             SETC  '&START(1)'           SET XVARIABLE           00637500
                    AIF   (N'&START GT 1).ZG224B  MULTI                 00637600
&XSTART             SETC  '&START'    SET XVARIABLE                     00637700
.ZG224B             AIF   (K'&START(1) GT 0).ZG224C                     00637800
&ZXSTART            SETC  ''          RESET IN/OUTPUT                   00637900
&ZMS                SETC  ' '                                           00638000
&ZMS                SETC  '&ZMS "START" KEY AND ITS'                    00638100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00638200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00638300
.ZG224C             ANOP  ,                                             00638400
.*-------------------------------------------------------------------   00638500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00638600
                    AIF   (K'&ZXSTART LE 0).ZG224R  NOT I/O             00638700
                    AIF   ('&XSTART'(1,1) NE '(').ZG224R                00638800
&ZCGPR              SETC  '&XSTART'(2,K'&XSTART-2)                      00638900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG224P                 00639000
                    AIF   (K'&ZCGPR GT 2).ZG224Q                        00639100
                    AIF   ('&ZCGPR' EQ '0').ZG224Q                      00639200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00639300
                    AIF   (T'&ZCGPR NE 'N').ZG224Q  INVALID REG NAME    00639400
.ZG224P             ANOP  ,                                             00639500
                    AIF   (T'&ZCGPR NE 'N').ZG224R  NON NUMERIC         00639600
                    AIF   ('&ZCGPR' LT '2').ZG224Q                      00639700
                    AIF   ('&ZCGPR' LE '12').ZG224R                     00639800
.ZG224Q             ANOP  ,                                             00639900
&ZMS                SETC  '"START='                                     00640000
&ZMS                SETC  '&ZMS.&START"'                                00640100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00640200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00640300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00640400
.ZG224R             ANOP  ,                                             00640500
.*----------------------------------------------------------------***   00640600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00640700
                    AIF   (N'&BLOCKS LE 1).ZG227A  CK NUM               00640800
&ZMS                SETC  '"BLOCKS='                                    00640900
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00641000
&ZMS                SETC  '&ZMS "BLOCKS"'                               00641100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00641200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00641300
.ZG227A             ANOP  ,                                             00641400
.*-------------------------------------------------------------------   00641500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00641600
&ZXBLOCKS           SETC  'INPUT'     SET IN/OUTPUT                     00641700
&XBLOCKS            SETC  '&BLOCKS(1)'          SET XVARIABLE           00641800
                    AIF   (N'&BLOCKS GT 1).ZG227B  MULTI                00641900
&XBLOCKS            SETC  '&BLOCKS'   SET XVARIABLE                     00642000
.ZG227B             AIF   (K'&BLOCKS(1) GT 0).ZG227C                    00642100
&ZXBLOCKS           SETC  ''          RESET IN/OUTPUT                   00642200
&ZMS                SETC  ' '                                           00642300
&ZMS                SETC  '&ZMS "BLOCKS" KEY AND ITS'                   00642400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00642500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00642600
.ZG227C             ANOP  ,                                             00642700
.*-------------------------------------------------------------------   00642800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00642900
                    AIF   (K'&ZXBLOCKS LE 0).ZG227R  NOT I/O            00643000
                    AIF   ('&XBLOCKS'(1,1) NE '(').ZG227R               00643100
&ZCGPR              SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                    00643200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG227P                 00643300
                    AIF   (K'&ZCGPR GT 2).ZG227Q                        00643400
                    AIF   ('&ZCGPR' EQ '0').ZG227Q                      00643500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00643600
                    AIF   (T'&ZCGPR NE 'N').ZG227Q  INVALID REG NAME    00643700
.ZG227P             ANOP  ,                                             00643800
                    AIF   (T'&ZCGPR NE 'N').ZG227R  NON NUMERIC         00643900
                    AIF   ('&ZCGPR' LT '2').ZG227Q                      00644000
                    AIF   ('&ZCGPR' LE '12').ZG227R                     00644100
.ZG227Q             ANOP  ,                                             00644200
&ZMS                SETC  '"BLOCKS='                                    00644300
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00644400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00644500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00644600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00644700
.ZG227R             ANOP  ,                                             00644800
.*-------------------------------------------------------------------   00644900
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00645000
.ZG229ZY  AIF    ('&XSERVICE' NE 'LOAD').ZG239ZY                        00645100
.*-------------------------------------------------------------------   00645200
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00645300
&ZCVAL              SETC ''           ERROR KEY FIELD                   00645400
.ZG229I0            AIF   (K'&NAME LE 0).ZG229I1                        00645500
&ZCVAL              SETC '&ZCVAL NAME'          DISALLOWED KEY          00645600
.ZG229I1            AIF   (K'&GENNAME LE 0).ZG229I2                     00645700
&ZCVAL              SETC '&ZCVAL GENNAME'       DISALLOWED KEY          00645800
.ZG229I2            AIF   (K'&OUTNAME LE 0).ZG229I3                     00645900
&ZCVAL              SETC '&ZCVAL OUTNAME'       DISALLOWED KEY          00646000
.ZG229I3            AIF   (K'&TYPE LE 0).ZG229I4                        00646100
&ZCVAL              SETC '&ZCVAL TYPE'          DISALLOWED KEY          00646200
.ZG229I4            AIF   (K'&DREF LE 0).ZG229I5                        00646300
&ZCVAL              SETC '&ZCVAL DREF'          DISALLOWED KEY          00646400
.ZG229I5            AIF   (K'&SCOPE LE 0).ZG229I6                       00646500
&ZCVAL              SETC '&ZCVAL SCOPE'         DISALLOWED KEY          00646600
.ZG229I6            AIF   (K'&BACK LE 0).ZG229I7                        00646700
&ZCVAL              SETC '&ZCVAL BACK'          DISALLOWED KEY          00646800
.ZG229I7            AIF   (K'&PAGEFRAMESIZE LE 0).ZG229I8               00646900
&ZCVAL              SETC '&ZCVAL PAGEFRAMESIZE'  DISALLOWED KEY         00647000
.ZG229I8            AIF   (K'&HIDEZERO LE 0).ZG229I9                    00647100
&ZCVAL              SETC '&ZCVAL HIDEZERO'      DISALLOWED KEY          00647200
.ZG229I9            AIF   (K'&HSTYPE LE 0).ZG229I10                     00647300
&ZCVAL              SETC '&ZCVAL HSTYPE'        DISALLOWED KEY          00647400
.ZG229I10           AIF   (K'&SHARE LE 0).ZG229I11                      00647500
&ZCVAL              SETC '&ZCVAL SHARE'         DISALLOWED KEY          00647600
.ZG229I11           AIF   (K'&CASTOUT LE 0).ZG229I12                    00647700
&ZCVAL              SETC '&ZCVAL CASTOUT'       DISALLOWED KEY          00647800
.ZG229I12           AIF   (K'&XCALLERKEY LE 0).ZG229I13                 00647900
&ZCVAL              SETC '&ZCVAL XCALLERKEY'    DISALLOWED KEY          00648000
.ZG229I13           AIF   (K'&KEY LE 0).ZG229I14                        00648100
&ZCVAL              SETC '&ZCVAL KEY'           DISALLOWED KEY          00648200
.ZG229I14           AIF   (K'&FPROT LE 0).ZG229I15                      00648300
&ZCVAL              SETC '&ZCVAL FPROT'         DISALLOWED KEY          00648400
.ZG229I15           AIF   (K'&TTOKEN LE 0).ZG229I16                     00648500
&ZCVAL              SETC '&ZCVAL TTOKEN'        DISALLOWED KEY          00648600
.ZG229I16           AIF   (K'&ORIGIN LE 0).ZG229I17                     00648700
&ZCVAL              SETC '&ZCVAL ORIGIN'        DISALLOWED KEY          00648800
.ZG229I17           AIF   (K'&NUMBLKS LE 0).ZG229I18                    00648900
&ZCVAL              SETC '&ZCVAL NUMBLKS'       DISALLOWED KEY          00649000
.ZG229I18           AIF   (K'&CRITICALPAGING LE 0).ZG229I19             00649100
&ZCVAL              SETC '&ZCVAL CRITICALPAGING'  DISALLOWED KEY        00649200
.ZG229I19           AIF   (K'&INLIST LE 0).ZG229I20                     00649300
&ZCVAL              SETC '&ZCVAL INLIST'        DISALLOWED KEY          00649400
.ZG229I20           AIF   (K'&NUMRANGE LE 0).ZG229I21                   00649500
&ZCVAL              SETC '&ZCVAL NUMRANGE'      DISALLOWED KEY          00649600
.ZG229I21           AIF   (K'&RANGLIST LE 0).ZG229I22                   00649700
&ZCVAL              SETC '&ZCVAL RANGLIST'      DISALLOWED KEY          00649800
.ZG229I22           AIF   (K'&DISABLED LE 0).ZG229I23                   00649900
&ZCVAL              SETC '&ZCVAL DISABLED'      DISALLOWED KEY          00650000
.ZG229I23           AIF   (K'&FREESHAREDSEG LE 0).ZG229I24              00650100
&ZCVAL              SETC '&ZCVAL FREESHAREDSEG'  DISALLOWED KEY         00650200
.ZG229I24           AIF   (K'&KEEPREAL LE 0).ZG229I25                   00650300
&ZCVAL              SETC '&ZCVAL KEEPREAL'      DISALLOWED KEY          00650400
.ZG229I25           AIF   (K'&CLEAR LE 0).ZG229I26                      00650500
&ZCVAL              SETC '&ZCVAL CLEAR'         DISALLOWED KEY          00650600
.ZG229I26           AIF   (K'&XIOON LE 0).ZG229I27                      00650700
&ZCVAL              SETC '&ZCVAL XIOON'         DISALLOWED KEY          00650800
.ZG229I27           AIF   (K'&STEAL LE 0).ZG229I28                      00650900
&ZCVAL              SETC '&ZCVAL STEAL'         DISALLOWED KEY          00651000
.ZG229I28           AIF   (K'&LONG LE 0).ZG229I29                       00651100
&ZCVAL              SETC '&ZCVAL LONG'          DISALLOWED KEY          00651200
.ZG229I29           AIF   (K'&PCIEIO LE 0).ZG229I30                     00651300
&ZCVAL              SETC '&ZCVAL PCIEIO'        DISALLOWED KEY          00651400
.ZG229I30           AIF   (K'&DMAPGTPTR LE 0).ZG229I31                  00651500
&ZCVAL              SETC '&ZCVAL DMAPGTPTR'     DISALLOWED KEY          00651600
.ZG229I31           AIF   (K'&XIOOFF LE 0).ZG229I32                     00651700
&ZCVAL              SETC '&ZCVAL XIOOFF'        DISALLOWED KEY          00651800
.ZG229I32           AIF   (K'&XDREFON LE 0).ZG229I33                    00651900
&ZCVAL              SETC '&ZCVAL XDREFON'       DISALLOWED KEY          00652000
.ZG229I33           AIF   (K'&XDREFOFF LE 0).ZG229I34                   00652100
&ZCVAL              SETC '&ZCVAL XDREFOFF'      DISALLOWED KEY          00652200
.ZG229I34           AIF   (K'&FORCE LE 0).ZG229I35                      00652300
&ZCVAL              SETC '&ZCVAL FORCE'         DISALLOWED KEY          00652400
.ZG229I35           AIF   (K'&VAR LE 0).ZG229I36                        00652500
&ZCVAL              SETC '&ZCVAL VAR'           DISALLOWED KEY          00652600
.ZG229I36           AIF   (K'&ZCVAL LE 0).ZG229J  KEY                   00652700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00652800
                    AIF  (K'&ZCVAL LE 160).ZG229K                       00652900
&ZCVAL              SETC '&ZCVAL'(1,160)                                00653000
&ZCVAL              SETC '&ZCVAL....'                                   00653100
.ZG229K             ANOP                                                00653200
&ZMS                SETC  '"LOAD'                                       00653300
&ZMS                SETC  '&ZMS."'                                      00653400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00653500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00653600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00653700
.ZG229J             ANOP  ,                                             00653800
.*----------------------------------------------------------------***   00653900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00654000
                    AIF   (N'&STOKEN LE 1).ZG231A  CK NUM               00654100
&ZMS                SETC  '"STOKEN='                                    00654200
&ZMS                SETC  '&ZMS.&STOKEN"'                               00654300
&ZMS                SETC  '&ZMS "STOKEN"'                               00654400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00654500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00654600
.ZG231A             ANOP  ,                                             00654700
.*-------------------------------------------------------------------   00654800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00654900
&ZXSTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00655000
&XSTOKEN            SETC  '&STOKEN(1)'          SET XVARIABLE           00655100
                    AIF   (N'&STOKEN GT 1).ZG231B  MULTI                00655200
&XSTOKEN            SETC  '&STOKEN'   SET XVARIABLE                     00655300
.ZG231B             AIF   (K'&STOKEN(1) GT 0).ZG231C                    00655400
&ZXSTOKEN           SETC  ''          RESET IN/OUTPUT                   00655500
&ZMS                SETC  ' '                                           00655600
&ZMS                SETC  '&ZMS "STOKEN" KEY AND ITS'                   00655700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00655800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00655900
.ZG231C             ANOP  ,                                             00656000
.*-------------------------------------------------------------------   00656100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00656200
                    AIF   (K'&ZXSTOKEN LE 0).ZG231R  NOT I/O            00656300
                    AIF   ('&XSTOKEN'(1,1) NE '(').ZG231R               00656400
&ZCGPR              SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                    00656500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG231P                 00656600
                    AIF   (K'&ZCGPR GT 2).ZG231Q                        00656700
                    AIF   ('&ZCGPR' EQ '0').ZG231Q                      00656800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00656900
                    AIF   (T'&ZCGPR NE 'N').ZG231Q  INVALID REG NAME    00657000
.ZG231P             ANOP  ,                                             00657100
                    AIF   (T'&ZCGPR NE 'N').ZG231R  NON NUMERIC         00657200
                    AIF   ('&ZCGPR' LT '2').ZG231Q                      00657300
                    AIF   ('&ZCGPR' LE '12').ZG231R                     00657400
.ZG231Q             ANOP  ,                                             00657500
&ZMS                SETC  '"STOKEN='                                    00657600
&ZMS                SETC  '&ZMS.&STOKEN"'                               00657700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00657800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00657900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00658000
.ZG231R             ANOP  ,                                             00658100
.*----------------------------------------------------------------***   00658200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00658300
                    AIF   (N'&START LE 1).ZG234A  CK NUM                00658400
&ZMS                SETC  '"START='                                     00658500
&ZMS                SETC  '&ZMS.&START"'                                00658600
&ZMS                SETC  '&ZMS "START"'                                00658700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00658800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00658900
.ZG234A             ANOP  ,                                             00659000
.*-------------------------------------------------------------------   00659100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00659200
&ZXSTART            SETC  'INPUT'     SET IN/OUTPUT                     00659300
&XSTART             SETC  '&START(1)'           SET XVARIABLE           00659400
                    AIF   (N'&START GT 1).ZG234B  MULTI                 00659500
&XSTART             SETC  '&START'    SET XVARIABLE                     00659600
.ZG234B             AIF   (K'&START(1) GT 0).ZG234C                     00659700
&ZXSTART            SETC  ''          RESET IN/OUTPUT                   00659800
&ZMS                SETC  ' '                                           00659900
&ZMS                SETC  '&ZMS "START" KEY AND ITS'                    00660000
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00660100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00660200
.ZG234C             ANOP  ,                                             00660300
.*-------------------------------------------------------------------   00660400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00660500
                    AIF   (K'&ZXSTART LE 0).ZG234R  NOT I/O             00660600
                    AIF   ('&XSTART'(1,1) NE '(').ZG234R                00660700
&ZCGPR              SETC  '&XSTART'(2,K'&XSTART-2)                      00660800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG234P                 00660900
                    AIF   (K'&ZCGPR GT 2).ZG234Q                        00661000
                    AIF   ('&ZCGPR' EQ '0').ZG234Q                      00661100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00661200
                    AIF   (T'&ZCGPR NE 'N').ZG234Q  INVALID REG NAME    00661300
.ZG234P             ANOP  ,                                             00661400
                    AIF   (T'&ZCGPR NE 'N').ZG234R  NON NUMERIC         00661500
                    AIF   ('&ZCGPR' LT '2').ZG234Q                      00661600
                    AIF   ('&ZCGPR' LE '12').ZG234R                     00661700
.ZG234Q             ANOP  ,                                             00661800
&ZMS                SETC  '"START='                                     00661900
&ZMS                SETC  '&ZMS.&START"'                                00662000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00662100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00662200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00662300
.ZG234R             ANOP  ,                                             00662400
.*----------------------------------------------------------------***   00662500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00662600
                    AIF   (N'&BLOCKS LE 1).ZG237A  CK NUM               00662700
&ZMS                SETC  '"BLOCKS='                                    00662800
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00662900
&ZMS                SETC  '&ZMS "BLOCKS"'                               00663000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00663100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00663200
.ZG237A             ANOP  ,                                             00663300
.*-------------------------------------------------------------------   00663400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00663500
&ZXBLOCKS           SETC  'INPUT'     SET IN/OUTPUT                     00663600
&XBLOCKS            SETC  '&BLOCKS(1)'          SET XVARIABLE           00663700
                    AIF   (N'&BLOCKS GT 1).ZG237B  MULTI                00663800
&XBLOCKS            SETC  '&BLOCKS'   SET XVARIABLE                     00663900
.ZG237B             AIF   (K'&BLOCKS(1) GT 0).ZG237C                    00664000
&ZXBLOCKS           SETC  ''          RESET IN/OUTPUT                   00664100
&ZMS                SETC  ' '                                           00664200
&ZMS                SETC  '&ZMS "BLOCKS" KEY AND ITS'                   00664300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00664400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00664500
.ZG237C             ANOP  ,                                             00664600
.*-------------------------------------------------------------------   00664700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00664800
                    AIF   (K'&ZXBLOCKS LE 0).ZG237R  NOT I/O            00664900
                    AIF   ('&XBLOCKS'(1,1) NE '(').ZG237R               00665000
&ZCGPR              SETC  '&XBLOCKS'(2,K'&XBLOCKS-2)                    00665100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG237P                 00665200
                    AIF   (K'&ZCGPR GT 2).ZG237Q                        00665300
                    AIF   ('&ZCGPR' EQ '0').ZG237Q                      00665400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00665500
                    AIF   (T'&ZCGPR NE 'N').ZG237Q  INVALID REG NAME    00665600
.ZG237P             ANOP  ,                                             00665700
                    AIF   (T'&ZCGPR NE 'N').ZG237R  NON NUMERIC         00665800
                    AIF   ('&ZCGPR' LT '2').ZG237Q                      00665900
                    AIF   ('&ZCGPR' LE '12').ZG237R                     00666000
.ZG237Q             ANOP  ,                                             00666100
&ZMS                SETC  '"BLOCKS='                                    00666200
&ZMS                SETC  '&ZMS.&BLOCKS"'                               00666300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00666400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00666500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00666600
.ZG237R             ANOP  ,                                             00666700
.*-------------------------------------------------------------------   00666800
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00666900
.ZG239ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00667000
.******************************************************************     00667100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00667200
.******************************************************************     00667300
                    ACTR  10000                                         00667400
.*-------------------------------------------------------------------   00667500
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00667600
&ZCVAL              SETC  ''          ERROR FIELD                       00667700
&ZAWRK              SETA  0           POSITIONAL COUNTER                00667800
&ZASYSLNDX          SETA  0           NON-X KEY COUNTER                 00667900
.ZGLIST2            ANOP  ,                                             00668000
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT NON-X KEY          00668100
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00668200
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00668300
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00668400
                    AIF   (&ZAWRK LE 0).ZGLIST2                         00668500
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA           00668600
                    AGO   .ZGLIST2                                      00668700
.*                                                                      00668800
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00668900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00669000
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00669100
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00669200
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00669300
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00669400
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00669500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00669600
.ZGLISTX            ANOP  ,                                             00669700
&ZASYSLNDX          SETA  0                                             00669800
.*-------------------------------------------------------------------   00669900
.***AG.MF04 MF=(SLE)                                                    00670000
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00670100
.*******************************************************************    00670200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00670300
.*******************************************************************    00670400
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00670500
.*******************************************************************    00670600
.***AE.01  START OF DSPSERV MACRO CODE                                  00670700
.*******************************************************************    00670800
                    LCLC  &M0M0001                 NAME                 00670900
&M0M0001            SETC  '&XLABEL'                SET NAME             00671000
                    AIF   (K'&XLABEL NE 0).XLAB2                        00671100
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00671200
.*                                                                      00671300
.XLAB2              ANOP  ,                                             00671400
                    AIF   ('&XMF' EQ 'L').XLAB3                         00671500
&M0M0001 DS    0H                             DSPSERV-3                 00671600
.XLAB3              ANOP  ,                                             00671700
.*******************************************************************    00671800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00671900
.*******************************************************************    00672000
              PUSH  PRINT                                               00672100
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00672200
                    PRINT OFF         ++ PR01                           00672300
                    AGO   .ZPRNTXX                                      00672400
.ZPRINTX            PRINT ON                                            00672500
.ZPRNTXX            ANOP  ,                                             00672600
.********************************************************************   00672700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00672800
.********************************************************************   00672900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00673000
                      LCLA  &ZOPN1         INVOCATION INDEX             00673100
                      LCLC  &ZOPL(4095)    LABEL                        00673200
                      LCLC  &ZOPO(4095)    OPERATION                    00673300
                      LCLC  &ZOPV(4095)    VALUE                        00673400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00673500
.*                                                                      00673600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00673700
.******************************************************************     00673800
.***AL.L10 DSPSERV FMT=LIST MF=S!L PARAMETERS                           00673900
.******************************************************************     00674000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00674100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00674200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00674300
&XMFATTR              SETC  '0D'                                        00674400
.*                                                                      00674500
&ZOPN                 SETA  &ZOPN+1                                     00674600
&ZOPL(&ZOPN)          SETC  ' '                                         00674700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00674800
&ZOPO(&ZOPN)          SETC  'B'                                         00674900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00675000
                      AGO   .ZALVL6B                                    00675100
.ZALVL6A              ANOP                                              00675200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00675300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00675400
&ZOPN                 SETA  &ZOPN+1                                     00675500
&ZOPL(&ZOPN)          SETC  ' '                                         00675600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00675700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00675800
.ZALVL6B              ANOP                                              00675900
&ZOPD(&ZOPN)          SETC  '++ DSPSERV ARG PARMS'                      00676000
.*                                                                      00676100
&ZOPN                 SETA  &ZOPN+1                                     00676200
&ZOPL(&ZOPN)          SETC  ' '                                         00676300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00676400
&ZOPV(&ZOPN)          SETC  '1'                                         00676500
&ZOPD(&ZOPN)          SETC  ' '                                         00676600
.*                                                                      00676700
.ZLMFSL2              ANOP  ,                                           00676800
.*-------------------------------------------------------------------   00676900
.***AM.L00  DSPSERV FMT=LIST name                                       00677000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00677100
&ZOPN                 SETA &ZOPN+1                                      00677200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00677300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00677400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00677500
&ZOPD(&ZOPN)          SETC '++ DSPSERV NAME'                            00677600
.ZLMFSL2M             ANOP  ,                                           00677700
.*-------------------------------------------------------------------   00677800
.***AM.L01  DSPSERV FMT=LIST PARAMETERS                                 00677900
&ZOPN                 SETA &ZOPN+1                                      00678000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00678100
&ZOPO(&ZOPN)          SETC 'DS'                                         00678200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00678300
&ZOPD(&ZOPN)          SETC '++ DSPSERV PARM LIST'                       00678400
.*-------------------------------------------------------------------   00678500
.***AM.L02 XVERSION XL1                                                 00678600
&ZOPN                 SETA &ZOPN+1                                      00678700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00678800
&ZOPO(&ZOPN)          SETC 'DS'                                         00678900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00679000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00679100
.*-------------------------------------------------------------------   00679200
.***AM.L05 XSERVICE XL1                                                 00679300
&ZOPN                 SETA &ZOPN+1                                      00679400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         00679500
&ZOPO(&ZOPN)          SETC 'DS'                                         00679600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00679700
&ZOPD(&ZOPN)          SETC '++ &ZXSERVICE XSERVICE'                     00679800
.*                                                                      00679900
&ZOPN                 SETA  &ZOPN+1                                     00680000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._CREATE'                          00680100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00680200
&ZOPV(&ZOPN)          SETC  '1'                                         00680300
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00680400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CREATE'                       00680500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00680600
.*                                                                      00680700
&ZOPN                 SETA  &ZOPN+1                                     00680800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DELETE'                          00680900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00681000
&ZOPV(&ZOPN)          SETC  '2'                                         00681100
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00681200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE'                       00681300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00681400
.*                                                                      00681500
&ZOPN                 SETA  &ZOPN+1                                     00681600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RELEASE'                         00681700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00681800
&ZOPV(&ZOPN)          SETC  '3'                                         00681900
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00682000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RELEASE'                      00682100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00682200
.*                                                                      00682300
&ZOPN                 SETA  &ZOPN+1                                     00682400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DEFINE'                          00682500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00682600
&ZOPV(&ZOPN)          SETC  '4'                                         00682700
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00682800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEFINE'                       00682900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00683000
.*                                                                      00683100
&ZOPN                 SETA  &ZOPN+1                                     00683200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._EXTEND'                          00683300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00683400
&ZOPV(&ZOPN)          SETC  '5'                                         00683500
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00683600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXTEND'                       00683700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00683800
.*                                                                      00683900
&ZOPN                 SETA  &ZOPN+1                                     00684000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._OUT'                             00684100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00684200
&ZOPV(&ZOPN)          SETC  '6'                                         00684300
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00684400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OUT'                          00684500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00684600
.*                                                                      00684700
&ZOPN                 SETA  &ZOPN+1                                     00684800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._LOAD'                            00684900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00685000
&ZOPV(&ZOPN)          SETC  '7'                                         00685100
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00685200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOAD'                         00685300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00685400
.*-------------------------------------------------------------------   00685500
.***AM.L05 XDEFOP XL1                                                   00685600
&ZOPN                 SETA &ZOPN+1                                      00685700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEFOP'                           00685800
&ZOPO(&ZOPN)          SETC 'DS'                                         00685900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00686000
&ZOPD(&ZOPN)          SETC '++ &ZXDEFOP XDEFOP'                         00686100
.*                                                                      00686200
&ZOPN                 SETA  &ZOPN+1                                     00686300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IOON'                            00686400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00686500
&ZOPV(&ZOPN)          SETC  '1'                                         00686600
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00686700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IOON'                         00686800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00686900
.*                                                                      00687000
&ZOPN                 SETA  &ZOPN+1                                     00687100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IOOFF'                           00687200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00687300
&ZOPV(&ZOPN)          SETC  '2'                                         00687400
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00687500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IOOFF'                        00687600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00687700
.*                                                                      00687800
&ZOPN                 SETA  &ZOPN+1                                     00687900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DREFON'                          00688000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00688100
&ZOPV(&ZOPN)          SETC  '3'                                         00688200
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00688300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DREFON'                       00688400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00688500
.*                                                                      00688600
&ZOPN                 SETA  &ZOPN+1                                     00688700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DREFOFF'                         00688800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00688900
&ZOPV(&ZOPN)          SETC  '4'                                         00689000
&ZOPD(&ZOPN)          SETC  '++ XDEFOP.'                                00689100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DREFOFF'                      00689200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00689300
.*-------------------------------------------------------------------   00689400
.***AM.L03 XFLAGS1 BL.8                                                 00689500
&ZOPN                 SETA &ZOPN+1                                      00689600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          00689700
&ZOPO(&ZOPN)          SETC 'DS'                                         00689800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00689900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00690000
.*                                                                      00690100
&ZOPN                 SETA  &ZOPN+1                                     00690200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SINGLE'                          00690300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00690400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00690500
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00690600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SINGLE'                       00690700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00690800
.*                                                                      00690900
&ZOPN                 SETA  &ZOPN+1                                     00691000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ALL'                             00691100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00691200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00691300
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00691400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00691500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00691600
.*                                                                      00691700
&ZOPN                 SETA  &ZOPN+1                                     00691800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._COMMON'                          00691900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00692000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00692100
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00692200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COMMON'                       00692300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00692400
.*                                                                      00692500
&ZOPN                 SETA  &ZOPN+1                                     00692600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._GENNAME_COND'                    00692700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00692800
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00692900
&ZOPD(&ZOPN)          SETC  '++ XGENNAME.'                              00693000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COND'                         00693100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00693200
.*                                                                      00693300
&ZOPN                 SETA  &ZOPN+1                                     00693400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._GENNAME_YES'                     00693500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00693600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00693700
&ZOPD(&ZOPN)          SETC  '++ XGENNAME.'                              00693800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00693900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00694000
.*                                                                      00694100
&ZOPN                 SETA  &ZOPN+1                                     00694200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IN_RANGELIST'                    00694300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00694400
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00694500
&ZOPD(&ZOPN)          SETC  '++ XINLIST.'                               00694600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00694700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00694800
.*                                                                      00694900
&ZOPN                 SETA  &ZOPN+1                                     00695000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEFRAMESIZE_1M'               00695100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00695200
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00695300
&ZOPD(&ZOPN)          SETC  '++ XPAGEFRAMESIZE.'                        00695400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).1M'                           00695500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00695600
.*-------------------------------------------------------------------   00695700
.***AM.L03 XFLAGS2 BL.8                                                 00695800
&ZOPN                 SETA &ZOPN+1                                      00695900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS2'                          00696000
&ZOPO(&ZOPN)          SETC 'DS'                                         00696100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00696200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00696300
.*                                                                      00696400
&ZOPN                 SETA  &ZOPN+1                                     00696500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDREF_YES'                       00696600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00696700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00696800
&ZOPD(&ZOPN)          SETC  '++ XDREF.'                                 00696900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00697000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00697100
.*                                                                      00697200
&ZOPN                 SETA  &ZOPN+1                                     00697300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFPROT_YES'                      00697400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00697500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00697600
&ZOPD(&ZOPN)          SETC  '++ XFPROT.'                                00697700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00697800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00697900
.*                                                                      00698000
&ZOPN                 SETA  &ZOPN+1                                     00698100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLONG_NO'                        00698200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00698300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00698400
&ZOPD(&ZOPN)          SETC  '++ XLONG.'                                 00698500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00698600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00698700
.*                                                                      00698800
&ZOPN                 SETA  &ZOPN+1                                     00698900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_KEY'                     00699000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00699100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00699200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00699300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEY'                          00699400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00699500
.*                                                                      00699600
&ZOPN                 SETA  &ZOPN+1                                     00699700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TTOKEN'                  00699800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00699900
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00700000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00700100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TTOKEN'                       00700200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00700300
.*                                                                      00700400
&ZOPN                 SETA  &ZOPN+1                                     00700500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORCE_YES'                      00700600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00700700
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00700800
&ZOPD(&ZOPN)          SETC  '++ XFORCE.'                                00700900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00701000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00701100
.*                                                                      00701200
&ZOPN                 SETA  &ZOPN+1                                     00701300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVAR_YES'                        00701400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00701500
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00701600
&ZOPD(&ZOPN)          SETC  '++ XVAR.'                                  00701700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00701800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00701900
.*                                                                      00702000
&ZOPN                 SETA  &ZOPN+1                                     00702100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSHARE_YES'                      00702200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00702300
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00702400
&ZOPD(&ZOPN)          SETC  '++ XSHARE.'                                00702500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00702600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00702700
.*-------------------------------------------------------------------   00702800
.***AM.L09  XKEY XL1                                                    00702900
&ZOPN                 SETA &ZOPN+1                                      00703000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEY'                             00703100
&ZOPO(&ZOPN)          SETC 'DS'                                         00703200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00703300
&ZOPD(&ZOPN)          SETC '++ &ZXKEY '                                 00703400
.*-------------------------------------------------------------------   00703500
.***AM.L05 XTYPE XL1                                                    00703600
&ZOPN                 SETA &ZOPN+1                                      00703700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00703800
&ZOPO(&ZOPN)          SETC 'DS'                                         00703900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00704000
&ZOPD(&ZOPN)          SETC '++ &ZXTYPE XTYPE'                           00704100
.*                                                                      00704200
&ZOPN                 SETA  &ZOPN+1                                     00704300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._BASIC'                           00704400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00704500
&ZOPV(&ZOPN)          SETC  '0'                                         00704600
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00704700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BASIC'                        00704800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00704900
.*                                                                      00705000
&ZOPN                 SETA  &ZOPN+1                                     00705100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._HIPERSPACE'                      00705200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00705300
&ZOPV(&ZOPN)          SETC  '1'                                         00705400
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00705500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HIPERSPACE'                   00705600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00705700
.*-------------------------------------------------------------------   00705800
.***AM.L03 XFLAGS3 BL.8                                                 00705900
&ZOPN                 SETA &ZOPN+1                                      00706000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS3'                          00706100
&ZOPO(&ZOPN)          SETC 'DS'                                         00706200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00706300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00706400
.*                                                                      00706500
&ZOPN                 SETA  &ZOPN+1                                     00706600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._HIPER_SCROLL'                    00706700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00706800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00706900
&ZOPD(&ZOPN)          SETC  '++ XHSTYPE.'                               00707000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SCROLL'                       00707100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00707200
.*                                                                      00707300
&ZOPN                 SETA  &ZOPN+1                                     00707400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._HIPER_CACHE'                     00707500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00707600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00707700
&ZOPD(&ZOPN)          SETC  '++ XHSTYPE.'                               00707800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CACHE'                        00707900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00708000
.*                                                                      00708100
&ZOPN                 SETA  &ZOPN+1                                     00708200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._NOCASTOUT'                       00708300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00708400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00708500
&ZOPD(&ZOPN)          SETC  '++ XCASTOUT.'                              00708600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00708700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00708800
.*                                                                      00708900
&ZOPN                 SETA  &ZOPN+1                                     00709000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._BACKED_HIGH'                     00709100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00709200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00709300
&ZOPD(&ZOPN)          SETC  '++ XBACK.'                                 00709400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           00709500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00709600
.*                                                                      00709700
&ZOPN                 SETA  &ZOPN+1                                     00709800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFREESHAREDSEG_YES'              00709900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00710000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00710100
&ZOPD(&ZOPN)          SETC  '++ XFREESHAREDSEG.'                        00710200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00710300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00710400
.*                                                                      00710500
&ZOPN                 SETA  &ZOPN+1                                     00710600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEEPREAL_YES'                   00710700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00710800
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00710900
&ZOPD(&ZOPN)          SETC  '++ XKEEPREAL.'                             00711000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00711100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00711200
.*                                                                      00711300
&ZOPN                 SETA  &ZOPN+1                                     00711400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLEAR_YES'                      00711500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00711600
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00711700
&ZOPD(&ZOPN)          SETC  '++ XCLEAR.'                                00711800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00711900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00712000
.*                                                                      00712100
&ZOPN                 SETA  &ZOPN+1                                     00712200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCRITICALPAGING_NO'              00712300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00712400
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00712500
&ZOPD(&ZOPN)          SETC  '++ XCRITICALPAGING.'                       00712600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00712700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00712800
.*-------------------------------------------------------------------   00712900
.***AM.L09  XOUTNAME CL8                                                00713000
&ZOPN                 SETA &ZOPN+1                                      00713100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOUTNAME'                         00713200
&ZOPO(&ZOPN)          SETC 'DS'                                         00713300
&ZOPV(&ZOPN)          SETC 'CL8'                                        00713400
&ZOPD(&ZOPN)          SETC '++ &ZXOUTNAME '                             00713500
.*-------------------------------------------------------------------   00713600
.***AM.L09  XSTOKEN CL8                                                 00713700
&ZOPN                 SETA &ZOPN+1                                      00713800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOKEN'                          00713900
&ZOPO(&ZOPN)          SETC 'DS'                                         00714000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00714100
&ZOPD(&ZOPN)          SETC '++ &ZXSTOKEN '                              00714200
.*-------------------------------------------------------------------   00714300
.***AM.L09  XSTART F                                                    00714400
&ZOPN                 SETA &ZOPN+1                                      00714500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTART'                           00714600
&ZOPO(&ZOPN)          SETC 'DS'                                         00714700
&ZOPV(&ZOPN)          SETC 'F'                                          00714800
&ZOPD(&ZOPN)          SETC '++ &ZXSTART '                               00714900
.*-------------------------------------------------------------------   00715000
.***AM.L09  XBLOCKS F                                                   00715100
&ZOPN                 SETA &ZOPN+1                                      00715200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBLOCKS'                          00715300
&ZOPO(&ZOPN)          SETC 'DS'                                         00715400
&ZOPV(&ZOPN)          SETC 'F'                                          00715500
&ZOPD(&ZOPN)          SETC '++ &ZXBLOCKS '                              00715600
.*-------------------------------------------------------------------   00715700
.***AM.L09  XTTOKEN CL16                                                00715800
&ZOPN                 SETA &ZOPN+1                                      00715900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTTOKEN'                          00716000
&ZOPO(&ZOPN)          SETC 'DS'                                         00716100
&ZOPV(&ZOPN)          SETC 'CL16'                                       00716200
&ZOPD(&ZOPN)          SETC '++ &ZXTTOKEN '                              00716300
.*-------------------------------------------------------------------   00716400
.***AM.L09  XORIGIN F                                                   00716500
&ZOPN                 SETA &ZOPN+1                                      00716600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XORIGIN'                          00716700
&ZOPO(&ZOPN)          SETC 'DS'                                         00716800
&ZOPV(&ZOPN)          SETC 'F'                                          00716900
&ZOPD(&ZOPN)          SETC '++ &ZXORIGIN '                              00717000
.*-------------------------------------------------------------------   00717100
.***AM.L09  XNUMBLKS F                                                  00717200
&ZOPN                 SETA &ZOPN+1                                      00717300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMBLKS'                         00717400
&ZOPO(&ZOPN)          SETC 'DS'                                         00717500
&ZOPV(&ZOPN)          SETC 'F'                                          00717600
&ZOPD(&ZOPN)          SETC '++ &ZXNUMBLKS '                             00717700
.*-------------------------------------------------------------------   00717800
.***AM.MLM2 SAVED LOCATION COUNTER                                      00717900
                      AIF  (&XPLISTVER GE 1).ZL51LA                     00718000
                      AIF  ('&ZENDBASEPL' NE '').ZL51LA                 00718100
&ZENDBASEPL           SETC 'YES'                                        00718200
&ZOPN                 SETA &ZOPN+1                                      00718300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00718400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00718500
&ZOPV(&ZOPN)          SETC '*'                                          00718600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00718700
.ZL51LA               ANOP  ,                                           00718800
.*-------------------------------------------------------------------   00718900
.***AM.LVER1                                                            00719000
                      AIF  (&XPLISTVER LT 1).ZL51L                      00719100
.*-------------------------------------------------------------------   00719200
.*-------------------------------------------------------------------   00719300
.***AM.L09  XINITIAL F                                                  00719400
&ZOPN                 SETA &ZOPN+1                                      00719500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINITIAL'                         00719600
&ZOPO(&ZOPN)          SETC 'DS'                                         00719700
&ZOPV(&ZOPN)          SETC 'F'                                          00719800
&ZOPD(&ZOPN)          SETC '++ &ZXINITIAL '                             00719900
.*-------------------------------------------------------------------   00720000
.***AM.LVER2                                                            00720100
.ZL51L                ANOP  ,                                           00720200
.*-------------------------------------------------------------------   00720300
.*-------------------------------------------------------------------   00720400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00720500
                      AIF  (&XPLISTVER GE 2).ZL52LA                     00720600
                      AIF  ('&ZENDBASEPL' NE '').ZL52LA                 00720700
&ZENDBASEPL           SETC 'YES'                                        00720800
&ZOPN                 SETA &ZOPN+1                                      00720900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00721000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00721100
&ZOPV(&ZOPN)          SETC '*'                                          00721200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00721300
.ZL52LA               ANOP  ,                                           00721400
.*-------------------------------------------------------------------   00721500
.***AM.LVER1                                                            00721600
                      AIF  (&XPLISTVER LT 2).ZL52L                      00721700
.*-------------------------------------------------------------------   00721800
.*-------------------------------------------------------------------   00721900
.***AM.L03 XFLAGS4 BL.8                                                 00722000
&ZOPN                 SETA &ZOPN+1                                      00722100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS4'                          00722200
&ZOPO(&ZOPN)          SETC 'DS'                                         00722300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00722400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00722500
.*-------------------------------------------------------------------   00722600
.***AM.LVER2                                                            00722700
.ZL52L                ANOP  ,                                           00722800
.*-------------------------------------------------------------------   00722900
.*-------------------------------------------------------------------   00723000
.***AM.LVER1                                                            00723100
                      AIF  (&XPLISTVER LT 2).ZL53L                      00723200
.*-------------------------------------------------------------------   00723300
.*                                                                      00723400
&ZOPN                 SETA  &ZOPN+1                                     00723500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XHIDEZERO_YES'                   00723600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00723700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00723800
&ZOPD(&ZOPN)          SETC  '++ XHIDEZERO.'                             00723900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00724000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00724100
.*-------------------------------------------------------------------   00724200
.***AM.LVER2                                                            00724300
.ZL53L                ANOP  ,                                           00724400
.*-------------------------------------------------------------------   00724500
.*-------------------------------------------------------------------   00724600
.***AM.LVER1                                                            00724700
                      AIF  (&XPLISTVER LT 2).ZL54L                      00724800
.*-------------------------------------------------------------------   00724900
.*                                                                      00725000
&ZOPN                 SETA  &ZOPN+1                                     00725100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPCIEIO_YES'                     00725200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00725300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00725400
&ZOPD(&ZOPN)          SETC  '++ XPCIEIO.'                               00725500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00725600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00725700
.*-------------------------------------------------------------------   00725800
.***AM.LVER2                                                            00725900
.ZL54L                ANOP  ,                                           00726000
.*-------------------------------------------------------------------   00726100
.*-------------------------------------------------------------------   00726200
.***AM.LVER1                                                            00726300
                      AIF  (&XPLISTVER LT 2).ZL55L                      00726400
.*-------------------------------------------------------------------   00726500
.*                                                                      00726600
&ZOPN                 SETA  &ZOPN+1                                     00726700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTEAL_NO'                       00726800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00726900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00727000
&ZOPD(&ZOPN)          SETC  '++ XSTEAL.'                                00727100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00727200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00727300
.*-------------------------------------------------------------------   00727400
.***AM.LVER2                                                            00727500
.ZL55L                ANOP  ,                                           00727600
.*-------------------------------------------------------------------   00727700
.*-------------------------------------------------------------------   00727800
.***AM.LVER1                                                            00727900
                      AIF  (&XPLISTVER LT 2).ZL56L                      00728000
.*-------------------------------------------------------------------   00728100
.*-------------------------------------------------------------------   00728200
.***AM.L09  XRSV001 CL7                                                 00728300
&ZOPN                 SETA &ZOPN+1                                      00728400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00728500
&ZOPO(&ZOPN)          SETC 'DS'                                         00728600
&ZOPV(&ZOPN)          SETC 'CL7'                                        00728700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00728800
.*-------------------------------------------------------------------   00728900
.***AM.LVER2                                                            00729000
.ZL56L                ANOP  ,                                           00729100
.*-------------------------------------------------------------------   00729200
.*-------------------------------------------------------------------   00729300
.***AM.MLM2 SAVED LOCATION COUNTER                                      00729400
                      AIF  (&XPLISTVER GE 3).ZL57LA                     00729500
                      AIF  ('&ZENDBASEPL' NE '').ZL57LA                 00729600
&ZENDBASEPL           SETC 'YES'                                        00729700
&ZOPN                 SETA &ZOPN+1                                      00729800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00729900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00730000
&ZOPV(&ZOPN)          SETC '*'                                          00730100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00730200
.ZL57LA               ANOP  ,                                           00730300
.*-------------------------------------------------------------------   00730400
.***AM.LVER1                                                            00730500
                      AIF  (&XPLISTVER LT 3).ZL57L                      00730600
.*-------------------------------------------------------------------   00730700
.*-------------------------------------------------------------------   00730800
.***AM.L09  XRSV002 CL4                                                 00730900
&ZOPN                 SETA &ZOPN+1                                      00731000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002'                          00731100
&ZOPO(&ZOPN)          SETC 'DS'                                         00731200
&ZOPV(&ZOPN)          SETC 'CL4'                                        00731300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00731400
.*-------------------------------------------------------------------   00731500
.***AM.LVER2                                                            00731600
.ZL57L                ANOP  ,                                           00731700
.*-------------------------------------------------------------------   00731800
.*-------------------------------------------------------------------   00731900
.***AM.LVER1                                                            00732000
                      AIF  (&XPLISTVER LT 3).ZL58L                      00732100
.*-------------------------------------------------------------------   00732200
.*-------------------------------------------------------------------   00732300
.***AM.L09  XDMAPGTPTR AD                                               00732400
&ZOPN                 SETA &ZOPN+1                                      00732500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDMAPGTPTR'                       00732600
&ZOPO(&ZOPN)          SETC 'DS'                                         00732700
&ZOPV(&ZOPN)          SETC 'AD'                                         00732800
&ZOPD(&ZOPN)          SETC '++ &ZXDMAPGTPTR '                           00732900
.*-------------------------------------------------------------------   00733000
.***AM.LVER2                                                            00733100
.ZL58L                ANOP  ,                                           00733200
.*-------------------------------------------------------------------   00733300
.*-------------------------------------------------------------------   00733400
.***AM.MLM1 SAVED LOCATION COUNTER                                      00733500
                      AIF  ('&ZENDBASEPL' NE '').ZL59LB                 00733600
&ZENDBASEPL           SETC 'YES'                                        00733700
&ZOPN                 SETA &ZOPN+1                                      00733800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00733900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00734000
&ZOPV(&ZOPN)          SETC '*'                                          00734100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00734200
.ZL59LB               ANOP  ,                                           00734300
.*-------------------------------------------------------------------   00734400
.***AM.PJR1 DEFINED ON XOUTNAME                                         00734500
&ZOPN                 SETA &ZOPN+1                                      00734600
&ZOPL(&ZOPN)          SETC ' '                                          00734700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00734800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+8'                                00734900
&ZOPD(&ZOPN)          SETC ' '                                          00735000
.*-------------------------------------------------------------------   00735100
.***AM.L09  XNAME CL8                                                   00735200
&ZOPN                 SETA &ZOPN+1                                      00735300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAME'                            00735400
&ZOPO(&ZOPN)          SETC 'DS'                                         00735500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00735600
&ZOPD(&ZOPN)          SETC '++ &ZXNAME '                                00735700
.*-------------------------------------------------------------------   00735800
.***AM.PJR1 DEFINED ON XSTART                                           00735900
&ZOPN                 SETA &ZOPN+1                                      00736000
&ZOPL(&ZOPN)          SETC ' '                                          00736100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00736200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+24'                               00736300
&ZOPD(&ZOPN)          SETC ' '                                          00736400
.*-------------------------------------------------------------------   00736500
.***AM.L09  XNUMRANGE F                                                 00736600
&ZOPN                 SETA &ZOPN+1                                      00736700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMRANGE'                        00736800
&ZOPO(&ZOPN)          SETC 'DS'                                         00736900
&ZOPV(&ZOPN)          SETC 'F'                                          00737000
&ZOPD(&ZOPN)          SETC '++ &ZXNUMRANGE '                            00737100
.*-------------------------------------------------------------------   00737200
.***AM.PJR1 DEFINED ON XBLOCKS                                          00737300
&ZOPN                 SETA &ZOPN+1                                      00737400
&ZOPL(&ZOPN)          SETC ' '                                          00737500
&ZOPO(&ZOPN)          SETC 'ORG'                                        00737600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               00737700
&ZOPD(&ZOPN)          SETC ' '                                          00737800
.*-------------------------------------------------------------------   00737900
.***AM.L09  XRANGLIST A                                                 00738000
&ZOPN                 SETA &ZOPN+1                                      00738100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRANGLIST'                        00738200
&ZOPO(&ZOPN)          SETC 'DS'                                         00738300
&ZOPV(&ZOPN)          SETC 'A'                                          00738400
&ZOPD(&ZOPN)          SETC '++ &ZXRANGLIST '                            00738500
&ZOPN                 SETA &ZOPN+1                                      00738600
&ZOPL(&ZOPN)          SETC ' '                                          00738700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00738800
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00738900
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00739000
.*-------------------------------------------------------------------   00739100
.***AM.L10 END OF DSPSERV LIST PARAMETERS                               00739200
&ZOPN                 SETA &ZOPN+1                                      00739300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00739400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00739500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00739600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00739700
.*                                                                      00739800
&ZOPN                 SETA &ZOPN+1                                      00739900
&ZOPL(&ZOPN)          SETC ' '                                          00740000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00740100
&ZOPV(&ZOPN)          SETC '1'                                          00740200
&ZOPD(&ZOPN)          SETC ' '                                          00740300
.*-------------------------------------------------------------------   00740400
.***AL.L12 DSPSERV FMT=LIST MF=S!L PARAMETERS                           00740500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00740600
.*                                                                      00740700
&ZOPN                 SETA  &ZOPN+1                                     00740800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00740900
&ZOPO(&ZOPN)          SETC  'DC'                                        00741000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00741100
&ZOPD(&ZOPN)          SETC  '++ DSPSERV ARG PARMS'                      00741200
.*                                                                      00741300
.ZLMFSLX              ANOP  ,                                           00741400
.*-------------------------------------------------------------------   00741500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00741600
&ZPLLEN               SETA 56                                           00741700
.*                                                                      00741800
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00741900
&ZPLLEN               SETA 60                                           00742000
.ZLLEN2Z              ANOP  ,                                           00742100
.*                                                                      00742200
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00742300
&ZPLLEN               SETA 68                                           00742400
.ZLLEN3Z              ANOP  ,                                           00742500
.*                                                                      00742600
                      AIF  (&XPLISTVER LT 3).ZLLEN4Z                    00742700
&ZPLLEN               SETA 80                                           00742800
.ZLLEN4Z              ANOP  ,                                           00742900
.*                                                                      00743000
.******************************************************************     00743100
.***AI.L01 DSPSERV FMT=LIST FILL IN PARAMETER AREA                      00743200
.******************************************************************     00743300
                      ACTR  10000                                       00743400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00743500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00743600
&ZCVAL                SETC  'LAE'          XAX MODE                     00743700
.ZIMFXA               ANOP ,                                            00743800
.*                                                                      00743900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00744000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00744100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00744200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00744300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00744400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00744500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00744600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00744700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00744800
&ZOPN                 SETA  &ZOPN+1                                     00744900
&ZOPL(&ZOPN)          SETC  ' '                                         00745000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00745100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00745200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00745300
                      AGO   .ZIMFNX                                     00745400
.*                                                                      00745500
.ZIMFN2               ANOP ,                                            00745600
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00745700
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00745800
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00745900
&ZOPN                 SETA  &ZOPN+1                                     00746000
&ZOPL(&ZOPN)          SETC  ' '                                         00746100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00746200
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00746300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00746400
                      AGO   .ZIMFNX                                     00746500
.ZIMFNX1              ANOP ,                                            00746600
&ZOPN                 SETA  &ZOPN+1                                     00746700
&ZOPL(&ZOPN)          SETC  ' '                                         00746800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00746900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00747000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00747100
.ZIMFNX               ANOP ,                                            00747200
.********************************************************************   00747300
.***AI.L02 DSPSERV FMT=LIST INITIALIZE PARAMETER AREA                   00747400
.********************************************************************   00747500
.***AI.L03 MF=(SLE)                                                     00747600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00747700
.*                                                                      00747800
&ZOPN                 SETA  &ZOPN+1                                     00747900
&ZOPL(&ZOPN)          SETC  ' '                                         00748000
&ZOPO(&ZOPN)          SETC  'XC'                                        00748100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00748200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00748300
.ZIMFLX               ANOP  ,                                           00748400
.*-------------------------------------------------------------------   00748500
.***AI.L04A XVERSION XL1                                                00748600
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00748700
&ZOPN                 SETA  &ZOPN+1                                     00748800
&ZOPL(&ZOPN)          SETC  ' '                                         00748900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00749000
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00749100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00749200
.ZIMFVW               ANOP  ,                                           00749300
.*-------------------------------------------------------------------   00749400
.***AI.L07 XSERVICE AL1                                                 00749500
&ZW                   SETC  ''                                          00749600
.*-------------------------------------------------------------------   00749700
.***AI.L15 XSERVICE "CREATE" AL1                                        00749800
         AIF   ('&XSERVICE' NE 'CREATE').ZI3A                           00749900
&ZW                   SETC  '1'                                         00750000
.ZI3A                 ANOP  ,                                           00750100
.*-------------------------------------------------------------------   00750200
.***AI.L15 XSERVICE "DELETE" AL1                                        00750300
         AIF   ('&XSERVICE' NE 'DELETE').ZI4A                           00750400
&ZW                   SETC  '2'                                         00750500
.ZI4A                 ANOP  ,                                           00750600
.*-------------------------------------------------------------------   00750700
.***AI.L15 XSERVICE "RELEASE" AL1                                       00750800
         AIF   ('&XSERVICE' NE 'RELEASE').ZI5A                          00750900
&ZW                   SETC  '3'                                         00751000
.ZI5A                 ANOP  ,                                           00751100
.*-------------------------------------------------------------------   00751200
.***AI.L15 XSERVICE "DEFINE" AL1                                        00751300
         AIF   ('&XSERVICE' NE 'DEFINE').ZI6A                           00751400
&ZW                   SETC  '4'                                         00751500
.ZI6A                 ANOP  ,                                           00751600
.*-------------------------------------------------------------------   00751700
.***AI.L15 XSERVICE "EXTEND" AL1                                        00751800
         AIF   ('&XSERVICE' NE 'EXTEND').ZI7A                           00751900
&ZW                   SETC  '5'                                         00752000
.ZI7A                 ANOP  ,                                           00752100
.*-------------------------------------------------------------------   00752200
.***AI.L15 XSERVICE "OUT" AL1                                           00752300
         AIF   ('&XSERVICE' NE 'OUT').ZI8A                              00752400
&ZW                   SETC  '6'                                         00752500
.ZI8A                 ANOP  ,                                           00752600
.*-------------------------------------------------------------------   00752700
.***AI.L15 XSERVICE "LOAD" AL1                                          00752800
         AIF   ('&XSERVICE' NE 'LOAD').ZI9A                             00752900
&ZW                   SETC  '7'                                         00753000
.ZI9A                 ANOP  ,                                           00753100
.*-------------------------------------------------------------------   00753200
.***AI.L17 XSERVICE AL1                                                 00753300
                      AIF   ('&ZW' EQ '0').ZI9B                         00753400
                      AIF   ('&ZW' EQ '').ZI9B                          00753500
.*                                                                      00753600
&ZOPN                 SETA  &ZOPN+1                                     00753700
&ZOPL(&ZOPN)          SETC  ' '                                         00753800
&ZOPO(&ZOPN)          SETC  'MVI'                                       00753900
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00754000
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVICE XSERVICE'                    00754100
.ZI9B                 ANOP  ,                                           00754200
.*-------------------------------------------------------------------   00754300
.***AI.L07 XDEFOP AL1                                                   00754400
&ZW                   SETC  ''                                          00754500
.*-------------------------------------------------------------------   00754600
.***AI.L15 XDEFOP "IOON" AL1                                            00754700
         AIF   ('&XDEFOP' NE 'IOON').ZI11A                              00754800
&ZW                   SETC  '1'                                         00754900
.ZI11A                ANOP  ,                                           00755000
.*-------------------------------------------------------------------   00755100
.***AI.L15 XDEFOP "IOOFF" AL1                                           00755200
         AIF   ('&XDEFOP' NE 'IOOFF').ZI12A                             00755300
&ZW                   SETC  '2'                                         00755400
.ZI12A                ANOP  ,                                           00755500
.*-------------------------------------------------------------------   00755600
.***AI.L15 XDEFOP "DREFON" AL1                                          00755700
         AIF   ('&XDEFOP' NE 'DREFON').ZI13A                            00755800
&ZW                   SETC  '3'                                         00755900
.ZI13A                ANOP  ,                                           00756000
.*-------------------------------------------------------------------   00756100
.***AI.L15 XDEFOP "DREFOFF" AL1                                         00756200
         AIF   ('&XDEFOP' NE 'DREFOFF').ZI14A                           00756300
&ZW                   SETC  '4'                                         00756400
.ZI14A                ANOP  ,                                           00756500
.*-------------------------------------------------------------------   00756600
.***AI.L17 XDEFOP AL1                                                   00756700
                      AIF   ('&ZW' EQ '0').ZI14B                        00756800
                      AIF   ('&ZW' EQ '').ZI14B                         00756900
.*                                                                      00757000
&ZOPN                 SETA  &ZOPN+1                                     00757100
&ZOPL(&ZOPN)          SETC  ' '                                         00757200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00757300
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  00757400
&ZOPD(&ZOPN)          SETC  '++ &ZXDEFOP XDEFOP'                        00757500
.ZI14B                ANOP  ,                                           00757600
.*-------------------------------------------------------------------   00757700
.***AI.L05 XFLAGS1 BL1                                                  00757800
&ZW                   SETC  ''                                          00757900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00758000
.*-------------------------------------------------------------------   00758100
.***AI.L08 XFLAGS1 "SINGLE"                                             00758200
.***      BL1'1XXXXXXX'                                                 00758300
         AIF   ('&XSCOPE' NE 'SINGLE').ZI16A                            00758400
&ZW                   SETC  '&ZW.1'                                     00758500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00758600
                      AGO   .ZI16C                                      00758700
.*                                                                      00758800
.ZI16A                ANOP  ,                                           00758900
&ZW                   SETC  '&ZW.0'                                     00759000
.ZI16C                ANOP  ,                                           00759100
.*-------------------------------------------------------------------   00759200
.***AI.L08 XFLAGS1 "ALL"                                                00759300
.***      BL1'X1XXXXXX'                                                 00759400
         AIF   ('&XSCOPE' NE 'ALL').ZI17A                               00759500
&ZW                   SETC  '&ZW.1'                                     00759600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00759700
                      AGO   .ZI17C                                      00759800
.*                                                                      00759900
.ZI17A                ANOP  ,                                           00760000
&ZW                   SETC  '&ZW.0'                                     00760100
.ZI17C                ANOP  ,                                           00760200
.*-------------------------------------------------------------------   00760300
.***AI.L08 XFLAGS1 "COMMON"                                             00760400
.***      BL1'XX1XXXXX'                                                 00760500
         AIF   ('&XSCOPE' NE 'COMMON').ZI18A                            00760600
&ZW                   SETC  '&ZW.1'                                     00760700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00760800
                      AGO   .ZI18C                                      00760900
.*                                                                      00761000
.ZI18A                ANOP  ,                                           00761100
&ZW                   SETC  '&ZW.0'                                     00761200
.ZI18C                ANOP  ,                                           00761300
.*-------------------------------------------------------------------   00761400
.***AI.L08 XFLAGS1 "COND"                                               00761500
.***      BL1'XXXX1XXX'                                                 00761600
         AIF   ('&XGENNAME' NE 'COND').ZI19A                            00761700
&ZW                   SETC  '&ZW.01'                                    00761800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00761900
                      AGO   .ZI19C                                      00762000
.*                                                                      00762100
.ZI19A                ANOP  ,                                           00762200
&ZW                   SETC  '&ZW.00'                                    00762300
.ZI19C                ANOP  ,                                           00762400
.*-------------------------------------------------------------------   00762500
.***AI.L08 XFLAGS1 "YES"                                                00762600
.***      BL1'XXXXX1XX'                                                 00762700
         AIF   ('&XGENNAME' NE 'YES').ZI20A                             00762800
&ZW                   SETC  '&ZW.1'                                     00762900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00763000
                      AGO   .ZI20C                                      00763100
.*                                                                      00763200
.ZI20A                ANOP  ,                                           00763300
&ZW                   SETC  '&ZW.0'                                     00763400
.ZI20C                ANOP  ,                                           00763500
.*-------------------------------------------------------------------   00763600
.***AI.L08 XFLAGS1 "YES"                                                00763700
.***      BL1'XXXXXX1X'                                                 00763800
         AIF   ('&XINLIST' NE 'YES').ZI21A                              00763900
&ZW                   SETC  '&ZW.1'                                     00764000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00764100
                      AGO   .ZI21C                                      00764200
.*                                                                      00764300
.ZI21A                ANOP  ,                                           00764400
&ZW                   SETC  '&ZW.0'                                     00764500
.ZI21C                ANOP  ,                                           00764600
.*-------------------------------------------------------------------   00764700
.***AI.L08 XFLAGS1 "1M"                                                 00764800
.***      BL1'XXXXXXX1'                                                 00764900
         AIF   ('&XPAGEFRAMESIZE' NE '1M').ZI22A                        00765000
&ZW                   SETC  '&ZW.1'                                     00765100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00765200
                      AGO   .ZI22C                                      00765300
.*                                                                      00765400
.ZI22A                ANOP  ,                                           00765500
&ZW                   SETC  '&ZW.0'                                     00765600
.ZI22C                ANOP  ,                                           00765700
.*-------------------------------------------------------------------   00765800
.***AI.L11 XFLAGS1 BL1                                                  00765900
                      AIF   ('&ZCLNG' NE 'YES').ZI22E  ALL ZERO BITS    00766000
&ZOPN                 SETA  &ZOPN+1                                     00766100
&ZOPL(&ZOPN)          SETC  ' '                                         00766200
&ZOPO(&ZOPN)          SETC  'OI'                                        00766300
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00766400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00766500
.ZI22E                ANOP  ,                                           00766600
.*-------------------------------------------------------------------   00766700
.***AI.L05 XFLAGS2 BL1                                                  00766800
&ZW                   SETC  ''                                          00766900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00767000
.*-------------------------------------------------------------------   00767100
.***AI.L08 XFLAGS2 "YES"                                                00767200
.***      BL1'1XXXXXXX'                                                 00767300
         AIF   ('&XDREF' NE 'YES').ZI24A                                00767400
&ZW                   SETC  '&ZW.1'                                     00767500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00767600
                      AGO   .ZI24C                                      00767700
.*                                                                      00767800
.ZI24A                ANOP  ,                                           00767900
&ZW                   SETC  '&ZW.0'                                     00768000
.ZI24C                ANOP  ,                                           00768100
.*-------------------------------------------------------------------   00768200
.***AI.L08 XFLAGS2 "YES"                                                00768300
.***      BL1'X1XXXXXX'                                                 00768400
         AIF   ('&XFPROT' NE 'YES').ZI25A                               00768500
&ZW                   SETC  '&ZW.1'                                     00768600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00768700
                      AGO   .ZI25C                                      00768800
.*                                                                      00768900
.ZI25A                ANOP  ,                                           00769000
&ZW                   SETC  '&ZW.0'                                     00769100
.ZI25C                ANOP  ,                                           00769200
.*-------------------------------------------------------------------   00769300
.***AI.L08 XFLAGS2 "NO"                                                 00769400
.***      BL1'XX1XXXXX'                                                 00769500
         AIF   ('&XLONG' NE 'NO').ZI26A                                 00769600
&ZW                   SETC  '&ZW.1'                                     00769700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00769800
                      AGO   .ZI26C                                      00769900
.*                                                                      00770000
.ZI26A                ANOP  ,                                           00770100
&ZW                   SETC  '&ZW.0'                                     00770200
.ZI26C                ANOP  ,                                           00770300
.*-------------------------------------------------------------------   00770400
.***AI.L08 XFLAGS2 "KEY"                                                00770500
.***      BL1'XXX1XXXX'                                                 00770600
         AIF   ('&KEY' EQ '').ZI27A                                     00770700
&ZW                   SETC  '&ZW.1'                                     00770800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00770900
                      AGO   .ZI27C                                      00771000
.*                                                                      00771100
.ZI27A                ANOP  ,                                           00771200
&ZW                   SETC  '&ZW.0'                                     00771300
.ZI27C                ANOP  ,                                           00771400
.*-------------------------------------------------------------------   00771500
.***AI.L08 XFLAGS2 "TTOKEN"                                             00771600
.***      BL1'XXXX1XXX'                                                 00771700
         AIF   ('&TTOKEN' EQ '').ZI28A                                  00771800
         AIF   ('&TTOKEN' EQ '0').ZI28A                                 00771900
&ZW                   SETC  '&ZW.1'                                     00772000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00772100
                      AGO   .ZI28C                                      00772200
.*                                                                      00772300
.ZI28A                ANOP  ,                                           00772400
&ZW                   SETC  '&ZW.0'                                     00772500
.ZI28C                ANOP  ,                                           00772600
.*-------------------------------------------------------------------   00772700
.***AI.L08 XFLAGS2 "YES"                                                00772800
.***      BL1'XXXXX1XX'                                                 00772900
         AIF   ('&XFORCE' NE 'YES').ZI29A                               00773000
&ZW                   SETC  '&ZW.1'                                     00773100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00773200
                      AGO   .ZI29C                                      00773300
.*                                                                      00773400
.ZI29A                ANOP  ,                                           00773500
&ZW                   SETC  '&ZW.0'                                     00773600
.ZI29C                ANOP  ,                                           00773700
.*-------------------------------------------------------------------   00773800
.***AI.L08 XFLAGS2 "YES"                                                00773900
.***      BL1'XXXXXX1X'                                                 00774000
         AIF   ('&XVAR' NE 'YES').ZI30A                                 00774100
&ZW                   SETC  '&ZW.1'                                     00774200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00774300
                      AGO   .ZI30C                                      00774400
.*                                                                      00774500
.ZI30A                ANOP  ,                                           00774600
&ZW                   SETC  '&ZW.0'                                     00774700
.ZI30C                ANOP  ,                                           00774800
.*-------------------------------------------------------------------   00774900
.***AI.L08 XFLAGS2 "YES"                                                00775000
.***      BL1'XXXXXXX1'                                                 00775100
         AIF   ('&XSHARE' NE 'YES').ZI31A                               00775200
&ZW                   SETC  '&ZW.1'                                     00775300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00775400
                      AGO   .ZI31C                                      00775500
.*                                                                      00775600
.ZI31A                ANOP  ,                                           00775700
&ZW                   SETC  '&ZW.0'                                     00775800
.ZI31C                ANOP  ,                                           00775900
.*-------------------------------------------------------------------   00776000
.***AI.L11 XFLAGS2 BL1                                                  00776100
                      AIF   ('&ZCLNG' NE 'YES').ZI31E  ALL ZERO BITS    00776200
&ZOPN                 SETA  &ZOPN+1                                     00776300
&ZOPL(&ZOPN)          SETC  ' '                                         00776400
&ZOPO(&ZOPN)          SETC  'OI'                                        00776500
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00776600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00776700
.ZI31E                ANOP  ,                                           00776800
.*-------------------------------------------------------------------   00776900
.***AI.L25  XKEY XL1                                                    00777000
                      AIF   ('&ZXKEY' EQ '').ZI32E                      00777100
                      AIF   ('&ZXKEY' EQ 'OUTPUT').ZI32E                00777200
&ZCGPR                SETC  '&XKEY'                                     00777300
.*                                                                      00777400
                      AIF   ('&XKEY'(1,1) NE '(').ZI32B                 00777500
&ZCGPR   SETC  '0('.'&XKEY'(2,K'&XKEY-2).')'                            00777600
.ZI32B                ANOP  ,                                           00777700
.*                                                                      00777800
&ZC                   SETC  '&XKEY'(1,1)                                00777900
                      AIF   (T'&ZC NE 'N').ZI32D                        00778000
&ZC                   SETC  '&XKEY'                                     00778100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00778200
&ZCGPR                SETC  '=AL1(&XKEY)'                               00778300
.*                                                                      00778400
.ZI32D                ANOP  ,                                           00778500
.*                                                                      00778600
&ZOPN                 SETA  &ZOPN+1                                     00778700
&ZOPL(&ZOPN)          SETC  ' '                                         00778800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00778900
&ZOPV(&ZOPN)          SETC  '5(1,1),&ZCGPR'                             00779000
&ZOPD(&ZOPN)          SETC  '++ &ZXKEY XKEY'                            00779100
.*                                                                      00779200
.ZI32E                ANOP  ,                                           00779300
.*-------------------------------------------------------------------   00779400
.***AI.L07 XTYPE AL1                                                    00779500
&ZW                   SETC  ''                                          00779600
.*-------------------------------------------------------------------   00779700
.***AI.L15 XTYPE "BASIC" AL1                                            00779800
         AIF   ('&XTYPE' NE 'BASIC').ZI34A                              00779900
&ZW                   SETC  '0'                                         00780000
.ZI34A                ANOP  ,                                           00780100
.*-------------------------------------------------------------------   00780200
.***AI.L15 XTYPE "HIPERSPACE" AL1                                       00780300
         AIF   ('&XTYPE' NE 'HIPERSPACE').ZI35A                         00780400
&ZW                   SETC  '1'                                         00780500
.ZI35A                ANOP  ,                                           00780600
.*-------------------------------------------------------------------   00780700
.***AI.L17 XTYPE AL1                                                    00780800
                      AIF   ('&ZW' EQ '0').ZI35B                        00780900
                      AIF   ('&ZW' EQ '').ZI35B                         00781000
.*                                                                      00781100
&ZOPN                 SETA  &ZOPN+1                                     00781200
&ZOPL(&ZOPN)          SETC  ' '                                         00781300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00781400
&ZOPV(&ZOPN)          SETC  '6(1),&ZW'                                  00781500
&ZOPD(&ZOPN)          SETC  '++ &ZXTYPE XTYPE'                          00781600
.ZI35B                ANOP  ,                                           00781700
.*-------------------------------------------------------------------   00781800
.***AI.L05 XFLAGS3 BL1                                                  00781900
&ZW                   SETC  ''                                          00782000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00782100
.*-------------------------------------------------------------------   00782200
.***AI.L08 XFLAGS3 "SCROLL"                                             00782300
.***      BL1'1XXXXXXX'                                                 00782400
         AIF   ('&XHSTYPE' NE 'SCROLL').ZI37A                           00782500
&ZW                   SETC  '&ZW.1'                                     00782600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00782700
                      AGO   .ZI37C                                      00782800
.*                                                                      00782900
.ZI37A                ANOP  ,                                           00783000
&ZW                   SETC  '&ZW.0'                                     00783100
.ZI37C                ANOP  ,                                           00783200
.*-------------------------------------------------------------------   00783300
.***AI.L08 XFLAGS3 "CACHE"                                              00783400
.***      BL1'X1XXXXXX'                                                 00783500
         AIF   ('&XHSTYPE' NE 'CACHE').ZI38A                            00783600
&ZW                   SETC  '&ZW.1'                                     00783700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00783800
                      AGO   .ZI38C                                      00783900
.*                                                                      00784000
.ZI38A                ANOP  ,                                           00784100
&ZW                   SETC  '&ZW.0'                                     00784200
.ZI38C                ANOP  ,                                           00784300
.*-------------------------------------------------------------------   00784400
.***AI.L08 XFLAGS3 "NO"                                                 00784500
.***      BL1'XX1XXXXX'                                                 00784600
         AIF   ('&XCASTOUT' NE 'NO').ZI39A                              00784700
&ZW                   SETC  '&ZW.1'                                     00784800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00784900
                      AGO   .ZI39C                                      00785000
.*                                                                      00785100
.ZI39A                ANOP  ,                                           00785200
&ZW                   SETC  '&ZW.0'                                     00785300
.ZI39C                ANOP  ,                                           00785400
.*-------------------------------------------------------------------   00785500
.***AI.L08 XFLAGS3 "64"                                                 00785600
.***      BL1'XXX1XXXX'                                                 00785700
         AIF   ('&XBACK' NE '64').ZI40A                                 00785800
&ZW                   SETC  '&ZW.1'                                     00785900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00786000
                      AGO   .ZI40C                                      00786100
.*                                                                      00786200
.ZI40A                ANOP  ,                                           00786300
&ZW                   SETC  '&ZW.0'                                     00786400
.ZI40C                ANOP  ,                                           00786500
.*-------------------------------------------------------------------   00786600
.***AI.L08 XFLAGS3 "YES"                                                00786700
.***      BL1'XXXX1XXX'                                                 00786800
         AIF   ('&XFREESHAREDSEG' NE 'YES').ZI41A                       00786900
&ZW                   SETC  '&ZW.1'                                     00787000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00787100
                      AGO   .ZI41C                                      00787200
.*                                                                      00787300
.ZI41A                ANOP  ,                                           00787400
&ZW                   SETC  '&ZW.0'                                     00787500
.ZI41C                ANOP  ,                                           00787600
.*-------------------------------------------------------------------   00787700
.***AI.L08 XFLAGS3 "YES"                                                00787800
.***      BL1'XXXXX1XX'                                                 00787900
         AIF   ('&XKEEPREAL' NE 'YES').ZI42A                            00788000
&ZW                   SETC  '&ZW.1'                                     00788100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00788200
                      AGO   .ZI42C                                      00788300
.*                                                                      00788400
.ZI42A                ANOP  ,                                           00788500
&ZW                   SETC  '&ZW.0'                                     00788600
.ZI42C                ANOP  ,                                           00788700
.*-------------------------------------------------------------------   00788800
.***AI.L08 XFLAGS3 "YES"                                                00788900
.***      BL1'XXXXXX1X'                                                 00789000
         AIF   ('&XCLEAR' NE 'YES').ZI43A                               00789100
&ZW                   SETC  '&ZW.1'                                     00789200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00789300
                      AGO   .ZI43C                                      00789400
.*                                                                      00789500
.ZI43A                ANOP  ,                                           00789600
&ZW                   SETC  '&ZW.0'                                     00789700
.ZI43C                ANOP  ,                                           00789800
.*-------------------------------------------------------------------   00789900
.***AI.L08 XFLAGS3 "NO"                                                 00790000
.***      BL1'XXXXXXX1'                                                 00790100
         AIF   ('&XCRITICALPAGING' NE 'NO').ZI44A                       00790200
&ZW                   SETC  '&ZW.1'                                     00790300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00790400
                      AGO   .ZI44C                                      00790500
.*                                                                      00790600
.ZI44A                ANOP  ,                                           00790700
&ZW                   SETC  '&ZW.0'                                     00790800
.ZI44C                ANOP  ,                                           00790900
.*-------------------------------------------------------------------   00791000
.***AI.L11 XFLAGS3 BL1                                                  00791100
                      AIF   ('&ZCLNG' NE 'YES').ZI44E  ALL ZERO BITS    00791200
&ZOPN                 SETA  &ZOPN+1                                     00791300
&ZOPL(&ZOPN)          SETC  ' '                                         00791400
&ZOPO(&ZOPN)          SETC  'OI'                                        00791500
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00791600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00791700
.ZI44E                ANOP  ,                                           00791800
.*-------------------------------------------------------------------   00791900
.***AI.L25  XSTOKEN CL8                                                 00792000
                      AIF   ('&ZXSTOKEN' EQ '').ZI46E                   00792100
                      AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZI46E             00792200
&ZCGPR                SETC  '&XSTOKEN'                                  00792300
.*                                                                      00792400
                      AIF   ('&XSTOKEN'(1,1) NE '(').ZI46B              00792500
&ZCGPR   SETC  '0('.'&XSTOKEN'(2,K'&XSTOKEN-2).')'                      00792600
.ZI46B                ANOP  ,                                           00792700
.*                                                                      00792800
&ZOPN                 SETA  &ZOPN+1                                     00792900
&ZOPL(&ZOPN)          SETC  ' '                                         00793000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00793100
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00793200
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN XSTOKEN'                      00793300
.*                                                                      00793400
.ZI46E                ANOP  ,                                           00793500
.*-------------------------------------------------------------------   00793600
.***AI.L25  XSTART F                                                    00793700
                      AIF   ('&ZXSTART' EQ '').ZI47E                    00793800
                      AIF   ('&ZXSTART' EQ 'OUTPUT').ZI47E              00793900
&ZCGPR                SETC  '&XSTART'                                   00794000
.*                                                                      00794100
                      AIF   ('&XSTART'(1,1) NE '(').ZI47B               00794200
&ZCGPR   SETC  '0('.'&XSTART'(2,K'&XSTART-2).')'                        00794300
                      AGO   .ZI47D                                      00794400
.ZI47B                ANOP  ,                                           00794500
.*                                                                      00794600
&ZC                   SETC  '&XSTART'(1,1)                              00794700
                      AIF   (T'&ZC NE 'N').ZI47D                        00794800
&ZC                   SETC  '&XSTART'                                   00794900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI47D               00795000
&ZCGPR                SETC  '=FL4''&XSTART'''                           00795100
.*                                                                      00795200
.ZI47D                ANOP  ,                                           00795300
.*                                                                      00795400
&ZOPN                 SETA  &ZOPN+1                                     00795500
&ZOPL(&ZOPN)          SETC  ' '                                         00795600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00795700
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00795800
&ZOPD(&ZOPN)          SETC  '++ &ZXSTART XSTART'                        00795900
.*                                                                      00796000
.ZI47E                ANOP  ,                                           00796100
.*-------------------------------------------------------------------   00796200
.***AI.L18  XBLOCKS F                                                   00796300
         AIF   ('&XBLOCKS' NE '0').ZI48                                 00796400
&ZXBLOCKS             SETC  ''             RESET INPUT/OUTPUT           00796500
.ZI48                 ANOP  ,                                           00796600
.*-------------------------------------------------------------------   00796700
.***AI.L25  XBLOCKS F                                                   00796800
                      AIF   ('&ZXBLOCKS' EQ '').ZI48E                   00796900
                      AIF   ('&ZXBLOCKS' EQ 'OUTPUT').ZI48E             00797000
&ZCGPR                SETC  '&XBLOCKS'                                  00797100
.*                                                                      00797200
                      AIF   ('&XBLOCKS'(1,1) NE '(').ZI48B              00797300
&ZCGPR   SETC  '0('.'&XBLOCKS'(2,K'&XBLOCKS-2).')'                      00797400
                      AGO   .ZI48D                                      00797500
.ZI48B                ANOP  ,                                           00797600
.*                                                                      00797700
&ZC                   SETC  '&XBLOCKS'(1,1)                             00797800
                      AIF   (T'&ZC NE 'N').ZI48D                        00797900
&ZC                   SETC  '&XBLOCKS'                                  00798000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI48D               00798100
&ZCGPR                SETC  '=FL4''&XBLOCKS'''                          00798200
.*                                                                      00798300
.ZI48D                ANOP  ,                                           00798400
.*                                                                      00798500
&ZOPN                 SETA  &ZOPN+1                                     00798600
&ZOPL(&ZOPN)          SETC  ' '                                         00798700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00798800
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00798900
&ZOPD(&ZOPN)          SETC  '++ &ZXBLOCKS XBLOCKS'                      00799000
.*                                                                      00799100
.ZI48E                ANOP  ,                                           00799200
.*-------------------------------------------------------------------   00799300
.***AI.L18  XTTOKEN CL16                                                00799400
         AIF   ('&XTTOKEN' NE '0').ZI49                                 00799500
&ZXTTOKEN             SETC  ''             RESET INPUT/OUTPUT           00799600
.ZI49                 ANOP  ,                                           00799700
.*-------------------------------------------------------------------   00799800
.***AI.L25  XTTOKEN CL16                                                00799900
                      AIF   ('&ZXTTOKEN' EQ '').ZI49E                   00800000
                      AIF   ('&ZXTTOKEN' EQ 'OUTPUT').ZI49E             00800100
&ZCGPR                SETC  '&XTTOKEN'                                  00800200
.*                                                                      00800300
                      AIF   ('&XTTOKEN'(1,1) NE '(').ZI49B              00800400
&ZCGPR   SETC  '0('.'&XTTOKEN'(2,K'&XTTOKEN-2).')'                      00800500
.ZI49B                ANOP  ,                                           00800600
.*                                                                      00800700
&ZOPN                 SETA  &ZOPN+1                                     00800800
&ZOPL(&ZOPN)          SETC  ' '                                         00800900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00801000
&ZOPV(&ZOPN)          SETC  '32(16,1),&ZCGPR'                           00801100
&ZOPD(&ZOPN)          SETC  '++ &ZXTTOKEN XTTOKEN'                      00801200
.*                                                                      00801300
.ZI49E                ANOP  ,                                           00801400
.*-------------------------------------------------------------------   00801500
.***AI.LVER01                                                           00801600
                      AIF  (&XPLISTVER LT 1).ZI52Z                      00801700
.*-------------------------------------------------------------------   00801800
.***AI.L25  XINITIAL F                                                  00801900
                      AIF   ('&ZXINITIAL' EQ '').ZI52E                  00802000
                      AIF   ('&ZXINITIAL' EQ 'OUTPUT').ZI52E            00802100
&ZCGPR                SETC  '&XINITIAL'                                 00802200
.*                                                                      00802300
                      AIF   ('&XINITIAL'(1,1) NE '(').ZI52B             00802400
&ZCGPR   SETC  '0('.'&XINITIAL'(2,K'&XINITIAL-2).')'                    00802500
                      AGO   .ZI52D                                      00802600
.ZI52B                ANOP  ,                                           00802700
.*                                                                      00802800
&ZC                   SETC  '&XINITIAL'(1,1)                            00802900
                      AIF   (T'&ZC NE 'N').ZI52D                        00803000
&ZC                   SETC  '&XINITIAL'                                 00803100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI52D               00803200
&ZCGPR                SETC  '=FL4''&XINITIAL'''                         00803300
.*                                                                      00803400
.ZI52D                ANOP  ,                                           00803500
.*                                                                      00803600
&ZOPN                 SETA  &ZOPN+1                                     00803700
&ZOPL(&ZOPN)          SETC  ' '                                         00803800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00803900
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            00804000
&ZOPD(&ZOPN)          SETC  '++ &ZXINITIAL XINITIAL'                    00804100
.*                                                                      00804200
.ZI52E                ANOP  ,                                           00804300
.*-------------------------------------------------------------------   00804400
.***AI.LVER02                                                           00804500
.ZI52Z                ANOP  ,                                           00804600
.*-------------------------------------------------------------------   00804700
.***AI.LVER01                                                           00804800
                      AIF  (&XPLISTVER LT 2).ZI53Z                      00804900
.*-------------------------------------------------------------------   00805000
.***AI.L05 XFLAGS4 BL1                                                  00805100
&ZW                   SETC  ''                                          00805200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00805300
.*-------------------------------------------------------------------   00805400
.***AI.LVER02                                                           00805500
.ZI53Z                ANOP  ,                                           00805600
.*-------------------------------------------------------------------   00805700
.***AI.LVER01                                                           00805800
                      AIF  (&XPLISTVER LT 2).ZI54Z                      00805900
.*-------------------------------------------------------------------   00806000
.***AI.L08 XFLAGS4 "YES"                                                00806100
.***      BL1'1XXXXXXX'                                                 00806200
         AIF   ('&XHIDEZERO' NE 'YES').ZI54A                            00806300
&ZW                   SETC  '&ZW.1'                                     00806400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00806500
                      AGO   .ZI54C                                      00806600
.*                                                                      00806700
.ZI54A                ANOP  ,                                           00806800
&ZW                   SETC  '&ZW.0'                                     00806900
.ZI54C                ANOP  ,                                           00807000
.*-------------------------------------------------------------------   00807100
.***AI.LVER02                                                           00807200
.ZI54Z                ANOP  ,                                           00807300
.*-------------------------------------------------------------------   00807400
.***AI.LVER01                                                           00807500
                      AIF  (&XPLISTVER LT 2).ZI55Z                      00807600
.*-------------------------------------------------------------------   00807700
.***AI.L08 XFLAGS4 "YES"                                                00807800
.***      BL1'X1XXXXXX'                                                 00807900
         AIF   ('&XPCIEIO' NE 'YES').ZI55A                              00808000
&ZW                   SETC  '&ZW.1'                                     00808100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00808200
                      AGO   .ZI55C                                      00808300
.*                                                                      00808400
.ZI55A                ANOP  ,                                           00808500
&ZW                   SETC  '&ZW.0'                                     00808600
.ZI55C                ANOP  ,                                           00808700
.*-------------------------------------------------------------------   00808800
.***AI.LVER02                                                           00808900
.ZI55Z                ANOP  ,                                           00809000
.*-------------------------------------------------------------------   00809100
.***AI.LVER01                                                           00809200
                      AIF  (&XPLISTVER LT 2).ZI56Z                      00809300
.*-------------------------------------------------------------------   00809400
.***AI.L08 XFLAGS4 "NO"                                                 00809500
.***      BL1'XX1XXXXX'                                                 00809600
         AIF   ('&XSTEAL' NE 'NO').ZI56A                                00809700
&ZW                   SETC  '&ZW.100000'                                00809800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00809900
                      AGO   .ZI56C                                      00810000
.*                                                                      00810100
.ZI56A                ANOP  ,                                           00810200
&ZW                   SETC  '&ZW.000000'                                00810300
.ZI56C                ANOP  ,                                           00810400
.*-------------------------------------------------------------------   00810500
.***AI.L11 XFLAGS4 BL1                                                  00810600
                      AIF   ('&ZCLNG' NE 'YES').ZI56E  ALL ZERO BITS    00810700
&ZOPN                 SETA  &ZOPN+1                                     00810800
&ZOPL(&ZOPN)          SETC  ' '                                         00810900
&ZOPO(&ZOPN)          SETC  'OI'                                        00811000
&ZOPV(&ZOPN)          SETC  '60(1),B''&ZW'''                            00811100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00811200
.ZI56E                ANOP  ,                                           00811300
.*-------------------------------------------------------------------   00811400
.***AI.LVER02                                                           00811500
.ZI56Z                ANOP  ,                                           00811600
.*-------------------------------------------------------------------   00811700
.***AI.LVER01                                                           00811800
                      AIF  (&XPLISTVER LT 2).ZI57Z                      00811900
.*-------------------------------------------------------------------   00812000
.***AI.LVER02                                                           00812100
.ZI57Z                ANOP  ,                                           00812200
.*-------------------------------------------------------------------   00812300
.***AI.LVER01                                                           00812400
                      AIF  (&XPLISTVER LT 3).ZI58Z                      00812500
.*-------------------------------------------------------------------   00812600
.***AI.LVER02                                                           00812700
.ZI58Z                ANOP  ,                                           00812800
.*-------------------------------------------------------------------   00812900
.***AI.LVER01                                                           00813000
                      AIF  (&XPLISTVER LT 3).ZI59Z                      00813100
.*-------------------------------------------------------------------   00813200
.***AI.L25  XDMAPGTPTR AL8                                              00813300
                      AIF   ('&ZXDMAPGTPTR' EQ '').ZI59E                00813400
                      AIF   ('&ZXDMAPGTPTR' EQ 'OUTPUT').ZI59E          00813500
&ZCGPR                SETC  '&XDMAPGTPTR'                               00813600
.*                                                                      00813700
                      AIF   ('&XDMAPGTPTR'(1,1) NE '(').ZI59B           00813800
&ZCGPR   SETC  '0('.'&XDMAPGTPTR'(2,K'&XDMAPGTPTR-2).')'                00813900
                      AGO   .ZI59D                                      00814000
.ZI59B                ANOP  ,                                           00814100
.*                                                                      00814200
&ZC                   SETC  '&XDMAPGTPTR'(1,1)                          00814300
                      AIF   (T'&ZC NE 'N').ZI59D                        00814400
&ZC                   SETC  '&XDMAPGTPTR'                               00814500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI59D               00814600
&ZCGPR                SETC  '=AD(&XDMAPGTPTR)'                          00814700
.*                                                                      00814800
.ZI59D                ANOP  ,                                           00814900
.*                                                                      00815000
&ZOPN                 SETA  &ZOPN+1                                     00815100
&ZOPL(&ZOPN)          SETC  ' '                                         00815200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00815300
&ZOPV(&ZOPN)          SETC  '72(8,1),&ZCGPR'                            00815400
&ZOPD(&ZOPN)          SETC  '++ &ZXDMAPGTPTR XDMAPGTPTR'                00815500
.*                                                                      00815600
.ZI59E                ANOP  ,                                           00815700
.*-------------------------------------------------------------------   00815800
.***AI.LVER02                                                           00815900
.ZI59Z                ANOP  ,                                           00816000
.*-------------------------------------------------------------------   00816100
.***AI.L25  XNAME CL8                                                   00816200
                      AIF   ('&ZXNAME' EQ '').ZI61E                     00816300
                      AIF   ('&ZXNAME' EQ 'OUTPUT').ZI61E               00816400
&ZCGPR                SETC  '&XNAME'                                    00816500
.*                                                                      00816600
                      AIF   ('&XNAME'(1,1) NE '(').ZI61B                00816700
&ZCGPR   SETC  '0('.'&XNAME'(2,K'&XNAME-2).')'                          00816800
.ZI61B                ANOP  ,                                           00816900
.*                                                                      00817000
&ZOPN                 SETA  &ZOPN+1                                     00817100
&ZOPL(&ZOPN)          SETC  ' '                                         00817200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00817300
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00817400
&ZOPD(&ZOPN)          SETC  '++ &ZXNAME XNAME'                          00817500
.*                                                                      00817600
.ZI61E                ANOP  ,                                           00817700
.*-------------------------------------------------------------------   00817800
.***AI.L25  XNUMRANGE F                                                 00817900
                      AIF   ('&ZXNUMRANGE' EQ '').ZI63E                 00818000
                      AIF   ('&ZXNUMRANGE' EQ 'OUTPUT').ZI63E           00818100
&ZCGPR                SETC  '&XNUMRANGE'                                00818200
.*                                                                      00818300
                      AIF   ('&XNUMRANGE'(1,1) NE '(').ZI63B            00818400
&ZCGPR   SETC  '0('.'&XNUMRANGE'(2,K'&XNUMRANGE-2).')'                  00818500
                      AGO   .ZI63D                                      00818600
.ZI63B                ANOP  ,                                           00818700
.*                                                                      00818800
&ZC                   SETC  '&XNUMRANGE'(1,1)                           00818900
                      AIF   (T'&ZC NE 'N').ZI63D                        00819000
&ZC                   SETC  '&XNUMRANGE'                                00819100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI63D               00819200
&ZCGPR                SETC  '=FL4''&XNUMRANGE'''                        00819300
.*                                                                      00819400
.ZI63D                ANOP  ,                                           00819500
.*                                                                      00819600
&ZOPN                 SETA  &ZOPN+1                                     00819700
&ZOPL(&ZOPN)          SETC  ' '                                         00819800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00819900
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00820000
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMRANGE XNUMRANGE'                  00820100
.*                                                                      00820200
.ZI63E                ANOP  ,                                           00820300
.*-------------------------------------------------------------------   00820400
.***AI.L25  XRANGLIST AL4                                               00820500
                      AIF   ('&ZXRANGLIST' EQ '').ZI65E                 00820600
                      AIF   ('&ZXRANGLIST' EQ 'OUTPUT').ZI65E           00820700
&ZCGPR                SETC  '&XRANGLIST'                                00820800
.*                                                                      00820900
                      AIF   ('&XRANGLIST'(1,1) NE '(').ZI65B            00821000
&ZCGPR   SETC  '0('.'&XRANGLIST'(2,K'&XRANGLIST-2).')'                  00821100
                      AGO   .ZI65D                                      00821200
.ZI65B                ANOP  ,                                           00821300
.*                                                                      00821400
&ZC                   SETC  '&XRANGLIST'(1,1)                           00821500
                      AIF   (T'&ZC NE 'N').ZI65D                        00821600
&ZC                   SETC  '&XRANGLIST'                                00821700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI65D               00821800
&ZCGPR                SETC  '=AL4(&XRANGLIST)'                          00821900
.*                                                                      00822000
.ZI65D                ANOP  ,                                           00822100
.*                                                                      00822200
&ZOPN                 SETA  &ZOPN+1                                     00822300
&ZOPL(&ZOPN)          SETC  ' '                                         00822400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00822500
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00822600
&ZOPD(&ZOPN)          SETC  '++ &ZXRANGLIST XRANGLIST'                  00822700
.*                                                                      00822800
.ZI65E                ANOP  ,                                           00822900
.*-------------------------------------------------------------------   00823000
&ZOPN1                SETA &ZOPN                                        00823100
.*******************************************************************    00823200
.***  PROCESS DSPSERV OUTPUT PARAMETERS                                 00823300
.*******************************************************************    00823400
                      ACTR  10000                                       00823500
.*------------------------------------------------------------------    00823600
.***AO.L02 XOUTNAME CL8                                                 00823700
         AIF   ('&ZXOUTNAME' EQ 'OUTPUT').ZO45A  OUTPUT                 00823800
         AIF   ('&ZXOUTNAME' NE 'INOUT').ZO45C  INOUT                   00823900
.ZO45A    AIF   ('&XOUTNAME'(1,1) NE '(').ZO45B  ADDR IN GPR            00824000
&ZCGPR   SETC  '&XOUTNAME'(2,K'&XOUTNAME-2)                             00824100
&ZOPN                 SETA  &ZOPN+1                                     00824200
&ZOPL(&ZOPN)          SETC  ' '                                         00824300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00824400
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),8(1)'                          00824500
&ZOPD(&ZOPN)          SETC  '++ XOUTNAME CL8'                           00824600
                      AGO   .ZO45C                                      00824700
.*                                                                      00824800
.ZO45B                ANOP  ,                                           00824900
&ZAWRK   SETA  K'&XOUTNAME                                              00825000
         AIF   ('&XOUTNAME'(&ZAWRK,1) NE ')').ZO45G                     00825100
&ZN      SETA  2                                                        00825200
.ZO45H    ANOP                                                          00825300
         AIF   (&ZN GE &ZAWRK).ZO45G                                    00825400
         AIF   ('&XOUTNAME'(&ZN,1) NE '(').ZO45I                        00825500
&ZC      SETC  '&XOUTNAME'(1,&ZN).'8'.','                               00825600
&ZC      SETC  '&ZC'.'&XOUTNAME'(&ZN+1,&ZAWRK-&ZN).',8(1)'              00825700
         AGO   .ZO45J                                                   00825800
.ZO45I    ANOP                                                          00825900
&ZN      SETA  &ZN+1                                                    00826000
         AGO   .ZO45H                                                   00826100
.ZO45G    ANOP                                                          00826200
&ZC      SETC  '&XOUTNAME.(8),8(1)'                                     00826300
.ZO45J    ANOP                                                          00826400
&ZOPN                 SETA  &ZOPN+1                                     00826500
&ZOPL(&ZOPN)          SETC  ' '                                         00826600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00826700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00826800
&ZOPD(&ZOPN)          SETC  '++ XOUTNAME CL8'                           00826900
.ZO45C                ANOP  ,                                           00827000
.*------------------------------------------------------------------    00827100
.***AO.L02 XSTOKEN CL8                                                  00827200
         AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZO46A  OUTPUT                  00827300
         AIF   ('&ZXSTOKEN' NE 'INOUT').ZO46C  INOUT                    00827400
.ZO46A    AIF   ('&XSTOKEN'(1,1) NE '(').ZO46B  ADDR IN GPR             00827500
&ZCGPR   SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                               00827600
&ZOPN                 SETA  &ZOPN+1                                     00827700
&ZOPL(&ZOPN)          SETC  ' '                                         00827800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00827900
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),16(1)'                         00828000
&ZOPD(&ZOPN)          SETC  '++ XSTOKEN CL8'                            00828100
                      AGO   .ZO46C                                      00828200
.*                                                                      00828300
.ZO46B                ANOP  ,                                           00828400
&ZAWRK   SETA  K'&XSTOKEN                                               00828500
         AIF   ('&XSTOKEN'(&ZAWRK,1) NE ')').ZO46G                      00828600
&ZN      SETA  2                                                        00828700
.ZO46H    ANOP                                                          00828800
         AIF   (&ZN GE &ZAWRK).ZO46G                                    00828900
         AIF   ('&XSTOKEN'(&ZN,1) NE '(').ZO46I                         00829000
&ZC      SETC  '&XSTOKEN'(1,&ZN).'8'.','                                00829100
&ZC      SETC  '&ZC'.'&XSTOKEN'(&ZN+1,&ZAWRK-&ZN).',16(1)'              00829200
         AGO   .ZO46J                                                   00829300
.ZO46I    ANOP                                                          00829400
&ZN      SETA  &ZN+1                                                    00829500
         AGO   .ZO46H                                                   00829600
.ZO46G    ANOP                                                          00829700
&ZC      SETC  '&XSTOKEN.(8),16(1)'                                     00829800
.ZO46J    ANOP                                                          00829900
&ZOPN                 SETA  &ZOPN+1                                     00830000
&ZOPL(&ZOPN)          SETC  ' '                                         00830100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00830200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00830300
&ZOPD(&ZOPN)          SETC  '++ XSTOKEN CL8'                            00830400
.ZO46C                ANOP  ,                                           00830500
.*------------------------------------------------------------------    00830600
.***AO.L02 XORIGIN F                                                    00830700
         AIF   ('&ZXORIGIN' EQ 'OUTPUT').ZO50A  OUTPUT                  00830800
         AIF   ('&ZXORIGIN' NE 'INOUT').ZO50C  INOUT                    00830900
.ZO50A    AIF   ('&XORIGIN'(1,1) NE '(').ZO50B  ADDR IN GPR             00831000
&ZCGPR   SETC  '&XORIGIN'(2,K'&XORIGIN-2)                               00831100
&ZOPN                 SETA  &ZOPN+1                                     00831200
&ZOPL(&ZOPN)          SETC  ' '                                         00831300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00831400
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),48(1)'                         00831500
&ZOPD(&ZOPN)          SETC  '++ XORIGIN F'                              00831600
                      AGO   .ZO50C                                      00831700
.*                                                                      00831800
.ZO50B                ANOP  ,                                           00831900
&ZAWRK   SETA  K'&XORIGIN                                               00832000
         AIF   ('&XORIGIN'(&ZAWRK,1) NE ')').ZO50G                      00832100
&ZN      SETA  2                                                        00832200
.ZO50H    ANOP                                                          00832300
         AIF   (&ZN GE &ZAWRK).ZO50G                                    00832400
         AIF   ('&XORIGIN'(&ZN,1) NE '(').ZO50I                         00832500
&ZC      SETC  '&XORIGIN'(1,&ZN).'4'.','                                00832600
&ZC      SETC  '&ZC'.'&XORIGIN'(&ZN+1,&ZAWRK-&ZN).',48(1)'              00832700
         AGO   .ZO50J                                                   00832800
.ZO50I    ANOP                                                          00832900
&ZN      SETA  &ZN+1                                                    00833000
         AGO   .ZO50H                                                   00833100
.ZO50G    ANOP                                                          00833200
&ZC      SETC  '&XORIGIN.(4),48(1)'                                     00833300
.ZO50J    ANOP                                                          00833400
&ZOPN                 SETA  &ZOPN+1                                     00833500
&ZOPL(&ZOPN)          SETC  ' '                                         00833600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00833700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00833800
&ZOPD(&ZOPN)          SETC  '++ XORIGIN F'                              00833900
.ZO50C                ANOP  ,                                           00834000
.*------------------------------------------------------------------    00834100
.***AO.L02 XNUMBLKS F                                                   00834200
         AIF   ('&ZXNUMBLKS' EQ 'OUTPUT').ZO51A  OUTPUT                 00834300
         AIF   ('&ZXNUMBLKS' NE 'INOUT').ZO51C  INOUT                   00834400
.ZO51A    AIF   ('&XNUMBLKS'(1,1) NE '(').ZO51B  ADDR IN GPR            00834500
&ZCGPR   SETC  '&XNUMBLKS'(2,K'&XNUMBLKS-2)                             00834600
&ZOPN                 SETA  &ZOPN+1                                     00834700
&ZOPL(&ZOPN)          SETC  ' '                                         00834800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00834900
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),52(1)'                         00835000
&ZOPD(&ZOPN)          SETC  '++ XNUMBLKS F'                             00835100
                      AGO   .ZO51C                                      00835200
.*                                                                      00835300
.ZO51B                ANOP  ,                                           00835400
&ZAWRK   SETA  K'&XNUMBLKS                                              00835500
         AIF   ('&XNUMBLKS'(&ZAWRK,1) NE ')').ZO51G                     00835600
&ZN      SETA  2                                                        00835700
.ZO51H    ANOP                                                          00835800
         AIF   (&ZN GE &ZAWRK).ZO51G                                    00835900
         AIF   ('&XNUMBLKS'(&ZN,1) NE '(').ZO51I                        00836000
&ZC      SETC  '&XNUMBLKS'(1,&ZN).'4'.','                               00836100
&ZC      SETC  '&ZC'.'&XNUMBLKS'(&ZN+1,&ZAWRK-&ZN).',52(1)'             00836200
         AGO   .ZO51J                                                   00836300
.ZO51I    ANOP                                                          00836400
&ZN      SETA  &ZN+1                                                    00836500
         AGO   .ZO51H                                                   00836600
.ZO51G    ANOP                                                          00836700
&ZC      SETC  '&XNUMBLKS.(4),52(1)'                                    00836800
.ZO51J    ANOP                                                          00836900
&ZOPN                 SETA  &ZOPN+1                                     00837000
&ZOPL(&ZOPN)          SETC  ' '                                         00837100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00837200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00837300
&ZOPD(&ZOPN)          SETC  '++ XNUMBLKS F'                             00837400
.ZO51C                ANOP  ,                                           00837500
.*******************************************************************    00837600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00837700
.*******************************************************************    00837800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00837900
.*******************************************************************    00838000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00838100
.*******************************************************************    00838200
                      ACTR  10000                                       00838300
.*                                                                      00838400
                      LCLA  &ZLC           COLUMN POSITION              00838500
                      LCLA  &ZOPX          LIST TABLE INDEX             00838600
                      LCLC  &ZLL           LABEL                        00838700
                      LCLC  &ZLOP          OPERATION                    00838800
                      LCLC  &ZLV           VALUE                        00838900
                      LCLC  &ZLD           DESCRIPTION                  00839000
.*                                                                      00839100
&ZOPX                 SETA  1                                           00839200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00839300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00839400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00839500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00839600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00839700
                      AIF   (K'&ZLD LE 0).ZL5                           00839800
&ZLC                  SETA  35             COMMENT COLUMN               00839900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00840000
&ZLC                  SETA  33             COMMMENT COLUMN              00840100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00840200
&ZLV                  SETC  '&ZLV'.' '                                  00840300
                      AGO   .ZL3                                        00840400
.*                                                                      00840500
.ZL4                  ANOP  ,                                           00840600
&ZLV                  SETC  '&ZLV'.' '                                  00840700
.ZL5                  ANOP  ,                                           00840800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00840900
.*                                                                      00841000
&ZLL     &ZLOP &ZLV                                                     00841100
.*                                                                      00841200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00841300
                      AGO   .ZL2           CONTINUE LOOPING             00841400
.*                                                                      00841500
.ZLX                  ANOP  ,                                           00841600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00841700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00841800
         AIF   ('&KeepReal' EQ '').NOTCMDI                         @05A 00841900
&ZMS     SETC  'KeepReal MAY NOT BE SPECIFIED'                     @05A 00842000
         MNOTE 8,'&ZMS'                                            @05A 00842100
         POP   PRINT                                               @05A 00842200
         MEXIT                                                     @05A 00842300
.NOTCMDI ANOP                                                      @05A 00842400
         AIF   ('&PCIEIO' EQ '').NOTPCIE                           @LCA 00842500
&ZMS     SETC  'PCIEIO MAY NOT BE SPECIFIED'                       @LCA 00842600
         MNOTE 8,'&ZMS'                                            @LCA 00842700
         POP   PRINT                                               @LCA 00842800
         MEXIT                                                     @LCA 00842900
.NOTPCIE ANOP                                                      @LCA 00843000
         AIF   ('&CriticalPaging' EQ '').NOTCPGI                   @L9A 00843100
&ZMS     SETC  'CRITICALPAGING MAY NOT BE SPECIFIED'               @L9A 00843200
         MNOTE 8,'&ZMS'                                            @L9A 00843300
         POP   PRINT                                               @L9A 00843400
         MEXIT                                                     @L9A 00843500
.NOTCPGI ANOP                                                      @L9A 00843600
         AIF   ('&PAGEFRAMESIZE' EQ '4K').PGFRMSZOK                @LAA 00843700
         AIF   ('&PAGEFRAMESIZE' EQ '').PGFRMSZOK                  @LAA 00843800
         AIF   ('&BACK' EQ '').PGFRMSZOK                           @LAA 00843900
         AIF   ('&BACK' NE '31').PGFRMSZOK                         @LAA 00844000
&ZMS     SETC  'DSPSERV ---> 8,"PAGEFRAMESIZE=1M CANNOT BE'        @LAA 00844100
&ZMS     SETC  '&ZMS SPECIFIED WITH BACK=31'                       @LAA 00844200
         MNOTE 8,'&ZMS'                                            @LAA 00844300
         POP   PRINT                                               @LAA 00844400
         MEXIT                                                     @LAA 00844500
.PGFRMSZOK ANOP                                                    @LAA 00844600
         AIF   ('&SYSAM64' EQ 'YES').ALVL2_A                            00844700
         L     14,16(0,0)        GET CVT ADDRESS                        00844800
         AGO   .ALVL2_B                                                 00844900
.ALVL2_A ANOP                                                           00845000
         LLGT  14,16(0,0)        GET CVT ADDRESS                        00845100
.ALVL2_B ANOP                                                           00845200
         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      00845300
         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          00845400
         AIF   ('&XDISABLED' NE 'YES').DSP001                           00845500
         LA    15,3              GET EX FOR SERVICE ROUTINE             00845600
         OR    14,15             GET LX/EX FOR SERVICE ROUTINE          00845700
.DSP001  ANOP                                                           00845800
         PC    0(14)             PC TO DSPSERV SERVICE                  00845900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00846000
.ZLINKX               ANOP  ,                                           00846100
.*******************************************************************    00846200
.***AP.X01  FORMAT GENERATED CODE                                       00846300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00846400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00846500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00846600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00846700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00846800
                      AIF   (K'&ZLD LE 0).ZL51                          00846900
&ZLC                  SETA  35             COMMENT COLUMN               00847000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00847100
&ZLC                  SETA  33             COMMENT COLUMN               00847200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00847300
&ZLV                  SETC  '&ZLV'.' '                                  00847400
                      AGO   .ZL31                                       00847500
.*                                                                      00847600
.ZL41                 ANOP  ,                                           00847700
&ZLV                  SETC  '&ZLV'.' '                                  00847800
.ZL51                 ANOP  ,                                           00847900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00848000
.*                                                                      00848100
&ZLL     &ZLOP &ZLV                                                     00848200
.*                                                                      00848300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00848400
                      AGO   .ZL21          CONTINUE LOOPING             00848500
.*                                                                      00848600
.ZLX1                 ANOP  ,                                           00848700
.*******************************************************************    00848800
.***AP.X02  END OF DSPSERV MACRO                                        00848900
&ZDSPSERV             SETC  'YES'          SET DSPSERV USED             00849000
         POP   PRINT                                                    00849100
*                                            DSPSERV-3                  00849200
         SPACE 1                                                        00849300
.ZLX2                 ANOP  ,                                           00849400
         MEND                                                           00849500
**********************************************************************/ 00849600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00849700
*%DSPSERV: MACRO KEYS(CREATE,NAME,GENNAME,OUTNAME,BLOCKS,TYPE,DREF,     00849800
*                 SCOPE,BACK,PAGEFRAMESIZE,HIDEZERO,HSTYPE,SHARE,       00849900
*                 CASTOUT,CALLERKEY,KEY,FPROT,TTOKEN,STOKEN,ORIGIN,     00850000
*                 NUMBLKS,CRITICALPAGING,DELETE,RELEASE,INLIST,START,   00850100
*                 NUMRANGE,RANGLIST,DISABLED,FREESHAREDSEG,KEEPREAL,    00850200
*                 CLEAR,DEFINE,IOON,STEAL,LONG,PCIEIO,DMAPGTPTR,IOOFF,  00850300
*                 DREFON,DREFOFF,FORCE,EXTEND,VAR,OUT,LOAD,RETCODE,     00850400
*                 RSNCODE,PLISTVER,MF);                                 00850500
*  ANS('?'!!MACLABEL!!' '!!'DSPSERVP '!!MACLIST!!                       00850600
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00850700
*%END DSPSERV;                                                          00850800
