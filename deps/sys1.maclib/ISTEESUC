#ifndef __isteesuc                                                              
#define __isteesuc 1                                                            
                                                                                
 /********************************************************************/         
 /*                                                                  */         
 /* CONTROL BLOCK NAME: ISTEESUC                                     */         
 /*                                                                  */         
 /* DESCRIPTIVE NAME:   NMI Enterprise Extender Summary Mapping      */         
 /*                                                                  */         
 /* Copyright: Licensed Materials - Property of IBM                  */         
 /*            5694-A01 (C) Copyright IBM Corp. 2003, 2004           */         
 /*            All rights reserved.                                  */         
 /*            US Government Users Restricted Rights -               */         
 /*            Use, duplication or disclosure restricted by          */         
 /*            GSA ADP Schedule Contract with IBM Corp.              */         
 /*            See IBM Copyright Instructions.                       */         
 /*                                                                  */         
 /* FUNCTION: Maps the record formats returned in response to        */         
 /*           an Network Management Enterprise Extender Summary      */         
 /*           request. The records that are returned are:            */         
 /*             (1) EE Summary Global Record (one)                   */         
 /*             (2) EE Summary IP Address Record (one per local      */         
 /*                 IP address being used for EE connections)        */         
 /*                                                                  */         
 /* STORAGE USED FOR CONTROL BLOCK:                                  */         
 /*                                                                  */         
 /*    ALLOCATED BY:                                                 */         
 /*                                                                  */         
 /*    FREED BY:                                                     */         
 /*                                                                  */         
 /*    POINTED TO BY:                                                */         
 /*                                                                  */         
 /*    TYPE:                                                         */         
 /*                                                                  */         
 /* ALIGNMENT:                                                       */         
 /*       This control block MUST be on a DWORD boundary.            */         
 /*                                                                  */         
 /* OPERATING SYSTEM SPECIFICS:                                      */         
 /*                                                                  */         
 /* NOTES: None                                                      */         
 /*                                                                  */         
 /* SERIALIZATION CONCERNS:                                          */         
 /*                                                                  */         
 /* LIST RECOMPILE MODULES:                                          */         
 /*                                                                  */         
 /* CHANGE ACTIVITY:                                                 */         
 /*                                                                  */         
 /* $MAC(ISTEESUC),COMP(MGMTSVC),PROD(VTAM): NMI Enterprise Extender */         
 /*                                          Summary Mapping         */         
 /*                                                                  */         
 /* Flag Reason   Release  Date   Origin    Description              */         
 /* ---- -------- -------- ------ --------  ------------------------ */         
 /* $Q0= R16EEMGT CSV1R5   030311 WELSH   : SYSEEHPR service         */         
 /* $Q1= D132554  R16EEMGT 030505 SMOONEN : Eyecatchers, sequence #s */         
 /* $  = D132928  X16BASE  031013 RKunkel : Fix copyright statements */         
 /* $Y1= R9SNAEEL CSV1R9   060328 HARISHS : EE LDLC timers           */         
 /*                                                                  */         
 /********************************************************************/         
                                                                                
#include <isteehnc.h>                                                           
                                                                                
#ifdef __cplusplus                                                              
      extern "C" {                                                              
#endif                                                                          
                                                                                
#pragma pack(1)                     /* Align structures at bytes     */         
                                                                                
#include <netinet/in.h>                                                         
                                                                                
 /********************************************************************/         
 /* Enterprise Extender Summary Global record                        */         
 /********************************************************************/         
 typedef struct {                                                               
   unsigned int      EESumG_Eye;    /* EE Summary Global ID (EESG)              
                                                                 @Q1C*/         
   unsigned int      EESumG_Len;    /* Overall length of this record */         
   char              EESUMG_RsvÝ2¨; /* Reserved                      */         
   unsigned short    EESumG_NumTriplets; /* Number of triplets defined          
                                       for this record               */         
   EEHNMRecordTriplet EESumG_Triplet; /* Only one triplet                       
                                       defined for this record       */         
 } EESumGlobal;                     /* Enterprise Extender Summary              
                                       Global record                 */         
 /********************************************************************/         
 /* Enterprise Extender Summary Global record                        */         
 /********************************************************************/         
 typedef struct {                                                               
   struct {                                                                     
     unsigned char   EESumGD_Low_TOS;  /* Low priority               */         
     unsigned char   EESumGD_Medium_TOS; /* Medium priority          */         
     unsigned char   EESumGD_High_TOS; /* High priority              */         
     unsigned char   EESumGD_Network_TOS; /* Network priority        */         
     unsigned char   EESumGD_Signal_TOS; /* Signal priority          */         
   } EESumGD_TOS_Info;              /* TOS Information (IPv4) or                
                                       traffic class data (IPv6)     */         
                                                                                
   char              EESumGD_Rsvd;  /* Reserved                      */         
                                                                                
   struct {                                                                     
     unsigned short  EESumGD_Port_Num_Low; /* Low priority data      */         
     unsigned short  EESumGD_Port_Num_Medium; /* Medium priority data*/         
     unsigned short  EESumGD_Port_Num_High;   /* High priority data  */         
     unsigned short  EESumGD_Port_Num_Network; /* Network priority   */         
     unsigned short  EESumGD_Port_Num_Signal; /* LDLC signals        */         
   } EESumGD_Port_Numbers;          /* Port Numbers                  */         
 /********************************************************************/         
 /* The following LDLC timer operands that are specified on the PORT */         
 /* definition statement or defaulted values.                    @Y1A*/         
 /********************************************************************/         
   struct {                                                                     
     unsigned int    EESumGD_Timer_LIVTIME; /* LIVTIME               */         
     unsigned int    EESumGD_Timer_SRQTIME; /* SRQTIME               */         
     unsigned char   EESumGD_Timer_SRQRETRY; /* SRQRETRY             */         
     char            EESumGD_Timer_RsvdÝ3¨; /* Reserved              */         
   } EESumGD_Timer_Info;            /* EE Timer Information          */         
                                                                                
 } EESumGlobalData;                 /* Enterprise Extender Summary              
                                       Global data section           */         
                                                                                
 /********************************************************************/         
 /* Enterprise Extender Summary IP Address Record                    */         
 /********************************************************************/         
 typedef struct {                                                               
   unsigned int      EESumI_Eye;    /* EE Summary IPAddress ID field            
                                       (EESI)                    @Q1C*/         
   unsigned int      EESumI_Len;    /* Overall length of this record */         
   char              EESumI_RsvÝ2¨; /* Reserved                      */         
   unsigned short    EESumI_NumTriplets; /* Number of triplets defined          
                                       for this record               */         
   EEHNMRecordTriplet EESumI_IPTriplet;  /* First triplet points to             
                                       IP specific data              */         
   EEHNMRecordTriplet EESumI_HNTriplet;  /* Second triplet                      
                                       points to hostname data       */         
 } EESumIPAddress;                  /* Enterprise Extender Summary              
                                       IP Address record format      */         
                                                                                
 /********************************************************************/         
 /* Enterprise Extender Summary IP Address Specific                  */         
 /********************************************************************/         
 typedef struct {                                                               
   union {                                                                      
     struct in6_addr EESumIP_Local_IPv6_Address; /* Local IPv6 address*/        
     struct {                                                                   
       char           RsvdÝ12¨;              /* Pad                   */        
       struct in_addr Address;               /* Local IPv4 address    */        
     } EESumIP_Local_IPv4_Address;                                              
   } EESumIP_Local_Address;                                                     
                                                                                
   char              EESumIP_Rsvd1Ý12¨; /* Reserved for VTAM usage   */         
                                                                                
   struct {                                                                     
     unsigned int    EESumIP_IPv6_Address : 1; /* Local IPAddress               
                                           is IPv6                              
                                           '1'B = IPv6 Address                  
                                           '0'B = IPv4 Address       */         
     unsigned int    EESumIP_IPv6_Rsvd : 7; /* Reserved              */         
   } EESumIP_Flags;                 /* Information Flags             */         
                                                                                
   char              EESumIP_Rsvd2Ý3¨; /* Reserved                   */         
                                                                                
   unsigned int      EESumIP_Num_SRQRETRY_INOPS;  /* Count of the               
                                       number of lines that have                
                                       INOPed due to SRQRETRY        */         
                                                                                
   unsigned int      EESumIP_Num_Active_Total_Conns;  /* Total active           
                                     EE connections for this                    
                                     IP address                      */         
   struct {                                                                     
     unsigned short  EESumIP_Num_Avail_Lines_PreDefined; /* Total               
                                       number of available lines for            
                                       predefined connections        */         
     unsigned short  EESumIP_Num_Active_PreDefined_Conns; /* Total              
                                       number of active predefined              
                                       connections                   */         
   } EESumIP_PreDefined_Info;       /* Predefined Connection Info               
                                       specific to this IP address   */         
                                                                                
   struct {                                                                     
     unsigned short  EESumIP_Num_Local_VRNs; /* Total number of Local           
                                       VRNs defined with this                   
                                       local IP address              */         
     unsigned short  EESumIP_Num_Avail_Lines_LVRN; /* Total number of           
                                       available lines for Local                
                                       VRN connections               */         
     unsigned short  EESumIP_Num_Active_LVRN_Conns; /* Total number of          
                                       active Local VRN connections  */         
   } EESumIP_Local_VRN_Info;        /* Local VRN Info specific to this          
                                       IP address                    */         
                                                                                
   struct {                                                                     
     unsigned short  EESumIP_Num_Global_VRNs; /* Total number of Global         
                                       VRNs defined with this local             
                                       IP address                    */         
     unsigned short  EESumIP_Num_Avail_Lines_GVRN; /* Total number of           
                                       available lines for Global               
                                       VRN connections               */         
     unsigned short  EESumIP_Num_Active_GVRN_Conns; /* Total number of          
                                       active Global VRN connections */         
   } EESumIP_Global_VRN_Info;       /* Global VRN Info for this                 
                                       specific IP address           */         
 /********************************************************************/         
 /* The following LDLC timer operands that are associated with the   */         
 /* local static VIPA address. These operands are specified on the   */         
 /* GROUP definition statement or sifted down from the PORT          */         
 /* definition statement. Their values can be different from the     */         
 /* values of the LDLC timer operands on EE Summary Global record.   */         
 /*                                                              @Y1A*/         
 /********************************************************************/         
 struct {                                                                       
     unsigned int    EESumIP_Timer_LIVTIME; /* LIVTIME           @Y1A*/         
     unsigned int    EESumIP_Timer_SRQTIME; /* SRQTIME           @Y1A*/         
     unsigned char   EESumIP_Timer_SRQRETRY; /* SRQRETRY         @Y1A*/         
     char            EESumIP_Timer_RsvdÝ3¨; /* Reserved          @Y1A*/         
   } EESumIP_Timer_Info;            /* EE Timer Information      @Y1A*/         
                                                                                
 } EESumIPAddressData;              /* Enterprise Extender Summary              
                                       IP Address specific section   */         
                                                                                
 /********************************************************************/         
 /* Enterprise Extender Summary Hostname Section                     */         
 /********************************************************************/         
 typedef struct {                                                               
   unsigned char     EESumIH_HostLen;   /* Actual length of hostname */         
   char              EESumIH_HostnameÝ64¨; /* Hostname used to resolve          
                                       to the local IP address                  
                                       reported in this EE                      
                                       Summary record                */         
 } EESumI_HostnameData;             /* Enterprise Extender Summary              
                                       Hostname section mapping      */         
                                                                                
 /********************************************************************/         
 /* Eyecatcher constants for EE Summary records                      */         
 /********************************************************************/         
 const unsigned int EESumG_ID                                                   
   = 0xC5C5E2C7;                    /* 'EESG' EE summary global                 
                                       record                    @Q1C*/         
 const unsigned int EESumI_ID                                                   
   = 0xC5C5E2C9;                    /* 'EESI' EE summary IP                     
                                       address record            @Q1C*/         
                                                                                
 /********************************************************************/         
 /* Constants for Triplet counts for the various records             */         
 /********************************************************************/         
 const int EESumG_TripletCnt = 1;   /* EE summary global record has             
                                       one triplet                   */         
 const int EESumI_TripletCnt = 2;   /* EE Summary IP address record             
                                       record has two triplets       */         
                                                                                
#ifdef __cplusplus                                                              
      }   /* extern "C" */                                                      
#endif                                                                          
                                                                                
#pragma pack(reset)                 /* Return to prior alignment     */         
                                                                                
#endif   /* __isteesuc */                                                       
                                                                                
