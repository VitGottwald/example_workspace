*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEAINTKN                              -11/16/07-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Incident token build                          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1993, 2006                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7730                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      This service builds an incident token.                         * 00002100
*                                                                     * 00002200
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00002300
*                                                                     * 00002400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002500
*                                                                     * 00002600
*01* ENVIRONMENT:                                                     * 00002700
*                                                                     * 00002800
*                                                                     * 00002900
*      Minimum authorization: Problem state. PSW key 8-15.            * 00003000
*                                                                     * 00003100
*      Dispatchable unit mode: Task or SRB mode.                      * 00003200
*                                                                     * 00003300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00003400
*                                                                     * 00003500
*      AMODE:            24- or 31-bit.                               * 00003600
*                                                                     * 00003700
*      ASC mode:         Primary or Access Register.                  * 00003800
*                                                                     * 00003900
*      Interrupt status: Enabled or disabled for I/O and external     * 00004000
*                        interrupts.                                  * 00004100
*                                                                     * 00004200
*      Locks:                                                         * 00004300
*                                                                     * 00004400
*                        The caller may hold a local lock and may     * 00004500
*                        additionally hold the CMS lock.  The caller  * 00004600
*                        may hold the CPU lock.  No locks are         * 00004700
*                        required.                                    * 00004800
*                                                                     * 00004900
*      Control parameters:                                            * 00005000
*                                                                     * 00005100
*                        The TOKEN area can be in the primary address * 00005200
*                        space or, for AR-mode callers, in an         * 00005300
*                        address/data space addressable via an        * 00005400
*                        address and ALET specified in a              * 00005500
*                        general-purpose/access register pair.        * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*01* PROGRAMMING REQUIREMENTS:                                        * 00006000
*                                                                     * 00006100
*    The CVT macro must be included.                                  * 00006200
*                                                                     * 00006300
*01* RESTRICTIONS:                                                    * 00006400
*                                                                     * 00006500
*    None.                                                            * 00006600
*                                                                     * 00006700
*01* INPUT REGISTER INFORMATION:                                      * 00006800
*                                                                     * 00006900
*    Before issuing the IEAINTKN macro, the caller does not have to   * 00007000
*    place any information into any general purpose register (GPR).   * 00007100
*                                                                     * 00007200
*    Before issuing the IEAINTKN macro, the caller does not have to   * 00007300
*    place any information into any access register (AR).             * 00007400
*                                                                     * 00007500
*01* OUTPUT REGISTER INFORMATION:                                     * 00007600
*                                                                     * 00007700
*    When control returns to the caller, the GPRs contain:            * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*    REGISTER  CONTENTS                                               * 00008100
*                                                                     * 00008200
*    0-1       Used as work registers by the system                   * 00008300
*                                                                     * 00008400
*    2-13      Unchanged                                              * 00008500
*                                                                     * 00008600
*    14-15     Used as work registers by the system                   * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*    When control returns to the caller, the ARs contain:             * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*    REGISTER  CONTENTS                                               * 00009400
*                                                                     * 00009500
*    0-1       Used as work registers by the system                   * 00009600
*                                                                     * 00009700
*    2-13      Unchanged                                              * 00009800
*                                                                     * 00009900
*    14-15     Used as work registers by the system                   * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*01* PERFORMANCE IMPLICATIONS:                                        * 00010400
*                                                                     * 00010500
*    None.                                                            * 00010600
*                                                                     * 00010700
*01* SYNTAX:                                                          * 00010800
*                                                                     * 00010900
*Ýxlabel¨  IEAINTKN     TOKEN=xtoken                                  * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*      Where:                                                         * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*      Ýxlabel¨                                                       * 00011600
*          is an optional symbol, starting in column 1, that is the   * 00011700
*          name on the IEAINTKN macro invocation.  The name must      * 00011800
*          conform to the rules for an ordinary assembler language    * 00011900
*          symbol.                                                    * 00012000
*          DEFAULT: No name.                                          * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*      TOKEN=xtoken                                                   * 00012600
*          is the name (RS-type), or address in register (1)-(12), of * 00012700
*          a required 32 character output area in which the incident  * 00012800
*          token will be built.  It should begin on a doubleword      * 00012900
*          boundary.                                                  * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*01* ABEND CODES:  None.                                              * 00013400
*                                                                     * 00013500
*01* RETURN CODES:                                                    * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                 There are no return codes associated with this      * 00013900
*                 service.                                            * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*01* REASON CODES:  None.                                             * 00014400
*                                                                     * 00014500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00014600
*                                                                     * 00014700
*02*   PROCESSOR:  ASSEM                                              * 00014800
*                                                                     * 00014900
*01* COMPONENT:  SCDMP                                                * 00015000
*                                                                     * 00015100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00015200
*                                                                     * 00015300
*01* EXAMPLES:                                                        * 00015400
*                                                                     * 00015500
*               IEAINTKN TOKEN=MYTOKEN         Get an incident token  * 00015600
*       .                                                             * 00015700
*       .                                                             * 00015800
*               DS    0D        Align parameter on doubleword bdy     * 00015900
*      MYTOKEN  DS    CL32      Incident token                        * 00016000
*               CVT   ,         CVT mapping                           * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*01* MACRO USAGE NOTES:                                               * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00016700
*        global macro variable.  Any value other than 'NO' will       * 00016800
*        result in the macro expansion being printed.  The default is * 00016900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00017000
*        variable should be set.                                      * 00017100
*                                                                     * 00017200
*                    GBLC &ZPRINT                                     * 00017300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*01* CHANGE ACTIVITY:                                                 * 00017800
*                                                                     * 00017900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00018000
*                                                                     * 00018100
*    $L0=SDMPEAMG HBB5510 921211 PD00XB:  Incident Token build        * 00018200
*    $L1=SDMPE    HBB5510 921211 PD00XB:  Incident Token build        * 00018300
*    $P1=PIG1580  HBB5510 930512 PD00XB:  Support PlexName            * 00018400
*    $L2=64BITSDU HBB7703 971110 PD00XB:  PL/X addition               * 00018500
*    $L3=PEV      HBB7730 050414 PD00XB:  Avoid assembler low-storage * 00018600
*                                         message                     * 00018700
****** END OF SPECIFICATIONS *****************************************/ 00018800
*/********************************************************************* 00018900
         MACRO                                                          00019000
&XLABEL  IEAINTKN &TOKEN=                                               00019100
.*                                                                      00019200
*              MACDATE -11/16/07-<0>                                    00019300
.*                                                                      00019400
.*******************************************************************    00019500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00019600
.*******************************************************************    00019700
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00019800
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00019900
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00020000
.*                                                                      00020100
              GBLC  &ZIEAINTKN  YES=MACRO USED AT LEAST ONCE            00020200
.*******************************************************************    00020300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00020400
.*******************************************************************    00020500
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00020600
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00020700
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00020800
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00020900
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00021000
              LCLA  &ZAWRK      USED AS A WORK AREA                     00021100
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00021200
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00021300
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00021400
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00021500
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00021600
              LCLC  &ZMAC_G     "G" or null                             00021700
&ZMAC_G       SETC  ''                                                  00021800
              LCLC  &ZMAC_LR                                            00021900
&ZMAC_LR      SETC  'LR'                                                00022000
              LCLC  &ZMAC_L                                             00022100
&ZMAC_L       SETC  'L'                                                 00022200
              LCLC  &ZMAC_ST                                            00022300
&ZMAC_ST      SETC  'ST'                                                00022400
              LCLA  &ZMACRET    MACRO RETURN CODE                       00022500
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00022600
.*                                                                      00022700
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00022800
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00022900
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00023000
              LCLC  &ZENDBASEPL                 End of base PL          00023100
.*******************************************************************    00023200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00023300
.*******************************************************************    00023400
              LCLC  &XTOKEN     ++ NAME                                 00023500
.*******************************************************************    00023600
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00023700
.*******************************************************************    00023800
              LCLC  &ZXTOKEN    ++ OUTPUT NAME                          00023900
.********************************************************************   00024000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00024100
.********************************************************************   00024200
              ACTR  10000                                               00024300
.*----------------------------------------------------------------***   00024400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00024500
              AIF   (N'&TOKEN LE 1).ZG2A        CK NUM                  00024600
&ZMS          SETC  '"TOKEN='                                           00024700
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00024800
&ZMS          SETC  '&ZMS "TOKEN"'                                      00024900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00025000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00025100
.ZG2A         ANOP  ,                                                   00025200
.*-------------------------------------------------------------------   00025300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00025400
&ZXTOKEN      SETC  'OUTPUT'    SET IN/OUTPUT                           00025500
&XTOKEN       SETC  '&TOKEN(1)'                 SET XVARIABLE           00025600
              AIF   (N'&TOKEN GT 1).ZG2B        MULTI PARMS             00025700
&XTOKEN       SETC  '&TOKEN'    SET XVARIABLE                           00025800
.ZG2B         AIF   (K'&TOKEN(1) GT 0).ZG2C                             00025900
&ZXTOKEN      SETC  ''          RESET IN/OUTPUT                         00026000
&ZMS          SETC  ' '                                                 00026100
&ZMS          SETC  '&ZMS "TOKEN" KEY AND ITS'                          00026200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00026300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00026400
.ZG2C         ANOP  ,                                                   00026500
.*-------------------------------------------------------------------   00026600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00026700
              AIF   (K'&ZXTOKEN LE 0).ZG2R      NOT I/O                 00026800
              AIF   ('&XTOKEN'(1,1) NE '(').ZG2R                        00026900
&ZCGPR        SETC  '&XTOKEN'(2,K'&XTOKEN-2)                            00027000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00027100
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00027200
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00027300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00027400
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00027500
.ZG2P         ANOP  ,                                                   00027600
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00027700
              AIF   ('&ZCGPR' LT '1').ZG2Q                              00027800
              AIF   ('&ZCGPR' LE '12').ZG2R                             00027900
.ZG2Q         ANOP  ,                                                   00028000
&ZMS          SETC  '"TOKEN='                                           00028100
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00028200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00028300
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00028400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00028500
.ZG2R         ANOP  ,                                                   00028600
.******************************************************************     00028700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00028800
.******************************************************************     00028900
              ACTR  10000                                               00029000
.*----------------------------------------------------------------***   00029100
.***AH.P02 EXTRA POSITIONALS                                            00029200
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00029300
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00029400
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00029500
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00029600
.ZGLISTX1     ANOP  ,                                                   00029700
&ZCVAL        SETC  ''          ERROR FIELD                             00029800
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00029900
.ZGLIST2      ANOP  ,                                                   00030000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00030100
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00030200
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00030300
              AGO   .ZGLIST2                                            00030400
.*                                                                      00030500
.ZGLIST3      ANOP  ,                                                   00030600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00030700
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00030800
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00030900
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00031000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00031100
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00031200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00031300
.ZGLISTX      ANOP  ,                                                   00031400
&ZASYSLNDX    SETA  0                                                   00031500
.*******************************************************************    00031600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00031700
.*******************************************************************    00031800
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00031900
.*******************************************************************    00032000
.***AE.01  START OF IEAINTKN MACRO CODE                                 00032100
.*******************************************************************    00032200
              LCLC  &M0M0001                 NAME                       00032300
&M0M0001      SETC  '&XLABEL'                SET NAME                   00032400
              AIF   (K'&XLABEL NE 0).XLAB2                              00032500
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00032600
.*                                                                      00032700
.XLAB2        ANOP  ,                                                   00032800
&M0M0001 DS    0H                             IEAINTKN-0                00032900
.*******************************************************************    00033000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00033100
.*******************************************************************    00033200
              PUSH  PRINT                                               00033300
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00033400
              PRINT OFF         ++ PR01                                 00033500
              AGO   .ZPRNTXX                                            00033600
.ZPRINTX      PRINT ON                                                  00033700
.ZPRNTXX      ANOP  ,                                                   00033800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00033900
           GBLC  &SYSASCE                                          @L1A 00034000
           SYSSTATE TEST                                           @L1A 00034100
           AIF   ('&TOKEN'(1,1) EQ '(').INREG                      @L1A 00034200
           LAE   1,&TOKEN(1)         Get parameter address/ALET    @L1A 00034300
           AGO   .DONE                                             @L1A 00034400
.INREG  ANOP                                                       @L1A 00034500
           AIF ('&TOKEN(1)' EQ '1').DONE                           @L1A 00034600
           LAE   1,0(0,&TOKEN(1))    Get parameter address/ALET    @L1A 00034700
.DONE   ANOP                                                       @L1A 00034800
           L     15,16(0,0)         Get CVT address                @L1A 00034900
           AIF   ('&SYSASCE' EQ 'P').NOTAR                         @L1A 00035000
           LAE   15,0(15,0)         Clear AR                       @L1A 00035100
.NOTAR  ANOP                                                       @L1A 00035200
           MVC   0(8,1),CVTSNAME-CVT(15) Get system name           @L1A 00035300
           STCK  8(1)               Get clock value                @L1A 00035400
           L     15,X'8C'(15,0)     Get ECVT                       @P1P 00035500
           L     15,X'4C'(15,0)     Get ECVTQUCB                   @P1P 00035600
           MVC   16(8,1),X'18'(15)  Get PlexName                   @P1A 00035700
           XC    24(8,1),24(1)      Clear other fields             @P1C 00035800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00035900
.********************************************************************   00036000
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00036100
.********************************************************************   00036200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00036300
                      LCLA  &ZOPN1         INVOCATION INDEX             00036400
                      LCLC  &ZOPL(4095)    LABEL                        00036500
                      LCLC  &ZOPO(4095)    OPERATION                    00036600
                      LCLC  &ZOPV(4095)    VALUE                        00036700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00036800
.*                                                                      00036900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00037000
.*******************************************************************    00037100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00037200
.*******************************************************************    00037300
                      ACTR  10000                                       00037400
.*                                                                      00037500
                      LCLA  &ZLC           COLUMN POSITION              00037600
                      LCLA  &ZOPX          LIST TABLE INDEX             00037700
                      LCLC  &ZLL           LABEL                        00037800
                      LCLC  &ZLOP          OPERATION                    00037900
                      LCLC  &ZLV           VALUE                        00038000
                      LCLC  &ZLD           DESCRIPTION                  00038100
.*                                                                      00038200
&ZOPX                 SETA  1                                           00038300
.*******************************************************************    00038400
.***AP.X01  FORMAT GENERATED CODE                                       00038500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00038600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00038700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00038800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00038900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00039000
                      AIF   (K'&ZLD LE 0).ZL51                          00039100
&ZLC                  SETA  35             COMMENT COLUMN               00039200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00039300
&ZLC                  SETA  33             COMMENT COLUMN               00039400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00039500
&ZLV                  SETC  '&ZLV'.' '                                  00039600
                      AGO   .ZL31                                       00039700
.*                                                                      00039800
.ZL41                 ANOP  ,                                           00039900
&ZLV                  SETC  '&ZLV'.' '                                  00040000
.ZL51                 ANOP  ,                                           00040100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00040200
.*                                                                      00040300
&ZLL     &ZLOP &ZLV                                                     00040400
.*                                                                      00040500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00040600
                      AGO   .ZL21          CONTINUE LOOPING             00040700
.*                                                                      00040800
.ZLX1                 ANOP  ,                                           00040900
.*******************************************************************    00041000
.***AP.X02  END OF IEAINTKN MACRO                                       00041100
&ZIEAINTKN            SETC  'YES'          SET IEAINTKN USED            00041200
         POP   PRINT                                                    00041300
*                                            IEAINTKN-0                 00041400
         SPACE 1                                                        00041500
.ZLX2                 ANOP  ,                                           00041600
         MEND                                                           00041700
**********************************************************************/ 00041800
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00041900
*%IEAINTKN: MACRO KEYS(TOKEN);                                          00042000
*  ANS('?'!!MACLABEL!!' '!!'IEAINTKP '!!MACLIST!!                       00042100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00042200
*%END IEAINTKN;                                                         00042300
