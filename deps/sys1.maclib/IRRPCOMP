*%;    /*                                                                       
         MACRO                                                                  
         IRRPCOMP &DSECT=YES                                         */         
*/****START OF SPECIFICATIONS******************************************         
*                                                                               
*   $MAC(IRRPCOMP) COMP(SC1BN) PROD(SAF):                         @P1C          
*                                                                               
*01* MACRO NAME: IRRPCOMP                                                       
*                                                                               
*01* DSECT NAME: COMP                                                           
*                                                                               
*01* DESCRIPTIVE NAME:   OMVS  Common Security Parameter List                   
*                                                                               
*02*   ACRONYM: COMP                                                            
**/                                                                             
*/*01* PROPRIETARY STATEMENT=                                        */         
*/***PROPRIETARY_STATEMENT********************************************/         
*/*                                                                  */         
*/*                                                                  */         
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */         
*/* 5650-ZOS COPYRIGHT IBM CORP. 1992, 2021                          */         
*/*                                                                  */         
*/* STATUS= HBB77D0                                                  */         
*/*                                                                  */         
*/***END_OF_PROPRIETARY_STATEMENT*************************************/         
*/*                                                                  */         
*/*01* EXTERNAL CLASSIFICATION: PI                               @MWC*/         
*/*01* END OF EXTERNAL CLASSIFICATION:                               */         
*/*                                                                             
*01* FUNCTION:                                                                  
*                                                                               
*    This file contains the mapping of the common input                         
*    parameter list for   OMVS  SAF and RACF routers. It also has               
*    the input parameter lists for each of the   OMVS  security                 
*    service routines. The input parameter lists in this file are:              
*                                                                               
*    DSECT NAME   STUB NAME      SECURITY FUNCTION                              
*                                                                               
*      COMP       all         Common Security                                   
*                                                                               
*      IUSP       IRRSIU00    INIT_USP                                          
*                                                                               
*      CSID                   Common Set Id Input Parameter List:               
*                 IRRSSU00      RACF Set Uid                                    
*                 IRRSEU00      RACF Set Effective Uid                          
*                 IRRSSG00      RACF Set Group Id                               
*                 IRRSEG00      RACF Set Effective Group Id                     
*                                                                               
*      EXID       IRRSEX00    Exec Set Uid/Gid                                  
*                                                                               
*      GETG       IRRSGG00    Get Groups.                                       
*                                                                               
*      CHKP       IRRSKP00    Check Privilege.                                  
*                                                                               
*      GMAP                   Common Get Map Input Parameter List:              
*                 IRRSGM00      RACF Get Group ID Map                           
*                 IRRSUM00      RACF Get User  ID Map                           
*                                                                               
*                                                                               
*      CKPO       IRRSKO00    Check Process Owner.                              
*                                                                               
*      QRYS       IRRSQS00    Query System Security Options.                    
*                                                                               
*      CMOD       IRRSCF00    Change File Mode.                                 
*                                                                               
*      CLID       IRRSCS00    Clear Setid.                                      
*                                                                               
*      n/a        IRRSDU00    Delete Usp (no input parameter list)              
*                                                                               
*      CAUD       IRRSCA00    Change File Audit Options.                        
*                                                                               
*      COWN       IRRSCO00    Change Owner and Group.                           
*                                                                               
*      UMSK       IRRSMM00    Set File Mode Creation Mask.                      
*                                                                               
*      KACC       IRRSKA00    Check Access.                                     
*                                                                               
*      QRYF       IRRSQF00    Query File Security Options.                      
*                                                                               
*      KFOW       IRRSKF00    Check File Owner.                                 
*                                                                               
*      MKRT       IRRSMR00    Make Root FSP.                                    
*                                                                               
*      PTRC       IRRSPT00    PTRACE Authority Check.                           
*                                                                               
*      MFSP       IRRSMF00    Make FSP.                                         
*                                                                               
*      RAUD       IRRSAU00    Audit.                                            
*                                                                               
*      GUGP       IRRSUG00    getugrps()                                        
*                                                                               
*      FORK       IRRSFK00    Fork  Exit.                                       
*                                                                               
*      MISP       IRRSMI00    Make ISP.                                         
*                                                                               
*      IACC       IRRSKI00    Check access to ISP.                              
*                                                                               
*      IOWN       IRRSCI00    R_IPC_control.                       @03C         
*                                                                               
*      CKO2       IRRSC200    Check the owner of two files.                     
*                                                                               
*      GETE       IRRSGE00    Get UIDs/GIDs and supplemental groups             
*                                                                               
*      DINF       IRRSDI00    Get/Set DCE UUID, DCENAME, HOMECELL  @01A         
*                                                                               
*      DKEY       IRRSDK00    Get/Set DPASSWDS, Get BINDPW         @LQC         
*                                                                               
*      DRUR       IRRSDU00    RACF userid - DCE UUID mapping       @02A         
*                                                                               
*      DAUT       IRRSDA00    RACF Authorization of a DCE Client   @03A         
*                                                                               
*      INTA       IRRSIA00    RACF Initialize ACEE                 @L4A         
*                                                                               
*      ADMN       IRRSEQ00    R_Admin                              @04A         
*                                                                               
*      UMAP       IRRSIM00    R_UserMap                            @L7A         
*                                                                               
*      CDDL       IRRSDL00    CDSA Data Lib Service                @L8A         
*                                                                               
*      KERB       IRRSMK00    RACF Kerberos Information Interface  @LEA         
*                                                                               
*      TKTS       IRRSPK00    RACF Kerberos Ticket Interface       @LHA         
*                                                                               
*      PKIS       IRRSPX00    R_PKIServ                            @0AA         
*                                                                               
*      CACH       IRRSCH00    R_Cacheserv                          @LLA         
*                                                                               
*      PRXY       IRRSPY00    R_proxyserv                          @LMA         
*                                                                               
*      RACL       IRRSCL00    R_SetFACL                            @LIA         
*                                                                               
*      SECL       IRRSSB00    R_SetFSecl                           @LRA         
*                                                                               
*      WPRV       IRRSWP00    R_writepriv                          @LSA         
*                                                                               
*      RAUX       IRRSAX00    R_auditx                             @LXA         
*                                                                               
*      GINF       IRRSGI00    R_GetInfo                            @LZA         
*                                                                               
*      PGSN       IRRSPS00    R_PgmSignVer                         @MMA         
*                                                                               
*      XPWD       IRRSPW00    R_Password                           @NEA         
*                                                                               
*      SMOP       IRRSMO00    R_SecMgtOper                         @NGA         
*                                                                               
*                                                                               
*01* METHOD OF ACCESS:                                                          
*                                                                               
*02*   PL/X:  %INCLUDE(IRRPCOMP)                                                
*                                                                               
*             DECLARE COMP_PTR PTR(31)                                          
*             To contain the address of the   OMVS  SAF/RACF common             
*             plist and any additional service routine plist.                   
*                                                                               
*                                                                               
*02*   ASM:   IRRPCOMP                                                          
*             A DSECT is produced unless DSECT=NO is specified.                 
*                                                                               
*             LA     REG,COMP                                                   
*             USING  COMP,REG                                                   
*                                                                               
*             Where REG is any general register except 0.                       
*                                                                               
*                                                                               
*01* SIZE: Release dependent. Refer to the mapping.                             
*                                                                               
*01* POINTED TO BY: Address of COMP is passed in register 1                     
*                   when invoking   OMVS  security functions.                   
*                                                                               
*01* CREATED BY: Invoker of   OMVS  security functions.                         
*                                                                               
*01* DELETED BY: Invoker of   OMVS   security functions.                        
*                                                                               
*01* STORAGE ATTRIBUTES:                                                        
*02*   SUBPOOL:  N/A                                                            
*02*   KEY:      Any                                                            
*02*   RESIDENCY: Invoker's primary address space                               
*                                                                               
*01* FREQUENCY: N/A                                                             
*                                                                               
*01* SERIALIZATION: N/A                                                         
*                                                                               
*01* DEPENDENCIES: None                                                         
*                                                                               
*01* NOTES:                                                                     
*  This part was heavily restructured in z/OS 2.5 to make it                    
*   compatible with the C-header generation utility used during build.          
*   o The tool requires that all of the 'main' plist components                 
*     (COMP, IUSP, CSID, ..., SMOP) be contiguous, and not separated            
*     by constants or parameter list sub-mappings. The 'main' plist             
*     components are those which are specified on the CALL statement.           
*   o The ASM portion is unaffected by these changes.                           
*   o To add a new service to the PLX mapping:                                  
*     - Locate 'COMP sub-declares'.                                             
*     - Change the previous semi-colon to 'Comp_Term'                           
*     - Add the main plist                                                      
*     - End it with a semi-colon                                                
*    o All constants and additional data mappings should be added               
*      to the very end of the macro.                               @NMA         
*                                                                               
*  Note: The build process puts the generated C file in:                        
*        - SYS1.SIEAHDR.H                                                       
*        - /usr/include/zos with a ".h" suffix                                  
*                                                                               
*                                                                               
*01* COMPONENT:   SAF (SC1BN)                                                   
*                                                                               
*01* DISTRIBUTION LIBRARY:  AMACLIB                                             
*                                                                               
*01* EYE-CATCHER: None - this is not a control block definition.                
*02*   OFFSET:  N/A                                                             
*02*   LENGTH:  N/A                                                             
*                                                                               
*01* CHANGE-ACTIVITY:                                                           
*                                                                               
*   $L0=OMVSSAF, HBB4430, 921201, PDNU:   OMVS  Initial Release                 
*   $P1=PIG2939, HBB5510, 930910, PDKAF: PIG2939 NFS Support       @P1A         
*   $P2=PIG2993  HBB5510  930915  PDCCM1: PTM PIG2993              @P2A         
*   $L1=XPG4SAF, JBB5522, 940314  PDKAP1: Support for XPG4         @L1A         
*   $L2=UUSAF,   JBB5522, 940906  PDKAP1: Support for UU           @L2A         
*   $L3=NFSSAF,  JBB5522, 941128  PDAPD1: Support for NFS          @L3A         
*   $D1=NFSSAF,  JBB5522, 941128  PDAPD1: Two workareas in GETE    @D1A         
*   $P3=PP20063  JBB5522, 950417  PDAPD1: Support for NFSC PPZ0026 @P3A         
*   $01=OW15238, JBB5522, 950501  PDNMG1: Support for DCE          @01A         
*   $02=OW15238, JBB5522, 950601  PDJWS1: Support for DCE          @02A         
*   $03=OW15238, JBB5522, 950801  PDEMD1: Support for DCE          @03A         
*   $P4=PPZ0036, JBB5522, 950801  PDNMG1: Support for DCE PPZ0036  @04A         
*   $P5=PSD0785, JBB6602, 960202  PDEMD1: Support for PTM PSD0785  @05A         
*   $L4=WEBSR,   HBB6603, 960729  PDJWS1: OE Server performance    @L4A         
*   $P6=PQC2353  HBB6603, 960909  PDNMG1: OE Server performance    @P6A         
*   $04=OW23446, HBB6603, 960905  PDBRW1: Tivoli Admin inter-op    @04A         
*   $05=OW23446, HBB6603, 961030  PDJWS1: Tivoli Admin inter-op    @05A         
*   $06=OW26931, JBB6604, 970324  PDJWS1: Public Key Phase 1       @06A         
*   $07=OW26061, JBB6604, 970326  PDBRW1: Tivoli Security inter-op @07A         
*   $08=OW26061, JBB6604, 970514  PDALF1: More Security inter-op   @08A         
*   $L5=BOSSTA,  HBB6605, 970624  PDPFW:  BOSS Transportable ACEE  @L5A         
*   $L6=RBAAN,   HBB6605, 970922  PDMKL:  OpenEdition/BAAN         @L6A         
*   $09=OW31934, JBB6604, 980112  PDJWS1: Public Key Phase 2       @09A         
*   $L7=GIDM ,   JBB6607, 980501  PDBG1:  Generic ID mapping       @L7A         
*   $L8=ECPI,    HBB6608, 980713  PDCLC:  Enhanced CDSA Plugins    @L8A         
*   $L9=ECPI,    HBB6608, 980815  PDCLC:  Enhanced CDSA Plugins    @L9A         
*   $LA=ECPI,    HBB6608, 980804  PDRDS2: Enhanced CDSA Plugins    @LAA         
*   $LB=OW35193, HBB6608, 981012  PDALF1: R_admin SETROPTS support @LBA         
*   $LC=ECPI,    HBB6608, 981111  PDCLC:  Enhanced CDSA Plugins    @LCA         
*   $LD=DCERT,   HBB7703, 990802  PDJJP:  Certificate Extensions   @LDA         
*   $LE=KERB,    HBB7703, 990707  PDER1:  Kerberos support         @LEA         
*   $LF=PKIX     HBB7703  991018  PDGTM1: RACF PKIX                @LFA         
*   $LG=PADS1    HBB7703  991018  PDBEC1: PADS1 support            @LGA         
*   $P7=PXD0577  HBB7703, 901022  PDER1:  PTM PXD0577              @P7A         
*   $LH=KERB     HBB7703, 991102  PDAWS1: Kerberos support         @LHA         
*   $P8=PXD0596  HBB7703, 000210  PDCAS1: PTM PXD0596              @P8A         
*   $0A=OW45212  HBB7703  000628  PDGTM1: PKIServ SPE              @0AA         
*   $P9=PX00631  HBB7705, 001013  PDRDC1: PTM PX00631              @P9A         
*   $LI=HFSACL   HBB7706, 001204  PDGTM1: HFS ACLs support         @LIA         
*   $LJ=PKIS2    HBB7706, 001206  PDPFW:  PKI SERVICES             @LJA         
*   $LK=PKIS2    HBB7706, 010116  PDPFW:  PKI SERVICES             @LKA         
*   $LL=PolDir   HBB7706, 001013  PDCCM1: Policy Director support  @LLA         
*   $LM=PolDir   HBB7706, 010227  PDSGW1: Policy Director support  @LMA         
*   $LN=HFSACL   HBB7706  010228  PDGTM1: HFS ACLs support         @LNA         
*   $LO=PKIS2    HBB7706, 010402  PDPFW:  PKI SERVICES             @LOA         
*   $LP=PKIS2    HBB7706, 010817  PDPFW:  PKI SERVICES             @LPA         
*   $LQ=PKIS3    HBB7707, 010830  PDMSD:  PKI SERVICES             @LQA         
*   $D2=TYV0531  HBB7707, 011128  PDCLC:  PCICC key support        @D2A         
*   $0B=OW56905  HBB7707, 021101  PDCGK1: APAR OW56905             @0BA         
*   $LR=MLS2     HBB7708, 011101  PDGTM1: z/OS UNIX MLS support    @LRA         
*   $LS=MLS2     HBB7708, 011128  PDGTM1: z/OS MLS support         @LSA         
*   $LT=MLS2     HBB7708, 020228  PDPFW:  z/OS MLS support         @LTA         
*   $PA=PYN0213  HBB7708, 020318  PDGTM1: z/OS MLS support         @PAA         
*   $LU=MLS2     HBB7708, 020213  PDBRW1: z/OS MLS support         @LUA         
*   $PB=PYN0855  HBB7708, 030115  PDKC1:  z/OS MLS support Fix     @PBA         
*   $PC=PYN0915  HBB7708, 030206  PDKC1:  z/OS EIM2 support Fix    @PCA         
*   $LV=PWSLDAP  HBB7708, 030502  PDSGW1: Password sync to LDAP    @LVA         
*   $LW=PTCS     HBB7720, 031111  PDM_O1: Passticket enhancements  @LWA         
*   $LX=EIMAD    HBB7720, 031207  PDSGW1: EIM auditing support     @LXA         
*   $LY=EIMAD    HBB7720, 040126  PDSGW1: EIM auditing support     @LYA         
*   $LZ=EIMAPF   HBB7720, 040217  PDALF1: EIM support              @LZA         
*   $M1=PKIS6    HBB7720, 040131  PDMSF:  PKI SERVICES             @M1A         
*   $M2=EIMAD    HBB7720, 040328  PDSGW1: EIM auditing support     @M2A         
*   $M3=PKIS6    HBB7720  040330  PDGTM1: PKI Services VI          @M3A         
*   $M4=RDMN     HBB7720, 040923  PDM_O1: RADMIN Extract           @M4A         
*   $M5=GRPLDP   HBB7730  041201  PDBRW1: Group change logging     @M5A         
*   $M6=RDMN     HBB7720, 050101  PDM_O1: ME02608                  @M6A         
*   $M7=PKIS7    HBB7730, 050112  PDTCG1: PKI Services VII         @M7A         
*   $M8=PHRS     HBB7730, 040923  PDCCM1: Pass Phrase support      @M8A         
*   $M9=SAFID    HBB7730, 050101  PDM_O1: SAFID                    @M9A         
*   $MA=SAFID    HBB7730, 050401  PDM_O1: SAFID                    @MAA         
*   $MB=SAFID    HBB7730, 050520  PDM_O1: SAFID                    @MBA         
*   $MC=SAFID    HBB7730, 050711  PDM_O1: SAFID                    @MCA         
*   $PD=MG05219  HBB7730, 051108  PDAWS1: Defect MG05219           @PDA         
*   $MD=PHRSENV  HBB7740, 050923  PDBRW1: Pass phrase enveloping   @MDA         
*   $ME=SMB      HBB7740, 060119  PDRDC1: SMB                      @MEA         
*   $MF=PKIS9    HBB7740, 060127  PDTCG1: Writeable Keyring        @MFA         
*   $MG=PKIS9    HBB7740  060206  PDWFC1: PKIS9                    @MGA         
*   $MH=SMB      HBB7740  060228  PDLAW1: SMB Client Support       @MHA         
*   $MI=PKIS9    HBB7740, 060407  PDRDC1: Writeable Keyring        @MIA         
*   $PD=PKIS9    HBB7740, 060408  PDRDC1: Writeable Keyring        @PDA         
*   $MJ=SMB      HBB7740  060501  PDLAW1: SMB Client Support       @MJA         
*   $MK=PKIS9    HBB7740, 060420  PDRDC1: Writeable Keyring        @MKA         
*   $ML=SMB      HBB7740  060509  PDLAW1: SMB Client Support       @MLA         
*   $MM=FIPS     HBB7750  071020  PDBRW1: FIPS support             @MMA         
*   $PE=ME12658  HBB7750  080213  PDBRW1: FIPS support             @PEA         
*   $MN=RDMN2    HBB7760  080228  PDAWS1: RADMIN GenRes Extract    @MNA         
*   $MO=ME13003  HBB7750  080317  PDBRW1: FIPS support             @MOA         
*   $MP=FIPS     HBB7760  080408  PDXS1:  FIPS support             @MPA         
*   $MQ=IDPROP   HBB7760  080414  PDDFM1: IDPROP support           @MQA         
*   $MR=ME13506  HBB7760  080512  PDXS1:  FIPS support             @MRA         
*   $MS=RDMN2    HBB7760  080531  PDCAP1: ME13626                  @MSA         
*   $MT=FIPS     HBB7760  080531  PDCAP1: ME13685                  @MTA         
*   $MU=PKIS11K  HBB7760  080612  PDTCG1: PKI Key Gen Support      @MUA         
*   $PF=MG11078  HBB7760  080721  PDAWS1: MG11078                  @PFA         
*   $D3=DCR1     HBB7760  080723  PDAWS1: RADMIN GENRES Support    @D3A         
*   $PG=PKAEXT   HBB7760  090126  PDAWS1: ME15378                  @PGA         
*   $MV=PKIS12R  HBB7770  090211  PDRDC1: Auto Serial Number       @MVA         
*   $MW=ECC      HBB7770  090505  PDLAW1: ECC support              @MWA         
*   $MX=ZOSMF    HBB7780  100110  PDM_O1: ME18120                  @MXA         
*   $PH=ME18594  HBB7770  100218  PDJCL1: ME18594                  @PHA         
*   $MY=IDPROP2  HBB7780  100218  PDGTM1: z/OS ID Propagation 2    @MYA         
*   $MZ=ECC2     HBB7780  100407  PDSGW1: Hardware ECC             @MZA         
*   $N1=IDPROP2  HBB7780  100414  PDJCL1: z/OS ID Propagation 2    @N1A         
*   $N2=IDPROP2  HBB7780  100614  PDGTM1: z/OS ID Propagation 2    @N2A         
*   $N3=SECTKDS  HBB77A0  120203  PDALF1: LI3268.4                 @N3A         
*   $N4=SECTKDS  HBB77A0  120203  PDALF1: LI3268.4                 @N4A         
*   $N5=PKIS21A  HBB7790  120301  PDRRG1: PKI Granular Authoriz'n  @N5A         
*   $N6=NEWMAIN  HBB77A0  120829  PDM_O1: R_ADMIN EXTRACT RRSF     @N6A         
*   $N7=NEWMAIN  HBB77A0  121105  PDM_O1: ME25085                  @N7A         
*   $PI=NEWMAIN  HBB77A0  121107  PDBRW1: ME25109                  @PIA         
*   $PJ=NEWMAIN  HBB77A0  121127  PDBRW1: ME25226                  @PJA         
*   $N8=OA41161  HRF77A0  121218  PDBRW1: New function APAR OA41161@N8A         
*   $N9=RDATA    HBB77A0  130111  PDALF1: FP0347                   @N9A         
*   $NA=NEWMAIN  HBB77A0  130519  PDBRW1: ME26161                  @NAA         
*   $NB=RDATA    HBB77A0  130715  PDALF1: FP0347                   @NBA         
*   $NC=PKIS22N  HBB77A0  130903  PDRRG1: PKI NxM Req Approval     @NCA         
*   $ND=ONEWAY   HBB77A0  130710  PDM_O1: ME26991                  @NDA         
*   $NE=PWDHASH  HBB77A0  140128  PDSGW1: R_Password service       @NEA         
*   $NF=PWDHASH  HBB77A0  140417  PDSGW1: R_Password service       @NFA         
*   $NG=SECDESC  HBB77B0  130308  PDM_O1: 83321                    @NGA         
*   $NH=EMAIL1   HBB77B0  150518  PDALF1: FP0501                   @NHA         
*   $NI=SECDESC  HBB77B0  151119  PDM_O1: 99819                    @NIA         
*   $0C=OA50749  HBB77A0  160415  PDBRW1: R_Password fast-fail     @0CA         
*   $NJ=XTRDS    HBB77C0  180315  PDM_O1: 241652                   @NJA         
*   $NK=XTRDS    HBB77C0  180517  PDBRW1: 254061 Match-generic     @NKA         
*   $NL=PKIS25F  HBB77D0  191006  PDRRG1: 333808 Cert Fingerprint  @NLA         
*   $NM=CMACROS  HBB77D0  191203  PDM_O1: 350392                   @NMA         
*   $NN=PASSTK4  HBB77D0  200810  PDBRW1: 384055 Enhanced PassTix  @NNA         
*   $NO=VALBOOT  HBB77D0  230208  PDTCG1: R_PgmSignVer enhancement @NOA         
*   $NP=IDT2     HBB77D0  220407  PDRDC1: IDT2                     @NPA         
*                                                                               
*01* CHANGE-DESCRIPTIONS:                                                       
*                                                                               
*    A 000000-999999                                                            
*    A - Delete PFSP parmlist for the MAP_FSP callable service     @P2A         
*    A - Add parameter lists for the new XPG4 modules              @L1A         
*    A - Add parameter list (CKO2) for the new UU module           @L2A         
*    A - Add parameter list (GETE) for the new NFS module          @L3A         
*    A - Add workarea to GETE parameter list                       @D1A         
*    A - Return Real, Effective, Saved UID/GID in GETE output area @P3A         
*    A - Add parameter lists for R_dceinfo, R_dcekey               @01A         
*    A - Add parameter list for R_dceruid                          @02A         
*    A - Add parameter list for R_dceauth                          @03A         
*        Changed comments to reflect current OE terminology.       @03C         
*    C - Length calculation in assembler version                   @P4A         
*    A - Added the External Classification information to prolog   @P5A         
*    A - Added parameter list for InitACEE                         @L4A         
*    C - Change constants to match IRRPSIDF                        @P6A         
*    A - Added parameter list for R_admin                          @04A         
*    C - Driver 2 changes for R_admin                              @05A         
*    C - Added certificate parms for InitACEE                      @06A         
*    A - Added function codes and mappings for group support       @07A         
*    A - Added function codes and mappings for resource support    @08A         
*    C - Added ENVR object parms for InitACEE                      @L5A         
*    A - Added INTA_NO_TIMEOUT and INTA_OUSP_RET attributes and    @L6A         
*        the Output_area parameter.                                @L6A         
*    A - Added register/deregister function codes to InitACEE      @09A         
*    A - Added function codes and mappings for R_UserMap           @L7A         
*    A - Added parm list for CDSA DataLib callable svc IRRSDL00    @L8A         
*    A - Changes for CDSA DataLib phase two                        @L9A         
*    A - Changes for CDSA DataLib phase two                        @LAA         
*    A - Added function codes and mappings for SETROPTS support    @LBA         
*    A - Added support for CDSA DataLib GetUpdateCode function     @LCA         
*    A - Added X500 name and Variable List paramters to IRRSIA00   @LDA         
*    A - Added support for kerberos                                @LEA         
*    A - Added support for PKIX                                    @LEA         
*    A - Support for PKIX                                                       
*        (Public Key Infrastructure Standards)                                  
*        - Added a constant for a new RACF DataLib                              
*          Callable Service - IncSerialNum                                      
*        - Added the mapping for a new RACF DataLib                             
*          Callable Service - IncSerialNum                         @LFA         
*    A - Added support for PADS1 extended data call for RACD       @LGA         
*    C - Correct case on equates                                   @P7A         
*    A - Added support for R_ticketserv                            @LHA         
*    C - Corrected comments for QRYS_OPTN_CODE@                    @P8C         
*    A - Support for PKI Services                                               
*        (Public Key Infrastructure Standards)                                  
*        - Defined the mapping for a new                                        
*          RACF Callable Service - R_PKIServ                                    
*        - Defined the constants for the                                        
*          Functions available with the new                                     
*          RACF Callable Service - R_PKIServ                       @0AA         
*    C - INTA Auth/UnAuth Clnt Bit Flags switched in Assembler Dec @P9C         
*    A - Support for UNIX File System ACLs                                      
*        - Defined the mappings for a new                                       
*          RACF Callable Service - R_SetFACL                                    
*        - Defined the constants for the                                        
*          Operation Types and the ACL Types                                    
*          available with the new                                               
*          RACF Callable Service - R_SetFACL                       @LIA         
*    A - Support for additional PKI Services administrative functions:          
*        QUERYREQS, QUERYCERTS, REQDETAILS, CERTDETAILS, MODIFYREQS             
*        and MODIFYCERTS                                           @LJA         
*    A - Support for additional PKI Services end-user functions:                
*        VERIFY, REVOKE, GENRENEW, and REQRENEW                    @LKA         
*    A - Add support for R_cacheserv                               @LLA         
*    A - Add support for R_proxyserv                               @LMA         
*    A - Support for UNIX File System ACLs                                      
*        - Defined the bit flag that indicates the last Parameter               
*          in the RACL_ Parameter List                             @LNA         
*    A - Complete support for GENRENEW and REQRENEW, updated       @LOA         
*        comments for QUERY Serial Number and CertID usage         @LOA         
*    A - Complete support for synchronous generation flag          @LPA         
*    A - Add support for get_ldap_pw                               @LQA         
*    A - Added support for R_datalib callers to request that       @D2A         
*        all keytypes be returned (RACF DCR MG00319)               @D2A         
*    C - Correct comment on the varaible INTA_X500_NAME_PTR        @0BC         
*    A - Support for Multi Level Security for UNIX under z/OS                   
*        - Add support for R_SetFSecl                              @LRA         
*    A - Support for z/OS Multi Level Security                                  
*        - Add support for R_WritePriv                             @LSA         
*    A - Support for z/OS Multi Level Security                                  
*        - Add support for additional INITACEE parms, INTA_SECLABEL@,           
*          INTA_SERVAUTH@, and INTA_LAST_PARM_SERVAUTH             @LTA         
*    A - Support for z/OS Multi Level Security                                  
*        - Correct Variable Names and Comments                                  
*          introduced with the support for R_WritePriv             @PAA         
*    A - Support for z/OS Multi Level Security                                  
*        - Add support for R_ptrace and ck_process_owner           @LUA         
*    A - z/OS Multi Level Security PTM Fix                                      
*        - Length in comment for INTA_SERVAUTH@ in IRRPCOMP is .......          
*          Comment for INTA_SERVAUTH@ states the length of the servauth         
*          name can be 246 bytes. The spec, CDT, and Data Areas book            
*          state correctly that it is 64 bytes.                    @PBA         
*    A - Comment for PTM PYN0855 fix extends into column 72 causes              
*        Assembler compile failure. Fixed comment is listed as follows:         
*        - Length in comment for INTA_SERVAUTH@ in IRRPCOMP is                  
*          incorrect. Comment for INTA_SERVAUTH@ states the length of           
*          the servauth name can be 246 bytes. The spec, CDT, and Data          
*          Areas book state correctly that it is 64 bytes.         @PCA         
*    A - Add support for new R_admin fcn code ADMN_XTR_PWENV       @LVA         
*      - Add support for new R_Proxyserv fcn code PRXY_CHANGELOG   @LVA         
*    A - Add support for passticket service to r_ticketserv CS     @LWA         
*          by adding a new APPLICATION parameter to TKTS and some  @LWA         
*          useful constants.                                       @LWA         
*    A - Add support for R_auditx                                  @LXA         
*    C - Remove event code qualifiers, improve comments            @LYA         
*    A - Add support for R_GetInfo                                 @LZA         
*    A - Add DSA key type support                                  @M1A         
*    C - Replace RAUX_LINK_WORD@ with RAUX_LINK_VALUE@             @M2A         
*    C - Replace RAUX_ACEE_PTR@ with RAUX_ACEE@                    @M2A         
*    A - Support for z/OS PKI Services VI (6)                                   
*        - Add support for the new function, RESPOND,                           
*          for the callable service R_PKIServ                      @M3A         
*    A - Add Support for R_ADMIN extract User, Group and Connect   @M4A         
*        functions.                                                @M4A         
*    A - Add bit to R_Proxyserv plist to indicate if the new       @M5A         
*        password is enveloped.                                    @M5A         
*    A - Add Support for R_ADMIN extract BASE only request flag.   @M6A         
*    A - Add CA Domain support for R_Pkiserv callable service      @M7A         
*    A - Add PHRASE parm for pass phrase support                   @M8A         
*    A - Add new parameters for additional R_CACHESERV function.   @M9A         
*    A - Add new parameters for SAFID due to spec changes.         @MAA         
*    A - Alter parameter names to conform to another spec change.  @MBA         
*    A - Alter comments to conform to another spec change.         @MCA         
*        Note, no lineflags in the code.  Only comments changed.   @MCA         
*    A - Add alias name so PL/X and assembler match                @PDA         
*    A - Add R_proxyserv indicator that change is for phrase       @MDA         
*      - Add R_admin function code to extract phrase envelope      @MDA         
*    A - Add SMB parms to R_GET_INFO                               @MEA         
*    A - Add new fspl for writeable keyring support                @MFA         
*        - New functions: NewRing, DataPut, DataRemove, DelRing    @MFA         
*    A - Change PKIS_QRYC/R_CRIT_DAYS to Fix 31                    @MGA         
*    A - Support for R_SetInfo                                     @MHA         
*    A - Update R_DataLib for writeable keyring support            @MIA         
*    A - Update R_DataLib for writeable keyring support            @PDA         
*    C - Make assembler match PLX for SINF_INPUT_ENTRIES@          @MJA         
*    A - Update R_DataLib for writeable keyring support - Add      @MKA         
*        HIGHTRUST                                                 @MKA         
*    D - Remove SMB client support (R_getinfo updates, R_setinfo)  @MLA         
*    A - Add new PGSN data for R_PgmSignVer service.               @MMA         
*    C - Remove superfluous PGSN_SF_SIG_LEN and PGSN_VI_SUBPOOL    @PEA         
*      - Rename PGSN_VF_SIG_AREA@ to PGSN_VF_SIGINFO@ and          @PEA         
*        PGSN_VF_SIG_LEN to PGSN_VF_SIGINFO_LEN.                   @PEA         
*      - Change comment for PGSN_SF_SUBPOOL                        @PEA         
*    A - Add support for the extract of general resources          @MNA         
*    C - Add Signature Info length and address to VERINIT p-list   @MOA         
*      - Change comment for PGSN_SI_DIGEST_ALG                     @MOA         
*      - Change comment for PGSN_VI_DIGEST_ALG                     @MOA         
*    A - Add CDDL_ATT_SKIPAUTH flag for FIPS support               @MPA         
*    C - Add IDID parameter to initACEE (INTA)                     @MQA         
*      - Add ICRX parameter to r_cacheserv (CACH)                  @MQA         
*    C - Change to limit CDDL_ATT_SKIPAUTH flag for only           @MRA         
*        DataGetFirst, DataGetNext, CheckStatus, GetUpdateCode     @MRA         
*        functions                                                 @MRA         
*    A - Add function-specific parameter list for SETROPTS extract @MSA         
*    A - Fix declaration of PGSN to make it more compatible        @MTA         
*    A - Add new parameters to R_PKIServ function specific parm    @MUA         
*        lists in support of PKI Key Generation.                   @MUA         
*    A - Add constant for maximum function code for R_admin        @PFA         
*    A - Add flag for uppercasing profile name for R_Admin extract @D3A         
*    C - Corrected declare for ADMN_PROF_SETOUTONLY and added      @PGA         
*        reserved bits to ADMN_PROF_FIELDFLAGS                     @PGA         
*    A - Add CDDL_ATT_SET_MIN_SERIAL for Auto Serial Number        @MVA         
*    A - Support for Elliptic Curve Cryptography                   @MWA         
*    A - Add new constant for R_GetInfo function code 2 (REALM)    @MXA         
*    C - Fix R_cacheserv parameter list lengths                    @PHA         
*    A - Support for z/OS Identity Propagation 2                                
*        - Add new function code for R_UserMap                                  
*        - Add the new parameters to the R_UserMap mappings        @MYA         
*    A - Add key type CDDL_ECC_ICSF                                @MZA         
*    A - Add new Store/Reusable option for R_cacheserv function 7  @N1A         
*    A - Support for z/OS Identity Propagation 2                                
*        - Add new option (option 5 = ICRX validation),                         
*          for R_cacheserv function 7                              @N2A         
*    A - Support for Enterprise PKCS#11 Hardware Security          @N3A         
*        - Add CDDL_RSA_TKDS, CDDL_ECC_TKDS, and CDDL_DSA_TKDS     @N3A         
*          key types                                               @N3A         
*    C - Fix PADI assemble errors                                  @N4A         
*    A - Support for PKI Granular Authorization of administrators:              
*        - Add new Error List Length and Address parameters to the              
*          PKIS_MODIFYCERTS_MAP and PKIS_MODIFYREQS_MAP DSECTS.    @N5A         
*    C - Add ADMN_XTRSF structures to support R_ADMIN extract RRSF @N6A         
*    A - Add XTRSF_MAIN_READING_OUTMSG.  Rename Node status to     @N7A         
*        state in RRSF extract stuff (for RACF feature MG18281).   @N7A         
*    C - Rename SET MAINSWITCH to FULLRRSFCOMM (for RACF defect    @PIA         
*        MG18282)                                                  @PIA         
*    A - Add new NODE_DEF_ECVTPSEQ field to RRSF-extract output    @PJA         
*      - Remove old-style version and template fields              @PJA         
*    A - Add profile-extract flag to request profile name only     @N8A         
*        (no segments and fields).                                 @N8A         
*    A - SAF program interface to RACDCERT                         @N9A         
*    A - Add subsystem name, subsys user, and trusted/privileged   @NAA         
*        indicators to RRSF-extract.                               @NAA         
*    A - SAF program interface to RACDCERT - Sprint 4              @NBA         
*    A - Support for PKI NxM Request Approval:                                  
*        - Added new time stamp parameter to PKIS_MODIFYREQS_MAP                
*          DSECT.                                                  @NCA         
*    A - RRSF EXtract support for TARGET DENYINBOUND               @NDA         
*    A - Support for R_Password                                    @NEA         
*    A - Add XPWD_VFY_PLIST                                        @NFA         
*    A - Add new IRRSMO00/64 callable service (SMOP)               @NGA         
*      - Add run=NO and return_command_image options to r_admin    @NGA         
*      - Used together, these options allow the RACF command to be @NGA         
*        generated, returned to caller, but not executed.          @NGA         
*    A - E-mail support                                            @NHA         
*        - Added UMAP_R_TO_E and UMAP_E_TO_R function codes        @NHA         
*    A - Add clear-sensitive-data option to r_SecMgtOper.          @NIA         
*    A - Add add-quotes-to-quoted-fields option to r_admin.        @NIA         
*    A - R_Password fast-fail option: If there is no ACEE cache    @0CA         
*        entry that can be used to validate the pasword, then      @0CA         
*        fail immediately with return codes 8/8/8. The password    @0CA         
*        may or may not be valid.                                  @0CA         
*    A - Add new function codes to support R_ADMIN dataset extract @NJA         
*      - Tweak ADMN_PROF_MAP to layout the volume and DDDSC.       @NJA         
*    A - Add R_admin extract option bit to get covering profile    @NKA         
*    C - Revise description of PKIS function specific parameter    @NLA         
*        PKIS_CRTD_SERIALNUM@.  Commentary change only.            @NLA         
*    A - Many updates to accomodate the CBGENC C-Header generation @NMA         
*        tool which causes C header files to be built magically    @NMA         
*        during build. Mostly not change flagged because every     @NMA         
*        PLX line is altered or moved.                             @NMA         
*    A - Add comments for new R_Ticketserv PassTicket Generate     @NNA         
*        Extended function.                                        @NNA         
*      - Add comments for previously provided R_Ticketserv         @NNA         
*        PassTicket Evaluate Extended function.                    @NNA         
*    A - Add support for initACEE Generate IDT function            @NPA         
*                                                                               
*  **Note. When making changes to this part, PLEASE refer to                    
*    the NOTES in the prolog. This part was changed significantly in            
*    z/OS 2.5.                                                                  
*                                                                               
*                                                                               
*                                                                               
****END OF SPECIFICATIONS*********************************************/         
*%;/*                                                                           
***********************************************************************         
***********************************************************************         
***                                                                  **         
***                   COMP ASSEMBLER DECLARATIONS                    **         
***------------------------------------------------------------------**         
***                                                                  **         
***   DECLARATION NAME = COMP                                        **         
***                                                                  **         
***   DESCRIPTIVE NAME =   OMVS  Common SAF/RACF parameter list.     **         
***                                                                  **         
***   FUNCTION = Provides BAL mapping of the common input parameter  **         
***              list for the   OMVS  SAF/RACF routers.              **         
***                                                                  **         
**********************************************************************/         
*%;   /*                                                                        
         AIF   ('&DSECT' EQ 'NO').COMPN                                         
*                                                                               
COMP     DSECT ,                   OMVS  SAF/RACF common plist.                 
         AGO   .COMPY                                                           
.COMPN  ANOP                                                                    
COMP     DS    0F                  OMVS  SAF/RACF common plist.                 
.COMPY  ANOP                                                                    
*                                                                               
*                                                                               
COMP_WORKA_STOR@  DS  A          Address of 1024 byte work area.  @P2C          
*                                                                               
COMP_SAFRC_ALET@  DS  A          Address of ALET for SAF Return Code.           
*                                                                               
COMP_SAFRC_STOR@  DS  A          Address of SAF Return Code.                    
*                                                                               
COMP_RACRC_ALET@  DS  A          Address of ALET for RACF Return Code.          
*                                                                               
COMP_RACRC_STOR@  DS  A          Address of RACF Return Code.                   
*                                                                               
COMP_RACSC_ALET@  DS  A          Address of ALET for RACF Reason Code.          
*                                                                               
COMP_RACSC_STOR@  DS  A          Address of RACF Reason Code.                   
*                                                                               
COMP_SERVR_PARMS  DS  0C         Parameters for the service routines            
*                                 start here.                                   
*                                                                               
COMP_LEN          EQU *-COMP     Constant - Fixed length of the COMP.           
*                                                                               
***********************************************************************         
*                                                                     *         
*                 IUSP ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = IUSP                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  INIT_USP input parameter list.         *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  INIT_USP service routine.         *         
*                                                                     *         
***********************************************************************         
*                                                                               
                   ORG   COMP_SERVR_PARMS     Follows common plist @04C         
*                                                                               
IUSP               DS  0C        Mapping for IUSP                  @04A         
*                                                                               
IUSP_WORKA_ALET@   DS  A         Address of ALET for the output area.           
*                                                                               
IUSP_WORKA_STOR@   DS  A         Address of a 4 byte output area.               
*                                 This area contains an address that            
*                                 points to data about the user.                
*                                                                               
*                                                                               
IUSP_LEN           EQU *-IUSP    Constant - fixed length of the IUSP.           
*                                                                               
***********************************************************************         
*                                                                     *         
*                 CSID ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = CSID                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Common Set ID input parameter     *         
*                       list.                                         *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the following   OMVS  RACF Service Routines:  *         
*                 Set Uid                                             *         
*                 Set Effective Uid                                   *         
*                 Set Gid                                             *         
*                 Set Effective Gid                                   *         
*                                                                     *         
***********************************************************************         
*                                                                               
                   ORG   COMP_SERVR_PARMS    Follows common plist. @04C         
*                                                                               
CSID               DS  0C        Mapping for CSID                  @04A         
*                                                                               
CSID_ID_ALET@      DS  A         Address of ALET for the Uid/Gid.               
*                                                                               
CSID_ID@           DS  A         Address of the Uid/Gid.                        
*                                                                               
CSID_IDOA_ALET@    DS  A         Address of ALET for the output area.           
*                                                                               
CSID_IDOA@         DS  A         Address of a 3 word output area.               
*                                 This area contains the new real,              
*                                 effective and saved Uid/Gids.                 
*                                                                               
CSID_LEN           EQU *-CSID    Constant - fixed length of the CSID.           
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 EXID ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = EXID                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Exec Set Uid/Gid input parameter  *         
*                      list.                                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  RACF EXEC Service Routine.        *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
EXID                 DS  0C      Mapping for EXID                  @04A         
*                                                                               
EXID_FLAG_ALET@      DS  A       Address of ALET for a byte flag.               
*                                                                               
EXID_FLAG@           DS  A       Address of a one byte flag that                
*                                 indicates set Uid, Gid, or Both.              
*                                   x'01' Set Uid.                              
*                                   x'02' Set Gid.                              
*                                   x'03' Set Both.                             
*                                                                               
EXID_UID_ALET@       DS  A       Address of ALET for Uid to be set.             
*                                                                               
EXID_UID@            DS  A       Address of the Uid to be set.                  
*                                                                               
EXID_GID_ALET@       DS  A       Address of ALET for Gid to be set.             
*                                                                               
EXID_GID@            DS  A       Address of the Gid to be set.                  
*                                                                               
EXID_UIDO_ALET@      DS  A       Address of ALET for Uid output area.           
*                                                                               
EXID_UIDO@           DS  A       Address of Uid output area, which is           
*                                 3 words filled in by IRRREX00 with            
*                                 the real, effective and saved Uids.           
*                                                                               
EXID_GIDO_ALET@      DS  A       Address of ALET for Gid output area.           
*                                                                               
EXID_GIDO@           DS  A       Address of Gid output area, which is           
*                                 3 words filled in by IRRREX00 with            
*                                 the real, effective and saved Gids.           
*                                                                               
EXID_LEN           EQU *-EXID    Constant - fixed length of the EXID.           
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 GETG ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = GETG                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input     *         
*                      parameter list.                                *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  RACF Get Supplemental Groups service   *         
*              routine.                                               *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist.@04C         
*                                                                               
GETG                 DS  0C      Mapping for GETG                  @04A         
*                                                                               
GETG_KEY_ALET@       DS  A       Address of ALET for the user's key.            
*                                                                               
GETG_KEY@            DS  A       Address of a byte that contains the            
*                                 user's key. The key is in the high            
*                                 order 4 bits of the byte.                     
*                                                                               
GETG_GCNT_ALET@      DS  A       Address of ALET for the Group Count.           
*                                                                               
GETG_GCNT@           DS  A       Address of the group count. (A one             
*                                 word area that contains the number            
*                                 of GIDs in the Grouplist area.)               
*                                                                               
GETG_GLST_ALET@      DS  A       Address of ALET for the Group List.            
*                                                                               
GETG_GLST@           DS  A       Address of the Group List area in              
*                                 which supplemental GIDs are returned.         
*                                                                               
GETG_GNUM_ALET@      DS  A       Address of ALET for the number of              
*                                 groups.                                       
*                                                                               
GETG_GNUM@           DS  A       Address of the Number Of Groups.               
*                                 A one word area in which the number           
*                                 of supplemental group GIDs is                 
*                                 returned.                                     
*                                                                               
GETG_LEN           EQU *-GETG    Constant - fixed length of the GETG.           
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 CHKP ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = CHKP                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Check Privilege input parameter   *         
*                      list.                                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  RACF Check Privilege service routine.  *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
CHKP                 DS  0C      Mapping for CHKP                  @04A         
*                                                                               
CHKP_AUFC_ALET@      DS  A       Address of ALET for audit function             
*                                 code.                                         
*                                                                               
CHKP_AUFC@           DS  A       Address of the audit function code.            
*                                 (A full word containing the function          
*                                  code that identifies the system              
*                                  call being processed.)                       
*                                                                               
CHKP_LEN           EQU *-CHKP    Constant - fixed length of the CHKP.           
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 GMAP ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = GMAP                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Get Map Common input parameter    *         
*                      list.                                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  RACF Get Group Map/Get User Map   *         
*              service routine.                                       *         
*                                                                     *         
*                                                                     *         
*   Note: GMAP is a common declaration that is used with both Get     *         
*         Group Map and Get User Map. When requesting Get Group Map,  *         
*         all fields pertain to group data. When requesting Get User  *         
*         Map, all fields pertain to user data.                       *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
GMAP                 DS  0C      Mapping for GMAP                  @04A         
*                                                                               
GMAP_FLAG_ALET@      DS  A       Address of ALET for one byte flag.             
*                                                                               
GMAP_FLAG@           DS  A       Address of the one byte flag:                  
*                                 x'00' Search by Gid/Uid.                      
*                                 x'01' Search by Group ID/Userid.              
*                                                                               
GMAP_ID_ALET@        DS  A       Address of ALET for the Gid/Uid.               
*                                                                               
GMAP_ID@             DS  A       Address of a word containing the               
*                                 input Uid/Gid or in which the                 
*                                 Uid/Gid is returned.                          
*                                                                               
GMAP_NAME_ALET@      DS  A       Address of ALET for the Group Name             
*                                 or Userid.                                    
*                                                                               
GMAP_NAME@           DS  A       Address of 8 bytes that contain                
*                                 an input Group Name or Userid                 
*                                 or in which the Group name or                 
*                                 Userid is returned. The name/id               
*                                 left justified and padded with                
*                                 blanks.                                       
*                                                                               
GMAP_LEN           EQU *-GMAP    Constant - fixed length of the GMAP.           
*                                                                               
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 CKPO ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = CKPO                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Check Process Owner input         *         
*                      parameter list.                                *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Check Process Owner service       *         
*              routine.                                               *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
CKPO                 DS  0C      Mapping for CKPO                  @04A         
*                                                                               
CKPO_REQT_ALET@      DS  A       Address of ALET for one byte Request           
*                                   type.                                       
*                                                                               
CKPO_REQT@           DS  A       Address of the one byte request type:          
*                                   1 -  Audit only request from KILL           
*                                     used when SIGCONT signal is being         
*                                     sent.                                     
*                                   2 - KILL request.                           
*                                   3 - GETPSENT request.                       
*                                   4 - OPEN TTY request.                       
*                                   5 - SIGQUEUE req w/ seclabel   @LUA         
*                                                                               
CKPO_UIDS_ALET@      DS  A       Address of ALET for Uids area.                 
*                                                                               
CKPO_UIDS@           DS  A       Address of 3 word area containing the          
*                                 real, effective, and saved Uids (in           
*                                 that order) for the target process,           
*                                 followed by an 8-byte SECLABEL   @LUA         
*                                 when request type is 5.          @LUA         
*                                                                               
CKPO_PID_ALET@       DS  A       Address of ALET for target PID word.           
*                                                                               
CKPO_PID@            DS  A       Address of the words containing the            
*                                 target process's PID.                         
*                                                                               
CKPO_CODE_ALET@      DS  A       Address of ALET for signal code word.          
*                                                                               
CKPO_CODE@           DS  A       Address of word containing a code              
*                                 identifying the signal being sent.            
*                                 This word is ignored for request              
*                                 type 3.                                       
*                                                                               
*                                                                               
CKPO_LEN           EQU *-CKPO    Constant - fixed length of CKPO.               
CKPO_KILL_AUDIT    EQU 1         KILL AUDIT Constant.                           
CKPO_KILL          EQU 2         Kill Verification.                             
CKPO_GETPSENT      EQU 3         Identifies caller is GETPSENT.                 
CKPO_OPEN_STTY     EQU 4         Open slave TTY.                                
CKPO_SIGQUEUE      EQU 5         sigqueue verification             @LUA         
CKPO_MAX_REQ_TYPE  EQU 5         CKPO Max Request Type.            @LUC         
*                                                                               
***********************************************************************         
*                                                                     *         
*                 QRYS ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = QRYS                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Query System Security options     *         
*                      input parameter list.                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Query System Security options     *         
*              service routine.                                       *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
QRYS                 DS  0C      Mapping for QRYS                  @04A         
*                                                                               
QRYS_OPTN_CODE_ALET@ DS  A       Address of ALET for the one word               
*                                requested option code.                         
*                                                                               
QRYS_OPTN_CODE@      DS  A       Address of the one word requested              
*                                option code. The defined codes are:            
*                                 x'00000001' - NGROUPS_MAX options@P8C         
*                                 x'00000002' - POSIX_SAVED_IDS opt@P8C         
*                                                                               
QRYS_OUTP_VAL_ALET@  DS  A       Address of ALET for one word output            
*                                value                                          
*                                                                               
QRYS_OUTP_VAL@       DS  A       Address of one word output value               
*                                                                               
QRYS_LEN           EQU *-QRYS    Constant - fixed length of QRYS.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 CMOD ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = CMOD                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Change File mode input parameter  *         
*                      list.                                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Change File Mode service routine. *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
CMOD                 DS  0C      Mapping for CMOD                  @04A         
*                                                                               
CMOD_MODE_ALET@      DS  A       Address of ALET for the mode parameter         
*                                                                               
CMOD_MODE@           DS  A       Address of a one word mode parameter.          
*                                                                               
CMOD_FSP_ALET@       DS  A       Address of ALET for the FSP structure          
*                                                                               
CMOD_FSP@            DS  A       Address of the FSP structure.                  
*                                                                               
CMOD_FID_ALET@       DS  A       Address of ALET for the File Id.               
*                                                                               
CMOD_FID@            DS  A       Address of the File Id which is a              
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
CMOD_CRED_ALET@      DS  A       Address of ALET for CRED structure.            
*                                                                               
CMOD_CRED@           DS  A       Address of the CRED structure.                 
*                                                                               
CMOD_LEN           EQU *-CMOD    Constant - fixed length of CMOD.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 CLID ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = CLID                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Clear Setid input parameter list. *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Clear Setid service routine.      *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
CLID                 DS  0C      Mapping for CLID                  @04A         
*                                                                               
CLID_FSP_ALET@       DS  A       Address of ALET for the FSP structure.         
*                                                                               
CLID_FSP@            DS  A       Address of the FSP structure.                  
*                                                                               
CLID_FID_ALET@       DS  A       Address of ALET for the File Id.               
*                                                                               
CLID_FID@            DS  A       Address of the File Id which is a              
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
*                                                                               
CLID_CRED_ALET@      DS  A       Address of ALET for CRED structure.            
*                                                                               
CLID_CRED@           DS  A       Address of the CRED structure.                 
*                                                                               
CLID_LEN           EQU *-CLID    Constant - fixed length of CLID.               
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 CAUD ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = CAUD                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Change File Audit Options input   *         
*                      parameter list.                                *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Change File Audit Options routine *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
CAUD                 DS  0C  Mapping for CAUD                      @04A         
*                                                                               
CAUD_AO_ALET@        DS  A   Address of ALET for the Audit Options.             
*                                                                               
CAUD_AO@             DS  A   Address of 4 bytes that contain an Audit           
*                             Option for each type of access:                   
*                              Byte 1 - read access audit options.              
*                              Byte 2 - write access audit options.             
*                              Byte 3 - execute/search audit options.           
*                               Each of the first three bytes contain           
*                               an Audit Option:                   @P1C         
*                               x'00' - don't audit any access attempts         
*                               x'01' - audit successful access.                
*                               x'02' - audit failed access attempts.           
*                              Byte 4 - audit flag.                @P1C         
*                               In the last byte, the last bit     @P1A         
*                               indicates:                         @P1A         
*                               x'00' - set user audit options.    @P1A         
*                               x'01' - set auditor audit options. @P1A         
*                                                                               
CAUD_FSP_ALET@       DS  A   Address of ALET for the FSP structure.             
*                                                                               
CAUD_FSP@            DS  A   Address of the FSP structure.                      
*                                                                               
CAUD_FID_ALET@       DS  A   Address of ALET for the File Id.                   
*                                                                               
CAUD_FID@            DS  A   Address of the File Id which is a                  
*                             16 byte area that contains a unique               
*                             identifier of the file.                           
*                                                                               
CAUD_CRED_ALET@      DS  A   Address of ALET for CRED structure.                
*                                                                               
CAUD_CRED@           DS  A   Address of the CRED structure.                     
*                                                                               
CAUD_LEN           EQU *-CAUD   Constant - fixed length of CAUD.                
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 COWN ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = COWN                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Change Owner and Group input      *         
*                      parameter list.                                *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Change Owner and Group service    *         
*              routine.                                               *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
COWN                 DS  0C      Mapping for COWN                  @04A         
*                                                                               
COWN_UID_ALET@       DS  A       Address of ALET for Uid.                       
*                                                                               
COWN_UID@            DS  A       Address of the Uid to be set as the            
*                                 file owner Uid.                               
*                                                                               
COWN_GID_ALET@       DS  A       Address of ALET for Gid.                       
*                                                                               
COWN_GID@            DS  A       Address of the Gid to be set as the            
*                                 file owner Gid.                               
*                                                                               
COWN_FSP_ALET@       DS  A       Address of ALET for the FSP structure.         
*                                                                               
COWN_FSP@            DS  A       Address of the FSP structure.                  
*                                                                               
COWN_FID_ALET@       DS  A       Address of ALET for the File Id.               
*                                                                               
COWN_FID@            DS  A       Address of the File Id which is a              
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
*                                                                               
COWN_CRED_ALET@      DS  A       Address of ALET for CRED structure.            
*                                                                               
COWN_CRED@           DS  A       Address of the CRED structure.                 
*                                                                               
COWN_LEN           EQU *-COWN    Constant - fixed length of COWN.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 UMSK ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = UMSK                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Set File Mode Creation Mask       *         
*                      input parameter list.                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Set File Mode Creation Mask       *         
*              service routine.                                       *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
UMSK                 DS  0C      Mapping for UMSK                  @04A         
*                                                                               
UMSK_MODE_ALET@      DS  A       Address of ALET for the mode parameter         
*                                                                               
UMSK_MODE@           DS  A       Address of the mode parameter.                 
*                                                                               
UMSK_LEN           EQU *-UMSK    Constant - fixed length of UMSK.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 KACC ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = KACC                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter      *         
*                      list.                                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Check Access service routine.     *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
KACC                 DS  0C   Mapping for KACC                     @04A         
*                                                                               
KACC_ACODE_ALET@     DS  A    Address of ALET for the access code.              
*                                                                               
KACC_ACODE@          DS  A    Address of a 1 byte access code that              
*                              contains:                                        
*                               x'01' - execute access.                         
*                               x'02' - write access.                           
*                               x'03' - write and execute access.               
*                               x'04' - read access.                            
*                               x'05' - read and execute access.                
*                               x'06' - read and write access.                  
*                               x'07' - read, write and execute access.         
*                               x'81' - directory search access.                
*                               x'87' - any access.                             
*                                                                               
KACC_FSP_ALET@       DS  A    Address of ALET for the FSP structure.            
*                                                                               
KACC_FSP@            DS  A    Address of the FSP structure.                     
*                                                                               
KACC_FID_ALET@       DS  A    Address of ALET for the File Id.                  
*                                                                               
KACC_FID@            DS  A    Address of the File Id which is a                 
*                              16 byte area that contains a unique              
*                              identifier of the file.                          
*                                                                               
KACC_CRED_ALET@      DS  A    Address of ALET for CRED structure.               
*                                                                               
KACC_CRED@           DS  A    Address of the CRED structure.                    
*                                                                               
KACC_FLAG_ALET@      DS  A    Address of the ALET for the name flag             
*                              byte.                                            
*                                                                               
KACC_FLAG@           DS  A    Address of a byte flag that indicates             
*                              which name is being checked:                     
*                              x'00' - Use the CRED_name_flag to                
*                                      determine path name being                
*                                      checked. Used by lookup.                 
*                              x'01' - The old (or only) name is                
*                                      being checked. Used by all               
*                                      calls except lookup and when             
*                                      rename and link are checking             
*                                      for write access to the                  
*                                      parent directory of the new              
*                                      path name file.                          
*                              x'02' - The new name is being checked.           
*                                      Used by rename and link when             
*                                      checking for write access to             
*                                      the parent directory of the              
*                                      new path name file.                      
*                                                                               
KACC_LEN           EQU *-KACC Constant - fixed length of KACC.                  
*                                                                               
***********************************************************************         
*                                                                     *         
*                 QRYF ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = QRYF                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Query File Security Options       *         
*                      input parameter list.                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the Query File Security    *         
*              Options for the   OMVS  Query File Security Options    *         
*              service routine.                                       *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
QRYF                 DS  0C      Mapping for QRYF                  @04A         
*                                                                               
QRYF_OCODE_ALET@     DS  A       Address of ALET for the option code.           
*                                                                               
QRYF_OCODE@          DS  A       Address of a 1 word option code that           
*                                 contains:                                     
*                                  x'00000001'-POSIX_CHOWN_RESTRICTED.          
*                                                                               
QRYF_OUTV_ALET@      DS  A       Address of ALET for the output value.          
*                                                                               
QRYF_OUTV@           DS  A       Address of the output value that               
*                                 contains:                                     
*                                  0 - POSIX_CHOWN_RESTRICTED.                  
*                                 -1 - Not POSIX_CHOWN_RESTRICTED.              
*                                                                               
QRYF_LEN           EQU *-QRYF    Constant - fixed length of QRYF.               
*                                                                               
*                                                                 6@P2D         
***********************************************************************         
*                                                                     *         
*                 KFOW ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = KFOW                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Check File Owner input parameter  *         
*                      list.                                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  Check File Owner service routine.      *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
KFOW                 DS  0C      Mapping for KFOW                  @04A         
*                                                                               
KFOW_FSP_ALET@       DS  A       Address of ALET for the input FSP.             
*                                                                               
KFOW_FSP@            DS  A       Address of the input FSP.                      
*                                                                               
KFOW_FID_ALET@       DS  A       Address of ALET for the File Id.               
*                                                                               
KFOW_FID@            DS  A       Address of the File Id which is a              
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
*                                                                               
KFOW_CRED_ALET@      DS  A       Address of ALET for CRED structure.            
*                                                                               
KFOW_CRED@           DS  A       Address of the CRED structure.                 
*                                                                               
*                                                                               
KFOW_LEN           EQU *-KFOW    Constant - fixed length of KFOW.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 MKRT ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = MKRT                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Make Root FSP input parameter     *         
*                      list.                                          *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  Make Root FSP service routine.         *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
MKRT                 DS  0C      Mapping for MKRT                  @04A         
*                                                                               
MKRT_MODE_ALET@      DS  A       Address of ALET for the mode parameter         
*                                                                               
MKRT_MODE@           DS  A       Address of the mode parameter.                 
*                                                                               
MKRT_OFSP_ALET@      DS  A       Address of ALET for the output FSP             
*                                 area.                                         
*                                                                               
MKRT_OFSP@           DS  A       Address of the output FSP area.                
*                                                                               
MKRT_FID_ALET@       DS  A       Address of ALET for the File Id.               
*                                                                               
MKRT_FID@            DS  A       Address of the File Id which is a              
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
*                                                                               
MKRT_DSN_ALET@       DS  A       Address of ALET for the name of the            
*                                 dataset.                                      
*                                                                               
MKRT_DSN@            DS  A       Address of an area that contains the           
*                                 name of the PDSE/x data set being             
*                                 created. (44 character length)                
*                                                                               
MKRT_LEN           EQU *-MKRT    Constant - fixed length of MKRT.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 PTRC ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = PTRC                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Check PTRACE Authority input      *         
*                      parameter list.                                *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  Check PTRACE Authority service         *         
*              routine.                                               *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
PTRC                 DS  0C      Mapping for PTRC                  @04A         
*                                                                               
PTRC_TUID_ALET@      DS  A       Address of ALET for the target UIDs            
*                                 area.                                         
*                                                                               
PTRC_TUID@           DS  A       Address of a 3 word area that contains         
*                                 the REAL, EFFECTIVE, and SAVED UIDs           
*                                 (in that order) for the target                
*                                  process, followed by an 8-byte  @LUC         
*                                  SECLABEL when the high-order    @LUA         
*                                  bit of the PID is on.           @LUA         
*                                                                               
PTRC_TGID_ALET@      DS  A       Address of ALET for the target GIDs            
*                                 area.                                         
*                                                                               
PTRC_TGID@           DS  A       Address of a 3 word area that contains         
*                                 the REAL, EFFECTIVE, and SAVED GIDs           
*                                 (in that order) for the target                
*                                  process.                                     
*                                                                               
PTRC_TPID_ALET@      DS  A       Address of ALET for the target PID.            
*                                                                               
PTRC_TPID@           DS  A       Address of a word that contains the            
*                                 PID of the target process.                    
*                                                                               
PTRC_LEN           EQU *-PTRC    Constant - fixed length of PTRC.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 MFSP ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = MFSP                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Make FSP input parameter list.    *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  Make FSP service routine.              *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
MFSP                 DS  0C      Mapping for MFSP                  @04A         
*                                                                               
MFSP_MODE_ALET@      DS  A       Address of ALET for the mode parameter         
*                                                                               
MFSP_MODE@           DS  A       Address of the mode parameter.                 
*                                                                               
MFSP_OFSP_ALET@      DS  A       Address of ALET for the output FSP             
*                                 area.                                         
*                                                                               
MFSP_OFSP@           DS  A       Address of the output FSP area.                
*                                                                               
*                                                                               
MFSP_ODFSP_ALET@     DS  A       Address of ALET for the owning                 
*                                 directory FSP.                                
*                                                                               
MFSP_ODFSP@          DS  A       Address of the owning directory FSP.           
*                                                                               
MFSP_FID_ALET@       DS  A       Address of ALET for the File Id.               
*                                                                               
MFSP_FID@            DS  A       Address of the File Id which is a              
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
MFSP_CRED_ALET@      DS  A       Address of ALET for CRED structure.            
*                                                                               
MFSP_CRED@           DS  A       Address of the CRED structure.                 
*                                                                               
MFSP_LEN           EQU *-MFSP    Constant - fixed length of MFSP.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 RAUD ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = RAUD                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Audit input parameter list.       *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  Audit service routine.                 *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
RAUD                 DS  0C      Mapping for RAUD                  @04A         
*                                                                               
RAUD_CRED_ALET@      DS  A       Address of ALET for CRED structure.            
*                                                                               
RAUD_CRED@           DS  A       Address of the CRED structure.                 
*                                                                               
RAUD_OFID_ALET@      DS  A       Address of ALET for the File Id of             
*                                 the old (or only) file.                       
*                                                                               
RAUD_OFID@           DS  A       Address of the File Id for the old             
*                                 (or only) file. The File Id is a              
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
*                                                                               
RAUD_OFSP_ALET@      DS  A       Address of ALET for the FSP for the            
*                                 old (or only) file.                           
*                                                                               
RAUD_OFSP@           DS  A       Address of the FSP for the old                 
*                                 (or only) file.                               
*                                                                               
RAUD_FLAG_ALET@      DS  A       Address of ALET for the flag byte.             
*                                                                               
RAUD_FLAG@           DS  A       Address of a flag byte that indicates:         
*                                 x'00' - last link was not removed.            
*                                 x'01' - last link was removed for             
*                                         a file. The file is deleted.          
*                                This parameter is used only on rename          
*                                and unlink. On a rename, the new name          
*                                is deleted. On unlink, the 'only'              
*                                name was deleted.                              
*                                                                               
RAUD_NFID_ALET@      DS  A       Address of ALET for the File Id of             
*                                 the NEW file. This parameter is               
*                                 used only on a rename.                        
*                                                                               
RAUD_NFID@           DS  A       Address of the File Id for the NEW             
*                                 file. This parameter is used only             
*                                 on a rename. The File Id is a                 
*                                 16 byte area that contains a unique           
*                                 identifier of the file.                       
*                                                                               
RAUD_NFSP_ALET@      DS  A       Address of ALET for the FSP for the            
*                                 NEW file. This parameter is used              
*                                 only on a rename.                             
*                                                                               
RAUD_NFSP@           DS  A       Address of the FSP for the NEW file.           
*                                 This parameter is used only on a              
*                                 rename.                                       
*                                                                               
RAUD_LEN           EQU *-RAUD    Constant - fixed length of RAUD.               
*                                                                               
***********************************************************************         
*                                                                     *         
*                 GUGP ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = GUGP                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Get Users Groups input            *         
*                      parameter list.                                *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  RACF Get Users Groups service          *         
*              routine.                                               *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
GUGP                 DS  0C      Mapping for GUGP                  @04A         
*                                                                               
GUGP_KEY_ALET@       DS  A       Address of ALET for the user's key.            
*                                                                               
GUGP_KEY@            DS  A       Address of a byte that contains the            
*                                 user's key. The key is in the high            
*                                 order 4 bits of the byte.                     
*                                                                               
GUGP_NLEN_ALET@      DS  A       Address of ALET for the USERID                 
*                                 length.                                       
*                                                                               
GUGP_NLEN@           DS  A       Address of 1 byte USERID length.               
*                                                                               
GUGP_NAME_ALET@      DS  A       Address of ALET for the USERID.                
*                                                                               
GUGP_NAME@           DS  A       Address of 8 byte USERID.                      
*                                                                               
GUGP_GCNT_ALET@      DS  A       Address of ALET for the Group Count.           
*                                                                               
GUGP_GCNT@           DS  A       Address of the group count. (A one             
*                                 word area that contains the number            
*                                 of GIDs in the Grouplist area.)               
*                                                                               
GUGP_GLST_ALET@      DS  A       Address of ALET for the Group List.            
*                                                                               
GUGP_GLST@           DS  A       Address of the Group List area in              
*                                 which supplemental GIDs are returned.         
*                                                                               
GUGP_GNUM_ALET@      DS  A       Address of ALET for the number of              
*                                 groups.                                       
*                                                                               
GUGP_GNUM@           DS  A       Address of the Number Of Groups.               
*                                 A one word area in which the number           
*                                 of supplemental group GIDs is                 
*                                 returned.                                     
*                                                                               
GUGP_LEN           EQU *-GUGP    Constant - fixed length of the GUGP.           
*                                                                               
***********************************************************************         
*                                                                     *         
*                 FORK ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = FORK                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF FORK Exit input parameter list.   *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  RACF FORK Exit service routine.        *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
FORK                 DS  0C      Mapping for FORK                  @04A         
*                                                                               
FORK_FLAG_ALET@      DS  A       Address of the ALET for the fork flag.         
*                                                                               
FORK_FLAG@           DS  A       Address of a word flag that indicates          
*                                 the current type of processing:               
*                                  x'00' - Fork Parent Processing.              
*                                  x'02' - Fork Parent Processing  @LGA         
*                                          Extended Data           @LGA         
*                                  x'01' - Forked Child Processing.             
*                                  x'03' - Forked Child Processing @LGA         
*                                          Extended Data           @LGA         
*                                                                               
FORK_DATAKEY_ALET@   DS  A       Address of ALET for the data's                 
*                                 storage key.                                  
*                                                                               
FORK_DATAKEY@        DS  A       Address of a word that contains the            
*                                 storage key from which the storage            
*                                 for the data is to be obtained.               
*                                                                               
FORK_DATALEN_ALET@   DS  A       Address of ALET for the data length.           
*                                                                               
FORK_DATALEN@        DS  A       Address of a word that contains the            
*                                 data length.                                  
*                                                                               
FORK_DATA_ALET@      DS  A       Address of the data ALET.                      
*                                                                               
FORK_DATA@           DS  A       Address of the data being passed               
*                                 from the parent to the child via              
*                                 FORK.                                         
*                                                                               
FORK_DATASP_ALET@    DS  A       Address of ALET for the data subpool.          
*                                                                               
FORK_DATASP@         DS  A       Address of a word that contains the            
*                                 subpool from which to obtain                  
*                                 storage to hold the data.                     
*                                                                               
FORK_LEN           EQU *-FORK   Constant - fixed length of the FORK.            
FORK_PARENT        EQU 0        Constant - Fork Parent processing flag.         
FORK_PARENTX       EQU 2        Constant - Fork Parent processing  @LGA         
*                                          Extended Data flag.     @LGA         
FORK_CHILD         EQU 1        Constant - Fork Child processing flag.          
FORK_CHILDX        EQU 3        Constant - Fork Child processing   @LGA         
*                                          Extended Data flag.     @LGA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                 MISP ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = MISP                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Make ISP input parameter list.    *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter list   *         
*              for the   OMVS  Make ISP service routine.              *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
MISP                 DS  0C      Mapping for MISP                  @04A         
*                                                                               
MISP_MODE_ALET@      DS  A       Address of ALET for the mode.    @L1A          
*                                                                               
MISP_MODE@           DS  A       Address of the mode parameter.   @L1A          
*                                                                               
MISP_OISP_ALET@      DS  A       Address of ALET for the ISP.     @L1A          
*                                                                               
MISP_OISP@           DS  A       Address of the output ISP area.  @L1A          
*                                                                               
MISP_OIPC_ALET@      DS  A       Address of ALET for the output IPCP.           
*                                                                               
MISP_OIPC@           DS  A       Address of the IPCP.             @L1A          
*                                                                               
MISP_CREI_ALET@      DS  A       Address of ALET for CREDIPC structure.         
*                                                                               
MISP_CREI@           DS  A       Address of the CREDIPC structure @L1A          
*                                                                               
MISP_LEN           EQU *-MISP    Constant - fixed length of MISP. @L1A          
*                                                                               
***********************************************************************         
*                                                                     *         
*                 IACC ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = IACC                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Check access to ISP input         *         
*                      parameter.                                     *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  Check ISP access service routine. *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
IACC                 DS  0C   Mapping for IACC                     @04A         
*                                                                               
IACC_ACODE_ALET@     DS  A    Address of ALET for the access code. @L1A         
*                                                                               
IACC_ACODE@          DS  A    Address of a 1 byte access code that @L1A         
*                              contains:                                        
*                               x'00' - No access.                              
*                               x'02' - write access.                           
*                               x'04' - read access.                            
*                               x'06' - read and write access                   
*                                                                               
IACC_ISP_ALET@       DS  A    Address of ALET for the ISP struc.   @L1A         
*                                                                               
IACC_ISP@            DS  A    Address of the ISP structure.        @L1A         
*                                                                               
IACC_CREI_ALET@      DS  A    Address of ALET for CREDIPC struc.   @L1A         
*                                                                               
IACC_CREI@           DS  A    Address of the CREDIPC structure.    @L1A         
*                                                                               
*                                                                               
IACC_LEN           EQU *-IACC Constant - fixed length of IACC.     @L1A         
*                                                                               
***********************************************************************         
*                                                                     *         
*                 IOWN ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = IOWN                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Perform R_IPC_control Change      *         
*                        Owner and Group input parameter list     @03C*         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the   OMVS  R_IPC_control service routine @03C*         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
IOWN                 DS  0C      Mapping for IOWN                  @04A         
*                                                                               
*                                                                               
IOWN_CMD_ALET@       DS  A       Address of ALET for cmd code.     @L1A         
*                                                                               
IOWN_CMD@            DS  A       Address of cmd code.              @L1A         
*                                                                               
IOWN_UID_ALET@       DS  A       Address of ALET for Uid.          @L1A         
*                                                                               
IOWN_UID@            DS  A       Address of the Uid to be set as the            
*                                 ISP owner UID.                   @L1A         
*                                                                               
IOWN_GID_ALET@       DS  A       Address of ALET for Gid.          @L1A         
*                                                                               
IOWN_GID@            DS  A       Address of the Gid to be set as the            
*                                 ISP owner GID.                   @L1A         
*                                                                               
IOWN_MODE_ALET@      DS  A       Address of ALET for the mode parameter         
*                                                                               
IOWN_MODE@           DS  A       Address of the mode parameter.    @L1A         
*                                                                               
IOWN_ISP_ALET@       DS  A       Address of ALET for the ISP structure.         
*                                                                               
IOWN_ISP@            DS  A       Address of the ISP structure.     @L1A         
*                                                                               
IOWN_CREI_ALET@      DS  A       Address of ALET for CREDIPC structure.         
*                                                                               
IOWN_CREI@           DS  A       Address of the CREDIPC structure. @L1A         
*                                                                               
IOWN_LEN           EQU *-IOWN    Constant - fixed length of IOWN.  @L1A         
*                                                                               
***********************************************************************         
*                                                                     *         
*                 CKO2 ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = CKO2                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS check owner two files parameter list.   *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the OMVS check owner two files routine.       *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
CKO2                 DS  0C      Mapping for CK02                  @04A         
*                                                                               
CKO2_FSP1_ALET@      DS  A       Address of ALET for the first FSP.             
*                                                                  @L2A         
*                                                                               
CKO2_FSP1@           DS  A       Address of the first FSP.         @L2A         
*                                                                               
CKO2_FSP2_ALET@      DS  A       Address of ALET for the second                 
*                                 FSP.                             @L2A         
*                                                                               
CKO2_FSP2@           DS  A       Address of the second FSP.        @L2A         
*                                                                               
CKO2_FID1_ALET@      DS  A       Address of ALET for the first                  
*                                 File ID.                         @L2A         
*                                                                               
CKO2_FID1@           DS  A       Address of the first File ID.                  
*                                                                  @L2A         
*                                                                               
CKO2_FID2_ALET@      DS  A       Address of ALET for the                        
*                                 Second File ID.                  @L2A         
*                                                                               
CKO2_FID2@           DS  A       Address of the second File ID.    @L2A         
*                                                                               
CKO2_CRED_ALET@      DS  A       Address of ALET for CRED                       
*                                 Structure.                       @L2A         
*                                                                               
CKO2_CRED@           DS  A       Address of the CRED structure.    @L2A         
*                                                                               
CKO2_LEN           EQU *-CKO2    Constant - fixed length of CKO2.  @L2A         
*                                                                               
***********************************************************************         
*                                                                     *         
*                 GETE ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = GETE                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS  RACF Get real, effective, saved        *         
*                      UIDs/GIDs and supplemental groups from the     *         
*                      USP parameter list.                            *         
*                                                                     *         
*   FUNCTION = Provides the BAL mapping of the input parameter        *         
*              list for the OMVS Get real,eff,saved UIDs/GIDs and     *         
*              supplemental groups routine.                           *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS  Follows common plist  @04C         
*                                                                               
GETE                 DS  0C     Mapping for GETE                   @04A         
*                                                                               
*                                                                               
GETE_WORKB_ALET@     DS  A      Address of ALET for 1024 byte      @D1A         
*                                work area.                                     
*                                                                               
GETE_WORKB@          DS  A      Address of 1024 byte work area.    @D1A         
*                                                                               
GETE_KEY_ALET@       DS  A      Address of ALET for the user's key @L3A         
*                                                                               
GETE_KEY@            DS  A      Address of a byte that contains    @L3A         
*                                the user's key. The key is in the              
*                                high order 4 bits of the byte.                 
*                                                                               
GETE_GCNT_ALET@      DS  A      Address of ALET for the Group Cnt  @L3A         
*                                                                               
GETE_GCNT@           DS  A      Address of the group count. (A one @L3A         
*                                word area that contains the number             
*                                of GIDs in the Grouplist area.)                
*                                                                               
GETE_GLST_ALET@      DS  A      Address of ALET for the Group List @L3A         
*                                                                               
GETE_GLST@           DS  A      Address of the Group List area in  @L3A         
*                                which supplemental GIDs are returned.          
*                                                                               
GETE_GNUM_ALET@      DS  A      Address of ALET for the number of  @L3A         
*                                groups.                                        
*                                                                               
GETE_GNUM@           DS  A      Address of the Number Of Groups.   @L3A         
*                                A one word area in which the number            
*                                of supplemental group GIDs is                  
*                                returned.                                      
*                                                                               
GETE_UID_ALET@       DS  A      Address of ALET for UIDs.          @L3A         
*                                                                               
GETE_UID@            DS  A      Address of a 3 word output area.   @P3C         
*                                This area contains the real,                   
*                                effective and saved UIDs.                      
*                                                                               
GETE_GID_ALET@       DS  A      Address of ALET for GIDs.          @L3A         
*                                                                               
GETE_GID@            DS  A      Address of a 3 word output area.   @P3C         
*                                This area contains the real,                   
*                                effective and saved GIDs.                      
*                                                                               
GETE_LEN           EQU *-GETE   Constant - fixed length of GETE.   @L3A         
*                                                                               
***********************************************************************         
*                                                                     *         
*                 DKEY ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = DKEY                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Key        *         
*                                                                     *         
*   FUNCTION = Provides the ASSEMBLER mapping of the input parameter  *         
*              list for the service to retrieve or replace the        *         
*              DPASSWDS within a RACF user profile.                   *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
DKEY                 DS  0C     Mapping for DKEY callable service  @04A         
*                                                                               
*                                                                               
DKEY_FUNC_ALET@      DS  A      Address of ALET for Function code  @01A         
*                                                                               
DKEY_FUNC@           DS  A      Address of 1 byte function code    @01A         
*                                                                               
DKEY_ENTITY_ALET@    DS  0C     Address of ALET for the RACF entity@LQA         
*                                                                               
DKEY_USERID_ALET@    DS  A      Address of ALET for the RACF userid@01A         
*                                                                               
DKEY_ENTITY@         DS  0C     Address of 247 byte area that contains          
*                                a 1 byte length followed by a                  
*                                userid of up to 246 characters    @LQA         
*                                                                               
DKEY_USERID@         DS  A      Address of 9 byte area that contains            
*                                a 1 byte length followed by a                  
*                                userid of up to 8 characters      @01A         
*                                                                               
DKEY_KEY_ALET@       DS  A      Address of ALET for the DCE key    @01A         
*                                                                               
DKEY_KEY@            DS  A      Address of the output key area, if              
*                                retrieving the DCE key, or new key if          
*                                setting the user's DCE key        @01A         
*                                                                               
DKEY_KEYL_ALET@      DS  A      Address of ALET for the DCE key length          
*                                                                  @01A         
*                                                                               
DKEY_KEYL@           DS  A      Address of fullword containing the              
*                                DCE key area length               @01A         
*                                                                               
DKEY_LEN           EQU *-DKEY   Constant - fixed length of DKEY    @01A         
*                                                                               
*                                                                               
DKEY_GET           EQU X'01'    Constant - Retrieve DCE key        @01A         
DKEY_PUT           EQU X'02'    Constant - Replace DCE key         @01A         
DKEY_GET_LDAP_PW   EQU X'03'    Constant - Retrive LDAP password   @LQA         
***********************************************************************         
*                                                                     *         
*                 DINF ASSEMBLER DECLARATIONS                         *         
*---------------------------------------------------------------------*         
*                                                                     *         
*   DECLARATION NAME = DINF                                           *         
*                                                                     *         
*   DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Info       *         
*                                                                     *         
*   FUNCTION = Provides the ASSEMBLER mapping of the input parameter  *         
*              list for the service to retrieve or replace the        *         
*              DCE UUID, DCENAME, or HOMECELL within a RACF user      *         
*              profile.                                               *         
***********************************************************************         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
DINF                 DS  0C     Mapping for DINF                   @04A         
*                                                                               
*                                                                               
DINF_FUNC_ALET@      DS  A      Address of ALET for Function code  @01A         
*                                                                               
DINF_FUNC@           DS  A      Address of 1 byte function code    @01A         
*                                                                               
DINF_USERID_ALET@    DS  A      Address of ALET for the RACF userid@01A         
*                                                                               
DINF_USERID@         DS  A      Address of 9 byte area that contains            
*                                a 1 byte length followed by a                  
*                                userid of up to 8 characters      @01A         
*                                                                               
DINF_FIELDL_ALET@    DS  A      Address of ALET for the Field List @01A         
*                                                                               
DINF_FIELDL@         DS  A      Address of an area containing input             
*                                Field_list                        @01A         
*                                                                               
DINF_OUTPUTA_ALET@   DS  A      Address of ALET for the Output area@01A         
*                                                                               
DINF_OUTPUTA@        DS  A      Address of area which contains the              
*                                contents of the data obtained     @01A         
*                                                                               
DINF_OUTPUTL_ALET@   DS  A      Address of ALET for the Output area             
*                                length                            @01A         
*                                                                               
DINF_OUTOUTL@        DS  A      Address of fullword containing the              
*                                Output area length                @01A         
                     ORG DINF_OUTOUTL@                             @PDA         
DINF_OUTPUTL@        DS  A      Alias of output area length        @PDA         
*                                                                               
DINF_LEN           EQU *-DINF   Constant - fixed length of DINF    @01A         
*                                                                               
DINF_GET           EQU X'01'    Constant - Retrieve DCE info       @01A         
DINF_PUT           EQU X'02'    Constant - Replace DCE info        @01A         
***********************************************************************         
*                                                                     *         
*                DRUR ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = DRUR                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   RACF userid - DCE UUID mapping parameters     *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    *         
*             list for the service to map a RACF userid to a DCE      *         
*             principal UUID/home cell UUID pair.                     *         
***********************************************************************         
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
DRUR                 DS  0C     Mapping for DRUR                   @04A         
*                                                                               
*                                                                               
DRUR_FUNC_ALET@      DS  A      Address of ALET for Function code  @02A         
*                                                                               
DRUR_FUNC@           DS  A      Address of 1 byte function code    @02A         
*                                                                               
DRUR_PRIN_UUID_ALET@ DS  A      Address of ALET for the DCE principal           
*                               UUID                                            
*                                                                               
DRUR_PRIN_UUID@      DS  A      Address of a 36 byte input/output area          
*                               for the DCE principal UUID         @02A         
*                                                                               
*           The following two fields address the home cell UUID                 
*           which is optional.  Indicate no home cell UUID passed               
*           by having the pointer and alet address a null byte.    @02A         
DRUR_HOME_UUID_ALET@ DS  A      Address of ALET for the DCE home cell           
*                               UUID                               @02A         
*                                                                               
DRUR_HOME_UUID@      DS  A      Address of a 36 byte input/output area          
*                               for the DCE home cell UUID         @02A         
*                                                                               
DRUR_USERID_ALET@    DS  A      Address of ALET for the RACF userid             
*                                                                  @02A         
DRUR_USERID@         DS  A      Address of a 9 byte input/output area           
*                               for the RACF userid (1 byte for the             
*                               length followed by up to 8 bytes for            
*                               the RACF userid itself)            @02A         
*                                                                               
DRUR_LEN             EQU *-DRUR Constant - fixed length of DRUR    @02A         
*                                                                               
DRUR_GET_RACF_USERID EQU X'01'  Constant - UUID->RACF userid       @02A         
DRUR_GET_DCE_UUID    EQU X'02'  Constant - RACF userid->UUID       @02A         
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                DAUT ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = DAUT                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   RACF Authorization of a DCE Client            *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    *         
*             list for the service which allows MVS servers to verify *         
*             the authority of a DCE Client (who is also a RACF user) *         
*             to resources on the MVS system that are protected by    *         
*             RACF.                                                   *         
*                                                                     *         
***********************************************************************         
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C         
*                                                                               
DAUT                 DS  0C     Mapping for DAUT                   @04A         
*                                                                               
*                                                                               
DAUT_ACEEP@          DS  A      Address of a full word containing the           
*                               address of a                                    
*                               previously created ACEE (or 0)     @03A         
*                                                                               
DAUT_ALET@           DS  A      Address of ALET for following                   
*                               variables.                         @03A         
*                                                                               
DAUT_PRIN_UUID@      DS  A      Address of a 36 byte area for the               
*                               DCE principal UUID                 @03A         
*                                                                               
DAUT_HOME_UUID@      DS  A      Address of a 36 byte area for the               
*                               DCE home cell UUID                 @03A         
*                                                                               
DAUT_USERID@         DS  A      Address of a 9 byte area                        
*                               for the RACF userid (1 byte for the             
*                               length followed by up to 8 bytes for            
*                               the RACF userid itself)            @03A         
*                                                                               
DAUT_CLASS_NAME@     DS  A      Address of an 8 byte area for                   
*                               the RACF class name of a resource.              
*                               The class name must be left justified           
*                               and padded to the right with blanks.            
*                                                                  @03A         
*                                                                               
DAUT_ENT_NAME@       DS  A      Address of an area for the RACF                 
*                               resource profile name.             @03A         
*                                                                               
DAUT_ENT_LEN@        DS  A      Address of a 2 byte area which                  
*                               contains the length of the resource             
*                               profile name.                      @03A         
*                                                                               
DAUT_ACC_REQ@        DS  A      Address of a 1 byte area containing             
*                               the requested access to the                     
*                               resource.                          @03A         
*                                                                               
DAUT_LEN             EQU *-DAUT Constant - fixed length of DAUT    @03A         
*                                                                               
DAUT_READ            EQU X'02'  Constant - READ access requested   @03A         
DAUT_UPDATE          EQU X'04'  Constant - UPDATE access request.  @03A         
DAUT_CONTROL         EQU X'08'  Constant - CONTROL access request. @03A         
DAUT_ALTER           EQU X'80'  Constant - ALTER access requested  @03A         
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                INTA ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = INTA                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   RACF Initialize ACEE                          *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    *         
*      list for the service which will create/delete/manage ACEEs.    *         
*                                                                     *         
***********************************************************************         
                     ORG   COMP_SERVR_PARMS   Follows common plist @L4A         
*                                                                               
INTA                 DS  0C     Mapping for INTA                   @L4A         
*                                                                               
*                                                                               
INTA_FUNC@           DS  A      Address of 1 byte function code    @L4A         
*                                                                               
INTA_ATTRIBUTES@     DS  A      Address of a full word area                     
*                               which contains the attribute flags              
*                               for the service                    @L4A         
*                                                                               
INTA_USERID@         DS  A      Address of 9 byte area for the                  
*                               RACF userid (1 byte for the                     
*                               length followed by up to 8 bytes                
*                               for the RACF userid itself)        @L4A         
*                                                                               
INTA_ACEEP@          DS  A      Address of a full word input/                   
*                               output area for the ACEE address.  @L4A         
*                                                                               
INTA_APPL_ID@        DS  A      Address of an 9 byte area which                 
*                               specifies the name of the                       
*                               application being accessed by the               
*                               user. (1 byte for the length                    
*                               followed by up to 8 bytes for the               
*                               application name itself)           @L4A         
*                                                                               
INTA_PASSWORD@       DS  A      Address of an 9 byte area                       
*                               containing the user's password or               
*                               pass ticket. (1 byte for the                    
*                               length followed by up to 8 bytes                
*                               for the password itself)           @L4A         
*                                                                               
INTA_LOGSTRING@      DS  A      Address of a variable length area               
*                               containing the log string to be                 
*                               passed to RACROUTE (1 byte for the              
*                               length followed by up to 255 bytes              
*                               for the log string itself)         @L4A         
INTA_LAST_PARM_VER1  EQU X'80000000' - Variable length parameter list.          
*                                      This was the last parameter for          
*                                      plist version 1            @06A          
*                                                                               
INTA_CERTIFICATE@    DS  A      Address of a variable length area               
*                               containing the X.509 certificate                
*                               identifying the user (fullword                  
*                               length followed by the certificate              
*                               itself. Length of zero indicates                
*                               certificate not present)           @06A         
INTA_LAST_PARM_VER2  EQU X'80000000' - Variable length parameter list.          
*                                      This was the last parameter for          
*                                      plist version 2            @L5A          
*                                                                               
INTA_ENVR_IN@        DS  A      Address of an area containing the data          
*                               structure to recreate the security              
*                               environment                        @L5A         
INTA_LAST_PARM_ENVR_IN EQU X'80000000' - Variable length parameter list         
*                                      This could be one of the last            
*                                      parameters for plist ver 3 @L5A          
*                                                                               
INTA_ENVR_OUT@       DS  A      Address of an area containing the data          
*                               structure to retrieve the security              
*                               environment                        @L5A         
*                                                                               
INTA_LAST_PARM_ENVR_OUT EQU X'80000000' -Variable length parameter list         
*                                      This could be one of the last            
*                                      parameters for plist ver 3 @L6A          
*                                                                               
INTA_OUTA_STOR@      DS  A      Address of full word containing the             
*                               address of an OUSP.                @L6A         
INTA_LAST_PARM_OUTA_STOR EQU X'80000000' - Variable length                      
*                                      parameter list.  This                    
*                                      could be one of the last                 
*                                      parameters for plist ver 3  @L6A         
*                                                                               
INTA_X500_NAME_PTR   DS  A      Address of a full word containing               
*                               a pointer to the X500 name pair                 
*                               structure.  The structure is a 4-Byte           
*                               structure length, followed by 2 2-byte          
*                               lengths, followed by up to 255 bytes            
*                               of issuers name and up to 255 bytes             
*                               of subjects name.                  @0BC         
*                                                                               
INTA_LAST_X500_NAME  EQU X'80000000' - Variable length                          
*                                      parameter list.  This                    
*                                      could be one of the last                 
*                                      parameters for plist ver 4  @LDA         
*                                                                               
INTA_VARIABLE_LIST@  DS  A      Address of an area containing a                 
*                               criteria value data structure. The              
*                               structure is a 4-byte number of                 
*                               entries, followed by 1 or more entries          
*                               Each entry is an 8-byte name, followed          
*                               by a 4-byte value length, followed              
*                               by the value.                      @LDA         
*                                                                               
INTA_LAST_PARM_VAR_LIST  EQU X'80000000' - Variable length                      
*                                      parameter list.  This                    
*                                      could be one of the last                 
*                                      parameters for plist ver 4  @LDA         
*                                                                               
INTA_SECLABEL@       DS  A      Address of a 9 byte area containing a           
*                               security label data structure. The              
*                               structure is a 1-byte length followed           
*                               by up to 8 bytes for the security               
*                               label itself.                      @LTA         
*                                                                               
INTA_SERVAUTH@       DS  A      Address of a variable length area for           
*                               the SERVAUTH resource name. The                 
*                               structure is a 1-byte length followed           
*                               by up to 64 bytes for the SERVAUTH              
*                               name itself.                       @PBC         
*                                                                               
INTA_LAST_PARM_SERVAUTH  EQU X'80000000' - Variable length                      
*                                      parameter list.  This                    
*                                      could be one of the last                 
*                                      parameters for plist ver 5  @LTA         
*                                                                               
INTA_PHRASE@         DS  A      Address of a variable length area               
*                               containing the user's pass phrase,              
*                               structure is a 1-byte length followed           
*                               by the pass phrase                 @M8A         
*                                                                               
INTA_LAST_PARM_PHRASE EQU X'80000000' - Variable length parameter               
*                                       This could be the last                  
*                                       parameter                  @M8A         
*                                                                               
INTA_IDID_AREA@      DS  A      Address of a fullword containing the            
*                               address of a variable length area               
*                               containing distributed identity data            
*                               (IDID)                             @MQA         
*                                                                               
INTA_LAST_PARM_IDID  EQU X'80000000' - Variable length parameter                
*                                      This could be the last                   
*                                      parameter                   @MQA         
*                                                                               
INTA_ACEE2_ALET@     DS  A      Address of ALET for ACEE 2         @NPA         
*                               parameter                          @NPA         
*                                                                               
INTA_ACEE2P@         DS  A      Address of a full word input                    
*                               area for the ACEE 2 address.       @NPA         
*                                                                               
INTA_IDTA@           DS  A      Address of a fullword containing the            
*                               address of a variable length area               
*                               containing identity token area                  
*                               (IDTA)                             @NPA         
*                                                                               
INTA_LAST_PARM_IDTA  EQU X'80000000' - Variable length parameter                
*                                      This could be the last                   
*                                      parameter                   @NPA         
INTA_LAST_PARM       EQU X'80000000' - Variable length parameter list.          
*                                      This is the last parameter  @L4A         
*                                                                               
INTA_LEN             EQU *-INTA Constant - fixed length of INTA    @L4A         
*                                                                               
*   Function Code Constants                                                     
*                                                                               
INTA_CREATE          EQU X'01'  Constant - Create an ACEE          @L4A         
INTA_DELETE          EQU X'02'  Constant - Delete an ACEE and USP if            
*                                          applicable              @L4A         
INTA_PURGE           EQU X'03'  Constant - Purge space related ACEE             
*                                          management resources    @L4A         
INTA_REGSTR          EQU X'04'  Constant - Register a certificate for           
*                                          the current ACEE        @09A         
INTA_DEREGS          EQU X'05'  Constant - Deregister a certificate for         
*                                          the current ACEE        @09A         
INTA_QUERY           EQU X'06'  Constant - Query a certificate for an           
*                                          associated user ID      @09A         
INTA_GENIDT          EQU X'07'  Constant - Generate a IDT from an               
*                                          ACEE                    @NPA         
*                                                                               
*   Attributes Word Bit Mapping                                                 
*                                                                               
INTA_MANAGED         EQU X'80000000' - ACEE should be managed                   
*                                      (CREATE only)               @L4A         
INTA_USP             EQU X'40000000' - Initialize a USP for the ACEE            
*                                      (CREATE only)               @L4A         
INTA_TASK_LVL        EQU X'20000000' - For CREATE, ON indicates chain           
*                                      ACEE to the TCB. OFF indicates           
*                                      return ACEE address via the              
*                                      Acee_Ptr field.  For DELETE,             
*                                      ON indicates get ACEE address            
*                                      from the TCB. OFF indicates              
*                                      ACEE address passed through              
*                                      Acee_Ptr                    @L4A         
INTA_UNAUTH_CLNT     EQU X'10000000' - Unauthenticated Client      @P9C         
INTA_AUTH_CLNT       EQU X'08000000' - Authenticated Client        @P9C         
INTA_MSG_SUPP        EQU X'04000000' - ON to suppress RACF messages             
*                                      produced as a result of cre-             
*                                      ating an ACEE               @L4A         
INTA_ENVR_RET        EQU X'02000000' - ON to return an ENVR object              
*                                      for the ACEE (CREATE only)  @L5A         
INTA_NO_TIMEOUT      EQU X'01000000' - ON to create a no timeout                
*                                      managed ACEE (CREATE only)  @L6A         
INTA_OUSP_RET        EQU X'00800000' - ON to return an OUSP                     
*                                      (CREATE only)               @L6A         
INTA_X500_RET        EQU X'00400000' - ON to return a X500 name                 
*                                      pair (QUERY only)           @LDA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                ADMN ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = ADMN                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   RACF Administration interface                 *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*      list for the service which will create/delete/alter users      *         
*      and execute RACF commands.                                     *         
*                                                                  @04A         
***********************************************************************         
                     ORG   COMP_SERVR_PARMS   Follows common plist @04A         
*                                                                               
ADMN                 DS  0C     Mapping for ADMN                   @04A         
*                                                                               
*                                                                               
ADMN_FUNC@           DS  A      Address of 1 byte function code    @04A         
*                                                                               
ADMN_PARMLIST@       DS  A      Address of the function-specific                
*                               parameter list strcuture           @04A         
*                                                                               
ADMN_USERID@         DS  A      Address of 9 byte area for the                  
*                               RACF userid under whose authority               
*                               this service will execute (1 byte               
*                               for the length followed by up to 8              
*                               bytes for the userid itself)       @04A         
*                                                                               
ADMN_ACEEP@          DS  A      Address of a full word containing               
*                               the ACEE address under the authority            
*                               of which this service will execute @04A         
*                                                                               
ADMN_OUTPUT_SP@      DS  A      Address of a caller-supplied one byte           
*                               area containing the subpool in which            
*                               output messages should be obtained @04A         
*                                                                               
ADMN_OUTPUT_MSG@     DS  A      Address of a fullword containing                
*                               a pointer to the RACF command                   
*                               ouput, which is mapped below.                   
*                               The caller is responsible for                   
*                               freeing this storage.              @04A         
*                                                                               
*                                                                               
ADMN_LAST_PARM       EQU X'80000000' - Variable length parameter list.          
*                                      This is the last parameter  @04A         
*                                                                               
*                                                                               
ADMN_LEN             EQU *-ADMN Constant - fixed length of ADMN    @04A         
*                                                                               
*   Function Code Constants                                                     
*                                                                               
ADMN_ADD_USER        EQU X'01'  Constant - Add a user              @04A         
ADMN_DEL_USER        EQU X'02'  Constant - Delete a user           @04A         
ADMN_ALT_USER        EQU X'03'  Constant - Alter a user            @04A         
ADMN_LST_USER        EQU X'04'  Constant - List a user             @04A         
ADMN_RUN_COMD        EQU X'05'  Constant - Run a RACF command      @04A         
ADMN_ADD_GROUP       EQU X'06'  Constant - Add a group             @07A         
ADMN_DEL_GROUP       EQU X'07'  Constant - Delete a group          @07A         
ADMN_ALT_GROUP       EQU X'08'  Constant - Alter a group           @07A         
ADMN_LST_GROUP       EQU X'09'  Constant - List a group            @07A         
ADMN_CONNECT         EQU X'0A'  Constant - Connect user to group   @07A         
ADMN_REMOVE          EQU X'0B'  Constant - Remove user from group  @07A         
ADMN_ADD_GENRES      EQU X'0C'  Constant - Add a resource          @08A         
ADMN_DEL_GENRES      EQU X'0D'  Constant - Delete a resource       @08A         
ADMN_ALT_GENRES      EQU X'0E'  Constant - Alter a resource        @08A         
ADMN_LST_GENRES      EQU X'0F'  Constant - List a resource         @08A         
ADMN_ADD_DS          EQU X'10'  Constant - Add a dataset           @08A         
ADMN_DEL_DS          EQU X'11'  Constant - Delete a dataset        @08A         
ADMN_ALT_DS          EQU X'12'  Constant - Alter a dataset         @08A         
ADMN_LST_DS          EQU X'13'  Constant - List a dataset          @08A         
ADMN_PERMIT          EQU X'14'  Constant - Permit a user or group  @08A         
ADMN_ALT_SETR        EQU X'15'  Constant - Alter SETROPTS info     @LBA         
ADMN_XTR_SETR        EQU X'16'  Constant - SETROPTS R_admin ext    @LBA         
ADMN_UNL_SETR        EQU X'17'  Constant - SETROPTS SMF Unload ext @LBA         
ADMN_XTR_PWENV       EQU X'18'  Constant - Extract Pw Envelope     @LVA         
ADMN_XTR_USER        EQU X'19'  Constant - Extract User            @M4A         
ADMN_XTR_NEXT_USER   EQU X'1A'  Constant - Extract Next user       @M4A         
ADMN_XTR_GROUP       EQU X'1B'  Constant - Extract Group           @M4A         
ADMN_XTR_NEXT_GROUP  EQU X'1C'  Constant - Extract Next Group      @M4A         
ADMN_XTR_CONNECT     EQU X'1D'  Constant - Extract Connect         @M4A         
ADMN_XTR_PPENV       EQU X'1E'  Constant - Extract Phrase Envelope @MDA         
ADMN_XTR_RESOURCE    EQU X'1F'  Constant - Extract General Resource             
*                                          Profile                 @MNA         
ADMN_XTR_NEXT_RESOURCE EQU X'20' Constant - Extract Next General                
*                                           Resource Profile       @MNA         
ADMN_XTR_RRSF        EQU X'21'  Constant - Extract RRSF info       @N6A         
ADMN_XTR_DATASET     EQU X'22'  Constant - Extract dataset         @NJA         
ADMN_XTR_NEXT_DATASET EQU X'23' Constant - Extract next dataset    @NJA         
*                                                                               
*          ***** P L E A S E  N O T E *****                                     
*  When adding new function codes, update the following maximum                 
*  function code value, otherwise it will be flagged as not valid  @PFA         
ADMN_XTR_MAX_FUNCTION  EQU X'23' Constant - Maximum function code               
*                                           value                  @NJC         
*                                                                               
*******************************************************************@L7A         
*                                                                  @L7A         
*                UMAP ASSEMBLER DECLARATIONS                       @L7A         
*------------------------------------------------------------------@L7A         
*                                                                  @L7A         
*  DECLARATION NAME = UMAP                                         @L7A         
*                                                                  @L7A         
*  DESCRIPTIVE NAME =   RACF userid - R_UserMap                    @L7A         
*                                                                  @L7A         
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter @L7A         
*             list for the service to map an application userid to @L7A         
*             a RACF userid                                        @L7A         
*                                                                  @L7A         
*******************************************************************@L7A         
                     ORG   COMP_SERVR_PARMS   Follows common plist @L7A         
*                                                                  @L7A         
UMAP                 DS  0C     Mapping for UMAP                   @L7A         
*                                                                  @L7A         
*                                                                  @L7A         
UMAP_PARM_ALET@      DS  A      Address of ALET for remaining      @L7A         
*                               parameters                         @L7A         
UMAP_FUNC@           DS  A      Address of 2-byte function code    @L7A         
UMAP_OPTION_WORD@    DS  A      Reserved for future use            @L7A         
UMAP_USERID@         DS  A      Address of a 9-byte input/output   @L7A         
*                               for the RACF userid.  The first    @L7A         
*                               byte is the length followed by     @L7A         
*                               8 bytes for the RACF userid.       @L7A         
UMAP_CERTIFICATE@    DS  A      Address of an input area           @L7A         
*                               for a digital certificate.  First  @L7A         
*                               four bytes are a length followed   @L7A         
*                               by the digital certificate.        @L7A         
UMAP_APPL_USERID@    DS  A      Address of an input/output area for@L7A         
*                               an Application ID.  The first      @L7A         
*                               two bytes contains the length      @L7A         
*                               followed by 246 bytes for the      @L7A         
*                               Application ID.                    @L7A         
*                               If not specified on input, length  @L7A         
*                               must be zero                       @L7A         
UMAP_LAST_PARM  EQU X'80000000' Variable length parameter list     @L7A         
*                               This is the last parameter for     @MYC         
*                               the earlier version of UMAP        @MYC         
*                                                                  @L7A         
UMAP_LEN             EQU *-UMAP Constant - fixed length of         @MYC         
*                               pre-ID Propagation version of UMAP @MYC         
*                                                                  @L7A         
UMAP_ID_PROPAGATION       DS 0C Mapping for ID Propagation portion @MYA         
*                               of UMAP                            @MYA         
UMAP_DISTINGUISHED_NAME@  DS A  Address of an input area for the   @MYA         
*                               User's Distinguished Name.         @MYA         
*                               The first two bytes are the length @MYA         
*                               followed by the Distinguished Name @MYA         
*                               string                             @MYA         
UMAP_REGISTRY_NAME@       DS A  Address of an input area for the   @MYA         
*                               Registry/Realm Name.               @MYA         
*                               The first two bytes are the length @MYA         
*                               followed by the Registry/Realm     @MYA         
*                               Name string                        @MYA         
UMAP_IDPROP_LAST_PARM  EQU X'80000000'  Variable length parameter  @MYA         
*                                       list.  This indicates the  @MYA         
*                                       the last parameter for     @MYA         
*                                       this version of UMAP       @MYA         
UMAP_ID_PROPAGATION_LEN   EQU *-UMAP    Constant - fixed length    @MYA         
*                                       of ID Propagation portion  @MYA         
*                                       of UMAP                    @MYA         
UMAP_TOTAL_LEN       EQU *-UMAP  Constant - fixed length of UMAP   @MYA         
*                                                                  @MYA         
***********************************************************************         
*                                                                     *         
*                CDDL ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = CDDL                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   CDSA DataLib Service parameters               *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    *         
*             list for the CDSA Datalib callable service              *         
*******************************************************************@L8A         
                     ORG   COMP_SERVR_PARMS   Follows common plist @L8A         
*                                                                               
CDDL                 DS  0C     Mapping for CDDL                   @L8A         
*                                                                               
*                                                                               
CDDL_FUNC@           DS  A      Address of 1 byte input function                
*                               code.  Constants for the function               
*                               codes are supplied below           @L8A         
*                                                                               
CDDL_ATTRIBUTES@     DS  A      Address of full word of input                   
*                               attributes                         @L8A         
*                                                                               
CDDL_USERID@         DS  A      Address of a 9 byte input area                  
*                               for the RACF userid (1 byte for the             
*                               length followed by 8 bytes for                  
*                               the RACF userid itself).  A length              
*                               of 0 indicates the current user is              
*                               the ring owner                     @L8A         
*                                                                               
CDDL_RING@           DS  A      Address of a variable length input area         
*                               for the ring name (1 byte for the               
*                               length followed by up to 237 bytes for          
*                               the ring name).  Parameter ignored              
*                               for functions CheckStatus, AbortQuery,          
*                               and DataGetNext.                   @L8A         
*                                                                               
CDDL_VERSION@        DS  A      Address of a 4 byte area containing the         
*                               input version number for function               
*                               specific parameter list pointed to by           
*                               CDDL_PARMLIST@.  Must be set to 0. @L8A         
*                                                                               
CDDL_PARMLIST@       DS  A      Address of the input function specific          
*                               parameter list                     @L8A         
CDDL_LAST_PARM  EQU X'80000000' Variable length parameter list     @L8A         
*                               This is the last parameter         @L8A         
CDDL_LEN           EQU *-CDDL   Constant - fixed length of CDDL    @L8A         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                               
*   Function Code Constants                                                     
*                                                                               
*---------------------------------------------------------------------*         
CDDL_DATA_GET_FIRST  EQU X'01'  DataGetFirst - locate and return                
*                               the first certificate in the ring               
*                               matching the specified criteria    @L8A         
CDDL_DATA_GET_NEXT   EQU X'02'  DataGetNext - locate and return the             
*                               next certificate in the ring matching           
*                               the same criteria specified in the              
*                               previous DataGetFirst/DataGetNext               
*                               call                               @L8A         
CDDL_DATA_ABORT      EQU X'03'  DataAbortQuery - free resources                 
*                               from previous DataGetFirst or                   
*                               DataGetNext call                   @L8A         
CDDL_CHECK_STATUS    EQU X'04'  CheckStatus - return the TRUST/NOTRUST          
*                               status for a given certificate                  
CDDL_GET_UPDATE_CODE EQU X'05'  GetUpdateCode - returns the sequence            
*                               number for a ring                  @LCA         
CDDL_INC_SER_NUM     EQU X'06'  IncSerialNum - Increments the Serial            
*                               Number for a Digital Certificate   @LFA         
*                                          associated user ID      @09A         
CDDL_NEW_RING        EQU X'07'  Create a new key ring or remove all             
*                               certificates from an existing key               
*                               ring                               @MFA         
CDDL_DATA_PUT        EQU X'08'  Add a certificate to RACF and connect           
*                               it to a key ring                   @MFA         
CDDL_DATA_REMOVE     EQU X'09'  Remove a cert from a key ring and               
*                               optionally delete it from RACF     @MFA         
CDDL_DEL_RING        EQU X'0A'  Delete a key ring                  @MFA         
CDDL_DATA_REFRESH    EQU X'0B'  Refresh the DIGTCERT class         @MIC         
CDDL_DATA_ALTER      EQU X'0C'  Change the status and/or the label of           
*                               a certificate                      @N9A         
CDDL_GET_RING_INFO   EQU X'0D'  Return key ring information        @NBA         
*                                                                               
*   Attributes Word Bit Mapping (pointed to by CDDL_ATTRIBUTES@)  @D2A          
*                                                                               
CDDL_ATT_ALL_KEYTYPES EQU X'80000000' -      Valid only for                     
*                                            DataGetFirst and                   
*                                            DataGetNext                        
*                                     - OFF- private key type returned          
*                                            will be CDDL_ICSF (for             
*                                            ICSF or PCICC) or                  
*                                            CDDL_PKCS1 (for all                
*                                            others)              @MWC          
*                                     - ON - private key type returned          
*                                            will be CDDL_ICSF,                 
*                                            CDDL_PKCS1,                        
*                                            CDDL_PCICC,                        
*                                            CDDL_DSA,                          
*                                            CDDL_DH, CDDL_ECC,                 
*                                            CDDL_ECC_ICSF,                     
*                                            CDDL_RSA_TKDS,                     
*                                            CDDL_ECC_TKDS,                     
*                                            CDDL_DSA_TKDS         @N3C         
*                                                                               
CDDL_ATT_REUSE_RING   EQU X'80000000' - Valid for function NewRing              
*                                       OFF: Indicates a new key ring           
*                                            is to be created (don't            
*                                            reuse existing ring)               
*                                       ON: Indicates that if ring              
*                                           exists, all certs are               
*                                           removed.               @MFA         
*                                                                               
CDDL_ATT_TRUST        EQU X'80000000' - Valid for DataPut                       
*                                       and DataAlter function                  
*                                       OFF: Indicate RACF will                 
*                                            determine status of                
*                                            certificate.                       
*                                       ON: Indicates that the status           
*                                           of the added certificate            
*                                           should be set to TRUST @N9C         
*                                                                               
CDDL_ATT_HIGHTRUST    EQU X'40000000' - Valid for DataPut                       
*                                       and DataAlter function                  
*                                       OFF: Indicate RACF will                 
*                                            determine status of                
*                                            certificate.                       
*                                       ON: Indicates that the status           
*                                           of the added certificate            
*                                           should be set to HIGHTRUST          
*                                                                  @N9C         
*                                                                               
CDDL_ATT_NOTRUST      EQU X'20000000' - Valid for DataPut                       
*                                       and DataAlter function                  
*                                       OFF: Indicate RACF will                 
*                                            determine status of                
*                                            certificate.                       
*                                       ON: Indicates that the status           
*                                           of the added certificate            
*                                           should be set to NOTRUST            
*                                                                  @N9A         
*                                                                               
CDDL_ATT_DEL_CERT_TOO EQU X'80000000' - Valid for DataRemove function           
*                                       OFF: Indicates the certificate          
*                                            is to be removed from the          
*                                            key ring only                      
*                                       ON: Indicates the certificate           
*                                           is to be deleted from RACF          
*                                           in sddition to being                
*                                           removed from the keyring            
*                                           as long as it is not                
*                                           connected to any other key          
*                                           rings                  @MFA         
CDDL_ATT_DEL_CERT_ALLRINGS EQU X'40000000' - Valid for DataRemove               
*                                       OFF: Indicates the certificate          
*                                            is not to be deleted from          
*                                            RACF if it is connected            
*                                            to other key rings                 
*                                       ON: Indicates the certificate           
*                                           is to be deleted from RACF          
*                                           even if it is connected             
*                                           to other key rings     @N9A         
CDDL_ATT_DEL_CERT_FORCE EQU X'20000000' - Valid for DataRemove                  
*                                       OFF: Indicates the certificate          
*                                            is not to be deleted from          
*                                            RACF if has been used to           
*                                            generate a request                 
*                                       ON: Indicates the certificate           
*                                           is to be deleted from RACF          
*                                           even if it has been used to         
*                                           generate a request     @N9A         
CDDL_ATT_SKIPAUTH     EQU X'20000000' - Valid for DataGetFirst,                 
*                                           DataGetNext, CheckStatus            
*                                           and GetUpdateCode functions         
*                                       OFF: Indicate RACF                      
*                                            authorization check need           
*                                            to be performed                    
*                                       ON: Indicate RACF authorization         
*                                           check will be bypassed for          
*                                           supervisor state or system          
*                                           key caller when request is          
*                                           for a RACF key ring (not            
*                                           applicable to an ICSF               
*                                           token)                 @MRC         
CDDL_ATT_SET_MIN_SERIAL EQU X'80000000' - Valid for IncSerialNum                
*                                           function                            
*                                       OFF: Indicate Serial Number is          
*                                            to be incremented by one.          
*                                       ON: Indicate the Serial number          
*                                           will be incremented to the          
*                                           input serial number.   @MVA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                KERBEROS ASSEMBLER DECLARATIONS                      *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = KERB                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   Kerberos retrieve or set parameters           *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the R_kerbinfo callable service                *         
*******************************************************************@LEA         
                     ORG   COMP_SERVR_PARMS   Follows common plist @LEA         
*                                                                               
KERB                 DS  0C     Mapping for KERB                   @LEA         
*                                                                               
*                                                                               
KERB_FUNC@           DS  A      Address of 1 byte input function                
*                               code.  Constants for the function               
*                               codes are supplied below           @LEA         
*                                                                               
KERB_RACF_NAME@      DS  A      Address of a 9 byte area containing a           
*                               RACF name. x'00' in first byte if not           
*                               specified                          @LEA         
*                                                                               
KERB_NAME@           DS  A      Address of a 240 byte area containing           
*                               Kerberos Principal name. x'00' in first         
*                               byte if not specified              @LEA         
*                                                                               
KERB_DATA_AREA@      DS  A      Address of storage to be used for               
*                               fields returned on a retrieve      @LEA         
*                                                                               
KERB_LAST_PARM       EQU X'80000000' - Variable length paramater list           
*                                      This is the last parameter  @LEA         
*                                                                               
KERB_LEN             EQU *-KERB Constant - fixed length of KERB    @LEA         
*---------------------------------------------------------------------*         
*                                                                               
*   Function code constants                                                     
*                                                                               
*---------------------------------------------------------------------*         
KERB_GET_USER        EQU X'01'  Constant - Get user  information   @P7C         
KERB_UPDATE_REVOKECT EQU X'02'  Constant - Update user revoke count@P7C         
KERB_RESET_REVOKECT  EQU X'03'  Constant - Reset user revoke count @P7C         
KERB_GET_REALM       EQU X'04'  Constant - Get realm information   @P7C         
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*                         ASSEMBLER DECLARATIONS                      *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = TKTS                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =  Parse or Extract from Kerberos Ticket          *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the R_ticketserv callable service              *         
*******************************************************************@LHA         
                     ORG   COMP_SERVR_PARMS   Follows common plist @LHA         
*                                                                               
TKTS                 DS  0C     Mapping for TKTS                   @LHA         
*                                                                               
*                                                                               
TKTS_PARM_ALET@      DS  A      Address of ALET for remaining      @LHA         
*                               parameters                         @LHA         
TKTS_FUNC@           DS  A      Address of 2 byte input function                
*                               code.  Constants for the function               
*                               codes are supplied below           @LHA         
*                                                                               
TKTS_OPTION_WORD@    DS  A      Address of a full word containing               
*                               binary zeros. The area pointed to by            
*                               this parameter is reserved for future           
*                               use.                               @LHA         
*                                                                               
TKTS_CRED_AREA@      DS  A      Address of an area consisting of a              
*                               2 byte length field followed by a               
*                               ticket, or passticket to be evaluated.          
*                                                                               
*                               For a passticket generation                     
*                               operation, this must be a preallocated          
*                               buffer which will be filled in with a           
*                               2 byte length field and 8 byte                  
*                               passticket value.                  @LWC         
*                                                                               
TKTS_OPTIONS@        DS  A      Address of a                                    
*                               binary bit string which identifies the          
*                               function specific processing to be              
*                               performed.  This parameter is unused            
*                               in the Kerberos return principal                
*                               function.                                       
*                               For passticket function, the bit string         
*                               is 4 bytes long.  If its value is:              
*                                 1: a passticket is generated and              
*                                    stored in TKTS_CRED_AREA.                  
*                                 2: the passticket specified in                
*                                    TKTS_CRED_AREA@ is evaluated  @LWC         
*                                 3: same as 2, but with additional             
*                                    diagnostic reason codes       @NNA         
*                                 4: same as 1, but with additional             
*                                    diagnostic reason codes       @NNA         
*                                                                               
TKTS_PRIN_USERID@    DS  A      For the Kerberos return principal               
*                               function, this is the                           
*                               address of a pre-allocated storage area         
*                               containing 242 bytes which is the               
*                               output principal name preceded by a             
*                               2 byte length field.                            
*                               For a passticket operation, this is             
*                               a 2 byte length field, followed by a            
*                               1-8 bytes userid.                  @LWC         
*                                                                               
TKTS_LAST_PARM       EQU X'80000000' - Variable length parameter list           
*                                      This is the last parameter  @LHA         
TKTS_LEN             EQU *-TKTS Constant - fixed length of pre 17               
*                                           TKTS                   @LWC         
*                                                                               
TKTS_APPLICATION@    DS   A     Address of area containing 2 byte len           
*                               followed by 1-8 byte application name           
*                               for use with passticket services.  @LWA         
TKTS_V17_LEN         EQU *-TKTS Constant - fixed len of v17 TKTS   @LWA         
TKTS_TOTAL_LEN       EQU *-TKTS Constant - fixed length of TKTS    @LWA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                               
*   Function code constants                                                     
*                                                                               
*---------------------------------------------------------------------*         
TKTS_RETURN_NAME     EQU X'0001'  Constant - Parse and return Kerberos          
*                                            principal name        @LHA         
TKTS_PASSTICKET      EQU X'0003'  Constant - Passticket operation. @LWA         
*                                                                               
*******************************************************************@0AA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                PKIS ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = PKIS                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = PKIS Service parameters                         *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the PKIS callable service R_PKIServ            *         
*******************************************************************@0AA         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @0AA         
*                                                                               
PKIS                 DS  0C     Mapping for PKIS                   @0AA         
*                                                                               
PKIS_NUM_PARMS@      DS  A      Address of a Four-Byte variable                 
*                               that contains the number of                     
*                               parameters that follow in the                   
*                               non-request specific portion of                 
*                               the R_PKIServ callable service                  
*                               Parameter List                     @0AA         
*                                                                               
PKIS_FUNC@           DS  A      Address of a Two-Byte variable                  
*                               that contains the code of the                   
*                               requested function.  Constants                  
*                               for the function codes codes                    
*                               are declared below                 @0AA         
*                                                                               
PKIS_ATTRIBUTES@     DS  A      Address of a Four-Byte variable                 
*                               that contains attribute flags                   
*                               for the service                    @0AA         
*                                                                               
PKIS_LOG_STRING@     DS  A      Address of a Variable-Length area               
*                               that contains the LOG string to                 
*                               be passed to RACROUTE (1 byte for               
*                               the length followed by up to 255                
*                               bytes for the LOG string itself)   @0AA         
*                                                                               
PKIS_PARM_VER@       DS  A      Address of a Four-Byte variable                 
*                               that contains the version number                
*                               of the Function Specific                        
*                               Parameter List (PKIS_FUNC_PARML@)  @0AA         
*                                                                               
PKIS_FUNC_PARML@     DS  A      Address of the FSPL -                           
*                               Function Specific Parameter List                
*                               (FSPL = the Parameter List that                 
*                                       corresponds to the                      
*                                       Function Code)             @0AA         
*                                                                               
PKIS_LAST_PARM  EQU X'80000000' Variable length parameter list                  
*                               This is the last parameter         @0AA         
*                                                                               
PKIS_LEN           EQU *-PKIS   Constant - fixed length of PKIS    @0AA         
*                                                                               
PKIS_CA_DOMAIN@      DS  A      Address of the name of the PKI Services         
*                               certificate authority instance to be            
*                               invoked                            @M7A         
*                                                                               
PKIS_LEN_Z8        EQU *-PKIS   Constant - fixed length of PKIS for             
*                               z/OS release 8                     @M7A         
PKIS_TOT_LEN       EQU *-PKIS   Constant - fixed length of PKIS    @M7A         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   PKIS Function Code Constants                                   @0AA         
*                                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
PKIS_GENCERT       EQU X'0001'  GENCERT Function of RACDCERT                    
*                               Generates a basic X.509 V3                      
*                               digital certificate                @0AA         
*                                                                               
PKIS_EXPORT        EQU X'0002'  EXPORT  Function of RACDCERT                    
*                               Extracts a digital certificate                  
*                               by Certificate Request ID          @0AA         
*                                                                               
PKIS_QUERYREQS     EQU X'0003'  QUERYREQS Function of PKI SERVICES              
*                               Query certificate requests         @LJA         
*                                                                               
PKIS_REQDETAILS    EQU X'0004'  REQDETAILS Function of PKI SERVICES             
*                               Extract the details of a single                 
*                               Certificate request                @LJA         
*                                                                               
PKIS_MODIFYREQS    EQU X'0005'  MODIFYREQS Function of PKI SERVICES             
*                               Modify one or more certificate                  
*                               requests                           @LJA         
*                                                                               
PKIS_QUERYCERTS    EQU X'0006'  QUERYCERTS Function of PKI SERVICES             
*                               Query issued certificates          @LJA         
*                                                                               
PKIS_CERTDETAILS   EQU X'0007'  CERTDETAILS Function of PKI SERVICES            
*                               Extract the details of a single                 
*                               issued Certificate                 @LJA         
*                                                                               
PKIS_MODIFYCERTS   EQU X'0008'  MODIFYCERTS Function of PKI SERVICES            
*                               Modify one or more issued                       
*                               certificates                       @LJA         
*                                                                               
PKIS_REQCERT       EQU X'0009'  REQCERT Function of PKI SERVICES                
*                               Request a digital certificate pending           
*                               the approval of an administrator   @LJA         
*                                                                               
PKIS_VERIFY        EQU X'000A'  VERIFY Function of PKI SERVICES                 
*                               Request certificate verification   @LKA         
*                                                                               
PKIS_REVOKE        EQU X'000B'  REVOKE Function of PKI SERVICES                 
*                               Request certificate revocation     @LKA         
*                                                                               
PKIS_GENRENEW      EQU X'000C'  GENRENEW Function of PKI SERVICES               
*                               Request auto-approved certificate               
*                               renewal.                           @LKA         
*                                                                               
PKIS_REQRENEW      EQU X'000D'  REQRENEW Function of PKI SERVICES               
*                               Request certificate renewal        @LKA         
*                                                                               
PKIS_RESPOND       EQU X'000E'  RESPOND Function of PKI SERVICES                
*                               Response from                                   
*                               OCSP Responder PKI Daemon          @M3A         
*                                                                               
PKIS_SCEPREQ       EQU X'000F'  SCEPREQ Function of PKI Services                
*                               Submit a request to PKI Services using          
*                               SCEP                               @M7A         
*                                                                               
PKIS_PREREGISTER   EQU X'0010'  PREREGISTER Function of PKI Services            
*                               Preregister a SCEP user            @M7A         
*                                                                               
PKIS_QRECOVER      EQU X'0011'  QRECOVER Function of PKI Services               
*                               Query for recovering a certificate              
*                               and private key                    @MUA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   Certificate Request Attribute mapping                          @LPA         
*                                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
PKIS_SYNCH_CREATE EQU X'80000000' - Control is not returned until the           
*                                   certificate has been generated @LPA         
*                                                                               
*******************************************************************@0AA         
*                                                                     *         
*                    CACH ASSEMBLER DECLARATIONS                   @LLA         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = CACH                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = R_cacheserv                                     *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the R_cacheserv callable service               *         
*******************************************************************@LLA         
                     ORG   COMP_SERVR_PARMS   Follows common plist @LLA         
*                                                                               
CACH                 DS  0C     Mapping for CACH                   @LLA         
*                                                                               
*                                                                               
CACH_PARM_ALET@      DS  A      Address of ALET for remaining                   
*                               parameters not including the                    
*                               ACEE_ALET and ACEE parameters.     @LLA         
CACH_NUM_PARMS@      DS  A      Address of fullword containing the              
*                               number of remaining parameters                  
*                               including this one                 @LLA         
CACH_FUNC@           DS  A      Address of 2 byte input function                
*                               code.  Constants for the function               
*                               codes are supplied below           @LLA         
CACH_OPTION@         DS  A      Address of 2 byte field containing an           
*                               option value that further defines               
*                               the function. Constants for the option          
*                               values are supplied below          @LLA         
CACH_VERSION@        DS  A      Address of the data field containing            
*                               the version (level) of the cache   @LLA         
*                                                                               
CACH_VERSION_LEN@    DS  A      Address of a fullword containing the            
*                               length of the version field        @LLA         
*                                                                               
CACH_NAME@           DS  A      Address of a data field containing the          
*                               name identifying the cache         @LLA         
*                                                                               
CACH_RECNAME_PTR@     DS  A     Address of a pointer to the name of the         
*                               record to be added or fetched      @LLA         
*                                                                               
CACH_RECNAME_LEN@    DS A       Address of a fullword containing the            
*                               length of the record name          @LLA         
*                                                                               
CACH_DATA_PTR@       DS  A      Address of a pointer to the data                
*                               associated with this record        @LLA         
*                                                                               
CACH_DATA_LEN@       DS  A      Address of a fullword containing   @LLA         
*                               the length of the data             @LLA         
*                                                                               
CACH_LEN             EQU *-CACH   Constant - min   length of CACH  @LLA         
CACH_DATA_TIMEOUT@   DS A       Address of a fullword              @M9A         
*                               containing the number of           @M9A         
*                               seconds before the data            @M9A         
*                               times out                          @M9A         
*                                                                  @MAM         
CACH_SRC_PTR@       DS  A       Address of a pointer to a source   @MBC         
*                               record.                            @MBC         
*                                                                  @M9A         
CACH_SRC_LEN@       DS  A       Address of a fullword containing   @MBC         
*                               the length of a source  record     @MBC         
*                                                                               
CACH_REF_TIMEOUT@    DS A       Address of a fullword              @M9A         
*                               containing the number of           @M9A         
*                               seconds before the reference       @M9A         
*                               times out                          @M9A         
*                                                                               
CACH_REF_USERID@     DS A       Address of an 8 byte area          @M9A         
*                               containing a reference user ID     @M9A         
*                                                                               
CACH_REF@            DS  A      Address of an 8 byte area          @M9A         
*                               containing a reference value       @M9A         
*                                                                               
CACH_SUBPOOL@        DS  A      Address of a 1 byte area           @M9A         
*                               containing the subpool for         @M9A         
*                               output areas                       @M9A         
*                                                                               
CACH_ACEE_ALET@      DS  A      Address of ALET for ACEE parameter @MAA         
*                                                                  @MAA         
CACH_ACEE@           DS  A      Address of an  ACEE                @MAM         
*                                                                  @MAM         
CACH_LEN_V18         EQU *-CACH   Constant - Len of CACH for V18   @M9A         
*                                                                  @MQA         
CACH_ICRX@          DS  A       Address of a fullword containing   @MQA         
*                               an ICRX address                    @MQA         
*                                                                  @MQA         
CACH_ICRX_LEN@      DS  A       Address of a fullword containing   @MQA         
*                               the length of the ICRX             @MQA         
*                                                                  @MQA         
CACH_LEN_V1R11      EQU *-CACH  Constant - Len of CACH for FC7     @MQA         
*                                                                  @MQA         
*---------------------------------------------------------------------*         
*                                                                               
*   Function code constants                                                     
*                                                                               
*---------------------------------------------------------------------*         
CACH_START           EQU X'0001'  Constant - Start a new cache     @LLA         
*                                                                               
CACH_ADD             EQU X'0002'  Constant - Add a record to the cache          
*                                                                  @LLA         
*                                                                               
CACH_END             EQU X'0003'  Constant - Finish a cache. Make  @LLA         
*                                            it available and      @LLA         
*                                            delete any previous   @LLA         
*                                            cache                 @LLA         
CACH_FETCH           EQU X'0004'  Constant - Fetch a record from   @LLA         
*                                            the cache.            @LLA         
*                                                                               
CACH_DELETE          EQU X'0005'  Constant - Delete the cache      @LLA         
*                                                                               
CACH_ICTX            EQU X'0006'  Constant - Manage a read/write                
*                                            cache.                @M9A         
CACH_EXTENDED        EQU X'0007'  Constant - Manage an extended                 
*                                            read/write cache      @MQA         
*---------------------------------------------------------------------*         
*                                                                               
*   Option value constants - the meaning of each option varies with             
*                            the function code                                  
*---------------------------------------------------------------------*         
CACH_OPT1            EQU X'0001' Constant for Option 1                          
CACH_OPT2            EQU X'0002' Constant for Option 2                          
CACH_OPT3            EQU X'0003' Constant for Option 3                          
* Option values for function code 6 (distributed ID support)       @M9A         
CACH_STORE           EQU X'0001' Store data in the read/write                   
*                                 cache                            @M9A         
CACH_LOCATE          EQU X'0002' Locate an application data record              
*                                 in the read/write cache          @M9A         
CACH_RETRIEVE        EQU X'0003' Retrieve data from the read/write              
*                                 cache                            @M9A         
CACH_RETAPPL         EQU X'0004' Retrieve application data                      
*                                 from the read/write cache        @M9A         
CACH_REMOVE          EQU X'0005' Remove a record from the                       
*                                 read/write cache                 @M9A         
CACH_REMEXP          EQU X'0006' Remove expired records from the                
*                                 read/write cache                 @M9A         
CACH_DESTROY         EQU X'0007' Destroy the read/write cache      @M9A         
*                                                                               
* Option values for function code 7 (ICRX support)                 @MQA         
CACH_EXT_STORE       EQU X'0001' Store data in the read/write                   
*                                 cache                            @MQA         
CACH_EXT_RETRVAPPL   EQU X'0002' Retrieve data from the read/write              
*                                 cache                            @MQA         
CACH_EXT_REMOVE      EQU X'0003' Remove data from the read/write                
*                                 cache                            @MQA         
CACH_EXT_STORE_MULT  EQU X'0004' Store data in the read/write                   
*                                 cache, return reusable ICRX      @N1A         
CACH_EXT_ICRX_VAL    EQU X'0005' Validate an ICRX                  @N2A         
*                                                                               
*******************************************************************@LLA         
*                                                                     *         
*                    PRXY ASSEMBLER DECLARATIONS                   @LMA         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = PRXY                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = R_proxyserv                                     *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the R_proxyserv callable service               *         
*******************************************************************@LMA         
                     ORG   COMP_SERVR_PARMS   Follows common plist @LMA         
*                                                                               
PRXY                 DS  0C     Mapping for PRXY                   @LMA         
*                                                                               
PRXY_PARM_ALET@      DS  A      Address of ALET for remaining                   
*                               parameters                         @LMA         
*                                                                               
PRXY_FUNC@           DS  A      Address of 2 byte input function                
*                               code.  Constants for the function               
*                               codes are supplied below           @LMA         
*                                                                               
PRXY_LDAP_HOST@      DS  A      Address of an area containing a                 
*                               4 byte length followed by an EBCDIC             
*                               URL for the LDAP bind              @LMA         
*                                                                               
PRXY_BIND_DN@        DS  A      Address of an area containing a                 
*                               4 byte length followed by an EBCDIC             
*                               DN for the LDAP bind               @LMA         
*                                                                               
PRXY_BIND_PW@        DS  A      Address of an area containing a                 
*                               4 byte length followed by an EBCDIC             
*                               password for the LDAP bind         @LMA         
*                                                                               
PRXY_USERID@         DS  A      Address of a 9 byte area containing             
*                               a 1 byte length followed by up to               
*                               8 EBCDIC characters for a host user             
*                               ID                                 @LMA         
*                                                                               
PRXY_USERDN@         DS  A      Address of an area containing a                 
*                               4 byte length followed by an EBCDIC             
*                               string naming the base DN of an                 
*                               LDAP subtree                       @LMA         
*                                                                               
PRXY_RESULTS@        DS  A      Address of a pointer to the                     
*                               results                            @LMA         
PRXY_LAST_PARM  EQU X'80000000' Variable length parameter list                  
PRXY_LAST_PARM0 EQU X'80000000' This is the last parameter for                  
*                               original edition of service        @LVA         
PRXY_LEN             EQU *-PRXY Constant - Original PRXY length    @LVC         
PRXY_LEN0            EQU *-PRXY Constant - Original PRXY length    @LVA         
PRXY_FUNC_VERSION@   DS  A      Address of a 4 byte version number for          
*                               the function specific parm list    @LVA         
                     ORG PRXY_FUNC_VERSION@                        @PDA         
PRXY_FUNC_PARMLIST_VERSION@  DS  A  Alias for 4 byte version number for         
*                                   function specified parm list   @PDA         
PRXY_FUNC_PARMLIST@  DS  A      Address of the function specific                
*                               parameter list. Mapping for this plist          
*                               exists farther down in this file.  @LVA         
PRXY_LDAP_ERROR@     DS  A      Address of a 260 byte output area               
*                               containing a 4 byte length followed             
*                               by an EBCDIC error message         @LVA         
PRXY_LAST_PARM1 EQU X'80000000' Last parameter for first update                 
*                               of this service                    @LVA         
PRXY_LEN1            EQU *-PRXY Constant - Second PRXY length      @LVA         
*---------------------------------------------------------------------*         
*                                                                               
*   Function code constants                                                     
*                                                                               
*---------------------------------------------------------------------*         
PRXY_GETDN           EQU X'0001'  Constant - Get DN from LDAP      @LMA         
*                                                                               
PRXY_GETPRIV         EQU X'0002'  Constant - Get privilege information          
*                                            from LDAP             @LMA         
PRXY_CHANGELOG       EQU X'0003'  Constant - Create LDAP change log             
*                                            entry                 @LVA         
*                                                                               
*******************************************************************@LIA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                RACL ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = RACL                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = RACL Service parameters                         *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the RACL callable service R_SetFACL            *         
*******************************************************************@LIA         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @LIA         
*                                                                               
RACL                 DS  0C     Mapping for RACL                   @LIA         
*                                                                               
RACL_EDIT_ALET@      DS  A      Address of the ALET for the                     
*                               EDIT structure                     @LIA         
*                                                                               
RACL_EDIT@           DS  A      Address of the EDIT structure      @LIA         
*                                                                               
RACL_EDITLEN_ALET@   DS  A      Address of the ALET for the                     
*                               EDIT structure length              @LIA         
*                                                                               
RACL_EDITLEN@        DS  A      Address of the length of the                    
*                               RACL_Edit structure                @LIA         
*                                                                               
RACL_FSP_ALET@       DS  A      Address of the ALET for the FSP    @LIA         
*                                                                               
RACL_FSP@            DS  A      Address of the FSP structure       @LIA         
*                                                                               
RACL_FID_ALET@       DS  A      Address of the ALET for the                     
*                               File ID                            @LIA         
*                                                                               
RACL_FID@            DS  A      Address of the File ID which is                 
*                               a 16-byte area that contains a                  
*                               unique ID of the file              @LIA         
*                                                                               
RACL_CRED_ALET@      DS  A      Address of the ALET for the                     
*                               CRED structure                     @LIA         
*                                                                               
RACL_CRED@           DS  A      Address of the CRED structure      @LIA         
*                                                                               
RACL_LEN           EQU *-RACL   Constant - fixed length of RACL    @LIA         
*                                                                               
RACL_LAST_PARM     EQU X'80000000' - Variable length parameter list             
*                                    This is the last parameter    @LNA         
*                                                                               
*******************************************************************@LIA         
*                                                                               
*******************************************************************@LRA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                SECL ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = SECL                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = SECL Service parameters                         *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the callable service R_SetFSecl                *         
*******************************************************************@LRA         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @LRA         
*                                                                               
SECL                 DS  0C     Mapping for SECL                   @LRA         
*                                                                               
SECL_FSP_ALET@       DS  A      Address of the ALET for the FSP    @LRA         
*                                                                               
SECL_FSP@            DS  A      Address of the FSP structure       @LRA         
*                                                                               
SECL_FID_ALET@       DS  A      Address of the ALET for the                     
*                               File ID                            @LRA         
*                                                                               
SECL_FID@            DS  A      Address of the File ID which is                 
*                               a 16-byte area that contains a                  
*                               unique ID of the file              @LRA         
*                                                                               
SECL_CRED_ALET@      DS  A      Address of the ALET for the                     
*                               CRED structure                     @LRA         
*                                                                               
SECL_CRED@           DS  A      Address of the CRED structure      @LRA         
*                                                                               
SECL_LEN           EQU *-SECL   Constant - fixed length of SECL    @LRA         
*                                                                               
*******************************************************************@LRA         
*                                                                               
*******************************************************************@LSA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                WPRV ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = WPRV                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = WPRV Service parameters                         *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the callable service R_WritePriv               *         
*******************************************************************@LSA         
*                                                                               
                     ORG   COMP_SERVR_PARMS   Follows common plist @LSA         
*                                                                               
WPRV                 DS  0C     Mapping for WPRV                   @LSA         
*                                                                               
WPRV_FUNC@           DS  A      Address of the Function Code       @LSA         
*                                                                               
WPRV_ACEE_ALET@      DS  A      Address of the ALET for the                     
*                               ACEE structure                     @LSA         
*                                                                               
WPRV_ACEE@           DS  A      Address of the ACEE structure      @LSA         
*                                                                               
WPRV_LEN           EQU *-WPRV   Constant - fixed length of WPRV    @LSA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
* WPRV R_WritePriv Function Constants                             @PAC*         
*                                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
WPRV_Query_WriteDown_Setting   EQU X'00'                           @PAC         
WPRV_Activate_WriteDown        EQU X'01'                           @PAC         
WPRV_InActivate_WriteDown      EQU X'02'                           @PAC         
WPRV_Reset_WriteDown           EQU X'03'                           @PAC         
*                                                                               
*******************************************************************@LSA         
*                                                                     *         
*                    RAUX ASSEMBLER DECLARATIONS                   @LXA         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = RAUX                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = R_auditx                                        *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the R_auditx callable service                  *         
*******************************************************************@LXA         
                     ORG   COMP_SERVR_PARMS   Follows common plist @LXA         
*                                                                               
RAUX                   DS  0C   Mapping for RAUX                   @LXA         
*                                                                               
RAUX_NUM_PARMS@        DS  A    Address of a full word containing               
*                               the total number of parameters                  
*                               included in COMP and RAUX          @LXA         
*                                                                               
RAUX_ACEE_ALET@        DS  A    Address of ALET for the ACEE                    
*                               structure                          @LXA         
*                                                                               
RAUX_ACEE@             DS  A    Address of the ACEE structure      @M2C         
*                                                                               
RAUX_PARM_ALET@        DS  A    Address of ALET for the remaining               
*                               parameters                         @LXA         
*                                                                               
RAUX_OPTION_WORD@      DS  A    Address of a full word containing               
*                               binary zeros. The area pointed to               
*                               by this parameter is reserved for               
*                               future use.                        @LXA         
*                                                                               
RAUX_LINK_VALUE@       DS  A    Address of an 8 byte value used to @M2C         
*                               mark a set of related SMF records  @LXA         
*                                                                               
RAUX_ATTRIBUTES@       DS  A    Address of a full word containing               
*                               flag values                        @LXA         
*                                                                               
RAUX_COMPONENT@        DS  A    Address of an area containing a                 
*                               4 byte length followed by a                     
*                               component or product name          @PDC         
*                                                                               
RAUX_FMID@             DS  A    Address of a 7 byte area containing             
*                               the FMID for the component or                   
*                               product                            @LXA         
*                                                                               
RAUX_SUBTYPE@          DS  A    Address of a full word containing               
*                               the SMF 83 record subtype          @LXA         
*                                                                               
RAUX_EVENT@            DS  A    Address of a full word containing               
*                               the event code                     @LXA         
*                                                                               
RAUX_QUALIFIER@        DS  A    Address of a full word containing               
*                               the qualifier for the event code   @LXA         
*                                                                               
RAUX_CLASS@            DS  A    Address of an 8 byte area                       
*                               containing a class name            @LXA         
*                                                                               
RAUX_RESOURCE@         DS  A    Address of an area containing a                 
*                               4 byte length followed by the                   
*                               resource name which is covered by               
*                               a profile defined in the class                  
*                               above                              @LXA         
*                                                                               
RAUX_LOG_STRING@       DS  A    Address of an area containing a                 
*                               4 byte length followed by text to               
*                               be written to the SMF record       @LXA         
*                                                                               
RAUX_RELOCATE_COUNT@   DS  A    Address of a full word containing               
*                               the number of relocate sections    @LXA         
*                                                                               
RAUX_RELOCATE_PTR@     DS  A    Address of a 4 byte pointer to                  
*                               the array of relocate sections     @LYC         
*                                                                               
RAUX_MESSAGE_COUNT@    DS  A    Address of a full word containing               
*                               the number of message segments     @LXA         
*                                                                               
RAUX_MESSAGE_PTR@      DS  A    Address of a 4 byte pointer to                  
*                               the array of message segments      @LYC         
*                                                                               
RAUX_LEN               EQU *-RAUX Constant - RAUX length           @LXA         
*                                                                               
*******************************************************************@LZA         
*                                                                     *         
*                    GINF ASSEMBLER DECLARATIONS                   @LZA         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = GINF                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = R_GetInfo                                       *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*             list for the R_GetInfo callable service                 *         
*******************************************************************@LZA         
                     ORG   COMP_SERVR_PARMS   Follows common plist @LZA         
*                                                                               
GINF                   DS  0C   Mapping for GINF                   @LZA         
*                                                                               
GINF_NUM_PARMS@        DS  A    Address of fullword containing                  
*                               the total number of parameters     @LZA         
*                                                                               
GINF_PARM_ALET@        DS  A    Address of ALET of the rest of the              
*                               parameters                         @LZA         
*                                                                               
GINF_FUNC_CODE@        DS  A    Address of halfword function code.              
*                               Constants for the function codes are            
*                               supplied below.                    @LZA         
*                                                                               
GINF_OPTION@           DS  A    Address of halfword option for function         
*                               code                               @LZA         
*                                                                               
GINF_RACF_ENTITY@      DS  A    Address of RACF entity             @LZA         
*                                                                               
GINF_RACF_CLASS@       DS  A    Address of RACF class              @LZA         
*                                                                               
GINF_RESULT_ENTRIES@   DS  A    Address of result entries area     @LZA         
*                                                                               
GINF_LEN               EQU *-GINF Constant - GINF length           @LZA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                               
*   Function code constants                                                     
*                                                                               
*---------------------------------------------------------------------*         
GINF_FUNC_EIM        EQU X'0001'  Constant - Get EIM information   @LZA         
GINF_FUNC_REALM      EQU X'0002'  Constant - Get REALM Information @MXA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                               
*   Option value constants - the meaning of each option varies with             
*                            the function code                                  
*---------------------------------------------------------------------*         
GINF_OPT1            EQU X'0001' Constant for Option 1             @LZA         
GINF_OPT2            EQU X'0002' Constant for Option 2             @LZA         
GINF_OPT3            EQU X'0003' Constant for Option 3             @LZA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                PGSN ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = PGSN                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   Program signing and verification              *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*      list for the service which will cryptographically sign and     *         
*      verify z/OS program objects                                    *         
*                                                                  @MMA         
***********************************************************************         
                     ORG   COMP_SERVR_PARMS   Follows common plist @MMA         
*                                                                               
PGSN                 DS  0C     Mapping for PGSN                   @MMA         
*                                                                               
PGSN_NUM_PARMS@      DS  A      Address of fullword containing                  
*                               the total number of parameters                  
*                               included in COMP and PGSN          @MMA         
*                                                                               
PGSN_FUNC@           DS  A      Address of 2 byte function code    @MMA         
*                                                                               
PGSN_FUNC_PARML@     DS  A      Address of the function-specific                
*                               parameter list corresponding to                 
*                               the function code.                 @MMA         
*                                                                               
PGSN_LEN             EQU *-PGSN Constant - fixed length of PGSN    @MMA         
*                                                                               
PGSN_FUNC_ATTRS@     DS  A      Address of the attributes corresponding         
*                               to function code                   @NOA         
*                                                                               
PGSN_LEN_WITH_ATTRS  EQU *-PGSN Constant - Length of PGSN with                  
*                               PGSN_FUNC_ATTRS@ specified         @NOA         
*                                                                               
*                                                                               
*   Function Code Constants                                                     
*                                                                               
PGSN_FC_SIGINIT      EQU X'0001' Initialize Program Signing        @MMA         
PGSN_FC_SIGUPDATE    EQU X'0002' Sign intermediate program data    @MMA         
PGSN_FC_SIGFINAL     EQU X'0003' Finalize Program Signature        @MMA         
PGSN_FC_SIGCLEAN     EQU X'0004' Terminate signature operation     @MMA         
PGSN_FC_VERINIT      EQU X'0005' Initialize signature verification @MMA         
PGSN_FC_VERUPDATE    EQU X'0006' Digest intermediate program data  @MMA         
PGSN_FC_VERFINAL     EQU X'0007' Perform final verification        @MMA         
PGSN_FC_VERCLEAN     EQU X'0008' Terminate verification operation  @MMA         
PGSN_FC_VERINTER     EQU X'0009' Interrogate Directive             @MMA         
*                                                                               
*   Eyecatcher Constants for function-specific parameter lists                  
*                                                                               
PGSN_SIGINIT         DC  CL8'SIGINIT '                             @MMA         
PGSN_SIGUPDATE       DC  CL8'SIGUPDAT'                             @MMA         
PGSN_SIGFINAL        DC  CL8'SIGFINAL'                             @MMA         
PGSN_SIGCLEAN        DC  CL8'SIGCLEAN'                             @MMA         
PGSN_VERINIT         DC  CL8'VERINIT '                             @MMA         
PGSN_VERUPDATE       DC  CL8'VERUPDAT'                             @MMA         
PGSN_VERFINAL        DC  CL8'VERFINAL'                             @MMA         
PGSN_VERCLEAN        DC  CL8'VERCLEAN'                             @MMA         
PGSN_VERINTER        DC  CL8'VERINTER'                             @MMA         
*                                                                               
*   Eyecatcher Constants for related mappings                                   
*                                                                               
PGSN_SIG_EYEC        DC  CL4'PSSD'    For PGSN_SIG_AREA            @MMA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                XPWD ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = XPWD                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = R_Password parameters                           *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*      list for the R_Password callable service                       *         
*                                                                  @NEA         
***********************************************************************         
                     ORG   COMP_SERVR_PARMS   Follows common plist @NEA         
*                                                                               
XPWD                 DS  0C     Mapping for XPWD                                
*                                                                               
XPWD_NUM_PARMS@      DS  A      Address of a full word containing               
*                               the total number of parameters                  
*                               included in COMP and XPWD          @NEA         
XPWD_PARM_ALET@      DS  A      Address of ALET for the remaining               
*                               parameters                         @NEA         
XPWD_FUNC@           DS  A      Address of 2 byte function code    @NEA         
*                                                                               
XPWD_USERID_LEN@     DS  A      Address of a full word containing               
*                               the length of the userID           @NEA         
XPWD_USERID@         DS  A      Address of an area containing the               
*                               userID                             @NEA         
XPWD_PASSWORD_LEN@   DS  A      Address of a full word containing               
*                               the length of the password/phrase  @NEA         
XPWD_PASSWORD@       DS  A      Address of an area containing the               
*                               password/phrase                    @NEA         
XPWD_FUNC_PARMLIST@  DS  A      Address of the function-specific                
*                               parameter list corresponding to                 
*                               the function code.                 @NEA         
*                                                                               
XPWD_LEN             EQU *-XPWD Constant - fixed length of XPWD    @NEA         
*                                                                               
*   Function Code Constants                                                     
*                                                                               
XPWD_FUNC_VERIFY     EQU X'0001' Verify a password or phrase       @NEA         
XPWD_FUNC_GENERATE   EQU X'0002' Generate KDFAES values            @NEA         
*******************************************************************             
                                                                                
***********************************************************************         
*                                                                     *         
*                SMOP ASSEMBLER DECLARATIONS                          *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = SMOP                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME = R_SecMgtOper parameters                         *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   *         
*      list for the R_SecMgtOper callable service                     *         
*                                                                  @NGA         
***********************************************************************         
                     ORG   COMP_SERVR_PARMS   Follows common plist @NGA         
*                                                                               
SMOP                 DS  0C     Mapping for SMOP                   @NGA         
*                                                                               
SMOP_NUM_PARMS@      DS  A      Address of a full word containing  @NGA         
*                               the total number of parameters                  
SMOP_FUNC@           DS  A      Address of 4 byte function code    @NGA         
*                                                                               
SMOP_OPTIONS@        DS  A      Address of 4 byte option           @NGA         
*                                                                               
SMOP_REQUEST_LEN@    DS  A      Address of a full word containing  @NGA         
*                               the length of the input request                 
SMOP_REQUEST@        DS  A      Address of an area containing the  @NGA         
*                               input request                                   
SMOP_HANDLE@         DS  A      Address of an area containing the  @NGA         
*                               input request handle                            
SMOP_USERID@         DS  A      Address of runas user.This address @NGA         
*                               points to a 1 byte length followed by           
*                               up to 8 bytes containing the user.              
SMOP_ACEE@           DS  A      Address of runas ACEE.             @NGA         
SMOP_RESULT_LEN@     DS  A      Address of a full word containing  @NGA         
*                               the length of the provided buffer               
*                               to which to result will be copied.              
*                               On return contains the number of bytes          
*                               copied to the SMOP_RESULT@ buffer.              
SMOP_RESULT@         DS  A      Address of an area into which the  @NGA         
*                               result will be copied.                          
SMOP_LEN             EQU *-SMOP SMOP plist len                     @NGA         
*                                                                               
SMOP_FC_EXECUTE      EQU X'00000001'  Execute request XML          @NGA         
SMOP_FC_LAST         EQU X'00000001'  Highest function code #      @NGA         
*                                                                               
SMOP_OPT_EXECUTE     EQU X'00000001'  Execute request              @NGA         
SMOP_OPT_PRECHECK    EQU X'00000002'  Precheck permissions         @NGA         
SMOP_OPT_STOPONERROR EQU X'00000004'  Stop on error                @NGA         
SMOP_OPT_CLRSENSTV   EQU X'00000008'  Clear sensitive data         @NIC         
SMOP_OPT_LAST        EQU X'00000008'  Highest option code #        @NGA         
*                                                                               
*                                                                               
*                                                                               
*------------------------------------------------------------------             
*                                                                               
* The following DSECTs, must be after the COMP dsect               @04C         
*                                                                               
*------------------------------------------------------------------             
ADMN_RUNCOMD_MAP     DSECT                                         @04A         
ADMN_RUNCOMD_LEN     DS  AL2    Length of command string           @04A         
ADMN_RUNCOMD_CMD     DS  0C     Command string                     @04A         
*                                                                               
ADMN_USRADM_MAP      DSECT      Mapping for add/alt/del/list user  @04A         
*                               connect/remove, xtr Pw env         @LVC         
ADMN_USRADM_USER_LEN DS  X      Length of User ID                  @04A         
ADMN_USRADM_USER_ID  DS  CL8    User ID                            @04A         
ADMN_USRADM_FLAGS    DS  CL1    Request Flags                      @NGC         
ADMN_USRADM_ERROFF   DS  AL2    Offset to segment/field in error   @05A         
ADMN_USRADM_SEG_NUM  DS  AL2    Number of segments to update       @04A         
ADMN_USRADM_SEGSTRT  DS  0C     First segment entry                @04A         
*                                                                               
ADMN_USRADM_SEGENTRY DSECT      Use this for all function codes    @04A         
ADMN_USRADM_SEG_NAME DS  CL8    Profile segment name               @04A         
ADMN_USRADM_SEG_FLAG DS  CL1    Flag byte for segment              @05A         
ADMN_USRADM_FLD_NUM  DS  AL2    Number of fields to update in seg. @04A         
ADMN_USRADM_FLDSTRT  DS  0C     First field entry for segment      @04A         
*                                                                               
ADMN_USRADM_FLDENTRY DSECT      Use this for all function codes    @04A         
ADMN_USRADM_FLD_NAME DS  CL8    Segment field name                 @04A         
ADMN_USRADM_FLD_FLAG DS  CL1    Flag byte for field                @04A         
ADMN_USRADM_FLD_LEN  DS  AL2    Field data length                  @04A         
ADMN_USRADM_FLD_DATA DS  0C     Field data                         @04A         
*                                                                               
ADMN_GRPADM_MAP      DSECT      Mapping for add/alt/del/list group @07A         
ADMN_GRPADM_GRP_LEN  DS  X      Length of Group ID                 @07A         
ADMN_GRPADM_GRP_ID   DS  CL8    Group ID                           @07A         
ADMN_GRPADM_FLAGS    DS  CL1    Request Flags                      @NGC         
ADMN_GRPADM_ERROFF   DS  AL2    Offset to segment/field in error   @07A         
ADMN_GRPADM_SEG_NUM  DS  AL2    Number of segments to update       @07A         
ADMN_GRPADM_SEGSTRT  DS  0C     First segment entry                @07A         
*                                                                               
ADMN_RESADM_MAP      DSECT      Mapping for add/alt/del/list       @08A         
*                               resource, add/alt/del/list ds, and @08A         
*                               permit                             @08A         
ADMN_RESADM_CLAS_LEN DS  X      Length of Class Name               @08A         
ADMN_RESADM_CLAS_NAM DS  CL8    Class Name                         @08A         
ADMN_RESADM_FLAGS    DS  CL1    Request Flags                      @NGC         
ADMN_RESADM_ERROFF   DS  AL2    Offset to segment/field in error   @08A         
ADMN_RESADM_SEG_NUM  DS  AL2    Number of segments to update       @08A         
ADMN_RESADM_SEGSTRT  DS  0C     First segment entry                @08A         
*                                                                               
ADMN_SETRADM_MAP     DSECT      Mapping for alter SETROPTS         @LBA         
*                               information                        @LBA         
                     DS  CL9    Reserved                           @NGC         
ADMN_SETRADM_FLAGS   DS  CL1    Request Flags                      @NGA         
ADMN_SETRADM_ERROFF  DS  AL2    Offset to segment/field in error   @LBA         
ADMN_SETRADM_SEG_NUM DS  AL2    Number of segments to update       @LBA         
ADMN_SETRADM_SEGSTRT DS  0C     First segment entry                @LBA         
*                                                                               
* Bit mappings for ADMN_xxxADM_FLAGS                                            
ADMN_FLAGS_NORUN     EQU X'80'  Generate, but do not run the cmd   @NGA         
ADMN_FLAGS_RETCMD    EQU X'40'  Return generated command image     @NGA         
ADMN_FLAGS_ADDQUOT   EQU X'20'  Supply quotes to quoted fields     @NIA         
*                                                                               
ADMN_OUTMSG_MAP      DSECT                                         @04A         
ADMN_OUT_NEXT        DS  XL4    Addr of next block or 0            @04A         
ADMN_OUT_EYE         DS  CL4    Eye catcher for output block       @04A         
ADMN_OUT_SPID        DS  XL1    Subpool ID for block               @04A         
ADMN_OUT_LEN         DS  AL3    Length of block                    @04A         
ADMN_OUT_OFF         DS  F      Offset (from ADMN_OUTMSG_MAP) to   @04A         
*                               1st byte after last message        @04A         
ADMN_OUT_STRT        DS  0C     Start of message data (see below)  @04A         
*                                                                               
ADMN_OUT_ENTRY       DSECT      Mapping for a message entry        @04A         
ADMN_OUT_MLEN        DS  AL2    Length of message line             @04A         
ADMN_OUT_MSTR        DS  0C     Variable length message string     @04A         
*                                                                               
ADMN_XTRUNL_MAP      DSECT      R_admin SETROPTS output mapping    @LBA         
ADMN_XTRUNL_EYE      DS  CL4    Eye catcher for SETROPTS output    @LBA         
ADMN_XTRUNL_OUTLEN   DS  AL4    Total length of output buffer      @LBA         
                     DS  CL4    Reserved                           @LBA         
ADMN_XTRUNL_NUM      DS  AL2    Number of segment entries for      @LBA         
*                               ADMN_XTR_SETR or number of record  @LBA         
*                               types for ADMN_UNL_SETR            @LBA         
ADMN_XTRUNL_ENTRY    DS  0C     First segment or record entry      @LBA         
*                                                                               
ADMN_UNL_ENTRY       DSECT      Data mapping for ADMN_UNL_SETR     @LBA         
ADMN_UNL_TYPE        DS  CL8    SMF Data Unload record type        @LBA         
ADMN_UNL_LEN         DS  AL4    Length of a record of this type    @LBA         
ADMN_UNL_NUM         DS  AL4    Number of records of this type     @LBA         
                     DS  CL8    Reserved                           @LBA         
ADMN_UNL_RECSTRT     DS  0C     Start of first record of this type @LBA         
*                                                                  @M4A         
* Main header for R_ADMIN extract SETROPTS function                @MSA         
ADMN_XTRSETR_MAP     DSECT      R_admin SETROPTS input  mapping    @MSA         
ADMN_XTRSETR_FLAG    DS  AL4    Flags                              @MSA         
ADMN_XTRSETR_DOFACILITY EQU X'80000000'  perform facility class    @MSA         
*                                        authorization checking.   @MSA         
*                                         for supervisor state     @MSA         
*                                         callers                  @MSA         
ADMN_XTRSETR_DOCMDAUTH  EQU X'40000000'  perform SETROPTS LIST     @MSA         
*                                        command authorization     @MSA         
*                                        for supervisor state      @MSA         
*                                        callers                   @MSA         
                     DS  CL10   Reserved                           @MSA         
* Main header for R_ADMIN extract user, group, connect, DATASET,   @NJC         
* and general resource functions                                   @MNC         
*                                                                  @MNA         
ADMN_PROF_MAP        DSECT      Data Mapping for radmin extract    @M4A         
ADMN_PROF_EYE        DS  CL4    Eyecatcher.  "PXTR"                @M4A         
ADMN_PROF_OUTLEN     DS  AL4    Length of entire output buffer     @M4A         
ADMN_PROF_SPID       DS  AL1    Subpool of this buffer             @M4A         
ADMN_PROF_VERSION    DS  AL1    Version number of output buffer    @M4A         
                     DS  CL2    Reserved                           @M4A         
ADMN_PROF_CLSNAME    DS  CL8    Class: (USER, GROUP, CONNECT,                   
*                                DATASET or general resource class)@NJC         
ADMN_PROF_NAMELEN    DS  AL4    Length of profile name             @M4A         
                     DS  CL2    Reserved                           @NJC         
ADMN_PROF_DSVOLUME   DS  CL6    Dataset volume, 6 chars            @NJA         
ADMN_PROF_DDDSC      DS  AL4    Dup Discrete DS Count from UWKDCNT @NJC         
ADMN_PROF_FLAG       DS  AL4    Flags                              @M4A         
ADMN_PROF_SKIPAUTH   EQU X'80000000'  Bypass command processor     @MNC         
*                                  '  authorization checking.      @MNC         
*                                     Available for authorized     @MNC         
*                                     callers only                 @MNC         
ADMN_PROF_BASEONLY   EQU X'40000000'  Return base segment only     @M6A         
ADMN_PROF_DOAUTH     EQU X'20000000'  Check FACILITY class profile @MNA         
*                               For use by supervisor callers only @MNA         
ADMN_PROF_GENERIC    EQU X'10000000' Used for General Resource and              
*                                    DATASET requests only:        @NJC         
*                                      On Input:                                
*                                      -General resource profiles: @NJC         
*                                        For Extract: Return profile            
*                                          which covers input profile           
*                                          name when no exact match             
*                                          exists.                              
*                                        For Extract Next: Return next          
*                                          generic profile                      
*                                      -DATASET profiles:          @NJA         
*                                        For Extract: Return the                
*                                          generic profile that exactly         
*                                          matches the input name.              
*                                        For Extract Next: Return next          
*                                          profile after this generic           
*                                      On Output (for all):                     
*                                        Profile returned by RACF is            
*                                        generic                   @MNA         
ADMN_PROF_UPPERCASE  EQU X'08000000' Upper case the input profile name          
*                                    when appropriate. When the class           
*                                    is USER, GROUP, CONNECT, DATASET,          
*                                    or a general resource class which          
*                                    is defined as CASE(UPPER), R_Admin         
*                                    will upper case the input profile          
*                                    name prior to extracting it. This          
*                                    flag is ignored for extract-next           
*                                    requests                      @NJC         
ADMN_PROF_NAMEONLY   EQU X'04000000' Return profile name only      @N8A         
ADMN_PROF_MATCHGN    EQU X'02000000' Return covering DS profile    @NKA         
ADMN_PROF_NUMSEG     DS  AL4    Number of segments in buffer       @M4A         
                     DS  CL16   Reserved                           @M4A         
ADMN_PROF_PROFNAME   DS  0C     Profile name                       @M4A         
*                                                                               
* Segment descriptor for R_ADMIN profile extract                   @NJC         
ADMN_PROF_SEGDESC    DSECT      Segment entry                      @M4A         
ADMN_PROF_SEGNAME    DS  CL8    Segment name                       @M4A         
ADMN_PROF_SEGFLAGS   DS  CL4    Segment flags                      @M4A         
ADMN_PROF_NUMFIELDS  DS  AL4    Number of fields within segment    @M4A         
                     DS  CL4    RESERVED                           @M4A         
ADMN_PROF_FIELDOFFSET DS AL4    Offset to first field in segment   @M4A         
*                                 from start of ADMN_PROF_MAP      @M4A         
                     DS  CL16   Reserved                           @M4A         
ADMN_PROF_NEXTSEG    DS  0C     Start of next segment descriptor   @M4A         
*                                                                               
* Field descriptor for R_ADMIN profile extract                     @NJC         
ADMN_PROF_FIELDDESC  DSECT      Field entry                        @M4A         
ADMN_PROF_FIELDNAME  DS  CL8    Field name                         @M4A         
ADMN_PROF_FIELDTYPE  DS  CL2    Field type bits                    @M4A         
ADMN_PROF_REPEAT     EQU X'8000' Field is repeating                @M4A         
ADMN_PROF_BOOLEAN    EQU X'2000' Field is boolean, value is in     @M4A         
*                                ADMN_PROF_FIELDFLAG, bit 0        @M4A         
ADMN_PROF_RPTHDR     EQU X'1000' Field is repeat group header      @M4A         
                     DS  CL2    Reserved                           @M4A         
ADMN_PROF_FIELDFLAG  DS  CL4    Field flags                        @M4A         
ADMN_PROF_VALUE      EQU X'8000' Boolean value. '1'=TRUE           @M4A         
ADMN_PROF_OUTONLY    EQU X'4000' Output only field                 @M4A         
ADMN_PROF_FIELDLEN   DS  AL4    Length of data for this field      @M4A         
                     ORG *-4                                       @M4A         
ADMN_PROF_RPTNUM     DS  AL4    Number of repeating fields         @M4A         
                     DS  AL4    Reserved                           @M4A         
ADMN_PROF_DATA_OFFSET DS AL4    Offset to field data from start of @M4A         
*                                 ADMN_PROF_MAP                    @M4A         
                     ORG *-4                                       @M4A         
ADMN_PROF_FIELDDIM   DS  AL4    Dimension of repeating field.      @M4A         
                     DS  CL16                                      @M4A         
ADMN_PROF_NEXTFIELD  DS  0C     Start of next Field                @M4A         
*                                                                               
*                                                                               
ADMN_XTRPW_MAP       DSECT      Data mapping for ADMN_XTR_PWENV    @LVA         
ADMN_XTRPW_EYE       DS  CL4    Eye catcher ('RXPW')               @LVA         
ADMN_XTRPW_SPID      DS  AL1    Subpool of output block            @LVA         
ADMN_XTRPW_OUTLEN    DS  AL3    Total length of output buffer      @LVA         
ADMN_XTRPW_ENV       DS  0C     PKCS#7 password envelope           @LVA         
*                                                                               
* R_ADMIN extract RRSF information                                              
ADMN_XTRSF_MAP       DSECT                                         @N6A         
ADMN_XTRSF_EYE       DS CL4     Eye catcher ('RXPW')               @N6A         
ADMN_XTRSF_SPID      DS AL1     Subpool of output block            @N6A         
ADMN_XTRSF_OUTLEN    DS AL3     Total length of output buffer      @N6A         
ADMN_XTRSF_FLAGS     DS AL4     Bit flags                          @N6A         
ADMN_XTRSF_SUBSYS_PREFIX DS CL8 Subsystem prefix                   @N6A         
ADMN_XTRSF_LOCAL_NODE_INDEX DS AL4 Index in NODE_DATA of LOCAL     @N6A         
ADMN_XTRSF_AUTODIRECT_FLAGS DS AL1 Autodirect flags                @N6A         
ADMN_XTRSF_AUTODIRECT_USERS DS CL112 Autodirect user info          @N6A         
ADMN_XTRSF_APD_FLAGS DS AL1     AutoPassword flags                 @N6A         
ADMN_XTRSF_APD_USERS DS CL112   AutoPassword user info             @N6A         
ADMN_XTRSF_PWSYNC_FLAGS DS AL1  PWSYNC  flags                      @N6A         
ADMN_XTRSF_PWSYNC_USERS DS CL112 PWsync user info                  @N6A         
ADMN_XTRSF_ADAU_FLAGS DS AL1   AUTOAPPL flags                      @N6A         
ADMN_XTRSF_ADAU_USERS DS CL112 AUTOAPPL user info                  @N6A         
ADMN_XTRSF_NUM_NODES DS AL4     # Entries in ADMN_XTRSF_NODE_DATA  @N6A         
ADMN_XTRSF_SUBSYS_NAME DS CL4   # RACF subsystem name              @NAA         
ADMN_XTRSF_SUBSYS_USER DS CL8   # RACF subsystem user ID           @NAA         
ADMN_XTRSF_EXPANSION DS CL52    Reserved space                     @NAC         
ADMN_XTRSF_NODE_LIST DS 0C      Start of ADMN_XTRSF_NODE_DATA      @N6A         
*                                                                               
* Bit settings for ADMN_XTRSF_FLAGS                                             
ADMN_XTRSF_AUTODIRECT_ACTIVE   EQU X'80000000'                     @N6A         
ADMN_XTRSF_APD_ACTIVE          EQU X'40000000'                     @N6A         
ADMN_XTRSF_PWSYNC_ACTIVE       EQU X'20000000'                     @N6A         
ADMN_XTRSF_ADAU_ACTIVE         EQU X'10000000'                     @N6A         
ADMN_XTRSF_FULLRRSF     EQU X'08000000'                            @PIC         
ADMN_XTRSF_TRACE_IMAGE  EQU X'04000000'                            @N6A         
ADMN_XTRSF_TRACE_APPC   EQU X'02000000'                            @N6A         
ADMN_XTRSF_TRACE_SSL    EQU X'01000000'                            @N6A         
ADMN_XTRSF_TRACE_RRSF   EQU X'00800000'                            @N6A         
*  If there were more nodes than we could fit in the output                     
*    set the DATA_TRUNCATED bit.  There is no way to get to                     
*    the data for those nodes.  Unlikely to happen.                             
ADMN_XTRSF_DATA_TRUNCATED EQU X'00400000' Returned Data truncated  @N6A         
*  If this bit is 0, the caller is not authorized to the                        
*     data returned in ADMN_XTRSF_MAP, so it is not set.                        
*  However, if the caller is authorized to the the RRSF node                    
*     information, it is returned, and ADMN_XTRSF_NUM_NODES                     
*     accurately reflects the number of ADMN_XTRSF_NODE_LIST                    
*     elements.                                                                 
ADMN_XTRSF_SET_DATA_PRESENT EQU X'00200000'                        @N6A         
*  If this bit is 0, the caller is not authorized to the                        
*     RRSF node information and none is returned.                               
ADMN_XTRSF_NODE_DATA_PRESENT EQU X'00100000'                       @N6A         
*  The following bits, if on, indicate that the RACF subsystem                  
*     address space is running with the TRUSTED and PRIVILEGED                  
*     attribute, respectively.                                     @NAA         
ADMN_XTRSF_SUBSYS_TRUSTED    EQU X'00080000'                       @NAA         
ADMN_XTRSF_SUBSYS_PRIVILEGED EQU X'00040000'                       @NAA         
*                                                                               
* ADMN_XTRSF_AUTODIRECT_USERS, APD_USERS, PWSYNC_USERS and ADAU_USERS           
* each consist of 4 entries of the following format.                            
ADMN_XTRSF_SET_USER_INFO DSECT                                     @N6A         
ADMN_XTRSF_SET_NODE  DS CL8    Node name to send output or notify  @N6A         
ADMN_XTRSF_SET_USER  DS CL8    user id to send output or notify    @N6A         
ADMN_XTRSF_SET_OUTPUT_LEVEL DS CL6 OUTPUT failure level            @N6A         
ADMN_XTRSF_SET_NOTIFY_LEVEL DS CL6 NOTIFY failure level            @N6A         
*                                                                               
* Bit settings for ADMN_XTRSF_XXX_FLAGS (APD, ADAU, PWS, ACD)                   
ADMN_XTRSF_SET_NOTIFY EQU X'80000000' Notify option active         @N6A         
ADMN_XTRSF_SET_OUTPUT EQU X'40000000' Output function active       @N6A         
*                                                                               
ADMN_XTRSF_NODE_DATA DSECT    Definiton of single RRSF node        @N6A         
ADMN_XTRSF_NODE      DS CL8   Node Name                            @N6A         
ADMN_XTRSF_SYSNAME   DS CL8   MSN system name                      @N6A         
ADMN_XTRSF_PROTOCOL  DS AL1   NODE protocol 1=appc, 2=tcp          @N7A         
ADMN_XTRSF_STATE     DS AL1   Node comm state                      @N6A         
ADMN_XTRSF_RESERVE1  DS CL2                                        @N6A         
ADMN_XTRSF_LAST_INBOUND_DATE DS CL8 Date of last received work     @N6A         
ADMN_XTRSF_LAST_INBOUND_TIME DS CL8 Time of last received work     @N6A         
ADMN_XTRSF_LAST_OUTBOUND_DATE DS CL8 Date of last sent work        @N6A         
ADMN_XTRSF_LAST_OUTBOUND_TIME DS CL8 Time of last sent work        @N6A         
ADMN_XTRSF_PARTNER_OS_VERSION DS AL4 Partner OS version (ECVTPSEQ) @PJA         
ADMN_XTRSF_PARTNER_TEMPLATE_RELEASE DS AL4 Partner DB release level@N6A         
ADMN_XTRSF_PARTNER_TEMPLATE_APAR    DS AL4 Partner DB apar level   @N6A         
ADMN_XTRSF_PARTNER_PARSE_OFFSET DS AL4                             @N6A         
ADMN_XTRSF_DESCR_OFFSET     DS Al4                                 @N6A         
ADMN_XTRSF_PREFIX_OFFSET    DS AL4                                 @N6A         
ADMN_XTRSF_MGMTCLAS_OFFSET  DS AL4                                 @N6A         
ADMN_XTRSF_STORCLAS_OFFSET  DS AL4                                 @N6A         
ADMN_XTRSF_DATACLAS_OFFSET  DS AL4                                 @N6A         
ADMN_XTRSF_VOLUME_OFFSET    DS AL4                                 @N6A         
ADMN_XTRSF_FILESIZE         DS AL4                                 @N6A         
ADMN_XTRSF_WDSQUAL_OFFSET   DS AL4                                 @N6A         
ADMN_XTRSF_INDBITS          DS AL4                                 @N6A         
ADMN_XTRSF_INMSG_DSNAME_OFFSET DS AL4 INMSG Dataset name           @N6A         
ADMN_XTRSF_INMSG_RECORDS    DS AL4    Number records in INMSG      @N6A         
ADMN_XTRSF_INMSG_EXTENTS    DS AL4    Number of INMSG extents      @N6A         
ADMN_XTRSF_OUTMSG_DSNAME_OFFSET DS AL4 OUTMSG dataset name         @N6A         
ADMN_XTRSF_OUTMSG_RECORDS   DS AL4    Number records in OUTMSG     @N6A         
ADMN_XTRSF_OUTMSG_EXTENTS   DS AL4    Number of OUTMSG extents     @N6A         
ADMN_XTRSF_INMSG2_DSNAME_OFFSET DS AL4 INMSG2 Dataset name         @N6A         
ADMN_XTRSF_INMSG2_RECORDS    DS AL4    Number records in INMSG2    @N6A         
ADMN_XTRSF_INMSG2_EXTENTS    DS AL4    Number of INMSG2 extents    @N6A         
ADMN_XTRSF_OUTMSG2_DSNAME_OFFSET DS AL4 OUTMSG2 dataset name       @N6A         
ADMN_XTRSF_OUTMSG2_RECORDS   DS AL4    Number records in OUTMSG2   @N6A         
ADMN_XTRSF_OUTMSG2_EXTENTS   DS AL4    Number of OUTMSG2 extents   @N6A         
ADMN_XTRSF_DENIED_COUNT      DS AL4    Number of denied records    @NDA         
ADMN_XTRSF_TCP_ADDRESS_OFFSET    DS AL4                            @N6A         
ADMN_XTRSF_TCP_IP_ADDRESS_OFFSET DS AL4                            @N6A         
ADMN_XTRSF_TCP_PORT_OFFSET       DS AL4                            @N6A         
ADMN_XTRSF_TCP_TLS_RULE_OFFSET   DS AL4                            @N6A         
ADMN_XTRSF_TCP_TLS_CIPHER_OFFSET DS AL4                            @N6A         
ADMN_XTRSF_TCP_TLS_CRTU_OFFSET   DS AL4                            @N6A         
ADMN_XTRSF_TCP_TLS_CLIENT_AUTH_OFFSET DS AL4                       @N6A         
ADMN_XTRSF_TCP_LISTENER          DS CL1  0=inact, 1=init, 2=active @N6A         
ADMN_XTRSF_APPC_LISTENER         DS CL1  0=inact, 1=init, 2=active @N6A         
ADMN_XTRSF_RESERVED3             DS CL2                            @N6A         
ADMN_XTRSF_LUNAME_OFFSET         DS AL4                            @N6A         
ADMN_XTRSF_MODENAME_OFFSET       DS AL4                            @N6A         
ADMN_XTRSF_TP_NAME_OFFSET        DS AL4                            @N6A         
ADMN_XTRSF_NETNAME_OFFSET        DS AL4                            @N6A         
ADMN_XTRSF_NODE_EXPANSION        DS CL16                           @N6A         
* Bit settings for ADMN_XTRSF_INDBITS                                           
ADMN_XTRSF_LOCAL                 EQU X'80000000'                   @N6A         
ADMN_XTRSF_MSN                   EQU X'40000000'                   @N6A         
ADMN_XTRSF_MSN_MAIN              EQU X'20000000'                   @N6A         
* If this bit is OFF, the other ADMN_XTRSF_INMSG_xxx fields should              
*   not be referenced because they are meaningless.                             
ADMN_XTRSF_INMSG_EXISTS          EQU X'10000000'                   @N6A         
* If this bit is OFF, the other ADMN_XTRSF_OUTMSG_xxx fields should             
*   not be referenced because they are meaningless.                             
ADMN_XTRSF_OUTMSG_EXISTS         EQU X'08000000'                   @N6A         
* If this bit is OFF, the other ADMN_XTRSF_INMSG2_xxx fields should             
*   not be referenced because they are meaningless.                             
ADMN_XTRSF_INMSG2_EXISTS         EQU X'04000000'                   @N6A         
* If this bit is OFF, the other ADMN_XTRSF_OUTMSG2_xxx fields should            
*   not be referenced because they are meaningless.                             
ADMN_XTRSF_OUTMSG2_EXISTS        EQU X'02000000'                   @N6A         
ADMN_XTRSF_MAIN_READING_OUTMSG   EQU X'01000000'                   @N7A         
ADMN_XTRSF_MAIN_READING_OUTMSG2  EQU X'00800000'                   @N7A         
ADMN_XTRSF_MSN_PENDING_EX_MAIN   EQU X'00400000'                   @N6A         
* If this RRSF node is a redefinition of an existing node with a                
*   different communications protocol (most likely due to a planned             
*   protocol conversion), this bit is on.                                       
ADMN_XTRSF_IS_SECOND_PROTOCOL    EQU X'00200000'                   @N6A         
ADMN_XTRSF_HAS_CONVERSION_FILE   EQU X'00100000'                   @P8C         
* If this bit is ON, this node does not accept work from its partner            
ADMN_XTRSF_DENY_INBOUND          EQU X'00080000'                   @NDA         
* If this bit is ON, the partner node is not accepting any work from us         
* This setting may not be valid if partner changes it without also              
*    resetting the connection.                                                  
ADMN_XTRSF_PARTNER_DENYING_INBOUND EQU X'00400000'                 @NDA         
*                                                                               
* Map of data referenced by ADMN_XTRSF_xxx_OFFSET fields                        
ADMN_XTRSF_DATA      DSECT                                         @N6A         
ADMN_XTRSF_MLEN      DS AL4     Length of data                     @N6A         
ADMN_XTRSF_MSTR      DS 0C      Data                               @N6A         
*                                                                               
DINF_FIELD_LIST      DSECT                                         @01A         
DINF_FIELD_LIST_LEN  DS  AL2    Length in bytes of field list      @01A         
DINF_FIELD_LIST_CNT  DS  AL2    Number of fields in field list     @01A         
DINF_FIELD_LIST_ST   DS  0C     Fields start here                  @01A         
*                                                                               
DINF_FIELDS          DSECT                                         @01A         
DINF_FIELD_NAME      DS  CL8    Name of field                      @01A         
DINF_FIELD_LEN       DS  AL2    Length of field                    @01A         
DINF_FIELD_DATA      DS  0C     Field data                         @01A         
*                                                                               
DINF_OUTPUT_AREA     DSECT                                         @01A         
DINF_OUTPUT_AREA_LEN DS  AL2    Length in bytes of output data     @01A         
DINF_OUTPUT_AREA_CNT DS  AL2    Number of fields in output data    @01A         
DINF_OUTPUT_AREA_ST  DS  0C     Start of output                    @01A         
*                                                                               
DINF_OUTPUT_FLD      DSECT                                         @01A         
DINF_OUTPUT_FLD_NAME DS  CL8    Name of field                      @01A         
DINF_OUTPUT_FLD_LEN  DS  AL2    Length of this output piece        @01A         
DINF_OUTPUT_FLD_DATA DS  0C     Data retrieved                     @01A         
*                                                                  @L7A         
UMAP_CERTIFICATE DSECT          Digital certificate mapping        @L7A         
*                               based on UMAP_CERTIFICATE@         @L7A         
UMAP_DIGCERT_LEN     DS  F      Length of digital certificate      @L7A         
UMAP_DIGCERT         DS  0C     Digital certificate                @L7A         
*                                                                  @L7A         
UMAP_USERID          DSECT      RACF Userid mapping                @L7A         
*                               based on UMAP_RACFUSERID@          @L7A         
UMAP_RACFID_LEN      DS  X      Length of RACF userid              @L7A         
UMAP_RACFID          DS  CL8    RACF userid                        @L7A         
*                                                                  @L7A         
UMAP_APPL_USERID     DSECT      Application ID mapping             @L7A         
*                               based on UMAP_APPL_USERID@         @L7A         
UMAP_APPLID_LEN      DS  H      Length of RACF userid              @L7A         
UMAP_APPLID          DS  CL246  Application ID                     @L7A         
*                                                                  @L7A         
UMAP_DISTINGUISHED_NAME_DS   DSECT     Distinguished Name mapping  @MYA         
*                                      based on                    @MYA         
*                                      UMAP_DISTINGUISHED_NAME@    @MYA         
UMAP_DISTINGUISHED_NAME_LEN  DS H      Distinguished Name Length   @MYA         
UMAP_DISTINGUISHED_NAME      DS CL246  Distinguished Name String   @MYA         
*                                                                  @MYA         
UMAP_REGISTRY_NAME_DS        DSECT     Registry/Realm Name mapping @MYA         
*                                      based on                    @MYA         
*                                      UMAP_REGISTRY_NAME@         @MYA         
UMAP_REGISTRY_NAME_LEN       DS H      Registry/Realm Name Length  @MYA         
UMAP_REGISTRY_NAME           DS CL255  Registry/Realm Name String  @MYA         
*                                                                  @MYA         
*  function code values                                            @L7A         
*                                                                  @L7A         
UMAP_R_TO_L  EQU X'0001'  Return Lotus Notes ID for this RACF ID   @L7A         
UMAP_L_TO_R  EQU X'0002'  Return RACF ID for this Lotus Notes ID   @L7A         
UMAP_R_TO_N  EQU X'0003'  Return NDS ID for this RACF ID           @L7A         
UMAP_N_TO_R  EQU X'0004'  Return RACF ID for this NDS ID           @L7A         
UMAP_R_TO_K  EQU X'0005'  Return Kerb principal for this RACF ID   @LEA         
UMAP_K_TO_R  EQU X'0006'  Return RACF ID for this Kerb principal   @LEA         
UMAP_DID_TO_R  EQU X'0008'  Return the RACF ID that is mapped by                
*                           this combination of Distinguished Name              
*                           and Registry/Realm Name                @MYA         
UMAP_R_TO_E  EQU X'0009'  Return e-mail address for this RACF ID   @NHA         
UMAP_E_TO_R  EQU X'000A'  Return RACF ID for this e-mail address   @NHA         
*                                                                  @L7A         
*---------------------------------------------------------------------*         
*                                                                     *         
*   CDDL Function Specific Parameter Lists                            *         
*                                                                     *         
*---------------------------------------------------------------------*         
CDDL_ABORT           DSECT      Parameter list for DataAbortQuery  @L8A         
CDDL_PREV_HANDLE     DS  A      Address of an input/output area                 
*                               from previous DataGetFirst or                   
*                               DataGetNext call                   @L8A         
*                                                                               
CDDL_GET_CERT        DSECT      Parameter list for DataGetFirst                 
*                               and DataGetNext                    @L8A         
CDDL_RES_HANDLE      DS  A      Address of input/output area                    
*                               mapped by CDDL_HANDLE_MAP          @L8A         
CDDL_CERT_USAGE      DS  CL4    4 byte output area containing                   
*                               certificate usage flags                         
*                                x'00000000' - Usage is SITE                    
*                                x'00000002' - Usage is CERTAUTH                
*                                x'00000008' - Usage is PERSONAL                
*                                x'FFFFFFF5' - reserved bits must be            
*                                              set to 0            @L8A         
CDDL_CERT_DEFAULT    DS  F      output default indicator.  Zero                 
*                               value indicates not default certificate         
*                               for ring, non-zero indicates this is            
*                               the default certificate.           @L8A         
CDDL_CERT_LEN        DS  F      On input, contains the length of the            
*                               certificate area pointed to by                  
*                               CDDL_CERT_PTR. On output, contains the          
*                               actual size of the certificate returned         
*                               or 0 if no certificate returned.   @L8A         
CDDL_CERT_PTR        DS  A      Input value specifying address of               
*                               output certificate data area       @L8A         
CDDL_PK_LEN          DS  F      On input, contains size of private              
*                               key area pointed to by CDDL_PK_PTR.             
*                               On output contains the length of the            
*                               private returned at address                     
*                               CDDL_PK_PTR or 0 if no private key              
*                               was returned.                      @L8A         
CDDL_PK_PTR          DS  A      Input value specifying address of               
*                               private key output data area       @L8A         
CDDL_PK_TYPE         DS  F      Output value indicating type of private         
*                               key. See constants below.          @L8A         
CDDL_PK_BITSIZE      DS  F      Output value indicating the size                
*                               of the private key modulus in bits @L8A         
CDDL_LABEL_LEN       DS  F      On input, contains the length of the            
*                               field pointed to by CDDL_LABEL_PTR,             
*                               and must be at least 32.  On output,            
*                               contains the length of the label                
*                               returned at the address in                      
*                               CDDL_LABEL_PTR, and will be 32 or               
*                               less.                              @L8A         
CDDL_LABEL_PTR       DS  A      Input value specifying the address              
*                               of output area to be used for the               
*                               label name.                        @L8A         
CDDL_RACF_USERID     DS  CL9    Input value containing a 1 byte length          
*                               followed by the certificate owning              
*                               userid. The combination of the output           
*                               label and this field uniquely identify          
*                               a certificate                      @L8A         
                     DS  CL3    Reserved                           @L8A         
CDDL_SDN_LEN         DS  F      On input, contains the length of the            
*                               output buffer pointed to by                     
*                               CDDL_SDN_PTR.  On output, contains the          
*                               length of the BER encoded Subject's             
*                               Distinguished Name returned in                  
*                               CDDL_SDN_LEN.                      @L8A         
CDDL_SDN_PTR         DS  A      Input value specifying the address of           
*                               the output area to be used for the              
*                               Subject's Distinguished Name.      @L8A         
CDDL_RECID_LEN       DS  F      Output value containing the length of           
*                               the record ID returned in area pointed          
*                               to by CDDL_RECID_PTR, or 0 if no                
*                               record returned.                   @LDC         
CDDL_RECID_PTR       DS  A      Input value specifying address of a             
*                               246 byte area to contain output                 
*                               record ID data.                    @LDC         
CDDL_STATUS          DS  CL4    Certificate status                              
*                                x'80000000' - TRUST                            
*                                x'40000000' - HIGHTRUST                        
*                                x'20000000' - NOTRUST                          
*                                x'00000000' - ANY (input only)    @N9A         
CDDL_CRT_STATUS      DSECT      Parameter list for CheckStatus     @LAA         
CDDL_CRT_LEN         DS  F      Input area containing the length of the         
*                               certificate area pointed to by                  
*                               CDDL_CRT_PTR.                      @LAA         
CDDL_CRT_PTR         DS  A      Input value specifying address of               
*                               output certificate data area       @LAA         
CDDL_GET_UPDATE      DSECT      Parameter list for                 @LCA         
*                               GetUpdateCode                      @LCA         
CDDL_RING_SEQN       DS  F      Ring sequence number               @LCA         
*                                                                               
CDDL_ISN             DSECT      Parm List for IncSerialNum                      
CDDL_ISN_CLEN        DS  F      Length of DER Encoded input                     
*                               Digital Certificate                @LFA         
CDDL_ISN_CPTR        DS  A      Address of DER Encoded input                    
*                               Digital Certificate                @LFA         
CDDL_ISN_SERNUM      DS  CL8    Output - Incremented Serial Number              
*                                        of Digital Certificate    @LFA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   Function specific parameter list for R_Datalib DataPut function   *         
*                                                                     *         
*---------------------------------------------------------------------*         
CDDL_PUT_CERT        DSECT      FSPL for DataPut function code     @MFA         
CDDL_PCERT_USAGE     DS  CL4    4 byte input area containing                    
*                               certificate usage flags                         
*                                x'00000000' - Usage is SITE                    
*                                x'00000002' - Usage is CERTAUTH                
*                                x'00000008' - Usage is PERSONAL                
*                                x'80000000' - Usage is defaulted to            
*                                              the usage of the cert            
*                                x'7FFFFFF5' - reserved bits must be            
*                                              set to 0            @MFA         
CDDL_PCERT_DEFAULT    DS  F      input default cert indicator. Non-zero         
*                               value indicates input certificate               
*                               is to made the default cert for                 
*                               the ring, zero indicates to not set             
*                               the certificate as the default     @MFA         
CDDL_PCERT_LEN       DS  F      Input value containing the length of            
*                               the certificate pointed to by                   
*                               CDDL_PCERT_PTR.                    @MFA         
CDDL_PCERT_PTR       DS  A      Input value specifying address of               
*                               input certificate data area        @MFA         
CDDL_PKEY_LEN        DS  F      Input value containing the size of              
*                               the private key pointed to by the               
*                               CDDL_PKEY_PTR. A value of zero                  
*                               indicates a private key is not being            
*                               added.                             @MFA         
CDDL_PKEY_PTR        DS  A      Input value specifying address of               
*                               private key, ignored if CDDL_PKEY_LEN           
*                               value is zero.                     @MFA         
CDDL_PLABEL_LEN      DS  F      On input, it contains the length of             
*                               the label to be assigned to the added           
*                               certificate. On output, it contains             
*                               the length of the label of the existing         
*                               certificate if the input certificate            
*                               is already installed in RACF.      @MFA         
CDDL_PLABEL_PTR      DS  A      On input, it contains the address of            
*                               the label area. On output, it contains          
*                               the label of the existing certificate           
*                               if the input certificate is already             
*                               installed in RACF. The label area must          
*                               be 32 bytes.                       @MFA         
CDDL_PCERT_USERID    DS  CL9    On input, it indicates the owner of             
*                               the certificate, in the format of a             
*                               1 byte length followed by the user ID.          
*                               On output it contains the owner of              
*                               the existing certificate if the input           
*                               certificate is already installed in             
*                               RACF. The 1 byte length must be 8 and           
*                               the user ID must be left-justified and          
*                               padded with blanks.                @MFA         
                     DS  CL3    Reserved space                     @MFA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   Function specific parameter list for R_Datalib DataRemove function*         
*                                                                     *         
*---------------------------------------------------------------------*         
CDDL_REMOVE_CERT     DSECT      FSPL for DataRemove function code  @MFA         
CDDL_RLABEL_LEN      DS  F      A 4 byte input value contains the               
*                               length of the label of the certificate          
*                               to be removed pointed by                        
*                               CDDL_RLABEL_PTR                    @MFA         
CDDL_RLABEL_PTR      DS  A      An input value contains the address             
*                               of the label  of the certificate to             
*                               be removed                         @MFA         
CDDL_RCERT_USERID    DS  CL9    A 9 byte input value indicates the              
*                               owner of the certificate to be                  
*                               removed, in the format of a 1 byte              
*                               length followed by the user ID. The             
*                               1 byte length must be 8 and the user            
*                               ID must be left-justified and padded            
*                               with blanks.                       @MFA         
                     DS  CL3    Reserved space                     @MFA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   Function specific parameter list for R_Datalib DataAlter function *         
*                                                                     *         
*---------------------------------------------------------------------*         
CDDL_ALTER_CERT      DSECT      FSPL for DataAlter function code   @N9A         
CDDL_ALABEL_LEN      DS  F      A 4 byte value containing the length            
*                               of the input certificate label.    @N9A         
CDDL_ALABEL_PTR      DS  A      A value containing the address of the           
*                               input certificate label.           @N9A         
CDDL_ANEW_LABEL_LEN  DS  F      A 4 byte value containing the length            
*                               of the new label which will be assigned         
*                               to the certificate. A zero indicates            
*                               that the change is not on the                   
*                               label.                             @N9A         
CDDL_ANEW_LABEL_PTR  DS  A      A value containing the address of the           
*                               new certificate label. This field is            
*                               ignored if CDDL_ANEW_LABEL_LEN is               
*                               zero.                              @N9A         
CDDL_ACERT_USERID    DS  CL9    A 9 byte input value indicating                 
*                               the owner of the certificate, in                
*                               the format of a 1 byte length                   
*                               followed by the user ID.  The 1                 
*                               byte length must be 8 and the user              
*                               ID must be left-justified and                   
*                               padded with blanks. For CERTAUTH                
*                               certificates, this parameter                    
*                               should be set to either 'irrcerta'              
*                               or '*AUTH*'. For SITE                           
*                               certificates, this parameter                    
*                               should be set to either 'irrsitec'              
*                               or '*SITE*'. If the length is                   
*                               zero, the caller's ID is used.     @N9A         
                     DS  CL3    Reserved space                                  
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   Function specific parameter list for R_Datalib GetRingInfo        *         
*                                                                     *         
*---------------------------------------------------------------------*         
CDDL_GET_RING        DSECT      FSPL for GetRingInfo function code @NBA         
CDDL_RING_SRCH_TYPE  DS  F      A 4 byte input value which                      
*                               identifies more rings to be                     
*                               returned  when both ring owner                  
*                               and ring name are specified                     
*                               x'00000000' - Return just the ring              
*                                             with the specified                
*                                             ring owner and ring               
*                                             name                              
*                               x'00000001' - Return all rings                  
*                                             after the ring                    
*                                             specified by ring                 
*                                             owner and ring name               
*                               x'00000002' - Return all rings                  
*                                             with the same owner               
*                                             after the ring                    
*                                             specified by ring                 
*                                             owner and ring name               
*                               x'00000003' - Return all rings                  
*                                             with the same name                
*                                             after the ring                    
*                                             specified by ring                 
*                                             owner and ring name  @NBA         
CDDL_RING_RES_LEN    DS  F      A 4 byte value containing                       
*                               the size of the field pointed                   
*                               to by Ring_result_ptr              @NBA         
CDDL_RING_RES_PTR    DS  A      An input value containing the                   
*                               address of the ring result                      
*                               area                               @NBA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                               
*   Private Key Type Constants returned in CDDL_PK_TYPE                         
*                                                                               
CDDL_PKCS1           EQU 1      Private key is PKCS#1 DER encoded  @MWA         
* The following constant, CDDL_PKCS10, should not be used, as its  @MWA         
* name is misleading.  It is kept strictly for compatibility.      @MWA         
* Instead use CDDL_PKCS1.                                          @MWA         
CDDL_PKCS10          EQU 1      Private key is PKCS#1 DER encoded  @L8A         
CDDL_ICSF            EQU 2      Private key is a ICSF token label  @L8A         
CDDL_PCICC           EQU 3      Private key is a PCICC token lable @D2A         
CDDL_DSA             EQU 4      Private key is a DSA token label   @M1A         
CDDL_DH              EQU 6      Private key is Diffie-Hellman      @MWA         
CDDL_ECC             EQU 7      Private key is ECC                 @MWA         
CDDL_ECC_ICSF        EQU 9      Private key is PKDS token for ECC  @N3C         
CDDL_RSA_TKDS        EQU 11     Private key is TKDS token for RSA  @N3A         
CDDL_ECC_TKDS        EQU 13     Private key is TKDS token for ECC  @N3A         
CDDL_DSA_TKDS        EQU 14     Private key is TKDS token for DSA  @N3A         
*---------------------------------------------------------------------*         
*                                                                     *         
*    Mapping of input/output area pointed to by CDDL_RES_HANDLE       *         
*                                                                     *         
*---------------------------------------------------------------------*         
CDDL_HANDLE_MAP      DSECT      Mapping of area pointed to by                   
*                               CDDL_RES_HANDLE & CDDL_PREV_HANDLE @L9C         
CDDL_TOKEN           DS  A      Reserved for use by the security                
*                               server.  This value must be preserved           
*                               for subsequent calls to DataGetNext             
*                               and DataAbortQuery                 @L8A         
CDDL_PREDICATES      DS  F      Input value specifying the selection            
*                               criteria.  See constants below     @L8A         
CDDL_ATTR_ID         DS  F      Input value specifying the attribute            
*                               to query on.  Ignored if                        
*                               CDDL_PREDICATES is 0.  See constants            
*                               below for possible values.         @L8A         
CDDL_ATTR_LEN        DS  F      Input value containing the length               
*                               of the attributes supplied in                   
*                               CDDL_ATTR_PTR                      @L8A         
CDDL_ATTR_PTR        DS  A      Input value containing the address              
*                               of query attribute data.  Type of               
*                               data supplied determined by                     
*                               CDDL_ATTR_ID                       @L8A         
*---------------------------------------------------------------------*         
*                                                                               
*   Input selection criteria constants supplied in CDDL_PREDICATES              
*                                                                               
CDDL_NONE            EQU 0      No selection criteria              @L8A         
CDDL_ATTR            EQU 1      Query on a particular attribute    @L8A         
*---------------------------------------------------------------------*         
*                                                                               
*   Input query attributes supplied in CDDL_ATTR_ID                @L8A         
*                                                                               
CDDL_LABEL           EQU 1      The certificate label, up to 32                 
*                               characters long                    @L8A         
CDDL_DEFAULT         EQU 2      The default flag, a 4 byte field                
*                               specified as 0 for NO, or a                     
*                               non-zero value for YES             @L8A         
CDDL_SUBJECT         EQU 3      BER encoded subjects name          @L8A         
*---------------------------------------------------------------------*         
*                                                                               
*   Input selection criteria supplied in CDDL_RING_SRCH_TYPE       @NBA         
*                                                                               
CDDL_ONE_RING        EQU 0      Return just the ring with the                   
*                               specified ring owner and ring name @NBA         
CDDL_ALL_RINGS       EQU 1      Return all rings after the ring                 
*                               specified by ring owner and ring                
*                               name                               @NBA         
CDDL_SAME_OWNER      EQU 2      Return all rings with the same owner            
*                               after the ring specifed by ring                 
*                               owner and ring name                @NBA         
CDDL_SAME_NAME       EQU 3      Return all rings with the same name             
*                               after the ring specifed by ring                 
*                               owner and ring name                @NBA         
*---------------------------------------------------------------------*         
*                                                                               
KERB_FLDDATA_MAP     DSECT      Mapping for Kerberos data area     @LEA         
KERB_FLDDATA_LEN     DS  AL2    Length of data area                @LEA         
KERB_FLD_NUM         DS  AL2    Number of fields present           @LEA         
KERB_FLDSTRT         DS  0C     First field entry                  @LEA         
*                                                                               
KERB_FLDENTRY        DSECT      Mapping for Kerberos fields        @LEA         
KERB_FLD_NAME        DS  CL8    Segment field name                 @LEA         
KERB_FLD_LEN         DS  AL2    Field data length                  @LEA         
KERB_FLD_DATA        DS  0C     Field data                         @LEA         
*---------------------------------------------------------------------*         
*                                                                               
*******************************************************************@0AA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   PKIS Function Specific Parameter Lists                            *         
*                                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
PKIS_GENCERT_MAP     DSECT      Function Specific Parameter List                
*                               (FSPL) for GENCERT                 @0AA         
*                                                                               
PKIS_GENC_EYECATCH   DS  CL8    Eyecatcher for the GENCERT FSPL                 
*                               Left justified blank filled string              
*                               containing the text 'GENCERT '     @0AA         
*                                                                               
PKIS_GENC_CERTPL_LEN DS  F      Length (in bytes) of the Digital                
*                               Certificate generation PList       @0AA         
*                                                                               
PKIS_GENC_CERTPL@    DS  A      Address of the Digital                          
*                               Certificate generation PList       @0AA         
*                                                                               
PKIS_GENC_CERTID@    DS  A      Address of a 57-Byte area that                  
*                               contains the Output Certificate                 
*                               Request ID (the first byte of this              
*                               area contains the length of the                 
*                               Output Certificate Request ID)     @0AA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_CPL_ENTRY       DSECT      Certificate Request PList entry                 
*                               (a single GENCERT PList entry)     @0AA         
*                                                                               
PKIS_CPL_FIELD_NAME  DS  CL12   Certificate Request Field Name     @0AA         
*                                                                               
PKIS_CPL_FIELD_LEN   DS  F      Length (in bytes) of the                        
*                               Request Field Name value           @0AA         
*                                                                               
PKIS_CPL_FIELD_VALUE DS  0C     Request Field Name value           @0AA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_EXPORT_MAP      DSECT      Function Specific Parameter List                
*                               (FSPL) for EXPORT                  @0AA         
*                                                                               
PKIS_EXP_EYECATCH    DS  CL8    Eyecatcher for the EXPORT FSPL                  
*                               Left justified blank filled string              
*                               containing the text 'EXPORT  '     @0AA         
*                                                                               
PKIS_EXP_CERTAN_LEN  DS  F      Length (in bytes) of the                        
*                               preallocated Certificate Anchor                 
*                               area                               @0AA         
*                                                                               
PKIS_EXP_CERTAN@     DS  A      Address of the preallocated                     
*                               Certificate Anchor area            @0AA         
*                                                                               
PKIS_EXP_CERTID@     DS  A      Address of a 57-Byte area that                  
*                               contains the Input Certificate                  
*                               Request ID that will be used to                 
*                               locate the Digital Certificate                  
*                               to be EXPORTed (the first byte of               
*                               this area contains the length of                
*                               the Input Certificate Request ID)  @0AA         
*                                                                               
PKIS_EXP_KEYID@      DS  A      Address of a 41-byte area that                  
*                               contains the KeyId - the hash of the            
*                               public key generated by PKI Services.           
*                               The first byte of this area contains            
*                               the length of the KeyId.  This field            
*                               is used to export a recovery                    
*                               certificate, the only case that the             
*                               first byte is 40.  In all other cases,          
*                               the length byte should be 0.       @MUA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_QUERYREQS_MAP   DSECT      Function Specific Parameter List                
*                               (FSPL) for QUERYREQS               @LJA         
*                                                                               
PKIS_QRYR_EYECATCH   DS  CL8    Eyecatcher for the QUERYREQS FSPL               
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'QUERYRQS'                    @LJA         
*                                                                               
PKIS_QRYR_RESULTL_LEN DS F      Length (in bytes) of the preallocated           
*                               Results List area on input to                   
*                               QUERYREQS                          @LJA         
*                                                                               
PKIS_QRYR_RESULTL@   DS  A      Address of the pre-allocated data area          
*                               to hold successfully retrieved                  
*                               information                        @LJA         
*                                                                               
PKIS_QRYR_CERTID@    DS  A      Address of a 57-Byte area that contains         
*                               the Input Certificate Request ID that           
*                               will be used as a starting point for            
*                               this query. Only Request IDs                    
*                               located after this Cert ID will                 
*                               be returned. The first byte of this             
*                               area contains the length of the                 
*                               Input Certificate Request ID       @LOC         
*                                                                               
PKIS_QRYR_NUMENTRIES DS  F      Value indicating the maximum number of          
*                               entries to be returned in the Results           
*                               List area. Zero indicates no limit @LJA         
*                                                                               
PKIS_QRYR_CRIT_STATUS DS F      Value indicating the request status to          
*                               use as search criteria             @LJA         
*                                                                               
PKIS_QRYR_CRIT_DAYS  DS  F      Value indicating the recent activity            
*                               time to use as additional search                
*                               criteria                           @LJA         
*                                                                               
PKIS_QRYR_CRIT_NAME@ DS  A      Address of a 33-Byte area that contains         
*                               the input requestor's name to be used           
*                               as additional search criteria. The              
*                               first byte of this area contains the            
*                               length of the input requestor name @LJA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_RESL_ENTRY      DSECT      Results List Entry for QUERYREQS or             
*                               QUERYCERTS ( a single entry )      @LJA         
*                                                                               
PKIS_RESL_ENTRY_LEN   DS  X     Length (in bytes) of the                        
*                               Results List entry value           @LJA         
*                                                                               
PKIS_RESL_ENTRY_VALUE DS  0C    Results list entry value           @LJA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_REQDETAILS_MAP   DSECT     Function Specific Parameter List                
*                               (FSPL) for REQDETAILS              @LJA         
*                                                                               
PKIS_REQD_EYECATCH   DS  CL8    Eyecatcher for the REQDETAILS FSPL              
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'REQDTAIL'                    @LJA         
*                                                                               
PKIS_REQD_SUML_LEN   DS  F      Length (in bytes) of the preallocated           
*                               Summary List area on input to                   
*                               REQDETAILS                         @LJA         
*                                                                               
PKIS_REQD_SUML@      DS  A      Address of the pre-allocated data area          
*                               to hold successfully retrieved                  
*                               information                        @LJA         
*                                                                               
PKIS_REQD_CERTPL_LEN DS  F      Length (in bytes) of the Certificate            
*                               generation PList area on input     @LJA         
*                                                                               
PKIS_REQD_CERTPL@    DS  A      Address in which the details of the             
*                               query are successfully retrieve into a          
*                               Certificate generation PList area  @LJA         
*                                                                               
PKIS_REQD_CERTID@    DS  A      Address of a 57-Byte area that contains         
*                               the Input Certificate Request ID from           
*                               which the details will be extracted.            
*                               The first byte of this area contains            
*                               the length of the Certificate Request           
*                               ID                                 @LJA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_SUML_ENTRY      DSECT      Summary List Entry for REQDETAILS,              
*                               CERTDETAILS, or VERIFY                          
*                               ( a single entry )                 @LKC         
*                                                                               
PKIS_SUML_ENTRY_LEN   DS  X     Length (in bytes) of the                        
*                               Summary List entry value           @LJA         
*                                                                               
PKIS_SUML_ENTRY_VALUE DS  0C    Summary list entry value           @LJA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_MODIFYREQS_MAP   DSECT     Function Specific Parameter List                
*                               (FSPL) for MODIFYREQS              @LJA         
*                                                                               
PKIS_MODR_EYECATCH   DS  CL8    Eyecatcher for the MODIFYREQS FSPL              
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'MODREQS '                    @LJA         
*                                                                               
PKIS_MODR_ACTION     DS  F      4 byte binary value indicating                  
*                               the action to be taken against the              
*                               certificate requests               @LJA         
*                                                                               
PKIS_MODR_COMMENT@   DS  A      Address of a 65-Byte area that                  
*                               contains the comment data                       
*                               associated with this action. The                
*                               first byte of this area contains                
*                               the length of the actual comment.               
*                               If the length is x'00' then                     
*                               no comment will be recorded.       @LKA         
*                                                                               
PKIS_MODR_CERTIDL_LEN DS F      Length (in bytes) of the                        
*                               Certificate Request id list                     
*                               on input                           @LJA         
*                                                                               
PKIS_MODR_CERTIDL@   DS  A      Address of the area containing                  
*                               1 or more certificate request ids               
*                               that are to be modified by this                 
*                               request.                           @LJA         
*                                                                               
PKIS_MODR_CERTPL_LEN DS  F      Length (in bytes) of the                        
*                               Certificate modification                        
*                               plist area                         @LJA         
*                                                                               
PKIS_MODR_CERTPL@    DS  A      Address of the area which is                    
*                               the Certificate modification Plist @LJA         
*                                                                               
PKIS_MODR_ERRL_LEN   DS  F      Length (in bytes) of the error                  
*                               list data return area              @N5A         
*                                                                               
PKIS_MODR_ERRL@      DS  A      Address of the area where error                 
*                               list information is to be                       
*                               returned.                          @N5A         
PKIS_MODR_TSTAMP@    DS  A      Address of a 20-byte area that                  
*                               can contain a time stamp in                     
*                               'YYYY/MM/DD HH:MM:SS' format. The               
*                               first byte of this area contains                
*                               the length of the time stamp.                   
*                               If the length is x'00' then no                  
*                               time stamp is provided. Acceptable              
*                               lengths are '00'x and '13x' only.  @NCA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_QUERYCERTS_MAP  DSECT      Function Specific Parameter List                
*                               (FSPL) for QUERYCERTS              @LJA         
*                                                                               
PKIS_QRYC_EYECATCH   DS  CL8    Eyecatcher for the QUERYCERTS FSPL              
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'QUERYCTS'                    @LJA         
*                                                                               
PKIS_QRYC_RESULTL_LEN DS F      Length (in bytes) of the preallocated           
*                               Results List area on input to                   
*                               QUERYCERTS                         @LJA         
*                                                                               
PKIS_QRYC_RESULTL@   DS  A      Address of the pre-allocated data area          
*                               to hold successfully retrieved                  
*                               information                        @LJA         
*                                                                               
PKIS_QRYC_SERIALNUM@ DS  A      Address of a 17-Byte area that contains         
*                               the Input Certificate Serial Number             
*                               that will be used as a starting point           
*                               for this query. Only Certificates               
*                               located after this serial number will           
*                               be returned. The first byte of this             
*                               area contains the length of the                 
*                               Input Certificate Serial Number    @LOC         
*                                                                               
PKIS_QRYC_NUMENTRIES DS  F      Value indicating the maximum number of          
*                               entries to be returned in the Results           
*                               List area. Zero indicates no limit @LJA         
*                                                                               
PKIS_QRYC_CRIT_STATUS DS F      Value indicating the request status to          
*                               use as search criteria             @LJA         
*                                                                               
PKIS_QRYC_CRIT_DAYS  DS  F      Value indicating the recent activity            
*                               time to use as additional search                
*                               criteria                           @LJA         
*                                                                               
PKIS_QRYC_CRIT_NAME@ DS  A      Address of a 33-Byte area that contains         
*                               the input requestor's name to be used           
*                               as additional search criteria. The              
*                               first byte of this area contains the            
*                               length of the input requestor name @LJA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_CERTDETAILS_MAP  DSECT     Function Specific Parameter List                
*                               (FSPL) for CERTDETAILS             @LJA         
*                                                                               
PKIS_CRTD_EYECATCH   DS  CL8    Eyecatcher for the CERTDETAILS FSPL             
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'CRTDETLS'                    @LJA         
*                                                                               
PKIS_CRTD_SUML_LEN   DS  F      Length (in bytes) of the preallocated           
*                               Summary List area on input to                   
*                               CERTDETAILS                        @LJA         
*                                                                               
PKIS_CRTD_SUML@      DS  A      Address of the pre-allocated data area          
*                               to hold successfully retrieved                  
*                               information                        @LJA         
*                                                                               
PKIS_CRTD_CERTPL_LEN DS  F      Length (in bytes) of the Certificate            
*                               generation PList area on input     @LJA         
*                                                                               
PKIS_CRTD_CERTPL@    DS  A      Address in which the details of the             
*                               query are successfully retrieve into a          
*                               Certificate generation PList area  @LJA         
*                                                                               
PKIS_CRTD_SERIALNUM@ DS  A      Address of an Input Certificate                 
*                               Serial Number or an Input Certificate           
*                               Fingerprint for which the details will          
*                               be extracted.                                   
*                                 + When referencing an Input                   
*                                   Certificate Serial Number, this             
*                                   value is the address of a 17-Byte           
*                                   area, the first byte containing the         
*                                   length of the Certificate Serial            
*                                   Number.                                     
*                                 + When referencing an Input                   
*                                   Certificate Fingerprint, this value         
*                                   is one of two acceptable values:            
*                                     - The address of a 65-Byte area,          
*                                       the first byte containing the           
*                                       length of the Certificate               
*                                       Fingerprint, whose value                
*                                       contains no embedded separator          
*                                       characters,                             
*                                     OR                                        
*                                     - The address of a 96-Byte area,          
*                                       the first byte containing the           
*                                       length of the Certificate               
*                                       Fingerprint, whose value is             
*                                       expected to contain embedded            
*                                       separator characters of ':' or          
*                                       ' '.                       @NLC         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_MODIFYCERTS_MAP  DSECT     Function Specific Parameter List                
*                               (FSPL) for MODIFYCERTS             @LJA         
*                                                                               
PKIS_MODC_EYECATCH   DS  CL8    Eyecatcher for MODIFYCERTS FSPL                 
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'MODCERTS'                    @LJA         
*                                                                               
PKIS_MODC_ACTION     DS  F      4 byte binary value indicating                  
*                               the action to be taken against the              
*                               certificates identified by the                  
*                               serial number list.                @LJA         
*                                                                               
PKIS_MODC_COMMENT@   DS  A      Address of a 65-Byte area that                  
*                               contains the comment data associated            
*                               with this action. The first byte                
*                               of this area contains the length of             
*                               the actual comment. If the length is            
*                               x'00' then no comment will be                   
*                               recorded.                          @LKM         
*                                                                               
PKIS_MODC_SERIALNUMSL_LEN DS F  Length (in bytes) of the                        
*                               Serial Numbers list on input.      @LJA         
*                                                                               
PKIS_MODC_SERIALNUMSL@ DS  A    Address of the area containing                  
*                               1 or more Serial Numbers of                     
*                               certificates that are to be                     
*                               modified by this request.          @LJA         
*                                                                               
PKIS_MODC_REASON     DS  F      4 byte binary value indicating                  
*                               the reason for certificate                      
*                               revocation                         @LJA         
*                                                                               
PKIS_MODC_REQUESTOREMAIL@  DS  A  Address of a 33-byte area that                
*                                 contains the new e-mail address of            
*                                 the requestor.  The first byte of             
*                                 this area contains the length of the          
*                                 e-mail address.                  @MUA         
*                                                                               
PKIS_MODC_ERRL_LEN   DS  F      Length (in bytes) of the error                  
*                               list data return area              @N5A         
*                                                                               
PKIS_MODC_ERRL@      DS  A      Address of the area where error                 
*                               list information is to be                       
*                               returned.                          @N5A         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_SNID_ENTRY      DSECT      Certificate ID or Serial Number                 
*                               ( a single entry )                 @LJA         
*                                                                               
PKIS_SNID_ENTRY_LEN   DS  X     Length (in bytes) of the Cert ID or             
*                               Serial Number entry value          @LJA         
*                                                                               
PKIS_SNID_ENTRY_VALUE DS  0C    Cert ID or Serial Number entry value            
*                                                                  @LJA         
*------------------------------*                                                
*                                                                               
PKIS_VERIFY_MAP       DSECT     Function Specific Parameter List                
*                               (FSPL) for VERIFY                  @LKA         
*                                                                               
PKIS_VERF_EYECATCH   DS  CL8    Eyecatcher for the VERIFY FSPL                  
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'VERIFY  '                    @LKA         
*                                                                               
PKIS_VERF_SUML_LEN   DS  F      Length (in bytes) of the preallocated           
*                               Summary List area on input to                   
*                               VERIFY                             @LKA         
*                                                                               
PKIS_VERF_SUML@      DS  A      Address of the pre-allocated data area          
*                               to hold successfully retrieved                  
*                               information                        @LKA         
*                                                                               
PKIS_VERF_CERTPL_LEN DS  F      Length (in bytes) of the Certificate            
*                               generation PList area on input     @LKA         
*                                                                               
PKIS_VERF_CERTPL@    DS  A      Address in which the results of the             
*                               verify are successfully retrieve into a         
*                               Certificate generation PList area  @LKA         
*                                                                               
PKIS_VERF_CERT_LEN   DS  F      Length (in bytes) of the Cert area              
*                               containing the certificate to verify            
*                                                                  @LKA         
*                                                                               
PKIS_VERF_CERT@      DS  A      Address of the area containing the              
*                               Certificate to verify              @LKA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_REVOKE_MAP      DSECT      Function Specific Parameter List                
*                               (FSPL) for REVOKE                  @LKA         
*                                                                               
PKIS_REVK_EYECATCH   DS  CL8    Eyecatcher for the REVOKE FSPL                  
*                               Left justified blank filled string              
*                               containing user specified text,                 
*                               e.g. 'REVOKE  '                    @LKA         
*                                                                               
PKIS_REVK_REASON     DS  F      4 byte binary value indicating                  
*                               the reason for the certificate                  
*                               revocation                         @LKA         
*                                                                               
PKIS_REVK_SERIALNUM@ DS  A      Address of a 17-Byte area that contains         
*                               the Input Certificate Serial Number to          
*                               be revoked. The first byte of this area         
*                               contains the length of the Input                
*                               Certificate Serial Number.         @LKA         
*                                                                               
*------------------------------*                                                
*                                                                               
PKIS_RENEW_MAP       DSECT      Function Specific Parameter List                
*                               (FSPL) for GENRENEW and REQRENEW   @LKA         
*                                                                               
PKIS_RENW_EYECATCH   DS  CL8    Eyecatcher for the GENRENEW FSPL and            
*                               the REQRENEW FSPL                               
*                               Left justified blank filled string              
*                               containing the text 'RENEW   '     @LKA         
*                                                                               
PKIS_RENW_CERTPL_LEN DS  F      Length (in bytes) of the Digital                
*                               Certificate generation PList       @LKA         
*                                                                               
PKIS_RENW_CERTPL@    DS  A      Address of the Digital                          
*                               Certificate generation PList       @LKA         
*                                                                               
PKIS_RENW_CERTID@    DS  A      Address of a 57-Byte area that                  
*                               contains the Output Certificate                 
*                               Request ID (the first byte of this              
*                               area contains the length of the                 
*                               Output Certificate Request ID)     @LKA         
*                                                                               
PKIS_RENW_SERIALNUM@ DS  A      Address of a 17-Byte area that contains         
*                               the input Certficate Serial Number to           
*                               be renewed. The first byte of this area         
*                               contains the length of the Input                
*                               Certificate Serial Number.         @LOC         
*                                                                  @LOD         
*                                                                               
*---------------------------------------------------------------------*         
*   PKIS Function Specific Parameter List for RESPOND             @M3A*         
*---------------------------------------------------------------------*         
*                                                                               
PKIS_RESPOND_MAP        DSECT     Function Specific Parameter List              
*                                 (FSPL) for RESPOND               @M3A         
*                                                                               
PKIS_RESP_EYECATCH      DS  CL8   Eyecatcher for the RESPOND FSPL.              
*                                 Left justified blank filled string            
*                                 containing user specified text,               
*                                 e.g. 'RESPOND '                  @M3A         
*                                                                               
PKIS_RESP_RESPONSE_LEN  DS  F     Length (in bytes) of the Response             
*                                 area on input to RESPOND         @M3A         
*                                                                               
PKIS_RESP_RESPONSE@     DS  A     Address in which the results of the           
*                                 RESPOND function are stored upon a            
*                                 successful completion of the request          
*                                                                  @M3A         
*                                                                               
PKIS_RESP_REQUEST_LEN   DS  F     Length (in bytes) of the Request area         
*                                 containing the input request data             
*                                                                  @M3A         
*                                                                               
PKIS_RESP_REQUEST@      DS  A     Address of the area containing the            
*                                 Request                          @M3A         
*                                                                               
*---------------------------------------------------------------------*         
*  PKIS Function Specific Parameter List for SCEPREQ              @M7A*         
*---------------------------------------------------------------------*         
*                                                                               
PKIS_SCEPREQ_MAP        DSECT     Function Specific Parm List                   
*                                 (FSPL) for SCEPREQ               @M7A         
PKIS_SCEP_EYECATCH      DS  CL8   Eyecatcher for the SCEPREQ FSPL.              
*                                 Left justified, blank filled string           
*                                 containing user specified text,               
*                                 e.g. 'SCEPREQ '                  @M7A         
PKIS_SCEP_RESPONSE_LEN  DS  F     Length (in bytes) of the Response             
*                                 area on input to SCEPREQ         @M7A         
PKIS_SCEP_RESPONSE@     DS  A     Address in which the results of               
*                                 the SCEPREQ function are stored upon          
*                                 a successful completion of the                
*                                 request                          @M7A         
PKIS_SCEP_REQUEST_LEN   DS  F     Length (in bytes) of the Request              
*                                 area containing the input request             
*                                 data                             @M7A         
PKIS_SCEP_REQUEST@      DS  A     Address of the area containing the            
*                                 Request                          @M7A         
*                                                                               
*---------------------------------------------------------------------*         
*    PKIS Function Specific Parameter List for PREREGISTER        @M7A*         
*---------------------------------------------------------------------*         
*                                                                               
PKIS_PREREG_MAP         DSECT     Function Specific Parm List                   
*                                 (FSPL) for PREREGISTER           @M7A         
PKIS_PREG_EYECATCH      DS  CL8   Eyecatcher for the SCEPREQ                    
*                                 PRERIGISTER FSPL.  Left                       
*                                 justified, blank filled string                
*                                 containing user specified                     
*                                 text, e.g. 'PREREG  '            @M7A         
PKIS_PREG_CERTPL_LEN    DS  F     Length (in bytes) of the                      
*                                 preregistration parameter list   @M7A         
PKIS_PREG_CERTPL@       DS  A     Address of the preregistration                
*                                 parameter list                   @M7A         
PKIS_PREG_CERTID@       DS  A     Address of a 57-Byte area that                
*                                 contains the Output Certificate               
*                                 Request ID (the first byte of this            
*                                 area contains the length of the               
*                                 Output Certificate Request ID)   @M7A         
*                                                                               
*---------------------------------------------------------------------*         
*    PKIS Function Specific Parameter List for QRECOVER           @MUA*         
*---------------------------------------------------------------------*         
*                                                                               
PKIS_QRECOVER_MAP       DSECT     Mapping for QRECOVER function                 
*                                 specific parameter list          @MUA         
*                                                                               
PKIS_QREC_EYECATCH      DS  CL8   Eyecatcher, 8 characters left                 
*                                 justified blank filled. Actual                
*                                 value set by invoker, e.g.                    
*                                 'QRECOVER'.                      @MUA         
*                                                                               
PKIS_QREC_RESULTL_LEN   DS  F     Length (in bytes) of the                      
*                                 preallocated Results List area.  @MUA         
*                                 R_PKIServ will update this field with         
*                                 the actual length of the Results List         
*                                 if successful or with the length              
*                                 needed if the Results List buffer is          
*                                 too small.                       @MUA         
*                                                                               
PKIS_QREC_RESULTL@      DS  A     Address of the preallocated                   
*                                 Results List area                @MUA         
*                                                                               
PKIS_QREC_NUMENTRIES    DS  F     Value indicating the maximum number           
*                                 of entries to be returned in the              
*                                 Results List area.  Zero indicates            
*                                 no limit.                        @MUA         
*                                                                               
PKIS_QREC_CRIT_EMAIL@   DS  A     Address of a 33-byte area that                
*                                 contains the input requestor's email          
*                                 address as search criteria.                   
*                                 The first byte of this area contains          
*                                 the length of the email address. @MUA         
*                                                                               
PKIS_QREC_CRIT_PASS@    DS  A     Address of a 33-byte area that                
*                                 contains the input pass phrase as             
*                                 additional search criteria.                   
*                                 The first byte of this area contains          
*                                 the length of the pass phrase.   @MUA         
*                                                                               
*                                                                               
*******************************************************************@0AA         
*                                                                               
*******************************************************************@LIA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   RACL Function Specific Parameter List                             *         
*                                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
RACL_EDIT            DSECT      Function Specific Parameter List                
*                               (FSPL) for EDIT                    @LIA         
*                                                                               
RACL_EDIT_OPTYPE     DS  AL2    Operation Type                     @LIA         
*                                                                               
RACL_EDIT_ACLTYPE    DS  AL2    ACL Type                           @LIA         
*                                                                               
RACL_EDIT_ACL        DS  0C     An ACL structure containing                     
*                               entries to be modified             @LIA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   RACL Operation Type Constants                                  @LIA         
*                                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
RACL_ADD           EQU X'0001'  ADD the HFS ACL                    @LIA         
*                                                                               
RACL_MODIFY        EQU X'0002'  MODIFY the HFS ACL                 @LIA         
*                                                                               
RACL_DELETE        EQU X'0003'  DELETE the HFS ACL                 @LIA         
*                                                                               
*---------------------------------------------------------------------*         
*                                                                     *         
*   RACL HFS ACL Type Constants                                    @LIA         
*                                                                     *         
*---------------------------------------------------------------------*         
*                                                                               
RACL_ACCESS        EQU X'0001'  Access HFS ACL                     @LIA         
*                                                                               
RACL_FILEMOD       EQU X'0002'  File Model HFS ACL                 @LIA         
*                                                                               
RACL_DIRMOD        EQU X'0003'  Directory Model HFS ACL            @LIA         
*                                                                               
*------------------------------------------------------------------             
*                                                                               
* PRXY Function Specific Parameter Lists                           @LVA         
*                                                                               
*------------------------------------------------------------------             
PRXY_F3_PLIST        DSECT      Mapping for PRXY_CHANGELOG         @LVA         
PRXY_F3_OPTYPE       DS  AL1    Operation type                     @LVA         
PRXY_F3_OP_ADD       EQU 0        Optype = Add                     @LVA         
PRXY_F3_OP_DEL       EQU 1        Optype = Delete                  @LVA         
PRXY_F3_OP_MOD       EQU 2        Optype = Modify                  @LVA         
PRXY_F3_FLAGS        DS  AL1    Flag byte                          @LVA         
PRXY_F3_PWUPD        EQU X'80'  Password/phrase is changed         @MDC         
PRXY_F3_PWUPD2       EQU X'40'  Password/phrase is enveloped       @MDC         
PRXY_F3_PWUPD3       EQU X'20'  Request is for phrase (0=password) @MDA         
PRXY_F3_CLASS        DS  CL8    RACF class name in which profile                
*                               is changed                         @LVA         
PRXY_F3_PROFLEN      DS  AL2    Length of profile name             @LVA         
PRXY_F3_PROFNAME@    DS  A      Address of profile name            @LVA         
PRXY_F3_INITIATOR    DS  CL8    User ID initiating the profile                  
*                               change                             @LVA         
PRXY_F3_DATETIME     DS  CL22   GMT for update in format                        
*                                yyymmddhhiiss.uuuuuuZ             @LVA         
*                                                                               
PRXY_F3_PLIST_LEN0   EQU *-PRXY_F3_PLIST   F3 ver 0 plist length   @LVA         
*                                                                               
*------------------------------------------------------------------             
*                                                                               
* RAUX Structures                                                  @LXA         
*                                                                               
*------------------------------------------------------------------             
RAUX_RELOCATE        DSECT      Mapping for relocate               @LXA         
RAUX_RELO_TYPE       DS  AL2    Section type                       @LXA         
                     DS  AL2    Reserved                           @LXA         
RAUX_RELO_LEN        DS  F      Length of section data             @LXA         
                     DS  F      Reserved                           @LXA         
RAUX_RELO_DATA_PTR   DS  A      Address of section data            @LXA         
*                                                                               
RAUX_SEGMENT         DSECT      Mapping for message segment        @LXA         
                     DS  F      Reserved                           @LXA         
RAUX_SEG_LEN         DS  F      Length of segment data             @LXA         
                     DS  F      Reserved                           @LXA         
RAUX_SEG_PTR         DS  A      Address of segment data            @LXA         
*                                                                               
*                                                                               
* RAUX attribute values                                            @LXA         
*                                                                               
RAUX_ATTR_RESULT          EQU X'80000000'  Event result            @LYA         
RAUX_ATTR_AUTHENTICATION  EQU X'40000000'  Authentication event    @LYC         
RAUX_ATTR_AUTHORIZATION   EQU X'20000000'  Authorization  event    @LYC         
RAUX_ATTR_LOG_SUCCESS     EQU X'10000000'  Always log successes    @LYC         
RAUX_ATTR_LOG_FAILURE     EQU X'08000000'  Always log failures     @LYC         
RAUX_ATTR_NOLOG_SUCCESS   EQU X'04000000'  Never log successes     @LYC         
RAUX_ATTR_NOLOG_FAILURE   EQU X'02000000'  Never log failures      @LYC         
RAUX_ATTR_WARN_FAILURE    EQU X'01000000'  Issue warning message   @LYC         
*                                            for failures          @LXA         
*                                                                 4@LYD         
*                                                                               
*******************************************************************@LIA         
***********************************************************************         
*  PGSN function-specific parameter lists                          @MMA         
***********************************************************************         
*                                                                               
***********************************************************************         
*  Function code 1: Initialize Program Signing (SIGINIT)              *         
***********************************************************************         
PGSN_SI_PLIST        DSECT                                         @MMA         
PGSN_SI_EYE          DS  CL8    Eyecatcher = 'SIGINIT '            @MMA         
PGSN_SI_VERS         DS  F      Version                            @MMA         
PGSN_SI_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_SI_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_SI_PGM_NAME@                         @MMA         
PGSN_SI_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_SI_PGM_NAME@L   DS  A      Low-order address                  @MMA         
PGSN_SI_KEYRING_NAME@ DS AD     Address of the name of the                      
*                               SAF key ring or PKCS #11 token                  
*                               that contains the certificates                  
*                               to be used for signing. The                     
*                               address is meaningful only if                   
*                               PGSN_KEYRING_LEN is non-zero.The name           
*                               that this address points to has                 
*                               the following syntax:                           
*                               owning-userid/ring-or-token-name                
*                               The owning-userid (but not the                  
*                               slash) may be omitted if the                    
*                               key ring is owned by the user                   
*                               ID associated with the calling                  
*                               application. If a PKCS #11                      
*                               token is to be used, specify                    
*                               *TOKEN* for the owning user ID     @MMA         
                     ORG PGSN_SI_KEYRING_NAME@                     @MMA         
PGSN_SI_KEYRING_NAME@H DS F     High-order address                 @MMA         
PGSN_SI_KEYRING_NAME@L DS A     Low-order address                  @MMA         
PGSN_SI_KEYRING_LEN    DS F     Length of the name of the                       
*                               SAF key ring or PKCS #11 token                  
*                               that contains the certificates                  
*                               to be used for signing. Set                     
*                               this field to binary zero to                    
*                               have the security manager                       
*                               determine the key ring to use.     @MMA         
PGSN_SI_SIGINFO_LEN    DS F     32-bit length of the ZOSSignatureInfo           
*                               structure which will be                         
*                               returned as part of the                         
*                               signature area structure in                     
*                               the SIGFINAL call.                 @MMA         
PGSN_SI_DIGEST_ALG     DS AL1   Numeric value indicating what                   
*                               message digest algorithm to                     
*                               use for the signing.                            
*                                 0 - Let the security product                  
*                                     determine the algorithm                   
*                                 1 - Use SHA-256                  @MOC         
*                                 2 - Use SHA-512                  @NOC         
*                                                                               
***********************************************************************         
*  Function code 2: Sign intermediate program data (SIGUPDAT)         *         
***********************************************************************         
PGSN_SU_PLIST        DSECT                                         @MMA         
PGSN_SU_EYE          DS  CL8    Eyecatcher = 'SIGUPDAT'            @MMA         
PGSN_SU_VERS         DS  F      Version                            @MMA         
PGSN_SU_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_SU_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_SU_PGM_NAME@                         @MMA         
PGSN_SU_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_SU_PGM_NAME@L   DS  A      Low-order address                  @MMA         
PGSN_SU_PGM_DATA@    DS  AD     Address of a structure                          
*                               specifying the intermediate range(s)            
*                               of data to sign.  The structure                 
*                               is mapped by PGSN_DATA_RANGE.      @MMA         
                     ORG PGSN_SU_PGM_DATA@                         @MMA         
PGSN_SU_PGM_DATA@H   DS  F      High-order address                 @MMA         
PGSN_SU_PGM_DATA@L   DS  A      Low-order address                  @MMA         
*                                                                               
***********************************************************************         
*  Function code 3: Finalize Program Signature (SIGFINAL)             *         
***********************************************************************         
PGSN_SF_PLIST        DSECT                                         @MMA         
PGSN_SF_EYE          DS  CL8    Eyecatcher = 'SIGFINAL'            @MMA         
PGSN_SF_VERS         DS  F      Version                            @MMA         
PGSN_SF_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_SF_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_SF_PGM_NAME@                         @MMA         
PGSN_SF_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_SF_PGM_NAME@L   DS  A      Low-order address                  @MMA         
PGSN_SF_PGM_DATA@    DS  AD     Address of a structure                          
*                               specifying the final range(s)                   
*                               of data to sign.  The structure                 
*                               is mapped by PGSN_DATA_RANGE.      @MMA         
                     ORG PGSN_SF_PGM_DATA@                         @MMA         
PGSN_SF_PGM_DATA@H   DS  F      High-order address                 @MMA         
PGSN_SF_PGM_DATA@L   DS  A      Low-order address                  @MMA         
PGSN_SF_SIG_AREA@    DS  AD     Address of allocated signature                  
*                               structure.                         @MMA         
                     ORG PGSN_SF_SIG_AREA@                         @MMA         
PGSN_SF_SIG_AREA@H   DS  F      High-order address                 @MMA         
PGSN_SF_SIG_AREA@L   DS  A      Low-order address                  @MMA         
PGSN_SF_SUBPOOL      DS  AL1    Subpool to be used for                          
*                               allocation of the signature area                
*                               data structure. For problem                     
*                               state callers, this must be                     
*                               a value in the range 1-127.        @PEC         
*                                                                               
*  ********************************************************************         
*  * Mapping for the signature area pointed to by PGSN_SF_SIG_AREA@.  *         
*  ********************************************************************         
PGSN_SIG_AREA        DSECT                                         @MMA         
PGSN_SIG_AREA_FIXED  EQU *                                         @MMA         
PGSN_SIG_EYE         DS  CL4    Eyecatcher = 'PSSD'                @MMA         
PGSN_SIG_AREA_LEN    DS  AL4    32-bit length of entire area       @MMA         
PGSN_SIG_SUBPOOL     DS  AL1    Subpool used to obtain the                      
*                               area storage                       @MMA         
                     DS  AL3    Reserved                           @MMA         
PGSN_SIG_SIGINFO_LEN DS  F      32-bit length of ZOSSignatureInfo               
*                               structure                          @MMA         
PGSN_SIG_AREA_VAR    EQU *                                         @MMA         
PGSN_SIG_SIGINFO     DS  0C     ZOSSignatureInfo structure to                   
*                               be included in the signed                       
*                               program object.                    @MMA         
*                                                                               
***********************************************************************         
*  Function code 4: Terminate signature operation (SIGCLEAN)          *         
***********************************************************************         
PGSN_SC_PLIST        DSECT                                         @MMA         
PGSN_SC_EYE          DS  CL8    Eyecatcher = 'SIGCLEAN'            @MMA         
PGSN_SC_VERS         DS  F      Version                            @MMA         
PGSN_SC_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_SC_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_SC_PGM_NAME@                         @MMA         
PGSN_SC_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_SC_PGM_NAME@L   DS  A      Low-order address                  @MMA         
*                                                                               
***********************************************************************         
*  Function code 5: Initialize signature verification (VERINIT)       *         
***********************************************************************         
PGSN_VI_PLIST        DSECT                                         @MMA         
PGSN_VI_EYE          DS  CL8    Eyecatcher = 'VERINIT '            @MMA         
PGSN_VI_VERS         DS  F      Version                            @MMA         
PGSN_VI_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_VI_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_VI_PGM_NAME@                         @MMA         
PGSN_VI_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_VI_PGM_NAME@L   DS  A      Low-order address                  @MMA         
PGSN_VI_CONTEXT@     DS  AD     For supervisor callers,                         
*                               address of the allocated                        
*                               verify context.                    @MMA         
                     ORG PGSN_VI_CONTEXT@                          @MMA         
PGSN_VI_CONTEXT@H    DS  F      High-order address                 @MMA         
PGSN_VI_CONTEXT@L    DS  A      Low-order address                  @MMA         
PGSN_VI_PGM_DATA@    DS  AD     Address of a structure                          
*                               specifying the initial range(s)                 
*                               of data to verify.  The structure               
*                               is mapped by PGSN_DATA_RANGE.      @MMA         
                     ORG PGSN_VI_PGM_DATA@                         @MMA         
PGSN_VI_PGM_DATA@H   DS  F      High-order address                 @MMA         
PGSN_VI_PGM_DATA@L   DS  A      Low-order address                  @MMA         
PGSN_VI_SIGINFO@     DS  AD     Address of the ZOSSignatureInfo                 
*                               structure extracted from the                    
*                               program object being verified.     @MOA         
                     ORG PGSN_VI_SIGINFO@                          @MOA         
PGSN_VI_SIGINFO@H    DS  F      High-order address                 @MOA         
PGSN_VI_SIGINFO@L    DS  A      Low-order address                  @MOA         
PGSN_VI_SIGINFO_LEN  DS  F      32-bit length of the ZOSSignatureInfo           
*                               structure extracted from the                    
*                               program object being verified.     @MOA         
PGSN_VI_DIGEST_ALG   DS  AL1    Numeric value indicating                        
*                               what message digest algorithm                   
*                               to use for the verification.                    
*                               Zero means use the value contained              
*                               in the zOSSignatureInfo structure.              
*                               This is the only supported value.  @MOC         
*                                                                               
***********************************************************************         
*  Function code 6: Digest intermediate program data (VERUPDAT)       *         
***********************************************************************         
PGSN_VU_PLIST        DSECT                                         @MMA         
PGSN_VU_EYE          DS  CL8    Eyecatcher = 'VERUPDAT'            @MMA         
PGSN_VU_VERS         DS  F      Version                            @MMA         
PGSN_VU_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_VU_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_VU_PGM_NAME@                         @MMA         
PGSN_VU_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_VU_PGM_NAME@L   DS  A      Low-order address                  @MMA         
PGSN_VU_CONTEXT@     DS  AD     For supervisor callers,                         
*                               address of the allocated                        
*                               verify context.                    @MMA         
                     ORG PGSN_VU_CONTEXT@                          @MMA         
PGSN_VU_CONTEXT@H    DS  F      High-order address                 @MMA         
PGSN_VU_CONTEXT@L    DS  A      Low-order address                  @MMA         
PGSN_VU_PGM_DATA@    DS  AD     Address of a structure                          
*                               specifying the intermediate range(s)            
*                               of data to verify.  The structure               
*                               is mapped by PGSN_DATA_RANGE.      @MMA         
                     ORG PGSN_VU_PGM_DATA@                         @MMA         
PGSN_VU_PGM_DATA@H   DS  F      High-order address                 @MMA         
PGSN_VU_PGM_DATA@L   DS  A      Low-order address                  @MMA         
*                                                                               
***********************************************************************         
*  Function code 7: Perform final verification (VERFINAL)             *         
***********************************************************************         
PGSN_VF_PLIST        DSECT                                         @MMA         
PGSN_VF_EYE          DS  CL8    Eyecatcher = 'VERFINAL'            @MMA         
PGSN_VF_VERS         DS  F      Version                            @MMA         
PGSN_VF_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_VF_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_VF_PGM_NAME@                         @MMA         
PGSN_VF_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_VF_PGM_NAME@L   DS  A      Low-order address                  @MMA         
PGSN_VF_CONTEXT@     DS  AD     For supervisor callers,                         
*                               address of the allocated                        
*                               verify context.                    @MMA         
                     ORG PGSN_VF_CONTEXT@                          @MMA         
PGSN_VF_CONTEXT@H    DS  F      High-order address                 @MMA         
PGSN_VF_CONTEXT@L    DS  A      Low-order address                  @MMA         
PGSN_VF_PGM_DATA@    DS  AD     Address of a structure                          
*                               specifying the final range(s)                   
*                               of data to verify.  The structure               
*                               is mapped by PGSN_DATA_RANGE.      @MMA         
                     ORG PGSN_VF_PGM_DATA@                         @MMA         
PGSN_VF_PGM_DATA@H   DS  F      High-order address                 @MMA         
PGSN_VF_PGM_DATA@L   DS  A      Low-order address                  @MMA         
PGSN_VF_LOGSTRING@   DS  AD     Address of an area that                         
*                               consists of a 1 byte length                     
*                               field followed by character                     
*                               data (up to 255 bytes) to be                    
*                               included in any audit records                   
*                               that are created. If the                        
*                               address or the length byte                      
*                               is 0, this parameter is ignored    @MMA         
                     ORG PGSN_VF_LOGSTRING@                        @MMA         
PGSN_VF_LOGSTRING@H  DS  F      High-order address                 @MMA         
PGSN_VF_LOGSTRING@L  DS  A      Low-order address                  @MMA         
PGSN_VF_ICHSFENT@    DS  AD     For supervisor callers,                         
*                               address of the FASTAUTH entity                  
*                               parameter mapping (previously                   
*                               retrieved from RACF by                          
*                               Contents Supervision).             @MMA         
                     ORG PGSN_VF_ICHSFENT@                         @MMA         
PGSN_VF_ICHSFENT@H   DS  F      High-order address                 @MMA         
PGSN_VF_ICHSFENT@L   DS  A      Low-order address                  @MMA         
PGSN_VF_SIGINFO@     DS  AD     Address of the ZOSSignatureInfo                 
*                               structure extracted from the                    
*                               program object being verified.                  
*                               Ignored if VERINIT was called.     @MOC         
                     ORG PGSN_VF_SIGINFO@                          @PEC         
PGSN_VF_SIGINFO@H    DS  F      High-order address                 @PEC         
PGSN_VF_SIGINFO@L    DS  A      Low-order address                  @PEC         
PGSN_VF_SIGINFO_LEN  DS  F      32-bit length of the ZOSSignatureInfo           
*                               structure extracted from the                    
*                               program object being verified.                  
*                               Ignored if VERINIT was called.     @MOC         
*                                                                               
***********************************************************************         
*  Function code 8: Terminate verification operation (VERCLEAN)       *         
***********************************************************************         
PGSN_VC_PLIST        DSECT                                         @MMA         
PGSN_VC_EYE          DS  CL8    Eyecatcher = 'VERCLEAN'            @MMA         
PGSN_VC_VERS         DS  F      Version                            @MMA         
PGSN_VC_PGM_NAME_LEN DS  F      Length of the name of the program               
*                               being signed. The length must not               
*                               exceed 8 characters.               @MMA         
PGSN_VC_PGM_NAME@    DS  AD     Address of the name of the                      
*                               program being signed.              @MMA         
                     ORG PGSN_VC_PGM_NAME@                         @MMA         
PGSN_VC_PGM_NAME@H   DS  F      High-order address                 @MMA         
PGSN_VC_PGM_NAME@L   DS  A      Low-order address                  @MMA         
PGSN_VC_CONTEXT@     DS  AD     For supervisor callers,                         
*                               address of the allocated                        
*                               verify context.                    @MMA         
                     ORG PGSN_VC_CONTEXT@                          @MMA         
PGSN_VC_CONTEXT@H    DS  F      High-order address                 @MMA         
PGSN_VC_CONTEXT@L    DS  A      Low-order address                  @MMA         
*                                                                               
***********************************************************************         
*  Function code 9: Interrogate Directive (VERINTER)                  *         
***********************************************************************         
PGSN_ID_PLIST        DSECT                                         @MMA         
PGSN_ID_EYE          DS  CL8    Eyecatcher = 'VERINTER'            @MMA         
PGSN_ID_VERS         DS  F      Version                            @MMA         
                     DS  CL4    Reserved                           @MMA         
PGSN_ID_ICHSFENT@    DS  AD     For supervisor callers,                         
*                               address of the FASTAUTH entity                  
*                               parameter mapping (previously                   
*                               retrieved from RACF by                          
*                               Contents Supervision).             @MMA         
                     ORG PGSN_ID_ICHSFENT@                         @MMA         
PGSN_ID_ICHSFENT@H   DS  F      High-order address                 @MMA         
PGSN_ID_ICHSFENT@L   DS  A      Low-order address                  @MMA         
PGSN_ID_LOGSTRING@   DS  AD     Address of an area that                         
*                               consists of a 1 byte length                     
*                               field followed by character                     
*                               data (up to 255 bytes) to be                    
*                               included in any audit records                   
*                               that are created. If the                        
*                               address or the length byte                      
*                               is 0, this parameter is ignored    @MMA         
                     ORG PGSN_ID_LOGSTRING@                        @MMA         
PGSN_ID_LOGSTRING@H  DS  F      High-order address                 @MMA         
PGSN_ID_LOGSTRING@L  DS  A      Low-order address                  @MMA         
PGSN_ID_EVENT        DS  AL1    Constant indicating what                        
*                               signature verification event                    
*                               was detected by the loader.                     
*                               See constant values defined                     
*                               below.                             @MMA         
PGSN_ID_EVENT_NOSIG  EQU X'01'  Digital signature processing is                 
*                               required for this module (directive             
*                               in ICHSFENT is non-0). No signature             
*                               exists.                            @MMA         
PGSN_ID_EVENT_BADMOD EQU X'02'  Digital signature is required                   
*                               for this module. The PDSE                       
*                               directory entry for the                         
*                               module indicates it is signed,                  
*                               but the digital signature is                    
*                               missing.                           @MMA         
*                                                                               
*  ********************************************************************         
*  * Mapping for the data range structure for signature generation    *         
*  * and verification.                                                *         
*  ********************************************************************         
PGSN_DATA_RANGE      DSECT                                         @MMA         
PGSN_DATA_HEADER     EQU *                                         @MMA         
PGSN_DATA_ALET       DS  F      The ALET for the address space                  
*                               containing the data                @MMA         
PGSN_DATA_NUM_RANGES DS  F      The number of data ranges in                    
*                               the following array                @MMA         
PGSN_DATA_RANGE_LIST DS  0C     Start of array, entries mapped as               
*                               follows                            @MMA         
PGSN_DATA_ENTRY      DSECT                                         @MMA         
PGSN_DATA_START@     DS  AD     Address of the first byte in                    
*                               the data range                     @MMA         
                     ORG PGSN_DATA_START@                          @MMA         
PGSN_DATA_START@H    DS  F      High-order address                 @MMA         
PGSN_DATA_START@L    DS  A      Low-order address                  @MMA         
PGSN_DATA_END@       DS  AD     Address of the last byte in                     
*                               the data range                     @MMA         
                     ORG PGSN_DATA_END@                            @MMA         
PGSN_DATA_END@H      DS  F      High-order address                 @MMA         
PGSN_DATA_END@L      DS  A      Low-order address                  @MMA         
*                                                                               
PGSN_DATA_NUM_RANGES_MAX EQU 16 Maximum number of entries in                    
*                               PGSN_DATA_RANGE_LIST               @MMA         
*                                                                               
*  ********************************************************************         
*  * Mapping of the ZOSSignatureInfo structure when:                  *         
*  * - PGSN_NUM_PARMS@ points to a full word set to 0x0000000B (11)   *         
*  * - PGSN_FUNC_ADDRS@ points to a full word set to 0x40000000       *         
*  ********************************************************************         
PGSN_SIGNINFO_KDSA   DSECT                                         @NOA         
PGSN_SINFO_SIG_RVAL   DS CL80   Signature R value                  @NOA         
PGSN_SINFO_SIG_SVAL   DS CL80   Signature S value                  @NOA         
PGSN_SINFO_DIGEST     DS CL64   Digest value of input data ranges  @NOA         
PGSN_SINFO_SUBJ_KEYID DS CL20   Signing cert Subject Key ID value  @NOA         
PGSN_SINFO_CERT_FPRT  DS CL32   Signing cert fingerprint           @NOA         
PGSN_SINFO_DIGEST_ALG DS XL1    Digest algorithm used:                          
*                               0x02 = SHA-512                     @NOA         
PGSN_SINFO_SIGN_ALG   DS XL1    Signature algorithm used:                       
*                               0x02 = SHA512ECDSA                 @NOA         
*                                                                               
PGSN_SINFO_DIGEST_ALG_SHA2_512   EQU 2  SHA512 Digest Algorithm    @NOA         
PGSN_SINFO_SIGN_ALG_SHA512_ECDSA EQU 2  SHA512 Signature Algorithm @NOA         
*                                                                               
***********************************************************************         
*  XPWD function-specific parameter lists                          @NEA         
***********************************************************************         
*                                                                               
***********************************************************************         
*  Function code 1: Verify a password or phrase                    @NFA         
***********************************************************************         
XPWD_VFY_PLIST       DSECT                                         @NFA         
XPWD_VFY_OPTIONS     DS  F      Must be any of the following:      @0CC         
*                                X'00000000' normal verify         @NFA         
*                                X'80000000' extended verify       @NFA         
*                                X'40000000' fast-fail             @0CA         
***********************************************************************         
*  Function code 2: Generate KDFAES values                            *         
***********************************************************************         
XPWD_GEN_PLIST       DSECT                                         @NEA         
                     DS  F      Reserved. Must be X'00000000'      @NEA         
XPWD_GEN_CRYPT1_LEN  DS  F      Length of first encrypted value    @NEA         
                     DS  F      Reserved. Must be X'00000000'      @NEA         
XPWD_GEN_CRYPT1@     DS  A      Address of first encrypted value   @NEA         
XPWD_GEN_CRYPT2_LEN  DS  F      Length of second encrypted value   @NEA         
                     DS  F      Reserved. Must be X'00000000'      @NEA         
XPWD_GEN_CRYPT2@     DS  A      Address of second encrypted value  @NEA         
*---------------------------------------------------------------------*         
                   MEND                                              */         
*                                                                               
*                                                                               
*                                                                               
*                                                                               
*                                                                               
*                                                                               
*                                                                               
*/********************************************************************/         
*/********************************************************************/         
*/********************************************************************/         
*/*                                                                  */         
*/*                     COMP DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*   DECLARATION NAME = COMP                                        */         
*/*                                                                  */         
*/*   DESCRIPTIVE NAME =   OMVS  common SAF/RACF parameter list.     */         
*/*                                                                  */         
*/*   FUNCTION = Provides mapping of the common input parameter      */         
*/*              list for the   OMVS  SAF/RACF routers.              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  1 COMP  BASED BDY(WORD),      /* Common SAF/RACF plist.           */         
*                                                                               
*   3 COMP_WORKA_STOR@ PTR(31),  /* Addr of 1024 byte work area.     */         
*                                                                               
*   3 COMP_SAFRC_ALET@ PTR(31),  /* Addr of ALET for SAF RC.         */         
*                                                                               
*   3 COMP_SAFRC_STOR@ PTR(31),  /* Addr of SAF Return Code.         */         
*                                                                               
*   3 COMP_RACRC_ALET@ PTR(31),  /* Addr of ALET for RACF Return Code*/         
*                                                                               
*   3 COMP_RACRC_STOR@ PTR(31),  /* Addr of RACF Return Code.        */         
*                                                                               
*   3 COMP_RACSC_ALET@ PTR(31),  /* Addr of ALET for RACF Reason Code*/         
*                                                                               
*   3 COMP_RACSC_STOR@ PTR(31),  /* Addr of RACF Reason Code.        */         
*                                                                               
* %If Translate(IBM_CBGENC) ^= 'YES' %Then                    /* @NMA*/         
* %Do;                                                        /* @NMA*/         
*   3 COMP_SERVR_PARMS CHAR(0);  /* Service routine parameter lists             
*                                    begin here.                     */         
*   %COMP_Lvl = '1';                                          /* @NMA*/         
*   %COMP_Bas = 'Based(Addr(COMP_SERVR_PARMS))';              /* @NMA*/         
*   %COMP_Def = 'Defined(COMP.COMP_SERVR_PARMS)';             /* @NMA*/         
*   %COMP_Term = ';';                                         /* @NMA*/         
*   %COMP_Dcl = 'Declare';                                    /* @NMA*/         
* %End;                                                       /* @NMA*/         
* %Else %Do;                                                  /* @NMA*/         
*   3 COMP_SERVR_PARMS Union,    /* Service routine parameter lists             
*                                    begin here.                 @NMA*/         
*   %COMP_Lvl = '4';                                          /* @NMA*/         
*   %COMP_Bas = '';                                           /* @NMA*/         
*   %COMP_Def = '';                                           /* @NMA*/         
*   %COMP_Term = ',';                                         /* @NMA*/         
*   %COMP_Dcl = '';                                           /* @NMA*/         
* %End;                                                       /* @NMA*/         
*/********************************************************************/         
*/*                                                                  */         
*/*                     IUSP DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*   DECLARATION NAME = IUSP                                        */         
*/*                                                                  */         
*/*   DESCRIPTIVE NAME =   OMVS  INIT_USP input parameter list.      */         
*/*                                                                  */         
*/*   FUNCTION = Provides mapping of the input parameter list        */         
*/*              for the   OMVS  INIT_USP service routine.           */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl IUSP COMP_Bas,                                                      
*                                                                               
*   5 IUSP_WORKA_ALET@ PTR(31),  /* Addr of ALET for the output area.*/         
*                                                                               
*   5 IUSP_WORKA_STOR@ PTR(31)   /* Addr of the 4 byte output area.             
*                                    The output area contains an addr           
*                                    that points to data about a user*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                     CSID DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CSID                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Common Set ID input parameter    */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the following   OMVS  RACF Service Routines: */         
*/*               Set Uid                                            */         
*/*               Set Effective Uid                                  */         
*/*               Set Gid                                            */         
*/*               Set Effective Gid                                  */         
*/*                                                                  */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl CSID COMP_Bas,                                                      
*                                                                               
*   5 CSID_ID_ALET@     PTR  (31),  /* Addr of ALET for the Uid/Gid. */         
*                                                                               
*   5 CSID_ID@          PTR  (31),  /* Addr of the Uid/Gid.          */         
*                                                                               
*   5 CSID_IDOA_ALET@   PTR  (31),  /* Addr of ALET for output area. */         
*                                                                               
*   5 CSID_IDOA@        PTR  (31)   /* Addr of a 3 word output area.            
*                                      This area contains the new real,         
*                                      effective and saved Uid/Gids. */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                     EXID DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = EXID                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Exec Set Uid/Gid input parameter */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  RACF EXEC Service Routine.       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl EXID COMP_Bas,                                                      
*   5 EXID_FLAG_ALET@   PTR(31),/* Address of ALET for a byte flag.  */         
*                                                                               
*   5 EXID_FLAG@        PTR(31),/* Address of a one byte flag that              
*                                   indicates set Uid, Gid, or Both.            
*                                     x'01' Set Uid.                            
*                                     x'02' Set Gid.                            
*                                     x'03' Set Both.                */         
*                                                                               
*   5 EXID_UID_ALET@    PTR(31),/* Address of ALET for Uid to be set.*/         
*                                                                               
*   5 EXID_UID@         PTR(31),/* Addr of the Uid to be set.        */         
*                                                                               
*   5 EXID_GID_ALET@    PTR(31),/* Addr of ALET for Gid to be set.   */         
*                                                                               
*   5 EXID_GID@         PTR(31),/* Addr of the Gid to be set.        */         
*                                                                               
*   5 EXID_UIDO_ALET@   PTR(31),/* Addr of ALET for Uid output area. */         
*                                                                               
*   5 EXID_UIDO@        PTR(31),/* Addr of Uid output area, which is            
*                                   3 words filled in by IRRREX00 with          
*                                   the real, effective and saved Uids          
*                                                                    */         
*                                                                               
*   5 EXID_GIDO_ALET@   PTR(31),/* Addr of ALET for Gid output area. */         
*                                                                               
*   5 EXID_GIDO@        PTR(31) /* Addr of Gid output area, which is            
*                                   3 words filled in by IRRREX00 with          
*                                   the real, effective and saved Gids          
*                                                                    */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                     GETG DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = GETG                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input    */         
*/*                    parameter list.                               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  RACF Get Supplemental Groups     */         
*/*            service routine.                                      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl GETG COMP_Bas,                                                      
*   5 GETG_KEY_ALET@   PTR(31), /* Addr of ALET for the user's  key. */         
*                                                                               
*   5 GETG_KEY@        PTR(31), /* Address of a byte that contains              
*                                   the user's key. The key is in the           
*                                   high order 4 bits of the byte.   */         
*                                                                               
*   5 GETG_GCNT_ALET@  PTR(31), /* Addr of ALET for the Group Count. */         
*                                                                               
*   5 GETG_GCNT@       PTR(31), /* Address of the group count. (A one           
*                                   word area that contains the number          
*                                   of GIDs in the Grouplist area.)  */         
*                                                                               
*   5 GETG_GLST_ALET@  PTR(31), /* Addr of ALET for the Group List.  */         
*                                                                               
*   5 GETG_GLST@       PTR(31), /* Addr of the Group List area in which         
*                                  supplemental GIDs are returned.   */         
*                                                                               
*   5 GETG_GNUM_ALET@  PTR(31), /* Addr of ALET for number of groups.*/         
*                                                                               
*   5 GETG_GNUM@       PTR(31)  /* Addr of the Number of Groups. (A             
*                                   one word area in which the number           
*                                   of supplemental group GIDs is               
*                                   returned.)                       */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                     CHKP DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CHKP                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Privilege input parameter  */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  RACF Check Privilege service     */         
*/*            routine.                                              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl CHKP COMP_Bas,                                                      
*   5 CHKP_AUFC_ALET@  PTR(31), /* Addr of ALET for audit function              
*                                   code.                            */         
*                                                                               
*   5 CHKP_AUFC@       PTR(31)  /* Addr of the audit function code.             
*                                 (A full word containing the function          
*                                  code that identifies the system              
*                                  call being processed.)            */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                     GMAP DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = GMAP                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Map Common input parameter   */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  RACF Get Group Map/Get User Map  */         
*/*            service routine.                                      */         
*/*                                                                  */         
*/*                                                                  */         
*/* Note: GMAP is a common declaration that is used with both Get    */         
*/*       Group Map and Get User Map. When requesting Get Group Map, */         
*/*       all fields pertain to group data. When requesting Get User */         
*/*       Map, all fields pertain to user data.                      */         
*/*                                                                  */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl GMAP COMP_Bas,                                                      
*                                                                               
*   5 GMAP_FLAG_ALET@  PTR(31), /* Address of ALET for one byte flag */         
*                                                                               
*   5 GMAP_FLAG@       PTR(31), /* Address of the one byte flag:                
*                                    x'00' Search by Gid/Uid.                   
*                                    x'01' Search by Group ID/Userid.*/         
*                                                                               
*   5 GMAP_ID_ALET@    PTR(31), /* Address of ALET for the Gid/Uid.  */         
*                                                                               
*   5 GMAP_ID@         PTR(31), /* Address of a word containing the             
*                                   input Uid/Gid or in which the               
*                                   Uid/Gid is returned.             */         
*                                                                               
*                                                                               
*   5 GMAP_NAME_ALET@  PTR(31), /* Address of ALET for the Group Name           
*                                   or Userid.                       */         
*                                                                               
*   5 GMAP_NAME@       PTR(31)  /* Address of 8 bytes that contain              
*                                   an input Group Name or Userid               
*                                   or in which the Group name or               
*                                   Userid is returned. The name/id             
*                                   left justified and padded with              
*                                   blanks.                          */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                     CKPO DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CKPO                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Process Owner input        */         
*/*                    parameter list.                               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Check Process Owner service      */         
*/*            routine.                                              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl CKPO COMP_Bas,                                                      
*                                                                               
*   5 CKPO_REQT_ALET@  PTR(31), /* Address of ALET for one byte Request         
*                                   type.                            */         
*                                                                               
*   5 CKPO_REQT@       PTR(31), /* Address of the one byte request              
*                                   type:                                       
*                                   1 -  Audit only request from KILL           
*                                     used when SIGCONT signal is being         
*                                     sent.                                     
*                                   2 - KILL request.                           
*                                   3 - GETPSENT request.                       
*                                   4 - OPEN Slave TTY request.                 
*                                   5 - SIGQUEUE w/ SECLABEL req @LUA*/         
*                                                                               
*   5 CKPO_UIDS_ALET@  PTR(31), /* Address of ALET for Uids area.    */         
*                                                                               
*   5 CKPO_UIDS@       PTR(31), /* Address of a 3 word area containing          
*                                 real, effective, and saved Uids (in           
*                                 that order) for the target process,           
*                                 followed by an 8-byte SECLABEL when           
*                                 request type is 5.             @LUC           
*                                                                    */         
*   5 CKPO_PID_ALET@   PTR(31), /* Address of ALET for target PID.   */         
*                                                                               
*   5 CKPO_PID@        PTR(31), /* Address of the words containing the          
*                                   target process's PID.            */         
*                                                                               
*   5 CKPO_CODE_ALET@  PTR(31), /* Address of ALET for signal code.  */         
*                                                                               
*   5 CKPO_CODE@       PTR(31)  /* Address of word containing a code            
*                                   identifying signal being sent.              
*                                   This word is ignored for request            
*                                   type 3.                          */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               QRYS DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = QRYS                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Query System Security options    */         
*/*                    input parameter list.                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Query System Security options    */         
*/*            service routine.                                      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl QRYS COMP_Bas,                                                      
*                                                                               
*   5 QRYS_OPTN_CODE_ALET@ PTR(31), /* Address of ALET for one word             
*                                       requested option code        */         
*                                                                               
*   5 QRYS_OPTN_CODE@  PTR(31), /* Address of the one word requested            
*                                  option code. The defined codes are:          
*                                x'00000001' - NGROUPS_MAX options@P8C          
*                                x'00000002' - POSIX_SAVED_IDS op@P8C*/         
*                                                                               
*                                                                               
*   5 QRYS_OUTP_VAL_ALET@ PTR(31),  /* Address of ALET for one word             
*                                       output value                 */         
*                                                                               
*   5 QRYS_OUTP_VAL@   PTR(31)      /* Address of one word output               
*                                       value                        */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               CMOD DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CMOD                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Change File Mode input parameter */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list */              
*/*            for the   OMVS  Change File Mode service routine.     */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl CMOD COMP_Bas,                                                      
*                                                                               
*   5 CMOD_MODE_ALET@  PTR(31), /* Address of the ALET for the mode             
*                                   structure.                       */         
*                                                                               
*   5 CMOD_MODE@       PTR(31), /* Address of a one word mode                   
*                                   parameter.                       */         
*                                                                               
*   5 CMOD_FSP_ALET@   PTR(31), /* Address of the ALET for the FSP              
*                                   structure.                       */         
*                                                                               
*   5 CMOD_FSP@        PTR(31), /* Address of the FSP structure.     */         
*                                                                               
*   5 CMOD_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/         
*                                                                               
*   5 CMOD_FID@       PTR(31), /* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*   5 CMOD_CRED_ALET@  PTR(31), /* Address of the ALET for the CRED             
*                                   structure.                       */         
*                                                                               
*   5 CMOD_CRED@       PTR(31)  /* Address of the CRED structure.    */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               CLID DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CLID                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Clear Setid input parameter list */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Clear Setid service routine.     */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl CLID COMP_Bas,                                                      
*                                                                               
*   5 CLID_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP               
*                                  structure.                        */         
*   5 CLID_FSP@       PTR(31), /* Address of the FSP structure.      */         
*                                                                               
*   5 CLID_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/         
*                                                                               
*   5 CLID_FID@       PTR(31), /* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*   5 CLID_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED              
*                                  structure.                        */         
*   5 CLID_CRED@      PTR(31)  /* Address of the CRED structure.     */         
*                                                                               
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               CAUD DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CAUD                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Change File Audit Options input  */         
*/*                    parameter list.                               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Change File Audit Options        */         
*/*            routine.                                              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl CAUD COMP_Bas,                                                      
*                                                                               
*   5 CAUD_AO_ALET@  PTR(31),/* Address of the ALET for the Audit               
*                                Options.                            */         
*                                                                               
*   5 CAUD_AO@   PTR(31),/* Addr of 4 bytes that contain an Audit               
*                            Option for each type of access:                    
*                             Byte 1 - read access audit options.               
*                             Byte 2 - write access audit options.              
*                             Byte 3 - execute/search audit options.            
*                               Each of the first three bytes contain           
*                               an Audit Option:                   @P1C         
*                               x'00' - don't audit any access attempts         
*                               x'01' - audit successful access.                
*                               x'02' - audit failed access attempts.           
*                             Byte 4 - audit flag.                 @P1C         
*                               In the last byte, the last bit     @P1A         
*                               indicates:                         @P1A         
*                               x'00' - set user audit options.    @P1A         
*                               x'01' - set auditor audit options. @P1A         
*                                                                    */         
*                                                                               
*   5 CAUD_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP               
*                                  structure.                        */         
*                                                                               
*   5 CAUD_FSP@       PTR(31), /* Address of the FSP structure.      */         
*                                                                               
*   5 CAUD_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/         
*                                                                               
*   5 CAUD_FID@       PTR(31), /* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*                                                                               
*   5 CAUD_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED              
*                                  structure.                        */         
*                                                                               
*   5 CAUD_CRED@      PTR(31)  /* Address of the CRED structure.     */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               COWN DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = COWN                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Change Owner and Group input     */         
*/*                    parameter list.                               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Change Owner and Group service   */         
*/*            routine.                                              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl COWN COMP_Bas,                                                      
*                                                                               
*   5 COWN_UID_ALET@  PTR(31), /* Address of ALET for Uid to be set. */         
*                                                                               
*   5 COWN_UID@       PTR(31), /* Addr of the Uid to be set as the              
*                                  file owner Uid.                   */         
*                                                                               
*   5 COWN_GID_ALET@  PTR(31), /* Addr of ALET for Gid to be set.    */         
*                                                                               
*   5 COWN_GID@       PTR(31), /* Addr of the Gid to be set as the              
*                                  file owner Gid.                   */         
*                                                                               
*   5 COWN_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP               
*                                  structure.                        */         
*                                                                               
*   5 COWN_FSP@       PTR(31), /* Address of the FSP structure.      */         
*                                                                               
*   5 COWN_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/         
*                                                                               
*   5 COWN_FID@       PTR(31), /* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*                                                                               
*   5 COWN_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED              
*                                  structure.                        */         
*                                                                               
*   5 COWN_CRED@      PTR(31)  /* Address of the CRED structure.     */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               UMSK DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = UMSK                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Set File Mode Creation Mask      */         
*/*                    input parameter list.                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Set File Mode Creation Mask      */         
*/*            service routine.                                      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl UMSK COMP_Bas,                                                      
*                                                                               
*   5 UMSK_MODE_ALET@  PTR(31), /* Address of the ALET for the mode             
*                                   structure.                       */         
*                                                                               
*   5 UMSK_MODE@       PTR(31)  /* Address of the mode parameter.    */         
*   Comp_Term                                                                   
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*               KACC DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = KACC                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter     */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Check Access service routine.    */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl KACC COMP_Bas,                                                      
*                                                                               
*   5 KACC_ACODE_ALET@ PTR(31),/* Address of the ALET for the access            
*                                   code.                            */         
*                                                                               
*   5 KACC_ACODE@      PTR(31),/* Address of a 1 byte access code               
*                                  that contains:                               
*                                   x'01' - execute access.                     
*                                   x'02' - write access.                       
*                                   x'03' - write and execute access.           
*                                   x'04' - read access.                        
*                                   x'05' - read and execute access.            
*                                   x'06' - read and write access.              
*                                   x'07' - read, write and execute             
*                                            access.                            
*                                   x'81' - directory search access.            
*                                   x'87' - any access.              */         
*                                                                               
*   5 KACC_FSP_ALET@   PTR(31),/* Address of the ALET for the FSP               
*                                  structure.                        */         
*                                                                               
*   5 KACC_FSP@        PTR(31),/* Address of the FSP structure.      */         
*                                                                               
*   5 KACC_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/         
*                                                                               
*   5 KACC_FID@        PTR(31),/* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*                                                                               
*   5 KACC_CRED_ALET@  PTR(31),/* Address of the ALET for the CRED              
*                                  structure.                        */         
*                                                                               
*   5 KACC_CRED@       PTR(31),/* Address of the CRED structure.     */         
*                                                                               
*   5 KACC_FLAG_ALET@  PTR(31),/* Address of the ALET for the name              
*                                  flag byte.                        */         
*                                                                               
*   5 KACC_FLAG@       PTR(31) /* Address of a byte flag that indicates         
*                                  which name is being checked:                 
*                                   x'00' - Use the CRED_name_flag to           
*                                           determine path name being           
*                                           checked. Used by lookup.            
*                                                                               
*                                   x'01' - The old (or only) name is           
*                                           being checked. Used by all          
*                                           calls except lookup and             
*                                           when rename and link are            
*                                           checking for write access           
*                                           to the parent directory of          
*                                           the new path name file.             
*                                                                               
*                                   x'02' - The new name is being               
*                                           checked. Used by rename             
*                                           and link when checking for          
*                                           write access to the parent          
*                                           directory of the new path           
*                                           name file.               */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               QRYF DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = QRYF                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Query File Security Options      */         
*/*                    input parameter list.                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list      */         
*/*            for the   OMVS  Query File Security Options service   */         
*/*            routine.                                              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl QRYF COMP_Bas,                                                      
*                                                                               
*   5 QRYF_OCODE_ALET@ PTR(31),/* Address of the ALET for the option            
*                                  code.                             */         
*                                                                               
*   5 QRYF_OCODE@      PTR(31),/* Address of a 1 word option code               
*                                  that contains:                               
*                                  x'00000001'-POSIX_CHOWN_RESTRICTED*/         
*                                                                               
*   5 QRYF_OUTV_ALET@  PTR(31),/* Address of the ALET for the output            
*                                  value.                            */         
*                                                                               
*   5 QRYF_OUTV@       PTR(31) /* Address of the output value:                  
*                                   0 - POSIX_CHOWN_RESTRICTED.                 
*                                  -1 - Not POSIX_CHOWN_RESTRICTED.  */         
*   Comp_Term                                                                   
*/********************************************************************/         
*                                                            /* 6@P2D*/         
*/*                                                                  */         
*/*                    KFOW DECLARATIONS                             */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = KFOW                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Check File Owner input parameter */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list      */         
*/*            for the   OMVS  Check File Owner service routine.     */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl KFOW COMP_Bas,                                                      
*                                                                               
*   5 KFOW_FSP_ALET@   PTR(31),/* Address of the ALET for the FSP               
*                                  structure.                        */         
*                                                                               
*   5 KFOW_FSP@        PTR(31),/* Address of the FSP structure.      */         
*                                                                               
*   5 KFOW_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/         
*                                                                               
*   5 KFOW_FID@        PTR(31),/* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*                                                                               
*   5 KFOW_CRED_ALET@  PTR(31),/* Address of the ALET for the CRED              
*                                  structure.                        */         
*                                                                               
*   5 KFOW_CRED@       PTR(31) /* Address of the CRED structure.     */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                    MKRT DECLARATIONS                             */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = MKRT                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Make Root FSP input parameter    */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION =Provides the mapping of the input parameter list       */         
*/*            for the   OMVS  Make Root FSP service routine.        */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl MKRT COMP_Bas,                                                      
*                                                                               
*   5 MKRT_MODE_ALET@  PTR(31), /* Address of the ALET for the mode             
*                                   structure.                       */         
*                                                                               
*   5 MKRT_MODE@       PTR(31), /* Address of the mode parameter.    */         
*                                                                               
*   5 MKRT_OFSP_ALET@  PTR(31),/* Address of the ALET for the output            
*                                  FSP.                              */         
*                                                                               
*   5 MKRT_OFSP@       PTR(31),/* Address of the output FSP.         */         
*                                                                               
*   5 MKRT_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/         
*                                                                               
*   5 MKRT_FID@        PTR(31),/* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*                                                                               
*   5 MKRT_DSN_ALET@   PTR(31),/* Address of the ALET for the dataset           
*                                  name.                             */         
*                                                                               
*   5 MKRT_DSN@        PTR(31) /* Address of an area that contains the          
*                                  name of the PDSE/x data set being            
*                                  created. (44 character length)    */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               PTRC DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = PTRC                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Check PTRACE Authority input     */         
*/*                    parameter list.                               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list      */         
*/*            for the   OMVS  Check PTRACE Authority service        */         
*/*            routine.                                              */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl PTRC COMP_Bas,                                                      
*                                                                               
*   5 PTRC_TUID_ALET@ PTR(31),/* Address of ALET for the target UIDs            
*                                  area.                             */         
*                                                                               
*   5 PTRC_TUID@      PTR(31),/* Address of a 3 word area that contains         
*                                  the REAL, EFFECTIVE, and SAVED UIDs          
*                                  (in that order) for the target               
*                                   process, followed by an 8-byte              
*                                   SECLABEL when the high-order                
*                                   bit of the PID is on.        @LUC*/         
*                                                                               
*   5 PTRC_TGID_ALET@ PTR(31),/* Address of ALET for the target GIDs            
*                                 area.                              */         
*                                                                               
*   5 PTRC_TGID@      PTR(31),/* Address of a 3 word area that contains         
*                                 the REAL, EFFECTIVE, and SAVED GIDs           
*                                 (in that order) for the target                
*                                  process.                          */         
*   5 PTRC_TPID_ALET@ PTR(31),/* Address of ALET for the target PID. */         
*                                                                               
*                                                                               
*                                                                               
*   5 PTRC_TPID@      PTR(31) /* Address of a word that contains the            
*                                 PID of the target process.         */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               MFSP DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = MFSP                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Make FSP input parameter list.   */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list      */         
*/*            for the   OMVS  Make FSP service routine.             */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl MFSP COMP_Bas,                                                      
*                                                                               
*   5 MFSP_MODE_ALET@  PTR(31), /* Address of the ALET for the mode             
*                                   structure.                       */         
*                                                                               
*   5 MFSP_MODE@       PTR(31), /* Address of the mode parameter.    */         
*                                                                               
*   5 MFSP_OFSP_ALET@  PTR(31),/* Address of the ALET for the output            
*                                  FSP.                              */         
*                                                                               
*   5 MFSP_OFSP@       PTR(31),/* Address of the output FSP.         */         
*                                                                               
*   5 MFSP_ODFSP_ALET@ PTR(31),/* Address of the ALET for the owning            
*                                  directory FSP.                    */         
*                                                                               
*   5 MFSP_ODFSP@      PTR(31),/* Address of the owning directory FSP*/         
*                                                                               
*   5 MFSP_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/         
*                                                                               
*   5 MFSP_FID@       PTR(31), /* Address of the File Id which is a 16          
*                                  byte area that contains a unique             
*                                  identifier of the file.           */         
*   5 MFSP_CRED_ALET@  PTR(31), /* Address of the ALET for the CRED             
*                                   structure.                       */         
*                                                                               
*   5 MFSP_CRED@       PTR(31)  /* Address of the CRED structure.    */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               RAUD DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = RAUD                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Audit input parameter list.      */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list      */         
*/*            for the   OMVS  Audit service routine.                */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl RAUD COMP_Bas,                                                      
*                                                                               
*   5 RAUD_CRED_ALET@  PTR(31),/* Address of ALET for CRED structure.*/         
*                                                                               
*   5 RAUD_CRED@       PTR(31),/* Address of the CRED structure.     */         
*                                                                               
*   5 RAUD_OFID_ALET@  PTR(31),/* Address of ALET for the File Id of            
*                                 the old (or only) file.            */         
*                                                                               
*   5 RAUD_OFID@       PTR(31),/* Address of the File Id for the old            
*                                  (or only) file. The File Id is a             
*                                  16 byte area that contains a unique          
*                                  identifier of the file.           */         
*                                                                               
*   5 RAUD_OFSP_ALET@  PTR(31),/* Address of ALET for the FSP for the           
*                                  old (or only) file.               */         
*                                                                               
*   5 RAUD_OFSP@       PTR(31),/* Address of the FSP for the old                
*                                  (or only) file.                   */         
*                                                                               
*   5 RAUD_FLAG_ALET@  PTR(31),/* Address of ALET for the flag byte. */         
*                                                                               
*   5 RAUD_FLAG@       PTR(31),/* Address of a flag byte that                   
*                                 indicates:                                    
*                                  x'00' - last link was not removed.           
*                                  x'01' - last link was removed for            
*                                          a file. The file is deleted.         
*                                This parameter is used only on rename          
*                                and unlink. On a rename, the new name          
*                                is deleted. On unlink, the 'only'              
*                                name was deleted.                   */         
*                                                                               
*   5 RAUD_NFID_ALET@  PTR(31),/* Address of ALET for the File Id of            
*                                  the NEW file. This parameter is              
*                                  used only on a rename.            */         
*                                                                               
*   5 RAUD_NFID@       PTR(31),/* Address of the File Id for the NEW            
*                                 file. This parameter is used only             
*                                 on a rename. The File Id is a                 
*                                 16 byte area that contains a unique           
*                                 identifier of the file.            */         
*                                                                               
*   5 RAUD_NFSP_ALET@ PTR(31),/* Address of ALET for the FSP for the            
*                                 NEW file. This parameter is used              
*                                 only on a rename.                  */         
*                                                                               
*   5 RAUD_NFSP@      PTR(31) /* Address of the FSP for the NEW file.           
*                                 This parameter is used only on a              
*                                 rename.                            */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                     GUGP DECLARATIONS                            */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = GUGP                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input    */         
*/*                    parameter list.                               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  RACF Get Supplemental Groups     */         
*/*            service routine.                                      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl GUGP COMP_Bas,                                                      
*   5 GUGP_KEY_ALET@   PTR(31), /* Addr of ALET for the user's  key. */         
*                                                                               
*   5 GUGP_KEY@        PTR(31), /* Address of a byte that contains              
*                                   the user's key. The key is in the           
*                                   high order 4 bits of the byte.   */         
*                                                                               
*   5 GUGP_NLEN_ALET@  PTR(31), /* Address of ALET for the USERID               
*                                   length                           */         
*                                                                               
*   5 GUGP_NLEN@       PTR(31), /* Address of 1 byte USERID Length.  */         
*                                                                               
*   5 GUGP_NAME_ALET@  PTR(31), /* Address of ALET for the USERID.   */         
*                                                                               
*   5 GUGP_NAME@       PTR(31), /* Address of 8 byte USERID.         */         
*                                                                               
*   5 GUGP_GCNT_ALET@  PTR(31), /* Addr of ALET for the Group Count. */         
*                                                                               
*   5 GUGP_GCNT@       PTR(31), /* Address of the group count. (A one           
*                                   word area that contains the number          
*                                   of GIDs in the Grouplist area.)  */         
*                                                                               
*   5 GUGP_GLST_ALET@  PTR(31), /* Addr of ALET for the Group List.  */         
*                                                                               
*   5 GUGP_GLST@       PTR(31), /* Addr of the Group List area in which         
*                                  supplemental GIDs are returned.   */         
*                                                                               
*   5 GUGP_GNUM_ALET@  PTR(31), /* Addr of ALET for number of groups.*/         
*                                                                               
*   5 GUGP_GNUM@       PTR(31)  /* Addr of the Number of Groups. (A             
*                                   one word area in which the number           
*                                   of supplemental group GIDs is               
*                                   returned.)                       */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               FORK DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = FORK                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF FORK Exit input parameter list.  */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list      */         
*/*            for the   OMVS  RACF FORK Exit service routine.       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl FORK COMP_Bas,                                                      
*                                                                               
*   5 FORK_FLAG_ALET@  PTR(31), /* Address of ALET for fork flag.    */         
*                                                                               
*   5 FORK_FLAG@       PTR(31), /* Address of a word flag that                  
*                                   indicates the current type of               
*                                   processing:                                 
*                                    x'00' - Fork Parent Processing.            
*                                    x'02' - Fork Parent Processing             
*                                            Extended Data                      
*                                    x'01' - Forked Child Processing.           
*                                    x'03' - Forked Child Processing            
*                                            Extended Data       @LGC*/         
*                                                                               
*   5 FORK_DATAKEY_ALET@ PTR(31),/* Address of ALET for data's                  
*                                   storage key.                     */         
*                                                                               
*   5 FORK_DATAKEY@    PTR(31), /* Address of a word that contains the          
*                                   storage key from which the storage          
*                                   for the data is to be obtained.  */         
*                                                                               
*   5 FORK_DATALEN_ALET@ PTR(31), /* Address of ALET for data length.*/         
*                                                                               
*   5 FORK_DATALEN@    PTR(31), /* Address of a word that contains the          
*                                   data length.                     */         
*                                                                               
*   5 FORK_DATA_ALET@  PTR(31), /* Address of the data's ALET.       */         
*                                                                               
*   5 FORK_DATA@       PTR(31), /* Address of the data being passed             
*                                   from the parent to the child via            
*                                   FORK.                            */         
*                                                                               
*   5 FORK_DATASP_ALET@ PTR(31),/* Address of ALET for data subpool. */         
*                                                                               
*   5 FORK_DATASP@     PTR(31)  /* Address of a word that contains the          
*                                   subpool from which to obtain the            
*                                   storage to hold the data.        */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               MISP DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = MISP                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Make ISP input parameter list.   */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter list      */         
*/*            for the   OMVS  Make ISP service routine.             */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl MISP COMP_Bas,                                                      
*                                                                               
*   5 MISP_MODE_ALET@  PTR(31), /* Address of the ALET for the mode             
*                                   structure.                   @L1A*/         
*                                                                               
*   5 MISP_MODE@       PTR(31), /* Address of the mode parameter.@L1A*/         
*                                                                               
*   5 MISP_OISP_ALET@  PTR(31),/* Address of the ALET for the output            
*                                  ISP.                          @L1A*/         
*                                                                               
*   5 MISP_OISP@       PTR(31),/* Address of the output ISP.     @L1A*/         
*                                                                               
*   5 MISP_OIPC_ALET@  PTR(31),/* Address of the ALET for the output            
*                                  IPCP.                         @L1A*/         
*                                                                               
*   5 MISP_OIPC@       PTR(31),/* Address of the output IPCP.    @L1A*/         
*                                                                               
*   5 MISP_CREI_ALET@  PTR(31), /* Address of the ALET for the CREDIPC          
*                                   structure.                   @L1A*/         
*                                                                               
*   5 MISP_CREI@       PTR(31)  /* Address of the CREDIPC structure.            
*                                                                @L1A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               IACC DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = IACC                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter     */         
*/*                    list.                                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  Check Access service routine.    */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl IACC COMP_Bas,                                                      
*                                                                               
*   5 IACC_ACODE_ALET@ PTR(31),/* Address of the ALET for the access            
*                                   code.                        @L1A*/         
*                                                                               
*   5 IACC_ACODE@      PTR(31),/* Address of a 1 byte access code               
*                                  that contains:                               
*                                   x'00' - no access.                          
*                                   x'02' - write access.                       
*                                   x'04' - read access.                        
*                                   x'06' - read and write access.              
*                                                                @L1A*/         
*                                                                               
*   5 IACC_ISP_ALET@   PTR(31),/* Address of the ALET for the ISP               
*                                  structure.                    @L1A*/         
*                                                                               
*   5 IACC_ISP@        PTR(31),/* Address of the ISP structure.  @L1A*/         
*                                                                               
*                                                                               
*   5 IACC_CREI_ALET@  PTR(31),/* Address of the ALET for the CREDIPC           
*                                  structure.                    @L1A*/         
*                                                                               
*   5 IACC_CREI@       PTR(31) /* Address of the CREDIPC structure.             
*                                                                @L1A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               IOWN DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = IOWN                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Perform R_IPC_control Change     */         
*/*                    Owner and Group input parameter list.     @03C*/         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the   OMVS  R_IPC_control Change Owner and   */         
*/*            Group service routine.                                */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl IOWN COMP_Bas,                                                      
*                                                                               
*   5 IOWN_CMD_ALET@  PTR(31), /* Address of ALET for cmd code.  @L1A*/         
*                                                                               
*   5 IOWN_CMD@       PTR(31), /* Address of cmd code.           @L1A*/         
*                                                                               
*   5 IOWN_UID_ALET@  PTR(31), /* Address of ALET for Uid to be set.            
*                                                                @L1A*/         
*                                                                               
*   5 IOWN_UID@       PTR(31), /* Addr of the Uid to be set as the              
*                                  ISP owner Uid.                @L1A*/         
*                                                                               
*   5 IOWN_GID_ALET@  PTR(31), /* Addr of ALET for Gid to be set.@L1A*/         
*                                                                               
*   5 IOWN_GID@       PTR(31), /* Addr of the Gid to be set as the              
*                                  ISP owner Gid.                @L1A*/         
*                                                                               
*   5 IOWN_MODE_ALET@  PTR(31), /* Address of the ALET for the mode             
*                                   structure.                   @L1A*/         
*                                                                               
*   5 IOWN_MODE@       PTR(31), /* Address of the mode parameter.@L1A*/         
*                                                                               
*   5 IOWN_ISP_ALET@  PTR(31), /* Address of the ALET for the ISP               
*                                  structure.                    @L1A*/         
*                                                                               
*   5 IOWN_ISP@       PTR(31), /* Address of the ISP structure.  @L1A*/         
*                                                                               
*   5 IOWN_CREI_ALET@ PTR(31), /* Address of the ALET for the CREDIPC           
*                                  structure.                    @L1A*/         
*                                                                               
*   5 IOWN_CREI@      PTR(31)  /* Address of the CREDIPC structure.             
*                                                                @L1A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               CKO2 DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CKO2                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Check owner two files input      */         
*/*                    parameter list.                               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the OMVS Check Owner two files routine.      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl CKO2 COMP_Bas,                                                      
*                                                                               
*   5 CKO2_FSP1_ALET@ PTR(31), /* Address of ALET for the first                 
*                                  FSP structure.               @L2A */         
*                                                                               
*   5 CKO2_FSP1@      PTR(31), /* Addr of the first FSP structure.              
*                                                               @L2A */         
*                                                                               
*   5 CKO2_FSP2_ALET@ PTR(31), /* Addr of ALET for the second FSP               
*                                  structure.                   @L2A */         
*                                                                               
*   5 CKO2_FSP2@      PTR(31), /* Addr of the second FSP structure.             
*                                                               @L2A */         
*                                                                               
*   5 CKO2_FID1_ALET@ PTR(31), /* Address of the ALET for the first             
*                                  file ID.                     @L2A */         
*                                                                               
*   5 CKO2_FID1@      PTR(31), /* Address of the first file ID. @L2A */         
*                                                                               
*   5 CKO2_FID2_ALET@ PTR(31), /* Address of the ALET for the second            
*                                  file ID.                     @L2A */         
*                                                                               
*   5 CKO2_FID2@      PTR(31), /* Address of the second file                    
*                                 ID.                          @L2A  */         
*                                                                               
*   5 CKO2_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED              
*                                  structure.                   @L2A */         
*                                                                               
*   5 CKO2_CRED@      PTR(31)  /* Address of the CRED structure.     */         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               GETE DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = GETE                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS  RACF Get real, effective, saved       */         
*/*                    UIDs/GIDs and supplemental groups from the    */         
*/*                    USP parameter list.                           */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the OMVS Get real,eff,saved UIDs/GIDs and    */         
*/*            supplemental groups routine.                          */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl GETE COMP_Bas,                                                      
*                                                                               
*   5 GETE_WORKB_ALET@  PTR(31),  /* Address of ALET for 1024 byte              
*                                    work area.                  @D1A*/         
*                                                                               
*   5 GETE_WORKB@     PTR(31), /* Address of 1024 byte work area @D1A*/         
*                                                                               
*   5 GETE_KEY_ALET@  PTR(31), /* Address of ALET for the                       
*                                  user's key                    @L3A*/         
*                                                                               
*   5 GETE_KEY@       PTR(31), /* Address of a byte that contains the           
*                                  user's key. The key is in the high           
*                                  order 4 bits of the byte.     @L3A*/         
*                                                                               
*   5 GETE_GCNT_ALET@ PTR(31), /* Address of ALET for the                       
*                                  Group Count.                  @L3A*/         
*                                                                               
*                                                                               
*   5 GETE_GCNT@      PTR(31), /* Address of the group count. A one             
*                                 word area that contains the number            
*                                 of GIDs in the Grouplist area. @L3A*/         
*                                                                               
*   5 GETE_GLST_ALET@ PTR(31), /* Address of ALET for the Group List.           
*                                                                @L3A*/         
*                                                                               
*   5 GETE_GLST@      PTR(31), /* Address of the Group List area in             
*                                  which supplemental GIDs are                  
*                                  returned.                     @L3A*/         
*                                                                               
*   5 GETE_GNUM_ALET@ PTR(31), /* Address of ALET for the number of             
*                                  groups.                       @L3A*/         
*                                                                               
*   5 GETE_GNUM@      PTR(31), /* Address of the Number Of Groups.              
*                                  A one word area in which the number          
*                                  of supplemental group GIDs is                
*                                  returned.                     @L3A*/         
*   5 GETE_UID_ALET@  PTR(31), /* Address of ALET for the UIDs.  @L3A*/         
*                                                                               
*   5 GETE_UID@       PTR(31), /* Address of a 3 word output area.              
*                                  This area contains the real,                 
*                                  effective and saved UIDs.     @P3C*/         
*                                                                               
*   5 GETE_GID_ALET@  PTR(31), /* Address of ALET for the GIDs.  @L3A*/         
*                                                                               
*   5 GETE_GID@       PTR(31)  /* Address of a 3 word output area.              
*                                  This area contains the real,                 
*                                  effective and saved GIDs.     @P3C*/         
*   Comp_Term                                                                   
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*               DKEY DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = DKEY                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Key       */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input paramter            */         
*/*            list for the service to retrieve or replace the       */         
*/*            DPASSWDS within a RACF user profile.                  */         
*/********************************************************************/         
*                                                                               
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl DKEY COMP_Bas,                                                      
*                                                                               
*   5 DKEY_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code          
*                                                                @01A*/         
*   5 DKEY_FUNC@        PTR(31),  /* Address of 1 byte function code            
*                                                                @01A*/         
*   5 DKEY_ENTITY_ALET@ PTR(31),  /* Address of ALET for the RACF               
*                                    entity                      @LQA*/         
*     7 DKEY_USERID_ALET@ PTR(31), /* Address of ALET for the RACF              
*                                    userid                      @LQC*/         
*   5 DKEY_ENTITY@      PTR(31),  /* Address of 246 byte area that              
*                                    contains a 1 byte length followed          
*                                  by userid of up to 246 chars  @LQA*/         
*     7 DKEY_USERID@      PTR(31),  /* Address of 9 byte area that              
*                                    contains a 1 byte length followed          
*                                    by userid of up to 8 chars  @LQC*/         
*                                                                               
*   5 DKEY_KEY_ALET@    PTR(31),  /* Address of ALET for the DCE key            
*                                                                @01A*/         
*                                                                               
*   5 DKEY_KEY@         PTR(31),  /* Address of the output key area, if         
*                                    retrieving the DCE key, or new key         
*                                    if setting users DCE key    @01A*/         
*                                                                               
*   5 DKEY_KEYL_ALET@   PTR(31),  /* Address of ALET for the DCE key            
*                                    length                      @01A*/         
*                                                                               
*   5 DKEY_KEYL@        PTR(31)   /* Address of fullword containing the         
*                                    DCE key area length         @01A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*               DINF DECLARATIONS                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = DINF                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Info      */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input paramter            */         
*/*            list for the service to retrieve or replace the       */         
*/*            DCE UUID, DCENAME, or HOMECELL within a RACF user     */         
*/*            profile.                                              */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl DINF COMP_Bas,                                                      
*                                                                               
*   5 DINF_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code          
*                                                                @01A*/         
*   5 DINF_FUNC@        PTR(31),  /* Address of 1 byte function code            
*                                                                @01A*/         
*   5 DINF_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF               
*                                    userid                      @01A*/         
*   5 DINF_USERID@      PTR(31),  /* Address of 9 byte area that                
*                                    contains a 1 byte length followed          
*                                    by userid of up to 8 chars  @01A*/         
*   5 DINF_FIELDL_ALET@ PTR(31),  /* Address of ALET for the Field list         
*                                                                @01A*/         
*   5 DINF_FIELDL@      PTR(31),  /* Address of an area containing              
*                                    the input Field_list        @01A*/         
*   5 DINF_OUTPUTA_ALET@ PTR(31), /* Address of ALET for the Output             
*                                    area                        @01A*/         
*   5 DINF_OUTPUTA@     PTR(31),  /* Address of area which contains the         
*                                    contents of data obtained   @01A*/         
*   5 DINF_OUTPUTL_ALET@ PTR(31), /* Address of ALET for the Output             
*                                    area length                 @01A*/         
*   5 DINF_OUTPUTL@     PTR(31)   /* Address of fullword containing the         
*                                    Output area length          @01A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                DRUR DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  DECLARATION NAME = DRUR                                         */         
*/*                                                                  */         
*/*  DESCRIPTIVE NAME =   RACF userid - DCE UUID mapping parameters  */         
*/*                                                                  */         
*/*  FUNCTION = Provides the mapping of the input paramter           */         
*/*             list for the service to map a RACF userid to a DCE   */         
*/*             principal UUID/home cell UUID pair                   */         
*/********************************************************************/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl DRUR COMP_Bas,                                                      
*                                                                               
*   5 DRUR_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code          
*                                                                @02A*/         
*   5 DRUR_FUNC@        PTR(31),  /* Address of 1 byte function code            
*                                                                @02A*/         
*   5 DRUR_PRIN_UUID_ALET@ PTR(31), /* Address of ALET for the DCE              
*                                      principal UUID            @02A*/         
*   5 DRUR_PRIN_UUID@    PTR(31), /* Address of a 36 byte input/output          
*                                    area for the principal UUID @02A*/         
*         ] The following two fields address the home cell UUID                 
*         ] which is optional.  Indicate no home cell UUID passed               
*         ] by having the pointer and alet address a null byte.    @02A         
*   5 DRUR_HOME_UUID_ALET@ PTR(31), /* Address of ALET for the DCE              
*                                      home cell UUID            @02A*/         
*   5 DRUR_HOME_UUID@   PTR(31),  /* Address of a 36 byte input/output          
*                                    area for the home cell UUID @02A*/         
*   5 DRUR_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF               
*                                    userid                      @02A*/         
*   5 DRUR_USERID@      PTR(31)   /* Address of a 9 byte input/output           
*                                    area for the RACF userid (1 byte           
*                                    for the length followed by up to           
*                                    8 bytes for the RACF userid                
*                                    itself)                     @02A*/         
*   Comp_Term                                                                   
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*              DAUT DECLARATIONS                                   */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  DECLARATION NAME = DAUT                                         */         
*/*                                                                  */         
*/*  DESCRIPTIVE NAME =   RACF Authorization of a DCE Client         */         
*/*                                                                  */         
*/*  FUNCTION = Provides the mapping of the input paramter           */         
*/*           list for the service which allows MVS servers to       */         
*/*           verify the authority of a DCE Client (who is also      */         
*/*           a RACF user) to resources on the MVS system that are   */         
*/*           protected by RACF.                                     */         
*/*                                                                  */         
*/********************************************************************/         
* COMP_Dcl                                                                      
*  COMP_Lvl DAUT COMP_Bas,                                                      
*                                                                               
*   5 DAUT_ACEEP@       PTR(31),  /*  Address of a full word containing         
*                                     the address of a previously               
*                                     created ACEE (or 0)        @03A*/         
*                                                                               
*   5 DAUT_ALET@        PTR(31),  /* Address of ALET for following              
*                                    variables                   @03A*/         
*                                                                               
*   5 DAUT_PRIN_UUID@   PTR(31),  /* Address of 36 byte area for the            
*                                    DCE principle UUID          @03A*/         
*                                                                               
*   5 DAUT_HOME_UUID@   PTR(31),  /* Address of 36 byte area for the            
*                                    DCE home cell UUID.         @03A*/         
*                                                                               
*   5 DAUT_USERID@      PTR(31),  /* Address of 9 byte area for the             
*                                    RACF userid (1 byte for the                
*                                    length followed by up to 8 bytes           
*                                    for the RACF userid itself) @03A*/         
*                                                                               
*   5 DAUT_CLASS_NAME@  PTR(31),  /* Address of an 8 byte area for              
*                                    the RACF class name of a resource.         
*                                    The class name must be left                
*                                    justified and padded to the right          
*                                    with blanks.                @03A*/         
*                                                                               
*   5 DAUT_ENT_NAME@    PTR(31),  /* Address of an area for the RACF            
*                                    resource profile name.      @03A*/         
*                                                                               
*   5 DAUT_ENT_LEN@     PTR(31),  /* Address of a 2 byte area which             
*                                    contains the length of the                 
*                                    resource profile name.      @03A*/         
*                                                                               
*   5 DAUT_ACC_REQ@     PTR(31)   /* Address of a 1 byte area                   
*                                    containing the requested access            
*                                    to the resource.            @03A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*              INTA DECLARATIONS                                   */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  DECLARATION NAME = INTA                                         */         
*/*                                                                  */         
*/*  DESCRIPTIVE NAME =   RACF Initialize ACEE                       */         
*/*                                                                  */         
*/*  FUNCTION = Provides the mapping of the input paramter           */         
*/*      list for the service which will create/delete/manage ACEEs. */         
*/*                                                                  */         
*/*                                                              @L4A*/         
*/********************************************************************/         
* COMP_Dcl                                                                      
*  COMP_Lvl INTA COMP_Bas,                                                      
*                                                                               
*   5 INTA_FUNC@        PTR(31),  /* Address of 1 byte function code            
*                                                                @L4A*/         
*   5 INTA_ATTRIBUTES@  PTR(31),  /* Address of a full word area                
*                                    which contains the attribute flags         
*                                    for the service             @L4A*/         
*   5 INTA_USERID@      PTR(31),  /* Address of 9 byte area for the             
*                                    RACF userid (1 byte for the                
*                                    length followed by up to 8 bytes           
*                                    for the RACF userid itself) @L4A*/         
*                                                                               
*   5 INTA_ACEEP@       PTR(31),  /* Address of a full word input/              
*                                    output area for the ACEE address.          
*                                                                @L4A*/         
*                                                                               
*   5 INTA_APPL_ID@     PTR(31),  /* Address of an 9 byte area which            
*                                    specifies the name of the                  
*                                    application being accessed by the          
*                                    user. (1 byte for the length               
*                                    followed by up to 8 bytes for the          
*                                    application name itself) @L4A*/            
*                                                                               
*                                                                               
*                                                                               
*   5 INTA_PASSWORD@    PTR(31),  /* Address of an 9 byte area                  
*                                    containing the user's password or          
*                                    pass ticket. (1 byte for the               
*                                    length followed by up to 8 bytes           
*                                    for the password itself) @L4A*/            
*                                                                               
*   5 INTA_LOGSTRING@   PTR(31),  /* Address of a variable length area          
*                                    containing the log string to be            
*                                    passed to RACROUTE (1 byte for the         
*                                    length followed by up to 255 bytes         
*                                    for the log string itself) @L4A*/          
*                                                                               
*     7 INTA_LAST_PARM_VER1 BIT(1), /* Variable length parameter list.          
*                                    This was the last parameter for            
*                                    plist version 1             @06A*/         
*                                                                               
*   5 INTA_CERTIFICATE@ PTR(31),  /* Address of a variable length area          
*                                    containing the X.509 certificate           
*                                    identifying the user (fullword             
*                                    length followed by the certificate         
*                                    itself. Length of zero indicates           
*                                    certificate not present)   @06A*/          
*                                                                               
*     7 INTA_LAST_PARM_VER2 BIT(1), /* Variable length parameter list.          
*                                    This was the last parameter for            
*                                    plist version 2             @L5C*/         
*                                                                               
*   5 INTA_ENVR_IN@  PTR(31),     /* Address of an area containing              
*                                    the data structure to recreate the         
*                                    security environment.       @L5A*/         
*                                                                               
*     7 INTA_LAST_PARM_ENVR_IN BIT(1),  /* Variable length parameter            
*                                    list.  This is a valid last                
*                                    parameter for plist                        
*                                    version 3.                  @N4C*/         
*                                                                               
*   5 INTA_ENVR_OUT@ PTR(31),     /* Address of an area containing              
*                                    the data structure to retrieve the         
*                                    security environment.       @L5A*/         
*                                                                               
*     7 INTA_LAST_PARM_ENVR_OUT BIT(1), /* Variable length parameter            
*                                    list.  This is a valid last                
*                                    parameter for plist                        
*                                    version 3.                  @L6A*/         
*                                                                               
*   5 INTA_OUTA_STOR@ PTR(31),    /* Address of an area containing an           
*                                    OUSP                        @L6A*/         
*                                                                               
*     7 INTA_LAST_PARM_OUTA_STOR BIT(1), /* Variable length parameter           
*                                    list. This is a valid last                 
*                                    parameter for the plist                    
*                                    version 3.                  @L6A*/         
*                                                                               
*   5 INTA_X500_NAME_PTR PTR(31), /* A word in which to store a                 
*                                    pointer to the address                     
*                                    of the x500 name pair                      
*                                    structure.  The structure is a             
*                                    4-byte structure length, followed          
*                                    by 2 2-byte lengths, followed by           
*                                    up to 255 bytes of issuers name            
*                                    and to up 255 bytes of subjects            
*                                    name.                       @0BC*/         
*                                                                               
*     7 INTA_LAST_X500_NAME BIT(1), /* Variable length parameter                
*                                    list. This could be the last               
*                                    parameter for the plist                    
*                                    version 4.                  @LDA*/         
*                                                                               
*   5 INTA_VARIABLE_LIST@ PTR(31), /* Address of an area containing a           
*                                    criteria value data structure.             
*                                    The structure is a 4-byte number           
*                                    of entries, followed by 1 or more          
*                                    entries. Each entry is an 8-byte           
*                                    name, followed by a 4-byte value           
*                                    length, followed by the value.             
*                                                                @LDA*/         
*                                                                               
*     7 INTA_LAST_PARM_VAR_LIST BIT(1), /* Variable length parameter            
*                                    list. This could be the last               
*                                    parameter for the plist                    
*                                    version 4.                  @LDA*/         
*                                                                               
*                                                                               
*   5 INTA_SECLABEL@ PTR(31), /* Address of a 9 byte area containing a          
*                                security label data structure. The             
*                                structure is a 1-byte length followed          
*                                by up to 8 bytes for the security              
*                                label itself.                   @LTA*/         
*                                                                               
*   5 INTA_SERVAUTH@  PTR(31), /* Address of a variable length area for         
*                                 the SERVAUTH resource name. The               
*                                 structure is a 1-byte length followed         
*                                 by up to 64 bytes for the SERVAUTH            
*                                 name itself.                   @PBC*/         
*                                                                               
*     7 INTA_LAST_PARM_SERVAUTH BIT(1), /* Variable length parameter            
*                                    list. This could be the last               
*                                    parameter for the plist                    
*                                    version 5.                  @LTA*/         
*                                                                               
*   5 INTA_PHRASE@  PTR(31), /* Address of a variable length area               
*                               containing the user's pass phrase,              
*                               structure is a 1-byte length followed           
*                               by the pass phrase               @M8A*/         
*                                                                               
*     7 INTA_LAST_PARM_PHRASE BIT(1), /* Variable length parameter              
*                                    list. This could be the last               
*                                    parameter.                  @M8A*/         
*                                                                               
*   5 INTA_IDID_AREA@ PTR(31), /* Address of a fullword containing the          
*                               address of a variable length area               
*                               containing distributed identity data            
*                               (IDID)                           @MQA*/         
*                                                                               
*     7 INTA_LAST_PARM_IDID BIT(1), /* Variable length parameter                
*                                    list. This could be the last               
*                                    parameter.                  @MQA*/         
*                                                                               
*   5 INTA_ACEE2_ALET@ PTR(31), /* Address of ALET for ACEE 2 parameter         
*                                                                @NPA*/         
*                                                                               
*   5 INTA_ACEE2P@       PTR(31), /* Address of a full word input               
*                                    area for the ACEE 2 address.               
*                                                                @NPA*/         
*                                                                               
*   5 INTA_IDTA@ PTR(31),    /* Address of a fullword containing the            
*                               address of a variable length area               
*                               containing identity token area                  
*                               (IDTA)                           @NPA*/         
*                                                                               
*     7 INTA_LAST_PARM_IDTA BIT(1), /* Variable length parameter                
*                                    list. This could be the last               
*                                    parameter.                  @NPA*/         
*                                                                               
*       9 INTA_LAST_PARM BIT(1)   /* Variable length parameter                  
*                                    list.  This is the last                    
*                                    parameter                   @L6A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*              ADMN DECLARATIONS                                   */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  DECLARATION NAME = ADMN                                         */         
*/*                                                                  */         
*/*  DESCRIPTIVE NAME =   RACF Administration interface              */         
*/*                                                                  */         
*/*  FUNCTION = Provides the mapping of the input parameter          */         
*/*      list for the service which will create/delete/alter users   */         
*/*      and execute RACF commands.                                  */         
*/*                                                              @04A*/         
*/********************************************************************/         
* COMP_Dcl                                                                      
*  COMP_Lvl ADMN COMP_Bas,                                                      
*                                                                               
*   5 ADMN_FUNC@        PTR(31),  /* Address of 1 byte function code            
*                                                                @04A*/         
*   5 ADMN_PARMLIST@    PTR(31),  /* Address of the function-specific           
*                                    parameter list structure    @04A*/         
*   5 ADMN_USERID@      PTR(31),  /* Address of 9 byte area for the             
*                                    RACF userid under whose authority          
*                                    this service will execute (1 byte          
*                                    for the length followed by up to 8         
*                                    bytes for the userid itself)@04A*/         
*   5 ADMN_ACEEP@       PTR(31),  /* Address of a full word containing          
*                                    the ACEE address under the auth-           
*                                    ority of which this service                
*                                    will execute                @04A*/         
*   5 ADMN_OUTPUT_SP@   PTR(31),  /* Address of a caller-supplied one           
*                                    byte area containing the subpool           
*                                    in which output messages should            
*                                    be obtained                 @04A*/         
*   5 ADMN_OUTPUT_MSG@  PTR(31),  /* Address of a fullword containing           
*                                    a pointer to the RACF command              
*                                    ouput, which is mapped below.              
*                                    The caller is responsible for              
*                                    freeing this storage.       @04A*/         
*     7 ADMN_LAST_PARM BIT(1)     /* Variable length parameter list.            
*                                    This is the last parameter  @04A*/         
*   Comp_Term                                                                   
*/****************************************************************@L7A*         
*                                                                     *         
*                UMAP PLX DECLARATIONS                                *         
*---------------------------------------------------------------------*         
*                                                                     *         
*  DECLARATION NAME = UMAP                                            *         
*                                                                     *         
*  DESCRIPTIVE NAME =   RACF userid - R_UserMap                       *         
*                                                                     *         
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    *         
*             list for the service to map an application userid to    *         
*             a RACF userid                                           *         
*                                                                     *         
****************************************************************@L7A */         
* COMP_Dcl                                                       ]@L7A          
*  COMP_Lvl UMAP COMP_Bas,                                       ]@L7A          
*   5 UMAP_PARM_ALET@ ptr(31), ] Address of ALET for remaining    @L7A          
*                            ] parameters                         @L7A          
*   5 UMAP_FUNC@ ptr(31),    ] Address of 2-byte function code    @L7A          
*   5 UMAP_OPTION_WORD@ ptr(31), ] Reserved for future use        @L7A          
*   5 UMAP_USERID@ ptr(31),  ] Address of a 9-byte input/output   @L7A          
*                            ] for the RACF userid.  The first    @L7A          
*                            ] byte is the length followed by     @L7A          
*                            ] 8 bytes for the RACF userid        @L7A          
*   5 UMAP_CERTIFICATE@ ptr(31), ] Address of input area          @L7A          
*                            ] for a digital certificate.  First  @L7A          
*                            ] four bytes are a length followed   @L7A          
*                            ] by the digital certificate.        @L7A          
*   5 UMAP_APPL_USERID@ ptr(31),] Address of an input/output      @L7A          
*                            ] area for an Application ID.  First @L7A          
*                            ] two bytes contain the length       @L7A          
*                            ] followed by 246 bytes for the      @L7A          
*                            ] Application ID.                    @L7A          
*                            ] If not specified on input, length  @L7A          
*                            ] must be zero.                      @L7A          
*    7 UMAP_LAST_PARM bit(1), ] Variable length parameter list    @L7A          
*   5 UMAP_ID_PROPAGATION,   /* Mapping for ID Propagation portion              
*                               of UMAP                          @MYA*/         
*     7 UMAP_DISTINGUISHED_NAME@  PTR(31), /* Address of an input area          
*                                             for the User's                    
*                                             Distinguished Name.               
*                                             The first two bytes are           
*                                             the length followed by            
*                                             the Distinguished Name            
*                                             string             @MYA*/         
*     7 UMAP_REGISTRY_NAME@       PTR(31), /* Address of an input area          
*                                             for the                           
*                                             Registry/Realm Name.              
*                                             The first two bytes are           
*                                             the length followed by            
*                                             the Registry/Realm Name           
*                                             string             @MYA*/         
*       9 UMAP_IDPROP_LAST_PARM   BIT(1)   /* Variable length parameter         
*                                             list.  This indicates the         
*                                             the last parameter for            
*                                             this version of UMAP              
*                                                                @MYA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                CDDL DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  DECLARATION NAME = CDDL                                         */         
*/*                                                                  */         
*/*  DESCRIPTIVE NAME =   CDSA DataLib Service parameters            */         
*/*                                                                  */         
*/*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter */         
*/*             list for the CDSA Datalib callable service           */         
*/***************************************************************@L8A*/         
* COMP_Dcl                                                                      
*  COMP_Lvl CDDL COMP_Bas,                 /* Mapping for CDDL       */         
*   5 CDDL_FUNC@       PTR(31),   /* Address of 1 byte input function           
*                                    code.  Constants for the function          
*                                    codes are supplied below        */         
*   5 CDDL_ATTRIBUTES@ PTR(31),   /* Address of full word of input              
*                                    attributes */                              
*   5 CDDL_USERID@     PTR(31),   /* Address of a 9 byte input area             
*                                    for the RACF userid (1 byte for            
*                                    the length followed by 8 bytes             
*                                    for the RACF userid itself).               
*                                    A length of 0 indicates the                
*                                    current user is the ring owner  */         
*   5 CDDL_RING@       PTR(31),   /* Address of a variable length               
*                                    input area for the ring name               
*                                    (1 byte for the length followed            
*                                    by up to 237 bytes for the ring            
*                                    name).  Parameter ignored for              
*                                    CheckStatus, AbortQuery, and               
*                                    DataGetNext                     */         
*   5 CDDL_VERSION@    PTR(31),   /* Address of a 4 byte area                   
*                                    containing the input version               
*                                    number for the function specific           
*                                    specific parameter list pointed            
*                                    to by CDDL_PARMLIST@.  Must be             
*                                    set to 0.                       */         
*                                                                               
*   5 CDDL_PARMLIST@   PTR(31),   /* Address of the input function              
*                                    specific parameter list         */         
*    7 CDDL_LAST_PARM Bit(1)      /* Last parm in variable length parm          
*                                    list                        @L8A*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*              KERB DECLARATIONS                                   */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  DECLARATION NAME = KERB                                         */         
*/*                                                                  */         
*/*  DESCRIPTIVE NAME =   RACF Kerberos information interface        */         
*/*                                                                  */         
*/*  FUNCTION = Provides the mapping of the input parameter          */         
*/*      list for the service which will update or retrieve Kerberos */         
*/*      information                                                 */         
*/*                                                              @LEA*/         
*/********************************************************************/         
* COMP_Dcl                                                                      
*  COMP_Lvl KERB COMP_Bas,                 /*                    @LEA*/         
*                                                                               
*   5 KERB_FUNC@        PTR(31),  /* Address of 1 byte function code            
*                                                                @LEA*/         
*   5 KERB_RACF_NAME@   PTR(31),  /* Address of a 9 byte area                   
*                                    containing a RACF name preceded by         
*                                    a one byte length. x'00' in first          
*                                    byte if not specified.      @N4C*/         
*   5 KERB_NAME@        PTR(31),  /* Address of 240 byte area for the           
*                                    Kerberos Principal.  x'00' in the          
*                                    first byte if not specified.@LEA*/         
*   5 KERB_DATA_AREA@   PTR(31),  /* Address of a caller-supplied area          
*                                    for the field mappings.     @LEA*/         
*     7 KERB_LAST_PARM BIT(1)     /* Variable length parameter list.            
*                                    This is the last parameter  @LEA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*              TKTS DECLARATIONS                                   */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  DECLARATION NAME = TKTS                                         */         
*/*                                                                  */         
*/*  DESCRIPTIVE NAME =  Parse or Extract from Kerberos Ticket       */         
*/*                                                                  */         
*/*  FUNCTION = Provides the mapping of the input parameter          */         
*/*             list for the R_ticketserv callable service           */         
*/*                                                              @LHA*/         
*/********************************************************************/         
* COMP_Dcl                                                                      
*  COMP_Lvl TKTS COMP_Bas,                 /*                    @LHA*/         
*                                                                               
*   5 TKTS_PARM_ALET@   PTR(31),  /* Address of ALET for remaining              
*                                    parameters                  @LHA*/         
*   5 TKTS_FUNC@        PTR(31),  /* Address of 2 byte function code            
*                                                                @LHA*/         
*   5 TKTS_OPTION_WORD@ PTR(31),  /* Address of a full word containing          
*                                    binary zeros. The area pointed to          
*                                    by this parameter is reserved for          
*                                    future use.                 @LHA*/         
*   5 TKTS_CRED_AREA@   PTR(31),  /* Address of an area consisting of           
*                                    a 2 byte length field followed by          
*                                    a ticket.                   @LHA*/         
*   5 TKTS_OPTIONS@     PTR(31),  /* Address of a                               
*                                    a binary bit string which                  
*                                    identifies the function code               
*                                    specific processing to be                  
*                                    performed.                                 
*                                    For TKTS_PASSTICKET, this is a             
*                                    4 byte bit string.                         
*                                    1 = passticket generate                    
*                                    2 = passticket evaluate      @LWC          
*                                    3 = passticket eval extended @NNA          
*                                    4 = passticket gen extended  @NNA          
*                                                                   */          
*   5 TKTS_PRIN_USERID@ PTR(31),  /* Address of a pre-allocated storage         
*                                    area containing 242 bytes which is         
*                                    the output principal name preceded         
*                                    by a 2 byte length field.                  
*                                    For a passticket operation, this           
*                                    is a 2 byte length field followed          
*                                    by a 1-8 byte userid        @LWC*/         
*     7 TKTS_LAST_PARM BIT(1),    /* Variable length parameter list.            
*                         This is the last parameter for pre-1.7 @LWC*/         
*   5 TKTS_APPLICATION@ PTR(31),  /* application ID address for                 
*                                    passticket operations consisting           
*                                    of a 2 byte len, followed by a             
*                                    maximum of 8 chars          @LWA*/         
*     7 TKTS_V17_LAST  BIT(1)     /* Variable length parameter list.            
*                                    This is the last parameter in              
*                                    v1.7                        @LWA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                PKIS DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = PKIS                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = PKIS Service parameters                       */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the PKIS callable service R_PKIServ          */         
*/***************************************************************@0AA*/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl PKIS COMP_Bas,                 /* Mapping for PKIS   @0AA*/         
*   5 PKIS_NUM_PARMS@    PTR(31), /* Address of a Four-Byte variable            
*                                    that contains the number of                
*                                    parameters that follow in the              
*                                    non-request specific portion of            
*                                    the R_PKIServ callable service             
*                                    Parameter List              @0AA*/         
*   5 PKIS_FUNC@         PTR(31), /* Address of a Two-Byte variable             
*                                    that contains the code of the              
*                                    requested function.  Constants             
*                                    for the function codes codes               
*                                    are declared below          @0AA*/         
*   5 PKIS_ATTRIBUTES@   PTR(31), /* Address of a Four-Byte variable            
*                                    that contains attribute flags              
*                                    for the service             @0AA*/         
*   5 PKIS_LOG_STRING@   PTR(31), /* Address of a Variable-Length area          
*                                    that contains the LOG string to            
*                                    be passed to RACROUTE (1 byte for          
*                                    the length followed by up to 255           
*                                    bytes for the LOG string itself)           
*                                                                @0AA*/         
*   5 PKIS_PARM_VER@     PTR(31), /* Address of a Four-Byte variable            
*                                    that contains the version number           
*                                    of the Function Specific                   
*                                    Parameter List (PKIS_FUNC_PARML@)          
*                                                                @0AA*/         
*   5 PKIS_FUNC_PARML@   PTR(31), /* Address of the FSPL -                      
*                                    Function Specific Parameter List           
*                                    (FSPL = the Parameter List that            
*                                            corresponds to the                 
*                                            Function Code)      @0AA*/         
*     7 PKIS_LAST_PARM   BIT(1),  /* Variable length parameter list.            
*                                    This is the last parameter                 
*                                    pre z/OS R8                 @M7C*/         
*   5 PKIS_CA_DOMAIN@    PTR(31)  /* Address of the name of the PKI             
*                                    Services certificate authority             
*                                    instance to be invoked      @M7A*/         
*   Comp_Term                                                                   
*/***************************************************************@0AA*/         
*/*                                                                  */         
*/*                CACH DECLARATIONS                             @LLA*/         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = CACH                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = R_CACHSERV parameters                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the R_cacheserv callable service             */         
*/***************************************************************@LLA*/         
* COMP_Dcl                                                                      
*  COMP_Lvl CACH COMP_Bas,                 /*                    @LLA*/         
*                                                                               
*   5 CACH_PARM_ALET@   PTR(31),  /* Address of ALET for remaining              
*                                    parameters not including the               
*                                    ACEE_ALET and ACEE                         
*                                    parameters.                 @LLA*/         
*   5 CACH_NUM_PARMS@   PTR(31),  /* Address of a fullword containing           
*                                    the number of remaining parms,             
*                                    including this one          @LLA*/         
*   5 CACH_FUNC@        PTR(31),  /* Address of 2 byte function code            
*                                    Constants for the function codes           
*                                    codes are supplied below    @LLA*/         
*   5 CACH_OPTION@      PTR(31),  /* Address of 2 byte field containing         
*                                    an option value that further               
*                                    defines the function        @LLA*/         
*   5 CACH_VERSION@     PTR(31),  /* Address of the data field                  
*                                    containing the version (level)             
*                                    of the cache                @LLA*/         
*   5 CACH_VERSION_LEN@ PTR(31),  /* Address of a fullword containing           
*                                    the length of the version field            
*                                                                @LLA*/         
*   5 CACH_NAME@        PTR(31),  /* Address of a data field containing         
*                                    the cachename identifying                  
*                                    the cache                   @LLA*/         
*   5 CACH_RECNAME_PTR@ PTR(31),  /* Address of a variable length field         
*                                    containing the name of the record          
*                                    to be added or fetched      @LLA*/         
*   5 CACH_RECNAME_LEN@ PTR(31),  /* Address of a fullword containing           
*                                    the length of the record name              
*                                                                @LLA*/         
*   5 CACH_DATA_PTR@    PTR(31),  /* Address of the pointer to the              
*                                    data associated with this record           
*                                                                @LLA*/         
*   5 CACH_DATA_LEN@    PTR(31),  /* Address of a fullword containing           
*                                    the length of the data      @LLA*/         
*   5 CACH_DATA_TIMEOUT@  PTR(31), /*  Address of a fullword                    
*                                    containing the number of                   
*                                    seconds before the data                    
*                                    times out                   @M9A*/         
*                                                             ] 1@MAM           
*   5 CACH_SRC_PTR@  PTR(31),     /* Address of the pointer                     
*                                    a source record.            @MBA*/         
*   5 CACH_SRC_LEN@  PTR(31),     /* Address of a fullword                      
*                                    containing the length of a                 
*                                    a source record.            @MBA*/         
*   5 CACH_REF_TIMEOUT@ PTR(31),  /*  Address of a fullword                     
*                                    containing the number of                   
*                                    seconds before the reference               
*                                    times out                   @M9A*/         
*   5 CACH_REF_USERID@  PTR(31),  /* Address of an 8 byte area                  
*                                    containing a reference                     
*                                    user ID                     @M9A*/         
*   5 CACH_REF@    PTR(31),       /* Address of an 8 byte area                  
*                                    containing a reference                     
*                                    value                       @M9A*/         
*   5 CACH_SUBPOOL@   PTR(31),    /* Address of a 1 byte area                   
*                                    containing the subpool for                 
*                                    output areas                @M9A*/         
*   5 CACH_ACEE_ALET@   PTR(31),  /* Address of ALET for ACEE    @MAA*/         
*   5 CACH_ACEE@        PTR(31),  /* Address of an  ACEE         @MQC*/         
*   5 CACH_ICRX@        PTR(31),  /* Address of a fullword containing           
*                                    an ICRX address             @MQA*/         
*   5 CACH_ICRX_LEN@    PTR(31)   /* Address of a fullword containing           
*                                    the length of the ICRX      @MQA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                PRXY DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = PRXY                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = R_proxyserv parameters                        */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the R_proxyserv callable service             */         
*/***************************************************************@LMA*/         
* COMP_Dcl                                                                      
*  COMP_Lvl PRXY COMP_Bas,                 /*                    @LMA*/         
*                                                                               
*   5 PRXY_PARM_ALET@   PTR(31),  /* Address of ALET for remaining              
*                                    parameters                  @LMA*/         
*   5 PRXY_FUNC@        PTR(31),  /* Address of 2 byte function code            
*                                    Constants for the function codes           
*                                    codes are supplied below    @LMA*/         
*   5 PRXY_LDAP_HOST@   PTR(31),  /* Address of an area containing a            
*                                    4 byte length followed by an               
*                                    EBCDIC URL for the LDAP BIND               
*                                                                @LMA*/         
*   5 PRXY_BIND_DN@     PTR(31),  /* Address of an area containing a            
*                                    4 byte length followed by an               
*                                    EBCDIC DN for the LDAP BIND                
*                                                                @LMA*/         
*   5 PRXY_BIND_PW@     PTR(31),  /* Address of an area containing a            
*                                    4 byte length followed by an               
*                                    EBCDIC password for the LDAP BIND          
*                                                                @LMA*/         
*   5 PRXY_USERID@      PTR(31),  /* Address of 9 byte area containing          
*                                    a 1 byte length followed by up to          
*                                    8 EBCDIC characters for a host             
*                                    user ID                     @LMA*/         
*   5 PRXY_USERDN@      PTR(31),  /* Address of an area containing a            
*                                    4 byte length followed by an               
*                                    EBCDIC string naming the base              
*                                    DN of an LDAP subtree       @LMA*/         
*   5 PRXY_RESULTS@     PTR(31),  /* Address of a pointer to the                
*                                    results                     @LMA*/         
*     7 PRXY_LAST_PARM  BIT(1),   /* Variable length parameter list. */         
*       9 PRXY_LAST_PARM0 BIT(1), /* This is the last parameter for             
*                                    original edition of service @LVC*/         
*   5 PRXY_FUNC_PARMLIST_VERSION@ PTR(31),/* Address of a 4 byte                
*                                    version number for the function            
*                                    specific parameter list     @LVA*/         
*     7 PRXY_FUNC_VERSION@ PTR(31),/* Alias of previous declare  @PDA*/         
*   5 PRXY_FUNC_PARMLIST@ PTR(31),/* Address of the function                    
*                                    specific parameter list     @LVA*/         
*   5 PRXY_LDAP_ERROR@  PTR(31),  /* Address of a 260 byte output area          
*                                    containing a 4 byte len followed           
*                                    by an EBCDIC error message  @LVA*/         
*     7 PRXY_LAST_PARM1 BIT(1)    /* Last parameter for first update            
*                                    of this service             @LVA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                RACL DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = RACL                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = RACL Service parameters                       */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the RACL callable service R_SetFACL          */         
*/***************************************************************@LIA*/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl RACL COMP_Bas,                /* Mapping for RACL    @LIA*/         
*    5 RACL_EDIT_ALET@   PTR(31), /* Address of the ALET for the                
*                                    EDIT structure              @LIA*/         
*    5 RACL_EDIT@        PTR(31), /* Address of the EDIT structure              
*                                                                @LIA*/         
*    5 RACL_EDITLEN_ALET@                                                       
*                        PTR(31), /* Address of the ALET for the                
*                                    EDIT structure length       @LIA*/         
*    5 RACL_EDITLEN@     PTR(31), /* Address of the length of the               
*                                    RACL_Edit structure         @LIA*/         
*    5 RACL_FSP_ALET@    PTR(31), /* Address of the ALET for the                
*                                    FSP                         @LIA*/         
*    5 RACL_FSP@         PTR(31), /* Address of the FSP structure               
*                                                                @LIA*/         
*    5 RACL_FID_ALET@    PTR(31), /* Address of the ALET for the                
*                                    File ID                     @LIA*/         
*    5 RACL_FID@         PTR(31), /* Address of the File ID which is            
*                                    a 16-byte area that contains a             
*                                    unique ID of the file       @LIA*/         
*    5 RACL_CRED_ALET@   PTR(31), /* Address of the ALET for the                
*                                    CRED structure              @LIA*/         
*    5 RACL_CRED@        PTR(31), /* Address of the CRED structure              
*                                                                @LNC*/         
*      7 RACL_LAST_PARM   BIT(1)  /* Variable length parameter list             
*                                    This is the last parameter  @LNA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                SECL DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = SECL                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = SECL Service parameters                       */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the callable service R_SetFSecl              */         
*/***************************************************************@LRA*/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl SECL COMP_Bas,                /* Mapping for SECL    @LRA*/         
*    5 SECL_FSP_ALET@    PTR(31), /* Address of the ALET for the                
*                                    FSP                         @LRA*/         
*    5 SECL_FSP@         PTR(31), /* Address of the FSP structure               
*                                                                @LRA*/         
*    5 SECL_FID_ALET@    PTR(31), /* Address of the ALET for the                
*                                    File ID                     @LRA*/         
*    5 SECL_FID@         PTR(31), /* Address of the File ID which is            
*                                    a 16-byte area that contains a             
*                                    unique ID of the file       @LRA*/         
*    5 SECL_CRED_ALET@   PTR(31), /* Address of the ALET for the                
*                                    CRED structure              @LRA*/         
*    5 SECL_CRED@        PTR(31)  /* Address of the CRED structure              
*                                                                @LRA*/         
*   Comp_Term                                                                   
*                                                                               
*/***************************************************************@LRA*/         
*                                                                               
*/***************************************************************@LSA*/         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*                WPRV DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = WPRV                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = WPRV Service parameters                       */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the callable service R_WritePriv             */         
*/***************************************************************@LSA*/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl WPRV COMP_Bas,                /* Mapping for WPRV    @LSA*/         
*    5 WPRV_FUNC@        PTR(31), /* Address of the Function Code               
*                                                                @LSA*/         
*    5 WPRV_ACEE_ALET@   PTR(31), /* Address of the ALET for the                
*                                    ACEE structure              @LSA*/         
*    5 WPRV_ACEE@        PTR(31)  /* Address of the ACEE structure              
*                                                                @LSA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                RAUX DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = RAUX                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = R_auditx parameters                           */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the R_auditx callable service                */         
*/***************************************************************@LXA*/         
* COMP_Dcl                                                                      
*  COMP_Lvl RAUX COMP_Bas,                 /*                    @LXA*/         
*                                                                               
*   5 RAUX_NUM_PARMS@        PTR(31), /* Address of a full word                 
*                                        containing the total                   
*                                        number of parameters                   
*                                        included in COMP and                   
*                                        RAUX                    @LXA*/         
*   5 RAUX_ACEE_ALET@        PTR(31), /* Address of the ALET for                
*                                        the ACEE structure      @LXA*/         
*   5 RAUX_ACEE@             PTR(31), /* Address of the          @M2C           
*                                        ACEE structure          @LYC*/         
*   5 RAUX_PARM_ALET@        PTR(31), /* Address of ALET for the                
*                                        remaining parameters    @LXA*/         
*   5 RAUX_OPTION_WORD@      PTR(31), /* Address of a full word                 
*                                        containing binary zeros.               
*                                        The area pointed to by                 
*                                        this parameter is                      
*                                        reserved for futureuse. @LXA*/         
*   5 RAUX_LINK_VALUE@       PTR(31), /* Address of 8 byte value @M2C           
*                                        used to mark a set of                  
*                                        related SMF records     @LXA*/         
*   5 RAUX_ATTRIBUTES@       PTR(31), /* Address of a full word                 
*                                        containing flag values  @LXA*/         
*   5 RAUX_COMPONENT@        PTR(31), /* Address of an area                     
*                                        containing a 4 byte                    
*                                        length followed by a                   
*                                        a component or product                 
*                                        name                    @LXA*/         
*   5 RAUX_FMID@             PTR(31), /* Address of a 7 byte area               
*                                        containing the FMID for                
*                                        the component or                       
*                                        product                 @LXA*/         
*   5 RAUX_SUBTYPE@          PTR(31), /* Address of a full word                 
*                                        containing the SMF 83                  
*                                        record subtype          @LXA*/         
*   5 RAUX_EVENT@            PTR(31), /* Address of a full word                 
*                                        containing the event                   
*                                        code                    @LXA*/         
*   5 RAUX_QUALIFIER@        PTR(31), /* Address of a full word                 
*                                        containing the qualifier               
*                                        for the event code      @LXA*/         
*   5 RAUX_CLASS@            PTR(31), /* Address of an 8 byte                   
*                                        area containing a                      
*                                        class name              @LXA*/         
*   5 RAUX_RESOURCE@         PTR(31), /* Address of an area                     
*                                        containing a 4 byte                    
*                                        length followed by the                 
*                                        resource name which is                 
*                                        covered by a profile                   
*                                        defined in the class                   
*                                        specified above         @LXA*/         
*   5 RAUX_LOG_STRING@       PTR(31), /* Address of an area                     
*                                        containing a 4 byte                    
*                                        length followed by                     
*                                        text to be written                     
*                                        to the SMF record       @LXA*/         
*   5 RAUX_RELOCATE_COUNT@   PTR(31), /* Address of a full word                 
*                                        containing the number                  
*                                        of relocate sections    @LXA*/         
*   5 RAUX_RELOCATE_PTR@     PTR(31), /* Address of a 4 byte                    
*                                        pointer to the                         
*                                        array of relocate                      
*                                        sections                @LYC*/         
*   5 RAUX_MESSAGE_COUNT@    PTR(31), /* Address of a full word                 
*                                        containing the number                  
*                                        of message segments     @LXA*/         
*   5 RAUX_MESSAGE_PTR@      PTR(31)  /* Address of a 4 byte                    
*                                        pointer to the                         
*                                        array of message                       
*                                        segments                @LYC*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                GINF DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = GINF                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = GINF Service parameters                       */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the callable service R_GetInfo               */         
*/***************************************************************@LZA*/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl GINF COMP_Bas,                /* Mapping for GINF    @LZA*/         
*    5 GINF_NUM_PARMS@   PTR(31), /* Address of fullword containing             
*                                    the total number of parameters             
*                                                                @LZA*/         
*    5 GINF_PARM_ALET@   PTR(31), /* Address of the ALET of the rest            
*                                    of the parameters           @LZA*/         
*    5 GINF_FUNC_CODE@   PTR(31), /* Address of halfword function               
*                                    code.  Constants for the function          
*                                    codes are supplied below.   @LZA*/         
*    5 GINF_OPTION@      PTR(31), /* Address of halfword option for             
*                                    function code.              @LZA*/         
*    5 GINF_RACF_ENTITY@ PTR(31), /* Address of RACF entity.     @LZA*/         
*    5 GINF_RACF_CLASS@ PTR(31),  /* Address of RACF class.      @LZA*/         
*    5 GINF_RESULT_ENTRIES@ PTR(31)  /* Address of result entries               
*                                    area.                       @LZA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                PGSN DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = PGSN                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = PGMSIGNVER service parameters                 */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the callable service R_PgmSignVer            */         
*/***************************************************************@MMA*/         
* COMP_Dcl                                                                      
*  COMP_Lvl PGSN COMP_Def,                 /* Mapping for PGSN   @MTA*/         
*    5 PGSN_NUM_PARMS@   PTR(31), /* Address of fullword containing             
*                                    the total number of parameters             
*                                    included in COMP and PGSN.  @MMA*/         
*    5 PGSN_FUNC@        PTR(31), /* Address of 2 byte func code @MMA*/         
*    5 PGSN_FUNC_PARML@  PTR(31), /* Address of the function-specific           
*                                    parameter list corresponding to            
*                                    the function code.          @NOC*/         
*    5 PGSN_FUNC_ATTRS@  PTR(31)  /* Address of the attributes                  
*                                    corresponding to function code             
*                                                                @NOA*/         
*   Comp_Term                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/*                XPWD DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = XPWD                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = R_Password parameters                         */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the R_Password callable service              */         
*/***************************************************************@NEA*/         
* COMP_Dcl                                                                      
*  COMP_Lvl XPWD COMP_Bas,                 /*                    @NEA*/         
*                                                                               
*   5 XPWD_NUM_PARMS@        PTR(31), /* Address of a full word                 
*                                        containing the total                   
*                                        number of parameters                   
*                                        included in COMP and                   
*                                        XPWD                    @NEA*/         
*   5 XPWD_PARM_ALET@        PTR(31), /* Address of ALET for the                
*                                        remaining parameters    @NEA*/         
*   5 XPWD_FUNC@             PTR(31), /* Address of 2 byte                      
*                                        function code           @NEA*/         
*   5 XPWD_USERID_LEN@       PTR(31), /* Address of a full word                 
*                                        containing the length                  
*                                        of the userID           @NEA*/         
*   5 XPWD_USERID@           PTR(31), /* Address of an area                     
*                                        containing the userID   @NEA*/         
*   5 XPWD_PASSWORD_LEN@     PTR(31), /* Address of a full word                 
*                                        containing the length                  
*                                        of the password/phrase  @NEA*/         
*   5 XPWD_PASSWORD@         PTR(31), /* Address of an area                     
*                                        containing the password                
*                                        or phrase               @NEA*/         
*   5 XPWD_FUNC_PARMLIST@    PTR(31)  /* Address of the function                
*                                        specific parameter list @NEA*/         
*   Comp_Term                                                                   
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*                SMOP DECLARATIONS                                 */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* DECLARATION NAME = SMOP                                          */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME = R_SecMgtOper service parameters               */         
*/*                                                                  */         
*/* FUNCTION = Provides the mapping of the input parameter           */         
*/*            list for the callable service R_SecMgtOper            */         
*/***************************************************************@NGA*/         
*                                                                               
* COMP_Dcl                                                                      
*  COMP_Lvl SMOP COMP_Def,                 /* Mapping for SMOP   @NGA*/         
*    5 SMOP_NUM_PARMS@   PTR(31), /* Address of fullword containing             
*                                    the total number of parameters             
*                                    included in COMP and SMOP.  @NGA*/         
*    5 SMOP_FUNC@        PTR(31), /* Address of 4 byte func code @NGA*/         
*    5 SMOP_OPTIONS@     PTR(31), /* Address of option for SecMgtOper           
*                                                                @NGA*/         
*    5 SMOP_REQUEST_LEN@ PTR(31), /* Address of 4 byte request length           
*                                                                @NGA*/         
*    5 SMOP_REQUEST@     PTR(31), /* Address of input request XML@NGA*/         
*    5 SMOP_HANDLE@      PTR(31), /* Address of input handle     @NGA*/         
*    5 SMOP_USERID@      PTR(31), /* Address of runas USER       @NGA*/         
*    5 SMOP_ACEE@        PTR(31), /* Address of runas ACEE       @NGA*/         
*    5 SMOP_RESULT_Len@  PTR(31), /* Address of result len       @NGA*/         
*    5 SMOP_RESULT@      PTR(31)  /* Address of result           @NGA*/         
*   ;                                                                           
*/* Add new service here.  Change previous semi-colon to Comp_Term.  */         
*/*   End new service declaration with semi-colon.                   */         
*/* Put only the main arguments specified on the CALL                */         
*/*   statement here.  Constants and other mappings                  */         
*/*   should be added at the very end of  this macro.                */         
*                                                                               
*/********************************************************************/         
*/*                COMP sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  COMP_LEN FIXED(31) CONSTANT(LENGTH(COMP)); /* Constant COMP length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                IUSP sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  IUSP_LEN FIXED(31) CONSTANT(LENGTH(IUSP)); /* Constant IUSP length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                CSID sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  CSID_LEN FIXED(31) CONSTANT(LENGTH(CSID)); /* Constant CSID length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                EXID sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  EXID_LEN FIXED(31) CONSTANT(LENGTH(EXID)); /* Constant EXID length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                GETG sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  GETG_LEN FIXED(31) CONSTANT(LENGTH(GETG)); /* Constant GETG length*/         
*                                                                               
*/********************************************************************/         
*/*                CHKP sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  CHKP_LEN FIXED(31) CONSTANT(LENGTH(CHKP)); /* Constant CHKP length*/         
*                                                                               
*/********************************************************************/         
*/*                GMAP sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  GMAP_LEN FIXED(31) CONSTANT(LENGTH(GMAP)); /* Constant GMAP length*/         
*                                                                               
*/********************************************************************/         
*/*                CKPO sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  CKPO_LEN FIXED(31) CONSTANT(LENGTH(CKPO)), /* Constant CKPO length*/         
*  CKPO_KILL_AUDIT FIXED(31) CONSTANT(1), /* KILL AUDIT Constant     */         
*  CKPO_KILL       FIXED(31) CONSTANT(2), /* Kill Verification.      */         
*  CKPO_GETPSENT   FIXED(31) CONSTANT(3), /* Caller is GETPSENT.     */         
*  CKPO_OPEN_STTY  FIXED(31) CONSTANT(4), /* Open Slave TTY.         */         
*  CKPO_SIGQUEUE   FIXED(31) CONSTANT(5), /* sigqueue check      @LUA*/         
*  CKPO_MAX_REQ_TYPE FIXED(31) CONSTANT(5); /* Max Request Type. @LUC*/         
*/********************************************************************/         
*/*                QRYS sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  QRYS_LEN FIXED(31) CONSTANT(LENGTH(QRYS)); /* Constant QRYS length*/         
*                                                                               
*/********************************************************************/         
*/*                CMOD sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  CMOD_LEN FIXED(31) CONSTANT(LENGTH(CMOD)); /* Constant CMOD length*/         
*                                                                               
*/********************************************************************/         
*/*                CLID sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  CLID_LEN FIXED(31) CONSTANT(LENGTH(CLID)); /* Constant CLID length*/         
*                                                                               
*/********************************************************************/         
*/*                CAUD sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  CAUD_LEN FIXED(31) CONSTANT(LENGTH(CAUD)); /* Constant CAUD length*/         
*                                                                               
*/********************************************************************/         
*/*                COWN sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  COWN_LEN FIXED(31) CONSTANT(LENGTH(COWN)); /* Constant COWN length*/         
*                                                                               
*/********************************************************************/         
*/*                UMSK sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  UMSK_LEN FIXED(31) CONSTANT(LENGTH(UMSK)); /* Constant UMSK length*/         
*                                                                               
*/********************************************************************/         
*/*                KAFF sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
*                                                                               
* DECLARE                                                                       
*  KACC_LEN FIXED(31) CONSTANT(LENGTH(KACC)); /* Constant KACC length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                QRYF sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  QRYF_LEN FIXED(31) CONSTANT(LENGTH(QRYF)); /* Constant QRYF length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                KFOW sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  KFOW_LEN FIXED(31) CONSTANT(LENGTH(KFOW)); /* Constant KFOW length*/         
*                                                                               
*/********************************************************************/         
*/*                MKRT sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  MKRT_LEN FIXED(31) CONSTANT(LENGTH(MKRT)); /* Constant MKRT length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                PTRC sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  PTRC_LEN FIXED(31) CONSTANT(LENGTH(PTRC)); /* Constant PTRC length*/         
*                                                                               
*/********************************************************************/         
*/*                MFSP sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  MFSP_LEN FIXED(31) CONSTANT(LENGTH(MFSP)); /* Constant MFSP length*/         
*                                                                               
*/********************************************************************/         
*/*                RAUD sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  RAUD_LEN FIXED(31) CONSTANT(LENGTH(RAUD)); /* Constant RAUD length*/         
*                                                                               
*/********************************************************************/         
*/*                GUGP sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  GUGP_LEN FIXED(31) CONSTANT(LENGTH(GUGP)); /* Constant GUGP length*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                FORK sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  FORK_LEN FIXED(31) CONSTANT(LENGTH(FORK)), /* Constant FORK length*/         
*  FORK_PARENT FIXED(31) CONSTANT(0), /* Fork Parent Processing flag.*/         
*  FORK_PARENTX FIXED(31) CONSTANT(2), /* Fork Parent Processing                
*                                         Extended Data flag.    @LGA*/         
*  FORK_CHILD  FIXED(31) CONSTANT(1), /* Fork Child Processing flag. */         
*  FORK_CHILDX  FIXED(31) CONSTANT(3); /* Fork Child Processing                 
*                                         Extended Data flag.    @LGA*/         
*                                                                               
*/********************************************************************/         
*/*                MISP sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  MISP_LEN FIXED(31) CONSTANT(LENGTH(MISP)); /* Constant MISP length           
*                                                                @L1A*/         
*                                                                               
*/********************************************************************/         
*/*                IACC sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
*                                                                               
*                                                                               
* DECLARE                                                                       
*  IACC_LEN FIXED(31) CONSTANT(LENGTH(IACC)); /* Constant IACC length           
*                                                                @L1A*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                IOWN sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  IOWN_LEN FIXED(31) CONSTANT(LENGTH(IOWN)); /* Constant IOWN length           
*                                                                @L1A*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                CKO2 sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  CKO2_LEN FIXED(31) CONSTANT(LENGTH(CKO2)); /* Constant CKO2 length           
*                                                                @L2A*/         
*                                                                               
*/********************************************************************/         
*/*                GETE sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  GETE_LEN FIXED(31) CONSTANT(LENGTH(GETE)); /* Constant GETE length           
*                                                                @L3A*/         
*                                                                               
*/********************************************************************/         
*/*                DKEY sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  DKEY_LEN FIXED(31) CONSTANT(LENGTH(DKEY)), /* Constant DKEY length           
*                                                                @01A*/         
*  DKEY_GET BIT(8) CONSTANT('01'X),/* Get the DPASSWDS           @01A*/         
*  DKEY_PUT BIT(8) CONSTANT('02'X),/* Put the DPASSWDS           @LQC*/         
*  DKEY_GET_LDAP_PW BIT(8) CONSTANT('03'X);/* GET the LDAP pass  @LQA*/         
*                                                                               
*/********************************************************************/         
*/*                DINF sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  DINF_LEN FIXED(31) CONSTANT(LENGTH(DINF)),  /* Constant DINF length          
*                                                                @01A*/         
*  DINF_GET BIT(8) CONSTANT('01'X),/* Get the DCE info           @01A*/         
*  DINF_PUT BIT(8) CONSTANT('02'X);/* Put the DCE info           @01A*/         
*                                                                               
* DECLARE                                                                       
*  1 DINF_FIELD_LIST BASED,       /* List of fields to set/get   @01A*/         
*   5 DINF_FIELD_LIST_LEN    FIXED(16), /* Len in bytes of field list           
*                                                                @01A*/         
*   5 DINF_FIELD_LIST_CNT    FIXED(16), /* Number fields in field list          
*                                                                @01A*/         
*   5 DINF_FIELD_LIST_ST     CHAR(*);   /* Fields start here     @01A*/         
*                                                                               
* DECLARE                                                                       
*  1 DINF_FIELDS BASED,           /* Fields passed from caller   @01A*/         
*   5 DINF_FIELD_NAME   CHAR(8),  /* Name of field               @01A*/         
*   5 DINF_FIELD_LEN    FIXED(16),/* Length of field             @01A*/         
*   5 DINF_FIELD_DATA   CHAR(*);  /* Field data                  @01A*/         
*                                                                               
* DECLARE                                                                       
*  1 DINF_OUTPUT_AREA BASED,      /* Output area from caller     @01A*/         
*   5 DINF_OUTPUT_AREA_LEN FIXED(16), /* Length in bytes of output area         
*                                                                @01A*/         
*   5 DINF_OUTPUT_AREA_CNT FIXED(16), /* Number fields in output data           
*                                                                @01A*/         
*   5 DINF_OUTPUT_AREA_ST  CHAR(*);   /* Output starts here      @01A*/         
*                                                                               
* DECLARE                                                                       
*  1 DINF_OUTPUT_FLD BASED,       /* Data returned for one field @01A*/         
*   5 DINF_OUTPUT_FLD_NAME CHAR(8),   /* Name of field           @01A*/         
*   5 DINF_OUTPUT_FLD_LEN  FIXED(16), /* Length of this output piece            
*                                                                @01A*/         
*   5 DINF_OUTPUT_FLD_DATA CHAR(*);   /* Data retrieved          @01A*/         
*                                                                               
*/********************************************************************/         
*/*                DRUR sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  DRUR_LEN FIXED(31) CONSTANT(LENGTH(DRUR)), /* Constant DRUR length           
*                                                                @02A*/         
*  DRUR_GET_RACF_USERID BIT(8) CONSTANT('01'X),] UUID->RACF userid @02A         
*  DRUR_GET_DCE_UUID BIT(8)    CONSTANT('02'X);] RACF userid->UUID @02A         
*/********************************************************************/         
*/*                DAUT sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  DAUT_LEN FIXED(31) CONSTANT(LENGTH(DAUT)), /* Constant DAUT length           
*                                                                @03A*/         
*  DAUT_READ       BIT(8) CONSTANT('02'X), /* READ    access req @03A*/         
*  DAUT_UPDATE     BIT(8) CONSTANT('04'X), /* UPDATE  access req @03A*/         
*  DAUT_CONTROL    BIT(8) CONSTANT('08'X), /* CONTORL access req @03A*/         
*  DAUT_ALTER      BIT(8) CONSTANT('80'X); /* ALTER   access req @03A*/         
*                                                                               
*/********************************************************************/         
*/*                INTA sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  INTA_LEN FIXED(31) CONSTANT(LENGTH(INTA)), /* Constant INTA length           
*                                                                @L4A*/         
*      ] Function code values    @L4A                                           
*  INTA_CREATE FIXED(8) CONSTANT(1),   /* Create an ACEE         @P6C*/         
*  INTA_DELETE FIXED(8) CONSTANT(2),   /* Delete the ACEE and USP if            
*                                         applicable             @P6C*/         
*  INTA_PURGE FIXED(8) CONSTANT(3),    /* Purge space related ACEE              
*                                         management resources   @09C*/         
*  INTA_REGSTR FIXED(8) CONSTANT(4),   /* Register certificate for              
*                                         the current userid     @09A*/         
*  INTA_DEREGS FIXED(8) CONSTANT(5),   /* Deregister certificate for            
*                                         the current userid     @09A*/         
*  INTA_QUERY  FIXED(8) CONSTANT(6),   /* Query a certificate for an            
*                                         associated user ID     @09A*/         
*  INTA_GENIDT FIXED(8) CONSTANT(7);   /* Generate an IDT from an               
*                                         ACEE                   @NPA*/         
*      ] Attribute flags                                                        
* DECLARE                                                                       
*   1 INTA_ATTRIBUTES_MAP BIT(32) BASED,                                        
*    4 INTA_ATTRIBUTES_BYTE0 BIT(8),                                            
*     5 INTA_MANAGED BIT(1),           /* ACEE should be managed                
*                                         (CREATE only)   @L4A*/                
*     5 INTA_USP     BIT(1),           /* Initialize a USP for the ACEE         
*                                         (CREATE only)   @L4A*/                
*     5 INTA_TASK_LVL BIT(1),          /* For CREATE,ON indicates chain         
*                                         ACEE to the TCB.OFF indicates         
*                                         return ACEE address via the           
*                                         Acee_Ptr field.  For DELETE,          
*                                         ON indicates get ACEE address         
*                                         from the TCB. OFF indicates           
*                                         ACEE address passed through           
*                                         Acee_Ptr        @L4A*/                
*     5 INTA_CLIENT   BIT(2),          /* ACEE client flags                     
*                                         (CREATE only)   @L4A*/                
*       7 INTA_UNAUTH_CLNT BIT(1),     /* Unauthenticated Client @L4A*/         
*       7 INTA_AUTH_CLNT BIT(1),       /* Authenticated Client @L4A*/           
*                                                                               
*     5 INTA_MSG_SUPP BIT(1),          /* ON to suppress RACF messages          
*                                         produced as a result of cre-          
*                                         ating an ACEE          @L4A*/         
*                                                                               
*     5 INTA_ENVR_RET BIT(1),          /* ON - return an ENVR object            
*                                     for the ACEE (CREATE only) @N4C*/         
*     5 INTA_NO_TIMEOUT BIT(1),        /* ON to create a no timeout             
*                                      managed ACEE (CREATE only)@L6A*/         
*    4 INTA_ATTRIBUTES_BYTE1 BIT(8),                                            
*     5 INTA_OUSP_RET   BIT(1),        /* ON to return an OUSP                  
*                                      (CREATE only)             @LDC*/         
*     5 INTA_X500_RET   BIT(1);        /* ON to return a X500                   
*                                      pair (QUERY only)         @LDA*/         
*                                                                               
*/********************************************************************/         
*/*                adminsub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  ADMN_LEN FIXED(31) CONSTANT(LENGTH(ADMN)), /* Constant ADMN length           
*                                                                @04A*/         
*/*                 Function code values                         @04A*/         
*  ADMN_ADD_USER  FIXED(8) CONSTANT(1), /* Add a user            @04A*/         
*  ADMN_DEL_USER  FIXED(8) CONSTANT(2), /* Delete a user         @04A*/         
*  ADMN_ALT_USER  FIXED(8) CONSTANT(3), /* Alter a user          @04A*/         
*  ADMN_LST_USER  FIXED(8) CONSTANT(4), /* List a user           @04A*/         
*  ADMN_RUN_COMD  FIXED(8) CONSTANT(5), /* Run a RACF command    @04A*/         
*  ADMN_ADD_GROUP FIXED(8) CONSTANT(6), /* Add a group           @07A*/         
*  ADMN_DEL_GROUP FIXED(8) CONSTANT(7), /* Delete a group        @07A*/         
*  ADMN_ALT_GROUP FIXED(8) CONSTANT(8), /* Alter a group         @07A*/         
*  ADMN_LST_GROUP FIXED(8) CONSTANT(9), /* List a group          @07A*/         
*  ADMN_CONNECT   FIXED(8) CONSTANT(10),/* Connect user to group @07A*/         
*  ADMN_REMOVE    FIXED(8) CONSTANT(11),/* Remove user from grp  @N4C*/         
*  ADMN_ADD_GENRES FIXED(8) CONSTANT(12),/* Add a resource       @08A*/         
*  ADMN_DEL_GENRES FIXED(8) CONSTANT(13),/* Delete a resource    @08A*/         
*  ADMN_ALT_GENRES FIXED(8) CONSTANT(14),/* Alter a resource     @08A*/         
*  ADMN_LST_GENRES FIXED(8) CONSTANT(15),/* List a resource      @08A*/         
*  ADMN_ADD_DS    FIXED(8) CONSTANT(16),/* Add a dataset         @08A*/         
*  ADMN_DEL_DS    FIXED(8) CONSTANT(17),/* Delete a dataset      @08A*/         
*  ADMN_ALT_DS    FIXED(8) CONSTANT(18),/* Alter a dataset       @08A*/         
*  ADMN_LST_DS    FIXED(8) CONSTANT(19),/* List a dataset        @08A*/         
*  ADMN_PERMIT    FIXED(8) CONSTANT(20),/* Permit a user or grp  @N4C*/         
*  ADMN_ALT_SETR  FIXED(8) CONSTANT(21),/* Alter SETROPTS info   @LBA*/         
*  ADMN_XTR_SETR  FIXED(8) CONSTANT(22),/* SETROPTS R_admin ext  @LBA*/         
*  ADMN_UNL_SETR  FIXED(8) CONSTANT(23),/* SETROPTS SMF Unload ext              
*                                                                @LBA*/         
*  ADMN_XTR_PWENV FIXED(8) CONSTANT(24),/* Xtr PKCS#7 Pw envelope@LVA*/         
*  ADMN_XTR_USER  FIXED(8) CONSTANT(25),/* Xtr User              @M4A*/         
*  ADMN_XTR_NEXT_USER    FIXED(8) CONSTANT(26),/* Xtr Next User  @N4C*/         
*  ADMN_XTR_GROUP        FIXED(8) CONSTANT(27),/* Xtr Group      @N4C*/         
*  ADMN_XTR_NEXT_GROUP   FIXED(8) CONSTANT(28),/* Xtr Next Group @N4C*/         
*  ADMN_XTR_CONNECT      FIXED(8) CONSTANT(29),/* Xtr Connect    @N4C*/         
*  ADMN_XTR_PPENV FIXED(8) CONSTANT(30),/* Xtr PKCS#7 Phrase env @N4C*/         
*  ADMN_XTR_RESOURCE      FIXED(8) CONSTANT(31), /* Extract General             
*                                               Resource Profile @N4C*/         
*  ADMN_XTR_NEXT_RESOURCE FIXED(8) CONSTANT(32), /* Extract Next                
*                                       General Resource Profile @N4C*/         
*  ADMN_XTR_RRSF  FIXED(8) CONSTANT(33),/* Xtr RRSF information  @N6A*/         
*  ADMN_XTR_DATASET       FIXED(8) CONSTANT(34), /* Xtr Dataset  @NJA*/         
*  ADMN_XTR_NEXT_DATASET  FIXED(8) CONSTANT(35), ] Xtr next DS   @NJA           
*                                                                               
*/*        ***** P L E A S E  N O T E *****                                     
*  When adding new function codes, update the following maximum                 
*  function code value, otherwise it will be flagged as invalid  @N4C*/         
*  ADMN_XTR_MAX_FUNCTION  FIXED(8) CONSTANT(35); /* Maximum function            
*                                                   code value   @NJC*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  Following is the mapping of the input buffer for each of        */         
*/*  the function codes defined.                                     */         
*/*                                                              @04A*/         
*/********************************************************************/         
* DECLARE                            /* Function code 5              */         
*  1 ADMN_RUNCOMD_MAP BASED,         /* Mapping for running a command           
*                                                                @04A*/         
*    5 ADMN_RUNCOMD_LEN FIXED(16),   /* Length of command string @04A*/         
*    5 ADMN_RUNCOMD_CMD CHAR(*);     /* Command string           @04A*/         
* DECLARE                            /* Function codes 1-4,10-11. Map*/         
*  1 ADMN_USRADM_MAP BASED,          /* for Add/Alter/Delete/List user,         
*                                       Connect/Remove, Xtr PwEnv@LVC*/         
*    5 ADMN_USRADM_USER,             /* User: For Delete user and Xtr           
*                                       Pw env, this is the only                
*                                       required field           @LVC*/         
*      7 ADMN_USRADM_USER_LEN FIXED(8), /* Length of User ID     @04A*/         
*      7 ADMN_USRADM_USER_ID CHAR(8),   /* User ID               @04A*/         
*    5 ADMN_USRADM_FLAGS CHAR(1),    /* Request flags            @NGC*/         
*      7 ADMN_USRADM_NORUN bit(1),  /* Do NOT run command        @NGA*/         
*      7 ADMN_USRADM_RETURN_CMD bit(1), /* Return gen'd command  @NGA*/         
*      7 ADMN_USRADM_ADD_QUOTES bit(1), /* Add quotes to quoted                 
*                                       fields automatically     @NIA*/         
*      7 * bit(5),                   /* Reserved                 @NIC*/         
*    5 ADMN_USRADM_ERROFF FIXED(16), /* Offset to segment/field in              
*                                       error                    @05A*/         
*    5 ADMN_USRADM_SEG_NUM FIXED(16),/* Number of segments to update            
*                                       or list                  @04A*/         
*    5 ADMN_USRADM_SEGSTRT CHAR(1);  /* First segment entry      @04A*/         
*/********************************************************************/         
*/* The segment data for all function codes requiring it is      @07C*/         
*/* mapped below.  Despite the .."USRADM".. naming of the        @07C*/         
*/* segment fields, they should be used for all function codes   @07C*/         
*/* requiring segment data to be specified.  The base RACF       @07C*/         
*/* segment is specified as "BASE    ".                          @07C*/         
*/*                                                                  */         
*/* Following are listed any special requirements for the        @07A*/         
*/* various function codes of IRRSEQ00:                          @07A*/         
*/*                                                                  */         
*/* - ADMN_LST_USER  - The field data will be ignored if         @07C*/         
*/*   ADMN_LST_GROUP   specified.  Set ADMN_USRADM_FLD_NUM to    @07C*/         
*/*                    0 to save space in the plist.  At a       @07C*/         
*/*                    minimum, the BASE segment must be         @07C*/         
*/*                    requested.  Specifying 0 segments on a    @07C*/         
*/*                    List request will result in a parameter       */         
*/*                    list error.                                   */         
*/* - ADMN_CONNECT   - Use the BASE segment in which to specify  @07A*/         
*/*   ADMN_REMOVE      your field data.  At a minimum, the       @07A*/         
*/*                    GROUP field must be provided.             @07A*/         
*/* - ADMN_ADD_GENRES- At a minimum, the PROFILE field must be   @LBA*/         
*/*   ADMN_DEL_GENRES  provided.                                 @LBA*/         
*/*   ADMN_ALT_GENRES                                            @LBA*/         
*/*   ADMN_LST_GENRES                                            @LBA*/         
*/*   ADMN_ADD_DS                                                @LBA*/         
*/*   ADMN_DEL_DS                                                @LBA*/         
*/*   ADMN_ALT_DS                                                @LBA*/         
*/*   ADMN_PERMIT                                                @LBA*/         
*/* - ADMN_ALT_SETR  - Use the BASE segment in which to specify  @LBA*/         
*/*                    your field data.                          @LBA*/         
*/*                                                                  */         
*/********************************************************************/         
* DECLARE                            /* Segment data             @07C*/         
*  1 ADMN_USRADM_SEGENTRY  BASED,    /* Mapping for Segment entry@04A*/         
*    5 ADMN_USRADM_SEG_NAME CHAR(8), /* Profile segment name     @04A*/         
*    5 ADMN_USRADM_SEG_FLAG CHAR(1), /* Flag byte for segment    @05A*/         
*    5 ADMN_USRADM_FLD_NUM FIXED(16) BDY(BYTE), /* Number of fields             
*                                       within segment.  Set to 0 for           
*                                       the List function        @04A*/         
*    5 ADMN_USRADM_FLDSTRT CHAR(1);  /* First field entry for segment           
*                                                                @04A*/         
* DECLARE                                                                       
*  1 ADMN_USRADM_FLDENTRY   BASED,   /* Mapping for Field entry  @04A*/         
*    5 ADMN_USRADM_FLD_NAME CHAR(8), /* Segment field name       @04A*/         
*    5 ADMN_USRADM_FLD_FLAG CHAR(1), /* Flag byte for field      @05A*/         
*    5 ADMN_USRADM_FLD_LEN  FIXED(16) BDY(BYTE), /* Fld data len @04A*/         
*    5 ADMN_USRADM_FLD_DATA CHAR(*); /* Field data               @04A*/         
*                                                                               
* DECLARE                            /* Function codes 6-9: Mapping  */         
*  1 ADMN_GRPADM_MAP BASED,          /* for Add/Alter/Delete/List group         
*                                                                @07A*/         
*    5 ADMN_GRPADM_GROUP,            /* User: For Delete, this is               
*                                       the only required field  @07A*/         
*      7 ADMN_GRPADM_GRP_LEN FIXED(8),  /* Length of Group ID    @07A*/         
*      7 ADMN_GRPADM_GRP_ID CHAR(8),    /* Group ID              @07A*/         
*    5 ADMN_GRPADM_FLAGS CHAR(1),    /* Request flags            @NGC*/         
*      7 ADMN_GRPADM_NORUN bit(1),   /* Do NOT run command       @NGA*/         
*      7 ADMN_GRPADM_RETURN_CMD bit(1),  /* Return gen'd command @NGA*/         
*      7 ADMN_GRPADM_ADD_QUOTES bit(1), /* Add quotes to quoted                 
*                                       fields automatically     @NIA*/         
*    5 ADMN_GRPADM_ERROFF FIXED(16), /* Offset to segment/field in              
*                                       error                    @07A*/         
*    5 ADMN_GRPADM_SEG_NUM FIXED(16),/* Number of segments to update            
*                                                                @07A*/         
*    5 ADMN_GRPADM_SEGSTRT CHAR(1);  /* First segment entry      @07A*/         
*                                                                               
* DECLARE                            /* Function codes 12-20:        */         
*  1 ADMN_RESADM_MAP BASED,          /* Mapping for add/alt/del/list            
*                                       resource, add/alt/del/list              
*                                       dataset, and permit      @08A*/         
*    5 ADMN_RESADM_CLASS,            /* Class: general class name or            
*                                       'DATASET'                @08A*/         
*      7 ADMN_RESADM_CLAS_LEN FIXED(8), /* Length of Class Name  @08A*/         
*      7 ADMN_RESADM_CLAS_NAM CHAR(8),  /* Class Name            @08A*/         
*    5 ADMN_RESADM_FLAGS CHAR(1),    /* Request flags            @NGC*/         
*      7 ADMN_RESADM_NORUN bit(1),   /* Do NOT run command       @NGA*/         
*      7 ADMN_RESADM_RETURN_CMD bit(1),  /* Return gen'd command @NGA*/         
*      7 ADMN_RESADM_ADD_QUOTES bit(1), /* Add quotes to quoted                 
*                                       fields automatically     @NIA*/         
*    5 ADMN_RESADM_ERROFF FIXED(16), /* Offset to segment/field in              
*                                       error                    @08A*/         
*    5 ADMN_RESADM_SEG_NUM FIXED(16),/* Number of segments to update            
*                                                                @08A*/         
*    5 ADMN_RESADM_SEGSTRT CHAR(1);  /* First segment entry      @08A*/         
*                                                                               
* DECLARE                            /* Function code 21         @LBA*/         
*  1 ADMN_SETRADM_MAP BASED,         /* Mapping for alter SETROPTS              
*                                       information              @LBA*/         
*    5 * CHAR(9),                    /* Reserved                 @NGC*/         
*    5 ADMN_SETRADM_FLAGS CHAR(1),   /* Request flags            @NGA*/         
*      7 ADMN_SETRADM_NORUN bit(1),  /* Do NOT run command       @NGA*/         
*      7 ADMN_SETRADM_RETURN_CMD bit(1), /* Return gen'd command @NGA*/         
*      7 ADMN_SETRADM_ADD_QUOTES bit(1), /* Add quotes to quoted                
*                                       fields automatically     @NIA*/         
*    5 ADMN_SETRADM_ERROFF FIXED(16), /* Offset to segment/field in             
*                                       error                    @LBA*/         
*    5 ADMN_SETRADM_SEG_NUM FIXED(16),/* Number of segments to update           
*                                                                @LBA*/         
*    5 ADMN_SETRADM_SEGSTRT CHAR(0); /* First segment entry      @LBA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  Following is the mapping of the output message buffer.          */         
*/*                                                              @04A*/         
*/********************************************************************/         
* DECLARE                                                                       
*  1 ADMN_OUTMSG_MAP BASED BDY(WORD), /* R_admin output mapping  @04A*/         
*    5 ADMN_OUT_NEXT PTR(31),         /* Addr of next block or 0 @04A*/         
*    5 ADMN_OUT_EYE CHAR(4),          /* "RMSG" or "RCMD"        @NGC*/         
*    5 ADMN_OUT_SPID FIXED(8),        /* Subpool ID of this block@04A*/         
*    5 ADMN_OUT_LEN FIXED(24),        /* Total block length      @04A*/         
*    5 ADMN_OUT_OFF OFFSET,           /* Offset to first byte after the         
*                                     last message. Offset value is             
*                                     relative to ADMN_OUTMSG_MAP@04A*/         
*    5 ADMN_OUT_STRT CHAR(1);         /* First message in block  @04A*/         
* DECLARE                                                                       
*  1 ADMN_OUT_ENTRY BASED,            /* Individual message entry@04A*/         
*    5 ADMN_OUT_MLEN FIXED(15),       /* Length of this message  @04A*/         
*    5 ADMN_OUT_MSTR CHAR(*);         /* Variable message string @04A*/         
*                                                                               
* DECLARE ADMN_OUT_RMSG CHAR(4) CONSTANT('RMSG'); /* eyecatcher in              
*                                                   ADMN_OUT_EYE for            
*                                                  output message@04A*/         
* DECLARE ADMN_OUT_RCMD CHAR(4) CONSTANT('RCMD'); /* eyecatcher in              
*                                                   ADMN_OUT_EYE @for           
*                                                   command image NGA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  Following is the mapping of the SETROPTS output buffer.         */         
*/*  Note that ADMN_UNL_ENTRY is only used to map the output of      */         
*/*  an ADMN_UNL_SETR request.  For an ADMN_XTR_SETR request, the    */         
*/*  output buffer is formatted like the input buffer.               */         
*/*                                                              @LBA*/         
*/********************************************************************/         
* DECLARE                                                                       
*  1 ADMN_XTRUNL_MAP BASED BDY(WORD), /* R_admin SETROPTS output @LBA*/         
*    5 ADMN_XTRUNL_EYE CHAR(4),       /* Eye catcher: "RXTR"                    
*                                     or "RUNL"                  @LBA*/         
*    5 ADMN_XTRUNL_OUTLEN FIXED(32),  /* Total length of output buffer          
*                                                                @LBA*/         
*    5 * CHAR(4),                     /* Reserved                @LBA*/         
*    5 ADMN_XTRUNL_NUM FIXED(16),     /* Number of segment entries for          
*                                     ADMN_XTR_SETR or number of record         
*                                     types for ADMN_UNL_SETR    @LBA*/         
*    5 ADMN_XTRUNL_ENTRY CHAR(0);     /* First segment or record entry          
*                                                                @LBA*/         
* DECLARE                                                                       
*  1 ADMN_UNL_ENTRY BASED,            /* Data mapping for                       
*                                        ADMN_UNL_SETR           @LBA*/         
*    5 ADMN_UNL_TYPE CHAR(8),         /* SMF Data Unload record type            
*                                                                @LBA*/         
*    5 ADMN_UNL_LEN FIXED(32),        /* Length of a record of this             
*                                        type                    @LBA*/         
*    5 ADMN_UNL_NUM FIXED(32),        /* Number of records of this              
*                                        type                    @LBA*/         
*    5 * CHAR(8),                     /* Reserved                @LBA*/         
*    5 ADMN_UNL_RECSTRT CHAR(0);      /* Start of first record of this          
*                                        type                    @LBA*/         
*                                                                               
* DECLARE ADMN_XTRUNL_RXTR CHAR(4) CONSTANT('RXTR');/* eyecatcher in            
*                                               ADMN_XTRUNL_EYE  @LBA*/         
* DECLARE ADMN_XTRUNL_RUNL CHAR(4) CONSTANT('RUNL');/* eyecatcher in            
*                                               ADMN_XTRUNL_EYE  @LBA*/         
* DECLARE ADMN_PROF_PXTR   CHAR(4) CONSTANT('PXTR');/* eyecatcher in            
*                                               ADMN_PROF_EYE    @M4A*/         
* ] Misc bit setting masks                                                      
* DCL ADMN_PROF_SETRPT  fixed(16) constant('1000000000000000'b); ] @M4A         
* DCL ADMN_PROF_SETRSV  fixed(16) constant('0100000000000000'b); ] @M4A         
* DCL ADMN_PROF_SETBOOL fixed(16) constant('0010000000000000'b); ] @M4A         
* DCL ADMN_PROF_SETRPTHDR  fixed(16) constant('0001000000000000'b);             
* DCL ADMN_PROF_SETOUTONLY fixed(32)                                            
*                constant('01000000000000000000000000000000'b);  ] @PGC         
*                                                                ] @M4A         
*                                                                               
* ] Header for SETROPTS extracted via r_admin.                     @MPA         
* DECLARE                                                    /* @MSA*/          
*  1 ADMN_XTRSETR_MAP BASED BDY(WORD),                       /* @MSA*/          
*    5 ADMN_XTRSETR_FLAG bit(32),         /* Flags.              @MSA*/         
*      7  ADMN_XTRSETR_DOFACILITY bit(1), /* perform facility    @MSA*/         
*                                         /* class authorization @MSA*/         
*                                         /* checking for        @MSA*/         
*                                         /* supervisor sttate   @MSA*/         
*                                         /* callers             @MSA*/         
*      7  ADMN_XTRSETR_DOCMDAUTH   bit(1),/* Check SETROPTS LIST @MSA*/         
*                                         /* command             @MSA*/         
*                                         /* authorization for   @MSA*/         
*                                         /* supervisor state    @MSA*/         
*                                         /* callers.            @MSA*/         
*    5 *              char(10) bdy(byte); /*  reserved           @MSA*/         
* DECLARE ADMN_PROF_V0 fixed(8) constant(0); ] version @M4A                     
* ] Header for profiles extracted via r_admin.  This covers                     
* ]   User, Group, Connect, General Resource, Dataset                           
* DECLARE                                                                       
*  1 ADMN_PROF_MAP BASED BDY(WORD),/* R_admin profile  output @M4A*/            
*    5 ADMN_PROF_EYE CHAR(4),      /* Eye catcher: "PXTR"     @M4A*/            
*    5 ADMN_PROF_OUTLEN FIXED(32), /* Total length of output buffer             
*                                                             @M4A*/            
*    5 ADMN_PROF_SPID fixed(8),    /* Subpool                 @M4A*/            
*    5 ADMN_PROF_VERSION fixed(8), /* Version of output blk   @M4A*/            
*    5 * char(2) bdy(byte),        /* Reserved                @M4A*/            
*    5 ADMN_PROF_CLSNAME char(8),  /* Class (USER, GROUP, CONNECT,              
*                                     DATASET or general resource               
*                                                             @NJC*/            
*    5 ADMN_PROF_NAMELEN    fixed(32) bdy(byte), /*           @M4A*/            
*    5 *                char(2) bdy(byte), /*  Reserved       @NJC*/            
*    5 ADMN_PROF_DSVOLUME char(6) bdy(byte),/* Dataset VolSer @NJA*/            
*    5 ADMN_PROF_DDDSC  FIXED(32) bdy(byte), ] DS # from UWKDCNT  @NJC          
*    5 ADMN_PROF_FLAG bit(32),     /* Flags.                  @M4A*/            
*      7  ADMN_PROF_SKIPAUTH bit(1), /* Bypass command processor  */            
*                                    /* authorization checking.   */            
*                                    /* Available for authorized  */            
*                                    /* callers only          @MNC*/            
*      7  ADMN_PROF_BASEONLY bit(1), /* Return base seg only  @M6A*/            
*      7  ADMN_PROF_DOAUTH   bit(1), /* Check FACILITY class profile            
*                                       For use by supervisor callers           
*                                       only                  @MNA*/            
*      7  ADMN_PROF_GENERIC  bit(1), /* Used for General Resource and           
*                                       DATASET requests only.                  
*                                      On Input:                                
*                                      -General resource profiles: @NJC         
*                                        For Extract: Return profile            
*                                          which covers input profile           
*                                          name when no exact match             
*                                          exists.                              
*                                        For Extract Next: Return next          
*                                          generic profile                      
*                                      -DATASET profiles:          @NJA         
*                                        For Extract: Return the                
*                                          generic profile that exactly         
*                                          matches the input name.              
*                                        For Extract Next: Return next          
*                                          profile after this generic           
*                                      On Output (for all):                     
*                                        Profile returned by RACF is            
*                                        generic                 @MNA*/         
*      7  ADMN_PROF_UPPERCASE  bit(1), /* Upper case the input profile          
*                                      name when appropriate. When the          
*                                      class is USER, GROUP, CONNECT,           
*                                      DATASET,                                 
*                                      or a general resource class              
*                                      which is defined as CASE(UPPER),         
*                                      R_Admin will upper case the              
*                                      input profile name prior to              
*                                      extracting it. This flag is              
*                                      ignored for extract-next                 
*                                      requests                  @NJC*/         
*      7  ADMN_PROF_NAMEONLY  bit(1), /* Return only profile name, but          
*                                        no segment/field data   @N8A*/         
*      7  ADMN_PROF_MATCHGN   bit(1), /* Return covering DATASET                
*                                        profile                 @NKA*/         
*      7  * bit(25),                 /*                       @NKC*/            
*    5 ADMN_PROF_NUMSEG fixed(32) bdy(byte), /* # segments    @M4A*/            
*    5 *  char(16) bdy(byte),      /*                         @M4A*/            
*    5 ADMN_PROF_PROFNAME char(0); /* Profile name            @M4A*/            
*                                                                               
* ] Format of a segment descriptor.  This is based off the address of           
* ]   ADMN_PROF_PROFNAME+ADMN_PROF_NAMELEN.                                     
* DECLARE                                                                       
*  1 ADMN_PROF_SEGDESC    BASED BDY(byte),/* Segment entry   @M4A*/             
*    5 ADMN_PROF_SEGNAME char(8) bdy(byte), /* Segment name   @M4A*/            
*    5 ADMN_PROF_SEGFLAGS bit(32) bdy(byte),  /* Flags        @M4A*/            
*    5 ADMN_PROF_NUMFIELDS fixed(32) bdy(byte),                                 
*                                 /* Number of fields in seg  @M4A*/            
*    5 * fixed(32) bdy(byte),     /* Reserved                 @M4A*/            
*    5 ADMN_PROF_FIELDOFFSET fixed(32) /* Offset to 1st field     */            
*                  bdy(byte),     /*  entry                   @M4A*/            
*    5 *  char(16) bdy(byte),     /*                          @M4A*/            
*    5 ADMN_PROF_NEXTSEG      char(0);  /* next segment or first  */            
*                                 /*   field entry            @M4A*/            
*                                                                               
*                                                                               
* ] Format of a Field descriptor.  This follows last ADMN_PROF_SEGDESC          
* DECLARE                                                                       
*  1 ADMN_PROF_FIELDDESC    BASED BDY(byte),   /* Field      @M4A*/             
*    5 ADMN_PROF_FIELDNAME char(8) bdy(byte),   /* Name       @M4A*/            
*    5 ADMN_PROF_FIELDTYPE bit(16) bdy(byte),   /* Field type:@M4A*/            
*      7 ADMN_PROF_REPEAT bit(1),       /* Repeating          @M4A*/            
*      7 ADMN_PROF_RESERVED bit(1),     /* Reserved           @M4A*/            
*      7 ADMN_PROF_BOOLEAN  bit(1),     /* Boolean            @M4A*/            
*      7 ADMN_PROF_RPTHDR   bit(1),     /* Repeat header      @M4A*/            
*      7 * bit(12),                     /* Reserved           @M4A*/            
*    5 * char(2) bdy(byte),             /* reserved           @M4A*/            
*    5 ADMN_PROF_FIELDFLAG bit(32),     /* Flags              @M4A*/            
*      7 ADMN_PROF_VALUE   bit(1),      /* Boolean value.     @M4A*/            
*      7 ADMN_PROF_OUTONLY bit(1),      /* Output only.       @M4A*/            
*      7 * bit(30),                     /* Reserved           @PGA*/            
*    5 ADMN_PROF_FIELDLEN fixed(32) bdy(byte), /* Data length @M4A*/            
*      7 ADMN_PROF_RPTNUM   fixed(32) bdy(byte), /* #fields   @M4A*/            
*    5 * fixed(32) bdy(byte),           /* Reserved           @M4A*/            
*    5 ADMN_PROF_DATA_OFFSET fixed(32) bdy(byte),/* Offset to                   
*                                                      value  @M4A*/            
*      7 ADMN_PROF_FIELDDIM   fixed(32) bdy(byte),/* # subflds                  
*                                         per repeating field @M4A*/            
*    5 *  char(16) bdy(byte),           /* reserved           @M4A*/            
*    5 ADMN_PROF_NEXTFIELD    char(0);  /* next field or start of */            
*                                       /*   data.            @M4A*/            
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  Following is the mapping of the output message buffer for       */         
*/*  ADMN_XTR_PWENV (Extract PKCS#7 encrypted password envelope).    */         
*/*                                                              @LVA*/         
*/********************************************************************/         
* DECLARE                                                                       
*  1 ADMN_XTRPW_MAP BASED BDY(WORD),  /* Xtr PW envelope output  @LVA*/         
*    5 ADMN_XTRPW_EYE CHAR(4),        /* Eye catcher: "RXPW"     @LVA*/         
*    5 ADMN_XTRPW_SPID FIXED(8),      /* Subpool ID of this block@LVA*/         
*    5 ADMN_XTRPW_OUTLEN FIXED(24),   /* Total block length      @LVA*/         
*    5 ADMN_XTRPW_ENV CHAR(*);        /* Encrypted password env. @LVA*/         
*                                                                               
* /* Possible eyecatchers in ADMN_OUT_EYE                            */         
* DECLARE ADMN_OUT_RXPW CHAR(4) CONSTANT('RXPW'); /* password        */         
* DECLARE ADMN_OUT_RXPP CHAR(4) CONSTANT('RXPP'); /* phrase      @MDA*/         
*                                                                               
*                                                                               
*/*******************************************************************/          
*/* The following is in support of ADMN_FUNC_XTRSF.             @N6A*/          
*/*******************************************************************/          
* DECLARE ADMN_OUT_RRSF CHAR(4) CONSTANT('RSFI'); ]]< Eyecatcher @N6A           
*/*******************************************************************/          
*/** ADMN_XTRSF_MAP is the data structure returned in                           
*    OUT_MESSAGE_STRINGS for function code ADMN_FUNC_XTRSF.                     
*    It consists mostly of data entered on the SET command.                     
*    ADMN_XTRSF_NUM_NODES is the number of nodes defined in the                 
*    ADMN_XTRSF_NODE_DATA arry which follows directly after                     
*    ADMN_XTRSF_MAP.                                                            
*                                                                               
*    All ADMN_XTRSF_xxx_OFFSET fields have values which indicate the            
*    ADMN_XTRSF_MAP to the data in the form of in the form of                   
*    offset from ADMN_OUT_ENTRY.                                                
* *******************************************************************/          
* DECLARE                                                                       
*  1 ADMN_XTRSF_MAP BASED BDY(WORD),                             ] @N6A         
*    5 ADMN_XTRSF_MAP_HEADER,         ]]< Top of header            @N6A         
*      7 ADMN_XTRSF_EYE CHAR(4),      ]]< Eye catcher: "RSFI"      @N6A         
*      7 ADMN_XTRSF_SPID FIXED(8),    ]]< Subpool ID of this block @N6A         
*      7 ADMN_XTRSF_OUTLEN FIXED(24), ]]< Total output buf length  @N6A         
*    ] Data set by the SET command.                                             
*    5 ADMN_XTRSF_FLAGS bit(32),        ]]< RRSF bits              @N6A         
*       7 ADMN_XTRSF_AUTODIRECT_ACTIVE bit(1),]]< On if ACD active @N6A         
*       7 ADMN_XTRSF_APD_ACTIVE bit(1), ]]< On if APD active       @N6A         
*       7 ADMN_XTRSF_PWSYNC_ACTIVE bit(1), ]]< On if PWSYNC active @N6A         
*       7 ADMN_XTRSF_ADAU_ACTIVE bit(1), ]]< On if ADAU active     @N6A         
*       7 ADMN_XTRSF_FULLRRSF bit(1),]]< On if FULLRRSFCOMM active @PIC         
*       7 ADMN_XTRSF_TRACE_IMAGE bit(1), ]]< Trace IMAGE active    @N6A         
*       7 ADMN_XTRSF_TRACE_APPC bit(1),  ]]<  Trace APPC active    @N6A         
*       7 ADMN_XTRSF_TRACE_SSL bit(1),  ]]<   Trace SSL active     @N6A         
*       7 ADMN_XTRSF_TRACE_RRSF bit(1), ]]<  Trace RRSF active     @N6A         
*       ]] If there were more nodes than we could fit in the output             
*       ]]   set the DATA_TRUNCATED bit.  There is no way to get to             
*       ]]   the data for those nodes.  Unlikely to happen.                     
*       7 ADMN_XTRSF_DATA_TRUNCATED bit(1), ] Data truncated       @N6A         
*       ]] If this bit is 0, the caller is not authorized to the                
*       ]]    data returned in ADMN_XTRSF_MAP, so it is not set.                
*       ]] However, if the caller is authorized to the the RRSF node            
*       ]]    information, it is returned, and ADMN_XTRSF_NUM_NODES             
*       ]]    accurately reflects the number of ADMN_XTRSF_NODE_LIST            
*       ]]    elements.                                                         
*       7 ADMN_XTRSF_SET_DATA_PRESENT bit(1),                                   
*       ]] If this bit is 0, the caller is not authorized to the                
*       ]]   RRSF node information and none is returned.                        
*       7 ADMN_XTRSF_NODE_DATA_PRESENT bit(1),                                  
*       ]] The following bits, if on, indicate that the RACF subsystem          
*       ]]    address space is running with the TRUSTED and PRIVILEGED          
*       ]]    attribute, respectively.                             @NAA         
*       7 ADMN_XTRSF_SUBSYS_TRUSTED    bit(1),                    ]@NAA         
*       7 ADMN_XTRSF_SUBSYS_PRIVILEGED bit(1),                    ]@NAA         
*    5 ADMN_XTRSF_SUBSYS_PREFIX char(8), ]]< Subsystem prefix      @N6A         
*    5 ADMN_XTRSF_LOCAL_NODE_INDEX fixed(32), ]]< Index of LOCAL   @N6A         
*    ]] SET AUTODIRECT info                                        @N6A         
*    5 ADMN_XTRSF_AUTODIRECT_FLAGS                                              
*                       char(length(ADMN_XTRSF_SET_USER_FLAGS)),] @N6A          
*    5 ADMN_XTRSF_AUTODIRECT_USERS                                              
*      char(length(ADMN_XTRSF_SET_USER_TABLE)),               ]   @N6A          
*    5 ADMN_XTRSF_APD_FLAGS char(length(ADMN_XTRSF_SET_USER_FLAGS)),            
*    5 ADMN_XTRSF_APD_USERS                                                     
*      char(length(ADMN_XTRSF_SET_USER_TABLE)),               ]   @N6A          
*    5 ADMN_XTRSF_PWSYNC_FLAGS char(length(ADMN_XTRSF_SET_USER_FLAGS)),         
*    5 ADMN_XTRSF_PWSYNC_USERS                                                  
*      char(length(ADMN_XTRSF_SET_USER_TABLE)),               ]   @N6A          
*    5 ADMN_XTRSF_ADAU_FLAGS char(length(ADMN_XTRSF_SET_USER_FLAGS)),           
*    5 ADMN_XTRSF_ADAU_USERS                                                    
*      char(length(ADMN_XTRSF_SET_USER_TABLE)),               ]   @N6A          
*    5 ADMN_XTRSF_NUM_NODES FIXED(32), ]]< num ADMN_XTRRSF_NODE_DATA            
*                                    ]]< blocks in ADMN_XTRSF_LIST @N6A         
*    5 ADMN_XTRSF_SUBSYS_NAME CHAR(4), ]]< RACF subsystem name     @NAA         
*    5 ADMN_XTRSF_SUBSYS_USER CHAR(8), ]]< RACF subsystem user ID  @NAA         
*    5 ADMN_XTRSF_EXPANSION CHAR(52),  ]]< Expansion space         @NAC         
*    5 ADMN_XTRSF_NODE_LIST CHAR(0);   ]]< Start ADMN_XTRSF_NODE_DATA           
*                                      ]]<  Array.                 @N6A         
*                                                                               
* /**                                                                           
*  ADMN_XTRSF_SET_USER_DATA                                                     
*   ADMN_XTRSF_AUTODIRECT, APD, PWSYNC and ADAU                                 
*   each consist of the following format.                                       
* */                                                                            
* DCL 1 ADMN_XTRSF_SET_USER_FLAGS char(1) based,              ]    @N6A         
*        5 ADMN_XTRSF_SET_NOTIFY bit(1),  ]]< Notify active        @N6A         
*        5 ADMN_XTRSF_SET_OUTPUT bit(1);  ]]< Output active        @N6A         
* DCL 1 ADMN_XTRSF_SET_USER_TABLE based,                                        
*      5 ADMN_XTRSF_SET_USER_INFO(4),                                           
*       7 ADMN_XTRSF_SET_NODE  char(8),    ]]< Node for output     @N6A         
*       7 ADMN_XTRSF_SET_USER   char(8),   ]]< ID for output       @N6A         
*       7 ADMN_XTRSF_SET_OUTPUT_LEVEL char(6), ]]< output level    @N6A         
*       7 ADMN_XTRSF_SET_NOTIFY_LEVEL char(6); ]]< notify level    @N6A         
*                                                                               
* /**                                                                           
*  ADMN_XTRSF_NODE_DATA is an array which maps data for a single                
*  RRSF node. This array starts at ADMN_ADMN_XTRSF_LIST.Its dimension           
*  is ADMN_XTRSF_NUM_NODES.  This information comes from parameters             
*  specified in the TARGET command and from the system itself.                  
*  All offset fields have values which indicate the offset from                 
*  start of ADMN_XTRSF_MAP to the data in the form of                           
*  ADMN_XTRSF_DATA.                                                             
* */                                                                            
* DECLARE                                                                       
*  1 ADMN_XTRSF_NODE_DATA(*) based,                               ]@N6A         
*    ] Key information, specified with TARGET command.                          
*    5  ADMN_XTRSF_NODE CHAR(8),     ]]< Node name                 @N6A         
*    5  ADMN_XTRSF_SYSNAME CHAR(8),  ]]< SYSNAME of MSN node       @N6A         
*    5  ADMN_XTRSF_PROTOCOL fixed(8),]]<0-none,1=appc,2=tcp,3=both @N7C         
*    ] Generic information which is derived during exeuction                    
*    /** Node connection state.                                                 
*     ! Meaning                        ! value !                                
*     ! ------------------------------ ! ----- !                                
*     ! ???  (initial) state           ! 0     !                                
*     ! Dormant error                  ! 1     !                                
*     ! Dormant Both                   ! 2     !                                
*     ! Defined                        ! 3     !                                
*     ! Dormant Remote                 ! 4     !                                
*     ! Dormant Local                  ! 8     !                                
*     ! Operative Error                ! 16    !                                
*     ! Operative Pending Verification ! 32    !                                
*     ! Operative Pending Connection   ! 64    !                                
*     ! Operative Active               ! 128   !                                
*    */                                                                         
*    5  ADMN_XTRSF_STATE  fixed(8),                               ]@N6A         
*    5  ADMN_XTRSF_RESERVE1 char(2),]]< reserved                                
*    ]] Date of last piece of work received                                     
*    5  ADMN_XTRSF_LAST_INBOUND_DATE char(8),                     ]@N6A         
*    ]] Time of last piece of work received                                     
*    5  ADMN_XTRSF_LAST_INBOUND_TIME char(8),                     ]@N6A         
*    ]] Date of last piece of work sent                                         
*    5  ADMN_XTRSF_LAST_OUTBOUND_DATE char(8),                    ]@N6A         
*    ]] Time of last piece of work sent                                         
*    5  ADMN_XTRSF_LAST_OUTBOUND_TIME char(8),                    ]@N6A         
*    ]] Partner operating system version (ECVTPSEQ)                             
*    5  ADMN_XTRSF_PARTNER_OS_VERSION fixed(32),                  ]@PJA         
*    ]] Numeric version of partner node database templates release              
*    5  ADMN_XTRSF_PARTNER_TEMPLATE_RELEASE fixed(32),            ]@N6A         
*    ]] Partner node database template service level                            
*    5  ADMN_XTRSF_PARTNER_TEMPLATE_APAR    fixed(32),            ]@N6A         
*    ]] Partner node dynamic parse level                                        
*    5  ADMN_XTRSF_PARTNER_PARSE_OFFSET    fixed(32),             ]@N6A         
*    ] The following are specified using the TARGET command.                    
*    5  ADMN_XTRSF_DESCR_OFFSET fixed(32), ]]< Node description    @N6A         
*    5  ADMN_XTRSF_PREFIX_OFFSET fixed(32), ]]< Wksp dataset prefix@N6A         
*    5  ADMN_XTRSF_MGMTCLAS_OFFSET fixed(32),]]<WKSP  SMS MGMTCLAS @N6A         
*    5  ADMN_XTRSF_STORCLAS_OFFSET fixed(32),]]< WKSP SMS STORCLAS @N6A         
*    5  ADMN_XTRSF_DATACLAS_OFFSET fixed(32),]]< WKSP SMS DATACLAS @N6A         
*    5  ADMN_XTRSF_VOLUME_OFFSET fixed(32),]]< WKSP volume non-sms @N6A         
*    5  ADMN_XTRSF_FILESIZE fixed(31), ]]< WKSP Filesize in records@N6A         
*    5  ADMN_XTRSF_WDSQUAL_OFFSET fixed(31),]]< WKSP file qualifier@N6A         
*    ] Flags.  Some specified on TARGET, some derived from RRSF use.            
*    5  ADMN_XTRSF_INDBITS bit(32), ]]< Binary indicator bits      @N6A         
*      7  ADMN_XTRSF_LOCAL bit(1), ]]< Local node or not           @N6A         
*      7  ADMN_XTRSF_MSN   bit(1), ]]< Part of MSN                 @N6A         
*      7  ADMN_XTRSF_MSN_MAIN bit(1), ]]< Main system in MSN       @N6A         
*      ] Indicator bits for workspace files.                                    
*      ]] If this field is FALSE, the other ADMN_XTRSF_INMSG_xxx fields         
*      ]]  should not be referenced because they are meaningless.               
*      7  ADMN_XTRSF_INMSG_EXISTS bit(1), ]]< INMSG file exists    @N6A         
*      ]] If this field is FALSE, the other ADMN_XTRSF_OUTMSG_xxx               
*      ]]  fields should not be referenced because they are meaningless         
*      7  ADMN_XTRSF_OUTMSG_EXISTS bit(1), ]]< OUTMSG file exists  @N6A         
*      ] During protocol conversion a node may briefly have 2      @N6A         
*      ]   workspace files.                                                     
*      ]] If this field is FALSE, the other ADMN_XTRSF_INMSG2_xxx               
*      ]]  fields should not be referenced because they are meaningless         
*      7  ADMN_XTRSF_INMSG2_EXISTS bit(1), ]]< 2nd INMSG exists    @N6A         
*      ]] If this field is FALSE, the other ADMN_XTRSF_OUTMSG2_xxx              
*      ]]  fields should not be referenced because they are meaningless         
*      7  ADMN_XTRSF_OUTMSG2_EXISTS bit(1), ]]< 2nd OUTMSG exists  @N6A         
*      ]] When connection is established to a remote system,                    
*      ]] the communication process briefly scans the OUTMSG files of           
*      ]] all systems in that MSN looking for work. When the scan is            
*      ]] complete for a particular non-MAIN OUTMSG file, this bit              
*      ]] is switched off.                                                      
*      7  ADMN_XTRSF_MAIN_READING_OUTMSG bit(1),                  ]@N7A         
*      7  ADMN_XTRSF_MAIN_READING_OUTMSG2 bit(1),                 ]@N7A         
*      ]] When the remote MAIN has disconnected and reconnected as              
*      ]] Non-MAIN, but the new main has not yet connected, the old             
*      ]] main is still treated as MAIN for certain operations for              
*      ]] of a real MAIN.                                                       
*      7  ADMN_XTRSF_MSN_PENDING_EX_MAIN bit(1),                  ]@N6A         
*      ]] If this RRSF node is a redefinition of an existing node with          
*      ]]  a different communications protocol (maybe due to a planned          
*      ]]  protocol conversion), this bit is on.                                
*      7  ADMN_XTRSF_IS_SECOND_PROTOCOL bit(1),                   ]@N6A         
*      ]] On if this node has just done a protocol conversion and is            
*      ]]  still reading the files from the old protocol.  If on,               
*      ]]  the ADMN_XTRSF_xMSG2_xxx fields have valid values.                   
*      7  ADMN_XTRSF_HAS_CONVERSION_FILE bit(1),                  ]@N6A         
*      ]] On if this remote system is not allowed to send work here             
*      ]]  any received work will be discarded.                                 
*      7  ADMN_XTRSF_DENY_INBOUND bit(1),                         ]@NDA         
*      ]] On if this remote system is denying inbound work from us.             
*      ]]   setting may not be valid if partner changes it without also         
*      ]]   resetting the connection.                                           
*      7  ADMN_XTRSF_PARTNER_DENYING_INBOUND bit(1),              ]@NDA         
* /*  Workspace file information */                                             
*    ]] Name of INMSG workspace dataset                                         
*    5  ADMN_XTRSF_INMSG_DSNAME_OFFSET fixed(32), ]]< INMSG DSNAME @N6A         
*    ]] Number of records in INMSG workspace dataset                            
*    5  ADMN_XTRSF_INMSG_RECORDS fixed(31),                       ]@N6A         
*    ]] Number of extents used by INMSG dataset                                 
*    5  ADMN_XTRSF_INMSG_EXTENTS fixed(31),                       ]@N6A         
*    ]] Name of OUTMSG workspace dataset                                        
*    5  ADMN_XTRSF_OUTMSG_DSNAME_OFFSET fixed(32),                ]@N6A         
*    ]] Number of records in OUTMSG workspace Dataset                           
*    5  ADMN_XTRSF_OUTMSG_RECORDS fixed(31),                      ]@N6A         
*    ]] Number of extents used by OUTMSG workspace dataset                      
*    5  ADMN_XTRSF_OUTMSG_EXTENTS fixed(31),                      ]@N6A         
*    ]] Name of INMSG2 workspace dataset                                        
*    5  ADMN_XTRSF_INMSG2_DSNAME_OFFSET fixed(32),                ]@N6A         
*    ]] Number of records in INMSG2 workspace dataset                           
*    5  ADMN_XTRSF_INMSG2_RECORDS fixed(31),                      ]@N6A         
*    ]] Number of extents used by INMSG2 dataset                                
*    5  ADMN_XTRSF_INMSG2_EXTENTS fixed(31),                      ]@N6A         
*    ]] Name of OUTMSG2 workspace dataset                                       
*    5  ADMN_XTRSF_OUTMSG2_DSNAME_OFFSET fixed(32),               ]@N6A         
*    ]] Number of records in OUTMSG2 workspace Dataset                          
*    5  ADMN_XTRSF_OUTMSG2_RECORDS fixed(31),                     ]@N6A         
*    ]] Number of extents used by OUTMSG2 workspace dataset                     
*    5  ADMN_XTRSF_OUTMSG2_EXTENTS fixed(31),                     ]@N6A         
*    ]] Number of items denied due to denyinbound setting                       
*    5  ADMN_XTRSF_DENIED_COUNT    fixed(32),                     ]@NDA         
*    /**                                                                        
*     TCP communication protocol information.  Meaningful only                  
*     ADMN_XTRSF_PROTOCOL=2.                                                    
*    */                                                                         
*    5  ADMN_XTRSF_TCP,                                                         
*      ]] TCP address as entered on TARGET command                              
*      7  ADMN_XTRSF_TCP_ADDRESS_OFFSET fixed(32),              ] @N6A          
*      ]] TCP Address as resolved by TCP/IP after connection                    
*      7  ADMN_XTRSF_TCP_IP_ADDRESS_OFFSET fixed(32),             ]@N6A         
*      ]] TCP listener port.  Meaningful only if ADMN_XTRSF_LOCAL=on            
*      7  ADMN_XTRSF_TCP_PORT_OFFSET fixed(32),                   ]@N6A         
*      ]] TLS rule in effect for this connection                                
*      7  ADMN_XTRSF_TCP_TLS_RULE_OFFSET fixed(32),               ]@N6A         
*      ]] TLS cipher used                                                       
*      7  ADMN_XTRSF_TCP_TLS_CIPHER_OFFSET fixed(32),             ]@N6A         
*      ]] TLS certificate user id in effect for this connection                 
*      7  ADMN_XTRSF_TCP_TLS_CRTU_OFFSET fixed(32),               ]@N6A         
*      7  ADMN_XTRSF_TCP_TLS_CLIENT_AUTH_OFFSET fixed(32),        ]@N6A         
*      ]] TCP listener status 0=inactive or n/a, 1=initializing,                
*      ]] 2=active TLS client auth in effect for this connection                
*      7  ADMN_XTRSF_TCP_LISTENER fixed(8),                       ]@N6A         
*    5  ADMN_XTRSF_APPC bdy(byte),                                ]@N6A         
*      ]] Appc listener status 0=inactive or n/a, 2=active.                     
*      7  ADMN_XTRSF_APPC_LISTENER fixed(8),                      ]@N6A         
*      7  ADMN_XTRSF_RESERVED3    char(2),                        ]@N6A         
*      ]] APPC LU Name                                                          
*      7  ADMN_XTRSF_LUNAME_OFFSET fixed(32) bdy(byte),          ] @N6A         
*      ]]< APPC mode name                                                       
*      7  ADMN_XTRSF_MODENAME_OFFSET fixed(32) bdy(byte),        ] @N6A         
*      ]]< APPC TPname                                                          
*      7  ADMN_XTRSF_TP_NAME_OFFSET fixed(32) bdy(byte),         ] @N6A         
*      ]]< APPC net name                                                        
*      7  ADMN_XTRSF_NETNAME_OFFSET fixed(32) bdy(byte),         ] @N6A         
*    5  ADMN_XTRSF_NODE_EXPANSION char(16);                       ]@N6A         
*                                                                               
* /**                                                                           
*   Data referenced by ADMN_XTRSF_xxx_OFFSET fields reside at the               
*   specified offset value from the start of ADMN_XTRSF_MAP.  The               
*   data is stored with its length as defined in ADMN_XTRSF_DATA                
* */                                                                            
* DECLARE                                                                       
*  1 ADMN_XTRSF_DATA BASED,         ]]< Entry for OFFSET field     @N6A         
*    5 ADMN_XTRSF_MLEN FIXED(32),   ]]< Length of the data         @N6A         
*    5 ADMN_XTRSF_MSTR CHAR(*);     ]]< Variable length data       @N6A         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                UMAP sub-declares                                 */         
*/********************************************************************/         
*DECLARE                                                                        
*  UMAP_LEN   FIXED(32)                                                         
*             CONSTANT(OFFSET(UMAP_ID_PROPAGATION)); /* Constant -              
*                                                    fixed length of            
*                                                    pre-ID Propagation         
*                                                    version of UMAP            
*                                                                @MYC*/         
*DECLARE                                                                        
*  UMAP_ID_PROPAGATION_LEN   FIXED(32)                                          
*             CONSTANT(OFFSET(UMAP_ID_PROPAGATION)+                             
*                      LENGTH(UMAP_ID_PROPAGATION)); /* Constant -              
*                                                    fixed length of            
*                                                    ID Propagation             
*                                                    version of UMAP            
*                                                                @MYA*/         
*DECLARE                                                                        
* UMAP_TOTAL_LEN   FIXED(32) CONSTANT(LENGTH(UMAP)); /* Constant -              
*                                                       fixed length            
*                                                       of UMAP  @MYA*/         
*                                                                               
*declare                                                                        
* 1 UMAP_CERTIFICATE based(UMAP_CERTIFICATE@),        ]           @L7A          
*                            ] Digital certificat mapping         @L7A          
*  5 UMAP_DIGCERT_LEN fixed, ] Length of digital certificate      @L7A          
*  5 UMAP_DIGCERT char(*);   ] Digital certificate                @L7A          
*                                                                               
*declare                                                                        
* 1 UMAP_USERID based(UMAP_USERID@),        ] RACF userid mapping @L7A          
*  5 UMAP_RACFID_LEN fixed(8), ] Length of RACF userid            @L7A          
*  5 UMAP_RACFID char(*);    ] RACF userid                        @L7A          
*                                                                               
*declare                     ]                                    @L7A          
* 1 UMAP_APPL_USERID based(UMAP_APPL_USERID@),] Application       @L7A          
*                            ] ID mapping                         @L7A          
*  5 UMAP_APPLID_LEN fixed(16), ] Length of Application ID        @L7A          
*                            ] This is the last parameter         @L7A          
*  5 UMAP_APPLID char(*);    ] Application ID                     @L7A          
*                                                                               
*DECLARE                                                                        
* 1 UMAP_DISTINGUISHED_NAME_DS                                                  
*       BASED(UMAP_DISTINGUISHED_NAME@), /* Distinguished Name                  
*                                           mapping              @MYA*/         
*  5 UMAP_DISTINGUISHED_NAME_LEN  FIXED(16), /* Length of the                   
*                                               Distinguished Name              
*                                               string           @MYA*/         
*  5 UMAP_DISTINGUISHED_NAME      CHAR(246); /* The                             
*                                               Distinguished Name              
*                                               string           @MYA*/         
*DECLARE                                                                        
* 1 UMAP_REGISTRY_NAME_DS                                                       
*       BASED(UMAP_REGISTRY_NAME@),      /* Registry/Realm Name                 
*                                           mapping              @MYA*/         
*  5 UMAP_REGISTRY_NAME_LEN       FIXED(16), /* Length of the                   
*                                               Registry/Realm Name             
*                                               string           @MYA*/         
*  5 UMAP_REGISTRY_NAME           CHAR(255); /* The                             
*                                               Registry/Realm Name             
*                                               string           @MYA*/         
*                                                                               
* ] function codes                                                @L7A          
* declare                    ]                                    @L7A          
*  UMAP_R_TO_L  constant(1) fixed(16), ] Return Lotus Notes ID    @L7A          
*                            ] for this RACF ID                   @L7A          
*  UMAP_L_TO_R  constant(2) fixed(16), ] Return RACF ID for this  @L7A          
*                            ] Lotus Notes ID                     @L7A          
*  UMAP_R_TO_N  constant(3) fixed(16), ] Return NDS ID for this   @L7A          
*                            ] RACF ID                            @L7A          
*  UMAP_N_TO_R  constant(4) fixed(16), ] Return RACF ID for this  @LEC          
*                            ] NDS ID                             @L7A          
*  UMAP_R_TO_K  constant(5) fixed(16), ] Return Kerb principal    @LEA          
*                            ] for this RACF ID                   @LEA          
*  UMAP_K_TO_R  constant(6) fixed(16), ] Return RACF ID for this  @LEA          
*                            ] Kerb principal                     @LEA          
*  UMAP_DID_TO_R  FIXED(16) CONSTANT(8), /* Return the RACF ID that             
*                                        is mapped by this combination          
*                                        of Distinguished Name and              
*                                        Registry/Realm Name     @NHC*/         
*  UMAP_R_TO_E  constant(9) fixed(16), ] Return e-mail address    @NHA          
*                            ] for this RACF ID                   @NHA          
*  UMAP_E_TO_R  constant(10) fixed(16);] Return RACF ID for this  @NHA          
*                            ] e-mail address                     @NHA          
*/********************************************************************/         
*/*                CDDL sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  CDDL_LEN FIXED(31) CONSTANT(LENGTH(CDDL)); /* Constant - length of           
*                                    CDDL                        @L8A*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*   Attributes word mapping (pointed to by CDDL_ATTRIBUTES@)   @D2A*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*/* This structure contains attribute flags that are applicable to   */         
*/* multiple function codes. Do not reuse any of these values in the */         
*/* applicable function-specific mappings below                  @MRC*/         
* Declare                                                     /* @MFC*/         
*   1 CDDL_ATTRIBUTES_MAP Bit(32) Based,                                        
* %If Translate(IBM_CBGENC) = 'YES' %Then                     /* @NMA*/         
* %Do;                                                        /* @NMA*/         
*    2 CDDL_ATTR_MAP_UNION UNION,                             /* @NMA*/         
* %End;                                                       /* @NMA*/         
*    3 CDDL_ATTRIBUTES_MAP_1 Bit(32),                         /* @NMA*/         
*     5 *                 Bit(2),      /*    reserved            @MPA*/         
*     5 CDDL_ATT_SKIPAUTH Bit(1)       /*    Valid for DataGetFirst,            
*                                            DataGetNext, CheckStatus           
*                                            and GetUpdateCode                  
*                                            functions                          
*                                       OFF: Indicate RACF                      
*                                            authorization check need           
*                                            to be performed                    
*                                       ON: Indicate RACF authorization         
*                                           will be bypassed for                
*                                           supervisor state or system          
*                                           key caller when request is          
*                                           for a RACF key ring (not            
*                                           applicable to an ICSF               
*                                           token)               @MRC*/         
* %If Translate(IBM_CBGENC) ^= 'YES' %Then                    /* @NMA*/         
* %Do;                                                        /* @NMA*/         
*   %Cddl_Lvl = '1';                                          /* @NMA*/         
*   %Cddl_Def = 'Defined(CDDL_ATTRIBUTES_MAP)';               /* @NMA*/         
*   %Cddl_Term = ';';                                         /* @NMA*/         
*   %Cddl_Dcl = 'Declare';                                    /* @NMA*/         
*     ;                                                                         
* %End;                                                       /* @NMA*/         
* %Else %Do;                                                  /* @NMA*/         
*   %Cddl_Lvl = '3';                                          /* @NMA*/         
*   %Cddl_Def = 'Bit(32)';                                    /* @NMA*/         
*   %Cddl_Term = ',';                                         /* @NMA*/         
*   %Cddl_Dcl = '';                                           /* @NMA*/         
*     ,                                                                         
* %End;                                                       /* @NMA*/         
* Cddl_Dcl                                                                      
*   Cddl_Lvl CDDL_ATTR_MAP_DATAGET Cddl_Def,                                    
*     5 CDDL_ATT_ALL_KEYTYPES Bit(1)   /*    Valid only for                     
*                                            DataGetFirst and                   
*                                            DataGetNext                        
*                                     - OFF- private key type returned          
*                                            will be CDDL_ICSF (for             
*                                            ICSF or PCICC) or                  
*                                            CDDL_PKCS1 (for all                
*                                            others)                            
*                                     - ON - private key type returned          
*                                            will be CDDL_ICSF,                 
*                                            CDDL_PKCS1,                        
*                                            CDDL_PCICC,                        
*                                            CDDL_DSA,                          
*                                            CDDL_DH, CDDL_ECC,                 
*                                            CDDL_ECC_ICSF,                     
*                                            CDDL_RSA_TKDS,                     
*                                            CDDL_ECC_TKDS,                     
*                                            CDDL_DSA_TKDS       @N3C*/         
*     Cddl_Term                                                                 
* Cddl_Dcl                                                                      
*   Cddl_Lvl CDDL_ATTR_MAP_NEWRING Cddl_Def,                                    
*     5 CDDL_ATT_REUSE_RING Bit(1)   /* Valid for function NewRing              
*                                       OFF: Indicates a new key ring           
*                                            is to be created (don't            
*                                            reuse existing ring)               
*                                       ON: Indicates that if ring              
*                                           exists, all certs are               
*                                           removed.             @MFA*/         
*     Cddl_Term                                                                 
*                                                                               
* Cddl_Dcl                                                                      
*   Cddl_Lvl CDDL_ATTR_MAP_DATAPUT Cddl_Def,                                    
*     5 CDDL_ATT_TRUST      Bit(1),  /* Valid for DataPut                       
*                                       and DataAlter function                  
*                                       OFF: Indicate RACF will                 
*                                            determine status of                
*                                            certificate.                       
*                                       ON: Indicates that the status           
*                                           of the added certificate            
*                                           should be set to TRUST              
*                                                                @N9C*/         
*     5 CDDL_ATT_HIGHTRUST  Bit(1),  /* Valid for DataPut                       
*                                       and DataAlter function                  
*                                       OFF: Indicate RACF will                 
*                                            determine status of                
*                                            certificate.                       
*                                       ON: Indicates that the status           
*                                           of the added certificate            
*                                           should be set to HIGHTRUST          
*                                                                @N9C*/         
*     5 CDDL_ATT_NOTRUST    Bit(1)   /* Valid for DataPut                       
*                                       and DataAlter function                  
*                                       OFF: Indicate RACF will                 
*                                            determine status of                
*                                            certificate.                       
*                                       ON: Indicates that the status           
*                                           of the added certificate            
*                                           should be set to HIGHTRUST          
*                                                                @N9A*/         
*     Cddl_Term                                                                 
*                                                                               
* Cddl_Dcl                                                                      
*   Cddl_Lvl CDDL_ATTR_MAP_DATAREMOVE Cddl_Def,                                 
*     5 CDDL_ATT_DEL_CERT_TOO Bit(1), /* Valid for DataRemove function          
*                                       OFF: Indicates the certificate          
*                                            is to be removed from the          
*                                            key ring only                      
*                                       ON: Indicates the certificate           
*                                           is to be deleted from RACF          
*                                           in sddition to being                
*                                           removed from the keyring            
*                                           as long as it is not                
*                                           connected to any other key          
*                                           rings                @N9C*/         
*     5 CDDL_ATT_DEL_CERT_ALLRINGS Bit(1), /* Valid for DataRemove              
*                                       OFF: Indicates the certificate          
*                                            is not to be deleted from          
*                                            RACF if it is connected            
*                                            to other key rings                 
*                                       ON: Indicates the certificate           
*                                           is to be deleted from RACF          
*                                           even if it is connected             
*                                           to other key rings   @N9A*/         
*     5 CDDL_ATT_DEL_CERT_FORCE Bit(1)  /* Valid for DataRemove                 
*                                       OFF: Indicates the certificate          
*                                            is not to be deleted from          
*                                            RACF if has been used to           
*                                            generate a request                 
*                                       ON: Indicates the certificate           
*                                           is to be deleted from RACF          
*                                           even if it has been used to         
*                                           generate a request   @N9A*/         
*     Cddl_Term                                                                 
*                                                                               
* Cddl_Dcl                                                                      
*   Cddl_Lvl CDDL_ATTR_MAP_INCSERIALNUM Cddl_Def,                               
*     5 CDDL_ATT_SET_MIN_SERIAL Bit(1)  /* Valid for IncSerialNum               
*                                          function.                            
*                                       OFF: Indicate Serial Number is          
*                                            to be incremented by one.          
*                                       ON: Indicate the Serial number          
*                                           will be incremented to the          
*                                           input serial number.                
*                                                                @MVA*/         
*     ;                                                                         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*                 Function code constants                          */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
* DECLARE                                                                       
*                                                                               
*  CDDL_DATA_GET_FIRST FIXED(8) CONSTANT(1), /* DataGetFirst - locate           
*                                    and return the first                       
*                                    certificate in the ring                    
*                                    matching the specified criteria */         
*  CDDL_DATA_GET_NEXT  FIXED(8) CONSTANT(2), /* DataGetNext -                   
*                                    locate and return the next                 
*                                    certificate in the ring                    
*                                    matching the same criteria                 
*                                    specified in the previous                  
*                                    DataGetFirst/DataGetNext                   
*                                    call                            */         
*  CDDL_DATA_ABORT     FIXED(8) CONSTANT(3), /* DataAbortQuery -                
*                                    free resources from previous               
*                                    DataGetFirst or DataGetNext                
*                                    call                            */         
*  CDDL_CHECK_STATUS   FIXED(8) CONSTANT(4), /* CheckStatus - return            
*                                    the TRUST/NOTRUST status for a             
*                                    given certificate           @LCC*/         
*  CDDL_GET_UPDATE_CODE FIXED(8) CONSTANT(5), /* GetUpdateCode -                
*                                    returns the sequence number for            
*                                    for a ring                  @LFC*/         
*  CDDL_INC_SER_NUM     FIXED(8) CONSTANT(6), /* IncSerialNum -                 
*                                    Increments the Serial Number for           
*                                    a Digital Certificate       @MFC*/         
*  CDDL_NEW_RING        Fixed(8) Constant(7), /* Create a new key ring          
*                                    or remove all certificates from            
*                                    an existing key ring        @MFA*/         
*  CDDL_DATA_PUT        Fixed(8) Constant(8), /* Add a certificate to           
*                                    RACF and connect it to a key               
*                                    ring                        @MFA*/         
*  CDDL_DATA_REMOVE     Fixed(8) Constant(9), /* Remove a cert from a           
*                                    key ring and optionally delete             
*                                    it from RACF                @MFA*/         
*  CDDL_DEL_RING        Fixed(8) Constant(10), /* Delete a key ring             
*                                                                @PDA*/         
*  CDDL_DATA_REFRESH    Fixed(8) Constant(11), /* Refresh the DIGTCERT          
*                                    class.                      @N9C*/         
*  CDDL_DATA_ALTER      Fixed(8) Constant(12), /* Change the status             
*                                    and/or the label of a                      
*                                    certificate.                @NBC*/         
*  CDDL_GET_RING_INFO   Fixed(8) Constant(13); /* Return key ring               
*                                    information.                @NBA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* Function Specific Parameter Lists                                */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
* DECLARE                         /* Function code CDDL_DATA_ABORT   */         
*  1 CDDL_ABORT BASED,            /* Parameter list for                         
*                                    DataAbortQuery                  */         
*    5 CDDL_PREV_HANDLE PTR(31);  /* Address of an input/output area            
*                                    from previous DataGetFirst or              
*                                    DataGetNext call            @L8A*/         
* DECLARE                         /* Function codes                             
*                                    CDDL_DATA_GET_FIRST and                    
*                                    CDDL_DATA_GET_NEXT              */         
*  1 CDDL_GET_CERT BASED,         /* Parameter list for DataGetFirst            
*                                    and DataGetNext                 */         
*    5 CDDL_RES_HANDLE PTR(31),   /* Address of input/output area               
*                                    mapped by CDDL_HANDLE_MAP       */         
*    5 CDDL_CERT_USAGE CHAR(4),   /* 4 byte output area containing              
*                                    certificate usage flags                    
*                                    x'00000000' - Usage is SITE                
*                                    x'00000002' - Usage is CERTAUTH            
*                                    x'00000008' - Usage is PERSONAL            
*                                    x'FFFFFFF5' - reserved bits must           
*                                                 be set to zero @L8A*/         
*    5 CDDL_CERT_DEFAULT FIXED(32), /* Output default indicator.                
*                                    Zero value indicates not                   
*                                    default certificate for ring,              
*                                    non-zero indicates this is                 
*                                    the default certificate.        */         
*    5 CDDL_CERT_LEN    FIXED(32), /* On input, contains the length             
*                                    of the certificate area pointed            
*                                    to by CDDL_CERT_PTR. On output,            
*                                    contains the actual size of the            
*                                    certificate returned or 0 if no            
*                                    certificate returned.           */         
*    5 CDDL_CERT_PTR PTR(31),     /* Input value specifying                     
*                                    address of output certificate              
*                                    data area                       */         
*    5 CDDL_PK_LEN FIXED(32),     /* On input, contains size of                 
*                                    private key area pointed to by             
*                                    CDDL_PK_PTR.  On output                    
*                                    contains the length of the                 
*                                    private key returned at                    
*                                    address CDDL_PK_PTR or 0 if no             
*                                    private key was returned        */         
*    5 CDDL_PK_PTR PTR(31),       /* Input value specifying address             
*                                    of private key output data                 
*                                    area                            */         
*    5 CDDL_PK_TYPE FIXED(32),    /* Output value indicating                    
*                                    type of private key. See                   
*                                    constants below.                */         
*    5 CDDL_PK_BITSIZE FIXED(32), /* Output value indicating the                
*                                    size of the private key                    
*                                    modulus in bits                 */         
*    5 CDDL_LABEL_LEN FIXED(32),  /* On input, contains the length of           
*                                    the field pointed to by                    
*                                    CDDL_LABEL_PTR, and must be at             
*                                    least 32.  On output, contains             
*                                    the length of the label returned           
*                                    at the address in                          
*                                    CDDL_LABEL_PTR, and will be 32             
*                                    or less.                        */         
*    5 CDDL_LABEL_PTR PTR(31),    /* Input value specifying the                 
*                                    address of the output area                 
*                                    to be used for the label name   */         
*    5 CDDL_RACF_USERID CHAR(9),  /* Input value containing a                   
*                                    1 byte length followed by the              
*                                    certificate owning userid. The             
*                                    combination of the output                  
*                                    label and this field uniquely              
*                                    identify a certificate          */         
*    5 *            CHAR(3),      /* Reserved                        */         
*    5 CDDL_SDN_LEN FIXED(32),    /* On input, contains the length of           
*                                    the output buffer pointed to by            
*                                    CDDL_SDN_PTR.  On output, contains         
*                                    the length of the BER encoded              
*                                    Subject's Distinguished Name               
*                                    returned in CDDL_SDN_LEN.       */         
*    5 CDDL_SDN_PTR Ptr(31),      /* Input value specifying the                 
*                                    address of the output area to be           
*                                    used for the Subjects's                    
*                                    Distinguished Name.             */         
*    5 CDDL_RECID_LEN FIXED(32),  /* Output value containing the                
*                                    length of the record ID                    
*                                    returned in area pointed to by             
*                                    CDDL_RECID_PTR, or 0 if no                 
*                                    record returned.                */         
*    5 CDDL_RECID_PTR PTR(31),    /* Input value specifying the                 
*                                    address of a 246 byte area to              
*                                    contain output record ID data              
*                                                                @N9C*/         
*    5 CDDL_STATUS CHAR(4);       /* Certificate status                         
*                                    x'80000000' - TRUST                        
*                                    x'40000000' - HIGHTRUST                    
*                                    x'20000000' - NOTRUST                      
*                                    x'00000000' - ANY (input only)             
*                                                                @N9A*/         
* DECLARE                         /* Function codes for CheckStatus  */         
*  1 CDDL_CRT_STATUS BASED,   /* Parameter list for CheckStatus  @LAA*/         
*    5 CDDL_CRT_LEN FIXED(32), /* Address of an input/output area               
*                                 On input, contains the length of the          
*                                 certificate area pointed to by                
*                                 CDDL_CRT_PTR.                  @LAA*/         
*    5 CDDL_CRT_PTR   PTR(31); /* Input value specifying address of             
*                              output certificate data area      @LAA*/         
* DECLARE                                                                       
*  1 CDDL_GET_UPDATE   BASED,    /* Parm list for GetUpdateCode  @LCA*/         
*    5 CDDL_RING_SEQN FIXED(32); /* Ring sequence number         @LCA*/         
*                                                                               
* DECLARE                                                                       
*  1 CDDL_ISN   BASED,            /* Parm List for IncSerialNum  @LFA*/         
*    5 CDDL_ISN_CLEN   FIXED(32), /* Length of DER Encoded input                
*                                    Digital Certificate         @LFA*/         
*    5 CDDL_ISN_CPTR   PTR(31),   /* Address of DER Encoded input               
*                                    Digital Certificate         @LFA*/         
*    5 CDDL_ISN_SERNUM CHAR(8);   /* Output - Incremented Serial Number         
*                                    of Digital Certificate      @LFA*/         
*                                                                               
* Declare                                                                       
*  1 CDDL_PUT_CERT     Based,     /* FSPL for DataPut function   @MFA*/         
*    5 CDDL_PCERT_USAGE Char(4),  /* 4 byte input area containing               
*                                    certificate usage flags                    
*                                    x'00000000' - Usage is SITE                
*                                    x'00000002' - Usage is CERTAUTH            
*                                    x'00000008' - Usage is PERSONAL            
*                                    x'80000000' - Usage is defaulted           
*                                                  to the usage of the          
*                                                  cert                         
*                                    x'7FFFFFF5' - reserved bits must           
*                                                  be set to 0   @MFA*/         
*    5 CDDL_PCERT_DEFAULT Fixed(32),/* Input default cert indicator.            
*                                    Non-zero value indicates input             
*                                    certificate is to made the default         
*                                    cert for the ring, zero indicates          
*                                    to not set the certificate as the          
*                                    default                     @MFA*/         
*    5 CDDL_PCERT_LEN Fixed(32),  /* Input value containing the length          
*                                    of the certificate pointed to by           
*                                    CDDL_PCERT_PTR.             @MFA*/         
*    5 CDDL_PCERT_PTR Ptr(31),    /* Input value specifying address of          
*                                    input certificate data area @MFA*/         
*    5 CDDL_PKEY_LEN  Fixed(32),  /* Input value containing the size of         
*                                    the private key pointed to by the          
*                                    CDDL_PKEY_PTR. A value of zero             
*                                    indicates a private key is not             
*                                    being added.                @MFA*/         
*    5 CDDL_PKEY_PTR  Ptr(31),    /* Input value specifying address of          
*                                    private key, ignored if                    
*                                    CDDL_PKEY_LEN value is zero @MFA*/         
*    5 CDDL_PLABEL_LEN Fixed(31), /* On input, it contains the length           
*                                    of the label to be assigned to             
*                                    the added certificate. On output,          
*                                    it contains the length of the              
*                                    label of the existing certificate          
*                                    if the input certificate is                
*                                    already installed in RACF.  @MFA*/         
*    5 CDDL_PLABEL_PTR Ptr(31),   /* On input, it contains the address          
*                                    of the label area. On output, it           
*                                    contains the label of the existing         
*                                    certificate if the input                   
*                                    certificate is already installed           
*                                    in RACF. The label area must be            
*                                    32 bytes.                   @MFA*/         
*    5 CDDL_PCERT_USERID Char(9), /* On input, it indicates the owner           
*                                    of the certificate, in the format          
*                                    of a 1 byte length followed by             
*                                    the user ID. On output it contains         
*                                    the owner of the existing                  
*                                    certificate if the input                   
*                                    certificate is already installed           
*                                    in RACF. The 1 byte length must            
*                                    be 8 and the user ID must be               
*                                    left-justified and padded with             
*                                    blanks.                     @MFA*/         
*    5 *                 Char(3); /* Reserved space              @MFA*/         
*                                                                               
* Declare                                                                       
*  1 CDDL_REMOVE_CERT Based,      /* FSPL for DataRemove function@MFA*/         
*    5 CDDL_RLABEL_LEN Fixed(32), /* A 4 byte input value contains the          
*                                    length of the label of the                 
*                                    certificate to be removed pointed          
*                                    to by CDDL_RLABEL_PTR       @MFA*/         
*    5 CDDL_RLABEL_PTR Ptr(31),   /* An input value contains the                
*                                    address of the label  of the               
*                                    certificate to be removed   @MFA*/         
*    5 CDDL_RCERT_USERID Char(9), /* A 9 byte input value indicates the         
*                                    owner of the certificate to be             
*                                    removed, in the format of a 1 byte         
*                                    length followed by the user ID.            
*                                    The 1 byte length must be 8 and            
*                                    the user ID must be left-justified         
*                                    and padded with blanks.     @MFA*/         
*    5 *                 Char(3); /* Reserved space              @MFA*/         
*                                                                               
* Declare                                                                       
*  1 CDDL_ALTER_CERT   Based,     /* FSPL for DataAlter function @N9A*/         
*    5 CDDL_ALABEL_LEN Fixed(32), /* A 4 byte value containing the              
*                                    length of the input certificate            
*                                    label.                      @N9A*/         
*    5 CDDL_ALABEL_PTR Ptr(31),   /* A value containing the address             
*                                    of the input certificate                   
*                                    label.                      @N9A*/         
*    5 CDDL_ANEW_LABEL_LEN Fixed(32),/* A 4 byte value containing the           
*                                    length of the new label which              
*                                    will be assigned to the                    
*                                    certificate. A zero indicates              
*                                    that the change is not on the              
*                                    label.                      @N9A*/         
*    5 CDDL_ANEW_LABEL_PTR Ptr(31),/* A value containing the address            
*                                    of the new certificate label.              
*                                    This field is ignored if                   
*                                    CDDL_ANEW_LABEL_LEN is zero.               
*                                                                @N9A*/         
*    5 CDDL_ACERT_USERID Char(9), /* A 9 byte input value indicating            
*                                    the owner of the certificate, in           
*                                    the format of a 1 byte length              
*                                    followed by the user ID.  The 1            
*                                    byte length must be 8 and the user         
*                                    ID must be left-justified and              
*                                    padded with blanks. For CERTAUTH           
*                                    certificates, this parameter               
*                                    should be set to either 'irrcerta'         
*                                    or '*AUTH*'. For SITE                      
*                                    certificates, this parameter               
*                                    should be set to either 'irrsitec'         
*                                    or '*SITE*'. If the length is              
*                                    zero, the caller's ID is used.             
*                                                                @N9A*/         
*    5 *                 Char(3); /* Reserved space              @N9A*/         
*                                                                               
* Declare                                                                       
*  1 CDDL_GET_RING     Based,     /* FSPL for GetRingInfo        @NBA*/         
*    5 CDDL_RING_SRCH_TYPE Fixed(32),/* A 4 byte input value which              
*                                    identifies more rings to be                
*                                    returned  when both ring owner             
*                                    and ring name are specified                
*                                    x'00000000' - Return just the              
*                                                  ring with the                
*                                                  specified ring               
*                                                  owner and ring               
*                                                  name                         
*                                    x'00000001' - Return all rings             
*                                                  after the ring               
*                                                  specified by ring            
*                                                  owner and ring name          
*                                    x'00000002' - Return all rings             
*                                                  with the same owner          
*                                                  after the ring               
*                                                  specified by ring            
*                                                  owner and ring name          
*                                    x'00000003' - Return all rings             
*                                                  with the same name           
*                                                  after the ring               
*                                                  specified by ring            
*                                                  owner and ring               
*                                                  name          @NBA*/         
*    5 CDDL_RING_RES_LEN Fixed(32),/* A 4 byte value containing                 
*                                    the size of the field pointed              
*                                    to by Ring_result_ptr       @NBA*/         
*    5 CDDL_RING_RES_PTR Ptr(31); /* An input value containing the              
*                                    address of the ring result                 
*                                    area                        @NBA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*       Private Key Type Constants returned in CDDL_PK_TYPE        */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
* DECLARE                                                                       
*  CDDL_PKCS1         FIXED(32) CONSTANT(1), /* Private key is                  
*                                     PKCS#1 DER encoded         @MWA*/         
*/*------------------------------------------------------------------*/         
*/* The following constant, CDDL_PKCS10 should not be used, as   @MWA*/         
*/* its name is misleading.  It is kept strictly for             @MWA*/         
*/* compatibility.  Instead use CDDL_PKCS1.                      @MWA*/         
*/*------------------------------------------------------------------*/         
*  CDDL_PKCS10        FIXED(32) CONSTANT(1), /* Private key is                  
*                                     PKCS#1 DER encoded             */         
*  CDDL_ICSF          FIXED(32) CONSTANT(2), /* Private key is                  
*                                     a ICSF token label         @MWA*/         
*/*------------------------------------------------------------------*/         
*/* The following constant, CDDL_ICSF10 should not be used, as   @MWA*/         
*/* its name is misleading and it does not match the assembler   @MWA*/         
*/* version.  It is kept strictly for compatibility.             @MWA*/         
*/* Instead use CDDL_ICSF.                                       @MWA*/         
*/*------------------------------------------------------------------*/         
*  CDDL_ICSF10        FIXED(32) CONSTANT(2), /* Private key is                  
*                                     a ICSF token label         @D2C*/         
*  CDDL_PCICC         FIXED(32) CONSTANT(3), /* Private key is                  
*                                     a PCICC token label        @M1C*/         
*  CDDL_DSA           FIXED(32) CONSTANT(4), /* Private key is                  
*                                     a DSA token label          @MWC*/         
*  CDDL_DH            FIXED(32) CONSTANT(6), /* Private key is                  
*                                               Diffie Hellman   @MWA*/         
*  CDDL_ECC           FIXED(32) CONSTANT(7), /* Private key is                  
*                                               ECC              @MZC*/         
*  CDDL_ECC_ICSF      FIXED(32) CONSTANT(9), /* Private key is ECC              
*                                               PKDS key token   @N3C*/         
*  CDDL_RSA_TKDS      FIXED(32) CONSTANT(11),/* Private key is RSA              
*                                               TKDS key token   @N3A*/         
*  CDDL_ECC_TKDS      FIXED(32) CONSTANT(13),/* Private key is ECC              
*                                               TKDS key token   @N3A*/         
*  CDDL_DSA_TKDS      FIXED(32) CONSTANT(14);/* Private key is DSA              
*                                               TKDS key token   @N3A*/         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*  Mapping of input/output area pointed to by CDDL_RES_HANDLE      */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
* DECLARE                                                                       
*  1 CDDL_HANDLE_MAP  BASED,      /* Mapping of area pointed to by              
*                                    CDDL_RES_HANDLE & CDDL_PREV_HANDLE         
*                                                                @L9C*/         
*    5 CDDL_TOKEN Ptr,            /* Reserved for use by the security           
*                                    server.  This value must be                
*                                    preserved for subsequent calls             
*                                    to DataGetNext and                         
*                                    DataAbortQuery                  */         
*    5 CDDL_PREDICATES FIXED(32), /* Input value specifying                     
*                                    the selection criteria.  See               
*                                    constants below                 */         
*    5 CDDL_ATTR_ID FIXED(32),    /* Input value specifying                     
*                                    the attribute to query on.                 
*                                    Ignored if CDDL_PREDICATES is 0.           
*                                    See constants below for possible           
*                                    values.                         */         
*    5 CDDL_ATTR_LEN FIXED(32),   /* Input value containing the                 
*                                    length of the attributes                   
*                                    supplied in CDDL_ATTR_PTR       */         
*    5 CDDL_ATTR_PTR PTR(31);     /* Input value containing                     
*                                    the address of query                       
*                                    attribute data.  Type of data              
*                                    supplied determined by                     
*                                    CDDL_ATTR_ID                @L8A*/         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* Input selection criteria constants supplied in CDDL_PREDICATES   */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
* DECLARE                                                                       
*  CDDL_NONE          FIXED(32) CONSTANT(0), /* No selection criteria*/         
*  CDDL_ATTR          FIXED(32) CONSTANT(1); /* Query on a                      
*                                    particular attribute        @L8A*/         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* Input query attributes supplied in CDDL_ATTR_ID                  */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
* DECLARE                                                                       
*  CDDL_LABEL FIXED(32) CONSTANT(1), /* The certificate label, up to            
*                                       32 characters long           */         
*  CDDL_DEFAULT FIXED(32) CONSTANT(2), /* The default flag, a 4 byte            
*                                    field specified as 0 for NO, or            
*                                    a non-zero value for YES        */         
*  CDDL_SUBJECT FIXED(32) CONSTANT(3); /* BER encoded subject's name */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* Input selection criteria supplied in CDDL_RING_SRCH_TYPE         */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
* DECLARE                                                                       
*  CDDL_ONE_RING FIXED(32) CONSTANT(0), /* Return just the ring with            
*                                    the specified ring owner and               
*                                    ring name                   @NBA*/         
*  CDDL_ALL_RINGS FIXED(32) CONSTANT(1), /* Return all rings after              
*                                    the ring specifed by ring owner            
*                                    and ring name               @NBA*/         
*  CDDL_SAME_OWNER FIXED(32) CONSTANT(2), /* Return all rings with              
*                                    the same owner after the ring              
*                                    specified by ring owner and                
*                                    ring name                   @NBA*/         
*  CDDL_SAME_NAME FIXED(32) CONSTANT(3); /* Return all rings with               
*                                    the same name after the ring               
*                                    specified by ring owner and                
*                                    ring name                   @NBA*/         
*                                                                               
*/********************************************************************/         
*/*                KERB sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  KERB_LEN FIXED(31) CONSTANT(LENGTH(KERB)), /* Constant KERB length           
*                                                                @LEA*/         
*/*                 Function code values                         @LEA*/         
*  KERB_GET_USER  FIXED(8) CONSTANT(1), /* Get user information  @LEA*/         
*  KERB_UPDATE_REVOKECT                                                         
*                 FIXED(8) CONSTANT(2), /* Update revoke count   @LEA*/         
*  KERB_RESET_REVOKECT                                                          
*                 FIXED(8) CONSTANT(3), /* Update revoke count   @LEA*/         
*  KERB_GET_REALM FIXED(8) CONSTANT(4); /* Get realm information @LEA*/         
*                                                                               
*/********************************************************************/         
*/* field structure and field mapping                            @LEA*/         
*/********************************************************************/         
* DECLARE                                                                       
*  1 KERB_FLDDATA_MAP   BASED,       /* Mapping for Field entry  @LEA*/         
*    5 KERB_FLDDATA_LEN FIXED(16),   /* Length of field struct   @LEA*/         
*    5 KERB_FLD_NUM FIXED(16),       /* Number of fields to update              
*                                       or list                  @LEA*/         
*    5 KERB_FLDSTRT CHAR(0);         /* First field entry        @LEA*/         
*                                                                               
* DECLARE                                                                       
*  1 KERB_FLDENTRY   BASED,          /* Mapping for Field entry  @LEA*/         
*    5 KERB_FLD_NAME CHAR(8),        /* Field name               @LEA*/         
*    5 KERB_FLD_LEN  FIXED(16) BDY(BYTE), /* Field data length   @LEA*/         
*    5 KERB_FLD_DATA CHAR(*);        /* Field data               @LEA*/         
*                                                                               
*/********************************************************************/         
*/*                TKTS sub-declares                                 */         
*/********************************************************************/         
*                                                                               
*                                                                               
* DECLARE                                                                       
*  TKTS_LEN FIXED(31) CONSTANT(OFFSET(TKTS_APPLICATION@)),                      
*                                          /* Constant TKTS length              
*                                                at pre-1.7      @LWC*/         
*  TKTS_V17_LEN   FIXED(31) CONSTANT(OFFSET(TKTS_APPLICATION@)+                 
*                                    length(TKTS_APPLICATION@)),                
*                                          /* TKTS length in 1.7 @LWA*/         
*  TKTS_TOTAL_LEN FIXED(31) CONSTANT(LENGTH(TKTS)),                             
*                                          /* Entire TKTS len    @LWA*/         
*/*                 Function code values                         @LWC*/         
*  TKTS_RETURN_NAME FIXED(16) CONSTANT(1), /* Parse and return Kerberos         
*                                             principal name     @LHA*/         
*  TKTS_UNUSED_FUNC fixed(16) CONSTANT(2), /* do not use.        @LWA*/         
*  TKTS_PASSTICKET  FIXED(16) CONSTANT(3); /* Passticket svcs    @LWA*/         
*                                                                               
*/***************************************************************@0AA*/         
*                                                                               
*/********************************************************************/         
*/*                PKIS sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  PKIS_LEN    FIXED(31) CONSTANT(Offset(PKIS_CA_DOMAIN@)),                     
*                                 /* Constant - length of PKIS prior to         
*                                    z/OS R8                     @M7C*/         
*  PKIS_LEN_Z8 FIXED(31) CONSTANT(Offset(PKIS_CA_DOMAIN@) +                     
*                                 Length(PKIS_CA_DOMAIN@)),                     
*                                 /* Constant - length of PKIS starting         
*                                    in z/OS R8                  @N4C*/         
*  PKIS_TOT_LEN FIXED(31) CONSTANT(LENGTH(PKIS));                               
*                                 /* Constant - length of PKIS   @M7A*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* PKIS Function Code Constants                                 @0AA*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  PKIS_GENCERT        FIXED(16) CONSTANT(1), /* GENCERT Function of            
*                                             RACDCERT.  Generates a            
*                                             basic X.509 V3 digital            
*                                             certificate        @0AA*/         
*  PKIS_EXPORT         FIXED(16) CONSTANT(2), /* EXPORT  Function of            
*                                             RACDCERT.  Extracts a             
*                                             digital certificate by            
*                                             Certificate Request ID            
*                                                                @0AA*/         
*                                                                               
*  PKIS_QUERYREQS      FIXED(16) CONSTANT(3), /* QUERYREQS Function of          
*                                             PKI SERVICES. Query               
*                                             certificate requests              
*                                                                @LJA*/         
*                                                                               
*  PKIS_REQDETAILS     FIXED(16) CONSTANT(4), /* REQDETAILS Function of         
*                                             PKI SERVICES. Extract the         
*                                             details of a single               
*                                             certificate request               
*                                                                @LJA*/         
*                                                                               
*  PKIS_MODIFYREQS     FIXED(16) CONSTANT(5), /* MODIFYREQS Function of         
*                                             PKI SERVICES. Modify one          
*                                              or more certificate              
*                                             requests           @LJA*/         
*                                                                               
*  PKIS_QUERYCERTS     FIXED(16) CONSTANT(6), /* QUERYCERTS Function of         
*                                             PKI SERVICES. Query               
*                                             issued certificates               
*                                                                @LJA*/         
*                                                                               
*  PKIS_CERTDETAILS    FIXED(16) CONSTANT(7), /* CERTDETAILS Function           
*                                             of PKI SERVICES. Extract          
*                                             the details of a single           
*                                             issued certificate @LJA*/         
*                                                                               
*  PKIS_MODIFYCERTS    FIXED(16) CONSTANT(8), /* MODIFYCERTS Function           
*                                             of PKI SERVICES. Modify           
*                                             one or more issued                
*                                             certificates       @LJA*/         
*                                                                               
*  PKIS_REQCERT        FIXED(16) CONSTANT(9), /* REQCERT Function of            
*                                             PKI SERVICES. Request             
*                                             a digital certificate             
*                                             pending the approval of           
*                                             an administrator   @LKC*/         
*                                                                               
*  PKIS_VERIFY        FIXED(16) CONSTANT(10), /* VERIFY Function of             
*                                             PKI SERVICES. Request             
*                                             certificate verification          
*                                                               @LKA*/          
*                                                                               
*  PKIS_REVOKE        FIXED(16) CONSTANT(11), /* REVOKE Function of             
*                                             PKI SERVICES. Request             
*                                             certificate revocation            
*                                                               @LKA*/          
*                                                                               
*  PKIS_GENRENEW      FIXED(16) CONSTANT(12), /* GENRENEW Function of           
*                                             PKI SERVICES. Request             
*                                             auto-approved certificate         
*                                             renewal           @LKA*/          
*                                                                               
*  PKIS_REQRENEW      FIXED(16) CONSTANT(13), /* REQRENEW Function of           
*                                             PKI SERVICES. Request             
*                                             certificate renewal               
*                                                               @LKA*/          
*                                                                               
*  PKIS_RESPOND       FIXED(16) CONSTANT(14), /* RESPOND Function of            
*                                                PKI SERVICES.   @M7C*/         
*                                                                               
*  PKIS_SCEPREQ       FIXED(16) CONSTANT(15), /* SCEPREQ Function of            
*                                             PKI Services. Submit a            
*                                             request to PKI Services           
*                                             using SCEP         @M7A*/         
*                                                                               
*  PKIS_PREREGISTER   FIXED(16) CONSTANT(16), /* PREREGISTER Function           
*                                             of PKI Services.                  
*                                             Preregister a SCEP                
*                                             user               @N4C*/         
*                                                                               
*  PKIS_QRECOVER      FIXED(16) CONSTANT(17); /* QRECOVER Function of           
*                                             PKI Services. Query for           
*                                             recovering a certificate          
*                                             and private key.   @MUA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* PKIS Function Specific Parameter Lists                       @0AA*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  1 PKIS_GENCERT_MAP    BASED,     /* Function Specific Parameter List         
*                                      (FSPL) for GENCERT        @0AA*/         
*   5 PKIS_GENC_EYECATCH   CHAR(8), /* Eyecatcher for the GENCERT FSPL          
*                                   Left justified blank filled string          
*                                   containing the text 'GENCERT '              
*                                                                @0AA*/         
*   5 PKIS_GENC_CERTPL_LEN FIXED(32), /* Length (in bytes) of the               
*                                        Digital Certificate                    
*                                        generation PList        @0AA*/         
*   5 PKIS_GENC_CERTPL@    PTR(31), /* Address of the                           
*                                      Digital Certificate                      
*                                      generation PList          @0AA*/         
*   5 PKIS_GENC_CERTID@    PTR(31); /* Address of a 57-Byte area that           
*                                   contains the Output Certificate             
*                                   Request ID (the first byte of this          
*                                   area contains the length of the             
*                                   Output Certificate Request ID)              
*                                                                @0AA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_CPL_ENTRY      BASED,     /* Certificate Request PList entry          
*                                      (a single GENCERT PList entry)           
*                                                                @0AA*/         
*   5 PKIS_CPL_FIELD_NAME  CHAR(12), /* Certificate Request Field Name          
*                                                                @0AA*/         
*   5 PKIS_CPL_FIELD_LEN   FIXED(32), /* Length (in bytes) of the               
*                                     Request Field Name value   @0AA*/         
*   5 PKIS_CPL_FIELD_VALUE CHAR(*);   /* Request Field Name value               
*                                                                @0AA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_ATTRIBUTES_MAP BIT(32) BASED, /* Certificate Request                  
*                                          Attribute mapping     @LPA*/         
*     5 PKIS_SYNCH_CREATE  Bit  (1),  /* Synchronous generation flag            
*                                                                @LPA*/         
*     5 *                  Bit (31);  /* Reserved                               
*                                                                @LPA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_EXPORT_MAP     BASED,     /* Function Specific Parameter List         
*                                      (FSPL) for EXPORT         @0AA*/         
*   5 PKIS_EXP_EYECATCH    CHAR(8), /* Eyecatcher for the EXPORT FSPL           
*                                   Left justified blank filled string          
*                                   containing the text 'EXPORT  '              
*                                                                @0AA*/         
*   5 PKIS_EXP_CERTAN_LEN  FIXED(32), /* Length (in bytes) of the               
*                                        preallocated Certificate               
*                                        Anchor area             @0AA*/         
*   5 PKIS_EXP_CERTAN@     PTR(31), /* Address of the preallocated              
*                                      Certificate Anchor area   @0AA*/         
*   5 PKIS_EXP_CERTID@     PTR(31), /* Address of a 57-Byte area that           
*                                   contains the Input Certificate              
*                                   Request ID that will be used to             
*                                   locate the Digital Certificate              
*                                   to be EXPORTed (the first byte of           
*                                   this area contains the length of            
*                                   the Input Certificate Request ID)           
*                                                                @MUC*/         
*   5 PKIS_EXP_KEYID@      PTR(31); /* Address of a 41-byte area that           
*                                      contains the KeyId - the hash            
*                                      of the public key generated by           
*                                      PKI Services.  The first byte of         
*                                      this area contains the length of         
*                                      the KeyId.  This field is used           
*                                      to export a recovery                     
*                                      certificate, the only case that          
*                                      the first byte is 40.  In all            
*                                      other cases, the length byte             
*                                      should be 0.              @MUA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_QUERYREQS_MAP  BASED,     /* Function Specific Parameter List         
*                                   (FSPL) for QUERYREQS         @LJA*/         
*   5 PKIS_QRYR_EYECATCH   CHAR(8), /* Eyecatcher for QUERYREQS FSPL            
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'QUERYRQS'              @LJA*/         
*   5 PKIS_QRYR_RESULTL_LEN FIXED(32), /* Length (in bytes) of the              
*                                      preallocated Results list area           
*                                                                @LJA*/         
*   5 PKIS_QRYR_RESULTL@   PTR(31), /* Address of the preallocated              
*                                   Results List area            @LJA*/         
*   5 PKIS_QRYR_CERTID@    PTR(31), /* Address of a 57-Byte area that           
*                                   contains the Input Certificate              
*                                   Request ID that will be used as             
*                                   a starting point for this query.            
*                                   Only Request IDs located after              
*                                   this Cert ID will be returned.              
*                                   The first byte of area contains             
*                                   the length of the Input Certificate         
*                                   Request ID.                  @LOC*/         
*   5 PKIS_QRYR_NUMENTRIES FIXED(32), /* Value indicating the maximum           
*                                     number of entries to be returned          
*                                     in the Results List area. Zero            
*                                     indicates no limit         @LJA*/         
*   5 PKIS_QRYR_CRIT_STATUS FIXED(32), /* Value indicating the request          
*                                      status to use as search criteria         
*                                                                @LJA*/         
*   5 PKIS_QRYR_CRIT_DAYS  FIXED(31), /* Value indicating the recent            
*                                     activity to use as additional             
*                                     search criteria            @MFC*/         
*   5 PKIS_QRYR_CRIT_NAME@ PTR(31); /* Address of a 33-Byte area that           
*                                   contains the input requestor's              
*                                   name to be used as additional               
*                                   search criteria. The first byte of          
*                                   this area contains the length of            
*                                   the input requestor's name.  @LJA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_RESL_ENTRY     BASED,     /* Results List Entry for QUERYREQS         
*                                   or QUERYCERTS ( a single entry )            
*                                                                @LJA*/         
*   5 PKIS_RESL_ENTRY_LEN  FIXED(8),  /* Length (in bytes) of the               
*                                     Results List entry value   @LJA*/         
*   5 PKIS_RESL_ENTRY_VALUE CHAR(*);  /* Results list entry value               
*                                                                @LJA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_REQDETAILS_MAP BASED,     /* Function Specific Parameter List         
*                                   (FSPL) for REQDETAILS        @LJA*/         
*   5 PKIS_REQD_EYECATCH   CHAR(8), /* Eyecatcher for REQDETAILS FSPL           
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'REQDTAIL'              @LJA*/         
*   5 PKIS_REQD_SUML_LEN   FIXED(32), /* Length (in bytes) of the               
*                                     preallocated Summary list area            
*                                                                @LJA*/         
*   5 PKIS_REQD_SUML@      PTR(31), /* Address of the preallocated              
*                                   Summary List area            @LJA*/         
*   5 PKIS_REQD_CERTPL_LEN FIXED(32), /* Length (in bytes) of the               
*                                     Digital Certificate                       
*                                     generation type PLIST area @LJA*/         
*   5 PKIS_REQD_CERTPL@    PTR(31), /* Address of the pre-allocated             
*                                   Digital Certificate generation              
*                                   type PList details area      @LJA*/         
*   5 PKIS_REQD_CERTID@    PTR(31); /* Address of a 57-Byte area that           
*                                   contains the Input Certificate              
*                                   Request ID from which to extract            
*                                   the data (the first byte of this            
*                                   area contains the length of the             
*                                   Input Certificate Request ID)               
*                                                                @LJA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_SUML_ENTRY     BASED,    /* Summary List Entry for REQDETAILS         
*                                  CERTDETAILS, or VERIFY                       
*                                  ( a single entry )            @LKC*/         
*   5 PKIS_SUML_ENTRY_LEN  FIXED(8),  /* Length (in bytes) of the               
*                                     Summary List entry value   @LJA*/         
*   5 PKIS_SUML_ENTRY_VALUE CHAR(*);  /* Summary list entry value               
*                                                                @LJA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_MODIFYREQS_MAP BASED,     /* Function Specific Parameter List         
*                                   (FSPL) for MODIFYREQS        @LJA*/         
*   5 PKIS_MODR_EYECATCH   CHAR(8), /* Eyecatcher for MODIFYREQS FSPL           
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'MODREQS '              @LJA*/         
*   5 PKIS_MODR_ACTION   FIXED(32), /* 4 byte binary value indicating           
*                                   the action to be taken against the          
*                                   certificates requests        @LJA*/         
*   5 PKIS_MODR_COMMENT@  PTR(31),  /* Address of a 65-Byte area that           
*                                   contains the comment data                   
*                                   associated with this action. The            
*                                   first byte of this area contains            
*                                   the length of the actual comment.           
*                                   If the length is x'00' then                 
*                                   no comment will be recorded. @LKA*/         
*   5 PKIS_MODR_CERTIDL_LEN FIXED(32), /* Length (in bytes) of the              
*                                      Certificate Request id list              
*                                      on input                  @LJA*/         
*   5 PKIS_MODR_CERTIDL@   PTR(31), /* Address of the area containing           
*                                   1 or more certificate request ids           
*                                   that are to be modified by this             
*                                   request.                     @LJA*/         
*   5 PKIS_MODR_CERTPL_LEN  FIXED(32), /* Length (in bytes) of the              
*                                      Certificate modification plist           
*                                      area                      @LJA*/         
*   5 PKIS_MODR_CERTPL@    PTR(31), /* Address of the area which is             
*                                   the Certificate modification plist          
*                                                                @N5C*/         
*   5 PKIS_MODR_ERRL_LEN   FIXED(32),  /* Length (in bytes) of the              
*                                      error list data return area              
*                                                                @N5A*/         
*   5 PKIS_MODR_ERRL@      PTR(31), /* Address of the area where error          
*                                      list information is to be                
*                                      returned.                 @NCC*/         
*   5 PKIS_MODR_TSTAMP@    PTR(31); /* Address of a 20-byte area that           
*                                      can contain a time stamp in              
*                                      'YYYY/MM/DD HH:MM:SS' format.            
*                                      The first byte of this area              
*                                      contains the length of the               
*                                      time stamp. If the length is             
*                                      x'00' then no time stamp is              
*                                      provided. Acceptable lengths             
*                                      are '00'x and '13x' only. @NCA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_QUERYCERTS_MAP BASED,     /* Function Specific Parameter List         
*                                   (FSPL) for QUERYCERTS        @LJA*/         
*   5 PKIS_QRYC_EYECATCH   CHAR(8), /* Eyecatcher for QUERYREQS FSPL            
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'QUERYCTS'              @LJA*/         
*   5 PKIS_QRYC_RESULTL_LEN FIXED(32), /* Length (in bytes) of the              
*                                      preallocated Results list area           
*                                                                @LJA*/         
*   5 PKIS_QRYC_RESULTL@   PTR(31), /* Address of the preallocated              
*                                   Results List area            @LJA*/         
*   5 PKIS_QRYC_SERIALNUM@ PTR(31), /* Address of a 17-Byte area that           
*                                   contains the Input Certificate              
*                                   Serial Number that will be used as          
*                                   a starting point for this query.            
*                                   Only Certificates located after             
*                                   this serial number will be                  
*                                   returned. The first byte of area            
*                                   contains the length of the Input            
*                                   Certificate Serial Number    @N4C*/         
*   5 PKIS_QRYC_NUMENTRIES FIXED(32), /* Value indicating the maximum           
*                                     number of entries to be returned          
*                                     in the Results List area. Zero            
*                                     indicates no limit         @LJA*/         
*   5 PKIS_QRYC_CRIT_STATUS FIXED(32), /* Value indicating the request          
*                                      status to use as search criteria         
*                                                                @LJA*/         
*   5 PKIS_QRYC_CRIT_DAYS FIXED(31), /* Value indicating the recent             
*                                    activity to use as additional              
*                                    search criteria             @MFC*/         
*   5 PKIS_QRYC_CRIT_NAME@ PTR(31); /* Address of a 33-Byte area that           
*                                   contains the input requestor's              
*                                   name to be used as additional               
*                                   search criteria. The first byte of          
*                                   this  area contains the length of           
*                                   the input requestor's name.  @LJA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_CERTDETAILS_MAP BASED,    /* Function Specific Parameter List         
*                                   (FSPL) for CERTDETAILS       @LJA*/         
*   5 PKIS_CRTD_EYECATCH   CHAR(8), /* Eyecatcher for CERTDETAILS FSPL          
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'CRTDETLS'              @LJA*/         
*   5 PKIS_CRTD_SUML_LEN FIXED(32), /* Length (in bytes) of the                 
*                                   preallocated Summary list area              
*                                                                @LJA*/         
*   5 PKIS_CRTD_SUML@      PTR(31), /* Address of the preallocated              
*                                   Summary List area            @LJA*/         
*   5 PKIS_CRTD_CERTPL_LEN FIXED(32), /* Length (in bytes) of the               
*                                     Digital Certificate                       
*                                     generation type PLIST area @LJA*/         
*   5 PKIS_CRTD_CERTPL@    PTR(31), /* Address of the pre-allocated             
*                                   Digital Certificate generation              
*                                   type PList details area      @LJA*/         
*   5 PKIS_CRTD_SERIALNUM@ PTR(31); /* Address of an Input Certificate          
*                                   Serial Number or an Input                   
*                                   Certificate Fingerprint for                 
*                                   which the details will be                   
*                                   extracted.                                  
*                                      + When referencing an Input              
*                                        Certificate Serial Number,             
*                                        this value is the address of           
*                                        a 17-Byte area, the first              
*                                        byte containing the length of          
*                                        the Certificate Serial Number.         
*                                      + When referencing an Input              
*                                        Certificate Fingerprint, this          
*                                        value is one of two                    
*                                        acceptable values:                     
*                                        - The address of a 65-Byte             
*                                          area, the first byte                 
*                                          containing the length of             
*                                          the Certificate                      
*                                          Fingerprint, whose value             
*                                          contains no embedded                 
*                                          separator characters,                
*                                        OR                                     
*                                        - The address of a 96-Byte             
*                                          area, the first byte                 
*                                          containing the length of             
*                                          the Certificate                      
*                                          Fingerprint, whose value             
*                                          is expected to contain               
*                                          embedded separator                   
*                                          characters of ':' or ' '.            
*                                                                @NLC*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_MODIFYCERTS_MAP BASED,    /* Function Specific Parameter List         
*                                   (FSPL) for MODIFYCERTS       @LJA*/         
*   5 PKIS_MODC_EYECATCH   CHAR(8), /* Eyecatcher for MODIFYCERTS FSPL          
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'MODCERTS'              @LJA*/         
*   5 PKIS_MODC_ACTION   FIXED(32), /* 4 byte binary value indicating           
*                                   the action to be taken against the          
*                                   certificates identified by the              
*                                   serial number list.          @LJA*/         
*   5 PKIS_MODC_COMMENT@  PTR(31), /* Address of a 65-Byte area that            
*                                  contains the comment data associated         
*                                  with this action. The first byte             
*                                  of this area contains the length of          
*                                  the actual comment. If the length is         
*                                  x'00' then no comment will be                
*                                  recorded.                     @LKM*/         
*   5 PKIS_MODC_SERIALNUMSL_LEN FIXED(32), /* Length (in bytes) of the          
*                                         Serial Numbers list on input.         
*                                                                @LJA*/         
*   5 PKIS_MODC_SERIALNUMSL@ PTR(31), /* Address of the area containing         
*                                    1 or more Serial Numbers of                
*                                    certificates that are to be                
*                                    modified by this request.   @LJA*/         
*   5 PKIS_MODC_REASON   FIXED(32), /* 4 byte binary value indicating           
*                                   the reason for certificate                  
*                                   revocation                   @MUC*/         
*   5 PKIS_MODC_REQUESTOREMAIL@ PTR(31), /* Address of a 33-byte area           
*                                      that contains the new e-mail             
*                                      address of the requestor.  The           
*                                      first byte of this area contains         
*                                      the length of the e-mail                 
*                                      address.                  @N5C*/         
*   5 PKIS_MODC_ERRL_LEN  FIXED(32), /* Length (in bytes) of the error          
*                                    list data return area       @N5A*/         
*   5 PKIS_MODC_ERRL@     PTR(31);   /* Address of the area where error         
*                                    list information is to be                  
*                                    returned.                   @N5A*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_SNID_ENTRY     BASED,    /* Certificate ID or Serial Number           
*                                     ( a single entry )         @LJA*/         
*   5 PKIS_SNID_ENTRY_LEN  FIXED(8),  /* Length (in bytes) of the Cert          
*                                      ID or Serial Number entry value          
*                                                                @LJA*/         
*   5 PKIS_SNID_ENTRY_VALUE CHAR(*);  /* Cert ID or Serial Number entry         
*                                      value                     @LJA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_VERIFY_MAP BASED,         /* Function Specific Parameter List         
*                                   (FSPL) for VERIFY            @LKA*/         
*   5 PKIS_VERF_EYECATCH   CHAR(8), /* Eyecatcher for VERIFY FSPL               
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'VERIFY  '              @LKA*/         
*   5 PKIS_VERF_SUML_LEN   FIXED(32), /* Length (in bytes) of the               
*                                     preallocated Summary list area            
*                                                                @LKA*/         
*   5 PKIS_VERF_SUML@      PTR(31), /* Address of the preallocated              
*                                   Summary List area            @LKA*/         
*   5 PKIS_VERF_CERTPL_LEN FIXED(32), /* Length (in bytes) of the               
*                                     Digital Certificate                       
*                                     generation type PLIST area @LKA*/         
*   5 PKIS_VERF_CERTPL@    PTR(31), /* Address of the pre-allocated             
*                                   Digital Certificate generation              
*                                   type PList details area      @LKA*/         
*   5 PKIS_VERF_CERT_LEN  FIXED(32), /* Length (in bytes) of the                
*                                    Cert area containing the                   
*                                    certificate to verify       @LKA*/         
*   5 PKIS_VERF_CERT@     PTR(31); /* Address of the area containing            
*                                  the Certificate to verify     @LKA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_REVOKE_MAP BASED,         /* Function Specific Parameter List         
*                                   (FSPL) for REVOKE            @LKA*/         
*   5 PKIS_REVK_EYECATCH   CHAR(8), /* Eyecatcher for REVOKE FSPL               
*                                   Left justified blank filled string          
*                                   containing user specified text,             
*                                   e.g. 'REVOKE  '              @LKA*/         
*   5 PKIS_REVK_REASON   FIXED(32), /* 4 byte binary value indicating           
*                                   the reason for the certificate              
*                                   revocation                   @LKA*/         
*   5 PKIS_REVK_SERIALNUM@ PTR(31); /* Address of a 17-Byte area that           
*                                   contains the Input Certificate              
*                                   Serial Number to be revoked. The            
*                                   first byte of this area contains            
*                                   the length of the Input Certificate         
*                                   Serial Number.               @LKA*/         
*                                                                               
*/*-------------------------------*/                                            
*                                                                               
* DECLARE                                                                       
*  1 PKIS_RENEW_MAP    BASED,       /* Function Specific Parameter List         
*                                      (FSPL) for GENRENEW and REQRENEW         
*                                                                @LKA*/         
*   5 PKIS_RENW_EYECATCH   CHAR(8), /* Eyecatcher for the GENRENEW FSPL         
*                                   and the REQRENEW FSPL                       
*                                   Left justified blank filled string          
*                                   containing the text 'RENEW   '              
*                                                                @LKA*/         
*   5 PKIS_RENW_CERTPL_LEN FIXED(32), /* Length (in bytes) of the               
*                                        Digital Certificate                    
*                                        generation PList        @LKA*/         
*   5 PKIS_RENW_CERTPL@    PTR(31), /* Address of the                           
*                                      Digital Certificate                      
*                                      generation PList          @LKA*/         
*   5 PKIS_RENW_CERTID@    PTR(31), /* Address of a 57-Byte area that           
*                                   contains the Output Certificate             
*                                   Request ID (the first byte of this          
*                                   area contains the length of the             
*                                   Output Certificate Request ID)              
*                                                                @LKA*/         
*   5 PKIS_RENW_SERIALNUM@ PTR(31); /* Address of a 17-Byte area that           
*                                   contains the input Certificate              
*                                   Serial Number to be renewed. The            
*                                   first byte of this area contains            
*                                   the length of the Input Certificate         
*                                   Serial Number                @LOC*/         
*                                                              /*@LOD*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*  PKIS Function Specific Parameter List for RESPOND           @M3A*/         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  1 PKIS_RESPOND_MAP          BASED,    /* Function Specific Parm List         
*                                        (FSPL) for RESPOND      @M3A*/         
*    5 PKIS_RESP_EYECATCH      CHAR(8),  /* Eyecatcher for the RESPOND          
*                                        FSPL.  Left justified,                 
*                                        blank filled string                    
*                                        containing user specified              
*                                        text, e.g. 'RESPOND '   @M3A*/         
*    5 PKIS_RESP_RESPONSE_LEN  FIXED(31), /* Length (in bytes) of the           
*                                         Response area on input to             
*                                         RESPOND                @M3A*/         
*    5 PKIS_RESP_RESPONSE@     PTR(31),  /* Address in which the                
*                                        results of the RESPOND                 
*                                        function are stored upon               
*                                        a successful completion                
*                                        of the request          @M3A*/         
*    5 PKIS_RESP_REQUEST_LEN   FIXED(31), /* Length (in bytes) of the           
*                                         Request area containing the           
*                                         input request data     @M3A*/         
*    5 PKIS_RESP_REQUEST@      PTR(31);  /* Address of the area                 
*                                        containing the Request  @M3A*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*  PKIS Function Specific Parameter List for SCEPREQ           @M7A*/         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  1 PKIS_SCEPREQ_MAP          BASED,    /* Function Specific Parm List         
*                                        (FSPL) for SCEPREQ      @M7A*/         
*    5 PKIS_SCEP_EYECATCH      CHAR(8),  /* Eyecatcher for the SCEPREQ          
*                                        FSPL.  Left justified,                 
*                                        blank filled string                    
*                                        containing user specified              
*                                        text, e.g. 'SCEPREQ '   @M7A*/         
*    5 PKIS_SCEP_RESPONSE_LEN  FIXED(31), /* Length (in bytes) of the           
*                                         Response area on input to             
*                                         SCEPREQ                @M7A*/         
*    5 PKIS_SCEP_RESPONSE@     PTR(31),  /* Address in which the                
*                                        results of the SCEPREQ                 
*                                        function are stored upon               
*                                        a successful completion                
*                                        of the request          @M7A*/         
*    5 PKIS_SCEP_REQUEST_LEN   FIXED(31), /* Length (in bytes) of the           
*                                         Request area containing the           
*                                         input request data     @M7A*/         
*    5 PKIS_SCEP_REQUEST@      PTR(31);  /* Address of the area                 
*                                        containing the Request  @M7A*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*  PKIS Function Specific Parameter List for PREREGISTER       @M7A*/         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  1 PKIS_PREREG_MAP        BASED,    /* Function Specific Parm List            
*                                        (FSPL) for PREREGISTER  @M7A*/         
*    5 PKIS_PREG_EYECATCH   CHAR(8),  /* Eyecatcher for the SCEPREQ             
*                                        PRERIGISTER FSPL.  Left                
*                                        justified, blank filled string         
*                                        containing user specified              
*                                        text, e.g. 'PREREG  '   @M7A*/         
*    5 PKIS_PREG_CERTPL_LEN FIXED(32),/* Length (in bytes) of the               
*                                        preregistration parameter              
*                                        list                    @M7A*/         
*    5 PKIS_PREG_CERTPL@    PTR(31),  /* Address of the                         
*                                        preregistration parameter              
*                                        list                    @M7A*/         
*    5 PKIS_PREG_CERTID@    PTR(31);  /* Address of a 57-Byte area              
*                                        contains the Output Cert               
*                                        Request ID (the first byte of          
*                                        this area contains the length          
*                                        of the Output Certificate              
*                                        Request ID)             @M7A*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*  PKIS Function Specific Parameter List for QRECOVER          @MUA*/         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  1 PKIS_QRECOVER_MAP      BASED,    /* Mapping for QRECOVER function          
*                                        specific parameter list @MUA*/         
*    5 PKIS_QREC_EYECATCH   CHAR(8),  /* Eyecatcher, 8 characters left          
*                                        justified blank filled.                
*                                        Actual value set by invoker,           
*                                        e.g. 'QRECOVER'.        @MUA*/         
*    5 PKIS_QREC_RESULTL_LEN FIXED(32), /* Length (in bytes) of the             
*                                          preallocated Results List            
*                                          area.  R_PKIServ will update         
*                                          this field with the actual           
*                                          length of the Results List           
*                                          if successful or with the            
*                                          length needed if the Results         
*                                          List buffer is too small.            
*                                                                @MUA*/         
*    5 PKIS_QREC_RESULTL@   PTR(31),  /* Address of the preallocated            
*                                        Results List area       @MUA*/         
*    5 PKIS_QREC_NUMENTRIES FIXED(32), /* Value indicating the maximum          
*                                         number of entries to be               
*                                         returned in the Results List          
*                                         area.  Zero indicates no              
*                                         limit.                 @MUA*/         
*    5 PKIS_QREC_CRIT_EMAIL@ PTR(31), /* Address of a 33-byte area              
*                                        that contains the input                
*                                        requestor's email address as           
*                                        search criteria.  The first            
*                                        byte of this area contains             
*                                        the length of the email                
*                                        address.                @MUA*/         
*    5 PKIS_QREC_CRIT_PASS@ PTR(31);  /* Address of a 33-byte area              
*                                        that contains the input                
*                                        pass phrase as additional              
*                                        search criteria.  The first            
*                                        byte of this area contains             
*                                        the length of the pass                 
*                                        phrase.                 @MUA*/         
*                                                                               
*/********************************************************************/         
*/*                CACH sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  CACH_LEN FIXED(31) CONSTANT(OFFSET(CACH_DATA_TIMEOUT@));                     
*                          /* Constant CACH length for FC1-5    @M9C*/          
* DECLARE                                                                       
*  CACH_LEN_V18 FIXED(31) CONSTANT(OFFSET(CACH_ICRX@));                         
*                          /* Constant CACH length for FC6       @PHC*/         
* DECLARE                                                                       
*  CACH_LEN_V1R11 FIXED(31) CONSTANT(LENGTH(CACH));                             
*                          /* Constant CACH length for FC7       @MQA*/         
*/*     Function code constants                                  @LLA*/         
* DECLARE                                                                       
*  CACH_START   FIXED(16) CONSTANT(1), /* Start a new cache      @LLA*/         
*  CACH_ADD     FIXED(16) CONSTANT(2), /* Add a record to the cache             
*                                                                @LLA*/         
*  CACH_END     FIXED(16) CONSTANT(3), /* Finish a cache. Make it               
*                                        available and delete any               
*                                        previous cache          @LLA*/         
*  CACH_FETCH   FIXED(16) CONSTANT(4), /* Fetch a record from the               
*                                        cache                   @LLA*/         
*  CACH_DELETE  FIXED(16) CONSTANT(5), /* Delete the cache       @LLA*/         
*  CACH_ICTX    FIXED(16) CONSTANT(6), /* Manage a read/write        */         
*                                      /*  cache                 @M9A*/         
*  CACH_EXTENDED FIXED(16) CONSTANT(7), /* Manage an extended                   
*                                        read/write cache        @MQA*/         
*                                                                               
*/*     Option value constants                                   @LLA*/         
*  CACH_OPT1    FIXED(16) CONSTANT(1), /* Varies with function   @LLA*/         
*  CACH_OPT2    FIXED(16) CONSTANT(2), /* Varies with function   @LLA*/         
*  CACH_OPT3    FIXED(16) CONSTANT(3); /* Varies with function   @LLA*/         
*                                                                               
*/* Option values for function code 6                            @M9A*/         
*  dcl CACH_STORE    fixed(32) constant(1);  ] Store data in the                
*                                            ]  read/write cache @M9A           
*  dcl CACH_LOCATE   fixed(32) constant(2);  ] Locate an application            
*                                            ]  data record in the              
*                                            ]  read/write cache @M9A           
*  dcl CACH_RETRIEVE fixed(32) constant(3);  ] Retrieve data from the           
*                                            ]  read/write cache @M9A           
*  dcl CACH_RETAPPL  fixed(32) constant(4);  ] Retrieve application             
*                                            ]  data from the                   
*                                            ]  read/write cache @M9A           
*  dcl CACH_REMOVE   fixed(32) constant(5);  ] Remove a record from             
*                                            ]  the read/write cache            
*                                            ]                   @M9A           
*  dcl CACH_REMEXP   fixed(32) constant(6);  ] Remove expired records           
*                                            ]  from the read/write             
*                                            ]  cache            @M9A           
*  dcl CACH_DESTROY  fixed(32) constant(7);  ] Destroy the read/write           
*                                            ]  cache            @M9A           
*/* Option values for function code 7                            @MQA*/         
*  dcl CACH_EXT_STORE fixed(32) constant(1); ] Store data in the                
*                                            ]  read/write cache @MQA           
*  dcl CACH_EXT_RETRVAPPL fixed(32) constant(2);  ] Retrieve data               
*                                            ]  from record in the              
*                                            ]  read/write cache @MQA           
*  dcl CACH_EXT_REMOVE fixed(32) constant(3);  ] Remove data from the           
*                                            ]  read/write cache @MQA           
*  dcl CACH_EXT_STORE_MULT fixed(32) constant(4); ] Store data in the           
*                                            ]  read/write cache and            
*                                            ]  return multi-use ICRX           
*                                            ]                   @N1A           
*  dcl CACH_EXT_ICRX_VAL fixed(32) constant(5); ] Validate an ICRX @N2A         
*                                                                               
*/********************************************************************/         
*/*                PRXY sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  PRXY_LEN  FIXED(31) CONSTANT(               /* Original length    */         
*      OFFSET(PRXY_FUNC_PARMLIST_VERSION@)),   /*                    */         
*  PRXY_LEN0 FIXED(31) CONSTANT(PRXY_LEN),     /* Original length    */         
*  PRXY_LEN1 FIXED(31) CONSTANT(LENGTH(PRXY)); /* Second length  @LVC*/         
*                                                                               
*/*     Function code constants                                  @LMA*/         
* DECLARE                                                                       
*  PRXY_GETDN   FIXED(16) CONSTANT(1), /* Get DN from LDAP       @LMA*/         
*  PRXY_GETPRIV FIXED(16) CONSTANT(2), /* Get privilege information             
*                                         from LDAP              @LMA*/         
*  PRXY_CHANGELOG FIXED(16) CONSTANT(3); /* Create LDAP change log              
*                                           entry                @LVA*/         
*/* Function specific plist mappings                             @LVA*/         
* DECLARE                                                                       
*  1 PRXY_F3_PLIST       Based    , /* Mapping for function 3    @LVA*/         
*    5 PRXY_F3_OPTYPE    Fixed(8) , /* Operation type:                          
*                                        X'00' = Add                            
*                                        X'01' = Delete                         
*                                        X'02' = Modify          @LVA*/         
*    5 PRXY_F3_FLAGS     Bit(8)   , /* Flag byte                 @LVA*/         
*      7 PRXY_F3_PWUPD   Bit(1)   , /* Password/phrase changed   @MDC*/         
*      7 PRXY_F3_PWUPD2  Bit(1)   , /* Pwd/phrs is enveloped     @MDC*/         
*      7 PRXY_F3_PWUPD3  Bit(1)   , /* Phrase changed (0=pwd)    @MDA*/         
*      7 *               Bit(5)   , /* Reserved for future use   @MDC*/         
*    5 PRXY_F3_CLASS     Char(8)  , /* RACF class name in which                 
*                                      profile is changed        @LVA*/         
*    5 PRXY_F3_PROFLEN   Fixed(16), /* Length of profile name    @LVA*/         
*    5 PRXY_F3_PROFNAME@ Ptr(31)  , /* Address of profile name   @LVA*/         
*    5 PRXY_F3_INITIATOR Char(8)  , /* User ID initiating the                   
*                                       profile change           @LVA*/         
*    5 PRXY_F3_DATETIME  Char(22) ; /* GMT for update in format                 
*                                       yyymmddhhiiss.uuuuuuZ    @LVA*/         
*                                                                               
* DECLARE                                                                       
*  PRXY_F3_PLIST_LEN0 FIXED(31)         /* F3 version 0 plist        */         
*      CONSTANT(LENGTH(PRXY_F3_PLIST)); /*  length               @LVA*/         
*                                                                               
*/*     Operation type constants for PRXY_F3_OPTYPE              @LVA*/         
* DECLARE                                                                       
*  PRXY_F3_OP_ADD FIXED(8) CONSTANT(0), /* Add operation         @LVA*/         
*  PRXY_F3_OP_DEL FIXED(8) CONSTANT(1), /* Delete operation      @LVA*/         
*  PRXY_F3_OP_MOD FIXED(8) CONSTANT(2); /* Modify operation      @LVA*/         
*/***************************************************************@LIA*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                RACL sub-declares                                 */         
*/********************************************************************/         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* RACL Function Specific Parameter List                        @LIA*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  1 RACL_EDIT         BASED,     /* Function Specific Parameter List           
*                                    (FSPL) for EDIT             @LIA*/         
*    5 RACL_EDIT_OPTYPE  FIXED(16), /* Operation Type            @LIA*/         
*    5 RACL_EDIT_ACLTYPE FIXED(16), /* ACL Type                  @LIA*/         
*    5 RACL_EDIT_ACL     CHAR(0); /* An ACL structure containing                
*                                    entries to be modified      @LIA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* RACL Operation Type Constants                                @LIA*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  RACL_ADD        FIXED(16) CONSTANT(1), /* ADD the HFS ACL     @LIA*/         
*  RACL_MODIFY     FIXED(16) CONSTANT(2), /* MODIFY the HFS ACL  @LIA*/         
*  RACL_DELETE     FIXED(16) CONSTANT(3); /* DELETE the HFS ACL  @LIA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* RACL HFS ACL Type Constants                                  @LIA*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*                                                                               
* DECLARE                                                                       
*  RACL_ACCESS     FIXED(16) CONSTANT(1), /* Access HFS ACL      @LIA*/         
*  RACL_FILEMOD    FIXED(16) CONSTANT(2), /* File Model HFS ACL  @LIA*/         
*  RACL_DIRMOD     FIXED(16) CONSTANT(3); /* Directory Model HFS ACL            
*                                                                @LIA*/         
*                                                                               
*/***************************************************************@LIA*/         
*                                                                               
*/***************************************************************@LRA*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/*                WPRV sub-declares                                 */         
*/********************************************************************/         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/* WPRV R_WritePriv Function Constants                          @PAC*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*                                                                               
*  DECLARE                                                                      
*   WPRV_Query_WriteDown_Setting   FIXED(8)  CONSTANT('00'X), /* @PAC*/         
*   WPRV_Activate_WriteDown        FIXED(8)  CONSTANT('01'X), /* @PAC*/         
*   WPRV_InActivate_WriteDown      FIXED(8)  CONSTANT('02'X), /* @PAC*/         
*   WPRV_Reset_WriteDown           FIXED(8)  CONSTANT('03'X); /* @PAC*/         
*                                                                               
*/***************************************************************@LSA*/         
*                                                                               
*/********************************************************************/         
*/*                RAUX sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  RAUX_LEN    FIXED(31) CONSTANT(LENGTH(RAUX)); /* RAUX length  @LXA*/         
*                                                                               
*/*     Attribute values                                         @LXA*/         
* DECLARE                                                                       
*  RAUX_ATTR_RESULT                    /* Event result,              */         
*       BIT(32) CONSTANT('80000000'x), /* ON=success,OFF=failure @LYA*/         
*                                                                               
*  RAUX_ATTR_AUTHENTICATION            /* Authentication event       */         
*       BIT(32) CONSTANT('40000000'x), /*                        @LYC*/         
*                                                                               
*  RAUX_ATTR_AUTHORIZATION             /* Authorization event        */         
*       BIT(32) CONSTANT('20000000'x), /*                        @LYC*/         
*                                                                               
*  RAUX_ATTR_LOG_SUCCESS               /* Always log successes       */         
*       BIT(32) CONSTANT('10000000'x), /*                        @LYC*/         
*                                                                               
*  RAUX_ATTR_LOG_FAILURE               /* Always log failures        */         
*       BIT(32) CONSTANT('08000000'x), /*                        @LYC*/         
*                                                                               
*  RAUX_ATTR_NOLOG_SUCCESS             /* Never log successes        */         
*       BIT(32) CONSTANT('04000000'x), /*                        @LYC*/         
*                                                                               
*  RAUX_ATTR_NOLOG_FAILURE             /* Never log failues          */         
*       BIT(32) CONSTANT('02000000'x), /*                        @LYC*/         
*                                                                               
*  RAUX_ATTR_WARN_FAILURE              /* Issue warning message      */         
*       BIT(32) CONSTANT('01000000'x); /* for failues            @LYC*/         
*                                                                               
*/*                                                              @LYD*/         
*/*     Relocate structure                                       @LXA*/         
* DECLARE                                                                       
*  1 RAUX_RELOCATE       Based    , /* Mapping for relocate      @LXA*/         
*    5 RAUX_RELO_TYPE    Fixed(16), /* Section type              @LXA*/         
*    5 *                 Fixed(16), /* Reserved                  @LXA*/         
*    5 RAUX_RELO_LEN     Fixed(32), /* Length of section data    @LXA*/         
*    5 *                 Fixed(32), /* Reserved                  @LXA*/         
*    5 RAUX_RELO_DATA_PTR  Ptr(31); /* Address of section data   @LXA*/         
*                                                                               
*/*     Message segment structure                                @LXA*/         
* DECLARE                                                                       
*  1 RAUX_SEGMENT        Based    , /* Mapping for msg segment   @LXA*/         
*    5 *                 Fixed(32), /* Reserved                  @LXA*/         
*    5 RAUX_SEG_LEN      Fixed(32), /* Segment length            @LXA*/         
*    5 *                 Fixed(32), /* Reserved                  @LXA*/         
*    5 RAUX_SEG_PTR        Ptr(31); /* Address of segment data   @LXA*/         
*                                                                               
*/********************************************************************/         
*/*                GINF sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  GINF_LEN FIXED(31) CONSTANT(LENGTH(GINF)); /* Constant COMP length           
*                                                                @LZA*/         
*/*     Function code constants                                  @LZA*/         
* DECLARE                                                                       
*  GINF_FUNC_EIM FIXED(16) CONSTANT(1),/* Get EIM information    @LZA*/         
*  GINF_FUNC_REALM FIXED(16) CONSTANT(2),/* Get REALM info       @MXA*/         
*                                                                               
*/*     Option value constants                                   @LZA*/         
*  GINF_OPT1    FIXED(16) CONSTANT(1), /* Varies with function   @LZA*/         
*  GINF_OPT2    FIXED(16) CONSTANT(2), /* Varies with function   @LZA*/         
*  GINF_OPT3    FIXED(16) CONSTANT(3); /* Varies with function   @LZA*/         
*                                                                               
*/***************************************************************@LZA*/         
*                                                                               
* ] PGSN length without function attributes                                     
* %If Translate(IBM_CBGENC) ^= 'YES' %Then                      ]  @NOA         
* %Do;                                                          ]  @NOA         
* DECLARE PGSN_LEN FIXED(31) CONSTANT(OFFSET(PGSN_FUNC_ATTRS@));]  @NOC         
* %End;                                                         ]  @NOA         
* %Else %Do;                                                    ]  @NOA         
* DECLARE PGSN_LEN FIXED(31) CONSTANT( OFFSET(PGSN_FUNC_ATTRS@)                 
*                                    - OFFSET(COMP_SERVR_PARMS)                 
*                                    );                         ]  @NOC         
* %End;                                                         ]  @NOA         
*                                                                               
* ] PGSN length with function attributes                                        
* DECLARE PGSN_LEN_WITH_ATTRS FIXED(31) CONSTANT(LENGTH(PGSN)); ]  @NOA         
*                                                                               
*/********************************************************************/         
*/*                PGSN sub-declares                                 */         
*/********************************************************************/         
*/********************************************************************/         
*/* Constant values for the function code pointed to by PGSN_FUNC@.  */         
*/********************************************************************/         
* ] Initialize program signing                                                  
* DECLARE PGSN_FC_SIGINIT  Fixed(16) constant(1);               ]  @MMA         
*                                                                               
* ] Sign intermediate program data                                              
* DECLARE PGSN_FC_SIGUPDATE Fixed(16) constant(2);              ]  @MMA         
*                                                                               
* ] Finalize Program Signature                                                  
* DECLARE PGSN_FC_SIGFINAL Fixed(16) constant(3);               ]  @MMA         
*                                                                               
* ] Terminate signature operation                                               
* DECLARE PGSN_FC_SIGCLEAN Fixed(16) constant(4);               ]  @MMA         
*                                                                               
* ] Initialize signature verification                                           
* DECLARE PGSN_FC_VERINIT  Fixed(16) constant(5);               ]  @MMA         
*                                                                               
* ] Digest intermediate program data                                            
* DECLARE PGSN_FC_VERUPDATE Fixed(16) constant(6);              ]  @MMA         
*                                                                               
* ] Perform final verification                                                  
* DECLARE PGSN_FC_VERFINAL Fixed(16) constant(7);               ]  @MMA         
*                                                                               
* ] Terminate verification operation                                            
* DECLARE PGSN_FC_VERCLEAN Fixed(16) constant(8);               ]  @MMA         
*                                                                               
* ] Interrogate Directive                                                       
* DECLARE PGSN_FC_VERINTER Fixed(16) constant(9);               ]  @MMA         
*                                                                               
*/********************************************************************/         
*/* Constant values for the function-specific parameter list         */         
*/* eyecatchers.                                                     */         
*/********************************************************************/         
* DECLARE PGSN_SIGINIT   Char(8) constant('SIGINIT ');          ]  @MMA         
* DECLARE PGSN_SIGUPDATE Char(8) constant('SIGUPDAT');          ]  @MMA         
* DECLARE PGSN_SIGFINAL  Char(8) constant('SIGFINAL');          ]  @MMA         
* DECLARE PGSN_SIGCLEAN  Char(8) constant('SIGCLEAN');          ]  @MMA         
* DECLARE PGSN_VERINIT   Char(8) constant('VERINIT ');          ]  @MMA         
* DECLARE PGSN_VERUPDATE Char(8) constant('VERUPDAT');          ]  @MMA         
* DECLARE PGSN_VERFINAL  Char(8) constant('VERFINAL');          ]  @MMA         
* DECLARE PGSN_VERCLEAN  Char(8) constant('VERCLEAN');          ]  @MMA         
* DECLARE PGSN_VERINTER  Char(8) constant('VERINTER');          ]  @MMA         
*                                                                               
*/********************************************************************/         
*/*  Function-specific parameter lists                               */         
*/********************************************************************/         
*                                                                               
*/********************************************************************/         
*/*  Function code 1: Initialize Program Signing (SIGINIT)           */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_SI_PLIST         Based,      ]                           @MMA         
*   5 PGSN_SI_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'SIGINIT '   @MMA         
*   5 PGSN_SI_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_SI_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] Length of the name of the              
*                                      ] program being signed.  The             
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_SI_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_SI_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_SI_PGM_NAME@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of the name of the             
*                                      ] program being signed.     @MMA         
*   5 PGSN_SI_KEYRING_NAME@  Ptr(64),  ] (INPUT)                                
*    7 PGSN_SI_KEYRING_NAME@H Fixed(32),] High-order address       @MMA         
*    7 PGSN_SI_KEYRING_NAME@L Ptr(31),  ] Low-order address        @MMA         
*                                      ] Address of the name of the             
*                                      ] SAF key ring or PKCS #11 token         
*                                      ] that contains the certificates         
*                                      ] to be used for signing. The            
*                                      ] address is meaningful only if          
*                                      ] PGSN_KEYRING_LEN is non-zero.          
*                                      ] The name                               
*                                      ] that this address points to            
*                                      ] has the following syntax:              
*                                      ] owning-userid/                         
*                                      ]   ring-or-token-name                   
*                                      ] The owning-userid (but not the         
*                                      ] slash) may be omitted if the           
*                                      ] key ring is owned by the user          
*                                      ] ID associated with the calling         
*                                      ] application. If a PKCS #11             
*                                      ] token is to be used, specify           
*                                      ] *TOKEN* for the owning user ID         
*                                      ]                           @N4C         
*   5 PGSN_SI_KEYRING_LEN    Fixed(32),] (INPUT)                                
*                                      ] Length of the name of the              
*                                      ] SAF key ring or PKCS #11 token         
*                                      ] that contains the certificates         
*                                      ] to be used for signing. Set            
*                                      ] this field to binary zero to           
*                                      ] have the security manager              
*                                      ] determine the key ring to use.         
*                                      ]                           @MMA         
*   5 PGSN_SI_SIGINFO_LEN    Fixed(32),] (OUTPUT)                               
*                                      ] Length of the ZOSSignatureInfo         
*                                      ] structure which will be                
*                                      ] returned as part of the                
*                                      ] signature area structure in            
*                                      ] the SIGFINAL call.        @MMA         
*   5 PGSN_SI_DIGEST_ALG     Fixed(8); ] (INPUT)                                
*                                      ] Numeric value indicating what          
*                                      ] message digest algorithm to            
*                                      ] use for the signing.                   
*                                      ]  0 - Let the security product          
*                                      ]      determine the algorithm           
*                                      ]  1 - Use SHA-256          @MOC         
*                                      ]  2 - Use SHA-512          @NOC         
*                                                                               
*/********************************************************************/         
*/*  Function code 2: Sign intermediate program data (SIGUPDAT)      */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_SU_PLIST         Based,      ]                           @MMA         
*   5 PGSN_SU_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'SIGUPDAT'   @MMA         
*   5 PGSN_SU_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_SU_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] Length of the name of the              
*                                      ] program being signed.  The             
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_SU_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_SU_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_SU_PGM_NAME@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of the name of the             
*                                      ] program being signed.     @MMA         
*   5 PGSN_SU_PGM_DATA@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_SU_PGM_DATA@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_SU_PGM_DATA@L    Ptr(31);  ] Low-order address         @MMA         
*                                      ] Address of a structure                 
*                                      ] specifying the intermediate            
*                                      ] range(s) of data to sign.              
*                                      ] The structure is mapped by             
*                                      ] PGSN_DATA_RANGE.          @MMA         
*                                                                               
*/********************************************************************/         
*/*  Function code 3: Finalize Program Signature (SIGFINAL)          */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_SF_PLIST         Based,      ]                           @MMA         
*   5 PGSN_SF_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'SIGFINAL'   @MMA         
*   5 PGSN_SF_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_SF_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] Length of the name of the              
*                                      ] program being signed.  The             
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_SF_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_SF_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_SF_PGM_NAME@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of the name of the             
*                                      ] program being signed.     @MMA         
*   5 PGSN_SF_PGM_DATA@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_SF_PGM_DATA@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_SF_PGM_DATA@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of a structure                 
*                                      ] specifying the final                   
*                                      ] range(s) of data to sign.              
*                                      ] The structure is mapped by             
*                                      ] PGSN_DATA_RANGE.          @MMA         
*   5 PGSN_SF_SIG_AREA@      Ptr(64),  ] (OUTPUT)                               
*    7 PGSN_SF_SIG_AREA@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_SF_SIG_AREA@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of allocated signature         
*                                      ] structure.                @MMA         
*   5 PGSN_SF_SUBPOOL        Fixed(8); ] (INPUT)                                
*                                      ] Subpool to be used for alloc-          
*                                      ] ation of the signature area            
*                                      ] data structure. For problem            
*                                      ] state callers, this must be a          
*                                      ] value in the range 1-127. @PEC         
*                                                                               
*/********************************************************************/         
*/* Mapping for the signature area pointed to by PGSN_SF_SIG_AREA@.  */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_SIG_AREA         Based,      ]                           @MMA         
*   5 PGSN_SIG_AREA_FIXED,             ]                           @MMA         
*    7 PGSN_SIG_EYE          Char(4),  ] Eyecatcher = 'PSSD'       @MMA         
*    7 PGSN_SIG_AREA_LEN     Fixed(32),] Length of entire area     @MMA         
*    7 PGSN_SIG_SUBPOOL      Fixed(8), ] Subpool used to obtain the             
*                                      ] area storage              @MMA         
*    7 *                     Char(3),  ] Reserved                  @MMA         
*    7 PGSN_SIG_SIGINFO_LEN  Fixed(32),] Length of ZOSSignatureInfo             
*                                      ] structure                 @MMA         
*   5 PGSN_SIG_AREA_VAR,               ]                           @MMA         
*    7 PGSN_SIG_SIGINFO      Char(*);  ] ZOSSignatureInfo structure to          
*                                      ] be included in the signed              
*                                      ] program object.           @MMA         
* Declare                                                                       
*   PGSN_SIG_EYEC   Char(4)            ] Eyecatcher for PGSN_SIG_EYE            
*                   constant('PSSD');  ]                           @MMA         
*                                                                               
*/********************************************************************/         
*/*  Function code 4: Terminate signature operation (SIGCLEAN)       */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_SC_PLIST         Based,      ]                           @MMA         
*   5 PGSN_SC_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'SIGCLEAN'   @MMA         
*   5 PGSN_SC_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_SC_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] Length of the name of the              
*                                      ] program being signed.  The             
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_SC_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_SC_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_SC_PGM_NAME@L    Ptr(31);  ] Low-order address         @MMA         
*                                      ] Address of the name of the             
*                                      ] program being signed.     @MMA         
*                                                                               
*/********************************************************************/         
*/*  Function code 5: Initialize signature verification (VERINIT)    */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_VI_PLIST         Based,      ]                           @MMA         
*   5 PGSN_VI_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'VERINIT '   @MMA         
*   5 PGSN_VI_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_VI_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] For problem state callers,             
*                                      ] length of the name of the              
*                                      ] program being verified. The            
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_VI_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VI_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VI_PGM_NAME@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] For problem state callers,             
*                                      ] address of the name of the             
*                                      ] program being verified.   @MMA         
*   5 PGSN_VI_CONTEXT@       Ptr(64),  ] (OUTPUT)                               
*    7 PGSN_VI_CONTEXT@H     Fixed(32),] High-order address        @MMA         
*    7 PGSN_VI_CONTEXT@L     Ptr(31),  ] Low-order address         @MMA         
*                                      ] For supervisor callers,                
*                                      ] address of the allocated               
*                                      ] verify context.           @MMA         
*   5 PGSN_VI_PGM_DATA@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VI_PGM_DATA@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VI_PGM_DATA@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of a structure                 
*                                      ] specifying the initial                 
*                                      ] range(s) of data                       
*                                      ] to verify. The structure               
*                                      ] is mapped by PGSN_DATA_RANGE.          
*                                      ]                           @N4C         
*   5 PGSN_VI_SIGINFO@       Ptr(64),  ] (INPUT)                   @MOA         
*    7 PGSN_VI_SIGINFO@H     Fixed(32),] High-order address        @MOA         
*    7 PGSN_VI_SIGINFO@L     Ptr(31),  ] Low-order address                      
*                                      ] Address of the                         
*                                      ] ZOSSignatureInfo                       
*                                      ] structure extracted from the           
*                                      ] program object being verified.         
*                                      ]                           @N4C         
*   5 PGSN_VI_SIGINFO_LEN    Fixed(32),] (INPUT)                                
*                                      ] Length of the ZOSSignatureInfo         
*                                      ] structure extracted from the           
*                                      ] program object being verified.         
*                                      ]                           @MOA         
*   5 PGSN_VI_DIGEST_ALG     Fixed(8); ] (INPUT)                                
*                                      ] Numeric value indicating               
*                                      ] what message digest algorithm          
*                                      ] to use for the verification.           
*                                      ] Zero means use the value               
*                                      ] contained in the                       
*                                      ] zOSSignatureInfo structure.            
*                                      ] This is the only supported             
*                                      ] value.                    @MOC         
*                                                                               
*/********************************************************************/         
*/*  Function code 6: Digest intermediate program data (VERUPDAT)    */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_VU_PLIST         Based,      ]                           @MMA         
*   5 PGSN_VU_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'VERUPDAT'   @MMA         
*   5 PGSN_VU_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_VU_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] For problem state callers,             
*                                      ] length of the name of the              
*                                      ] program being verified. The            
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_VU_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VU_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VU_PGM_NAME@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] For problem state callers,             
*                                      ] address of the name of the             
*                                      ] program being verified.   @MMA         
*   5 PGSN_VU_CONTEXT@       Ptr(64),  ] (INPUT)                                
*    7 PGSN_VU_CONTEXT@H     Fixed(32),] High-order address        @MMA         
*    7 PGSN_VU_CONTEXT@L     Ptr(31),  ] Low-order address         @MMA         
*                                      ] For supervisor callers,                
*                                      ] address of the allocated               
*                                      ] verify context.           @MMA         
*   5 PGSN_VU_PGM_DATA@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VU_PGM_DATA@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VU_PGM_DATA@L    Ptr(31);  ] Low-order address         @MMA         
*                                      ] Address of a structure                 
*                                      ] specifying the intermediate            
*                                      ] range(s) of data to verify.            
*                                      ] The structure is mapped by             
*                                      ] PGSN_DATA_RANGE.          @MMA         
*                                                                               
*/********************************************************************/         
*/*  Function code 7: Perform final verification (VERFINAL)          */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_VF_PLIST         Based,      ]                           @MMA         
*   5 PGSN_VF_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'VERFINAL'   @MMA         
*   5 PGSN_VF_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_VF_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] For problem state callers,             
*                                      ] length of the name of the              
*                                      ] program being verified. The            
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_VF_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VF_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VF_PGM_NAME@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] For problem state callers,             
*                                      ] address of the name of the             
*                                      ] program being verified.   @MMA         
*   5 PGSN_VF_CONTEXT@       Ptr(64),  ] (INPUT)                                
*    7 PGSN_VF_CONTEXT@H     Fixed(32),] High-order address        @MMA         
*    7 PGSN_VF_CONTEXT@L     Ptr(31),  ] Low-order address         @MMA         
*                                      ] For supervisor callers,                
*                                      ] address of the allocated               
*                                      ] verify context.           @MMA         
*   5 PGSN_VF_PGM_DATA@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VF_PGM_DATA@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VF_PGM_DATA@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of a structure                 
*                                      ] specifying the final                   
*                                      ] range(s) of data to verify.            
*                                      ] The structure is mapped by             
*                                      ] PGSN_DATA_RANGE.          @MMA         
*   5 PGSN_VF_LOGSTRING@     Ptr(64),  ] (INPUT)                                
*    7 PGSN_VF_LOGSTRING@H   Fixed(32),] High-order address        @MMA         
*    7 PGSN_VF_LOGSTRING@L   Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of an area that                
*                                      ] consists of a 1 byte length            
*                                      ] field followed by character            
*                                      ] data (up to 255 bytes) to be           
*                                      ] included in any audit records          
*                                      ] that are created. If the               
*                                      ] address or the length byte             
*                                      ] is 0, this parameter is                
*                                      ] ignored.                  @MMA         
*   5 PGSN_VF_ICHSFENT@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VF_ICHSFENT@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VF_ICHSFENT@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] For supervisor callers,                
*                                      ] address of the FASTAUTH entity         
*                                      ] parameter mapping (previously          
*                                      ] retrieved from RACF by                 
*                                      ] Contents Supervision).    @MMA         
*   5 PGSN_VF_SIGINFO@       Ptr(64),  ] (INPUT)                   @PEC         
*    7 PGSN_VF_SIGINFO@H     Fixed(32),] High-order address        @PEC         
*    7 PGSN_VF_SIGINFO@L     Ptr(31),  ] Low-order address         @PEC         
*                                      ] Address of the                         
*                                      ] ZOSSignatureInfo                       
*                                      ] structure extracted from the           
*                                      ] program object being verified.         
*                                      ] Ignored if VERINIT was called.         
*                                      ]                           @N4C         
*   5 PGSN_VF_SIGINFO_LEN    Fixed(32);] (INPUT)                                
*                                      ] Length of the ZOSSignatureInfo         
*                                      ] structure extracted from the           
*                                      ] program object being verified.         
*                                      ] Ignored if VERINIT was called.         
*                                      ]                           @MOC         
*                                                                               
*/********************************************************************/         
*/*  Function code 8: Terminate verification operation (VERCLEAN)    */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_VC_PLIST         Based,      ]                           @MMA         
*   5 PGSN_VC_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'VERCLEAN'   @MMA         
*   5 PGSN_VC_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 PGSN_VC_PGM_NAME_LEN   Fixed(32),] (INPUT)                                
*                                      ] For problem state callers,             
*                                      ] length of the name of the              
*                                      ] program being verified. The            
*                                      ] length must not exceed 8               
*                                      ] characters.               @MMA         
*   5 PGSN_VC_PGM_NAME@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_VC_PGM_NAME@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_VC_PGM_NAME@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] For problem state callers,             
*                                      ] address of the name of the             
*                                      ] program being verified.                
*   5 PGSN_VC_CONTEXT@       Ptr(64),  ] (INPUT)                   @MMA         
*    7 PGSN_VC_CONTEXT@H     Fixed(32),] High-order address        @MMA         
*    7 PGSN_VC_CONTEXT@L     Ptr(31);  ] Low-order address         @MMA         
*                                      ] For supervisor callers,                
*                                      ] address of the allocated               
*                                      ] verify context.           @MMA         
*                                                                               
*/********************************************************************/         
*/*  Function code 9: Interrogate Directive (VERINTER)               */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_ID_PLIST         Based,      ]                           @MMA         
*   5 PGSN_ID_EYE            Char(8),  ] (INPUT)                                
*                                      ] Eyecatcher = 'VERINTER'   @MMA         
*   5 PGSN_ID_VERS           Fixed(32),] (INPUT) Version           @MMA         
*   5 *                      Char(4),  ] (INPUT) Reserved          @MMA         
*   5 PGSN_ID_ICHSFENT@      Ptr(64),  ] (INPUT)                                
*    7 PGSN_ID_ICHSFENT@H    Fixed(32),] High-order address        @MMA         
*    7 PGSN_ID_ICHSFENT@L    Ptr(31),  ] Low-order address         @MMA         
*                                      ] For supervisor callers,                
*                                      ] address of the FASTAUTH entity         
*                                      ] parameter mapping (previously          
*                                      ] retrieved from RACF by                 
*                                      ] Contents Supervision).    @MMA         
*   5 PGSN_ID_LOGSTRING@     Ptr(64),  ] (INPUT)                                
*    7 PGSN_ID_LOGSTRING@H   Fixed(32),] High-order address        @MMA         
*    7 PGSN_ID_LOGSTRING@L   Ptr(31),  ] Low-order address         @MMA         
*                                      ] Address of an area that                
*                                      ] consists of a 1 byte length            
*                                      ] field followed by character            
*                                      ] data (up to 255 bytes) to be           
*                                      ] included in any audit records          
*                                      ] that are created. If the               
*                                      ] address or the length byte             
*                                      ] is 0, this parameter is                
*                                      ] ignored.                  @MMA         
*   5 PGSN_ID_EVENT          Fixed(8); ] (INPUT)                                
*                                      ] Constant indicating what               
*                                      ] signature verification event           
*                                      ] was detected by the loader.            
*                                      ] See constant values defined            
*                                      ] below.                    @MMA         
*                                                                               
*/********************************************************************/         
*/* Constant values for the event code in PGSN_ID_EVENT              */         
*/********************************************************************/         
* Declare                                                                       
*   PGSN_ID_EVENT_NOSIG    Fixed(8)    ] Digital signature processing           
*                          constant(1);] is required for this module            
*                                      ] (directive in ICHSFENT is non-         
*                                      ] 0). No signature exists.  @MMA         
* Declare                                                                       
*   PGSN_ID_EVENT_BADMOD   Fixed(8)    ] Digital signature is required          
*                          constant(2);] for this module. The PDSE              
*                                      ] directory entry for the                
*                                      ] module indicates it is signed,         
*                                      ] but the digital signature is           
*                                      ] missing.                  @MMA         
*                                                                               
*/********************************************************************/         
*/* Mapping for the data range structure for signature generation    */         
*/* and verification.                                                */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_DATA_RANGE       Based,      ]                           @MMA         
*   5 PGSN_DATA_HEADER,                ] Fixed-length portion      @MMA         
*    7 PGSN_DATA_ALET        Fixed(32),] The ALET for the address space         
*                                      ] containing the data       @MMA         
*    7 PGSN_DATA_NUM_RANGES  Fixed(32),] The number of data ranges in           
*                                      ] the following array       @MMA         
*   5 PGSN_DATA_RANGE_LIST(*),         ] Variable-length portion   @MMA         
*    7 PGSN_DATA_ENTRY,                ] A single entry            @MMA         
*     8 PGSN_DATA_START@    Ptr(64),   ]                                        
*      9 PGSN_DATA_START@H Fixed(32),  ] High-order address        @MMA         
*      9 PGSN_DATA_START@L Ptr(31),    ] Low-order address         @MMA         
*                                      ] Address of the first byte in           
*                                      ] the data range            @MMA         
*     8 PGSN_DATA_END@      Ptr(64),   ]                                        
*      9 PGSN_DATA_END@H   Fixed(32),  ] High-order address        @MMA         
*      9 PGSN_DATA_END@L   Ptr(31);    ] Low-order address         @MMA         
*                                      ] Address of the last byte in            
*                                      ] the data range            @MMA         
* Declare                                                                       
*   PGSN_DATA_NUM_RANGES_MAX Fixed(32) ] Maximum number of entries in           
*                         Constant(16);] PGSN_DATA_RANGE_LIST      @MMA         
*                                                                               
*/********************************************************************/         
*/* Mapping of the ZOSSignatureInfo structure when:                  */         
*/* - PGSN_NUM_PARMS@ points to a full word set to 0x0000000B (11)   */         
*/* - PGSN_FUNC_ADDRS@ points to a full word set to 0x40000000       */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 PGSN_SIGNINFO_KDSA        Based,    ]                         @NOA         
*    5 PGSN_SINFO_SIG_RVAL     Char(80), ] Signature R value       @NOA         
*    5 PGSN_SINFO_SIG_SVAL     Char(80), ] Signature S value       @NOA         
*    5 PGSN_SINFO_DIGEST       Char(64), ] Digest value of input data           
*                                        ] ranges                  @NOA         
*    5 PGSN_SINFO_SUBJ_KEYID   Char(20), ] Subject Key ID value    @NOA         
*    5 PGSN_SINFO_CERT_FPRT    Char(32), ] Signing cert fingerprint@NOA         
*    5 PGSN_SINFO_DIGEST_ALG   Fixed(8), ] Digest algorithm used:               
*                                        ] 2 = SHA2-512            @NOA         
*    5 PGSN_SINFO_SIGN_ALG     Fixed(8); ] Signature algorithm used:            
*                                        ] 2 = SHA512ECDSA         @NOA         
*                                                                               
* ] Digest algorithm constant to represent SHA2-512 for use with                
* ] PGSN_SINFO_DIGEST_ALG and PGSN_SI_DIGEST_ALG                                
* Dcl PGSN_SINFO_DIGEST_ALG_SHA2_512   Fixed(8) Constant(2);     ] @NOA         
* ] Signature algorithm constant to represent ECDSA with SHA2-512               
* ] for use with PGSN_SINFO_DIGEST_ALG                                          
* Dcl PGSN_SINFO_SIGN_ALG_SHA512_ECDSA Fixed(8) Constant(2);     ] @NOA         
*                                                                               
*/********************************************************************/         
*/*                XPWD sub-declares                                 */         
*/********************************************************************/         
*                                                                               
* DECLARE                                                                       
*  XPWD_LEN    FIXED(31) CONSTANT(LENGTH(XPWD)); /* XPWD length  @NEA*/         
*                                                                               
*/********************************************************************/         
*/* Constant values for the function code pointed to by XPWD_FUNC@.  */         
*/********************************************************************/         
* ] Initialize program signing                                                  
* DECLARE XPWD_FUNC_VERIFY   Fixed(16) constant(1);              ] @NEA         
*                                                                               
* ] Sign intermediate program data                                              
* DECLARE XPWD_FUNC_GENERATE Fixed(16) constant(2);              ] @NEA         
*                                                                               
*/********************************************************************/         
*/* R_Password function code 1: Verify password or phrase        @NFA*/         
*/********************************************************************/         
* DECLARE                                                                       
*  1 XPWD_VFY_PLIST        Based,      ]                                        
*   5 XPWD_VFY_OPTIONS       Fixed(32);] (INPUT) Any of following: @0CC         
*                                      ] X'00000000' normal vfy                 
*                                      ] X'80000000' extended vfy  @NFA         
*                                      ] X'40000000' fast-fail     @0CA         
*                                                                               
*/********************************************************************/         
*/* R_Password function code 2: Generate encrypted values            */         
*/********************************************************************/         
* DECLARE                                                                       
*  1 XPWD_GEN_PLIST        Based,      ]                           @NEA         
*   5 *                      Fixed(32),] (INPUT) Reserved                       
*                                      ] Must be X'00000000'       @NEA         
*   5 XPWD_GEN_CRYPT1_LEN    Fixed(32),] (INPUT/OUTPUT)                         
*                                      ] Length of first                        
*                                      ] encrypted value           @NEA         
*   5 *                      Fixed(32),] (INPUT) Reserved                       
*                                      ] Must be X'00000000'       @NEA         
*   5 XPWD_GEN_CRYPT1@       Ptr(31),  ] (INPUT)                                
*                                      ] Address of the first                   
*                                      ] encrypted value           @NEA         
*   5 XPWD_GEN_CRYPT2_LEN    Fixed(32),] (INPUT/OUTPUT)                         
*                                      ] Length of second                       
*                                      ] encrypted value           @NEA         
*   5 *                      Fixed(32),] (INPUT) Reserved                       
*                                      ] Must be X'00000000'       @NEA         
*   5 XPWD_GEN_CRYPT2@       Ptr(31);  ] (INPUT)                                
*                                      ] Address of the second                  
*                                      ] encrypted value           @NEA         
*/********************************************************************/         
*/*                SMOP sub-declares                                 */         
*/********************************************************************/         
* DECLARE                                                                       
*  SMOP_LEN FIXED(31) CONSTANT(LENGTH(SMOP)); /* SMOP length    @NGA */         
*                                                                               
*/********************************************************************/         
*/* Constant values for the function code pointed to by SMOP_FUNC@.  */         
*/********************************************************************/         
* ] Process the supplied XML                                                    
* DECLARE SMOP_FC_EXECUTE  Fixed(32) constant(1);               ]  @NGA         
* DECLARE SMOP_FC_LAST     Fixed(32) constant(1);               ]  @NGA         
*                                                                               
* ] Options                                                                     
* DECLARE SMOP_OPT_EXECUTE     Fixed(32) constant(1);          ]  @NGA          
* DECLARE SMOP_OPT_PRECHECK    Fixed(32) constant(2);          ]  @NGA          
* DECLARE SMOP_OPT_STOPONERROR Fixed(32) constant(4);          ]  @NGA          
* DECLARE SMOP_OPT_CLRSENSTV   Fixed(32) constant(8);          ]  @NIA          
* DECLARE SMOP_OPT_LAST        Fixed(32) constant(8);          ]  @NGA          
*                                                                               
