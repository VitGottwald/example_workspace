         MACRO                                                                  
         IST6MCSE &CONVID=,&QUALIFY=,&AREA=,&RECLEN=,&OPTCD=,&VTRINA=, X        
               &ECB=,&EXIT=,&BRANCH=,&CRYPT=,&TYPE=,&SENSE=,&VTRINL=,  X        
               &CONMODE=,&CONXMOD=,&INVALP1=,&INVALP2=,&VTROUTA=,      X        
               &VTROUTL=                                           @D1C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: IST6MCSE                                          */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: CONTROL = SEND PROCESSOR                    */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1994.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR PROCESSING THE                 */         
.* /*      CONTROL=SEND PARAMETER ON THE APPCCMD MACRO.              */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS:                                              */         
.* /*      IST6MCUA,IST6MCUP,IST6MCUC,IST6MCUI,IST6MCER              */         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*                                                                */         
.* /* $MAC(IST6MCSE),COMP(API),PROD(VTAM): SEND PROCESSOR            */         
.* /*                                                                */         
.* /*  FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS         */         
.* /*  ---- -------- ------- ------ ------  -----------------        */         
.* /*  $B1= AE@@@AMS HVT3401 890707 460025: SELECTIVE DATA ENCRYPTION*/         
.* /*  $BB= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION         */         
.* /*  $I1= FF@@@MST APPCFDX 911118 879315: APPC Full-Duplex support */         
.* /*  $L1= KA@@@PLD APPCRR  930726 446638: DCE Security Services    */         
.* /*  $Y1= P114819  APPCRR  940519 576146: DCE Security Services    */         
.* /*  $L2= KA@DR006 APPCRR  940713 576146: Vector Format            */         
.* /*  $D1= ID@@@MST FPAPI   941005 510689: Fast Path API for APPC   */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
         GBLB  &ISTGEN                                                          
         GBLB  &ISTSE                                                           
         AIF   (&ISTSE EQ 1).SEINVKW                                            
*                                                                               
*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM                              
*                                                                               
*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"               
*                                                                               
*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1993.                      
*             ALL RIGHTS RESERVED.                                              
*                                                                               
*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -                         
*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY                      
*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.                          
*                                                                               
*             SEE COPYRIGHT INSTRUCTIONS.                                       
*                                                                               
&ISTSE   SETB  1                                                                
.SEINVKW ANOP                                                                   
         IST6MCUC SEND,CONTROL,INVALKW=&INVALP1  CHECK INVALIDS    @I1C         
         IST6MCUC SEND,CONTROL,INVALKW=&INVALP2  CHECK INVALIDS    @I1A         
.SEID    ANOP                                                                   
         AIF   ('&CONVID' EQ '').SEQFY                                          
         IST6MCUA KWVAL=&CONVID,LOC=RPL6CNVD-ISTRPL6X,BASEREG=14,      X        
               KW=CONVID                                                        
.*                                              PUT CONVID IN APPC AREA         
.SEQFY   ANOP                                                                   
         AIF   ('&QUALIFY' EQ '').SETYPE                                        
.SEQFY1  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'FLUSH').SEQFY2                                   
         IST6MCUC FLUSH,QUALIFY,INVALKW=(TYPE=&TYPE,SENSE=&SENSE,AREA=&X        
               AREA,RECLEN=&RECLEN,CRYPT=&CRYPT)                   @B1C         
         AIF   (NOT &ISTGEN).SECMKW2                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6FLSH                                   
*                                       PUT FLUSH CODE IN APPC AREA             
         AGO   .SECMKW2                                                         
.SEQFY2  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'CONFIRM').SEQFY3                                 
         IST6MCUC CONFIRM,QUALIFY,INVALKW=(TYPE=&TYPE,SENSE=&SENSE,AREAX        
               =&AREA,RECLEN=&RECLEN,CRYPT=&CRYPT)                 @B1C         
         AIF   (NOT &ISTGEN).SECMKW2                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6CFRM                                   
*                                       PUT CONFIRM CODE IN APPC AREA           
         AGO   .SECMKW2                                                         
.SEQFY3  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'RQSEND').SEQFY4                                  
         IST6MCUC RQSEND,QUALIFY,INVALKW=(TYPE=&TYPE,SENSE=&SENSE,AREA=X        
               &AREA,RECLEN=&RECLEN,CRYPT=&CRYPT)                  @B1C         
         AIF   (NOT &ISTGEN).SECMKW2                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6RQSD                                   
*                                       PUT RQSEND CODE IN APPC AREA            
         AGO   .SECMKW2                                                         
.SEQFY4  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'CONFRMD').SEQFY5                                 
         IST6MCUC CONFRMD,QUALIFY,INVALKW=(TYPE=&TYPE,SENSE=&SENSE,AREAX        
               =&AREA,RECLEN=&RECLEN,CRYPT=&CRYPT)                 @B1C         
         AIF   (NOT &ISTGEN).SECMKW2                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6CFMD                                   
*                                       PUT CONFRMD CODE IN APPC AREA           
         AGO   .SECMKW2                                                         
.SEQFY5  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'ERROR').SEQFY6                                   
         IST6MCUC ERROR,QUALIFY,INVALKW=(CRYPT=&CRYPT)             @B1A         
         AIF   (NOT &ISTGEN).SETYPE                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6ERR                                    
*                                       PUT ERROR CODE IN APPC AREA             
         AGO   .SETYPE                                                          
.SEQFY6  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'DATA').SEQFY7                                    
         IST6MCUC DATA,QUALIFY,INVALKW=(TYPE=&TYPE,SENSE=&SENSE)                
         AIF   (NOT &ISTGEN).SECKPT                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DATA                                   
*                                       PUT DATA CODE IN APPC AREA              
         AGO   .SEAREA                                                          
.SEQFY7  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'DATAFLU').SEQFY8                                 
         IST6MCUC DATAFLU,QUALIFY,INVALKW=(TYPE=&TYPE,SENSE=&SENSE)             
         AIF   (NOT &ISTGEN).SECKPT                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DFLU                                   
*                                       PUT DATAFLU CODE IN APPC AREA           
         AGO   .SEAREA                                                          
.SEQFY8  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'DATACON').SEQFY9                                 
         IST6MCUC DATACON,QUALIFY,INVALKW=(TYPE=&TYPE,SENSE=&SENSE)             
         AIF   (NOT &ISTGEN).SECKPT                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DCON                                   
*                                       PUT DATACON CODE IN APPC AREA           
         AGO   .SEAREA                                                          
.SEQFY9  ANOP                                                                   
         IST6MCER 5,QUALIFY,&QUALIFY                                            
.SETYPE  ANOP                                                                   
         AIF   ('&TYPE' EQ '').SESNS                                            
         AIF   ('&TYPE' NE 'PROGRAM').SETYPE1                                   
         AIF   (NOT &ISTGEN).SESNS                                              
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6TBIT                             
*                                                TURN OFF TYPE BITS             
         OI    RPL6FLG2-ISTRPL6X(14),RPL6PRGM    SET TYPE TO PROGRAM            
         AGO   .SESNS                                                           
.SETYPE1 ANOP                                                                   
         AIF   ('&TYPE' NE 'SERVICE').SETYPE2                                   
         AIF   (NOT &ISTGEN).SESNS                                              
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6TBIT                             
*                                                TURN OFF TYPE BITS             
         OI    RPL6FLG2-ISTRPL6X(14),RPL6SVC     SET TYPE TO SERVICE            
         AGO   .SESNS                                                           
.SETYPE2 ANOP                                                                   
         AIF   ('&TYPE' NE 'USER').SETYPE3                                      
         AIF   (NOT &ISTGEN).SESNS                                              
         OI    RPL6FLG2-ISTRPL6X(14),RPL6USER    SET TYPE TO USER               
         AGO   .SESNS                                                           
.SETYPE3 ANOP                                                                   
         IST6MCER 5,TYPE,&TYPE                                                  
.SESNS   ANOP                                                                   
         AIF   ('&SENSE' EQ '').SEAREA                                          
         IST6MCUI KW=SENSE,KWVAL=&SENSE,LEN=4,                         X        
               LOC=RPL6SNSO-ISTRPL6X,BASEREG=14                                 
.*                                          PUT SENSE IN APPC AREA              
.SEAREA  ANOP                                                                   
         AIF   ('&AREA' EQ '').SERLEN                                           
         IST6MCUA KWVAL=&AREA,LOC=RPLAREA-IFGRPL,BASEREG=1,            X        
               KW=DATA_ADDRESS                                                  
.*                                           PUT DATA ADDRESS IN RPL            
.SERLEN  ANOP                                                                   
         AIF   ('&RECLEN' EQ '').SECRYPT                                        
         IST6MCUA KWVAL=&RECLEN,LOC=RPLRLEN-IFGRPL,BASEREG=1,          X        
               KW=DATA_LENGTH                                                   
.*                                           PUT DATA LENGTH IN RPL             
.SECRYPT ANOP                                                    @B1A           
         AIF   ('&CRYPT' EQ '').SECKPT CRYPT PARAMETER?          @B1A           
         AIF   ('&CRYPT'(1,3) EQ 'YES').SECRYES CRYPT REQUEST?   @B1A           
         AIF   ('&CRYPT'(1,2) EQ 'NO').SECRYNO CRYPT NON-REQ.?   @B1A           
         MNOTE  4,'CRYPT=&CRYPT INVALID-IGNORED'                 @B1A           
         AGO   .SECKPT                                           @B1A           
.SECRYES ANOP                                                    @B1A           
         OI    RPLEXTD1-IFGRPL(1),X'08'  SET CRYPT REQUEST ON    @B1A           
         AGO   .SECKPT                                           @B1A           
.SECRYNO ANOP                                                    @B1A           
         NI    RPLEXTD1-IFGRPL(1),X'F7'  SET CRYPT OFF           @B1A           
.SECKPT  ANOP                                                                   
         AIF   ('&QUALIFY' EQ 'ERROR').SECMKW2                                  
.*                                                                              
.*   QUALIFY=DATA, DATAFLU, DATACON, INVALID QUALIFY                            
.*   OR UNSPECIFIED QUALIFY BRANCHES TO SECMKW1, THE REST OF                    
.*   QUALIFIES BRANCH TO SECMKW2                                                
.*                                                                              
.SECMKW1 ANOP                                                                   
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD PARAMETERX        
               CKBUFF=XBUF         XBUFLST/BUFFLST/NBUFFLST IS VALID            
.*                                 OPTCD PARAMETER                 @D1C         
         AGO   .SEVECT                                             @Y1C         
.SECMKW2 ANOP                                                                   
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD PARAMETERX        
               CKBUFF=NO           BUFFLST/NBUFFLST IS INVALID     @I1C         
.*                                 OPTCD PARAMETER                              
.SEVECT  ANOP                          ENSURE BOTH PARMS CODED OR NOT           
.*                                     CODED                  @L1A @Y1M         
         AIF   (('&VTRINA' EQ '') AND ('&VTRINL' EQ '')).SEVOUT    @D1C         
         AIF   (('&VTRINA' EQ '') OR ('&VTRINL' EQ '')).SEERVI     @D1C         
         IST6MCUA KWVAL=&VTRINA,LOC=RPL6VAIA-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_ADDRESS                      @D1C         
.*                                     STORE VECTOR AREA INPUT ADDRESS          
.*                                                                 @L1A         
         IST6MCUA KWVAL=&VTRINL,LOC=RPL6VAIL-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_LENGTH,LEN=2                 @D1C         
.*                                     STORE VECTOR AREA INPUT LENGTH           
.*                                                                 @L1A         
         AGO   .SEVOUT                                             @D1C         
.SEERVI  ANOP                                                 @L1A @Y1M         
         IST6MCER 13,VTRINA,VTRINL     ONLY ONE PARM CODED         @D1C         
.SEVOUT  ANOP                          ENSURE BOTH PARMS ARE CODED              
.*                                     OR BOTH ARE NOT CODED       @D1A         
         AIF   (('&VTROUTA' EQ '') AND ('&VTROUTL' EQ '')).SEREQ   @D1A         
         AIF   (('&VTROUTA' EQ '') OR ('&VTROUTL' EQ '')).SEERVO   @D1C         
         IST6MCUA KWVAL=&VTROUTA,KW=APPL_TO_VTAM_VECTOR_ADDRESS,       X        
               LOC=RPL6VAOA-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT ADDRESS            
.*                                     IN APPC AREA                @D1A         
         IST6MCUA KWVAL=&VTROUTL,KW=APPL_TO_VTAM_VECTOR_LENGTH,LEN=2,  X        
               LOC=RPL6VAOL-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT LENGTH             
.*                                     IN APPC AREA                @D1A         
         AGO   .SEREQ                                              @D1A         
.SEERVO  ANOP                                                      @D1A         
         IST6MCER 13,VTROUTA,VTROUTL   ONLY ONE PARM CODED         @D1A         
.SEREQ   ANOP                                                                   
         AIF   (NOT &ISTGEN).SEEXIT                                             
         MVI   RPL6REQ-ISTRPL6X(14),RPL6SEND                                    
*                                   PUT SEND REQUEST CODE IN APPC AREA          
.SEEXIT  MEND                                                                   
