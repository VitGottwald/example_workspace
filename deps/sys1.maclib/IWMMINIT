*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMINIT                              -05/15/08-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitor environment initialization            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1993, 2002                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7707                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IWMMINIT allows the caller to supply MVS with some or all of   * 00002100
*      the work request attributes needed for the monitoring          * 00002200
*      environment.  The attributes include userid, transaction name, * 00002300
*      transaction class, source LU, and LU 6.2 token.                * 00002400
*                                                                     * 00002500
*      There are two types of monitoring environments available,      * 00002600
*      management monitoring environments and report-only monitoring  * 00002700
*      environments.  Management monitoring environments provide both * 00002800
*      performance management and performance reporting.  Report-only * 00002900
*      monitoring environments can be used for performance reporting  * 00003000
*      only.                                                          * 00003100
*                                                                     * 00003200
*      Use the REPORTONLY=YES parameter to specify the monitoring     * 00003300
*      environment will be used for reporting purposes only.          * 00003400
*                                                                     * 00003500
*      If you are invoking IWMMINIT with the REPORTONLY=YES           * 00003600
*      parameter, ASSOCIATE=ENCLAVE or ASSOCIATE=ADDRESS_SPACE must   * 00003700
*      be specified to associate the monitoring environment with an   * 00003800
*      enclave or an address space.                                   * 00003900
*                                                                     * 00004000
*      For management monitoring environments, where possible, you    * 00004100
*      should invoke IWMMINIT immediately following IWMCLSFY, and     * 00004200
*      pass the service class for the work request.  Without the      * 00004300
*      associated service class in the monitoring environment, delay  * 00004400
*      information cannot be accumulated and reported accurately.     * 00004500
*                                                                     * 00004600
*      IWMMINIT can be issued multiple times for the same work        * 00004700
*      request.  The first time you invoke IWMMINIT for a work        * 00004800
*      request, you must specify MODE=RESET, otherwise the previous   * 00004900
*      work request's attributes are associated with this work        * 00005000
*      request.  Any subsequent time you invoke IWMMINIT from the     * 00005100
*      same address space for the same monitoring token for the same  * 00005200
*      work request, specify MODE=RETAIN. If the caller subsystem     * 00005300
*      work manager consists of multiple address spaces (with         * 00005400
*      multiple monitoring tokens), the first time IWMMINIT is        * 00005500
*      invoked in each address space for a given work request must    * 00005600
*      specify MODE=RESET.  Any subsequent invocations for the same   * 00005700
*      work request should specify MODE=RETAIN.                       * 00005800
*                                                                     * 00005900
*      If you are invoking IWMMINIT for a management monitoring       * 00006000
*      environment, multiple times for the same work request, only    * 00006100
*      one of the invocations should specify EXSTARTTIME=exstarttime. * 00006200
*      It is up to you to decide at which point in the subsystem work * 00006300
*      manager's processing you consider the real execution start     * 00006400
*      time.                                                          * 00006500
*                                                                     * 00006600
*      Optionally with this macro, you can use the OWNER_TOKEN and    * 00006700
*      OWNER_DATA parameters to specify a token for the user/owner of * 00006800
*      the monitoring environment for your own use.                   * 00006900
*                                                                     * 00007000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00007100
*                                                                     * 00007200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00007300
*                                                                     * 00007400
*01* ENVIRONMENT:                                                     * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*      Dispatchable unit mode: Task or SRB mode.                      * 00007800
*                                                                     * 00007900
*      Cross Memory Mode: Any PASN, any HASN, any SASN.  If the key   * 00008000
*                        specified on IWMMCREA was a user key (8-F),  * 00008100
*                        then primary addressability must be the same * 00008200
*                        as when IWMMCREA was invoked.                * 00008300
*                                                                     * 00008400
*      Minimum authorization: Either problem state or supervisor      * 00008500
*                        state.  PSW key must either be 0 or match    * 00008600
*                        the value supplied on IWMMCREA.              * 00008700
*                                                                     * 00008800
*      AMODE:            31-bit.                                      * 00008900
*                                                                     * 00009000
*      ASC mode:         Primary.  Any P,S,H.                         * 00009100
*                                                                     * 00009200
*      Interrupt status: Enabled for I/O and external interrupts.     * 00009300
*                                                                     * 00009400
*      Locks:            Locked or unlocked                           * 00009500
*                                                                     * 00009600
*      Control parameters: Control parameters must be in the primary  * 00009700
*                        address space.                               * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*01* PROGRAMMING REQUIREMENTS:                                        * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*    1.  The macro IWMYCON must be included to use this macro.        * 00010500
*                                                                     * 00010600
*    2.  The macro IWMPB must be in the library concatenation, since  * 00010700
*        it is included by IWMYCON.                                   * 00010800
*                                                                     * 00010900
*    3.  Note that the high order halfword of register 0, and the     * 00011000
*        reason code variable when specified, may be non-zero and     * 00011100
*        represents diagnostic data which is NOT part of the external * 00011200
*        interface.  The high order halfword should thus be excluded  * 00011300
*        from comparison with the reason code values described above. * 00011400
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00011500
*        be used for this purpose.                                    * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*01* RESTRICTIONS:                                                    * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*    1.  This macro may not be used prior to the completion of WLM    * 00012300
*        address space initialization.                                * 00012400
*                                                                     * 00012500
*    2.  This macro may only be used on MVS/ESA (version 3 or         * 00012600
*        higher), NOT versions 1 or 2 of MVS.                         * 00012700
*                                                                     * 00012800
*    3.  All parameter areas must reside in current primary, except   * 00012900
*        that the TCB (if specified) must reside in current home.     * 00013000
*                                                                     * 00013100
*    4.  Caller is responsible for error recovery.                    * 00013200
*                                                                     * 00013300
*    5.  Only limited checking is done against the input monitoring   * 00013400
*        token.                                                       * 00013500
*                                                                     * 00013600
*    6.  If the key specified on IWMMCREA was a user key (8-F), then  * 00013700
*        the primary addressability must exist to the performance     * 00013800
*        block IWMMCREA obtained.  This condition is satisfied by     * 00013900
*        ensuring that current primary matches primary at the time    * 00014000
*        that IWMMCREA was invoked.  If this service is invoked in a  * 00014100
*        subspace, the condition may be satisfied by ensuring that    * 00014200
*        the performance block is shared with the base space.         * 00014300
*                                                                     * 00014400
*    7.  The caller must serialize to prevent any delay monitoring    * 00014500
*        services from being invoked concurrently for the environment * 00014600
*        represented by the monitoring token.                         * 00014700
*                                                                     * 00014800
*    8.  This macro may only be used on z/OS R2 or higher levels for  * 00014900
*        REPORTONLY and ASSOCIATE keywords.                           * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*01* INPUT REGISTER INFORMATION:                                      * 00015400
*                                                                     * 00015500
*    Before issuing the IWMMINIT macro, the caller does not have to   * 00015600
*    place any information into any register unless using it in       * 00015700
*    register notation for a particular parameter, or using it as a   * 00015800
*    base register.                                                   * 00015900
*                                                                     * 00016000
*01* OUTPUT REGISTER INFORMATION:                                     * 00016100
*                                                                     * 00016200
*    When control returns to the caller, the GPRs contain:            * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*    REGISTER  CONTENTS                                               * 00016600
*                                                                     * 00016700
*    0         Reason code if GR15 return code is non-zero            * 00016800
*                                                                     * 00016900
*    1         Used as work registers by the system                   * 00017000
*                                                                     * 00017100
*    2-13      Unchanged                                              * 00017200
*                                                                     * 00017300
*    14        Used as work registers by the system                   * 00017400
*                                                                     * 00017500
*    15        Return code                                            * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*    When control returns to the caller, the ARs contain:             * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*    REGISTER  CONTENTS                                               * 00018300
*                                                                     * 00018400
*    0-1       Used as work registers by the system                   * 00018500
*                                                                     * 00018600
*    2-13      Unchanged                                              * 00018700
*                                                                     * 00018800
*    14-15     Used as work registers by the system                   * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*    Some callers depend on register contents remaining the same      * 00019300
*    before and after issuing a service.  If the system changes the   * 00019400
*    contents of registers on which the caller depends, the caller    * 00019500
*    must save them before issuing the service, and restore them      * 00019600
*    after the system returns control.                                * 00019700
*                                                                     * 00019800
*01* PERFORMANCE IMPLICATIONS:                                        * 00019900
*                                                                     * 00020000
*    None                                                             * 00020100
*                                                                     * 00020200
*01* SYNTAX:                                                          * 00020300
*                                                                     * 00020400
*Ýxlabel¨  IWMMINIT     MONTKN=xmontkn                                * 00020500
*                    Ð ,MODE=RESET                                    * 00020600
*                    !   ÐÝ,DURATION=EXECUTION¨                       * 00020700
*                    !   ¿Ý,DURATION=BEGIN_TO_END¨                    * 00020800
*                    !   Ð ,DISPTYPE=TCB                              * 00020900
*                    !   !    Ý,TCB=»xtcb!NO_TCBº¨                    * 00021000
*                    !   ¿ ,DISPTYPE=SRB                              * 00021100
*                    !   Ð ,ARRIVALTIMEP=CURRENT                      * 00021200
*                    !   ¿ ,ARRIVALTIMEP=YES                          * 00021300
*                    !         ,ARRIVALTIME=xarrivaltime              * 00021400
*                    ¿ ,MODE=RETAIN                                   * 00021500
*                        ÐÝ,DURATION=PREV_VALUE¨                      * 00021600
*                        ÔÝ,DURATION=EXECUTION¨                       * 00021700
*                        ¿Ý,DURATION=BEGIN_TO_END¨                    * 00021800
*                        Ð ,DISPTYPE=SAVEDTYPE                        * 00021900
*                        Ô ,DISPTYPE=TCB                              * 00022000
*                        !    Ý,TCB=»xtcb!NO_TCBº¨                    * 00022100
*                        ¿ ,DISPTYPE=SRB                              * 00022200
*                    Ð ,CONTINUEP=YES                                 * 00022300
*                    !   Ð ,FROM=NONE                                 * 00022400
*                    !   Ô ,FROM=LOCALMVS                             * 00022500
*                    !   Ô ,FROM=SYSPLEX                              * 00022600
*                    !   ¿ ,FROM=NETWORK                              * 00022700
*                    ¿ ,CONTINUEP=NO                                  * 00022800
*                     Ý,OWNER_TOKEN=»xowner_token!NO_OWNER_TOKENº¨    * 00022900
*                     Ý,OWNER_DATA=»xowner_data!NO_OWNER_DATAº¨       * 00023000
*                    ÐÝ,REPORTONLY=NO                                 * 00023100
*                    !   Ð ,EXSTARTTIMEP=NO                           * 00023200
*                    !   Ô ,EXSTARTTIMEP=CURRENT                      * 00023300
*                    !   ¿ ,EXSTARTTIMEP=YES                          * 00023400
*                    !         ,EXSTARTTIME=xexstarttime              * 00023500
*                    !    Ý,SERVCLS=»xservcls!NO_SERVCLSº¨¨           * 00023600
*                    ¿Ý,REPORTONLY=YES                                * 00023700
*                        Ð ,ASSOCIATE=ENCLAVE                         * 00023800
*                        !     ,ENCLAVETOKEN=xenclavetoken            * 00023900
*                        ¿ ,ASSOCIATE=ADDRESS_SPACE                   * 00024000
*                              ,ASID=xasid¨                           * 00024100
*                    Ð ,SCOPE=SHARED                                  * 00024200
*                    ¿ ,SCOPE=SINGLE                                  * 00024300
*                     Ý,TRXNAME=»xtrxname!NO_TRXNAMEº¨                * 00024400
*                     Ý,USERID=»xuserid!NO_USERIDº¨                   * 00024500
*                     Ý,TRXCLASS=»xtrxclass!NO_TRXCLASSº¨             * 00024600
*                     Ý,TTRACETOKEN=»xttracetoken!NO_TTRACETOKENº¨    * 00024700
*                     Ý,SOURCELU=»xsourcelu!NO_SOURCELUº¨             * 00024800
*                     Ý,LU62TKN=»xlu62tkn!NO_LU62TKNº                 * 00024900
*                        Ð ,LU62TKN_FMT=LU_NO_CC_27                   * 00025000
*                        Ô ,LU62TKN_FMT=FULL_LU_NO_CC_27              * 00025100
*                        Ô ,LU62TKN_FMT=FULL_LU_0_CC_28               * 00025200
*                        Ô ,LU62TKN_FMT=FULL_LU_CC_36                 * 00025300
*                        ¿ ,LU62TKN_FMT=OTHER                         * 00025400
*                              ,LU62TKN_LEN=xlu62tkn_len¨             * 00025500
*                     Ý,RETCODE=xretcode¨                             * 00025600
*                     Ý,RSNCODE=xrsncode¨                             * 00025700
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*      Where:                                                         * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*      Ýxlabel¨                                                       * 00026400
*          is an optional symbol, starting in column 1, that is the   * 00026500
*          name on the IWMMINIT macro invocation.  The name must      * 00026600
*          conform to the rules for an ordinary assembler language    * 00026700
*          symbol.                                                    * 00026800
*          DEFAULT: No name.                                          * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*      MONTKN=xmontkn                                                 * 00027400
*          is the name (RS-type), or address in register (2)-(12), of * 00027500
*          a required 32 bit input which contains the delay           * 00027600
*          monitoring token                                           * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*      MODE=»RESET!RETAINº                                            * 00028200
*          is a required keyword input which indicates how previous   * 00028300
*          attributes established for a monitoring environment should * 00028400
*          be treated.  This does not refer to (or include)           * 00028500
*          attributes established in IWMMCREA.                        * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*          MODE=RESET                                                 * 00028900
*              indicates that previous attributes should be           * 00029000
*              discarded.                                             * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*              ÝDURATION=»EXECUTION!BEGIN_TO_ENDº¨                    * 00029400
*                  is an optional keyword input which indicates the   * 00029500
*                  duration of the work request over which the delays * 00029600
*                  are to be represented.                             * 00029700
*                  DEFAULT: EXECUTION                                 * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                  ÝDURATION=EXECUTION¨                               * 00030100
*                      indicates that the monitoring environment will * 00030200
*                      reflect delays from the point where an         * 00030300
*                      application or transaction program is given    * 00030400
*                      control, i.e. the execution phase.  Typically  * 00030500
*                      a monitoring environment with this scope would * 00030600
*                      be passed to Iwmmntfy to pass the execution    * 00030700
*                      time for the work request.                     * 00030800
*                      DEFAULT: EXECUTION indicates that the          * 00030900
*                      monitoring environment will reflect delays     * 00031000
*                      from the point where an application or         * 00031100
*                      transaction program is given control, i.e. the * 00031200
*                      execution phase.                               * 00031300
*                                                                     * 00031400
*                  ÝDURATION=BEGIN_TO_END¨                            * 00031500
*                      indicates that the monitoring environment will * 00031600
*                      reflect delays from the arrival of the work    * 00031700
*                      request into the MVS sysplex until its         * 00031800
*                      completion. Ordinarily use of this option      * 00031900
*                      would be in close proximity to the time when   * 00032000
*                      the work request is classified.  Typically a   * 00032100
*                      monitoring environment with this duration      * 00032200
*                      would be passed to Iwmrpt to report the total  * 00032300
*                      elapsed time for the work request.             * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*              DISPTYPE=»TCB!SRBº                                     * 00033100
*                  is a required keyword input which describes the    * 00033200
*                  nature of the MVS dispatchable units which         * 00033300
*                  participate in processing work requests associated * 00033400
*                  with the delay monitoring environment established  * 00033500
*                  by this service.                                   * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                  DISPTYPE=TCB                                       * 00033900
*                                                                     * 00034000
*                      indicates that work requests run in TCB mode   * 00034100
*                      under a TCB within the current home address    * 00034200
*                      space. Note that in cross-memory mode, this    * 00034300
*                      may be different from the current primary      * 00034400
*                      address space.                                 * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                      ÝTCB=»xtcb!NO_TCBº¨                            * 00034800
*                          is the name (RS-type), or address in       * 00034900
*                          register (2)-(12), of an optional          * 00035000
*                          character input which defines the TCB      * 00035100
*                          within the current home address space      * 00035200
*                          which will serve the work request.  Note   * 00035300
*                          that this name is not the pointer to the   * 00035400
*                          TCB, but the name of the data area         * 00035500
*                          containing the TCB.  A typical invocation  * 00035600
*                          might replace xTCB with TCB.               * 00035700
*                                                                     * 00035800
*                          Ordinarily the input TCB specified should  * 00035900
*                          be the TCB under which the work request    * 00036000
*                          (e.g. transaction program) runs and under  * 00036100
*                          which the delay information is recorded    * 00036200
*                          (in spite of the fact that task switches   * 00036300
*                          may occur).                                * 00036400
*                          DEFAULT: NO_TCB indicates that no TCB is   * 00036500
*                          currently associated with the monitoring   * 00036600
*                          environment for this work request.         * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                  DISPTYPE=SRB                                       * 00037100
*                                                                     * 00037200
*                      indicates that work requests run in SRB mode   * 00037300
*                      within the current home address space.         * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*              ARRIVALTIMEP=»CURRENT!YESº                             * 00038100
*                  is a required keyword input which indicates        * 00038200
*                  whether the work arrival time is passed.  This     * 00038300
*                  keyword is not applicable for report-only          * 00038400
*                  monitoring environments.                           * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*                  ARRIVALTIMEP=CURRENT                               * 00038800
*                      indicates that the current time should be      * 00038900
*                      supplied by the service.                       * 00039000
*                                                                     * 00039100
*                  ARRIVALTIMEP=YES                                   * 00039200
*                      indicates that the work arrival time is        * 00039300
*                      passed.                                        * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                      ARRIVALTIME=xarrivaltime                       * 00039700
*                          is the name (RS-type), or address in       * 00039800
*                          register (2)-(12), of a required 64 bit    * 00039900
*                          input which contains the work arrival time * 00040000
*                          in STCK format.                            * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*          MODE=RETAIN                                                * 00040900
*              indicates that previous attributes should be retained  * 00041000
*              unless explicitly specified.                           * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*              ÝDURATION=»PREV_VALUE!EXECUTION!BEGIN_TO_ENDº¨         * 00041400
*                  is an optional keyword input which indicates the   * 00041500
*                  duration of the work request over which the delays * 00041600
*                  are to be represented.                             * 00041700
*                  DEFAULT: PREV_VALUE                                * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                  ÝDURATION=PREV_VALUE¨                              * 00042100
*                      indicates that the duration for delays has     * 00042200
*                      been specified on a previous invocation.       * 00042300
*                                                                     * 00042400
*                  ÝDURATION=EXECUTION¨                               * 00042500
*                      indicates that the monitoring environment will * 00042600
*                      reflect delays from the point where an         * 00042700
*                      application or transaction program is given    * 00042800
*                      control, i.e. the execution phase.  Typically  * 00042900
*                      a monitoring environment with this duration    * 00043000
*                      would be passed to Iwmmntfy to pass the        * 00043100
*                      execution time for the work request.           * 00043200
*                                                                     * 00043300
*                  ÝDURATION=BEGIN_TO_END¨                            * 00043400
*                      indicates that the monitoring environment will * 00043500
*                      reflect delays from the arrival of the work    * 00043600
*                      request into the MVS sysplex until its         * 00043700
*                      completion. Ordinarily use of this option      * 00043800
*                      would be in close proximity to the time when   * 00043900
*                      the work request is classified.  Typically a   * 00044000
*                      monitoring environment with this duration      * 00044100
*                      would be passed to Iwmrpt to report the total  * 00044200
*                      elapsed time for the work request.             * 00044300
*                                                                     * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*              DISPTYPE=»SAVEDTYPE!TCB!SRBº                           * 00045000
*                  is a required keyword input which describes the    * 00045100
*                  nature of the MVS dispatchable units which         * 00045200
*                  participate in processing work requests associated * 00045300
*                  with the delay monitoring environment established  * 00045400
*                  by this service.                                   * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                  DISPTYPE=SAVEDTYPE                                 * 00045800
*                                                                     * 00045900
*                      indicates that the information saved when      * 00046000
*                      MODE(RESET) was used is still applicable.      * 00046100
*                                                                     * 00046200
*                  DISPTYPE=TCB                                       * 00046300
*                                                                     * 00046400
*                      indicates that work requests run in TCB mode   * 00046500
*                      under a TCB within the current home address    * 00046600
*                      space. Note that in cross-memory mode, this    * 00046700
*                      may be different from the current primary      * 00046800
*                      address space.                                 * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                      ÝTCB=»xtcb!NO_TCBº¨                            * 00047200
*                          is the name (RS-type), or address in       * 00047300
*                          register (2)-(12), of an optional          * 00047400
*                          character input which defines the TCB      * 00047500
*                          within the current home address space      * 00047600
*                          which will serve the work request.  Note   * 00047700
*                          that this name is not the pointer to the   * 00047800
*                          TCB, but the name of the data area         * 00047900
*                          containing the TCB.  A typical invocation  * 00048000
*                          might replace xTCB with TCB.               * 00048100
*                                                                     * 00048200
*                          Ordinarily the input TCB specified should  * 00048300
*                          be the TCB under which the work request    * 00048400
*                          (e.g. transaction program) runs and under  * 00048500
*                          which the delay information is recorded    * 00048600
*                          (in spite of the fact that task switches   * 00048700
*                          may occur).                                * 00048800
*                          DEFAULT: NO_TCB indicates that no TCB is   * 00048900
*                          currently associated with the monitoring   * 00049000
*                          environment for this work request.         * 00049100
*                                                                     * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                  DISPTYPE=SRB                                       * 00049500
*                                                                     * 00049600
*                      indicates that work requests run in SRB mode   * 00049700
*                      within the current home address space.         * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*      CONTINUEP=»YES!NOº                                             * 00050900
*          is a required keyword input which indicates whether it is  * 00051000
*          known (YES) or not (NO) that there exists another          * 00051100
*          monitoring environment for this same work request.         * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*          CONTINUEP=YES                                              * 00051500
*              indicates that the existence of a prior monitoring     * 00051600
*              environment for the work request is known.             * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*              FROM=»NONE!LOCALMVS!SYSPLEX!NETWORKº                   * 00052000
*                  is a required keyword input                        * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*                  FROM=NONE                                          * 00052400
*                      indicates that there is no other environment.  * 00052500
*                                                                     * 00052600
*                  FROM=LOCALMVS                                      * 00052700
*                      indicates that such an environment should      * 00052800
*                      exist on the current MVS.                      * 00052900
*                                                                     * 00053000
*                  FROM=SYSPLEX                                       * 00053100
*                      indicates that such an environment should      * 00053200
*                      exist in the current syplex, but is not        * 00053300
*                      expected to be on the current MVS image.       * 00053400
*                                                                     * 00053500
*                  FROM=NETWORK                                       * 00053600
*                      indicates that such an environment may exist,  * 00053700
*                      but is not expected to be in the current       * 00053800
*                      sysplex.                                       * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*          CONTINUEP=NO                                               * 00054500
*              indicates that it is not known whether there exists a  * 00054600
*              prior monitoring environment for the work request.  If * 00054700
*              MODE(RESET) is specified, no status is saved.  If      * 00054800
*              MODE(RETAIN) is specified, the existing status is      * 00054900
*              preserved.                                             * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*      ÝOWNER_TOKEN=»xowner_token!NO_OWNER_TOKENº¨                    * 00055700
*          is the name (RS-type), or address in register (2)-(12), of * 00055800
*          an optional 32 bit input which contains a token maintained * 00055900
*          by the user/owner of the monitoring environment.  The      * 00056000
*          format is undefined to MVS.                                * 00056100
*          DEFAULT: NO_OWNER_TOKEN indicates that no owner token is   * 00056200
*          provided.                                                  * 00056300
*                                                                     * 00056400
*          If MODE(RETAIN) is specified, NO_OWNER_TOKEN will preserve * 00056500
*          the existing owner token, if any.                          * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*                                                                     * 00057000
*      ÝOWNER_DATA=»xowner_data!NO_OWNER_DATAº¨                       * 00057100
*          is the name (RS-type), or address in register (2)-(12), of * 00057200
*          an optional 32 bit input which contains data maintained by * 00057300
*          the user/owner of the monitoring environment.  The format  * 00057400
*          is undefined to MVS.                                       * 00057500
*          DEFAULT: NO_OWNER_DATA indicates that no owner data is     * 00057600
*          provided.                                                  * 00057700
*                                                                     * 00057800
*          If MODE(RETAIN) is specified, NO_OWNER_DATA will preserve  * 00057900
*          the existing owner data, if any.                           * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*      ÝREPORTONLY=»NO!YESº                                           * 00058500
*          is an optional keyword input which indicates whether the   * 00058600
*          monitoring environment is for reporting purposes only      * 00058700
*          (YES) or not (NO).                                         * 00058800
*          DEFAULT: NO                                                * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*          ÝREPORTONLY=NO                                             * 00059200
*              indicates that the monitoring environment is not for   * 00059300
*              reporting purposes only.                               * 00059400
*                                                                     * 00059500
*                                                                     * 00059600
*              EXSTARTTIMEP=»NO!CURRENT!YESº                          * 00059700
*                  is a required keyword input which indicates        * 00059800
*                  whether the execution start time value is passed.  * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*                  EXSTARTTIMEP=NO                                    * 00060200
*                      indicates that the execution start time value  * 00060300
*                      is not passed.                                 * 00060400
*                                                                     * 00060500
*                      If MODE(RETAIN) is specified, EXSTARTTIMEP(NO) * 00060600
*                      will preserve the existing execution start     * 00060700
*                      time, if any.                                  * 00060800
*                                                                     * 00060900
*                  EXSTARTTIMEP=CURRENT                               * 00061000
*                      indicates that the current time should be      * 00061100
*                      supplied by the service.                       * 00061200
*                                                                     * 00061300
*                  EXSTARTTIMEP=YES                                   * 00061400
*                      indicates that the start execution time value  * 00061500
*                      is passed.                                     * 00061600
*                                                                     * 00061700
*                                                                     * 00061800
*                      EXSTARTTIME=xexstarttime                       * 00061900
*                          is the name (RS-type), or address in       * 00062000
*                          register (2)-(12), of a required 64 bit    * 00062100
*                          input which contains the start execution   * 00062200
*                          time in STCK format.                       * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*              ÝSERVCLS=»xservcls!NO_SERVCLSº¨¨                       * 00063200
*                  is the name (RS-type), or address in register      * 00063300
*                  (2)-(12), of an optional 32 bit input which        * 00063400
*                  contains the service class token.                  * 00063500
*                  DEFAULT: NO_SERVCLS indicates that no service      * 00063600
*                  class token was passed.                            * 00063700
*                                                                     * 00063800
*                  If MODE(RETAIN) is specified, NO_SERVCLS will      * 00063900
*                  preserve the existing service class token, if any. * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*          ÝREPORTONLY=YES                                            * 00064400
*              indicates that the monitoring environment is for       * 00064500
*              reporting purposes only.                               * 00064600
*                                                                     * 00064700
*                                                                     * 00064800
*              ASSOCIATE=»ENCLAVE!ADDRESS_SPACEº¨                     * 00064900
*                  is a required keyword input which indicates        * 00065000
*                  whether the monitoring environment should be       * 00065100
*                  associated to an enclave or an address space.      * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                  ASSOCIATE=ENCLAVE                                  * 00065500
*                      indicates that the monitoring environment      * 00065600
*                      should be associated to an enclave.            * 00065700
*                                                                     * 00065800
*                                                                     * 00065900
*                      ENCLAVETOKEN=xenclavetoken                     * 00066000
*                          is the name (RS-type), or address in       * 00066100
*                          register (2)-(12), of a required 64 bit    * 00066200
*                          input which contains the enclave token.    * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*                                                                     * 00066600
*                  ASSOCIATE=ADDRESS_SPACE                            * 00066700
*                      indicates that the monitoring environment      * 00066800
*                      should be associated to an address space.      * 00066900
*                                                                     * 00067000
*                                                                     * 00067100
*                      ASID=xasid¨                                    * 00067200
*                          is the name (RS-type), or address in       * 00067300
*                          register (2)-(12), of a required 16 bit    * 00067400
*                          input which contains the address space ID. * 00067500
*                                                                     * 00067600
*                                                                     * 00067700
*                                                                     * 00067800
*                                                                     * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                                                                     * 00068300
*                                                                     * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*      SCOPE=»SHARED!SINGLEº                                          * 00068800
*          is a required keyword input which indicates the scope of   * 00068900
*          work passed.                                               * 00069000
*                                                                     * 00069100
*                                                                     * 00069200
*          SCOPE=SHARED                                               * 00069300
*              indicates that multiple work requests, possibly from   * 00069400
*              different service classes, could be described.         * 00069500
*                                                                     * 00069600
*          SCOPE=SINGLE                                               * 00069700
*              indicates that only a single work request is           * 00069800
*              described.                                             * 00069900
*                                                                     * 00070000
*                                                                     * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*      ÝTRXNAME=»xtrxname!NO_TRXNAMEº¨                                * 00070600
*          is the name (RS-type), or address in register (2)-(12), of * 00070700
*          an optional 8 character input which contains the           * 00070800
*          transaction name.  For environments where the transaction  * 00070900
*          name is available on some, but not all flows, provision of * 00071000
*          a data area initialized to all blanks is equivalent to     * 00071100
*          specification of NO_TRXNAME when MODE(RESET) is specified. * 00071200
*          Providing an area of all blanks when MODE(RETAIN) is       * 00071300
*          specified will cause that to be used.                      * 00071400
*          DEFAULT: NO_TRXNAME indicates that no transaction name was * 00071500
*          passed.                                                    * 00071600
*                                                                     * 00071700
*          If MODE(RETAIN) is specified, NO_TRXNAME will preserve the * 00071800
*          existing transaction name, if any.                         * 00071900
*                                                                     * 00072000
*                                                                     * 00072100
*                                                                     * 00072200
*                                                                     * 00072300
*      ÝUSERID=»xuserid!NO_USERIDº¨                                   * 00072400
*          is the name (RS-type), or address in register (2)-(12), of * 00072500
*          an optional 8 character input which contains the local     * 00072600
*          userid associated with the work request.  For environments * 00072700
*          where the user id is available on some, but not all flows, * 00072800
*          provision of a data area initialized to all blanks is      * 00072900
*          equivalent to specification of NO_USERID when MODE(RESET)  * 00073000
*          is specified.  Providing an area of all blanks when        * 00073100
*          MODE(RETAIN) is specified will cause that to be used.      * 00073200
*          DEFAULT: NO_USERID indicates that no userid was passed.    * 00073300
*                                                                     * 00073400
*          If MODE(RETAIN) is specified, NO_USERID will preserve the  * 00073500
*          existing user id, if any.                                  * 00073600
*                                                                     * 00073700
*                                                                     * 00073800
*                                                                     * 00073900
*                                                                     * 00074000
*      ÝTRXCLASS=»xtrxclass!NO_TRXCLASSº¨                             * 00074100
*          is the name (RS-type), or address in register (2)-(12), of * 00074200
*          an optional 8 character input which contains a class name  * 00074300
*          within a subsystem.  For environments where the            * 00074400
*          transaction class is available on some, but not all flows, * 00074500
*          provision of a data area initialized to all blanks is      * 00074600
*          equivalent to specification of NO_TRXCLASS when            * 00074700
*          MODE(RESET) is specified.  Providing an area of all blanks * 00074800
*          when MODE(RETAIN) is specified will cause that to be used. * 00074900
*          DEFAULT: NO_TRXCLASS indicates that no class name was      * 00075000
*          passed.                                                    * 00075100
*                                                                     * 00075200
*          If MODE(RETAIN) is specified, NO_TRXCLASS will preserve    * 00075300
*          the existing transaction class, if any.                    * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*      ÝTTRACETOKEN=»xttracetoken!NO_TTRACETOKENº¨                    * 00075900
*          is the name (RS-type), or address in register (2)-(12), of * 00076000
*          an optional 32 character input which contains the          * 00076100
*          transaction trace token.                                   * 00076200
*          DEFAULT: NO_TTRACETOKEN indicates that no transaction      * 00076300
*          trace token was passed.                                    * 00076400
*                                                                     * 00076500
*          If MODE(RETAIN) is specified, NO_TTRACETOKEN will preserve * 00076600
*          the existing transaction trace token, if any.              * 00076700
*                                                                     * 00076800
*                                                                     * 00076900
*                                                                     * 00077000
*                                                                     * 00077100
*      ÝSOURCELU=»xsourcelu!NO_SOURCELUº¨                             * 00077200
*          is the name (RS-type), or address in register (2)-(12), of * 00077300
*          an optional character input which contains the LU name     * 00077400
*          associated with the requestor. This may be the fully       * 00077500
*          qualified NETID.LUNAME, i.e.  network name (1-8 bytes),    * 00077600
*          followed by a period, followed by the LU name for the      * 00077700
*          requestor (1-8 bytes).  It may also be the 1-8 byte local  * 00077800
*          LU name, with no network qualifier.  The SOURCELU field    * 00077900
*          may be from 1-17 characters.  In the assembler form, the   * 00078000
*          macro will determine the length of the field as follows:   * 00078100
*                                                                     * 00078200
*                                                                     * 00078300
*          1.  if the field is specified by register notation, it     * 00078400
*              will be assumed to be 17 characters (padded with       * 00078500
*              blanks) and a full 17 characters will be copied.       * 00078600
*                                                                     * 00078700
*          2.  if the field is specified using an RS form name, then  * 00078800
*              the length will be determined using the L' assembler   * 00078900
*              function.  When the length is less than 17 characters, * 00079000
*              the macro will pad with blanks.  When the length is    * 00079100
*              greater than or equal to 17 characters, the macro will * 00079200
*              copy the first 17 bytes.                               * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*          In the PL/AS form, the rules for the PL/AS compiler will   * 00079600
*          determine when to pad with blanks, i.e. less than 17       * 00079700
*          characters implies padding, 17 or more implies a 17        * 00079800
*          character copy.                                            * 00079900
*                                                                     * 00080000
*          This is intended to be the same value as used in IWMCLSFY, * 00080100
*          and may be distinct from the LU name contained within the  * 00080200
*          LU 6.2 token.  For environments where the LU name may be   * 00080300
*          available on some, but not all flows, provision of a data  * 00080400
*          area initialized to all blanks is equivalent to            * 00080500
*          specification of NO_SOURCELU when MODE(RESET) is           * 00080600
*          specified.  Providing an area of all blanks when           * 00080700
*          MODE(RETAIN) is specified will cause that to be used.      * 00080800
*          DEFAULT: NO_SOURCELU indicates that no source LU name was  * 00080900
*          passed.                                                    * 00081000
*                                                                     * 00081100
*          If MODE(RETAIN) is specified, NO_SOURCELU will preserve    * 00081200
*          the existing source LU name, if any.                       * 00081300
*                                                                     * 00081400
*                                                                     * 00081500
*                                                                     * 00081600
*                                                                     * 00081700
*      ÝLU62TKN=»xlu62tkn!NO_LU62TKNº                                 * 00081800
*          is the name (RS-type), or address in register (2)-(12), of * 00081900
*          an optional character input which contains LU 6.2 token    * 00082000
*          for the work request.  This is not a SNA term, but it is   * 00082100
*          comprised of the following fields which are defined by SNA * 00082200
*          for the FMH5.                                              * 00082300
*                                                                     * 00082400
*                                                                     * 00082500
*          o   Logical Unit of Work Identifier length byte, in        * 00082600
*              binary, which may have the values 0 or 10-26 decimal   * 00082700
*              (inclusive)                                            * 00082800
*                                                                     * 00082900
*          o    Logical Unit of Work Identifier                       * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*              -   Length byte for the network qualified LU name, in  * 00083300
*                  binary, which may have the values 1-17 decimal     * 00083400
*                  (inclusive)                                        * 00083500
*                                                                     * 00083600
*              -   Network qualified LU network name (1-17 bytes)     * 00083700
*                                                                     * 00083800
*              -   Logical Unit of Work Instance Number, in binary (6 * 00083900
*                  bytes)                                             * 00084000
*                                                                     * 00084100
*              -   Logical Unit of Work Sequence Number, in binary (2 * 00084200
*                  bytes)                                             * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*                                                                     * 00084600
*          o   Conversation Correlator Field (0 to 9 bytes)           * 00084700
*                                                                     * 00084800
*                                                                     * 00084900
*              -   Length byte for the Conversation Correlator, in    * 00085000
*                  binary, which may have the values 0-8 decimal      * 00085100
*                  (inclusive)                                        * 00085200
*                                                                     * 00085300
*              -   Conversation Correlator of the sending transaction * 00085400
*                  (1-8 bytes)                                        * 00085500
*                                                                     * 00085600
*                                                                     * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*                                                                     * 00086000
*          The Conversation Correlator Field (which includes its      * 00086100
*          length byte) may be dropped when its length byte is 0.     * 00086200
*          DEFAULT: NO_LU62TKN indicates that no LU 6.2 token was     * 00086300
*          passed.                                                    * 00086400
*                                                                     * 00086500
*          If MODE(RETAIN) is specified, NO_LU62TKN will preserve the * 00086600
*          existing LU6.2 token, if any.                              * 00086700
*                                                                     * 00086800
*                                                                     * 00086900
*          LU62TKN_FMT=»LU_NO_CC_27!FULL_LU_NO_CC_27!FULL_LU_0_CC_28! * 00087000
*              FULL_LU_CC_36!OTHERº                                   * 00087100
*              is a required keyword input which indicates the        * 00087200
*              format/length of the LU 6.2 token.                     * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*              LU62TKN_FMT=LU_NO_CC_27                                * 00087600
*                  indicates that a fixed length token of 27 bytes is * 00087700
*                  provided, with no conversation correlator (not     * 00087800
*                  even its length byte).  The LU name may be 1-17    * 00087900
*                  bytes. Bytes at the end of the token are padded    * 00088000
*                  with hexadecimal zeros, if necessary, to form a    * 00088100
*                  full 27 bytes.                                     * 00088200
*                                                                     * 00088300
*              LU62TKN_FMT=FULL_LU_NO_CC_27                           * 00088400
*                  indicates that the fully qualified LU name (17     * 00088500
*                  bytes) is used, but no conversation correlator     * 00088600
*                  (not even its length byte) is provided.  This      * 00088700
*                  format is architected to be 27 bytes long.         * 00088800
*                                                                     * 00088900
*              LU62TKN_FMT=FULL_LU_0_CC_28                            * 00089000
*                  indicates that the fully qualified LU name (17     * 00089100
*                  bytes) is used, and the conversation correlator    * 00089200
*                  length byte is present and has the value 0.  This  * 00089300
*                  format is architected to be 28 bytes long.         * 00089400
*                                                                     * 00089500
*              LU62TKN_FMT=FULL_LU_CC_36                              * 00089600
*                  indicates that the fully qualified LU name (17     * 00089700
*                  bytes) is used, and the conversation correlator is * 00089800
*                  provided with a length of 8 (maximum allowed).     * 00089900
*                  This format is architected to be 36 bytes long.    * 00090000
*                                                                     * 00090100
*              LU62TKN_FMT=OTHER                                      * 00090200
*                  indicates that the format of the LU 6.2 token is   * 00090300
*                  different from those specified by the remaining    * 00090400
*                  keywords.                                          * 00090500
*                                                                     * 00090600
*                                                                     * 00090700
*                  LU62TKN_LEN=xlu62tkn_len¨                          * 00090800
*                      is the name (RS-type), or address in register  * 00090900
*                      (2)-(12), of a required byte input which       * 00091000
*                      contains the length of the LU62 token.  Valid  * 00091100
*                      values are in the range 1-36 decimal           * 00091200
*                      (inclusive).                                   * 00091300
*                                                                     * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*                                                                     * 00091800
*                                                                     * 00091900
*                                                                     * 00092000
*                                                                     * 00092100
*                                                                     * 00092200
*                                                                     * 00092300
*      ÝRETCODE=xretcode¨                                             * 00092400
*          is the name (RS-type) of an optional fullword output       * 00092500
*          variable, or register (2)-(12) or (15), into which the     * 00092600
*          return code is to be copied from GPR 15.  If you specify   * 00092700
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00092800
*          the value will be left in GPR 15.                          * 00092900
*                                                                     * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*                                                                     * 00093300
*      ÝRSNCODE=xrsncode¨                                             * 00093400
*          is the name (RS-type) of an optional fullword output       * 00093500
*          variable into which the reason code is to be copied from   * 00093600
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00093700
*          R0 (within or without parentheses), the value will be left * 00093800
*          in GPR 0.                                                  * 00093900
*                                                                     * 00094000
*                                                                     * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00094400
*          is an optional byte input decimal value in the "0-2" range * 00094500
*          that specifies the macro version.  PLISTVER determines     * 00094600
*          which parameter list is generated.  The macro keys         * 00094700
*          associated with each supported version of the macro are    * 00094800
*          listed in MACRO USAGE NOTE 2.  Note that MAX may be        * 00094900
*          specified instead of a number, and the parameter list will * 00095000
*          be of the largest size currently supported. This size may  * 00095100
*          grow from release to release (thus possibly affecting the  * 00095200
*          amount of storage needed by your program).                 * 00095300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00095400
*          default is the lowest version which allows all of the      * 00095500
*          parameters specified on the invocation to be processed.    * 00095600
*                                                                     * 00095700
*                                                                     * 00095800
*                                                                     * 00095900
*01* ABEND CODES:  None.                                              * 00096000
*                                                                     * 00096100
*01* RETURN CODES:                                                    * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*            0    IwmRetCodeOk: Successful completion.                * 00096500
*                                                                     * 00096600
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00096700
*                 conditions noted.                                   * 00096800
*                                                                     * 00096900
*                                                                     * 00097000
*                                                                     * 00097100
*                 HEX REASON  MEANING/ACTION                          * 00097200
*                 CODE                                                * 00097300
*                                                                     * 00097400
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00097500
*                                                                     * 00097600
*                             Meaning:  Monitoring token indicates    * 00097700
*                             that no monitoring environment exists.  * 00097800
*                                                                     * 00097900
*                                                                     * 00098000
*                                                                     * 00098100
*                                                                     * 00098200
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00098300
*                 environment or parameters                           * 00098400
*                                                                     * 00098500
*                                                                     * 00098600
*                                                                     * 00098700
*                 HEX REASON  MEANING/ACTION                          * 00098800
*                 CODE                                                * 00098900
*                                                                     * 00099000
*                 xxxx081E    Name: IwmRsnCodeBadLU62TknLen           * 00099100
*                                                                     * 00099200
*                             Meaning:  The length byte of the LU62   * 00099300
*                             token has an invalid value. Only values * 00099400
*                             1-36 (decimal) are valid.               * 00099500
*                                                                     * 00099600
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv:              * 00099700
*                                                                     * 00099800
*                             Meaning:  Monitoring environment does   * 00099900
*                             not pass short form verification.       * 00100000
*                                                                     * 00100100
*                                                                     * 00100200
*                                                                     * 00100300
*                                                                     * 00100400
*            C    IwmRetCodeEnvError:  Environmental error            * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*                                                                     * 00100800
*                 HEX REASON  MEANING/ACTION                          * 00100900
*                 CODE                                                * 00101000
*                                                                     * 00101100
*                 xxxx0C07    Name: IwmRsnCodeNoArrTime:              * 00101200
*                                                                     * 00101300
*                             Meaning:  No arrival time was supplied  * 00101400
*                             to the service and STCK gave a non-zero * 00101500
*                             condition code.                         * 00101600
*                                                                     * 00101700
*                 xxxx0C08    Name: IwmRsnCodeNoExTime:               * 00101800
*                                                                     * 00101900
*                             Meaning:  No execution start time was   * 00102000
*                             supplied to the service and STCK gave a * 00102100
*                             non-zero condition code.                * 00102200
*                                                                     * 00102300
*                                                                     * 00102400
*                                                                     * 00102500
*                                                                     * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*                                                                     * 00102900
*01* REASON CODES:                                                    * 00103000
*                                                                     * 00103100
*       A unique reason code will be returned whenever the return     * 00103200
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00103300
*       under their corresponding return code.  Reason code and       * 00103400
*       return code constants are defined within IWMYCON.  Note that  * 00103500
*       the high order halfword of register 0, and the reason code    * 00103600
*       variable when specified, may be non-zero and represents       * 00103700
*       diagnostic data which is NOT part of the external interface.  * 00103800
*       The high order halfword should thus be excluded from          * 00103900
*       comparison with the reason code values described above.  The  * 00104000
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00104100
*       used for this purpose.                                        * 00104200
*                                                                     * 00104300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00104400
*                                                                     * 00104500
*02*   PROCESSOR:  ASSEM                                              * 00104600
*                                                                     * 00104700
*01* COMPONENT:  SCWLM                                                * 00104800
*                                                                     * 00104900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00105000
*                                                                     * 00105100
*01* EXAMPLES:                                                        * 00105200
*      IWMMINIT MONTKN=(R9),ARRIVALTIMEP=YES,                         * 00105300
*            ARRIVALTIME=(R3),EXSTARTTIMEP=YES,                       * 00105400
*            EXSTARTTIME=(R4),DISPTYPE=TCB,TCB=(R7),                  * 00105500
*            SCOPE=SINGLE,TRXNAME=WLTRXNAME,SOURCELU=SOURCELU,        * 00105600
*            CONTINUEP=YES,LU62TKN_FMT=OTHER,LU62TKN_LEN=LU62TKNLEN,  * 00105700
*            LU62TKN=LU62TKN1,MODE=RESET,FROM=NONE,                   * 00105800
*            REPORTONLY=NO,RETCODE=RCODE,RSNCODE=RSN                  * 00105900
*                                                                     * 00106000
*01* MACRO USAGE NOTES:                                               * 00106100
*                                                                     * 00106200
*                                                                     * 00106300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00106400
*        global macro variable.  Any value other than 'NO' will       * 00106500
*        result in the macro expansion being printed.  The default is * 00106600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00106700
*        variable should be set.                                      * 00106800
*                                                                     * 00106900
*                    GBLC &ZPRINT                                     * 00107000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00107100
*                                                                     * 00107200
*                                                                     * 00107300
*    2.  The IWMMINIT macro supports multiple versions. The macro key * 00107400
*        list  below  contains the version level in which the key was * 00107500
*        first  introduced.  Positionals  are  identified by the word * 00107600
*        'Positional'  followed by the numeric value of its position. * 00107700
*        Nested  positionals  are  preceded  by their outer key.  The * 00107800
*        lowest value represents the original version and the highest * 00107900
*        value  represents  the  most  recent version of the IWMMINIT * 00108000
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00108100
*        least  as high as the highest version number of all the keys * 00108200
*        being used.                                                  * 00108300
*                                                                     * 00108400
*        VERSION   KEY                                                * 00108500
*                                                                     * 00108600
*              0      ARRIVALTIME                                     * 00108700
*                     ARRIVALTIMEP                                    * 00108800
*                     CONTINUEP                                       * 00108900
*                     DISPTYPE                                        * 00109000
*                     DURATION                                        * 00109100
*                     EXSTARTTIME                                     * 00109200
*                     EXSTARTTIMEP                                    * 00109300
*                     FROM                                            * 00109400
*                     LU62TKN                                         * 00109500
*                     LU62TKN_FMT                                     * 00109600
*                     LU62TKN_LEN                                     * 00109700
*                     MODE                                            * 00109800
*                     MONTKN                                          * 00109900
*                     OWNER_DATA                                      * 00110000
*                     OWNER_TOKEN                                     * 00110100
*                     SCOPE                                           * 00110200
*                     SERVCLS                                         * 00110300
*                     SOURCELU                                        * 00110400
*                     TCB                                             * 00110500
*                     TRXCLASS                                        * 00110600
*                     TRXNAME                                         * 00110700
*                     USERID                                          * 00110800
*              1      TTRACETOKEN                                     * 00110900
*              2      ASID                                            * 00111000
*                     ASSOCIATE                                       * 00111100
*                     ENCLAVETOKEN                                    * 00111200
*                     REPORTONLY                                      * 00111300
*                                                                     * 00111400
*                                                                     * 00111500
*                                                                     * 00111600
*01* CHANGE ACTIVITY:                                                 * 00111700
*                                                                     * 00111800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00111900
*                                                                     * 00112000
*    $L0=WLMI     HBB5510 920309 PD16:  Workload Manager I            * 00112100
*    $P1=PIG7010  HBB5510 921029 PD16:  Remove check for RSNCODE for  * 00112200
*                                         GPR00F declare              * 00112300
*    $01=OW26040  HBB6603 970407 PDSN:  Make clear length dependent   * 00112400
*                                         on version level, new       * 00112500
*                                         length field                * 00112600
*    $L1=TTRACE   JBB6609 980924 PD88DA:  Add TTRACETOKEN and Init    * 00112700
*                                         Transaction Trace Token     * 00112800
*    $L2=WLMPAPC  HBB7705 001031 3241PB:  Add REPORTONLY and          * 00112900
*                                         ASSOCIATE                   * 00113000
*    $L3=WLMPPBS  HBB7707 011031 3241AB:  Armin Buechler              * 00113100
*                                         New PB states for WAS       * 00113200
*    $L4=PYV0343  HBB7707 020131 3241AB:  Armin Buechler              * 00113300
*                                         Copyright Statement         * 00113400
*                                         correction                  * 00113500
*    $L5=OW54806  HBB7707 020612 3241PB:  Fix REPORTONLY Default      * 00113600
*                                         value problem               * 00113700
*    $L6=LEWMSM   HBB7760 080428 3241GB:  Remove GEN EXIT NOSEQFLOW   * 00113800
*                                         after ABEND macro (PLX      * 00113900
*                                         only), drop support for PB  * 00114000
*                                         versions 1 and 2            * 00114100
****** END OF SPECIFICATIONS *****************************************/ 00114200
*/********************************************************************* 00114300
         MACRO                                                          00114400
&XLABEL  IWMMINIT &MONTKN=,&MODE=,&DURATION=,&DISPTYPE=,&TCB=,         *00114500
               &ARRIVALTIMEP=,&ARRIVALTIME=,&CONTINUEP=,&FROM=,        *00114600
               &OWNER_TOKEN=,&OWNER_DATA=,&REPORTONLY=,&EXSTARTTIMEP=, *00114700
               &EXSTARTTIME=,&SERVCLS=,&ASSOCIATE=,&ENCLAVETOKEN=,     *00114800
               &ASID=,&SCOPE=,&TRXNAME=,&USERID=,&TRXCLASS=,           *00114900
               &TTRACETOKEN=,&SOURCELU=,&LU62TKN=,&LU62TKN_FMT=,       *00115000
               &LU62TKN_LEN=,&RETCODE=,&RSNCODE=,&PLISTVER=             00115100
.*                                                                      00115200
*                      MACDATE -05/15/08-<2>                            00115300
.*                                                                      00115400
.*******************************************************************    00115500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00115600
.*******************************************************************    00115700
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00115800
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00115900
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00116000
.*                                                                      00116100
                      GBLC  &ZIWMMINIT  YES=MACRO USED AT LEAST ONCE    00116200
.*******************************************************************    00116300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00116400
.*******************************************************************    00116500
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00116600
                      LCLC  &ZCNDX      SYSNDX CHARACTERS               00116700
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00116800
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00116900
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00117000
                      LCLA  &ZAWRK      USED AS A WORK AREA             00117100
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00117200
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00117300
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00117400
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00117500
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00117600
                      LCLC  &ZMAC_G     "G" or null                     00117700
&ZMAC_G               SETC  ''                                          00117800
                      LCLC  &ZMAC_LR                                    00117900
&ZMAC_LR              SETC  'LR'                                        00118000
                      LCLC  &ZMAC_L                                     00118100
&ZMAC_L               SETC  'L'                                         00118200
                      LCLC  &ZMAC_ST                                    00118300
&ZMAC_ST              SETC  'ST'                                        00118400
                      LCLA  &ZMACRET    MACRO RETURN CODE               00118500
&ZMACRET              SETA  0           ASSUME NO ERRORS                00118600
.*                                                                      00118700
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00118800
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00118900
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00119000
                      LCLC  &ZENDBASEPL         End of base PL          00119100
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           00119200
.*******************************************************************    00119300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00119400
.*******************************************************************    00119500
                      LCLA  &ZI         INDEX FOR ARRAY                 00119600
                      LCLA  &ZJ         INDEX FOR PARMS                 00119700
                      LCLA  &ZK         INDEX FOR PARSE                 00119800
                      LCLA  &ZLO        LOW RANGE VALUE                 00119900
                      LCLA  &ZHI        HIGH RANGE VALUE                00120000
                      LCLC  &ZW         WORK AREA FOR PARM              00120100
.*******************************************************************    00120200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00120300
.*******************************************************************    00120400
                      LCLC  &XMONTKN    ++ NAME                         00120500
                      LCLC  &XMODE      ++ VALUE                        00120600
                      LCLC  &XDURATION  ++ VALUE                        00120700
                      LCLC  &XDISPTYPE  ++ VALUE                        00120800
                      LCLC  &XTCB       ++ NAME                         00120900
                      LCLC  &XARRIVALTIMEP      ++ VALUE                00121000
                      LCLC  &XARRIVALTIME       ++ NAME                 00121100
                      LCLC  &XCONTINUEP         ++ VALUE                00121200
                      LCLC  &XFROM      ++ VALUE                        00121300
                      LCLC  &XOWNER_TOKEN       ++ NAME                 00121400
                      LCLC  &XOWNER_DATA        ++ NAME                 00121500
                      LCLC  &XREPORTONLY        ++ VALUE                00121600
                      LCLC  &XEXSTARTTIMEP      ++ VALUE                00121700
                      LCLC  &XEXSTARTTIME       ++ NAME                 00121800
                      LCLC  &XSERVCLS   ++ NAME                         00121900
                      LCLC  &XASSOCIATE         ++ VALUE                00122000
                      LCLC  &XENCLAVETOKEN      ++ NAME                 00122100
                      LCLC  &XASID      ++ NAME                         00122200
                      LCLC  &XSCOPE     ++ VALUE                        00122300
                      LCLC  &XTRXNAME   ++ NAME                         00122400
                      LCLC  &XUSERID    ++ NAME                         00122500
                      LCLC  &XTRXCLASS  ++ NAME                         00122600
                      LCLC  &XTTRACETOKEN       ++ NAME                 00122700
                      LCLC  &XSOURCELU  ++ NAME                         00122800
                      LCLC  &XLU62TKN   ++ NAME                         00122900
                      LCLC  &XLU62TKN_FMT       ++ VALUE                00123000
                      LCLC  &XLU62TKN_LEN       ++ NAME                 00123100
                      LCLC  &XRETCODE   ++ NAME                         00123200
                      LCLC  &XRSNCODE   ++ NAME                         00123300
                      LCLA  &XPLISTVER  ++ VALUE                        00123400
.*******************************************************************    00123500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00123600
.*******************************************************************    00123700
                      LCLC  &ZXMONTKN   ++ INPUT NAME                   00123800
                      LCLC  &ZXMODE     ++ INPUT VALUE                  00123900
                      LCLC  &ZXDURATION         ++ INPUT VALUE          00124000
                      LCLC  &ZXDISPTYPE         ++ INPUT VALUE          00124100
                      LCLC  &ZXTCB      ++ INPUT NAME                   00124200
                      LCLC  &ZXARRIVALTIMEP     ++ INPUT VALUE          00124300
                      LCLC  &ZXARRIVALTIME      ++ INPUT NAME           00124400
                      LCLC  &ZXCONTINUEP        ++ INPUT VALUE          00124500
                      LCLC  &ZXFROM     ++ INPUT VALUE                  00124600
                      LCLC  &ZXOWNER_TOKEN      ++ INPUT NAME           00124700
                      LCLC  &ZXOWNER_DATA       ++ INPUT NAME           00124800
                      LCLC  &ZXREPORTONLY       ++ INPUT VALUE          00124900
                      LCLC  &ZXEXSTARTTIMEP     ++ INPUT VALUE          00125000
                      LCLC  &ZXEXSTARTTIME      ++ INPUT NAME           00125100
                      LCLC  &ZXSERVCLS  ++ INPUT NAME                   00125200
                      LCLC  &ZXASSOCIATE        ++ INPUT VALUE          00125300
                      LCLC  &ZXENCLAVETOKEN     ++ INPUT NAME           00125400
                      LCLC  &ZXASID     ++ INPUT NAME                   00125500
                      LCLC  &ZXSCOPE    ++ INPUT VALUE                  00125600
                      LCLC  &ZXTRXNAME  ++ INPUT NAME                   00125700
                      LCLC  &ZXUSERID   ++ INPUT NAME                   00125800
                      LCLC  &ZXTRXCLASS         ++ INPUT NAME           00125900
                      LCLC  &ZXTTRACETOKEN      ++ INPUT NAME           00126000
                      LCLC  &ZXSOURCELU         ++ INPUT NAME           00126100
                      LCLC  &ZXLU62TKN  ++ INPUT NAME                   00126200
                      LCLC  &ZXLU62TKN_FMT      ++ INPUT VALUE          00126300
                      LCLC  &ZXLU62TKN_LEN      ++ INPUT NAME           00126400
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00126500
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  00126600
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          00126700
.********************************************************************   00126800
.***AC.PLV01  PROCESS PLISTVER                                      *   00126900
.********************************************************************   00127000
&XPLISTVER      SETA  0                                                 00127100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00127200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00127300
&XPLISTVER      SETA  2                                                 00127400
.ZPLV0          ANOP  ,                                                 00127500
.*                                                                      00127600
                AIF   ('&REPORTONLY' EQ '').ZPLV1E                      00127700
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00127800
&XPLISTVER      SETA  2                                                 00127900
.ZPLV1E         ANOP  ,                                                 00128000
.*                                                                      00128100
                AIF   ('&ASSOCIATE' EQ '').ZPLV2E                       00128200
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00128300
&XPLISTVER      SETA  2                                                 00128400
.ZPLV2E         ANOP  ,                                                 00128500
.*                                                                      00128600
                AIF   ('&ENCLAVETOKEN' EQ '').ZPLV3E                    00128700
                AIF   (&XPLISTVER GE 2).ZPLV3E                          00128800
&XPLISTVER      SETA  2                                                 00128900
.ZPLV3E         ANOP  ,                                                 00129000
.*                                                                      00129100
                AIF   ('&ASID' EQ '').ZPLV4E                            00129200
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00129300
&XPLISTVER      SETA  2                                                 00129400
.ZPLV4E         ANOP  ,                                                 00129500
.*                                                                      00129600
                AIF   ('&TTRACETOKEN' EQ '').ZPLV5E                     00129700
                AIF   (&XPLISTVER GE 1).ZPLV5E                          00129800
&XPLISTVER      SETA  1                                                 00129900
.ZPLV5E         ANOP  ,                                                 00130000
.*                                                                      00130100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00130200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00130300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00130400
.*-------------------------------------------------------------------   00130500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00130600
&ZMS            SETC  '"PLISTVER='                                      00130700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00130800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00130900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00131000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00131100
                AGO   .ZPVCK2                                           00131200
.ZPVCK3         ANOP  ,                                                 00131300
.*-------------------------------------------------------------------   00131400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00131500
&ZMS            SETC  '"PLISTVER='                                      00131600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00131700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00131800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00131900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00132000
                AGO   .ZPVCKE                                           00132100
.ZPVCK2         ANOP  ,                                                 00132200
.*-------------------------------------------------------------------   00132300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00132400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00132500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00132600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00132700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00132800
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00132900
.ZPVCK6         ANOP  ,                                                 00133000
&ZMS            SETC  '"PLISTVER='                                      00133100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00133200
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00133300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00133400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00133500
&XPLISTVER      SETA  2                                                 00133600
                AGO   .ZPVCKE                                           00133700
.*-------------------------------------------------------------------   00133800
.ZPVCK4A        ANOP  ,                                                 00133900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00134000
&ZMS            SETC  'PLISTVER='                                       00134100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00134200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00134300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00134400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00134500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00134600
                AGO   .ZPVCK5                                           00134700
.ZPVCK4         ANOP  ,                                                 00134800
&XPLISTVER      SETA  &PLISTVER(1)                                      00134900
.ZPVCK5         ANOP  ,                                                 00135000
.ZPVCKE         ANOP  ,                                                 00135100
.********************************************************************   00135200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00135300
.********************************************************************   00135400
                      ACTR  10000                                       00135500
.*----------------------------------------------------------------***   00135600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00135700
                      AIF   (N'&MONTKN LE 1).ZG2A  CK NUM               00135800
&ZMS                  SETC  '"MONTKN='                                  00135900
&ZMS                  SETC  '&ZMS.&MONTKN"'                             00136000
&ZMS                  SETC  '&ZMS "MONTKN"'                             00136100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00136200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00136300
.ZG2A                 ANOP  ,                                           00136400
.*-------------------------------------------------------------------   00136500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00136600
&ZXMONTKN             SETC  'INPUT'     SET IN/OUTPUT                   00136700
&XMONTKN              SETC  '&MONTKN(1)'        SET XVARIABLE           00136800
                      AIF   (N'&MONTKN GT 1).ZG2B  MULTI PARMS          00136900
&XMONTKN              SETC  '&MONTKN'   SET XVARIABLE                   00137000
.ZG2B                 AIF   (K'&MONTKN(1) GT 0).ZG2C                    00137100
&ZXMONTKN             SETC  ''          RESET IN/OUTPUT                 00137200
&ZMS                  SETC  ' '                                         00137300
&ZMS                  SETC  '&ZMS "MONTKN" KEY AND ITS'                 00137400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00137500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00137600
.ZG2C                 ANOP  ,                                           00137700
.*-------------------------------------------------------------------   00137800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00137900
                      AIF   (K'&ZXMONTKN LE 0).ZG2R  NOT I/O            00138000
                      AIF   ('&XMONTKN'(1,1) NE '(').ZG2R               00138100
&ZCGPR                SETC  '&XMONTKN'(2,K'&XMONTKN-2)                  00138200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 00138300
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        00138400
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      00138500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00138600
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    00138700
.ZG2P                 ANOP  ,                                           00138800
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         00138900
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      00139000
                      AIF   ('&ZCGPR' LE '12').ZG2R                     00139100
.ZG2Q                 ANOP  ,                                           00139200
&ZMS                  SETC  '"MONTKN='                                  00139300
&ZMS                  SETC  '&ZMS.&MONTKN"'                             00139400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00139500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00139600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00139700
.ZG2R                 ANOP  ,                                           00139800
.*------------------------------------------------------------------    00139900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140000
&XMODE                SETC  ''          INITIALIZE XVARIABLE            00140100
.*-------------------------------------------------------------------   00140200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140300
.ZG6                  ANOP  ,                                           00140400
                      AIF   (K'&MODE(1) LE 0).ZG6A                      00140500
&ZTLC                 SETC 'RESET'                                      00140600
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG28                00140700
&XMODE                SETC  'RESET'     SET KEYWORD                     00140800
                      AIF   (N'&MODE LE 1).ZG6A  CK NUM                 00140900
&ZMS                  SETC  '"MODE='                                    00141000
&ZMS                  SETC  '&ZMS.&MODE"'                               00141100
&ZMS                  SETC  '&ZMS "MODE"'                               00141200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00141300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00141400
.ZG6A                 ANOP  ,                                           00141500
.*------------------------------------------------------------------    00141600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00141700
&XDURATION            SETC  ''          INITIALIZE XVARIABLE            00141800
.*-------------------------------------------------------------------   00141900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00142000
.ZG9                  ANOP  ,                                           00142100
                      AIF   (K'&DURATION(1) LE 0).ZG9A                  00142200
&ZTLC                 SETC 'EXECUTION'                                  00142300
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG10            00142400
&XDURATION            SETC  'EXECUTION'         SET KEYWORD             00142500
                      AIF   (N'&DURATION LE 1).ZG9A  CK NUM             00142600
&ZMS                  SETC  '"DURATION='                                00142700
&ZMS                  SETC  '&ZMS.&DURATION"'                           00142800
&ZMS                  SETC  '&ZMS "DURATION"'                           00142900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00143000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00143100
.ZG9A                 ANOP  ,                                           00143200
.*-------------------------------------------------------------------   00143300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00143400
.ZG10                 ANOP  ,                                           00143500
&ZTLC                 SETC 'BEGIN_TO_END'                               00143600
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG11            00143700
&XDURATION            SETC  'BEGIN_TO_END'      SET KEYWORD             00143800
                      AIF   (N'&DURATION LE 1).ZG10A  CK NUM            00143900
&ZMS                  SETC  '"DURATION='                                00144000
&ZMS                  SETC  '&ZMS.&DURATION"'                           00144100
&ZMS                  SETC  '&ZMS "DURATION"'                           00144200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00144300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00144400
.ZG10A                ANOP  ,                                           00144500
.*------------------------------------------------------------------    00144600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00144700
.ZG11                 ANOP  ,                                           00144800
&ZXDURATION           SETC  'INPUT'     SET IN/OUTPUT                   00144900
                      AIF   (K'&XDURATION GT 0).ZG11E  VALID ARG        00145000
                      AIF   (T'&DURATION EQ 'O').ZG11D  OMITTED         00145100
&ZASYSLNDX            SETA  0                                           00145200
.ZG11A                ANOP  ,           POSITIONAL MACRO KEY            00145300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00145400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG11C            00145500
&ZTLC                 SETC 'DURATION'                                   00145600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG11A   00145700
.ZG11B                ANOP  ,                                           00145800
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00145900
&ZMS                  SETC  'THE "DURATION" KEY'                        00146000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00146100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00146200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00146300
                      AGO   .ZG11E                                      00146400
.ZG11C                ANOP  ,                                           00146500
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00146600
&ZMS                  SETC  '"DURATION='                                00146700
&ZMS                  SETC  '&ZMS.&DURATION"'                           00146800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00146900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00147000
&ZMS                  SETC  '&ZMS "EXECUTION"'                          00147100
&ZMS                  SETC  '&ZMS OR "BEGIN_TO_END".'                   00147200
                      MNOTE 8,' &ZMS '                                  00147300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00147400
                      AGO   .ZG11E                                      00147500
.ZG11D                ANOP  ,                                           00147600
&XDURATION            SETC  'EXECUTION'         SET DEFAULT KEYWORD     00147700
.ZG11E                ANOP  ,                                           00147800
.*------------------------------------------------------------------    00147900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00148000
&XDISPTYPE            SETC  ''          INITIALIZE XVARIABLE            00148100
.*-------------------------------------------------------------------   00148200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00148300
.ZG14                 ANOP  ,                                           00148400
                      AIF   (K'&DISPTYPE(1) LE 0).ZG14A                 00148500
&ZTLC                 SETC 'TCB'                                        00148600
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG18            00148700
&XDISPTYPE            SETC  'TCB'       SET KEYWORD                     00148800
                      AIF   (N'&DISPTYPE LE 1).ZG14A  CK NUM            00148900
&ZMS                  SETC  '"DISPTYPE='                                00149000
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00149100
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00149200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00149300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00149400
.ZG14A                ANOP  ,                                           00149500
.*----------------------------------------------------------------***   00149600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00149700
                      AIF   (N'&TCB LE 1).ZG16A  CK NUM                 00149800
&ZMS                  SETC  '"TCB='                                     00149900
&ZMS                  SETC  '&ZMS.&TCB"'                                00150000
&ZMS                  SETC  '&ZMS "TCB"'                                00150100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00150200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00150300
.ZG16A                ANOP  ,                                           00150400
.*-------------------------------------------------------------------   00150500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00150600
&ZXTCB                SETC  'INPUT'     SET IN/OUTPUT                   00150700
&XTCB                 SETC  'NO_TCB'                                    00150800
                      AIF   (K'&TCB(1) LE 0).ZG16B  PARM                00150900
&XTCB                 SETC  '&TCB(1)'   SET XVARIABLE                   00151000
                      AIF   (N'&TCB GT 1).ZG16B  MULTI                  00151100
&XTCB                 SETC  '&TCB'      SET XVARIABLE                   00151200
.ZG16B                ANOP  ,                                           00151300
.*-------------------------------------------------------------------   00151400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00151500
                      AIF   (K'&ZXTCB LE 0).ZG16R  NOT I/O              00151600
         AIF   ('&XTCB' EQ 'NO_TCB').ZG16R                              00151700
                      AIF   ('&XTCB'(1,1) NE '(').ZG16R                 00151800
&ZCGPR                SETC  '&XTCB'(2,K'&XTCB-2)                        00151900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                00152000
                      AIF   (K'&ZCGPR GT 2).ZG16Q                       00152100
                      AIF   ('&ZCGPR' EQ '0').ZG16Q                     00152200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00152300
                      AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME   00152400
.ZG16P                ANOP  ,                                           00152500
                      AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC        00152600
                      AIF   ('&ZCGPR' LT '2').ZG16Q                     00152700
                      AIF   ('&ZCGPR' LE '12').ZG16R                    00152800
.ZG16Q                ANOP  ,                                           00152900
&ZMS                  SETC  '"TCB='                                     00153000
&ZMS                  SETC  '&ZMS.&TCB"'                                00153100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00153200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00153300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00153400
.ZG16R                ANOP  ,                                           00153500
.*-------------------------------------------------------------------   00153600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00153700
.ZG18                 ANOP  ,                                           00153800
&ZTLC                 SETC 'SRB'                                        00153900
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG19            00154000
&XDISPTYPE            SETC  'SRB'       SET KEYWORD                     00154100
                      AIF   (N'&DISPTYPE LE 1).ZG18A  CK NUM            00154200
&ZMS                  SETC  '"DISPTYPE='                                00154300
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00154400
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00154500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00154600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00154700
.ZG18A                ANOP  ,                                           00154800
.*------------------------------------------------------------------    00154900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00155000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00155100
.ZG18A0               AIF   (K'&TCB LE 0).ZG18A1  OK                    00155200
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00155300
.ZG18A1               AIF   (K'&ZCVAL LE 0).ZG18A2  OK                  00155400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00155500
&ZMS                  SETC  '"DISPTYPE'                                 00155600
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00155700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00155800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00155900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00156000
.ZG18A2               ANOP  ,                                           00156100
.*------------------------------------------------------------------    00156200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00156300
.ZG19                 ANOP  ,                                           00156400
&ZXDISPTYPE           SETC  'INPUT'     SET IN/OUTPUT                   00156500
                      AIF   (K'&XDISPTYPE GT 0).ZG19E  VALID ARG        00156600
                      AIF   (T'&DISPTYPE EQ 'O').ZG19D  OMITTED         00156700
&ZASYSLNDX            SETA  0                                           00156800
.ZG19A                ANOP  ,           POSITIONAL MACRO KEY            00156900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00157000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG19C            00157100
&ZTLC                 SETC 'DISPTYPE'                                   00157200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG19A   00157300
.ZG19B                ANOP  ,                                           00157400
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00157500
&ZMS                  SETC  'THE "DISPTYPE" KEY'                        00157600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00157700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00157800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00157900
                      AGO   .ZG19E                                      00158000
.ZG19C                ANOP  ,                                           00158100
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00158200
&ZMS                  SETC  '"DISPTYPE='                                00158300
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00158400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00158500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00158600
&ZMS                  SETC  '&ZMS "TCB"'                                00158700
&ZMS                  SETC  '&ZMS OR "SRB".'                            00158800
                      MNOTE 8,' &ZMS '                                  00158900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00159000
                      AGO   .ZG19E                                      00159100
.ZG19D                ANOP  ,                                           00159200
&XDISPTYPE            SETC  'TCB'       SET DEFAULT KEYWORD             00159300
.ZG19E                ANOP  ,                                           00159400
.*------------------------------------------------------------------    00159500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00159600
                      AIF   (K'&DISPTYPE(1) GT 0).ZG19F  PARM           00159700
&XDISPTYPE            SETC  ''          ENSURE NULL KEYWORD             00159800
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00159900
&ZMS                  SETC  'THE'                                       00160000
&ZMS                  SETC  '&ZMS "DISPTYPE" KEY AND ITS'               00160100
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00160200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00160300
&ZMS                  SETC  '&ZMS "TCB"'                                00160400
&ZMS                  SETC  '&ZMS OR "SRB".'                            00160500
                      MNOTE 8,' &ZMS '                                  00160600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00160700
.ZG19F                ANOP  ,                                           00160800
.*------------------------------------------------------------------    00160900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00161000
&XARRIVALTIMEP        SETC  ''          INITIALIZE XVARIABLE            00161100
.*-------------------------------------------------------------------   00161200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00161300
.ZG22                 ANOP  ,                                           00161400
                      AIF   (K'&ARRIVALTIMEP(1) LE 0).ZG22A             00161500
&ZTLC                 SETC 'CURRENT'                                    00161600
                      AIF   ('&ARRIVALTIMEP(1)' NE '&ZTLC').ZG23        00161700
&XARRIVALTIMEP        SETC  'CURRENT'   SET KEYWORD                     00161800
                      AIF   (N'&ARRIVALTIMEP LE 1).ZG22A  CK NUM        00161900
&ZMS                  SETC  '"ARRIVALTIMEP='                            00162000
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00162100
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP"'                       00162200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00162300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00162400
.ZG22A                ANOP  ,                                           00162500
.*------------------------------------------------------------------    00162600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00162700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00162800
.ZG22A0               AIF   (K'&ARRIVALTIME LE 0).ZG22A1  OK            00162900
&ZCVAL                SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED     00163000
.ZG22A1               AIF   (K'&ZCVAL LE 0).ZG22A2  OK                  00163100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00163200
&ZMS                  SETC  '"ARRIVALTIMEP'                             00163300
&ZMS                  SETC  '&ZMS.=&ARRIVALTIMEP"'                      00163400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00163500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00163600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00163700
.ZG22A2               ANOP  ,                                           00163800
.*-------------------------------------------------------------------   00163900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00164000
.ZG23                 ANOP  ,                                           00164100
&ZTLC                 SETC 'YES'                                        00164200
                      AIF   ('&ARRIVALTIMEP(1)' NE '&ZTLC').ZG27        00164300
&XARRIVALTIMEP        SETC  'YES'       SET KEYWORD                     00164400
                      AIF   (N'&ARRIVALTIMEP LE 1).ZG23A  CK NUM        00164500
&ZMS                  SETC  '"ARRIVALTIMEP='                            00164600
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00164700
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP"'                       00164800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00164900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00165000
.ZG23A                ANOP  ,                                           00165100
.*----------------------------------------------------------------***   00165200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00165300
                      AIF   (N'&ARRIVALTIME LE 1).ZG25A  CK NUM         00165400
&ZMS                  SETC  '"ARRIVALTIME='                             00165500
&ZMS                  SETC  '&ZMS.&ARRIVALTIME"'                        00165600
&ZMS                  SETC  '&ZMS "ARRIVALTIME"'                        00165700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00165800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00165900
.ZG25A                ANOP  ,                                           00166000
.*-------------------------------------------------------------------   00166100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00166200
&ZXARRIVALTIME        SETC  'INPUT'     SET IN/OUTPUT                   00166300
&XARRIVALTIME         SETC  '&ARRIVALTIME(1)'   SET XVARIABLE           00166400
                      AIF   (N'&ARRIVALTIME GT 1).ZG25B  MULTI PARMS    00166500
&XARRIVALTIME         SETC  '&ARRIVALTIME'      SET XVARIABLE           00166600
.ZG25B                AIF   (K'&ARRIVALTIME(1) GT 0).ZG25C              00166700
&ZXARRIVALTIME        SETC  ''          RESET IN/OUTPUT                 00166800
&ZMS                  SETC  ' '                                         00166900
&ZMS                  SETC  '&ZMS "ARRIVALTIME" KEY AND ITS'            00167000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00167100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00167200
.ZG25C                ANOP  ,                                           00167300
.*-------------------------------------------------------------------   00167400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00167500
                      AIF   (K'&ZXARRIVALTIME LE 0).ZG25R  NOT I/O      00167600
                      AIF   ('&XARRIVALTIME'(1,1) NE '(').ZG25R         00167700
&ZCGPR                SETC  '&XARRIVALTIME'(2,K'&XARRIVALTIME-2)        00167800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                00167900
                      AIF   (K'&ZCGPR GT 2).ZG25Q                       00168000
                      AIF   ('&ZCGPR' EQ '0').ZG25Q                     00168100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00168200
                      AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME   00168300
.ZG25P                ANOP  ,                                           00168400
                      AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC        00168500
                      AIF   ('&ZCGPR' LT '2').ZG25Q                     00168600
                      AIF   ('&ZCGPR' LE '12').ZG25R                    00168700
.ZG25Q                ANOP  ,                                           00168800
&ZMS                  SETC  '"ARRIVALTIME='                             00168900
&ZMS                  SETC  '&ZMS.&ARRIVALTIME"'                        00169000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00169100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00169200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00169300
.ZG25R                ANOP  ,                                           00169400
.*------------------------------------------------------------------    00169500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00169600
.ZG27                 ANOP  ,                                           00169700
&ZXARRIVALTIMEP       SETC  'INPUT'     SET IN/OUTPUT                   00169800
                      AIF   (K'&XARRIVALTIMEP GT 0).ZG27E  VALID ARG    00169900
                      AIF   (T'&ARRIVALTIMEP EQ 'O').ZG27D  OMITTED     00170000
&ZASYSLNDX            SETA  0                                           00170100
.ZG27A                ANOP  ,           POSITIONAL MACRO KEY            00170200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00170300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG27C            00170400
&ZTLC                 SETC 'ARRIVALTIMEP'                               00170500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG27A   00170600
.ZG27B                ANOP  ,                                           00170700
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00170800
&ZMS                  SETC  'THE "ARRIVALTIMEP" KEY'                    00170900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00171000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00171100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00171200
                      AGO   .ZG27E                                      00171300
.ZG27C                ANOP  ,                                           00171400
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00171500
&ZMS                  SETC  '"ARRIVALTIMEP='                            00171600
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00171700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00171800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00171900
&ZMS                  SETC  '&ZMS "CURRENT"'                            00172000
&ZMS                  SETC  '&ZMS OR "YES".'                            00172100
                      MNOTE 8,' &ZMS '                                  00172200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00172300
                      AGO   .ZG27E                                      00172400
.ZG27D                ANOP  ,                                           00172500
&XARRIVALTIMEP        SETC  'CURRENT'   SET DEFAULT KEYWORD             00172600
.ZG27E                ANOP  ,                                           00172700
.*------------------------------------------------------------------    00172800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00172900
                      AIF   (K'&ARRIVALTIMEP(1) GT 0).ZG27F  PARM       00173000
&XARRIVALTIMEP        SETC  ''          ENSURE NULL KEYWORD             00173100
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00173200
&ZMS                  SETC  'THE'                                       00173300
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP" KEY AND ITS'           00173400
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00173500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00173600
&ZMS                  SETC  '&ZMS "CURRENT"'                            00173700
&ZMS                  SETC  '&ZMS OR "YES".'                            00173800
                      MNOTE 8,' &ZMS '                                  00173900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00174000
.ZG27F                ANOP  ,                                           00174100
.*-------------------------------------------------------------------   00174200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00174300
.ZG28                 ANOP  ,                                           00174400
&ZTLC                 SETC 'RETAIN'                                     00174500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG44                00174600
&XMODE                SETC  'RETAIN'    SET KEYWORD                     00174700
                      AIF   (N'&MODE LE 1).ZG28A  CK NUM                00174800
&ZMS                  SETC  '"MODE='                                    00174900
&ZMS                  SETC  '&ZMS.&MODE"'                               00175000
&ZMS                  SETC  '&ZMS "MODE"'                               00175100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00175200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00175300
.ZG28A                ANOP  ,                                           00175400
.*------------------------------------------------------------------    00175500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00175600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00175700
.ZG28A0               AIF   (K'&ARRIVALTIMEP LE 0).ZG28A1  OK           00175800
&ZCVAL                SETC '&ZCVAL ARRIVALTIMEP'  INCORRECT KEY USED    00175900
.ZG28A1               AIF   (K'&ARRIVALTIME LE 0).ZG28A2  OK            00176000
&ZCVAL                SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED     00176100
.ZG28A2               AIF   (K'&ZCVAL LE 0).ZG28A3  OK                  00176200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00176300
&ZMS                  SETC  '"MODE'                                     00176400
&ZMS                  SETC  '&ZMS.=&MODE"'                              00176500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00176600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00176700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00176800
.ZG28A3               ANOP  ,                                           00176900
.*------------------------------------------------------------------    00177000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177100
&XDURATION            SETC  ''          INITIALIZE XVARIABLE            00177200
.*-------------------------------------------------------------------   00177300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177400
.ZG31                 ANOP  ,                                           00177500
                      AIF   (K'&DURATION(1) LE 0).ZG31A                 00177600
&ZTLC                 SETC 'PREV_VALUE'                                 00177700
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG32            00177800
&XDURATION            SETC  'PREV_VALUE'        SET KEYWORD             00177900
                      AIF   (N'&DURATION LE 1).ZG31A  CK NUM            00178000
&ZMS                  SETC  '"DURATION='                                00178100
&ZMS                  SETC  '&ZMS.&DURATION"'                           00178200
&ZMS                  SETC  '&ZMS "DURATION"'                           00178300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00178400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00178500
.ZG31A                ANOP  ,                                           00178600
.*-------------------------------------------------------------------   00178700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178800
.ZG32                 ANOP  ,                                           00178900
&ZTLC                 SETC 'EXECUTION'                                  00179000
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG33            00179100
&XDURATION            SETC  'EXECUTION'         SET KEYWORD             00179200
                      AIF   (N'&DURATION LE 1).ZG32A  CK NUM            00179300
&ZMS                  SETC  '"DURATION='                                00179400
&ZMS                  SETC  '&ZMS.&DURATION"'                           00179500
&ZMS                  SETC  '&ZMS "DURATION"'                           00179600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00179700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00179800
.ZG32A                ANOP  ,                                           00179900
.*-------------------------------------------------------------------   00180000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180100
.ZG33                 ANOP  ,                                           00180200
&ZTLC                 SETC 'BEGIN_TO_END'                               00180300
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG34            00180400
&XDURATION            SETC  'BEGIN_TO_END'      SET KEYWORD             00180500
                      AIF   (N'&DURATION LE 1).ZG33A  CK NUM            00180600
&ZMS                  SETC  '"DURATION='                                00180700
&ZMS                  SETC  '&ZMS.&DURATION"'                           00180800
&ZMS                  SETC  '&ZMS "DURATION"'                           00180900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00181000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00181100
.ZG33A                ANOP  ,                                           00181200
.*------------------------------------------------------------------    00181300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181400
.ZG34                 ANOP  ,                                           00181500
&ZXDURATION           SETC  'INPUT'     SET IN/OUTPUT                   00181600
                      AIF   (K'&XDURATION GT 0).ZG34E  VALID ARG        00181700
                      AIF   (T'&DURATION EQ 'O').ZG34D  OMITTED         00181800
&ZASYSLNDX            SETA  0                                           00181900
.ZG34A                ANOP  ,           POSITIONAL MACRO KEY            00182000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00182100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C            00182200
&ZTLC                 SETC 'DURATION'                                   00182300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A   00182400
.ZG34B                ANOP  ,                                           00182500
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00182600
&ZMS                  SETC  'THE "DURATION" KEY'                        00182700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00182800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00182900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00183000
                      AGO   .ZG34E                                      00183100
.ZG34C                ANOP  ,                                           00183200
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00183300
&ZMS                  SETC  '"DURATION='                                00183400
&ZMS                  SETC  '&ZMS.&DURATION"'                           00183500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00183600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00183700
&ZMS                  SETC  '&ZMS "PREV_VALUE",'                        00183800
&ZMS                  SETC  '&ZMS "EXECUTION",'                         00183900
&ZMS                  SETC  '&ZMS OR "BEGIN_TO_END".'                   00184000
                      MNOTE 8,' &ZMS '                                  00184100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00184200
                      AGO   .ZG34E                                      00184300
.ZG34D                ANOP  ,                                           00184400
&XDURATION            SETC  'PREV_VALUE'        SET DEFAULT KEYWORD     00184500
.ZG34E                ANOP  ,                                           00184600
.*------------------------------------------------------------------    00184700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184800
&XDISPTYPE            SETC  ''          INITIALIZE XVARIABLE            00184900
.*-------------------------------------------------------------------   00185000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00185100
.ZG37                 ANOP  ,                                           00185200
                      AIF   (K'&DISPTYPE(1) LE 0).ZG37A                 00185300
&ZTLC                 SETC 'SAVEDTYPE'                                  00185400
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG38            00185500
&XDISPTYPE            SETC  'SAVEDTYPE'         SET KEYWORD             00185600
                      AIF   (N'&DISPTYPE LE 1).ZG37A  CK NUM            00185700
&ZMS                  SETC  '"DISPTYPE='                                00185800
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00185900
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00186000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00186100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00186200
.ZG37A                ANOP  ,                                           00186300
.*------------------------------------------------------------------    00186400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00186500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00186600
.ZG37A0               AIF   (K'&TCB LE 0).ZG37A1  OK                    00186700
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00186800
.ZG37A1               AIF   (K'&ZCVAL LE 0).ZG37A2  OK                  00186900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00187000
&ZMS                  SETC  '"DISPTYPE'                                 00187100
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00187200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00187300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00187400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00187500
.ZG37A2               ANOP  ,                                           00187600
.*-------------------------------------------------------------------   00187700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00187800
.ZG38                 ANOP  ,                                           00187900
&ZTLC                 SETC 'TCB'                                        00188000
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG42            00188100
&XDISPTYPE            SETC  'TCB'       SET KEYWORD                     00188200
                      AIF   (N'&DISPTYPE LE 1).ZG38A  CK NUM            00188300
&ZMS                  SETC  '"DISPTYPE='                                00188400
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00188500
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00188600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00188700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00188800
.ZG38A                ANOP  ,                                           00188900
.*----------------------------------------------------------------***   00189000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00189100
                      AIF   (N'&TCB LE 1).ZG40A  CK NUM                 00189200
&ZMS                  SETC  '"TCB='                                     00189300
&ZMS                  SETC  '&ZMS.&TCB"'                                00189400
&ZMS                  SETC  '&ZMS "TCB"'                                00189500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00189600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00189700
.ZG40A                ANOP  ,                                           00189800
.*-------------------------------------------------------------------   00189900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00190000
&ZXTCB                SETC  'INPUT'     SET IN/OUTPUT                   00190100
&XTCB                 SETC  'NO_TCB'                                    00190200
                      AIF   (K'&TCB(1) LE 0).ZG40B  PARM                00190300
&XTCB                 SETC  '&TCB(1)'   SET XVARIABLE                   00190400
                      AIF   (N'&TCB GT 1).ZG40B  MULTI                  00190500
&XTCB                 SETC  '&TCB'      SET XVARIABLE                   00190600
.ZG40B                ANOP  ,                                           00190700
.*-------------------------------------------------------------------   00190800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00190900
                      AIF   (K'&ZXTCB LE 0).ZG40R  NOT I/O              00191000
         AIF   ('&XTCB' EQ 'NO_TCB').ZG40R                              00191100
                      AIF   ('&XTCB'(1,1) NE '(').ZG40R                 00191200
&ZCGPR                SETC  '&XTCB'(2,K'&XTCB-2)                        00191300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                00191400
                      AIF   (K'&ZCGPR GT 2).ZG40Q                       00191500
                      AIF   ('&ZCGPR' EQ '0').ZG40Q                     00191600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00191700
                      AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME   00191800
.ZG40P                ANOP  ,                                           00191900
                      AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC        00192000
                      AIF   ('&ZCGPR' LT '2').ZG40Q                     00192100
                      AIF   ('&ZCGPR' LE '12').ZG40R                    00192200
.ZG40Q                ANOP  ,                                           00192300
&ZMS                  SETC  '"TCB='                                     00192400
&ZMS                  SETC  '&ZMS.&TCB"'                                00192500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00192600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00192700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00192800
.ZG40R                ANOP  ,                                           00192900
.*-------------------------------------------------------------------   00193000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193100
.ZG42                 ANOP  ,                                           00193200
&ZTLC                 SETC 'SRB'                                        00193300
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG43            00193400
&XDISPTYPE            SETC  'SRB'       SET KEYWORD                     00193500
                      AIF   (N'&DISPTYPE LE 1).ZG42A  CK NUM            00193600
&ZMS                  SETC  '"DISPTYPE='                                00193700
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00193800
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00193900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00194000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00194100
.ZG42A                ANOP  ,                                           00194200
.*------------------------------------------------------------------    00194300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00194500
.ZG42A0               AIF   (K'&TCB LE 0).ZG42A1  OK                    00194600
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00194700
.ZG42A1               AIF   (K'&ZCVAL LE 0).ZG42A2  OK                  00194800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00194900
&ZMS                  SETC  '"DISPTYPE'                                 00195000
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00195100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00195200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00195300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00195400
.ZG42A2               ANOP  ,                                           00195500
.*------------------------------------------------------------------    00195600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00195700
.ZG43                 ANOP  ,                                           00195800
&ZXDISPTYPE           SETC  'INPUT'     SET IN/OUTPUT                   00195900
                      AIF   (K'&XDISPTYPE GT 0).ZG43E  VALID ARG        00196000
                      AIF   (T'&DISPTYPE EQ 'O').ZG43D  OMITTED         00196100
&ZASYSLNDX            SETA  0                                           00196200
.ZG43A                ANOP  ,           POSITIONAL MACRO KEY            00196300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00196400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG43C            00196500
&ZTLC                 SETC 'DISPTYPE'                                   00196600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG43A   00196700
.ZG43B                ANOP  ,                                           00196800
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00196900
&ZMS                  SETC  'THE "DISPTYPE" KEY'                        00197000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00197100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00197200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00197300
                      AGO   .ZG43E                                      00197400
.ZG43C                ANOP  ,                                           00197500
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00197600
&ZMS                  SETC  '"DISPTYPE='                                00197700
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00197800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00197900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00198000
&ZMS                  SETC  '&ZMS "SAVEDTYPE",'                         00198100
&ZMS                  SETC  '&ZMS "TCB",'                               00198200
&ZMS                  SETC  '&ZMS OR "SRB".'                            00198300
                      MNOTE 8,' &ZMS '                                  00198400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00198500
                      AGO   .ZG43E                                      00198600
.ZG43D                ANOP  ,                                           00198700
&XDISPTYPE            SETC  'SAVEDTYPE'         SET DEFAULT KEYWORD     00198800
.ZG43E                ANOP  ,                                           00198900
.*------------------------------------------------------------------    00199000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199100
                      AIF   (K'&DISPTYPE(1) GT 0).ZG43F  PARM           00199200
&XDISPTYPE            SETC  ''          ENSURE NULL KEYWORD             00199300
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00199400
&ZMS                  SETC  'THE'                                       00199500
&ZMS                  SETC  '&ZMS "DISPTYPE" KEY AND ITS'               00199600
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00199700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00199800
&ZMS                  SETC  '&ZMS "SAVEDTYPE",'                         00199900
&ZMS                  SETC  '&ZMS "TCB",'                               00200000
&ZMS                  SETC  '&ZMS OR "SRB".'                            00200100
                      MNOTE 8,' &ZMS '                                  00200200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00200300
.ZG43F                ANOP  ,                                           00200400
.*------------------------------------------------------------------    00200500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00200600
.ZG44                 ANOP  ,                                           00200700
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   00200800
                      AIF   (K'&XMODE GT 0).ZG44E  VALID ARG            00200900
                      AIF   (T'&MODE EQ 'O').ZG44D  OMITTED             00201000
&ZASYSLNDX            SETA  0                                           00201100
.ZG44A                ANOP  ,           POSITIONAL MACRO KEY            00201200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00201300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C            00201400
&ZTLC                 SETC 'MODE'                                       00201500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A   00201600
.ZG44B                ANOP  ,                                           00201700
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00201800
&ZMS                  SETC  'THE "MODE" KEY'                            00201900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00202000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00202100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00202200
                      AGO   .ZG44E                                      00202300
.ZG44C                ANOP  ,                                           00202400
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00202500
&ZMS                  SETC  '"MODE='                                    00202600
&ZMS                  SETC  '&ZMS.&MODE"'                               00202700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00202800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00202900
&ZMS                  SETC  '&ZMS "RESET"'                              00203000
&ZMS                  SETC  '&ZMS OR "RETAIN".'                         00203100
                      MNOTE 8,' &ZMS '                                  00203200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00203300
                      AGO   .ZG44E                                      00203400
.ZG44D                ANOP  ,                                           00203500
&XMODE                SETC  'RESET'     SET DEFAULT KEYWORD             00203600
.ZG44E                ANOP  ,                                           00203700
.*------------------------------------------------------------------    00203800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00203900
                      AIF   (K'&MODE(1) GT 0).ZG44F  PARM               00204000
&XMODE                SETC  ''          ENSURE NULL KEYWORD             00204100
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00204200
&ZMS                  SETC  'THE'                                       00204300
&ZMS                  SETC  '&ZMS "MODE" KEY AND ITS'                   00204400
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00204500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00204600
&ZMS                  SETC  '&ZMS "RESET"'                              00204700
&ZMS                  SETC  '&ZMS OR "RETAIN".'                         00204800
                      MNOTE 8,' &ZMS '                                  00204900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00205000
.ZG44F                ANOP  ,                                           00205100
.*------------------------------------------------------------------    00205200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205300
&XCONTINUEP           SETC  ''          INITIALIZE XVARIABLE            00205400
.*-------------------------------------------------------------------   00205500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205600
.ZG47                 ANOP  ,                                           00205700
                      AIF   (K'&CONTINUEP(1) LE 0).ZG47A                00205800
&ZTLC                 SETC 'YES'                                        00205900
                      AIF   ('&CONTINUEP(1)' NE '&ZTLC').ZG55           00206000
&XCONTINUEP           SETC  'YES'       SET KEYWORD                     00206100
                      AIF   (N'&CONTINUEP LE 1).ZG47A  CK NUM           00206200
&ZMS                  SETC  '"CONTINUEP='                               00206300
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00206400
&ZMS                  SETC  '&ZMS "CONTINUEP"'                          00206500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00206600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00206700
.ZG47A                ANOP  ,                                           00206800
.*------------------------------------------------------------------    00206900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00207000
&XFROM                SETC  ''          INITIALIZE XVARIABLE            00207100
.*-------------------------------------------------------------------   00207200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00207300
.ZG50                 ANOP  ,                                           00207400
                      AIF   (K'&FROM(1) LE 0).ZG50A                     00207500
&ZTLC                 SETC 'NONE'                                       00207600
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG51                00207700
&XFROM                SETC  'NONE'      SET KEYWORD                     00207800
                      AIF   (N'&FROM LE 1).ZG50A  CK NUM                00207900
&ZMS                  SETC  '"FROM='                                    00208000
&ZMS                  SETC  '&ZMS.&FROM"'                               00208100
&ZMS                  SETC  '&ZMS "FROM"'                               00208200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00208300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00208400
.ZG50A                ANOP  ,                                           00208500
.*-------------------------------------------------------------------   00208600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00208700
.ZG51                 ANOP  ,                                           00208800
&ZTLC                 SETC 'LOCALMVS'                                   00208900
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG52                00209000
&XFROM                SETC  'LOCALMVS'  SET KEYWORD                     00209100
                      AIF   (N'&FROM LE 1).ZG51A  CK NUM                00209200
&ZMS                  SETC  '"FROM='                                    00209300
&ZMS                  SETC  '&ZMS.&FROM"'                               00209400
&ZMS                  SETC  '&ZMS "FROM"'                               00209500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00209600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00209700
.ZG51A                ANOP  ,                                           00209800
.*-------------------------------------------------------------------   00209900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00210000
.ZG52                 ANOP  ,                                           00210100
&ZTLC                 SETC 'SYSPLEX'                                    00210200
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG53                00210300
&XFROM                SETC  'SYSPLEX'   SET KEYWORD                     00210400
                      AIF   (N'&FROM LE 1).ZG52A  CK NUM                00210500
&ZMS                  SETC  '"FROM='                                    00210600
&ZMS                  SETC  '&ZMS.&FROM"'                               00210700
&ZMS                  SETC  '&ZMS "FROM"'                               00210800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00210900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00211000
.ZG52A                ANOP  ,                                           00211100
.*-------------------------------------------------------------------   00211200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211300
.ZG53                 ANOP  ,                                           00211400
&ZTLC                 SETC 'NETWORK'                                    00211500
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG54                00211600
&XFROM                SETC  'NETWORK'   SET KEYWORD                     00211700
                      AIF   (N'&FROM LE 1).ZG53A  CK NUM                00211800
&ZMS                  SETC  '"FROM='                                    00211900
&ZMS                  SETC  '&ZMS.&FROM"'                               00212000
&ZMS                  SETC  '&ZMS "FROM"'                               00212100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00212200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00212300
.ZG53A                ANOP  ,                                           00212400
.*------------------------------------------------------------------    00212500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00212600
.ZG54                 ANOP  ,                                           00212700
&ZXFROM               SETC  'INPUT'     SET IN/OUTPUT                   00212800
                      AIF   (K'&XFROM GT 0).ZG54E  VALID ARG            00212900
                      AIF   (T'&FROM EQ 'O').ZG54D  OMITTED             00213000
&ZASYSLNDX            SETA  0                                           00213100
.ZG54A                ANOP  ,           POSITIONAL MACRO KEY            00213200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00213300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG54C            00213400
&ZTLC                 SETC 'FROM'                                       00213500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG54A   00213600
.ZG54B                ANOP  ,                                           00213700
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00213800
&ZMS                  SETC  'THE "FROM" KEY'                            00213900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00214000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00214100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00214200
                      AGO   .ZG54E                                      00214300
.ZG54C                ANOP  ,                                           00214400
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00214500
&ZMS                  SETC  '"FROM='                                    00214600
&ZMS                  SETC  '&ZMS.&FROM"'                               00214700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00214800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00214900
&ZMS                  SETC  '&ZMS "NONE",'                              00215000
&ZMS                  SETC  '&ZMS "LOCALMVS",'                          00215100
&ZMS                  SETC  '&ZMS "SYSPLEX",'                           00215200
&ZMS                  SETC  '&ZMS OR "NETWORK".'                        00215300
                      MNOTE 8,' &ZMS '                                  00215400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00215500
                      AGO   .ZG54E                                      00215600
.ZG54D                ANOP  ,                                           00215700
&XFROM                SETC  'NONE'      SET DEFAULT KEYWORD             00215800
.ZG54E                ANOP  ,                                           00215900
.*------------------------------------------------------------------    00216000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00216100
                      AIF   (K'&FROM(1) GT 0).ZG54F  PARM               00216200
&XFROM                SETC  ''          ENSURE NULL KEYWORD             00216300
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00216400
&ZMS                  SETC  'THE'                                       00216500
&ZMS                  SETC  '&ZMS "FROM" KEY AND ITS'                   00216600
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00216700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00216800
&ZMS                  SETC  '&ZMS "NONE",'                              00216900
&ZMS                  SETC  '&ZMS "LOCALMVS",'                          00217000
&ZMS                  SETC  '&ZMS "SYSPLEX",'                           00217100
&ZMS                  SETC  '&ZMS OR "NETWORK".'                        00217200
                      MNOTE 8,' &ZMS '                                  00217300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00217400
.ZG54F                ANOP  ,                                           00217500
.*-------------------------------------------------------------------   00217600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00217700
.ZG55                 ANOP  ,                                           00217800
&ZTLC                 SETC 'NO'                                         00217900
                      AIF   ('&CONTINUEP(1)' NE '&ZTLC').ZG56           00218000
&XCONTINUEP           SETC  'NO'        SET KEYWORD                     00218100
                      AIF   (N'&CONTINUEP LE 1).ZG55A  CK NUM           00218200
&ZMS                  SETC  '"CONTINUEP='                               00218300
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00218400
&ZMS                  SETC  '&ZMS "CONTINUEP"'                          00218500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00218600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00218700
.ZG55A                ANOP  ,                                           00218800
.*------------------------------------------------------------------    00218900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00219000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00219100
.ZG55A0               AIF   (K'&FROM LE 0).ZG55A1  OK                   00219200
&ZCVAL                SETC '&ZCVAL FROM'        INCORRECT KEY USED      00219300
.ZG55A1               AIF   (K'&ZCVAL LE 0).ZG55A2  OK                  00219400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00219500
&ZMS                  SETC  '"CONTINUEP'                                00219600
&ZMS                  SETC  '&ZMS.=&CONTINUEP"'                         00219700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00219800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00219900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00220000
.ZG55A2               ANOP  ,                                           00220100
.*------------------------------------------------------------------    00220200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220300
.ZG56                 ANOP  ,                                           00220400
&ZXCONTINUEP          SETC  'INPUT'     SET IN/OUTPUT                   00220500
                      AIF   (K'&XCONTINUEP GT 0).ZG56E  VALID ARG       00220600
                      AIF   (T'&CONTINUEP EQ 'O').ZG56D  OMITTED        00220700
&ZASYSLNDX            SETA  0                                           00220800
.ZG56A                ANOP  ,           POSITIONAL MACRO KEY            00220900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00221000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG56C            00221100
&ZTLC                 SETC 'CONTINUEP'                                  00221200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG56A   00221300
.ZG56B                ANOP  ,                                           00221400
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00221500
&ZMS                  SETC  'THE "CONTINUEP" KEY'                       00221600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00221700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00221800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00221900
                      AGO   .ZG56E                                      00222000
.ZG56C                ANOP  ,                                           00222100
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00222200
&ZMS                  SETC  '"CONTINUEP='                               00222300
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00222400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00222500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00222600
&ZMS                  SETC  '&ZMS "YES"'                                00222700
&ZMS                  SETC  '&ZMS OR "NO".'                             00222800
                      MNOTE 8,' &ZMS '                                  00222900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00223000
                      AGO   .ZG56E                                      00223100
.ZG56D                ANOP  ,                                           00223200
&XCONTINUEP           SETC  'YES'       SET DEFAULT KEYWORD             00223300
.ZG56E                ANOP  ,                                           00223400
.*------------------------------------------------------------------    00223500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00223600
                      AIF   (K'&CONTINUEP(1) GT 0).ZG56F  PARM          00223700
&XCONTINUEP           SETC  ''          ENSURE NULL KEYWORD             00223800
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00223900
&ZMS                  SETC  'THE'                                       00224000
&ZMS                  SETC  '&ZMS "CONTINUEP" KEY AND ITS'              00224100
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00224200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00224300
&ZMS                  SETC  '&ZMS "YES"'                                00224400
&ZMS                  SETC  '&ZMS OR "NO".'                             00224500
                      MNOTE 8,' &ZMS '                                  00224600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00224700
.ZG56F                ANOP  ,                                           00224800
.*----------------------------------------------------------------***   00224900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00225000
                      AIF   (N'&OWNER_TOKEN LE 1).ZG58A  CK NUM         00225100
&ZMS                  SETC  '"OWNER_TOKEN='                             00225200
&ZMS                  SETC  '&ZMS.&OWNER_TOKEN"'                        00225300
&ZMS                  SETC  '&ZMS "OWNER_TOKEN"'                        00225400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00225500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00225600
.ZG58A                ANOP  ,                                           00225700
.*-------------------------------------------------------------------   00225800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00225900
&ZXOWNER_TOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00226000
&XOWNER_TOKEN         SETC  'NO_OWNER_TOKEN'                            00226100
                      AIF   (K'&OWNER_TOKEN(1) LE 0).ZG58B  PARM        00226200
&XOWNER_TOKEN         SETC  '&OWNER_TOKEN(1)'   SET XVARIABLE           00226300
                      AIF   (N'&OWNER_TOKEN GT 1).ZG58B  MULTI          00226400
&XOWNER_TOKEN         SETC  '&OWNER_TOKEN'      SET XVARIABLE           00226500
.ZG58B                ANOP  ,                                           00226600
.*-------------------------------------------------------------------   00226700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00226800
                      AIF   (K'&ZXOWNER_TOKEN LE 0).ZG58R  NOT I/O      00226900
         AIF   ('&XOWNER_TOKEN' EQ 'NO_OWNER_TOKEN').ZG58R              00227000
                      AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZG58R         00227100
&ZCGPR                SETC  '&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2)        00227200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                00227300
                      AIF   (K'&ZCGPR GT 2).ZG58Q                       00227400
                      AIF   ('&ZCGPR' EQ '0').ZG58Q                     00227500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00227600
                      AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME   00227700
.ZG58P                ANOP  ,                                           00227800
                      AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC        00227900
                      AIF   ('&ZCGPR' LT '2').ZG58Q                     00228000
                      AIF   ('&ZCGPR' LE '12').ZG58R                    00228100
.ZG58Q                ANOP  ,                                           00228200
&ZMS                  SETC  '"OWNER_TOKEN='                             00228300
&ZMS                  SETC  '&ZMS.&OWNER_TOKEN"'                        00228400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00228500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00228600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00228700
.ZG58R                ANOP  ,                                           00228800
.*----------------------------------------------------------------***   00228900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00229000
                      AIF   (N'&OWNER_DATA LE 1).ZG61A  CK NUM          00229100
&ZMS                  SETC  '"OWNER_DATA='                              00229200
&ZMS                  SETC  '&ZMS.&OWNER_DATA"'                         00229300
&ZMS                  SETC  '&ZMS "OWNER_DATA"'                         00229400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00229500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00229600
.ZG61A                ANOP  ,                                           00229700
.*-------------------------------------------------------------------   00229800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00229900
&ZXOWNER_DATA         SETC  'INPUT'     SET IN/OUTPUT                   00230000
&XOWNER_DATA          SETC  'NO_OWNER_DATA'                             00230100
                      AIF   (K'&OWNER_DATA(1) LE 0).ZG61B  PARM         00230200
&XOWNER_DATA          SETC  '&OWNER_DATA(1)'    SET XVARIABLE           00230300
                      AIF   (N'&OWNER_DATA GT 1).ZG61B  MULTI           00230400
&XOWNER_DATA          SETC  '&OWNER_DATA'       SET XVARIABLE           00230500
.ZG61B                ANOP  ,                                           00230600
.*-------------------------------------------------------------------   00230700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00230800
                      AIF   (K'&ZXOWNER_DATA LE 0).ZG61R  NOT I/O       00230900
         AIF   ('&XOWNER_DATA' EQ 'NO_OWNER_DATA').ZG61R                00231000
                      AIF   ('&XOWNER_DATA'(1,1) NE '(').ZG61R          00231100
&ZCGPR                SETC  '&XOWNER_DATA'(2,K'&XOWNER_DATA-2)          00231200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG61P                00231300
                      AIF   (K'&ZCGPR GT 2).ZG61Q                       00231400
                      AIF   ('&ZCGPR' EQ '0').ZG61Q                     00231500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00231600
                      AIF   (T'&ZCGPR NE 'N').ZG61Q  INVALID REG NAME   00231700
.ZG61P                ANOP  ,                                           00231800
                      AIF   (T'&ZCGPR NE 'N').ZG61R  NON NUMERIC        00231900
                      AIF   ('&ZCGPR' LT '2').ZG61Q                     00232000
                      AIF   ('&ZCGPR' LE '12').ZG61R                    00232100
.ZG61Q                ANOP  ,                                           00232200
&ZMS                  SETC  '"OWNER_DATA='                              00232300
&ZMS                  SETC  '&ZMS.&OWNER_DATA"'                         00232400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00232500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00232600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00232700
.ZG61R                ANOP  ,                                           00232800
.*------------------------------------------------------------------    00232900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00233000
&XREPORTONLY          SETC  ''          INITIALIZE XVARIABLE            00233100
.*-------------------------------------------------------------------   00233200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00233300
.ZG65                 ANOP  ,                                           00233400
                      AIF   (K'&REPORTONLY(1) LE 0).ZG65A               00233500
&ZTLC                 SETC 'NO'                                         00233600
                      AIF   ('&REPORTONLY(1)' NE '&ZTLC').ZG78          00233700
&XREPORTONLY          SETC  'NO'        SET KEYWORD                     00233800
                      AIF   (N'&REPORTONLY LE 1).ZG65A  CK NUM          00233900
&ZMS                  SETC  '"REPORTONLY='                              00234000
&ZMS                  SETC  '&ZMS.&REPORTONLY"'                         00234100
&ZMS                  SETC  '&ZMS "REPORTONLY"'                         00234200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00234300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00234400
.ZG65A                ANOP  ,                                           00234500
.*------------------------------------------------------------------    00234600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00234700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00234800
.ZG65A0               AIF   (K'&ASSOCIATE LE 0).ZG65A1  OK              00234900
&ZCVAL                SETC '&ZCVAL ASSOCIATE'   INCORRECT KEY USED      00235000
.ZG65A1               AIF   (K'&ENCLAVETOKEN LE 0).ZG65A2  OK           00235100
&ZCVAL                SETC '&ZCVAL ENCLAVETOKEN'  INCORRECT KEY USED    00235200
.ZG65A2               AIF   (K'&ASID LE 0).ZG65A3  OK                   00235300
&ZCVAL                SETC '&ZCVAL ASID'        INCORRECT KEY USED      00235400
.ZG65A3               AIF   (K'&ZCVAL LE 0).ZG65A4  OK                  00235500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00235600
&ZMS                  SETC  '"REPORTONLY'                               00235700
&ZMS                  SETC  '&ZMS.=&REPORTONLY"'                        00235800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00235900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00236000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00236100
.ZG65A4               ANOP  ,                                           00236200
.*------------------------------------------------------------------    00236300
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00236400
&XEXSTARTTIMEP        SETC  ''          INITIALIZE XVARIABLE            00236500
.*-------------------------------------------------------------------   00236600
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00236700
.ZG68                 ANOP  ,                                           00236800
                      AIF   (K'&EXSTARTTIMEP(1) LE 0).ZG68A             00236900
&ZTLC                 SETC 'NO'                                         00237000
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG69        00237100
&XEXSTARTTIMEP        SETC  'NO'        SET KEYWORD                     00237200
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG68A  CK NUM        00237300
&ZMS                  SETC  '"EXSTARTTIMEP='                            00237400
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00237500
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00237600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00237700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00237800
.ZG68A                ANOP  ,                                           00237900
.*------------------------------------------------------------------    00238000
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00238100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00238200
.ZG68A0               AIF   (K'&EXSTARTTIME LE 0).ZG68A1  OK            00238300
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00238400
.ZG68A1               AIF   (K'&ZCVAL LE 0).ZG68A2  OK                  00238500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00238600
&ZMS                  SETC  '"EXSTARTTIMEP'                             00238700
&ZMS                  SETC  '&ZMS.=&EXSTARTTIMEP"'                      00238800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00238900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00239000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00239100
.ZG68A2               ANOP  ,                                           00239200
.*-------------------------------------------------------------------   00239300
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00239400
.ZG69                 ANOP  ,                                           00239500
&ZTLC                 SETC 'CURRENT'                                    00239600
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG70        00239700
&XEXSTARTTIMEP        SETC  'CURRENT'   SET KEYWORD                     00239800
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG69A  CK NUM        00239900
&ZMS                  SETC  '"EXSTARTTIMEP='                            00240000
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00240100
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00240200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00240300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00240400
.ZG69A                ANOP  ,                                           00240500
.*------------------------------------------------------------------    00240600
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00240700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00240800
.ZG69A0               AIF   (K'&EXSTARTTIME LE 0).ZG69A1  OK            00240900
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00241000
.ZG69A1               AIF   (K'&ZCVAL LE 0).ZG69A2  OK                  00241100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00241200
&ZMS                  SETC  '"EXSTARTTIMEP'                             00241300
&ZMS                  SETC  '&ZMS.=&EXSTARTTIMEP"'                      00241400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00241500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00241600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00241700
.ZG69A2               ANOP  ,                                           00241800
.*-------------------------------------------------------------------   00241900
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00242000
.ZG70                 ANOP  ,                                           00242100
&ZTLC                 SETC 'YES'                                        00242200
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG74        00242300
&XEXSTARTTIMEP        SETC  'YES'       SET KEYWORD                     00242400
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG70A  CK NUM        00242500
&ZMS                  SETC  '"EXSTARTTIMEP='                            00242600
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00242700
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00242800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00242900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00243000
.ZG70A                ANOP  ,                                           00243100
.*----------------------------------------------------------------***   00243200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00243300
                      AIF   (N'&EXSTARTTIME LE 1).ZG72A  CK NUM         00243400
&ZMS                  SETC  '"EXSTARTTIME='                             00243500
&ZMS                  SETC  '&ZMS.&EXSTARTTIME"'                        00243600
&ZMS                  SETC  '&ZMS "EXSTARTTIME"'                        00243700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00243800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00243900
.ZG72A                ANOP  ,                                           00244000
.*-------------------------------------------------------------------   00244100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00244200
&ZXEXSTARTTIME        SETC  'INPUT'     SET IN/OUTPUT                   00244300
&XEXSTARTTIME         SETC  '&EXSTARTTIME(1)'   SET XVARIABLE           00244400
                      AIF   (N'&EXSTARTTIME GT 1).ZG72B  MULTI PARMS    00244500
&XEXSTARTTIME         SETC  '&EXSTARTTIME'      SET XVARIABLE           00244600
.ZG72B                AIF   (K'&EXSTARTTIME(1) GT 0).ZG72C              00244700
&ZXEXSTARTTIME        SETC  ''          RESET IN/OUTPUT                 00244800
&ZMS                  SETC  ' '                                         00244900
&ZMS                  SETC  '&ZMS "EXSTARTTIME" KEY AND ITS'            00245000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00245100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00245200
.ZG72C                ANOP  ,                                           00245300
.*-------------------------------------------------------------------   00245400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00245500
                      AIF   (K'&ZXEXSTARTTIME LE 0).ZG72R  NOT I/O      00245600
                      AIF   ('&XEXSTARTTIME'(1,1) NE '(').ZG72R         00245700
&ZCGPR                SETC  '&XEXSTARTTIME'(2,K'&XEXSTARTTIME-2)        00245800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                00245900
                      AIF   (K'&ZCGPR GT 2).ZG72Q                       00246000
                      AIF   ('&ZCGPR' EQ '0').ZG72Q                     00246100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00246200
                      AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME   00246300
.ZG72P                ANOP  ,                                           00246400
                      AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC        00246500
                      AIF   ('&ZCGPR' LT '2').ZG72Q                     00246600
                      AIF   ('&ZCGPR' LE '12').ZG72R                    00246700
.ZG72Q                ANOP  ,                                           00246800
&ZMS                  SETC  '"EXSTARTTIME='                             00246900
&ZMS                  SETC  '&ZMS.&EXSTARTTIME"'                        00247000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00247100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00247200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00247300
.ZG72R                ANOP  ,                                           00247400
.*------------------------------------------------------------------    00247500
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00247600
.ZG74                 ANOP  ,                                           00247700
&ZXEXSTARTTIMEP       SETC  'INPUT'     SET IN/OUTPUT                   00247800
                      AIF   (K'&XEXSTARTTIMEP GT 0).ZG74E  VALID ARG    00247900
                      AIF   (T'&EXSTARTTIMEP EQ 'O').ZG74D  OMITTED     00248000
&ZASYSLNDX            SETA  0                                           00248100
.ZG74A                ANOP  ,           POSITIONAL MACRO KEY            00248200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00248300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG74C            00248400
&ZTLC                 SETC 'EXSTARTTIMEP'                               00248500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG74A   00248600
.ZG74B                ANOP  ,                                           00248700
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00248800
&ZMS                  SETC  'THE "EXSTARTTIMEP" KEY'                    00248900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00249000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00249100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00249200
                      AGO   .ZG74E                                      00249300
.ZG74C                ANOP  ,                                           00249400
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00249500
&ZMS                  SETC  '"EXSTARTTIMEP='                            00249600
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00249700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00249800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00249900
&ZMS                  SETC  '&ZMS "NO",'                                00250000
&ZMS                  SETC  '&ZMS "CURRENT",'                           00250100
&ZMS                  SETC  '&ZMS OR "YES".'                            00250200
                      MNOTE 8,' &ZMS '                                  00250300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00250400
                      AGO   .ZG74E                                      00250500
.ZG74D                ANOP  ,                                           00250600
&XEXSTARTTIMEP        SETC  'NO'        SET DEFAULT KEYWORD             00250700
.ZG74E                ANOP  ,                                           00250800
.*------------------------------------------------------------------    00250900
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00251000
                      AIF   (K'&EXSTARTTIMEP(1) GT 0).ZG74F  PARM       00251100
&XEXSTARTTIMEP        SETC  ''          ENSURE NULL KEYWORD             00251200
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00251300
&ZMS                  SETC  'THE'                                       00251400
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP" KEY AND ITS'           00251500
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00251600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00251700
&ZMS                  SETC  '&ZMS "NO",'                                00251800
&ZMS                  SETC  '&ZMS "CURRENT",'                           00251900
&ZMS                  SETC  '&ZMS OR "YES".'                            00252000
                      MNOTE 8,' &ZMS '                                  00252100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00252200
.ZG74F                ANOP  ,                                           00252300
.*----------------------------------------------------------------***   00252400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00252500
                      AIF   (N'&SERVCLS LE 1).ZG76A  CK NUM             00252600
&ZMS                  SETC  '"SERVCLS='                                 00252700
&ZMS                  SETC  '&ZMS.&SERVCLS"'                            00252800
&ZMS                  SETC  '&ZMS "SERVCLS"'                            00252900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00253000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00253100
.ZG76A                ANOP  ,                                           00253200
.*-------------------------------------------------------------------   00253300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00253400
&ZXSERVCLS            SETC  'INPUT'     SET IN/OUTPUT                   00253500
&XSERVCLS             SETC  'NO_SERVCLS'                                00253600
                      AIF   (K'&SERVCLS(1) LE 0).ZG76B  PARM            00253700
&XSERVCLS             SETC  '&SERVCLS(1)'       SET XVARIABLE           00253800
                      AIF   (N'&SERVCLS GT 1).ZG76B  MULTI              00253900
&XSERVCLS             SETC  '&SERVCLS'  SET XVARIABLE                   00254000
.ZG76B                ANOP  ,                                           00254100
.*-------------------------------------------------------------------   00254200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00254300
                      AIF   (K'&ZXSERVCLS LE 0).ZG76R  NOT I/O          00254400
         AIF   ('&XSERVCLS' EQ 'NO_SERVCLS').ZG76R                      00254500
                      AIF   ('&XSERVCLS'(1,1) NE '(').ZG76R             00254600
&ZCGPR                SETC  '&XSERVCLS'(2,K'&XSERVCLS-2)                00254700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                00254800
                      AIF   (K'&ZCGPR GT 2).ZG76Q                       00254900
                      AIF   ('&ZCGPR' EQ '0').ZG76Q                     00255000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00255100
                      AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME   00255200
.ZG76P                ANOP  ,                                           00255300
                      AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC        00255400
                      AIF   ('&ZCGPR' LT '2').ZG76Q                     00255500
                      AIF   ('&ZCGPR' LE '12').ZG76R                    00255600
.ZG76Q                ANOP  ,                                           00255700
&ZMS                  SETC  '"SERVCLS='                                 00255800
&ZMS                  SETC  '&ZMS.&SERVCLS"'                            00255900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00256000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00256100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00256200
.ZG76R                ANOP  ,                                           00256300
.*-------------------------------------------------------------------   00256400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00256500
.ZG78                 ANOP  ,                                           00256600
&ZTLC                 SETC 'YES'                                        00256700
                      AIF   ('&REPORTONLY(1)' NE '&ZTLC').ZG90          00256800
&XREPORTONLY          SETC  'YES'       SET KEYWORD                     00256900
                      AIF   (N'&REPORTONLY LE 1).ZG78A  CK NUM          00257000
&ZMS                  SETC  '"REPORTONLY='                              00257100
&ZMS                  SETC  '&ZMS.&REPORTONLY"'                         00257200
&ZMS                  SETC  '&ZMS "REPORTONLY"'                         00257300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00257400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00257500
.ZG78A                ANOP  ,                                           00257600
.*------------------------------------------------------------------    00257700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00257800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00257900
.ZG78A0               AIF   (K'&EXSTARTTIMEP LE 0).ZG78A1  OK           00258000
&ZCVAL                SETC '&ZCVAL EXSTARTTIMEP'  INCORRECT KEY USED    00258100
.ZG78A1               AIF   (K'&EXSTARTTIME LE 0).ZG78A2  OK            00258200
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00258300
.ZG78A2               AIF   (K'&SERVCLS LE 0).ZG78A3  OK                00258400
&ZCVAL                SETC '&ZCVAL SERVCLS'     INCORRECT KEY USED      00258500
.ZG78A3               AIF   (K'&ZCVAL LE 0).ZG78A4  OK                  00258600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00258700
&ZMS                  SETC  '"REPORTONLY'                               00258800
&ZMS                  SETC  '&ZMS.=&REPORTONLY"'                        00258900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00259000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00259100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00259200
.ZG78A4               ANOP  ,                                           00259300
.*------------------------------------------------------------------    00259400
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00259500
&XASSOCIATE           SETC  ''          INITIALIZE XVARIABLE            00259600
.*-------------------------------------------------------------------   00259700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00259800
.ZG81                 ANOP  ,                                           00259900
                      AIF   (K'&ASSOCIATE(1) LE 0).ZG81A                00260000
&ZTLC                 SETC 'ENCLAVE'                                    00260100
                      AIF   ('&ASSOCIATE(1)' NE '&ZTLC').ZG85           00260200
&XASSOCIATE           SETC  'ENCLAVE'   SET KEYWORD                     00260300
                      AIF   (N'&ASSOCIATE LE 1).ZG81A  CK NUM           00260400
&ZMS                  SETC  '"ASSOCIATE='                               00260500
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00260600
&ZMS                  SETC  '&ZMS "ASSOCIATE"'                          00260700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00260800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00260900
.ZG81A                ANOP  ,                                           00261000
.*------------------------------------------------------------------    00261100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00261200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00261300
.ZG81A0               AIF   (K'&ASID LE 0).ZG81A1  OK                   00261400
&ZCVAL                SETC '&ZCVAL ASID'        INCORRECT KEY USED      00261500
.ZG81A1               AIF   (K'&ZCVAL LE 0).ZG81A2  OK                  00261600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00261700
&ZMS                  SETC  '"ASSOCIATE'                                00261800
&ZMS                  SETC  '&ZMS.=&ASSOCIATE"'                         00261900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00262000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00262100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00262200
.ZG81A2               ANOP  ,                                           00262300
.*----------------------------------------------------------------***   00262400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00262500
                      AIF   (N'&ENCLAVETOKEN LE 1).ZG83A  CK NUM        00262600
&ZMS                  SETC  '"ENCLAVETOKEN='                            00262700
&ZMS                  SETC  '&ZMS.&ENCLAVETOKEN"'                       00262800
&ZMS                  SETC  '&ZMS "ENCLAVETOKEN"'                       00262900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00263000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00263100
.ZG83A                ANOP  ,                                           00263200
.*-------------------------------------------------------------------   00263300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00263400
&ZXENCLAVETOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00263500
&XENCLAVETOKEN        SETC  '&ENCLAVETOKEN(1)'  SET XVARIABLE           00263600
                      AIF   (N'&ENCLAVETOKEN GT 1).ZG83B  MULTI PARMS   00263700
&XENCLAVETOKEN        SETC  '&ENCLAVETOKEN'     SET XVARIABLE           00263800
.ZG83B                AIF   (K'&ENCLAVETOKEN(1) GT 0).ZG83C             00263900
&ZXENCLAVETOKEN       SETC  ''          RESET IN/OUTPUT                 00264000
&ZMS                  SETC  ' '                                         00264100
&ZMS                  SETC  '&ZMS "ENCLAVETOKEN" KEY AND ITS'           00264200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00264300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00264400
.ZG83C                ANOP  ,                                           00264500
.*-------------------------------------------------------------------   00264600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00264700
                      AIF   (K'&ZXENCLAVETOKEN LE 0).ZG83R  NOT I/O     00264800
                      AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZG83R        00264900
&ZCGPR                SETC  '&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2)      00265000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                00265100
                      AIF   (K'&ZCGPR GT 2).ZG83Q                       00265200
                      AIF   ('&ZCGPR' EQ '0').ZG83Q                     00265300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00265400
                      AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME   00265500
.ZG83P                ANOP  ,                                           00265600
                      AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC        00265700
                      AIF   ('&ZCGPR' LT '2').ZG83Q                     00265800
                      AIF   ('&ZCGPR' LE '12').ZG83R                    00265900
.ZG83Q                ANOP  ,                                           00266000
&ZMS                  SETC  '"ENCLAVETOKEN='                            00266100
&ZMS                  SETC  '&ZMS.&ENCLAVETOKEN"'                       00266200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00266300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00266400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00266500
.ZG83R                ANOP  ,                                           00266600
.*-------------------------------------------------------------------   00266700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00266800
.ZG85                 ANOP  ,                                           00266900
&ZTLC                 SETC 'ADDRESS_SPACE'                              00267000
                      AIF   ('&ASSOCIATE(1)' NE '&ZTLC').ZG89           00267100
&XASSOCIATE           SETC  'ADDRESS_SPACE'     SET KEYWORD             00267200
                      AIF   (N'&ASSOCIATE LE 1).ZG85A  CK NUM           00267300
&ZMS                  SETC  '"ASSOCIATE='                               00267400
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00267500
&ZMS                  SETC  '&ZMS "ASSOCIATE"'                          00267600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00267700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00267800
.ZG85A                ANOP  ,                                           00267900
.*------------------------------------------------------------------    00268000
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00268100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00268200
.ZG85A0               AIF   (K'&ENCLAVETOKEN LE 0).ZG85A1  OK           00268300
&ZCVAL                SETC '&ZCVAL ENCLAVETOKEN'  INCORRECT KEY USED    00268400
.ZG85A1               AIF   (K'&ZCVAL LE 0).ZG85A2  OK                  00268500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00268600
&ZMS                  SETC  '"ASSOCIATE'                                00268700
&ZMS                  SETC  '&ZMS.=&ASSOCIATE"'                         00268800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00268900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00269000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00269100
.ZG85A2               ANOP  ,                                           00269200
.*----------------------------------------------------------------***   00269300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00269400
                      AIF   (N'&ASID LE 1).ZG87A  CK NUM                00269500
&ZMS                  SETC  '"ASID='                                    00269600
&ZMS                  SETC  '&ZMS.&ASID"'                               00269700
&ZMS                  SETC  '&ZMS "ASID"'                               00269800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00269900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00270000
.ZG87A                ANOP  ,                                           00270100
.*-------------------------------------------------------------------   00270200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00270300
&ZXASID               SETC  'INPUT'     SET IN/OUTPUT                   00270400
&XASID                SETC  '&ASID(1)'  SET XVARIABLE                   00270500
                      AIF   (N'&ASID GT 1).ZG87B  MULTI PARMS           00270600
&XASID                SETC  '&ASID'     SET XVARIABLE                   00270700
.ZG87B                AIF   (K'&ASID(1) GT 0).ZG87C                     00270800
&ZXASID               SETC  ''          RESET IN/OUTPUT                 00270900
&ZMS                  SETC  ' '                                         00271000
&ZMS                  SETC  '&ZMS "ASID" KEY AND ITS'                   00271100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00271200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00271300
.ZG87C                ANOP  ,                                           00271400
.*-------------------------------------------------------------------   00271500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00271600
                      AIF   (K'&ZXASID LE 0).ZG87R  NOT I/O             00271700
                      AIF   ('&XASID'(1,1) NE '(').ZG87R                00271800
&ZCGPR                SETC  '&XASID'(2,K'&XASID-2)                      00271900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                00272000
                      AIF   (K'&ZCGPR GT 2).ZG87Q                       00272100
                      AIF   ('&ZCGPR' EQ '0').ZG87Q                     00272200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00272300
                      AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME   00272400
.ZG87P                ANOP  ,                                           00272500
                      AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC        00272600
                      AIF   ('&ZCGPR' LT '2').ZG87Q                     00272700
                      AIF   ('&ZCGPR' LE '12').ZG87R                    00272800
.ZG87Q                ANOP  ,                                           00272900
&ZMS                  SETC  '"ASID='                                    00273000
&ZMS                  SETC  '&ZMS.&ASID"'                               00273100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00273200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00273300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00273400
.ZG87R                ANOP  ,                                           00273500
.*------------------------------------------------------------------    00273600
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00273700
.ZG89                 ANOP  ,                                           00273800
&ZXASSOCIATE          SETC  'INPUT'     SET IN/OUTPUT                   00273900
                      AIF   (K'&XASSOCIATE GT 0).ZG89E  VALID ARG       00274000
                      AIF   (T'&ASSOCIATE EQ 'O').ZG89D  OMITTED        00274100
&ZASYSLNDX            SETA  0                                           00274200
.ZG89A                ANOP  ,           POSITIONAL MACRO KEY            00274300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00274400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG89C            00274500
&ZTLC                 SETC 'ASSOCIATE'                                  00274600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG89A   00274700
.ZG89B                ANOP  ,                                           00274800
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00274900
&ZMS                  SETC  'THE "ASSOCIATE" KEY'                       00275000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00275100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00275200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00275300
                      AGO   .ZG89E                                      00275400
.ZG89C                ANOP  ,                                           00275500
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00275600
&ZMS                  SETC  '"ASSOCIATE='                               00275700
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00275800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00275900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00276000
&ZMS                  SETC  '&ZMS "ENCLAVE"'                            00276100
&ZMS                  SETC  '&ZMS OR "ADDRESS_SPACE".'                  00276200
                      MNOTE 8,' &ZMS '                                  00276300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00276400
                      AGO   .ZG89E                                      00276500
.ZG89D                ANOP  ,                                           00276600
&XASSOCIATE           SETC  'ENCLAVE'   SET DEFAULT KEYWORD             00276700
.ZG89E                ANOP  ,                                           00276800
.*------------------------------------------------------------------    00276900
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00277000
                      AIF   (K'&ASSOCIATE(1) GT 0).ZG89F  PARM          00277100
&XASSOCIATE           SETC  ''          ENSURE NULL KEYWORD             00277200
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00277300
&ZMS                  SETC  'THE'                                       00277400
&ZMS                  SETC  '&ZMS "ASSOCIATE" KEY AND ITS'              00277500
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00277600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00277700
&ZMS                  SETC  '&ZMS "ENCLAVE"'                            00277800
&ZMS                  SETC  '&ZMS OR "ADDRESS_SPACE".'                  00277900
                      MNOTE 8,' &ZMS '                                  00278000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00278100
.ZG89F                ANOP  ,                                           00278200
.*------------------------------------------------------------------    00278300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00278400
.ZG90                 ANOP  ,                                           00278500
&ZXREPORTONLY         SETC  'INPUT'     SET IN/OUTPUT                   00278600
                      AIF   (K'&XREPORTONLY GT 0).ZG90E  VALID ARG      00278700
                      AIF   (T'&REPORTONLY EQ 'O').ZG90D  OMITTED       00278800
&ZASYSLNDX            SETA  0                                           00278900
.ZG90A                ANOP  ,           POSITIONAL MACRO KEY            00279000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00279100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG90C            00279200
&ZTLC                 SETC 'REPORTONLY'                                 00279300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG90A   00279400
.ZG90B                ANOP  ,                                           00279500
&ZXREPORTONLY         SETC  ''          RESET IN/OUTPUT                 00279600
&ZMS                  SETC  'THE "REPORTONLY" KEY'                      00279700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00279800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00279900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00280000
                      AGO   .ZG90E                                      00280100
.ZG90C                ANOP  ,                                           00280200
&ZXREPORTONLY         SETC  ''          RESET IN/OUTPUT                 00280300
&ZMS                  SETC  '"REPORTONLY='                              00280400
&ZMS                  SETC  '&ZMS.&REPORTONLY"'                         00280500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00280600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00280700
&ZMS                  SETC  '&ZMS "NO"'                                 00280800
&ZMS                  SETC  '&ZMS OR "YES".'                            00280900
                      MNOTE 8,' &ZMS '                                  00281000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00281100
                      AGO   .ZG90E                                      00281200
.ZG90D                ANOP  ,                                           00281300
&XREPORTONLY          SETC  'NO'        SET DEFAULT KEYWORD             00281400
.ZG90E                ANOP  ,                                           00281500
.*------------------------------------------------------------------    00281600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00281700
&XSCOPE               SETC  ''          INITIALIZE XVARIABLE            00281800
.*-------------------------------------------------------------------   00281900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282000
.ZG93                 ANOP  ,                                           00282100
                      AIF   (K'&SCOPE(1) LE 0).ZG93A                    00282200
&ZTLC                 SETC 'SHARED'                                     00282300
                      AIF   ('&SCOPE(1)' NE '&ZTLC').ZG94               00282400
&XSCOPE               SETC  'SHARED'    SET KEYWORD                     00282500
                      AIF   (N'&SCOPE LE 1).ZG93A  CK NUM               00282600
&ZMS                  SETC  '"SCOPE='                                   00282700
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00282800
&ZMS                  SETC  '&ZMS "SCOPE"'                              00282900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00283000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00283100
.ZG93A                ANOP  ,                                           00283200
.*-------------------------------------------------------------------   00283300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00283400
.ZG94                 ANOP  ,                                           00283500
&ZTLC                 SETC 'SINGLE'                                     00283600
                      AIF   ('&SCOPE(1)' NE '&ZTLC').ZG95               00283700
&XSCOPE               SETC  'SINGLE'    SET KEYWORD                     00283800
                      AIF   (N'&SCOPE LE 1).ZG94A  CK NUM               00283900
&ZMS                  SETC  '"SCOPE='                                   00284000
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00284100
&ZMS                  SETC  '&ZMS "SCOPE"'                              00284200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00284300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00284400
.ZG94A                ANOP  ,                                           00284500
.*------------------------------------------------------------------    00284600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00284700
.ZG95                 ANOP  ,                                           00284800
&ZXSCOPE              SETC  'INPUT'     SET IN/OUTPUT                   00284900
                      AIF   (K'&XSCOPE GT 0).ZG95E  VALID ARG           00285000
                      AIF   (T'&SCOPE EQ 'O').ZG95D  OMITTED            00285100
&ZASYSLNDX            SETA  0                                           00285200
.ZG95A                ANOP  ,           POSITIONAL MACRO KEY            00285300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00285400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG95C            00285500
&ZTLC                 SETC 'SCOPE'                                      00285600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG95A   00285700
.ZG95B                ANOP  ,                                           00285800
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00285900
&ZMS                  SETC  'THE "SCOPE" KEY'                           00286000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00286100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00286200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00286300
                      AGO   .ZG95E                                      00286400
.ZG95C                ANOP  ,                                           00286500
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00286600
&ZMS                  SETC  '"SCOPE='                                   00286700
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00286800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00286900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00287000
&ZMS                  SETC  '&ZMS "SHARED"'                             00287100
&ZMS                  SETC  '&ZMS OR "SINGLE".'                         00287200
                      MNOTE 8,' &ZMS '                                  00287300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00287400
                      AGO   .ZG95E                                      00287500
.ZG95D                ANOP  ,                                           00287600
&XSCOPE               SETC  'SHARED'    SET DEFAULT KEYWORD             00287700
.ZG95E                ANOP  ,                                           00287800
.*------------------------------------------------------------------    00287900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288000
                      AIF   (K'&SCOPE(1) GT 0).ZG95F  PARM              00288100
&XSCOPE               SETC  ''          ENSURE NULL KEYWORD             00288200
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00288300
&ZMS                  SETC  'THE'                                       00288400
&ZMS                  SETC  '&ZMS "SCOPE" KEY AND ITS'                  00288500
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00288600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00288700
&ZMS                  SETC  '&ZMS "SHARED"'                             00288800
&ZMS                  SETC  '&ZMS OR "SINGLE".'                         00288900
                      MNOTE 8,' &ZMS '                                  00289000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00289100
.ZG95F                ANOP  ,                                           00289200
.*----------------------------------------------------------------***   00289300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00289400
                      AIF   (N'&TRXNAME LE 1).ZG97A  CK NUM             00289500
&ZMS                  SETC  '"TRXNAME='                                 00289600
&ZMS                  SETC  '&ZMS.&TRXNAME"'                            00289700
&ZMS                  SETC  '&ZMS "TRXNAME"'                            00289800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00289900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00290000
.ZG97A                ANOP  ,                                           00290100
.*-------------------------------------------------------------------   00290200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00290300
&ZXTRXNAME            SETC  'INPUT'     SET IN/OUTPUT                   00290400
&XTRXNAME             SETC  'NO_TRXNAME'                                00290500
                      AIF   (K'&TRXNAME(1) LE 0).ZG97B  PARM            00290600
&XTRXNAME             SETC  '&TRXNAME(1)'       SET XVARIABLE           00290700
                      AIF   (N'&TRXNAME GT 1).ZG97B  MULTI              00290800
&XTRXNAME             SETC  '&TRXNAME'  SET XVARIABLE                   00290900
.ZG97B                ANOP  ,                                           00291000
.*-------------------------------------------------------------------   00291100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00291200
                      AIF   (K'&ZXTRXNAME LE 0).ZG97R  NOT I/O          00291300
         AIF   ('&XTRXNAME' EQ 'NO_TRXNAME').ZG97R                      00291400
                      AIF   ('&XTRXNAME'(1,1) NE '(').ZG97R             00291500
&ZCGPR                SETC  '&XTRXNAME'(2,K'&XTRXNAME-2)                00291600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                00291700
                      AIF   (K'&ZCGPR GT 2).ZG97Q                       00291800
                      AIF   ('&ZCGPR' EQ '0').ZG97Q                     00291900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00292000
                      AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME   00292100
.ZG97P                ANOP  ,                                           00292200
                      AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC        00292300
                      AIF   ('&ZCGPR' LT '2').ZG97Q                     00292400
                      AIF   ('&ZCGPR' LE '12').ZG97R                    00292500
.ZG97Q                ANOP  ,                                           00292600
&ZMS                  SETC  '"TRXNAME='                                 00292700
&ZMS                  SETC  '&ZMS.&TRXNAME"'                            00292800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00292900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00293000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00293100
.ZG97R                ANOP  ,                                           00293200
.*----------------------------------------------------------------***   00293300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00293400
                      AIF   (N'&USERID LE 1).ZG100A  CK NUM             00293500
&ZMS                  SETC  '"USERID='                                  00293600
&ZMS                  SETC  '&ZMS.&USERID"'                             00293700
&ZMS                  SETC  '&ZMS "USERID"'                             00293800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00293900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00294000
.ZG100A               ANOP  ,                                           00294100
.*-------------------------------------------------------------------   00294200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00294300
&ZXUSERID             SETC  'INPUT'     SET IN/OUTPUT                   00294400
&XUSERID              SETC  'NO_USERID'                                 00294500
                      AIF   (K'&USERID(1) LE 0).ZG100B  PARM            00294600
&XUSERID              SETC  '&USERID(1)'        SET XVARIABLE           00294700
                      AIF   (N'&USERID GT 1).ZG100B  MULTI              00294800
&XUSERID              SETC  '&USERID'   SET XVARIABLE                   00294900
.ZG100B               ANOP  ,                                           00295000
.*-------------------------------------------------------------------   00295100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00295200
                      AIF   (K'&ZXUSERID LE 0).ZG100R  NOT I/O          00295300
         AIF   ('&XUSERID' EQ 'NO_USERID').ZG100R                       00295400
                      AIF   ('&XUSERID'(1,1) NE '(').ZG100R             00295500
&ZCGPR                SETC  '&XUSERID'(2,K'&XUSERID-2)                  00295600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG100P               00295700
                      AIF   (K'&ZCGPR GT 2).ZG100Q                      00295800
                      AIF   ('&ZCGPR' EQ '0').ZG100Q                    00295900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00296000
                      AIF   (T'&ZCGPR NE 'N').ZG100Q  INVALID REG NAME  00296100
.ZG100P               ANOP  ,                                           00296200
                      AIF   (T'&ZCGPR NE 'N').ZG100R  NON NUMERIC       00296300
                      AIF   ('&ZCGPR' LT '2').ZG100Q                    00296400
                      AIF   ('&ZCGPR' LE '12').ZG100R                   00296500
.ZG100Q               ANOP  ,                                           00296600
&ZMS                  SETC  '"USERID='                                  00296700
&ZMS                  SETC  '&ZMS.&USERID"'                             00296800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00296900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00297000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00297100
.ZG100R               ANOP  ,                                           00297200
.*----------------------------------------------------------------***   00297300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00297400
                      AIF   (N'&TRXCLASS LE 1).ZG103A  CK NUM           00297500
&ZMS                  SETC  '"TRXCLASS='                                00297600
&ZMS                  SETC  '&ZMS.&TRXCLASS"'                           00297700
&ZMS                  SETC  '&ZMS "TRXCLASS"'                           00297800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00297900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00298000
.ZG103A               ANOP  ,                                           00298100
.*-------------------------------------------------------------------   00298200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00298300
&ZXTRXCLASS           SETC  'INPUT'     SET IN/OUTPUT                   00298400
&XTRXCLASS            SETC  'NO_TRXCLASS'                               00298500
                      AIF   (K'&TRXCLASS(1) LE 0).ZG103B  PARM          00298600
&XTRXCLASS            SETC  '&TRXCLASS(1)'      SET XVARIABLE           00298700
                      AIF   (N'&TRXCLASS GT 1).ZG103B  MULTI            00298800
&XTRXCLASS            SETC  '&TRXCLASS'         SET XVARIABLE           00298900
.ZG103B               ANOP  ,                                           00299000
.*-------------------------------------------------------------------   00299100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00299200
                      AIF   (K'&ZXTRXCLASS LE 0).ZG103R  NOT I/O        00299300
         AIF   ('&XTRXCLASS' EQ 'NO_TRXCLASS').ZG103R                   00299400
                      AIF   ('&XTRXCLASS'(1,1) NE '(').ZG103R           00299500
&ZCGPR                SETC  '&XTRXCLASS'(2,K'&XTRXCLASS-2)              00299600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG103P               00299700
                      AIF   (K'&ZCGPR GT 2).ZG103Q                      00299800
                      AIF   ('&ZCGPR' EQ '0').ZG103Q                    00299900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00300000
                      AIF   (T'&ZCGPR NE 'N').ZG103Q  INVALID REG NAME  00300100
.ZG103P               ANOP  ,                                           00300200
                      AIF   (T'&ZCGPR NE 'N').ZG103R  NON NUMERIC       00300300
                      AIF   ('&ZCGPR' LT '2').ZG103Q                    00300400
                      AIF   ('&ZCGPR' LE '12').ZG103R                   00300500
.ZG103Q               ANOP  ,                                           00300600
&ZMS                  SETC  '"TRXCLASS='                                00300700
&ZMS                  SETC  '&ZMS.&TRXCLASS"'                           00300800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00300900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00301000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00301100
.ZG103R               ANOP  ,                                           00301200
.*----------------------------------------------------------------***   00301300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00301400
                      AIF   (N'&TTRACETOKEN LE 1).ZG106A  CK NUM        00301500
&ZMS                  SETC  '"TTRACETOKEN='                             00301600
&ZMS                  SETC  '&ZMS.&TTRACETOKEN"'                        00301700
&ZMS                  SETC  '&ZMS "TTRACETOKEN"'                        00301800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00301900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00302000
.ZG106A               ANOP  ,                                           00302100
.*-------------------------------------------------------------------   00302200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00302300
&ZXTTRACETOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00302400
&XTTRACETOKEN         SETC  'NO_TTRACETOKEN'                            00302500
                      AIF   (K'&TTRACETOKEN(1) LE 0).ZG106B  PARM       00302600
&XTTRACETOKEN         SETC  '&TTRACETOKEN(1)'   SET XVARIABLE           00302700
                      AIF   (N'&TTRACETOKEN GT 1).ZG106B  MULTI         00302800
&XTTRACETOKEN         SETC  '&TTRACETOKEN'      SET XVARIABLE           00302900
.ZG106B               ANOP  ,                                           00303000
.*-------------------------------------------------------------------   00303100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00303200
                      AIF   (K'&ZXTTRACETOKEN LE 0).ZG106R  NOT I/O     00303300
         AIF   ('&XTTRACETOKEN' EQ 'NO_TTRACETOKEN').ZG106R             00303400
                      AIF   ('&XTTRACETOKEN'(1,1) NE '(').ZG106R        00303500
&ZCGPR                SETC  '&XTTRACETOKEN'(2,K'&XTTRACETOKEN-2)        00303600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG106P               00303700
                      AIF   (K'&ZCGPR GT 2).ZG106Q                      00303800
                      AIF   ('&ZCGPR' EQ '0').ZG106Q                    00303900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00304000
                      AIF   (T'&ZCGPR NE 'N').ZG106Q  INVALID REG NAME  00304100
.ZG106P               ANOP  ,                                           00304200
                      AIF   (T'&ZCGPR NE 'N').ZG106R  NON NUMERIC       00304300
                      AIF   ('&ZCGPR' LT '2').ZG106Q                    00304400
                      AIF   ('&ZCGPR' LE '12').ZG106R                   00304500
.ZG106Q               ANOP  ,                                           00304600
&ZMS                  SETC  '"TTRACETOKEN='                             00304700
&ZMS                  SETC  '&ZMS.&TTRACETOKEN"'                        00304800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00304900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00305000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00305100
.ZG106R               ANOP  ,                                           00305200
.*----------------------------------------------------------------***   00305300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00305400
                      AIF   (N'&SOURCELU LE 1).ZG109A  CK NUM           00305500
&ZMS                  SETC  '"SOURCELU='                                00305600
&ZMS                  SETC  '&ZMS.&SOURCELU"'                           00305700
&ZMS                  SETC  '&ZMS "SOURCELU"'                           00305800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00305900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00306000
.ZG109A               ANOP  ,                                           00306100
.*-------------------------------------------------------------------   00306200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00306300
&ZXSOURCELU           SETC  'INPUT'     SET IN/OUTPUT                   00306400
&XSOURCELU            SETC  'NO_SOURCELU'                               00306500
                      AIF   (K'&SOURCELU(1) LE 0).ZG109B  PARM          00306600
&XSOURCELU            SETC  '&SOURCELU(1)'      SET XVARIABLE           00306700
                      AIF   (N'&SOURCELU GT 1).ZG109B  MULTI            00306800
&XSOURCELU            SETC  '&SOURCELU'         SET XVARIABLE           00306900
.ZG109B               ANOP  ,                                           00307000
.*-------------------------------------------------------------------   00307100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00307200
                      AIF   (K'&ZXSOURCELU LE 0).ZG109R  NOT I/O        00307300
         AIF   ('&XSOURCELU' EQ 'NO_SOURCELU').ZG109R                   00307400
                      AIF   ('&XSOURCELU'(1,1) NE '(').ZG109R           00307500
&ZCGPR                SETC  '&XSOURCELU'(2,K'&XSOURCELU-2)              00307600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG109P               00307700
                      AIF   (K'&ZCGPR GT 2).ZG109Q                      00307800
                      AIF   ('&ZCGPR' EQ '0').ZG109Q                    00307900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00308000
                      AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME  00308100
.ZG109P               ANOP  ,                                           00308200
                      AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC       00308300
                      AIF   ('&ZCGPR' LT '2').ZG109Q                    00308400
                      AIF   ('&ZCGPR' LE '12').ZG109R                   00308500
.ZG109Q               ANOP  ,                                           00308600
&ZMS                  SETC  '"SOURCELU='                                00308700
&ZMS                  SETC  '&ZMS.&SOURCELU"'                           00308800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00308900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00309000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00309100
.ZG109R               ANOP  ,                                           00309200
.*----------------------------------------------------------------***   00309300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00309400
                      AIF   (N'&LU62TKN LE 1).ZG112A  CK NUM            00309500
&ZMS                  SETC  '"LU62TKN='                                 00309600
&ZMS                  SETC  '&ZMS.&LU62TKN"'                            00309700
&ZMS                  SETC  '&ZMS "LU62TKN"'                            00309800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00309900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00310000
.ZG112A               ANOP  ,                                           00310100
.*-------------------------------------------------------------------   00310200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00310300
&ZXLU62TKN            SETC  'INPUT'     SET IN/OUTPUT                   00310400
&XLU62TKN             SETC  'NO_LU62TKN'                                00310500
                      AIF   (K'&LU62TKN(1) LE 0).ZG112B  PARM           00310600
&XLU62TKN             SETC  '&LU62TKN(1)'       SET XVARIABLE           00310700
                      AIF   (N'&LU62TKN GT 1).ZG112B  MULTI             00310800
&XLU62TKN             SETC  '&LU62TKN'  SET XVARIABLE                   00310900
.ZG112B               ANOP  ,                                           00311000
.*-------------------------------------------------------------------   00311100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00311200
                      AIF   (K'&ZXLU62TKN LE 0).ZG112R  NOT I/O         00311300
         AIF   ('&XLU62TKN' EQ 'NO_LU62TKN').ZG112R                     00311400
                      AIF   ('&XLU62TKN'(1,1) NE '(').ZG112R            00311500
&ZCGPR                SETC  '&XLU62TKN'(2,K'&XLU62TKN-2)                00311600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG112P               00311700
                      AIF   (K'&ZCGPR GT 2).ZG112Q                      00311800
                      AIF   ('&ZCGPR' EQ '0').ZG112Q                    00311900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00312000
                      AIF   (T'&ZCGPR NE 'N').ZG112Q  INVALID REG NAME  00312100
.ZG112P               ANOP  ,                                           00312200
                      AIF   (T'&ZCGPR NE 'N').ZG112R  NON NUMERIC       00312300
                      AIF   ('&ZCGPR' LT '2').ZG112Q                    00312400
                      AIF   ('&ZCGPR' LE '12').ZG112R                   00312500
.ZG112Q               ANOP  ,                                           00312600
&ZMS                  SETC  '"LU62TKN='                                 00312700
&ZMS                  SETC  '&ZMS.&LU62TKN"'                            00312800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00312900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00313000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00313100
.ZG112R               ANOP  ,                                           00313200
.*------------------------------------------------------------------    00313300
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00313400
&XLU62TKN_FMT         SETC  ''          INITIALIZE XVARIABLE            00313500
.*-------------------------------------------------------------------   00313600
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00313700
.ZG115                ANOP  ,                                           00313800
                      AIF   (K'&LU62TKN_FMT(1) LE 0).ZG115A             00313900
&ZTLC                 SETC 'LU_NO_CC_27'                                00314000
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG116        00314100
&XLU62TKN_FMT         SETC  'LU_NO_CC_27'       SET KEYWORD             00314200
                      AIF   (N'&LU62TKN_FMT LE 1).ZG115A  CK NUM        00314300
&ZMS                  SETC  '"LU62TKN_FMT='                             00314400
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00314500
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00314600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00314700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00314800
.ZG115A               ANOP  ,                                           00314900
.*------------------------------------------------------------------    00315000
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00315100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00315200
.ZG115A0              AIF   (K'&LU62TKN_LEN LE 0).ZG115A1  OK           00315300
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00315400
.ZG115A1              AIF   (K'&ZCVAL LE 0).ZG115A2  OK                 00315500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00315600
&ZMS                  SETC  '"LU62TKN_FMT'                              00315700
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00315800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00315900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00316000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00316100
.ZG115A2              ANOP  ,                                           00316200
.*-------------------------------------------------------------------   00316300
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00316400
.ZG116                ANOP  ,                                           00316500
&ZTLC                 SETC 'FULL_LU_NO_CC_27'                           00316600
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG117        00316700
&XLU62TKN_FMT         SETC  'FULL_LU_NO_CC_27'  SET KEYWORD             00316800
                      AIF   (N'&LU62TKN_FMT LE 1).ZG116A  CK NUM        00316900
&ZMS                  SETC  '"LU62TKN_FMT='                             00317000
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00317100
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00317200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00317300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00317400
.ZG116A               ANOP  ,                                           00317500
.*------------------------------------------------------------------    00317600
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00317700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00317800
.ZG116A0              AIF   (K'&LU62TKN_LEN LE 0).ZG116A1  OK           00317900
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00318000
.ZG116A1              AIF   (K'&ZCVAL LE 0).ZG116A2  OK                 00318100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00318200
&ZMS                  SETC  '"LU62TKN_FMT'                              00318300
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00318400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00318500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00318600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00318700
.ZG116A2              ANOP  ,                                           00318800
.*-------------------------------------------------------------------   00318900
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00319000
.ZG117                ANOP  ,                                           00319100
&ZTLC                 SETC 'FULL_LU_0_CC_28'                            00319200
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG118        00319300
&XLU62TKN_FMT         SETC  'FULL_LU_0_CC_28'   SET KEYWORD             00319400
                      AIF   (N'&LU62TKN_FMT LE 1).ZG117A  CK NUM        00319500
&ZMS                  SETC  '"LU62TKN_FMT='                             00319600
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00319700
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00319800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00319900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00320000
.ZG117A               ANOP  ,                                           00320100
.*------------------------------------------------------------------    00320200
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00320300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00320400
.ZG117A0              AIF   (K'&LU62TKN_LEN LE 0).ZG117A1  OK           00320500
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00320600
.ZG117A1              AIF   (K'&ZCVAL LE 0).ZG117A2  OK                 00320700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00320800
&ZMS                  SETC  '"LU62TKN_FMT'                              00320900
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00321000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00321100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00321200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00321300
.ZG117A2              ANOP  ,                                           00321400
.*-------------------------------------------------------------------   00321500
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00321600
.ZG118                ANOP  ,                                           00321700
&ZTLC                 SETC 'FULL_LU_CC_36'                              00321800
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG119        00321900
&XLU62TKN_FMT         SETC  'FULL_LU_CC_36'     SET KEYWORD             00322000
                      AIF   (N'&LU62TKN_FMT LE 1).ZG118A  CK NUM        00322100
&ZMS                  SETC  '"LU62TKN_FMT='                             00322200
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00322300
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00322400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00322500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00322600
.ZG118A               ANOP  ,                                           00322700
.*------------------------------------------------------------------    00322800
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00322900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00323000
.ZG118A0              AIF   (K'&LU62TKN_LEN LE 0).ZG118A1  OK           00323100
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00323200
.ZG118A1              AIF   (K'&ZCVAL LE 0).ZG118A2  OK                 00323300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00323400
&ZMS                  SETC  '"LU62TKN_FMT'                              00323500
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00323600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00323700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00323800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00323900
.ZG118A2              ANOP  ,                                           00324000
.*-------------------------------------------------------------------   00324100
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00324200
.ZG119                ANOP  ,                                           00324300
&ZTLC                 SETC 'OTHER'                                      00324400
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG123        00324500
&XLU62TKN_FMT         SETC  'OTHER'     SET KEYWORD                     00324600
                      AIF   (N'&LU62TKN_FMT LE 1).ZG119A  CK NUM        00324700
&ZMS                  SETC  '"LU62TKN_FMT='                             00324800
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00324900
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00325000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00325100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00325200
.ZG119A               ANOP  ,                                           00325300
.*----------------------------------------------------------------***   00325400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00325500
                      AIF   (N'&LU62TKN_LEN LE 1).ZG121A  CK NUM        00325600
&ZMS                  SETC  '"LU62TKN_LEN='                             00325700
&ZMS                  SETC  '&ZMS.&LU62TKN_LEN"'                        00325800
&ZMS                  SETC  '&ZMS "LU62TKN_LEN"'                        00325900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00326000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00326100
.ZG121A               ANOP  ,                                           00326200
.*-------------------------------------------------------------------   00326300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00326400
&ZXLU62TKN_LEN        SETC  'INPUT'     SET IN/OUTPUT                   00326500
&XLU62TKN_LEN         SETC  '&LU62TKN_LEN(1)'   SET XVARIABLE           00326600
                      AIF   (N'&LU62TKN_LEN GT 1).ZG121B  MULTI PARMS   00326700
&XLU62TKN_LEN         SETC  '&LU62TKN_LEN'      SET XVARIABLE           00326800
.ZG121B               AIF   (K'&LU62TKN_LEN(1) GT 0).ZG121C             00326900
&ZXLU62TKN_LEN        SETC  ''          RESET IN/OUTPUT                 00327000
&ZMS                  SETC  'WHEN "OTHER" IS SPECIFIED'                 00327100
&ZMS                  SETC  '&ZMS , "LU62TKN_LEN" KEY AND ITS'          00327200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00327300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00327400
.ZG121C               ANOP  ,                                           00327500
.*-------------------------------------------------------------------   00327600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00327700
                      AIF   (K'&ZXLU62TKN_LEN LE 0).ZG121R  NOT I/O     00327800
                      AIF   ('&XLU62TKN_LEN'(1,1) NE '(').ZG121R        00327900
&ZCGPR                SETC  '&XLU62TKN_LEN'(2,K'&XLU62TKN_LEN-2)        00328000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG121P               00328100
                      AIF   (K'&ZCGPR GT 2).ZG121Q                      00328200
                      AIF   ('&ZCGPR' EQ '0').ZG121Q                    00328300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00328400
                      AIF   (T'&ZCGPR NE 'N').ZG121Q  INVALID REG NAME  00328500
.ZG121P               ANOP  ,                                           00328600
                      AIF   (T'&ZCGPR NE 'N').ZG121R  NON NUMERIC       00328700
                      AIF   ('&ZCGPR' LT '2').ZG121Q                    00328800
                      AIF   ('&ZCGPR' LE '12').ZG121R                   00328900
.ZG121Q               ANOP  ,                                           00329000
&ZMS                  SETC  '"LU62TKN_LEN='                             00329100
&ZMS                  SETC  '&ZMS.&LU62TKN_LEN"'                        00329200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00329300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00329400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00329500
.ZG121R               ANOP  ,                                           00329600
.*------------------------------------------------------------------    00329700
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00329800
.ZG123                ANOP  ,                                           00329900
&ZXLU62TKN_FMT        SETC  'INPUT'     SET IN/OUTPUT                   00330000
                      AIF   (K'&XLU62TKN_FMT GT 0).ZG123E  VALID ARG    00330100
                      AIF   (T'&LU62TKN_FMT EQ 'O').ZG123D  OMITTED     00330200
&ZASYSLNDX            SETA  0                                           00330300
.ZG123A               ANOP  ,           POSITIONAL MACRO KEY            00330400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00330500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG123C           00330600
&ZTLC                 SETC 'LU62TKN_FMT'                                00330700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG123A  00330800
.ZG123B               ANOP  ,                                           00330900
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00331000
&ZMS                  SETC  'THE "LU62TKN_FMT" KEY'                     00331100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00331200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00331300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00331400
                      AGO   .ZG123E                                     00331500
.ZG123C               ANOP  ,                                           00331600
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00331700
&ZMS                  SETC  '"LU62TKN_FMT='                             00331800
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00331900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00332000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00332100
&ZMS                  SETC  '&ZMS "LU_NO_CC_27",'                       00332200
&ZMS                  SETC  '&ZMS "FULL_LU_NO_CC_27",'                  00332300
&ZMS                  SETC  '&ZMS "FULL_LU_0_CC_28",'                   00332400
&ZMS                  SETC  '&ZMS "FULL_LU_CC_36",'                     00332500
&ZMS                  SETC  '&ZMS OR "OTHER".'                          00332600
                      MNOTE 8,' &ZMS '                                  00332700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00332800
                      AGO   .ZG123E                                     00332900
.ZG123D               ANOP  ,                                           00333000
&XLU62TKN_FMT         SETC  'LU_NO_CC_27'       SET DEFAULT KEYWORD     00333100
.ZG123E               ANOP  ,                                           00333200
.*------------------------------------------------------------------    00333300
.***AG.KKCTL06 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00333400
                      AIF   (K'&LU62TKN(1) GT 0).ZG123F  KEY            00333500
                      AIF   (K'&LU62TKN_FMT(1) LE 0).ZG123G  PARM       00333600
&ZMS                  SETC  '"LU62TKN_FMT'                              00333700
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00333800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00333900
&ZMS                  SETC  '&ZMS '                                     00334000
&ZMS                  SETC  '&ZMS "LU62TKN"'                            00334100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00334200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00334300
                      AGO   .ZG123G                                     00334400
.*                                                                      00334500
.ZG123F               ANOP  ,                                           00334600
                      AIF   (K'&LU62TKN_FMT(1) GT 0).ZG123G  PARM       00334700
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00334800
&XLU62TKN_FMT         SETC  ''          ENSURE NULL KEYWORD             00334900
&ZMS                  SETC  'WHEN "LU62TKN" IS SPECIFIED, THE'          00335000
&ZMS                  SETC  '&ZMS "LU62TKN_FMT" KEY AND ITS'            00335100
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00335200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00335300
&ZMS                  SETC  '&ZMS "LU_NO_CC_27",'                       00335400
&ZMS                  SETC  '&ZMS "FULL_LU_NO_CC_27",'                  00335500
&ZMS                  SETC  '&ZMS "FULL_LU_0_CC_28",'                   00335600
&ZMS                  SETC  '&ZMS "FULL_LU_CC_36",'                     00335700
&ZMS                  SETC  '&ZMS OR "OTHER".'                          00335800
                      MNOTE 8,' &ZMS '                                  00335900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00336000
.ZG123G               ANOP  ,                                           00336100
.*----------------------------------------------------------------***   00336200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00336300
                      AIF   (N'&RETCODE LE 1).ZG126A  CK NUM            00336400
&ZMS                  SETC  '"RETCODE='                                 00336500
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00336600
&ZMS                  SETC  '&ZMS "RETCODE"'                            00336700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00336800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00336900
.ZG126A               ANOP  ,                                           00337000
.*-------------------------------------------------------------------   00337100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00337200
                      AIF   (K'&RETCODE(1) LE 0).ZG126C  NO PARM        00337300
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      00337400
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           00337500
                      AIF   (N'&RETCODE GT 1).ZG126C                    00337600
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   00337700
.ZG126C               ANOP  ,                                           00337800
.*-------------------------------------------------------------------   00337900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00338000
                      AIF   (K'&ZXRETCODE LE 0).ZG126R  NOT I/O         00338100
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG126R            00338200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00338300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG126P               00338400
                      AIF   (K'&ZCGPR GT 2).ZG126Q                      00338500
                      AIF   ('&ZCGPR' EQ '0').ZG126Q                    00338600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00338700
                      AIF   (T'&ZCGPR NE 'N').ZG126Q  INVALID REG NAME  00338800
.ZG126P               ANOP  ,                                           00338900
                      AIF   (T'&ZCGPR NE 'N').ZG126R  NON NUMERIC       00339000
                      AIF   ('&ZCGPR' EQ '15').ZG126R                   00339100
                      AIF   ('&ZCGPR' LT '2').ZG126Q                    00339200
                      AIF   ('&ZCGPR' LE '12').ZG126R                   00339300
.ZG126Q               ANOP  ,                                           00339400
&ZMS                  SETC  '"RETCODE='                                 00339500
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00339600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00339700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'    00339800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00339900
.ZG126R               ANOP  ,                                           00340000
.*----------------------------------------------------------------***   00340100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00340200
                      AIF   (N'&RSNCODE LE 1).ZG129A  CK NUM            00340300
&ZMS                  SETC  '"RSNCODE='                                 00340400
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            00340500
&ZMS                  SETC  '&ZMS "RSNCODE"'                            00340600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00340700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00340800
.ZG129A               ANOP  ,                                           00340900
.*-------------------------------------------------------------------   00341000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00341100
                      AIF   (K'&RSNCODE(1) LE 0).ZG129C  NO PARM        00341200
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      00341300
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           00341400
                      AIF   (N'&RSNCODE GT 1).ZG129C                    00341500
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   00341600
.ZG129C               ANOP  ,                                           00341700
.*-------------------------------------------------------------------   00341800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00341900
                      AIF   (K'&ZXRSNCODE LE 0).ZG129R  NOT I/O         00342000
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG129R            00342100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00342200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG129P               00342300
                      AIF   (K'&ZCGPR GT 2).ZG129Q                      00342400
                      AIF   ('&ZCGPR' EQ '0').ZG129R                    00342500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00342600
                      AIF   (T'&ZCGPR NE 'N').ZG129Q  INVALID REG NAME  00342700
.ZG129P               ANOP  ,                                           00342800
                      AIF   (T'&ZCGPR NE 'N').ZG129R  NON NUMERIC       00342900
                      AIF   ('&ZCGPR' EQ '0').ZG129R                    00343000
                      AIF   ('&ZCGPR' LT '2').ZG129Q                    00343100
                      AIF   ('&ZCGPR' LE '12').ZG129R                   00343200
.ZG129Q               ANOP  ,                                           00343300
&ZMS                  SETC  '"RSNCODE='                                 00343400
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            00343500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00343600
                      MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'     00343700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00343800
.ZG129R               ANOP  ,                                           00343900
.******************************************************************     00344000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00344100
.******************************************************************     00344200
                      ACTR  10000                                       00344300
.*----------------------------------------------------------------***   00344400
.***AH.P02 EXTRA POSITIONALS                                            00344500
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        00344600
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        00344700
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    00344800
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     00344900
.ZGLISTX1             ANOP  ,                                           00345000
&ZCVAL                SETC  ''          ERROR FIELD                     00345100
&ZAWRK                SETA  0           POSITIONAL NUMBER               00345200
.ZGLIST2              ANOP  ,                                           00345300
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 00345400
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        00345500
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             00345600
                      AGO   .ZGLIST2                                    00345700
.*                                                                      00345800
.ZGLIST3              ANOP  ,                                           00345900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          00346000
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'                   00346100
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             00346200
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      00346300
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              00346400
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      00346500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00346600
.ZGLISTX              ANOP  ,                                           00346700
&ZASYSLNDX            SETA  0                                           00346800
.*******************************************************************    00346900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00347000
.*******************************************************************    00347100
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        00347200
.*******************************************************************    00347300
.***AE.01  START OF IWMMINIT MACRO CODE                                 00347400
.*******************************************************************    00347500
                      LCLC  &M0M0001                 NAME               00347600
&M0M0001              SETC  '&XLABEL'                SET NAME           00347700
                      AIF   (K'&XLABEL NE 0).XLAB2                      00347800
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       00347900
.*                                                                      00348000
.XLAB2                ANOP  ,                                           00348100
&M0M0001 DS    0H                             IWMMINIT-2                00348200
.*******************************************************************    00348300
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00348400
.*******************************************************************    00348500
              PUSH  PRINT                                               00348600
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  00348700
                      PRINT OFF         ++ PR01                         00348800
                      AGO   .ZPRNTXX                                    00348900
.ZPRINTX              PRINT ON                                          00349000
.ZPRNTXX              ANOP  ,                                           00349100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00349200
         LCLC  &T1,&T2                                                  00349300
&T1      SETC  '&MONTKN'                                                00349400
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00349500
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00349600
&T1      SETC  '0(&T1.)'                                                00349700
.MONTKNRS  ANOP                                                         00349800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00349900
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00350000
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00350100
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00350200
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00350300
         B     END&SYSNDX              BRANCH TO END LABEL              00350400
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00350500
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00350600
         BE    MONENVOK&SYSNDX         BRANCH WHEN MON ENV PASSES       00350700
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00350800
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00350900
         B     END&SYSNDX              BRANCH TO END LABEL              00351000
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00351100
         USING PB,14                                                    00351200
         AIF   ('&MODE' NE 'RESET').ENDRESET                            00351300
         LH    15,PB_NEW_LENGTH                               @OW26040  00351400
         LTR   15,15                                          @OW26040  00351500
         BZ    NOLENGTH&SYSNDX                                @OW26040  00351600
         BCTR  15,0                                           @OW26040  00351700
         EX    15,A&SYSNDX                                    @OW26040  00351800
         B     ENDXC&SYSNDX                                   @OW26040  00351900
NOLENGTH&SYSNDX DS    0H        BRANCH LABEL FOR PRE-APAR PB  @OW26040  00352000
         ABEND X'15F',DUMP,,SYSTEM,REASON=352                 @LEWMSMC  00352100
.* No continue after ABEND                                    @LEWMSMC  00352200
A&SYSNDX XC    PB_CLEAR_FLD(0),PB_CLEAR_FLD                   @OW26040  00352300
ENDXC&SYSNDX    DS    0H                                      @OW26040  00352400
         MVI   PB_WORK_ATTRIBUTES,C' '                                  00352500
         MVC   PB_WORK_ATTRIBUTES+1(51),PB_WORK_ATTRIBUTES              00352600
.ENDRESET      ANOP                                                     00352700
.*                                                                      00352800
.*                                                                      00352900
.*       OWNER_TOKEN PROCESSING                                         00353000
.*                                                                      00353100
         AIF   ('&XOWNER_TOKEN' NE 'NO_OWNER_TOKEN').OWNER_TOKEN        00353200
         AGO   .ENDOWNER_TOKEN                                          00353300
.*                                                                      00353400
.OWNER_TOKEN ANOP                                                       00353500
&T1      SETC  '&OWNER_TOKEN'                                           00353600
         AIF   ('&OWNER_TOKEN'(1,1) NE '(').OWNER_TOKENRS               00353700
&T1      SETC  '&OWNER_TOKEN'(2,K'&OWNER_TOKEN-2)                       00353800
&T1      SETC  '0(&T1.)'                                                00353900
.OWNER_TOKENRS ANOP                                                     00354000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00354100
         L     1,&T1                   COPY OWNER_TOKEN VIA L,ST        00354200
         ST    1,PB_OWNER_TKN                                           00354300
.ENDOWNER_TOKEN ANOP                                                    00354400
.*                                                                      00354500
.*                                                                      00354600
.*       OWNER_DATA PROCESSING                                          00354700
.*                                                                      00354800
         AIF   ('&XOWNER_DATA' NE 'NO_OWNER_DATA').OWNER_DATA           00354900
         AGO   .ENDOWNER_DATA                                           00355000
.*                                                                      00355100
.OWNER_DATA ANOP                                                        00355200
&T1      SETC  '&OWNER_DATA'                                            00355300
         AIF   ('&OWNER_DATA'(1,1) NE '(').OWNER_DATARS                 00355400
&T1      SETC  '&OWNER_DATA'(2,K'&OWNER_DATA-2)                         00355500
&T1      SETC  '0(&T1.)'                                                00355600
.OWNER_DATARS ANOP                                                      00355700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00355800
         L     1,&T1                   COPY OWNER_DATA VIA L,ST         00355900
         ST    1,PB_OWNER_DATA                                          00356000
.ENDOWNER_DATA ANOP                                                     00356100
*                                                                       00356200
.*                                                                      00356300
.*       DURATION PROCESSING                                            00356400
.*                                                                      00356500
         AIF   ('&XDURATION' EQ 'PREV_VALUE').ENDDURINFO                00356600
         AIF   ('&MODE' EQ 'RESET').ENDDURRETAIN                        00356700
         NI    PB_MONENV_INFO,X'FF'-PB_DURATION        RESET PREV DUR   00356800
.ENDDURRETAIN ANOP                                                      00356900
         OI    PB_MONENV_INFO,PB_DURATION_&XDURATION   RECORD DURATION  00357000
.ENDDURINFO   ANOP                                                      00357100
.*                                                                      00357200
*                                                                       00357300
         AIF   ('&XDISPTYPE' EQ 'SAVEDTYPE').ENDDISPINFO                00357400
         AIF   ('&XDISPTYPE' NE 'TCB').ENDTCB                           00357500
         AIF   ('&XTCB' EQ 'NO_TCB').NOTCB                              00357600
&T1      SETC  '&TCB'                                                   00357700
         AIF   ('&TCB'(1,1) NE '(').TCBRS                               00357800
&T1      SETC  '&TCB'(2,K'&TCB-2)                                       00357900
         ST    &T1,PB_DU                                                00358000
         AGO   .ENDDISPTYPE                                             00358100
.TCBRS ANOP                                                             00358200
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00358300
         LA    0,&T1                   COPY TCB ADDRESS VIA LA,ST       00358400
         ST    0,PB_DU                                                  00358500
         AGO   .ENDDISPTYPE                                             00358600
.NOTCB     ANOP                                                         00358700
         AIF   ('&MODE' EQ 'RESET').ENDDISPTYPE                         00358800
         LA    0,0                                                      00358900
         ST    0,PB_DU                                                  00359000
         AGO   .ENDDISPTYPE                                             00359100
.ENDTCB    ANOP                                                         00359200
         LA    0,PB_DU_SRB             INDICATE SRB                     00359300
         ST    0,PB_DU                                                  00359400
.ENDDISPTYPE   ANOP                                                     00359500
*                                                                       00359600
         L     1,X'224'(0,0)              COPY PSAAOLD VIA L,ST         00359700
         ST    1,PB_DU_ASCB                                             00359800
.ENDDISPINFO   ANOP                                                     00359900
.*                                                                      00360000
*                                                                       00360100
.*                                                     @WLMPPBS         00360200
         AIF   ('&XREPORTONLY' NE 'NO').ENDSERVCLS                      00360300
         AIF   ('&XSERVCLS' NE 'NO_SERVCLS').SERVCLS                    00360400
         AGO   .ENDSERVCLS                                              00360500
.*                                                                      00360600
.SERVCLS    ANOP                                                        00360700
&T1      SETC  '&SERVCLS'                                               00360800
         AIF   ('&SERVCLS'(1,1) NE '(').SERVCLSRS                       00360900
&T1      SETC  '&SERVCLS'(2,K'&SERVCLS-2)                               00361000
&T1      SETC  '0(&T1.)'                                                00361100
.SERVCLSRS ANOP                                                         00361200
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00361300
         L     1,&T1                   COPY SERVCLS VIA L,ST            00361400
         ST    1,PB_SC_TKN                                              00361500
.ENDSERVCLS    ANOP                                                     00361600
*                                                                       00361700
.*                                                                      00361800
         AIF   ('&XTTRACETOKEN' NE 'NO_TTRACETOKEN').TTRACETOKEN        00361900
         AGO   .ENDTTRACETOKEN                                          00362000
.*                                                                      00362100
.TTRACETOKEN ANOP                                                       00362200
&T1      SETC  '&TTRACETOKEN'                                           00362300
         AIF   ('&TTRACETOKEN'(1,1) NE '(').TTRACETOKENRS               00362400
&T1      SETC  '&TTRACETOKEN'(2,K'&TTRACETOKEN-2)                       00362500
&T1      SETC  '0(&T1.)'                                                00362600
.TTRACETOKENRS ANOP                                                     00362700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00362800
         MVC   PB_TRANS_TTOKEN(32),&T1    COPY TTRACETOKEN              00362900
.ENDTTRACETOKEN ANOP                                                    00363000
*                                                                       00363100
         AIF   ('&XTRXNAME' NE 'NO_TRXNAME').TRXNAME                    00363200
         AGO   .ENDTRXNAME                                              00363300
.*                                                                      00363400
.TRXNAME    ANOP                                                        00363500
&T1      SETC  '&TRXNAME'                                               00363600
         AIF   ('&TRXNAME'(1,1) NE '(').TRXNAMERS                       00363700
&T1      SETC  '&TRXNAME'(2,K'&TRXNAME-2)                               00363800
&T1      SETC  '0(&T1.)'                                                00363900
.TRXNAMERS ANOP                                                         00364000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00364100
         MVC   PB_TRXNAME(8),&T1          COPY TRXNAME                  00364200
.ENDTRXNAME    ANOP                                                     00364300
*                                                                       00364400
         AIF   ('&XUSERID' NE 'NO_USERID').USERID                       00364500
         AGO   .ENDUSERID                                               00364600
.*                                                                      00364700
.USERID     ANOP                                                        00364800
&T1      SETC  '&USERID'                                                00364900
         AIF   ('&USERID'(1,1) NE '(').USERIDRS                         00365000
&T1      SETC  '&USERID'(2,K'&USERID-2)                                 00365100
&T1      SETC  '0(&T1.)'                                                00365200
.USERIDRS ANOP                                                          00365300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00365400
         MVC   PB_USERID(8),&T1           COPY USERID                   00365500
.ENDUSERID     ANOP                                                     00365600
*                                                                       00365700
         AIF   ('&XTRXCLASS' NE 'NO_TRXCLASS').TRXCLASS                 00365800
         AGO   .ENDTRXCLASS                                             00365900
.*                                                                      00366000
.TRXCLASS   ANOP                                                        00366100
&T1      SETC  '&TRXCLASS'                                              00366200
         AIF   ('&TRXCLASS'(1,1) NE '(').TRXCLASSRS                     00366300
&T1      SETC  '&TRXCLASS'(2,K'&TRXCLASS-2)                             00366400
&T1      SETC  '0(&T1.)'                                                00366500
.TRXCLASSRS ANOP                                                        00366600
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00366700
         MVC   PB_TRXCLASS(8),&T1         COPY TRXCLASS                 00366800
.ENDTRXCLASS   ANOP                                                     00366900
*                                                                       00367000
         AIF   ('&XSOURCELU' NE 'NO_SOURCELU').SOURCELU                 00367100
         AGO   .ENDSOURCELU                                             00367200
.*                                                                      00367300
.SOURCELU   ANOP                                                        00367400
.*                                                                      00367500
&T1      SETC  '&SOURCELU'                                              00367600
         AIF   ('&SOURCELU'(1,1) NE '(').SOURCELURS                     00367700
&T1      SETC  '&SOURCELU'(2,K'&SOURCELU-2)                             00367800
&T1      SETC  '0(&T1.)'                                                00367900
         MVC   PB_SOURCELU(17),&T1         COPY SOURCELU                00368000
         AGO   .ENDSOURCELU                                             00368100
.SOURCELURS ANOP                                                        00368200
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00368300
.****************************************                               00368400
         LA    1,L'&T1      LOAD LENGTH OF SOURCELU NAME INTO GPR 1     00368500
         LA    0,17         LOAD MAXIMUM LENGTH OF LU NAME INTO GPR 0   00368600
         CR    1,0                                                      00368700
         BNL   IWMMINIT_LU17_&SYSNDX    BR ON SOURCELU NAME >= 17 BYTES 00368800
* SOURCELU NAME <= 16 BYTES                                             00368900
.*                                                                      00369000
         AIF   ('&MODE' EQ 'RESET').ENDBLANKLU                          00369100
.* MODE(RETAIN) REQUIRES BLANKING OUT SOURCELU AREA                     00369200
         MVI   PB_SOURCELU,C' '         BLANK OUT THE FIELD             00369300
         MVC   PB_SOURCELU+1(16),PB_SOURCELU                            00369400
.ENDBLANKLU    ANOP                                                     00369500
.*                                                                      00369600
.* MODE(RETAIN!RESET) CODE GENERATION                                   00369700
.*                                                                      00369800
         MVC   PB_SOURCELU(L'&T1),&T1         COPY SOURCELU             00369900
         B     IWMMINIT_ENDSOURCELU_&SYSNDX                             00370000
IWMMINIT_LU17_&SYSNDX DS 0H                                             00370100
         MVC   PB_SOURCELU(17),&T1         COPY 17 BYTES FROM SOURCELU  00370200
IWMMINIT_ENDSOURCELU_&SYSNDX DS 0H                                      00370300
.****************************************                               00370400
.*                                                                      00370500
.ENDSOURCELU   ANOP                                                     00370600
.*                                                                      00370700
*                                                                       00370800
         AIF   ('&XLU62TKN' NE 'NO_LU62TKN').LU62TKN                    00370900
         AGO   .ENDLU62TKN                                              00371000
.*                                                                      00371100
.LU62TKN    ANOP                                                        00371200
&T1      SETC  '&LU62TKN'                                               00371300
         AIF   ('&LU62TKN'(1,1) NE '(').LU62TKNRS                       00371400
&T1      SETC  '&LU62TKN'(2,K'&LU62TKN-2)                               00371500
&T1      SETC  '0(&T1.)'                                                00371600
.LU62TKNRS ANOP                                                         00371700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00371800
         AIF   ('&XLU62TKN_FMT' EQ 'OTHER').OTHER_LU62TKN               00371900
&T2      SETC  '&LU62TKN_FMT'(K'&LU62TKN_FMT-1,2)                       00372000
.* &T2 IS THE LAST 2 CHARACTERS OF LU62TKN_FMT = LENGTH OF LU62TKN      00372100
         MVC   PB_LU62TKN(&T2),&T1          COPY LU62TKN                00372200
         MVI   PB_LU62TKN_FMT,PB_LU62FMT_&LU62TKN_FMT                   00372300
         AGO   .ENDLU62TKN                                              00372400
.*                                                                      00372500
.OTHER_LU62TKN    ANOP                                                  00372600
&T2      SETC  '&LU62TKN_LEN'                                           00372700
         AIF   ('&LU62TKN_LEN'(1,1) NE '(').LU62TKNLENRS                00372800
&T2      SETC  '&LU62TKN_LEN'(2,K'&LU62TKN_LEN-2)                       00372900
&T2      SETC  '0(&T2.)'                                                00373000
.LU62TKNLENRS ANOP                                                      00373100
.* &T2 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00373200
         SLR   1,1    CLEAR GPR 1                                       00373300
         ICM   1,1,&T2 INSERT LENGTH FROM LU62TKN_LEN (1-36 DECIMAL OK) 00373400
         BNZ   IWMMINIT_TEST_HIGH&SYSNDX                                00373500
         LA    0,IWMRSNCODEBADLU62TKNLEN SET RSNCODE = BAD LU62 TKN LEN 00373600
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RC          00373700
         B     END&SYSNDX              BRANCH TO END LABEL              00373800
IWMMINIT_TEST_HIGH&SYSNDX   DS  0H                                      00373900
         LA    0,PB_MAX_LU62TKN_LEN                                     00374000
         CR    1,0                                                      00374100
         BNH   IWMMINIT_COPY_LU62TKN&SYSNDX                             00374200
         LA    0,IWMRSNCODEBADLU62TKNLEN SET RSNCODE = BAD LU62 TKN LEN 00374300
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RC          00374400
         B     END&SYSNDX              BRANCH TO END LABEL              00374500
IWMMINIT_MVC&SYSNDX MVC PB_LU62TKN(0),&LU62TKN     COPY LU62TKN         00374600
IWMMINIT_COPY_LU62TKN&SYSNDX   BCTR 1,0                                 00374700
         EX 1,IWMMINIT_MVC&SYSNDX                                       00374800
.ENDLU62TKN    ANOP                                                     00374900
*                                                                       00375000
*                                                                       00375100
         AIF   ('&ARRIVALTIMEP' EQ 'CURRENT').STCKLOGIC                 00375200
         AIF   ('&ARRIVALTIMEP' NE 'YES').ENDARRIVALTIMEP               00375300
&T1      SETC  '&ARRIVALTIME'                                           00375400
         AIF   ('&ARRIVALTIME'(1,1) NE '(').ARRIVALTIMERS               00375500
&T1      SETC  '&ARRIVALTIME'(2,K'&ARRIVALTIME-2)                       00375600
&T1      SETC  '0(&T1.)'                                                00375700
.ARRIVALTIMERS ANOP                                                     00375800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00375900
         MVC   PB_ARRTIME(8),&T1                                        00376000
         AGO   .ENDARRIVALTIMEP                                         00376100
.STCKLOGIC       ANOP                                                   00376200
         STCK  PB_ARRTIME              SAVE TOD                         00376300
         BC    8,IWMMINIT_ARRTIMEOK&SYSNDX BRANCH WHEN STCK CC=0        00376400
         LA    0,IWMRSNCODENOARRTIME   SET REASONCODE                   00376500
         LA    15,IWMRETCODEENVERROR   SET RC = IWMRETCODEENVERROR      00376600
         B     IWMMINIT_FINIS&SYSNDX   BRANCH TO THE END                00376700
IWMMINIT_ARRTIMEOK&SYSNDX DS 0H           BRANCH LABEL FOR STCK CC=0    00376800
.ENDARRIVALTIMEP ANOP                                                   00376900
*                                                         @WLMPPBS      00377000
         AIF   ('&XREPORTONLY' NE 'NO').ENDEXSTARTTIMEP                 00377100
         AIF   ('&EXSTARTTIMEP' EQ 'NO').ENDEXSTARTTIMEP                00377200
         AIF   ('&EXSTARTTIMEP' EQ 'CURRENT').STCKLOGIC2                00377300
&T1      SETC  '&EXSTARTTIME'                                           00377400
         AIF   ('&EXSTARTTIME'(1,1) NE '(').EXSTARTTIMERS               00377500
&T1      SETC  '&EXSTARTTIME'(2,K'&EXSTARTTIME-2)                       00377600
&T1      SETC  '0(&T1.)'                                                00377700
.EXSTARTTIMERS ANOP                                                     00377800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00377900
         MVC   PB_EXSTARTTIME(8),&T1                                    00378000
         AGO   .ENDEXSTARTTIMEP                                         00378100
.STCKLOGIC2      ANOP                                                   00378200
         STCK  PB_EXSTARTTIME          SAVE TOD                         00378300
         BC    8,IWMMINIT_EXTIMEOK&SYSNDX BRANCH WHEN STCK CC=0         00378400
         LA    0,IWMRSNCODENOEXTIME    SET REASONCODE                   00378500
         LA    15,IWMRETCODEENVERROR   SET RC = IWMRETCODEENVERROR      00378600
         B     IWMMINIT_FINIS&SYSNDX   BRANCH TO THE END                00378700
IWMMINIT_EXTIMEOK&SYSNDX DS 0H           BRANCH LABEL FOR STCK CC=0     00378800
.ENDEXSTARTTIMEP ANOP                                                   00378900
.*******************************************************************    00379000
.***        REPORT_ONLY MODE PB               @OW54806      @WLMPAPC    00379100
.*******************************************************************    00379200
         AIF   ('&XREPORTONLY' EQ 'NO').ENDREPORTONLY                   00379300
         OI    PB_FLAGS,PB_REPORT_ONLY   INDICATE REPORT_ONLY PB        00379400
         OI    PB_FLAGS,PB_ASSOCIATE     SET ASSOCIATE FLAG             00379500
         AIF   ('&ASSOCIATE' EQ 'ADDRESS_SPACE').ASSOCIATE_AS           00379600
&T1      SETC  '&ENCLAVETOKEN'           ASSOCIATION WITH ENCLAVE       00379700
         AIF   ('&ENCLAVETOKEN'(1,1) NE '(').ENCLAVETOKENRS             00379800
&T1      SETC  '&ENCLAVETOKEN'(2,K'&ENCLAVETOKEN-2)                     00379900
&T1      SETC  '0(&T1.)'                                                00380000
.ENCLAVETOKENRS ANOP                                                    00380100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00380200
         MVC   PB_ETOKEN(8),&T1          COPY ENCLAVETOKEN              00380300
         AGO   .ENDREPORTONLY                                           00380400
.*                                                                      00380500
.ASSOCIATE_AS  ANOP                                                     00380600
&T1      SETC  '&ASID'                   ASSOCIATION WITH ADDRESS SPACE 00380700
         AIF   ('&ASID'(1,1) NE '(').ASIDRS                             00380800
&T1      SETC  '&ASID'(2,K'&ASID-2)                                     00380900
&T1      SETC  '0(&T1.)'                                                00381000
.ASIDRS ANOP                                                            00381100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00381200
         MVC   PB_AS_ID(2),&T1           COPY ASID                      00381300
.*                                                                      00381400
.ENDREPORTONLY ANOP                                       @WLMPAPC      00381500
.*                                                                      00381600
         LA    15,IWMRETCODEOK           SET RETURN CODE = OK           00381700
.*                                                                      00381800
&T1      SETC  'PB_INIT'                                                00381900
         AIF   ('&SCOPE' EQ 'SINGLE').ENDSHARED                         00382000
.*     SCOPE(SHARED)                                                    00382100
&T1      SETC  '&T1.+PB_SCOPE_SHARED'                                   00382200
         AGO   .ENDSCOPE                                                00382300
.ENDSHARED     ANOP                                                     00382400
.*     SCOPE(SINGLE)                                                    00382500
         AIF   ('&MODE' EQ 'RESET').ENDSCOPE                            00382600
         NI    PB_WORKDEF,X'FF'-PB_SCOPE_SHARED                         00382700
.ENDSCOPE      ANOP                                                     00382800
         AIF   ('&CONTINUEP' EQ 'NO').ENDCONT                           00382900
&T1      SETC  '&T1.+PB_FROM_&XFROM'                                    00383000
.ENDCONT       ANOP                                                     00383100
         OI    PB_WORKDEF,&T1          RECORD STATUS                    00383200
         AIF   ('&MODE' NE 'RESET').ENDRESET2                           00383300
         MVI   PB_STATE,PB_STATE_ACTIVE    INDICATE STATE IS NOW ACTIVE 00383400
.ENDRESET2     ANOP                                                     00383500
IWMMINIT_FINIS&SYSNDX DS 0H            BRANCH LABEL FOR STCK NON-0 CC   00383600
         DROP  14                                                       00383700
END&SYSNDX DS    0H                    END LABEL                        00383800
.*******************************************************************    00383900
.***        RETURN CODE PROCESSING                                      00384000
.*******************************************************************    00384100
         AIF   (N'&RETCODE LE 0).IWMMINIT_ENDRC_EXP                     00384200
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMINIT_RC_REG                00384300
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMINIT_ENDRC_EXP              00384400
         AIF   ('&XRETCODE' EQ 'REG15').IWMMINIT_ENDRC_EXP              00384500
         AIF   ('&XRETCODE' EQ 'R15').IWMMINIT_ENDRC_EXP                00384600
         AIF   ('&XRETCODE' EQ '15').IWMMINIT_ENDRC_EXP                 00384700
         ST    15,&XRETCODE                                             00384800
            AGO  .IWMMINIT_ENDRC_EXP                                    00384900
.*                                                                      00385000
.IWMMINIT_RC_REG      ANOP  ,                                           00385100
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00385200
         AIF   ('&T1' EQ 'GPR15').IWMMINIT_ENDRC_EXP                    00385300
         AIF   ('&T1' EQ 'REG15').IWMMINIT_ENDRC_EXP                    00385400
         AIF   ('&T1' EQ 'R15').IWMMINIT_ENDRC_EXP                      00385500
         AIF   ('&T1' EQ '15').IWMMINIT_ENDRC_EXP                       00385600
         LR    &T1,15                                                   00385700
.IWMMINIT_ENDRC_EXP   ANOP  ,                                           00385800
.*******************************************************************    00385900
.***        REASON CODE PROCESSING                                      00386000
.*******************************************************************    00386100
         AIF   (N'&RSNCODE LE 0).IWMMINIT_ENDRSN_EXP                    00386200
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMINIT_RSN_REG               00386300
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMINIT_ENDRSN_EXP              00386400
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMINIT_ENDRSN_EXP             00386500
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMINIT_ENDRSN_EXP              00386600
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMINIT_ENDRSN_EXP             00386700
         AIF   ('&XRSNCODE' EQ 'R0').IWMMINIT_ENDRSN_EXP                00386800
         AIF   ('&XRSNCODE' EQ '0').IWMMINIT_ENDRSN_EXP                 00386900
         AIF   ('&XRSNCODE' EQ '00').IWMMINIT_ENDRSN_EXP                00387000
         ST    0,&XRSNCODE                                              00387100
         AGO   .IWMMINIT_ENDRSN_EXP                                     00387200
.*                                                                      00387300
.IWMMINIT_RSN_REG     ANOP  ,                                           00387400
&T1      SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                             00387500
         AIF   ('&ZCGPR' EQ 'GPR0').IWMMINIT_ENDRSN_EXP                 00387600
         AIF   ('&ZCGPR' EQ 'GPR00').IWMMINIT_ENDRSN_EXP                00387700
         AIF   ('&ZCGPR' EQ 'REG0').IWMMINIT_ENDRSN_EXP                 00387800
         AIF   ('&ZCGPR' EQ 'REG00').IWMMINIT_ENDRSN_EXP                00387900
         AIF   ('&ZCGPR' EQ 'R0').IWMMINIT_ENDRSN_EXP                   00388000
         AIF   ('&ZCGPR' EQ '0').IWMMINIT_ENDRSN_EXP                    00388100
         AIF   ('&ZCGPR' EQ '00').IWMMINIT_ENDRSN_EXP                   00388200
         LR    &T1,0                                                    00388300
.IWMMINIT_ENDRSN_EXP  ANOP  ,                                           00388400
.*******************************************************************    00388500
&ZIWMMINIT            SETC  'YES'          SET IWMMINIT USED            00388600
         POP   PRINT                                                    00388700
*                                            IWMMINIT END               00388800
         SPACE 1                                                        00388900
         MEXIT                                                          00389000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00389100
.********************************************************************   00389200
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00389300
.********************************************************************   00389400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00389500
                      LCLA  &ZOPN1         INVOCATION INDEX             00389600
                      LCLC  &ZOPL(4095)    LABEL                        00389700
                      LCLC  &ZOPO(4095)    OPERATION                    00389800
                      LCLC  &ZOPV(4095)    VALUE                        00389900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00390000
.*                                                                      00390100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00390200
.*******************************************************************    00390300
.***AO.X02  RETURN CODE PROCESSING                                      00390400
.*******************************************************************    00390500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00390600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00390700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00390800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00390900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00391000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00391100
&ZOPN                 SETA  &ZOPN+1                                     00391200
&ZOPL(&ZOPN)          SETC  ' '                                         00391300
&ZOPO(&ZOPN)          SETC  'ST'                                        00391400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00391500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00391600
                      AGO   .ZMRETX                                     00391700
.*                                                                      00391800
.ZMRET2               ANOP  ,                                           00391900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00392000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00392100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00392200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00392300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00392400
&ZOPN                 SETA  &ZOPN+1                                     00392500
&ZOPL(&ZOPN)          SETC  ' '                                         00392600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00392700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00392800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00392900
.ZMRETX               ANOP  ,                                           00393000
.*******************************************************************    00393100
.***AO.X03  REASON CODE PROCESSING                                      00393200
.*******************************************************************    00393300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00393400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00393500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00393600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00393700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00393800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00393900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00394000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00394100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00394200
&ZOPN                 SETA  &ZOPN+1                                     00394300
&ZOPL(&ZOPN)          SETC  ' '                                         00394400
&ZOPO(&ZOPN)          SETC  'ST'                                        00394500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00394600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00394700
                      AGO   .ZMRSNX                                     00394800
.*                                                                      00394900
.ZMRSN2               ANOP  ,                                           00395000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00395100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00395200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00395300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00395400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00395500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00395600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00395700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00395800
&ZOPN                 SETA  &ZOPN+1                                     00395900
&ZOPL(&ZOPN)          SETC  ' '                                         00396000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00396100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00396200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00396300
.ZMRSNX               ANOP  ,                                           00396400
.*******************************************************************    00396500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00396600
.*******************************************************************    00396700
                      ACTR  10000                                       00396800
.*                                                                      00396900
                      LCLA  &ZLC           COLUMN POSITION              00397000
                      LCLA  &ZOPX          LIST TABLE INDEX             00397100
                      LCLC  &ZLL           LABEL                        00397200
                      LCLC  &ZLOP          OPERATION                    00397300
                      LCLC  &ZLV           VALUE                        00397400
                      LCLC  &ZLD           DESCRIPTION                  00397500
.*                                                                      00397600
&ZOPX                 SETA  1                                           00397700
.*******************************************************************    00397800
.***AP.X01  FORMAT GENERATED CODE                                       00397900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00398000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00398100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00398200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00398300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00398400
                      AIF   (K'&ZLD LE 0).ZL51                          00398500
&ZLC                  SETA  35             COMMENT COLUMN               00398600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00398700
&ZLC                  SETA  33             COMMENT COLUMN               00398800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00398900
&ZLV                  SETC  '&ZLV'.' '                                  00399000
                      AGO   .ZL31                                       00399100
.*                                                                      00399200
.ZL41                 ANOP  ,                                           00399300
&ZLV                  SETC  '&ZLV'.' '                                  00399400
.ZL51                 ANOP  ,                                           00399500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00399600
.*                                                                      00399700
&ZLL     &ZLOP &ZLV                                                     00399800
.*                                                                      00399900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00400000
                      AGO   .ZL21          CONTINUE LOOPING             00400100
.*                                                                      00400200
.ZLX1                 ANOP  ,                                           00400300
.*******************************************************************    00400400
.***AP.X02  END OF IWMMINIT MACRO                                       00400500
&ZIWMMINIT            SETC  'YES'          SET IWMMINIT USED            00400600
         POP   PRINT                                                    00400700
*                                            IWMMINIT-2                 00400800
         SPACE 1                                                        00400900
.ZLX2                 ANOP  ,                                           00401000
         MEND                                                           00401100
**********************************************************************/ 00401200
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00401300
*%IWMMINIT: MACRO KEYS(MONTKN,MODE,DURATION,DISPTYPE,TCB,ARRIVALTIMEP,  00401400
*                 ARRIVALTIME,CONTINUEP,FROM,OWNER_TOKEN,OWNER_DATA,    00401500
*                 REPORTONLY,EXSTARTTIMEP,EXSTARTTIME,SERVCLS,          00401600
*                 ASSOCIATE,ENCLAVETOKEN,ASID,SCOPE,TRXNAME,USERID,     00401700
*                 TRXCLASS,TTRACETOKEN,SOURCELU,LU62TKN,LU62TKN_FMT,    00401800
*                 LU62TKN_LEN,RETCODE,RSNCODE,PLISTVER);                00401900
*  ANS('?'!!MACLABEL!!' '!!'IWMMINIP '!!MACLIST!!                       00402000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00402100
*%END IWMMINIT;                                                         00402200
