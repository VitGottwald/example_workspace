*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  AXREXX                                -01/19/14-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  System REXX Services                          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 2007, 2008                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7750                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      AXREXX provides a macro interface for System REXX services.    * 00002000
*                                                                     * 00002100
*01* EXTERNAL CLASSIFICATION:                                         * 00002200
*                                                                     * 00002300
*02* PI:   BASE                                                       * 00002400
*                                                                     * 00002500
*02* NONE: FIELDS                                                     * 00002600
*          MF=M                                                       * 00002700
*          COMPEXIT                                                   * 00002800
*                                                                     * 00002900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003000
*                                                                     * 00003100
*01* ENVIRONMENT:                                                     * 00003200
*                                                                     * 00003300
*                                                                     * 00003400
*      Minimum authorization: Any of the following:                   * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*                        o   Supervisor state                         * 00003800
*                                                                     * 00003900
*                        o   PKM 0-7                                  * 00004000
*                                                                     * 00004100
*                        o   PSW key 0-7                              * 00004200
*                                                                     * 00004300
*                        o   APF authorized                           * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*      Dispatchable unit mode: Task mode.                             * 00004800
*                                                                     * 00004900
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005000
*                                                                     * 00005100
*      AMODE:            31- or 64-bit.                               * 00005200
*                                                                     * 00005300
*      ASC mode:         Primary or Access Register.                  * 00005400
*                                                                     * 00005500
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005600
*                                                                     * 00005700
*      Locks:            No locks held.                               * 00005800
*                                                                     * 00005900
*      Control parameters: Control parameters must be in the primary  * 00006000
*                        address space or, for AR-mode callers, must  * 00006100
*                        be in an address/data space that is          * 00006200
*                        addressable through a public entry on the    * 00006300
*                        caller's dispatchable unit access list       * 00006400
*                        (DU-AL).                                     * 00006500
*                                                                     * 00006600
*                        The user-provided REXX arguments provided by * 00006700
*                        the REXXARGS parameter has the same          * 00006800
*                        requirements and restrictions as the control * 00006900
*                        parameters.                                  * 00007000
*                                                                     * 00007100
*                        The user-provided REXX variables provided by * 00007200
*                        the REXXVARS parameter has the same          * 00007300
*                        requirements and restrictions as the control * 00007400
*                        parameters.                                  * 00007500
*                                                                     * 00007600
*                        The user-provided data set name via the      * 00007700
*                        REXXINDSN parameter has the same             * 00007800
*                        requirements and restrictions as the control * 00007900
*                        parameters.                                  * 00008000
*                                                                     * 00008100
*                        The user-provided dataset name via the       * 00008200
*                        REXXOUTDSN parameter has the same            * 00008300
*                        requirements and restrictions as the control * 00008400
*                        parameters.                                  * 00008500
*                                                                     * 00008600
*                        The user-provided information via the        * 00008700
*                        REXXDIAG parameter has the same requirements * 00008800
*                        and restrictions as the control parameters.  * 00008900
*                                                                     * 00009000
*                        The user-provided information via the UTOKEN * 00009100
*                        parameter has the same requirements and      * 00009200
*                        restrictions as the control parameters.      * 00009300
*                                                                     * 00009400
*                        The user-provided information via the        * 00009500
*                        REXXLIB parameter has the same requirements  * 00009600
*                        and restrictions as the control parameters.  * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*01* PROGRAMMING REQUIREMENTS:                                        * 00010100
*                                                                     * 00010200
*    AXRZARG must be included in the invoking module.                 * 00010300
*                                                                     * 00010400
*01* RESTRICTIONS:                                                    * 00010500
*    The caller must not have any FRRs (Functional Recovery Routines) * 00010600
*    established.                                                     * 00010700
*                                                                     * 00010800
*01* INPUT REGISTER INFORMATION:                                      * 00010900
*                                                                     * 00011000
*    Before issuing the AXREXX macro, the caller does not have to     * 00011100
*    place any information into any general purpose register (GPR) or * 00011200
*    access register (AR) unless using it in register notation for a  * 00011300
*    particular parameter, or using it as a base register.            * 00011400
*                                                                     * 00011500
*01* OUTPUT REGISTER INFORMATION:                                     * 00011600
*                                                                     * 00011700
*    When control returns to the caller, the GPRs contain:            * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*    REGISTER  CONTENTS                                               * 00012100
*                                                                     * 00012200
*    0         When R15 is nonzero, the reason code from the service. * 00012300
*                                                                     * 00012400
*    1         Used as a work register by the system                  * 00012500
*                                                                     * 00012600
*    2-13      Unchanged                                              * 00012700
*                                                                     * 00012800
*    14        Used as a work register by the system                  * 00012900
*                                                                     * 00013000
*    15        The Return Code from the AXREXX Service                * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*    When control returns to the caller, the ARs contain:             * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*    REGISTER  CONTENTS                                               * 00013800
*                                                                     * 00013900
*    0-1       Used as work registers by the system                   * 00014000
*                                                                     * 00014100
*    2-13      Unchanged                                              * 00014200
*                                                                     * 00014300
*    14-15     Used as work registers by the system                   * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*    Some callers depend on register contents remaining the same      * 00014800
*    before and after issuing a service.  If the system changes the   * 00014900
*    contents of registers on which the caller depends, the caller    * 00015000
*    must save them before issuing the service, and restore them      * 00015100
*    after the system returns control.                                * 00015200
*                                                                     * 00015300
*01* PERFORMANCE IMPLICATIONS:                                        * 00015400
*    None.                                                            * 00015500
*                                                                     * 00015600
*01* SYNTAX:                                                          * 00015700
*                                                                     * 00015800
*Ýxlabel¨  AXREXX  Ð  REQUEST=EXECUTE                                 * 00015900
*                  !   ÐÝ,SECURITY=BYUTOKEN                           * 00016000
*                  !   !    Ý,UTOKEN=»xutoken!TASKº¨¨                 * 00016100
*                  !   ¿Ý,SECURITY=BYAXRUSER¨                         * 00016200
*                  !   ÐÝ,TSO=NO                                      * 00016300
*                  !   !    Ý,REXXINDSN=»xrexxindsn!NO_REXXINDSNº     * 00016400
*                  !   !        Ý,REXXINMEMNAME                       * 00016500
*                  !   !                        =»xrexxinmemname!NO_R * 00016600
*                  !   !                        EXXINMEMNAMEº¨¨¨      * 00016700
*                  !   ¿Ý,TSO=YES¨                                    * 00016800
*                  !   ÐÝ,CONSDATA=NO¨                                * 00016900
*                  !   ¿Ý,CONSDATA=YES                                * 00017000
*                  !         ,CART=xcart                              * 00017100
*                  !         ,CONSNAME=xconsname¨                     * 00017200
*                  !   ÐÝ,TIMELIMIT=YES                               * 00017300
*                  !   !    Ý,TIMEINT=»xtimeint!SYSTEMº¨¨             * 00017400
*                  !   ¿Ý,TIMELIMIT=NO¨                               * 00017500
*                  !     ,NAME=xname                                  * 00017600
*                  !    Ý,REXXARGS=»xrexxargs!NO_ARGSº¨               * 00017700
*                  !    Ý,REXXVARS=»xrexxvars!NO_VARSº¨               * 00017800
*                  !    Ý,REXXOUTDSN=»xrexxoutdsn!NO_REXXOUTDSNº      * 00017900
*                  !        Ý,REXXOUTMEMNAME                          * 00018000
*                  !                         =»xrexxoutmemname!NO_REX * 00018100
*                  !                         XOUTMEMNAMEº¨¨           * 00018200
*                  !    Ý,REXXDIAG=xrexxdiag¨                         * 00018300
*                  !   ÐÝ,SYNC=YES¨                                   * 00018400
*                  !   ¿Ý,SYNC=NO                                     * 00018500
*                  !        Ý,OREQTOKEN=xoreqtoken¨                   * 00018600
*                  !       ÐÝ,COMPEXIT=NO_COMPEXIT¨                   * 00018700
*                  !       ¿Ý,COMPEXIT=LINK                           * 00018800
*                  !             ,LINKEP=xlinkep¨¨                    * 00018900
*                  Ô ,REQUEST=CANCEL                                  * 00019000
*                  !     ,REQTOKEN=xreqtoken                          * 00019100
*                  ¿ ,REQUEST=GETREXXLIB                              * 00019200
*                        ,REXXLIB=xrexxlib                            * 00019300
*                        ,REXXLIBLEN=xrexxliblen                      * 00019400
*                   Ý,RETCODE=xretcode¨                               * 00019500
*                   Ý,RSNCODE=xrsncode¨                               * 00019600
*                   Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨           * 00019700
*                  ÐÝ,MF=S¨                                           * 00019800
*                  ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                    * 00019900
*                  ÔÝ,MF=(M,xmfctrl»,COMPLETE!NOCHECKº)¨              * 00020000
*                  ¿Ý,MF=(E,xmfctrl»,COMPLETE!NOCHECKº)¨              * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*      Where:                                                         * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*      Ýxlabel¨                                                       * 00020700
*          is an optional symbol, starting in column 1, that is the   * 00020800
*          name on the AXREXX macro invocation.  The name must        * 00020900
*          conform to the rules for an ordinary assembler language    * 00021000
*          symbol.                                                    * 00021100
*          DEFAULT: No name.                                          * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*      REQUEST=»EXECUTE!CANCEL!GETREXXLIBº                            * 00021700
*          is a required keyword input which identifies the request   * 00021800
*          type.                                                      * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*          REQUEST=EXECUTE                                            * 00022200
*              Execute a REXX exec                                    * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*              ÝSECURITY=»BYUTOKEN!BYAXRUSERº¨                        * 00022600
*                  is an optional keyword input that indicates how    * 00022700
*                  the security environment should be established for * 00022800
*                  the REXX exec.                                     * 00022900
*                  DEFAULT: BYUTOKEN                                  * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                  ÝSECURITY=BYUTOKEN                                 * 00023300
*                      keyword that indicates that the security       * 00023400
*                      environment should be established from the     * 00023500
*                      UTOKEN that was passed or defaulted.           * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                      ÝUTOKEN=»xutoken!TASKº¨¨                       * 00023900
*                          is the name (RS-type), or address in       * 00024000
*                          register (2)-(12), of an optional 80       * 00024100
*                          character input keyword that contains the  * 00024200
*                          security token to be used to establish the * 00024300
*                          security environment under which the exec  * 00024400
*                          will be executed.  Additionally, if the    * 00024500
*                          REXX exec invokes the AXRCMD function, the * 00024600
*                          UTOKEN is passed to MGCRE provide security * 00024700
*                          information.  You can obtain the UTOKEN    * 00024800
*                          value by using the RACROUTE                * 00024900
*                          REQUEST=TOKENXTR, RACROUTE                 * 00025000
*                          REQUEST=VERIFYX, or RACROUTE               * 00025100
*                          REQUEST=TOKENBLD macros. See z/OS Security * 00025200
*                          Server RACROUTE Macro Reference for more   * 00025300
*                          information on the RACROUTE macros.  The   * 00025400
*                          UTOKEN should be that of the user on whose * 00025500
*                          behalf the exec is issued.  UTOKEN is an   * 00025600
*                          optional parameter; if it is omitted, the  * 00025700
*                          UTOKEN of the invoker will be used.        * 00025800
*                          DEFAULT: TASK which indicates to use the   * 00025900
*                          UTOKEN associated with the task invoking   * 00026000
*                          AXREXX.                                    * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                  ÝSECURITY=BYAXRUSER¨                               * 00026500
*                      keyword that indicates that the security       * 00026600
*                      environment should be established from the     * 00026700
*                      value of AXRUSER specified in AXR00.           * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*              ÝTSO=»NO!YESº¨                                         * 00027500
*                  is an optional keyword input that indicates        * 00027600
*                  whether the exec is to be run in a TSO host        * 00027700
*                  command environment.  If the exec is to perform    * 00027800
*                  dynamic allocation (e.g. with TSO ALLOCATE or      * 00027900
*                  BPXWDYN), it should be run in the TSO=YES          * 00028000
*                  environment.                                       * 00028100
*                  DEFAULT: NO                                        * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                  ÝTSO=NO                                            * 00028500
*                      Indicates that the invocation is to run in an  * 00028600
*                      MVS host command environment.  The exec will   * 00028700
*                      run concurrently with up to 63 other execs     * 00028800
*                      within the same address space.                 * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                      ÝREXXINDSN=»xrexxindsn!NO_REXXINDSNº           * 00029200
*                          is the name (RS-type), or address in       * 00029300
*                          register (2)-(12), of an optional 44       * 00029400
*                          character input containing the name of the * 00029500
*                          dataset that the PARSE EXTERNAL function   * 00029600
*                          will read data from.  The exec may obtain  * 00029700
*                          the DDNAME associated with this dataset by * 00029800
*                          accessing the AXRINDD variable.            * 00029900
*                          DEFAULT: NO_REXXINDSN                      * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                          ÝREXXINMEMNAME=»xrexxinmemname!NO_REXXINME * 00030300
*                              MNAMEº¨¨¨                              * 00030400
*                              is the name (RS-type), or address in   * 00030500
*                              register (2)-(12), of an optional 8    * 00030600
*                              character input containing the name of * 00030700
*                              the member in the dataset specified by * 00030800
*                              the REXXINDSN keyword.                 * 00030900
*                              DEFAULT: NO_REXXINMEMNAME              * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                  ÝTSO=YES¨                                          * 00031600
*                      Indicates the exec is to be run in a TSO host  * 00031700
*                      command environment.  In this case the exec    * 00031800
*                      will run isolated in a separate address space  * 00031900
*                      with no other concurrent work.  Not all of the * 00032000
*                      services and functionality of TSO will be      * 00032100
*                      present.  Additionally, TSO services which     * 00032200
*                      depend upon JES as the primary subsystem will  * 00032300
*                      not work.  See z/OS MVS Authorized Assembler   * 00032400
*                      Services Guide for a discussion of what TSO    * 00032500
*                      services are supported.  TSO=YES users should  * 00032600
*                      be aware that there is a limit of 8 TSO Server * 00032700
*                      address spaces.                                * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*              ÝCONSDATA=»NO!YESº¨                                    * 00033500
*                  is an optional keyword input that indicates that   * 00033600
*                  the results of the execution of the exec are to be * 00033700
*                  treated as a system command.                       * 00033800
*                  DEFAULT: NO                                        * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                  ÝCONSDATA=NO¨                                      * 00034200
*                      Indicates that the exec is not being invoked   * 00034300
*                      as a system command.                           * 00034400
*                                                                     * 00034500
*                  ÝCONSDATA=YES                                      * 00034600
*                      Indicates the exec is invoked as a system      * 00034700
*                      command and specifies console attributes of    * 00034800
*                      the issuer to be used on AXRWTO or AXRMLWTO    * 00034900
*                      invocations that the REXX exec may make.       * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                      CART=xcart                                     * 00035300
*                          is the name (RS-type), or address in       * 00035400
*                          register (2)-(12), of a required 8         * 00035500
*                          character input containing the command and * 00035600
*                          response token to be used with the AXRWTO  * 00035700
*                          or AXRMLWTO function invocations in the    * 00035800
*                          invoked exec.                              * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                      CONSNAME=xconsname¨                            * 00036400
*                          is the name (RS-type), or address in       * 00036500
*                          register (2)-(12), of a required 8         * 00036600
*                          character input containing the name of the * 00036700
*                          console to be used with any AXRWTO or      * 00036800
*                          AXRMLWTO function invocations in the EXEC. * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*              ÝTIMELIMIT=»YES!NOº¨                                   * 00037800
*                  is an optional keyword input that indicates        * 00037900
*                  whether a time limit should be applied to the run  * 00038000
*                  time of the exec.  This time limit does not        * 00038100
*                  include the time the request spends waiting to be  * 00038200
*                  dispatched.                                        * 00038300
*                  DEFAULT: YES                                       * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*                  ÝTIMELIMIT=YES                                     * 00038700
*                      Indicates that a time limit should be applied  * 00038800
*                                                                     * 00038900
*                                                                     * 00039000
*                      ÝTIMEINT=»xtimeint!SYSTEMº¨¨                   * 00039100
*                          is the name (RS-type), or address in       * 00039200
*                          register (2)-(12), of an optional fullword * 00039300
*                          input containing the number of seconds to  * 00039400
*                          allow the REXX exec to run.  If the exec   * 00039500
*                          exceeds the threshold, it will be stopped  * 00039600
*                          and a return/reason code will be set       * 00039700
*                          indicating so.  A maximum of 21474536      * 00039800
*                          seconds may be specified.  A value of 0 is * 00039900
*                          equivalent to TIMELIMIT=NO.                * 00040000
*                          DEFAULT: SYSTEM which indicates that a     * 00040100
*                          default of 30 seconds will be used.        * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*                  ÝTIMELIMIT=NO¨                                     * 00040600
*                      Indicates that no time limit is to be applied  * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*              NAME=xname                                             * 00041400
*                  is the name (RS-type), or address in register      * 00041500
*                  (2)-(12), of a required 8 character input buffer   * 00041600
*                  containing the name of the REXX exec               * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*              ÝREXXARGS=»xrexxargs!NO_ARGSº¨                         * 00042200
*                  is the name (RS-type), or address in register      * 00042300
*                  (2)-(12), of an optional character input/output    * 00042400
*                  containing the argument list to be passed to the   * 00042500
*                  REXX program.  The mapping of the argument list is * 00042600
*                  specified by a header section mapped by AXRARGLST  * 00042700
*                  followed by one or more sections mapped by         * 00042800
*                  AXRARGENTRY for each argument.  The entries mapped * 00042900
*                  by AXRARGENTRY must appear in the same order as    * 00043000
*                  the arguments specified on the ARG statement in    * 00043100
*                  the REXX program.  The mappings for both AXRARGST  * 00043200
*                  and AXRARGENTRY can be found in AXRZARG.  For more * 00043300
*                  detailed information about how to initialize this  * 00043400
*                  parameter see z/OS MVS Programming: Authorized     * 00043500
*                  Assembler Services Guide.                          * 00043600
*                  DEFAULT: NO_ARGS                                   * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*              ÝREXXVARS=»xrexxvars!NO_VARSº¨                         * 00044200
*                  is the name (RS-type), or address in register      * 00044300
*                  (2)-(12), of an optional character input/output    * 00044400
*                  containing a variable list that may be used to     * 00044500
*                  initialize variables in the REXX program and to    * 00044600
*                  obtain the final value of variables in the REXX    * 00044700
*                  program.  Uses the same mapping as RexxArgs.       * 00044800
*                  DEFAULT: NO_VARS                                   * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*              ÝREXXOUTDSN=»xrexxoutdsn!NO_REXXOUTDSNº                * 00045400
*                  is the name (RS-type), or address in register      * 00045500
*                  (2)-(12), of an optional 44 character input        * 00045600
*                  containing the name of the dataset that output     * 00045700
*                  from the exec (i.e. SAY and TRACE output) and from * 00045800
*                  the REXX interpreter will be directed to.  The     * 00045900
*                  REXX exec may obtain the DDNAME associated with    * 00046000
*                  this dataset by accessing the AXROUTDD variable.   * 00046100
*                  DEFAULT: NO_REXXOUTDSN                             * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*                  ÝREXXOUTMEMNAME=»xrexxoutmemname!NO_REXXOUTMEMNAME * 00046500
*                      º¨¨                                            * 00046600
*                      is the name (RS-type), or address in register  * 00046700
*                      (2)-(12), of an optional 8 character input     * 00046800
*                      containing the name of the member in the       * 00046900
*                      dataset specified by the REXXOUTDSN keyword.   * 00047000
*                      DEFAULT: NO_REXXOUTMEMNAME                     * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*              ÝREXXDIAG=xrexxdiag¨                                   * 00047800
*                  is the name (RS-type), or address in register      * 00047900
*                  (2)-(12), of an optional 40 character output       * 00048000
*                  buffer containing the return code from the exec    * 00048100
*                  and additional diagnostic data.  For SYNC=NO       * 00048200
*                  users, not all the information will be available   * 00048300
*                  since control returns to the invoker prior to the  * 00048400
*                  execution of the exec.  In particular, the return  * 00048500
*                  code from the exec will not be available for       * 00048600
*                  SYNC=NO users.  See AXRDIAG in AXRZARG for the     * 00048700
*                  mapping.                                           * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*              ÝSYNC=»YES!NOº                                         * 00049300
*                  is an optional keyword input that indicates        * 00049400
*                  whether the request is synchronous.                * 00049500
*                  DEFAULT: YES                                       * 00049600
*                                                                     * 00049700
*                                                                     * 00049800
*                  ÝSYNC=YES¨                                         * 00049900
*                      Indicates the request is synchronous.          * 00050000
*                                                                     * 00050100
*                  ÝSYNC=NO                                           * 00050200
*                      Indicates the request is asynchronous.         * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                      ÝOREQTOKEN=xoreqtoken¨                         * 00050600
*                          is the name (RS-type), or address in       * 00050700
*                          register (2)-(12), of an optional 16       * 00050800
*                          character output containing a unique token * 00050900
*                          associated with this Execute request.  The * 00051000
*                          REXX exec may obtain the Request Token by  * 00051100
*                          examining the AXRReqToken variable.        * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                      ÝCOMPEXIT=»NO_COMPEXIT!LINKº¨¨                 * 00051700
*                          is an optional keyword input that          * 00051800
*                          indicates whether the caller request that  * 00051900
*                          an exit be given control after the exec    * 00052000
*                          completes.  This keyword is not part of    * 00052100
*                          the programming interface.                 * 00052200
*                          DEFAULT: NO_COMPEXIT                       * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*                          ÝCOMPEXIT=NO_COMPEXIT¨                     * 00052600
*                              Indicates that the caller did not      * 00052700
*                              supply a completion exit.              * 00052800
*                                                                     * 00052900
*                          ÝCOMPEXIT=LINK                             * 00053000
*                              Indicates that the caller requests     * 00053100
*                              that an exit be linked to after the    * 00053200
*                              EXEC completes.                        * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                              LINKEP=xlinkep¨¨                       * 00053600
*                                  is the name (RS-type), or address  * 00053700
*                                  in register (2)-(12), of a         * 00053800
*                                  required 8 character input         * 00053900
*                                  containing the name of an entry to * 00054000
*                                  LINK to upon completion of the     * 00054100
*                                  exec.                              * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*          REQUEST=CANCEL                                             * 00055400
*              Cancel a prior Execute request                         * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*              REQTOKEN=xreqtoken                                     * 00055800
*                  is the name (RS-type), or address in register      * 00055900
*                  (2)-(12), of a required 16 character input         * 00056000
*                  containing the token returned when the EXECUTE     * 00056100
*                  request was made.                                  * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*                                                                     * 00056500
*          REQUEST=GETREXXLIB                                         * 00056600
*              Return the REXXLIB concatenation                       * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*              REXXLIB=xrexxlib                                       * 00057000
*                  is the name (RS-type) of a required character      * 00057100
*                  output containing the storage area to return the   * 00057200
*                  REXXLIB concatenation.  See AxrRxlHeader and       * 00057300
*                  AxrRxlEntry in AXRZARG for the mapping of this     * 00057400
*                  storage area.                                      * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*                                                                     * 00057900
*              REXXLIBLEN=xrexxliblen                                 * 00058000
*                  is the name (RS-type), or address in register      * 00058100
*                  (2)-(12), of a required fullword input containing  * 00058200
*                  the length of Rexxlib in bytes.  This must be      * 00058300
*                  greater than or equal to 20480.                    * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*      ÝRETCODE=xretcode¨                                             * 00059300
*          is the name (RS-type) of an optional fullword output       * 00059400
*          variable, or register (2)-(12) or (15), into which the     * 00059500
*          return code is to be copied from GPR 15.  If you specify   * 00059600
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00059700
*          the value will be left in GPR 15.  Do not specify RETCODE  * 00059800
*          with MF=M.                                                 * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*      ÝRSNCODE=xrsncode¨                                             * 00060400
*          is the name (RS-type) of an optional fullword output       * 00060500
*          variable into which the reason code is to be copied from   * 00060600
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00060700
*          R0 (within or without parentheses), the value will be left * 00060800
*          in GPR 0.  Do not specify RSNCODE with MF=M.               * 00060900
*                                                                     * 00061000
*                                                                     * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00061400
*          is an optional byte input decimal value in the "0-0" range * 00061500
*          that specifies the macro version.  PLISTVER is the only    * 00061600
*          key allowed on the list form of MF and determines which    * 00061700
*          parameter list is generated.  Note that MAX may be         * 00061800
*          specified instead of a number, and the parameter list will * 00061900
*          be of the largest size currently supported. This size may  * 00062000
*          grow from release to release (thus possibly affecting the  * 00062100
*          amount of storage needed by your program).  If your        * 00062200
*          program can tolerate this, IBM recommends that you always  * 00062300
*          specify MAX when creating the list form parameter list as  * 00062400
*          that will ensure that the list form parameter list is      * 00062500
*          always long enough to hold whatever parameters might be    * 00062600
*          specified on the execute form.                             * 00062700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00062800
*          default is the lowest version which allows all of the      * 00062900
*          parameters specified on the invocation to be processed.    * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*                                                                     * 00063400
*      ÝMF=»S!L!M!Eº¨                                                 * 00063500
*          is an optional keyword input which specifies the macro     * 00063600
*          form.                                                      * 00063700
*          DEFAULT: S                                                 * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*          ÝMF=S¨                                                     * 00064100
*              specifies the standard form of the macro.  The "S"     * 00064200
*              form generates code to put the parameters into an      * 00064300
*              in-line parameter list and invoke the desired service. * 00064400
*              Full checking for required macro keys is done along    * 00064500
*              with supplying defaults for omitted optional           * 00064600
*              parameters.                                            * 00064700
*                                                                     * 00064800
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00064900
*              specifies the list form of the macro.  The "L" form    * 00065000
*              defines an area to be used for the parameter list.     * 00065100
*              Only the PLISTVER key may be specified on the          * 00065200
*              invocation.  All other macro parameters are flagged as * 00065300
*              errors.  If PLISTVER is not specified, the original    * 00065400
*              parameter list definition is used.                     * 00065500
*                                                                     * 00065600
*            ,xmfctrl                                                 * 00065700
*              is a required input.  It is the name of a storage area * 00065800
*              for the parameter list.                                * 00065900
*                                                                     * 00066000
*            »,xmfattr!0Dº                                            * 00066100
*              is an optional 60 character input string that varies   * 00066200
*              from 1 to 60 characters. Use it to force boundary      * 00066300
*              alignment of the parameter list. Use only 0F or 0D.    * 00066400
*              DEFAULT: 0D which forces the parameter list to a       * 00066500
*              doubleword boundary.                                   * 00066600
*                                                                     * 00066700
*          ÝMF(M,xmfctrl»,COMPLETE!NOCHECKº)¨                         * 00066800
*              specifies the modify form of the macro.  The "M" form  * 00066900
*              generates code to put the parameters into the          * 00067000
*              parameter list specified by xmfctrl.                   * 00067100
*                                                                     * 00067200
*            ,xmfctrl                                                 * 00067300
*              is a required input.  It is the name (RS-type), or     * 00067400
*              address in register (1)-(12), of a storage area for    * 00067500
*              the parameter list.                                    * 00067600
*                                                                     * 00067700
*            »,COMPLETE!NOCHECKº¨                                     * 00067800
*              is an optional keyword input which specifies the       * 00067900
*              degree of macro parameter syntax checking.             * 00068000
*              DEFAULT: COMPLETE                                      * 00068100
*                                                                     * 00068200
*                                                                     * 00068300
*              COMPLETE                                               * 00068400
*                  Checking for required macro keys is done and       * 00068500
*                  defaults are supplied for omitted optional         * 00068600
*                  parameters.  (See Macro Usage Note 2).             * 00068700
*                                                                     * 00068800
*              NOCHECK                                                * 00068900
*                  Checking for required macro keys is not done nor   * 00069000
*                  are defaults supplied for omitted optional         * 00069100
*                  parameters.                                        * 00069200
*                                                                     * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*          ÝMF=(E,xmfctrl»,COMPLETE!NOCHECKº)¨                        * 00069600
*              specifies the execute form of the macro.  The "E" form * 00069700
*              generates code to put the parameters into the          * 00069800
*              parameter list specified by xmfctrl and invoke the     * 00069900
*              desired service.                                       * 00070000
*                                                                     * 00070100
*            ,xmfctrl                                                 * 00070200
*              is a required input.  It is the name (RS-type), or     * 00070300
*              address in register (1)-(12), of a storage area for    * 00070400
*              the parameter list.                                    * 00070500
*                                                                     * 00070600
*            »,COMPLETE!NOCHECKº                                      * 00070700
*              is an optional keyword input which specifies the       * 00070800
*              degree of macro parameter syntax checking.             * 00070900
*              DEFAULT: COMPLETE                                      * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*              COMPLETE                                               * 00071300
*                  Checking for required macro keys is done and       * 00071400
*                  defaults are supplied for omitted optional         * 00071500
*                  parameters.  (See Macro Usage Note 2).             * 00071600
*                                                                     * 00071700
*              NOCHECK                                                * 00071800
*                  Checking for required macro keys is not done nor   * 00071900
*                  are defaults supplied for omitted optional         * 00072000
*                  parameters.                                        * 00072100
*                                                                     * 00072200
*                                                                     * 00072300
*                                                                     * 00072400
*                                                                     * 00072500
*                                                                     * 00072600
*                                                                     * 00072700
*                                                                     * 00072800
*01* ABEND CODES:  None.                                              * 00072900
*                                                                     * 00073000
*01* RETURN CODES:                                                    * 00073100
*                                                                     * 00073200
*                                                                     * 00073300
*                 Macro AXRZARG provides equate symbols for the       * 00073400
*                 return and reason codes.                            * 00073500
*                                                                     * 00073600
*       0         Name: AxrRetCodeOK                                  * 00073700
*                                                                     * 00073800
*                 Meaning:  AXREXX request successful.                * 00073900
*                                                                     * 00074000
*                 Action:  None required.  If RexxDiag was specified, * 00074100
*                 AXRDIAG1, AXRDIAG2, AXRDIAG3 and AXRDIAG4 contain   * 00074200
*                 the message ids of any messages beginning with IRX  * 00074300
*                 (REXX) or IKJ (TSO) that were issued when           * 00074400
*                 processing the exec.  The format of the message id  * 00074500
*                 is packed decimal with the sign bits shifted out.   * 00074600
*                 A 1 in the high order byte distinguishes an IKJ     * 00074700
*                 message from an IRX message.                        * 00074800
*                                                                     * 00074900
*                                                                     * 00075000
*       8         Name: AxrRetcodeError                               * 00075100
*                                                                     * 00075200
*                 Meaning:  The AXREXX request failed due to a user   * 00075300
*                 error.                                              * 00075400
*                                                                     * 00075500
*                 Action:  Refer to the action provided with the      * 00075600
*                 specific reason code.                               * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*                 HEX REASON  MEANING/ACTION                          * 00076000
*                 CODE                                                * 00076100
*                                                                     * 00076200
*                 xxxx0801    Name: AXRNoFrrAllowed                   * 00076300
*                                                                     * 00076400
*                             Meaning: Caller invoked AXREXX with an  * 00076500
*                             FRR.                                    * 00076600
*                                                                     * 00076700
*                             Action: Remove the FRR and then invoke  * 00076800
*                             AXREXX.                                 * 00076900
*                                                                     * 00077000
*                 xxxx0802    Name: AXRNoLocksAllowed                 * 00077100
*                                                                     * 00077200
*                             Meaning: Caller invoked AXREXX holding  * 00077300
*                             a lock.                                 * 00077400
*                                                                     * 00077500
*                             Action: Free the lock and then invoke   * 00077600
*                             AXREXX.                                 * 00077700
*                                                                     * 00077800
*                 xxxx0803    Name: AXRNotTcbMode                     * 00077900
*                                                                     * 00078000
*                             Meaning: Caller was not running as a    * 00078100
*                             task.                                   * 00078200
*                                                                     * 00078300
*                             Action: Move the invocation of AXREXX   * 00078400
*                             under a task.                           * 00078500
*                                                                     * 00078600
*                 xxxx0804    Name: AXRNotAuthorized                  * 00078700
*                                                                     * 00078800
*                             Meaning: Caller is not APF authorized,  * 00078900
*                             running in a system key or in           * 00079000
*                             supervisor state.                       * 00079100
*                                                                     * 00079200
*                             Action: Avoid invoking AXREXX in this   * 00079300
*                             environment.                            * 00079400
*                                                                     * 00079500
*                 xxxx0805    Name: AXRNotEnabled                     * 00079600
*                                                                     * 00079700
*                             Meaning: Caller is disabled.            * 00079800
*                                                                     * 00079900
*                             Action: Avoid invoking AXREXX in this   * 00080000
*                             environment.                            * 00080100
*                                                                     * 00080200
*                 xxxx0806    Name: AXRRexxArgsCannotAccess           * 00080300
*                                                                     * 00080400
*                             Meaning: The RexxArgs parameter is not  * 00080500
*                             accessible.                             * 00080600
*                                                                     * 00080700
*                             Action:  Verify that the RexxArgs       * 00080800
*                             parameter is accessible and in the key  * 00080900
*                             in which AXREXX was invoked.            * 00081000
*                                                                     * 00081100
*                 xxxx0807    Name: AXRArgCannotAccess                * 00081200
*                                                                     * 00081300
*                             Meaning: An argument in the argument    * 00081400
*                             list cannot be accessed.                * 00081500
*                                                                     * 00081600
*                             Action: Refer to AxrArgLstEntryInError  * 00081700
*                             in the RexxArgs parameter to determine  * 00081800
*                             the index of the argument that was not  * 00081900
*                             accessible.  Ensure that AxrArgAddr and * 00082000
*                             AxrArgAlet contain the address and alet * 00082100
*                             of the argument.  Ensure that the       * 00082200
*                             argument is in the same key as the      * 00082300
*                             invoker.                                * 00082400
*                                                                     * 00082500
*                 xxxx0808    Name: AxrArgBadLength                   * 00082600
*                                                                     * 00082700
*                             Meaning: The length of an argument is   * 00082800
*                             not valid.                              * 00082900
*                                                                     * 00083000
*                             Action: Refer to AxrArgLstEntryInError  * 00083100
*                             in the RexxArgs parameter to determine  * 00083200
*                             the index of the argument whose length  * 00083300
*                             was incorrect.  Correct AxrArgLength.   * 00083400
*                                                                     * 00083500
*                 xxxx0809    Name: AxrArgBadType                     * 00083600
*                                                                     * 00083700
*                             Meaning: Type of an argument is         * 00083800
*                             invalid.                                * 00083900
*                                                                     * 00084000
*                             Action: Refer to AxrArgLstEntryInError  * 00084100
*                             in the RexxArgs parameter to determine  * 00084200
*                             the index of the argument whose type is * 00084300
*                             incorrect.  Correct AxrArgType with one * 00084400
*                             of the valid types listed in AXRZARG.   * 00084500
*                                                                     * 00084600
*                 xxxx080A    Name: AXRPlistCannotAccess              * 00084700
*                                                                     * 00084800
*                             Meaning: The input parameter list was   * 00084900
*                             not accessible                          * 00085000
*                                                                     * 00085100
*                             Action: Verify that the input parameter * 00085200
*                             list is in the same key as the invoker. * 00085300
*                             Verify that it is accessible.           * 00085400
*                                                                     * 00085500
*                 xxxx080B    Name: AxrArgTooMany                     * 00085600
*                                                                     * 00085700
*                             Meaning: Too many arguments were        * 00085800
*                             specified.                              * 00085900
*                                                                     * 00086000
*                             Action: Verify the contents of          * 00086100
*                             AxrArgLstNumber in the RexxArgs         * 00086200
*                             parameter.  The maximum possible value  * 00086300
*                             is 20.                                  * 00086400
*                                                                     * 00086500
*                 xxxx080C    Name: AxrArgBadNumeric                  * 00086600
*                                                                     * 00086700
*                             Meaning: An output argument from a REXX * 00086800
*                             exec is not numeric.                    * 00086900
*                                                                     * 00087000
*                             Action: Refer to AxrArgLstEntryInError  * 00087100
*                             in the RexxArgs parameter for the index * 00087200
*                             of the invalid argument.  Make sure     * 00087300
*                             that the REXX exec did not return a     * 00087400
*                             value in scientific notation.           * 00087500
*                                                                     * 00087600
*                 xxxx080D    Name: AXRArgBadBitString                * 00087700
*                                                                     * 00087800
*                             Meaning: An output argument from a REXX * 00087900
*                             exec is not a bit string.               * 00088000
*                                                                     * 00088100
*                             Action: Refer to AxrArgLstEntryInError  * 00088200
*                             in the RexxArgs parameter for the index * 00088300
*                             of the invalid argument.  Correct the   * 00088400
*                             exec or change AxrArgType.              * 00088500
*                                                                     * 00088600
*                 xxxx080E    Name: AXRArgBadHexString                * 00088700
*                                                                     * 00088800
*                             Meaning: An output argument from a REXX * 00088900
*                             exec is not a hex string.               * 00089000
*                                                                     * 00089100
*                             Action: Refer to AxrArgLstEntryInError  * 00089200
*                             in the RexxArgs parameter for the index * 00089300
*                             of the invalid argument.  Correct the   * 00089400
*                             exec or change AxrArgType.              * 00089500
*                                                                     * 00089600
*                 xxxx0810    Name: AXRArgBadNameLength               * 00089700
*                                                                     * 00089800
*                             Meaning: The length of the name of an   * 00089900
*                             argument is too long.                   * 00090000
*                                                                     * 00090100
*                             Action: Refer to AxrArgLstEntryInError  * 00090200
*                             in the RexxArgs parameter for the index * 00090300
*                             of the invalid argument.  Correct       * 00090400
*                             AxrArgNameLength.                       * 00090500
*                                                                     * 00090600
*                 xxxx0811    Name: AXRNotAbleToAllocateRexxInDsn     * 00090700
*                                                                     * 00090800
*                             Meaning: System REXX was unable to      * 00090900
*                             allocate the REXXINDsn dataset.         * 00091000
*                                                                     * 00091100
*                             Action: The return and reason codes     * 00091200
*                             from DYNALLOC are inserted into         * 00091300
*                             AXRDIAG1 and AXRDIAG2 in the RexxDiag   * 00091400
*                             parameter.  Look up the return/reason   * 00091500
*                             codes in the z/OS MVS Authorized        * 00091600
*                             Assembler Services Guide.  Look in the  * 00091700
*                             System Log for any messages that were   * 00091800
*                             issued by DYNALLOC.                     * 00091900
*                                                                     * 00092000
*                 xxxx0812    Name: AXRNotAbleToAllocateRexxOutDsn    * 00092100
*                                                                     * 00092200
*                             Meaning: System REXX was unable to      * 00092300
*                             allocate the RexxOutDsn dataset.        * 00092400
*                                                                     * 00092500
*                             Action: The return and reason codes     * 00092600
*                             from DYNALLOC are inserted into         * 00092700
*                             AXRDIAG1 and AXRDIAG2 in the RexxDiag   * 00092800
*                             parameter.  Look up the return/reason   * 00092900
*                             codes in the z/OS MVS Authorized        * 00093000
*                             Assembler Services Guide.  Look in the  * 00093100
*                             System Log for any messages that were   * 00093200
*                             issued by DYNALLOC.                     * 00093300
*                                                                     * 00093400
*                 xxxx0813    Name: AXRUtokenCannotAccess             * 00093500
*                                                                     * 00093600
*                             Meaning: Unable to access the Utoken    * 00093700
*                             input parameter.                        * 00093800
*                                                                     * 00093900
*                             Action: Ensure that the Utoken input    * 00094000
*                             parameter is in the key of the AXREXX   * 00094100
*                             invoker and that it is accessible.      * 00094200
*                                                                     * 00094300
*                 xxxx0814    Name: AXRRexxInDsnCannotAccess          * 00094400
*                                                                     * 00094500
*                             Meaning: Unable to access the RexxInDsn * 00094600
*                             input parameter.                        * 00094700
*                                                                     * 00094800
*                             Action: Ensure that the RexxInDsn input * 00094900
*                             parameter is in the key of the AXREXX   * 00095000
*                             invoker and that it is accessible.      * 00095100
*                                                                     * 00095200
*                 xxxx0815    Name: AXRRexxOutDsnCannotAccess         * 00095300
*                                                                     * 00095400
*                             Meaning: Unable to access the           * 00095500
*                             RexxOutDsn input parameter.             * 00095600
*                                                                     * 00095700
*                             Action: Ensure that the RexxOutDsn      * 00095800
*                             input parameter is in the key of the    * 00095900
*                             AXREXX invoker and that it is           * 00096000
*                             accessible.                             * 00096100
*                                                                     * 00096200
*                 xxxx0816    Name: AXRRexxVarsCannotAccess           * 00096300
*                                                                     * 00096400
*                             Meaning: The RexxVars parameter is not  * 00096500
*                             accessible.                             * 00096600
*                                                                     * 00096700
*                             Action:  Verify that the RexxVars       * 00096800
*                             parameter is accessible and in the key  * 00096900
*                             in which AXREXX was invoked.            * 00097000
*                                                                     * 00097100
*                 xxxx0817    Name: AXRBadTimeInt                     * 00097200
*                                                                     * 00097300
*                             Meaning: The value of the Timeint       * 00097400
*                             keyword is invalid.                     * 00097500
*                                                                     * 00097600
*                             Action: Ensure that the value of the    * 00097700
*                             TimeInt keyword is less than 21474536   * 00097800
*                             seconds.                                * 00097900
*                                                                     * 00098000
*                 xxxx0818    Name: AXRArgBadAcronym                  * 00098100
*                                                                     * 00098200
*                             Meaning: The acronym for the RexxArgs   * 00098300
*                             keyword is incorrect.                   * 00098400
*                                                                     * 00098500
*                             Action: Ensure that AxrArgLstId is set  * 00098600
*                             to AxrArgLstAcro.                       * 00098700
*                                                                     * 00098800
*                 xxxx0819    Name: AXRVarBadAcronym                  * 00098900
*                                                                     * 00099000
*                             Meaning: The acronym for the RexxVars   * 00099100
*                             keyword is incorrect.                   * 00099200
*                                                                     * 00099300
*                             Action: Ensure that AxrArgLstId is set  * 00099400
*                             to AxrVarLstAcro.                       * 00099500
*                                                                     * 00099600
*                 xxxx081A    Name: AXRArgBadVersion                  * 00099700
*                                                                     * 00099800
*                             Meaning: The version for the RexxArgs   * 00099900
*                             keyword is incorrect.                   * 00100000
*                                                                     * 00100100
*                             Action: Ensure that version is one that * 00100200
*                             is supported.                           * 00100300
*                                                                     * 00100400
*                 xxxx081B    Name: AXRVarBadVersion                  * 00100500
*                                                                     * 00100600
*                             Meaning: The version for the RexxVars   * 00100700
*                             keyword is incorrect.                   * 00100800
*                                                                     * 00100900
*                             Action: Ensure that the version is one  * 00101000
*                             that is supported.                      * 00101100
*                                                                     * 00101200
*                 xxxx081C    Name: AxrVarTooMany                     * 00101300
*                                                                     * 00101400
*                             Meaning: Too many variables were        * 00101500
*                             specified.                              * 00101600
*                                                                     * 00101700
*                             Action: Verify the contents of          * 00101800
*                             AxrArgLstNumber in the RexxVars         * 00101900
*                             parameter.  The maximum possible value  * 00102000
*                             is 256.                                 * 00102100
*                                                                     * 00102200
*                 xxxx081D    Name: AxrVarBadNumeric                  * 00102300
*                                                                     * 00102400
*                             Meaning: An output variable from a REXX * 00102500
*                             exec is not numeric.                    * 00102600
*                                                                     * 00102700
*                             Action: Refer to AxrArgLstEntryInError  * 00102800
*                             in the RexxVars parameter for the index * 00102900
*                             of the invalid variable.  Make sure     * 00103000
*                             that the REXX exec did not return a     * 00103100
*                             value in scientific notation.           * 00103200
*                                                                     * 00103300
*                 xxxx081E    Name: AXRVarBadBitString                * 00103400
*                                                                     * 00103500
*                             Meaning: An output variable from a REXX * 00103600
*                             exec is not a bit string.               * 00103700
*                                                                     * 00103800
*                             Action: Refer to AxrArgLstEntryInError  * 00103900
*                             in the RexxVars parameter for the index * 00104000
*                             of the invalid variable.  Correct the   * 00104100
*                             exec or change AxrArgType.              * 00104200
*                                                                     * 00104300
*                 xxxx081F    Name: AXRVarBadHexString                * 00104400
*                                                                     * 00104500
*                             Meaning: An output variable from a REXX * 00104600
*                             exec is not a hex string.               * 00104700
*                                                                     * 00104800
*                             Action: Refer to AxrArgLstEntryInError  * 00104900
*                             in the RexxVars parameter for the index * 00105000
*                             of the invalid variable.  Correct the   * 00105100
*                             exec or change AxrArgType.              * 00105200
*                                                                     * 00105300
*                 xxxx0820    Name: AXRVarBadNameLength               * 00105400
*                                                                     * 00105500
*                             Meaning: The length of the name of a    * 00105600
*                             variable is too long.                   * 00105700
*                                                                     * 00105800
*                             Action: Refer to AxrArgLstEntryInError  * 00105900
*                             in the RexxVars parameter for the index * 00106000
*                             of the invalid variable.  Correct       * 00106100
*                             AxrArgNameLength.                       * 00106200
*                                                                     * 00106300
*                 xxxx0821    Name: AXRVarBadType                     * 00106400
*                                                                     * 00106500
*                             Meaning: The type specification for a   * 00106600
*                             variable is invalid.                    * 00106700
*                                                                     * 00106800
*                             Action: Refer to AxrArgLstEntryInError  * 00106900
*                             in the RexxVars parameter for the index * 00107000
*                             of the invalid variable.  Correct       * 00107100
*                             AxrArgType with one of the valid types  * 00107200
*                             listed in AXRZARG.                      * 00107300
*                                                                     * 00107400
*                 xxxx0822    Name: AXRVarCannotAccess                * 00107500
*                                                                     * 00107600
*                             Meaning: A variable could not be        * 00107700
*                             accessed.                               * 00107800
*                                                                     * 00107900
*                             Action: Refer to AxrArgLstEntryInError  * 00108000
*                             in the RexxVars parameter for the index * 00108100
*                             of the variable that could not be       * 00108200
*                             accessed.  Ensure that AxrArgAddr and   * 00108300
*                             AxrArgAlet contain the address and alet * 00108400
*                             of the variable.  Ensure that the       * 00108500
*                             variable is in the same key as the      * 00108600
*                             invoker.                                * 00108700
*                                                                     * 00108800
*                 xxxx0823    Name: AXRVarBadLength                   * 00108900
*                                                                     * 00109000
*                             Meaning: The length of a variable was   * 00109100
*                             invalid.                                * 00109200
*                                                                     * 00109300
*                             Action: Refer to AxrArgLstEntryInError  * 00109400
*                             in the RexxVars parameter for the index * 00109500
*                             of the variable whose length is         * 00109600
*                             invalid. Correct AxrArgLength.          * 00109700
*                                                                     * 00109800
*                 xxxx0824    Name: AXRArgLstRsvNotZero               * 00109900
*                                                                     * 00110000
*                             Meaning: A reserved field in the        * 00110100
*                             AXRARGLST mapping was non-zero for the  * 00110200
*                             RexxArgs AXREXX parameter.              * 00110300
*                                                                     * 00110400
*                             Action: Clear the reserved fields in    * 00110500
*                             the AXRARGLST mapping.                  * 00110600
*                                                                     * 00110700
*                 xxxx0825    Name: AXRVarLstRsvNotZero               * 00110800
*                                                                     * 00110900
*                             Meaning: A reserved field in the        * 00111000
*                             AXRARGLST mapping was non-zero for the  * 00111100
*                             RexxVars AXREXX parameter.              * 00111200
*                                                                     * 00111300
*                             Action: Clear the reserved fields in    * 00111400
*                             the AXRARGLST mapping.                  * 00111500
*                                                                     * 00111600
*                 xxxx0826    Name: AXRNotAbleToUnallocateRexxInDsn   * 00111700
*                                                                     * 00111800
*                             Meaning: A bad return code was returned * 00111900
*                             from DYNALLOC when attempting to        * 00112000
*                             unallocate the RexxinDsn dataset.       * 00112100
*                                                                     * 00112200
*                             Action: The return and reason codes     * 00112300
*                             from DYNALLOC are inserted into         * 00112400
*                             AXRDIAG1 and AXRDIAG2 in the RexxDiag   * 00112500
*                             parameter.  Look in the System Log for  * 00112600
*                             any messages that DYNALLOC may have     * 00112700
*                             issued.                                 * 00112800
*                                                                     * 00112900
*                 xxxx0827    Name: AXRNotAbleToUnallocateRexxOutDsn  * 00113000
*                                                                     * 00113100
*                             Meaning: A bad return code was returned * 00113200
*                             from DYNALLOC when attempting to        * 00113300
*                             unallocate the RexxOutDsn dataset.      * 00113400
*                                                                     * 00113500
*                             Action: The return and reason codes     * 00113600
*                             from DYNALLOC are inserted into         * 00113700
*                             AXRDIAG1 and AXRDIAG2 in the RexxDiag   * 00113800
*                             parameter.  Look in the System Log for  * 00113900
*                             any messages that DYNALLOC may have     * 00114000
*                             issued.                                 * 00114100
*                                                                     * 00114200
*                 xxxx0828    Name: AXRExecSyntaxError                * 00114300
*                                                                     * 00114400
*                             Meaning: A syntax error or some other   * 00114500
*                             run time error was encountered during   * 00114600
*                             the execution of a REXX exec.           * 00114700
*                                                                     * 00114800
*                             Action:  The REXX interpreter issues    * 00114900
*                             one or more error messages that         * 00115000
*                             indicate the offending line number.  If * 00115100
*                             RexxOutDsn is specified, look at the    * 00115200
*                             dataset for the message.  If RexxOutDsn * 00115300
*                             is not specified but ConsData is        * 00115400
*                             specified, look at the console or the   * 00115500
*                             system log.  If RexxDiag is specified,  * 00115600
*                             AXRDIAG1 contains the number of the     * 00115700
*                             error which corresponds to an IRXnnnI   * 00115800
*                             message, AXRDIAG2 contains the line     * 00115900
*                             number where the error occurred and     * 00116000
*                             AXRDIAG3 and AXRDIAG4 contain the       * 00116100
*                             message ids of the last two IRX or IKJ  * 00116200
*                             messages that were issued before the    * 00116300
*                             exec completed.  All of these values    * 00116400
*                             are in packed decimal format with the   * 00116500
*                             sign bits shifted out.  A 1 in the high * 00116600
*                             order byte distinguishes an IKJ message * 00116700
*                             from an IRX message.                    * 00116800
*                                                                     * 00116900
*                 xxxx082A    Name: AXRArgNumericTooBig               * 00117000
*                                                                     * 00117100
*                             Meaning: The value of an output         * 00117200
*                             argument was either too large or too    * 00117300
*                             small (negative) to be represented in   * 00117400
*                             the storage area that was passed.       * 00117500
*                                                                     * 00117600
*                             Action: Inspect AxrArgLstEntryInError   * 00117700
*                             in the RexxArgs parameter for the index * 00117800
*                             of the argument that caused the error.  * 00117900
*                                                                     * 00118000
*                 xxxx082B    Name: AXRVarNoExist                     * 00118100
*                                                                     * 00118200
*                             Meaning: The output variable was not    * 00118300
*                             set in the exec.                        * 00118400
*                                                                     * 00118500
*                             Action: Inspect AxrArgLstEntryInError   * 00118600
*                             in the RexxVars parameter for the index * 00118700
*                             of the variable that caused the error.  * 00118800
*                             Determine why this variable was not set * 00118900
*                             in the exec.                            * 00119000
*                                                                     * 00119100
*                 xxxx082C    Name: AXRArgNoExist                     * 00119200
*                                                                     * 00119300
*                             Meaning: The output argument was not    * 00119400
*                             set in the exec.                        * 00119500
*                                                                     * 00119600
*                             Action: Inspect AxrArgLstEntryInError   * 00119700
*                             in the RexxArgs parameter for the index * 00119800
*                             of the argument that caused the error.  * 00119900
*                             Determine why this argument was not set * 00120000
*                             in the exec.                            * 00120100
*                                                                     * 00120200
*                 xxxx082D    Name: AXRVarTooLong                     * 00120300
*                                                                     * 00120400
*                             Meaning: The buffer of the client could * 00120500
*                             not accommodate the value of the        * 00120600
*                             variable.                               * 00120700
*                                                                     * 00120800
*                             Action: Inspect AxrArgLstEntryInError   * 00120900
*                             in the RexxVars parameter for the index * 00121000
*                             of the variable that caused the error.  * 00121100
*                             Increase the size of the output         * 00121200
*                             variable or ensure that the variable's  * 00121300
*                             size can be accommodated by the passed  * 00121400
*                             buffer.                                 * 00121500
*                                                                     * 00121600
*                 xxxx082E    Name: AXRArgTooLong                     * 00121700
*                                                                     * 00121800
*                             Meaning: The buffer of the client could * 00121900
*                             not accommodate the value of the        * 00122000
*                             argument.                               * 00122100
*                                                                     * 00122200
*                             Action: Inspect AxrArgLstEntryInError   * 00122300
*                             in the RexxArgs parameter for the index * 00122400
*                             of the argument that caused the error.  * 00122500
*                             Increase the size of the output         * 00122600
*                             argument or ensure that the argument's  * 00122700
*                             size can be accommodated by the passed  * 00122800
*                             buffer.                                 * 00122900
*                                                                     * 00123000
*                 xxxx082F    Name: AXRVarBadName                     * 00123100
*                                                                     * 00123200
*                             Meaning: The name of a variable was not * 00123300
*                             acceptable to REXX.                     * 00123400
*                                                                     * 00123500
*                             Action: Inspect AxrArgLstEntryInError   * 00123600
*                             in the RexxVars parameter for the index * 00123700
*                             of the variable that caused the error.  * 00123800
*                             Correct the name.                       * 00123900
*                                                                     * 00124000
*                 xxxx0830    Name: AXRArgBadName                     * 00124100
*                                                                     * 00124200
*                             Meaning: The name of an argument was    * 00124300
*                             not acceptable to REXX.                 * 00124400
*                                                                     * 00124500
*                             Action: Inspect AxrArgLstEntryInError   * 00124600
*                             in the RexxArgs parameter for the index * 00124700
*                             of the argument that caused the error.  * 00124800
*                             Correct the name.                       * 00124900
*                                                                     * 00125000
*                 xxxx0831    Name: AXRVarNumericTooBig               * 00125100
*                                                                     * 00125200
*                             Meaning: The value of an output         * 00125300
*                             variable was either too large or too    * 00125400
*                             small (negative) to be represented in   * 00125500
*                             the storage area that was passed.       * 00125600
*                                                                     * 00125700
*                             Action: Inspect AxrArgLstEntryInError   * 00125800
*                             in the RexxVars parameter for the index * 00125900
*                             of the variable that caused the error.  * 00126000
*                                                                     * 00126100
*                 xxxx0832    Name: AXRArgNameCannotAccess            * 00126200
*                                                                     * 00126300
*                             Meaning: The argument name was not      * 00126400
*                             accessible.                             * 00126500
*                                                                     * 00126600
*                             Action: Inspect AxrArgLstEntryInError   * 00126700
*                             in the RexxArgs parameter for the index * 00126800
*                             of the argument that caused the error.  * 00126900
*                             Ensure that AxrArgNameAddr and          * 00127000
*                             AxrArgNameAlet contain the address and  * 00127100
*                             alet of the argument name.  Ensure that * 00127200
*                             the argument name is in the same key as * 00127300
*                             the invoker.                            * 00127400
*                                                                     * 00127500
*                 xxxx0833    Name: AXRVarNameCannotAccess            * 00127600
*                                                                     * 00127700
*                             Meaning: The variable name was          * 00127800
*                             inaccessible and caused a program check * 00127900
*                             when System REXX attempted to access.   * 00128000
*                                                                     * 00128100
*                             Action: Inspect AxrArgLstEntryInError   * 00128200
*                             in the RexxVars parameter for the index * 00128300
*                             of the variable that caused the error.  * 00128400
*                             Ensure that AxrArgNameAddr and          * 00128500
*                             AxrArgNameAlet contain the address and  * 00128600
*                             alet of the variable name.  Ensure that * 00128700
*                             the variable name is in the same key as * 00128800
*                             the invoker.                            * 00128900
*                                                                     * 00129000
*                 xxxx0835    Name: AXRDiagCannotAccess               * 00129100
*                                                                     * 00129200
*                             Meaning: The value of the RexxDiag      * 00129300
*                             parameter was not accessible.           * 00129400
*                                                                     * 00129500
*                             Action: Ensure the RexxDiag parameter   * 00129600
*                             is in the same key as the invoker.      * 00129700
*                             Correct the RexxDiag parameter.         * 00129800
*                                                                     * 00129900
*                 xxxx0837    Name: AXRArgNeitherInOrOut              * 00130000
*                                                                     * 00130100
*                             Meaning: A REXX argument is neither an  * 00130200
*                             input or output argument.               * 00130300
*                                                                     * 00130400
*                             Action: Inspect AxrArgLstEntryInError   * 00130500
*                             in the RexxArgs parameter for the index * 00130600
*                             of the offending argument and set       * 00130700
*                             either AXRArgInput, AXRArgOutput or     * 00130800
*                             both in the argument list entry.        * 00130900
*                                                                     * 00131000
*                 xxxx0838    Name: AXRVarNeitherInOrOut              * 00131100
*                                                                     * 00131200
*                             Meaning: A REXX variable is neither an  * 00131300
*                             input or output variable.               * 00131400
*                                                                     * 00131500
*                             Action: Inspect AxrArgLstEntryInError   * 00131600
*                             in the RexxVars parameter for the index * 00131700
*                             of the offending variable and set       * 00131800
*                             either AXRArgInput, AXRArgOutput or     * 00131900
*                             both in the entry in variable list      * 00132000
*                             entry.                                  * 00132100
*                                                                     * 00132200
*                 xxxx0839    Name: AXRArgBadUnsigned                 * 00132300
*                                                                     * 00132400
*                             Meaning: An unsigned output argument    * 00132500
*                             returned from REXX was prefixed with a  * 00132600
*                             sign.                                   * 00132700
*                                                                     * 00132800
*                             Action: AxrArgLstEntryInError in the    * 00132900
*                             RexxArgs parameter contains the index   * 00133000
*                             of the invalid argument.  Correct the   * 00133100
*                             REXX exec to return an unsigned value   * 00133200
*                             or change the argument to signed.       * 00133300
*                                                                     * 00133400
*                 xxxx083A    Name: AXRVarBadUnsigned                 * 00133500
*                                                                     * 00133600
*                             Meaning: An unsigned output variable    * 00133700
*                             returned from REXX was prefixed with a  * 00133800
*                             sign.                                   * 00133900
*                                                                     * 00134000
*                             Action: AxrArgLstEntryInError in the    * 00134100
*                             RexxVars parameter contains the index   * 00134200
*                             of the invalid variable.  Change the    * 00134300
*                             exec to return an unsigned value or     * 00134400
*                             change the variable to be signed.       * 00134500
*                                                                     * 00134600
*                 xxxx083B    Name: AXRBadConsoleName                 * 00134700
*                                                                     * 00134800
*                             Meaning: The specified CONSNAME         * 00134900
*                             parameter was syntactically incorrect.  * 00135000
*                                                                     * 00135100
*                             Action: Correct the syntax of the       * 00135200
*                             CONSNAME parameter so that it is a      * 00135300
*                             syntactically valid console name.       * 00135400
*                                                                     * 00135500
*                 xxxx083E    Name: AXRRexxInNotAuth                  * 00135600
*                                                                     * 00135700
*                             Meaning: Invoker is not SAF authorized  * 00135800
*                             to the dataset name specified on the    * 00135900
*                             RexxInDsn keyword.                      * 00136000
*                                                                     * 00136100
*                             Action: Either change the dataset name  * 00136200
*                             or change the security environment so   * 00136300
*                             that the dataset can be accessed.       * 00136400
*                                                                     * 00136500
*                 xxxx083F    Name: AXRRexxOutNotAuth                 * 00136600
*                                                                     * 00136700
*                             Meaning: Invoker is not SAF authorized  * 00136800
*                             to the dataset name specified on the    * 00136900
*                             RexxOutDsn keyword.                     * 00137000
*                                                                     * 00137100
*                             Action: Either change the dataset name  * 00137200
*                             or change the security environment so   * 00137300
*                             that the dataset can be accessed.       * 00137400
*                                                                     * 00137500
*                 xxxx0840    Name: AXRRexxInDsnBad                   * 00137600
*                                                                     * 00137700
*                             Meaning: The RexxInDsn specification is * 00137800
*                             not syntactically correct.              * 00137900
*                                                                     * 00138000
*                             Action: Correct the input so that it is * 00138100
*                             a valid dataset name.                   * 00138200
*                                                                     * 00138300
*                 xxxx0841    Name: AXRRexxOutDsnBad                  * 00138400
*                                                                     * 00138500
*                             Meaning: The RexxOutDsn specification   * 00138600
*                             is not syntactically correct.           * 00138700
*                                                                     * 00138800
*                             Action: Correct the input so that it is * 00138900
*                             a valid dataset name.                   * 00139000
*                                                                     * 00139100
*                 xxxx0842    Name: AXRRacrouteBad                    * 00139200
*                                                                     * 00139300
*                             Meaning: RACROUTE VERIFY returned a bad * 00139400
*                             return code when attempting to create a * 00139500
*                             security environment prior to running   * 00139600
*                             the REXX exec.                          * 00139700
*                                                                     * 00139800
*                             Action: The SAF return code in stored   * 00139900
*                             in AXRDIAG1.  The RACF return and       * 00140000
*                             reason codes are stored in AXRDIAG2 and * 00140100
*                             AXRDIAG3 respectively (all in the       * 00140200
*                             REXXDiag parameter).  Certain types of  * 00140300
*                             address spaces do not have a legitimate * 00140400
*                             security environment and as such the    * 00140500
*                             AXREXX invoker may have to provide a    * 00140600
*                             different UTOKEN or use                 * 00140700
*                             SECURITY=BYAXRUSER.                     * 00140800
*                                                                     * 00140900
*                 xxxx0843    Name: AXRRexxOutCannotOpen              * 00141000
*                                                                     * 00141100
*                             Meaning: A failure occurred when        * 00141200
*                             attempting to open the dataset          * 00141300
*                             specified by RexxOutDsn.                * 00141400
*                                                                     * 00141500
*                             Action: The return code from IRXINOUT   * 00141600
*                             is set in AXRDIAG1 in the RexxDiag      * 00141700
*                             parameter and is documented in z/OS     * 00141800
*                             TSO/E REXX Reference.  Additionally,    * 00141900
*                             the REXX interpreter may issue messages * 00142000
*                             describing the error.                   * 00142100
*                                                                     * 00142200
*                 xxxx0844    Name: AXRRexxInCannotOpen               * 00142300
*                                                                     * 00142400
*                             Meaning: A failure occurred when        * 00142500
*                             attempting to open the dataset          * 00142600
*                             specified by RexxInDsn.                 * 00142700
*                                                                     * 00142800
*                             Action: The return code from IRXINOUT   * 00142900
*                             is set in AXRDIAG1 in the RexxDiag      * 00143000
*                             parameter and is documented in the z/OS * 00143100
*                             TSO/E REXX Reference.  Additionally,    * 00143200
*                             the REXX interpreter may issue messages * 00143300
*                             describing the error.                   * 00143400
*                                                                     * 00143500
*                 xxxx0846    Name: AXRBadRequest                     * 00143600
*                                                                     * 00143700
*                             Meaning: The AXREXX input pararmeter    * 00143800
*                             list is incorrect.   An invalid request * 00143900
*                             type is specified.                      * 00144000
*                                                                     * 00144100
*                             Action: Determine why the AXREXX input  * 00144200
*                             parameter list is incorrect.            * 00144300
*                                                                     * 00144400
*                 xxxx0847    Name: AXRArgRsvNotZero                  * 00144500
*                                                                     * 00144600
*                             Meaning: A reserved field in the        * 00144700
*                             AXRARGENTRY mapping was non-zero for    * 00144800
*                             the RexxArgs AXREXX parameter.          * 00144900
*                                                                     * 00145000
*                             Action: AxrArgLstEntryInError in the    * 00145100
*                             RexxArgs parameter contains the index   * 00145200
*                             of the entry that caused the error.     * 00145300
*                             Clear the reserved fields.              * 00145400
*                                                                     * 00145500
*                 xxxx0848    Name: AXRVarRsvNotZero                  * 00145600
*                                                                     * 00145700
*                             Meaning: A reserved field in the        * 00145800
*                             AXRARGENTRY mapping was non-zero for    * 00145900
*                             the RexxVars AXREXX parameter.          * 00146000
*                                                                     * 00146100
*                             Action: AxrArgLstEntryInError in the    * 00146200
*                             RexxVars parameter contains the index   * 00146300
*                             of the entry that caused the error.     * 00146400
*                             Clear the reserved fields.              * 00146500
*                                                                     * 00146600
*                 xxxx0849    Name: AXRBadReqToken                    * 00146700
*                                                                     * 00146800
*                             Meaning: For a CANCEL request, the      * 00146900
*                             input Request Token is invalid.         * 00147000
*                                                                     * 00147100
*                             Action: Correct the invocation to       * 00147200
*                             provide a valid Request Token.          * 00147300
*                                                                     * 00147400
*                 xxxx084A    Name: AXRRexxInNotSeq                   * 00147500
*                                                                     * 00147600
*                             Meaning: RexxInDsn is a PDS, but        * 00147700
*                             RexxInMemName is not specified.         * 00147800
*                                                                     * 00147900
*                             Action: Specify RexxInMemname keyword   * 00148000
*                             or change RexxInDsn.                    * 00148100
*                                                                     * 00148200
*                 xxxx084B    Name: AXRRexxInNotPDS                   * 00148300
*                                                                     * 00148400
*                             Meaning: RexxInMemname is specified but * 00148500
*                             RexxInDsn is not a PDS.                 * 00148600
*                                                                     * 00148700
*                             Action: Remove RexxInMemname or specify * 00148800
*                             a PDS for RexxInDsn.                    * 00148900
*                                                                     * 00149000
*                 xxxx084C    Name: AXRRexxOutNotSeq                  * 00149100
*                                                                     * 00149200
*                             Meaning: RexxOutDsn is a PDS, but       * 00149300
*                             RexxOutMemName is not specified.        * 00149400
*                                                                     * 00149500
*                             Action: Specify the RexxOutMemName      * 00149600
*                             keyword or change RexxOutDsn.           * 00149700
*                                                                     * 00149800
*                 xxxx084D    Name: AXRRexxOutNotPDS                  * 00149900
*                                                                     * 00150000
*                             Meaning: RexxOutMemname is specified    * 00150100
*                             but RexxOutDsn is not a PDS.            * 00150200
*                                                                     * 00150300
*                             Action: Remove the RexxOutMemName       * 00150400
*                             keyword or change the specification of  * 00150500
*                             RexxOutDsn to a PDS.                    * 00150600
*                                                                     * 00150700
*                 xxxx084E    Name: AXRRexxInNoMember                 * 00150800
*                                                                     * 00150900
*                             Meaning: RexxInMemname does not exist   * 00151000
*                             in the dataset specified by RexxInDsn.  * 00151100
*                                                                     * 00151200
*                             Action: Either create the member or     * 00151300
*                             specify a different RexxInDsn dataset   * 00151400
*                             name.                                   * 00151500
*                                                                     * 00151600
*                 xxxx0850    Name: AXRVarBadValue                    * 00151700
*                                                                     * 00151800
*                             Meaning: The value of an input variable * 00151900
*                             was not acceptable to REXX.             * 00152000
*                                                                     * 00152100
*                             Action: Inspect AxrArgLstEntryInError   * 00152200
*                             in the RexxVars parameter for the index * 00152300
*                             of the variable that caused the error.  * 00152400
*                                                                     * 00152500
*                 xxxx0851    Name: AXRExecNotFound                   * 00152600
*                                                                     * 00152700
*                             Meaning: The exec was not found in the  * 00152800
*                             System REXX library.                    * 00152900
*                                                                     * 00153000
*                             Action: Correct the spelling of the     * 00153100
*                             exec in the NAME keyword.               * 00153200
*                                                                     * 00153300
*                 xxxx0852    Name: AXRVarOutBadValue                 * 00153400
*                                                                     * 00153500
*                             Meaning: The value of an output         * 00153600
*                             variable was not acceptable to REXX.    * 00153700
*                                                                     * 00153800
*                             Action: Inspect AxrArgLstEntryInError   * 00153900
*                             in the RexxVars parameter for the index * 00154000
*                             of the variable that caused the error.  * 00154100
*                                                                     * 00154200
*                 xxxx0853    Name: AXRArgOutBadValue                 * 00154300
*                                                                     * 00154400
*                             Meaning: The value of an output         * 00154500
*                             argument was not acceptable to REXX.    * 00154600
*                                                                     * 00154700
*                             Action: Inspect AxrArgLstEntryInError   * 00154800
*                             in the RexxArgs parameter for the index * 00154900
*                             of the argument that caused the error.  * 00155000
*                                                                     * 00155100
*                 xxxx0854    Name: AXRParmlistBadAlet                * 00155200
*                                                                     * 00155300
*                             Meaning: The ALET of the parmlist is    * 00155400
*                             invalid.                                * 00155500
*                                                                     * 00155600
*                             Action: Correct the Alet.               * 00155700
*                                                                     * 00155800
*                 xxxx0855    Name: AXRUtokenBadAlet                  * 00155900
*                                                                     * 00156000
*                             Meaning: The ALET of the UTOKEN         * 00156100
*                             parameter is invalid.                   * 00156200
*                                                                     * 00156300
*                             Action: Correct the Alet.               * 00156400
*                                                                     * 00156500
*                 xxxx0856    Name: AXRRexxArgsBadAlet                * 00156600
*                                                                     * 00156700
*                             Meaning: The ALET of the REXXARGS       * 00156800
*                             parameter is invalid.                   * 00156900
*                                                                     * 00157000
*                             Action: Correct the Alet.               * 00157100
*                                                                     * 00157200
*                 xxxx0857    Name: AXRRexxVarsBadAlet                * 00157300
*                                                                     * 00157400
*                             Meaning: The ALET of the REXXVARS       * 00157500
*                             parameter is invalid.                   * 00157600
*                                                                     * 00157700
*                             Action: Correct the Alet.               * 00157800
*                                                                     * 00157900
*                 xxxx0858    Name: AXRRexxInDsnBadAlet               * 00158000
*                                                                     * 00158100
*                             Meaning: The ALET of the REXXINDSN      * 00158200
*                             parameter is invalid.                   * 00158300
*                                                                     * 00158400
*                             Action: Correct the Alet.               * 00158500
*                                                                     * 00158600
*                 xxxx0859    Name: AXRRexxOutDsnBadAlet              * 00158700
*                                                                     * 00158800
*                             Meaning: The ALET of the REXXOUTDSN     * 00158900
*                             parameter is invalid.                   * 00159000
*                                                                     * 00159100
*                             Action: Correct the Alet.               * 00159200
*                                                                     * 00159300
*                 xxxx085A    Name: AXRRexxDiagBadAlet                * 00159400
*                                                                     * 00159500
*                             Meaning: The ALET of the REXXDIAG       * 00159600
*                             parameter is invalid.                   * 00159700
*                                                                     * 00159800
*                             Action: Correct the Alet.               * 00159900
*                                                                     * 00160000
*                 xxxx085B    Name: AXRArgBadAlet                     * 00160100
*                                                                     * 00160200
*                             Meaning: The ALET of the argument entry * 00160300
*                             is invalid.                             * 00160400
*                                                                     * 00160500
*                             Action: Refer to AxrArgLstEntryInError  * 00160600
*                             in the RexxArgs parameter to determine  * 00160700
*                             the index of the argument entry whose   * 00160800
*                             alet was incorrect.  Correct            * 00160900
*                             AxrArgAlet.                             * 00161000
*                                                                     * 00161100
*                 xxxx085C    Name: AXRArgNameBadAlet                 * 00161200
*                                                                     * 00161300
*                             Meaning: The ALET of the argument entry * 00161400
*                             name is invalid.                        * 00161500
*                                                                     * 00161600
*                             Action: Refer to AxrArgLstEntryInError  * 00161700
*                             in the RexxArgs parameter to determine  * 00161800
*                             the index of the argument entry name    * 00161900
*                             whose alet was incorrect. Correct       * 00162000
*                             AxrArgNameAlet.                         * 00162100
*                                                                     * 00162200
*                 xxxx085D    Name: AXRVarBadAlet                     * 00162300
*                                                                     * 00162400
*                             Meaning: The ALET of the variable entry * 00162500
*                             is invalid.                             * 00162600
*                                                                     * 00162700
*                             Action: Refer to AxrArgLstEntryInError  * 00162800
*                             in the RexxVars parameter to determine  * 00162900
*                             the index of the variable entry whose   * 00163000
*                             alet was incorrect.  Correct            * 00163100
*                             AxrArgAlet.                             * 00163200
*                                                                     * 00163300
*                 xxxx085E    Name: AXRVarNameBadAlet                 * 00163400
*                                                                     * 00163500
*                             Meaning: The ALET of the variable entry * 00163600
*                             name is invalid.                        * 00163700
*                                                                     * 00163800
*                             Action: Refer to AxrArgLstEntryInError  * 00163900
*                             in the RexxVars parameter to determine  * 00164000
*                             the index of the variable entry name    * 00164100
*                             whose alet was incorrect. Correct       * 00164200
*                             AxrArgNameAlet.                         * 00164300
*                                                                     * 00164400
*                 xxxx085F    Name: AXRRexxlibBadAlet                 * 00164500
*                                                                     * 00164600
*                             Meaning: The ALET of the Rexxlib is     * 00164700
*                             invalid.                                * 00164800
*                                                                     * 00164900
*                             Action: Correct the alet.               * 00165000
*                                                                     * 00165100
*                 xxxx0860    Name: AXRBadRexxlibLen                  * 00165200
*                                                                     * 00165300
*                             Meaning: The length specified by        * 00165400
*                             RexxlibLen keyword is invalid.          * 00165500
*                                                                     * 00165600
*                             Action: RexxlibLen must be greater than * 00165700
*                             or equal to 20480.                      * 00165800
*                                                                     * 00165900
*                 xxxx0861    Name: AXRBadRexxlib                     * 00166000
*                                                                     * 00166100
*                             Meaning: A program check occured when   * 00166200
*                             attempting to access the parameter      * 00166300
*                             specified by the REXXLIB keyword.       * 00166400
*                                                                     * 00166500
*                             Action: Correct the Rexxlib keyword.    * 00166600
*                                                                     * 00166700
*                                                                     * 00166800
*                                                                     * 00166900
*                                                                     * 00167000
*       C         Name: AxrRetcodeEnvError                            * 00167100
*                                                                     * 00167200
*                 Meaning: Environmental error                        * 00167300
*                                                                     * 00167400
*                 Action:  Refer to the action provided with the      * 00167500
*                 specific reason code.                               * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*                 HEX REASON  MEANING/ACTION                          * 00167900
*                 CODE                                                * 00168000
*                                                                     * 00168100
*                 xxxx0C01    Name: AxrNotActive                      * 00168200
*                                                                     * 00168300
*                             Meaning: Function is not available.     * 00168400
*                             Either the AXR address space has        * 00168500
*                             terminated or has not initialized.      * 00168600
*                                                                     * 00168700
*                             Action: Avoid requesting this function  * 00168800
*                             until the ENF signal for AXR            * 00168900
*                             initialization is issued or message     * 00169000
*                             AXR0102I is issued.  If the AXR address * 00169100
*                             space has terminated, it needs to be    * 00169200
*                             restarted.                              * 00169300
*                                                                     * 00169400
*                 xxxx0C02    Name: AxrArgNoStorage                   * 00169500
*                                                                     * 00169600
*                             Meaning: No storage is available for a  * 00169700
*                             REXX argument or variable.              * 00169800
*                                                                     * 00169900
*                             Action: Reissue the AXREXX request      * 00170000
*                             after requests that are in progress     * 00170100
*                             complete.                               * 00170200
*                                                                     * 00170300
*                 xxxx0C03    Name: AXRAllReqBlocksInUse              * 00170400
*                                                                     * 00170500
*                             Meaning: All the storage available to   * 00170600
*                             represent REXX requests is in use.      * 00170700
*                                                                     * 00170800
*                             Action: Reissue the AXREXX request      * 00170900
*                             after requests that are in progress     * 00171000
*                             complete.                               * 00171100
*                                                                     * 00171200
*                 xxxx0C04    Name: AXRTooManyRexxReqs                * 00171300
*                                                                     * 00171400
*                             Meaning: The threshold of               * 00171500
*                             active/waiting REXX requests has been   * 00171600
*                             exceeded.                               * 00171700
*                                                                     * 00171800
*                             Action: System REXX will issue ENF      * 00171900
*                             signal (65) with a qualifier of         * 00172000
*                             '10000000'x to indicate that it has     * 00172100
*                             begun accepting new requests.  The      * 00172200
*                             AXREXX invoker can listen for this      * 00172300
*                             signal.                                 * 00172400
*                                                                     * 00172500
*                 xxxx0C05    Name: AXRBadIWMEREG                     * 00172600
*                                                                     * 00172700
*                             Meaning: A bad return code was returned * 00172800
*                             from IWMEREG.  The return code and      * 00172900
*                             reason codes from IWMEREG are placed in * 00173000
*                             AXRDIAG1 and AXRDIAG2 in the RexxDiag   * 00173100
*                             parameter respectively.                 * 00173200
*                                                                     * 00173300
*                             Action: Examine the return and reason   * 00173400
*                             codes from IWMEREG.  If no diagnosis is * 00173500
*                             possible, contact IBM Service.          * 00173600
*                                                                     * 00173700
*                 xxxx0C06    Name: AXRAscreFailed                    * 00173800
*                                                                     * 00173900
*                             Meaning: An attempt to create a server  * 00174000
*                             address space to run the exec failed.   * 00174100
*                                                                     * 00174200
*                             Action: The return and reason codes     * 00174300
*                             from ASCRE are stored AxrDiag1 and      * 00174400
*                             AxrDiag2 in the RexxDiag parameter.     * 00174500
*                                                                     * 00174600
*                 xxxx0C07    Name: AXRReqCancelled                   * 00174700
*                                                                     * 00174800
*                             Meaning: The request was cancelled.     * 00174900
*                                                                     * 00175000
*                             Action: None.                           * 00175100
*                                                                     * 00175200
*                 xxxx0C08    Name: AXRExecRexxEnvError               * 00175300
*                                                                     * 00175400
*                             Meaning: The REXX Interpreter was       * 00175500
*                             unable to run the exec.                 * 00175600
*                                                                     * 00175700
*                             Action: The REXX Interpreter issues one * 00175800
*                             or more messages describing the         * 00175900
*                             problem.  If RexxOutDsn was specified,  * 00176000
*                             look in the dataset for the messages.   * 00176100
*                             If ConsData was specified and           * 00176200
*                             RexxOutDsn was not specified, look at   * 00176300
*                             the console or the system log.  If      * 00176400
*                             RexxDiag was specified, AXRDIAG1,       * 00176500
*                             AXRDIAG2, AXRDIAG3 and AXRDIAG4 contain * 00176600
*                             the message ids of any messages         * 00176700
*                             beginning with IRX (REXX) or IKJ (TSO)  * 00176800
*                             that were issued.  The format of the    * 00176900
*                             message id is packed decimal with the   * 00177000
*                             sign bits shifted out.  A 1 in the high * 00177100
*                             order byte distinguishes an IKJ message * 00177200
*                             from an IRX message.                    * 00177300
*                                                                     * 00177400
*                 xxxx0C09    Name: AXRBadAxruser                     * 00177500
*                                                                     * 00177600
*                             Meaning: AXRUSER was improperly defined * 00177700
*                             in parmlib member AXR00.                * 00177800
*                                                                     * 00177900
*                             Action: Correct AXR00 and restart       * 00178000
*                             System REXX.                            * 00178100
*                                                                     * 00178200
*                 xxxx0C0A    Name: AXRTimeIntExpired                 * 00178300
*                                                                     * 00178400
*                             Meaning: The input time limit expired   * 00178500
*                             before the exec completed.              * 00178600
*                                                                     * 00178700
*                             Action: Increase the time limit or      * 00178800
*                             modify the exec.                        * 00178900
*                                                                     * 00179000
*                 xxxx0C0B    Name: AXRReqNotActive                   * 00179100
*                                                                     * 00179200
*                             Meaning: For a CANCEL request, the      * 00179300
*                             request to be cancelled is no longer    * 00179400
*                             active.                                 * 00179500
*                                                                     * 00179600
*                             Action: None.                           * 00179700
*                                                                     * 00179800
*                 xxxx0C0C    Name: AXRReqAlreadyCancelled            * 00179900
*                                                                     * 00180000
*                             Meaning: For a CANCEL request, the      * 00180100
*                             request to be cancelled is already      * 00180200
*                             cancelled.                              * 00180300
*                                                                     * 00180400
*                             Action: None.                           * 00180500
*                                                                     * 00180600
*                 xxxx0C0D    Name: AXRRexxOutFail                    * 00180700
*                                                                     * 00180800
*                             Meaning: An failure occurred when       * 00180900
*                             attempting to process the dataset       * 00181000
*                             specified by the RexxOutDsn parameter.  * 00181100
*                             If the failure was due to an abend, the * 00181200
*                             abend code is is saved in AXRDIAG1 and  * 00181300
*                             the abend reason code is saved in       * 00181400
*                             AXRDIAG2 in the RexxDiag parameter.  No * 00181500
*                             dump is taken.                          * 00181600
*                                                                     * 00181700
*                             Action:  Look up the abend and reason   * 00181800
*                             code in z/OS MVS System Codes to        * 00181900
*                             determine the proper action.            * 00182000
*                                                                     * 00182100
*                 xxxx0C0E    Name: AXRRexxInFail                     * 00182200
*                                                                     * 00182300
*                             Meaning: A failure occurred when        * 00182400
*                             attempting to process the dataset       * 00182500
*                             specified by the RexxInDsn parameter.   * 00182600
*                             If the failure was due to an abend, the * 00182700
*                             abend code is saved in AXRDIAG1 and the * 00182800
*                             abend reason code is saved in AXRDIAG2  * 00182900
*                             of the RexxDiag parameter.  No dump is  * 00183000
*                             taken.                                  * 00183100
*                                                                     * 00183200
*                             Action: Look up the abend and reason    * 00183300
*                             code in z/OS MVS System Codes to        * 00183400
*                             determine the proper action.            * 00183500
*                                                                     * 00183600
*                 xxxx0C0F    Name: AXRBadIWMECREA                    * 00183700
*                                                                     * 00183800
*                             Meaning: A bad return code was returned * 00183900
*                             from IWMECREA.  The return code and     * 00184000
*                             reason codes from IWMESQRY and the      * 00184100
*                             return and reason codes from IWMECREA   * 00184200
*                             are placed in AXRDIAG1, AXRDIAG2,       * 00184300
*                             AXRDIAG3 and AXRDIAG4 respectively of   * 00184400
*                             the RexxDiag parameter.                 * 00184500
*                                                                     * 00184600
*                             Action: Inspect the return/reason codes * 00184700
*                             from IWMESQRY and IWMECREA and look up  * 00184800
*                             in the z/OS MVS Programming: Workload   * 00184900
*                             Management Services.  If the problem    * 00185000
*                             cannot be resolved, contact IBM         * 00185100
*                             Service.                                * 00185200
*                                                                     * 00185300
*                 xxxx0C10    Name: AXRTooManyExtents                 * 00185400
*                                                                     * 00185500
*                             Meaning: The number of extents for all  * 00185600
*                             data sets in the REXXLIB concatenation  * 00185700
*                             exceeds the system limit.  SYSREXX      * 00185800
*                             cannot process any more execs.          * 00185900
*                                                                     * 00186000
*                             Action: SYSREXX must be stopped.  The   * 00186100
*                             REXXLIB concatenation must then be      * 00186200
*                             modified so that the number of extents  * 00186300
*                             is reduced below the system limit.      * 00186400
*                             SYSREXX may then be restarted.          * 00186500
*                                                                     * 00186600
*                 xxxx0C11    Name: AXRStopTSO                        * 00186700
*                                                                     * 00186800
*                             Meaning: MODIFY AXR,SYSREXX STOPTSO was * 00186900
*                             invoked to disable TSO=YES processing.  * 00187000
*                                                                     * 00187100
*                             Action: The request is rejected.  To    * 00187200
*                             restart TSO=YES processing, the         * 00187300
*                             following operator command must be      * 00187400
*                             issued:  MODIFY AXR,SYSREXX STARTTSO.   * 00187500
*                                                                     * 00187600
*                 xxxx0C12    Name: AXRStopInProgress                 * 00187700
*                                                                     * 00187800
*                             Meaning: The STOP AXR command was       * 00187900
*                             invoked and is being processed.         * 00188000
*                                                                     * 00188100
*                             Action: The request is rejected.        * 00188200
*                             System REXX must be restarted before    * 00188300
*                             AXREXX can be invoked.                  * 00188400
*                                                                     * 00188500
*                                                                     * 00188600
*                                                                     * 00188700
*                                                                     * 00188800
*       10        Name: AxrRetcodeCompError                           * 00188900
*                                                                     * 00189000
*                 Meaning:  Unexpected failure.                       * 00189100
*                                                                     * 00189200
*                 Action:  Refer to the action provided with the      * 00189300
*                 specific reason code.                               * 00189400
*                                                                     * 00189500
*                                                                     * 00189600
*                 HEX REASON  MEANING/ACTION                          * 00189700
*                 CODE                                                * 00189800
*                                                                     * 00189900
*                 xxxx1001    Name: AxrRexxServerAbended              * 00190000
*                                                                     * 00190100
*                             Meaning: An abend occurred after the    * 00190200
*                             REXX server began processing the        * 00190300
*                             request.                                * 00190400
*                                                                     * 00190500
*                             Action: A dump is taken.  Contact IBM   * 00190600
*                             service.                                * 00190700
*                                                                     * 00190800
*                 xxxx1002    Name: AxrBadServerRC                    * 00190900
*                                                                     * 00191000
*                             Meaning: A unexpected return code was   * 00191100
*                             returned from the REXX server.          * 00191200
*                                                                     * 00191300
*                             Action: A dump is taken.  Contact IBM   * 00191400
*                             service.                                * 00191500
*                                                                     * 00191600
*                 xxxx1003    Name: AXRRexxClientAbended              * 00191700
*                                                                     * 00191800
*                             Meaning: An abend occurred before the   * 00191900
*                             request was passed to the REXX Server   * 00192000
*                             or after the request was processed by   * 00192100
*                             the REXX server.                        * 00192200
*                                                                     * 00192300
*                             Action: A dump is taken.  Contact IBM   * 00192400
*                             service.                                * 00192500
*                                                                     * 00192600
*                 xxxx1007    Name: AXRExitAbended                    * 00192700
*                                                                     * 00192800
*                             Meaning: An abend occurred in a System  * 00192900
*                             REXX defined exit which is given        * 00193000
*                             control from the REXX Interpreter.      * 00193100
*                                                                     * 00193200
*                             Action: A dump is taken.  Contact IBM   * 00193300
*                             service.                                * 00193400
*                                                                     * 00193500
*                 xxxx100B    Name: AXRAddrSpaceTerm                  * 00193600
*                                                                     * 00193700
*                             Meaning: The address space created to   * 00193800
*                             run an exec either terminated prior to  * 00193900
*                             running the exec or during the          * 00194000
*                             execution of the exec.                  * 00194100
*                                                                     * 00194200
*                             Action: If the address space was        * 00194300
*                             cancelled then there is no action.  If  * 00194400
*                             the address space was terminated        * 00194500
*                             unexpectedly then contact IBM Service.  * 00194600
*                                                                     * 00194700
*                 xxxx100D    Name: AXRCancelAbended                  * 00194800
*                                                                     * 00194900
*                             Meaning: An attempt to cancel a request * 00195000
*                             resulted in an abend.  A dump is taken. * 00195100
*                                                                     * 00195200
*                             Action: Contact IBM service.            * 00195300
*                                                                     * 00195400
*                 xxxx100F    Name: AXRRexxInterpreterAbend           * 00195500
*                                                                     * 00195600
*                             Meaning: Either the REXX interpreter    * 00195700
*                             abended or was percolated to.           * 00195800
*                                                                     * 00195900
*                             Action: Refer to the RexxDiag           * 00196000
*                             parameter.  AxrDiag1 contains either    * 00196100
*                             100 for a user abend or 104 for a       * 00196200
*                             system abend.  AxrDiag2 contains the    * 00196300
*                             abend code.  A system dump may be       * 00196400
*                             produced.                               * 00196500
*                                                                     * 00196600
*                                                                     * 00196700
*                                                                     * 00196800
*                                                                     * 00196900
*                                                                     * 00197000
*01* REASON CODES:                                                    * 00197100
*                                                                     * 00197200
*       Reason codes, as appropriate, are defined under their         * 00197300
*       corresponding return code.                                    * 00197400
*                                                                     * 00197500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00197600
*                                                                     * 00197700
*02*   PROCESSOR:  ASSEM                                              * 00197800
*                                                                     * 00197900
*01* COMPONENT:  SCAXR                                                * 00198000
*                                                                     * 00198100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00198200
*                                                                     * 00198300
*01* MACRO USAGE NOTES:                                               * 00198400
*                                                                     * 00198500
*                                                                     * 00198600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00198700
*        global macro variable.  Any value other than 'NO' will       * 00198800
*        result in the macro expansion being printed.  The default is * 00198900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00199000
*        variable should be set.                                      * 00199100
*                                                                     * 00199200
*                    GBLC &ZPRINT                                     * 00199300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00199400
*                                                                     * 00199500
*                                                                     * 00199600
*    2.  When using the NOCHECK option in conjunction with the Modify * 00199700
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 00199800
*        Modify   or  Execute  form  invocation  which  specifies  or * 00199900
*        defaults  to  the  COMPLETE  option.   This insures that the * 00200000
*        parameter  list  is  initialized completely.   The parameter * 00200100
*        list  field which identifies the version number of the macro * 00200200
*        is only set when the Standard form or the Complete option of * 00200300
*        the  Execute/Modify  form  is  used,  or  when  PLISTVER  is * 00200400
*        explicitly  specified.  Be sure that the resulting parameter * 00200500
*        list version number covers all the keys that you use.        * 00200600
*                                                                     * 00200700
*                                                                     * 00200800
*    3.  All  keys currently contained in the AXREXX macro correspond * 00200900
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00201000
*        MAX.                                                         * 00201100
*                                                                     * 00201200
*                                                                     * 00201300
*                                                                     * 00201400
*                                                                     * 00201500
*01* CHANGE ACTIVITY:                                                 * 00201600
*                                                                     * 00201700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00201800
*                                                                     * 00201900
*    $L0=AXR      HBB77BR 050101 PD00CS:  AXR                         * 00202000
*    $P1=RXJLES10 HBB77BR 060115 PD00CS:  In the assembler, change LA * 00202100
*                                         to L to correctly obtain    * 00202200
*                                         CVT address                 * 00202300
*    $P2=RXJLES17 HBB77BR 060115 PD00CS:  Corrections for AMODE 64    * 00202400
*                                         invokers                    * 00202500
*    $P3=ME06929  HBB77BR 060620 PD00CS:  Add reason code for bad     * 00202600
*                                         RACROUTE VERIFY             * 00202700
*    $L1=AXR      HBB77BR 060715 PD00CS:  TSO keyword                 * 00202800
*    $P4=ME07350  HBB77BR 060728 PD00CS:  Allow RexxDiag on SYNC=NO   * 00202900
*                                         invocation                  * 00203000
*    $P5=ME07361  HBB77BR 060801 PD00CS:  Change Maximum allowable    * 00203100
*                                         TimeInt                     * 00203200
*    $L2=AXR      HBB77BR 060815 PD00CS:  New reason codes            * 00203300
*    $P6=ME07163  HBB77BR 060915 PD00CS:  Security keyword, new       * 00203400
*                                         reason code.                * 00203500
*    $P7=ME06436  HBB77BR 060930 PD00CS:  Various corrections         * 00203600
*    $P8=ME07871  HBB77BR 060930 PD00CS:  Various corrections         * 00203700
*    $P9=ME09167  HBB77BR 070228 PD00CS:  AxrVarNumericTooSmall and   * 00203800
*                                         AxrArgNumericTooSmall       * 00203900
*    $P9=ME09555  HBB77BR 070310 PD00CS:  AxrArgLstRsvNotZero,        * 00204000
*                                         AxrVarLstRsnvNotZero,       * 00204100
*                                         AxrArgRsvNotZero,           * 00204200
*                                         AxrVarRsnNotZero            * 00204300
*    $PA=ME08862  HBB77BR 070310 PD00CS:  AxrRexxOutAbend,            * 00204400
*                                         AxrRexxInAbend              * 00204500
*    $PB=ME08760  HBB77BR 070320 PD00CS:  Deleted AxrCompErrorUnknown * 00204600
*    $PC=ME09755  HBB77BR 070324 PD00CS:  Documentation corrections   * 00204700
*    $PD=ME09830  HBB77BR 070328 PD00CS:  Documentation corrections   * 00204800
*    $PE=ME09893  HBB77BR 070404 PD00CS:  Added macpdist and macpoco  * 00204900
*                                         tags                        * 00205000
*    $PF=ME09973  HBB77BR 070501 PD00CS:  Documentation updates from  * 00205100
*                                         pubs (OA20905)              * 00205200
*    $PG=ME11571  HBB7750 071212 PD00WT:  New reason codes.           * 00205300
*    $L2=SYSREXX  HBB7760 080415 PD00CS:  GetRexxlib                  * 00205400
*    $PH=ME15068  HBB7760 081130 PD00CS:  Require larger buffer for   * 00205500
*                                         REXXLIB                     * 00205600
*    $PI=ME15232  HBB7760 090115 PD00CS:  New reason code for too     * 00205700
*                                         many extents                * 00205800
*    $L3=ENH7A0   HBB77A0 131207 PD00CS:  New reason code for STOPTSO * 00205900
*    $L4=ENH7A0   HBB77A0 140130 PD00CS:  New reason code for STOP in * 00206000
*                                         progress                    * 00206100
****** END OF SPECIFICATIONS *****************************************/ 00206200
*/********************************************************************* 00206300
         MACRO                                                          00206400
&XLABEL  AXREXX &REQUEST=,&SECURITY=,&UTOKEN=,&TSO=,&REXXINDSN=,       *00206500
               &REXXINMEMNAME=,&CONSDATA=,&CART=,&CONSNAME=,           *00206600
               &TIMELIMIT=,&TIMEINT=,&NAME=,&REXXARGS=,&REXXVARS=,     *00206700
               &REXXOUTDSN=,&REXXOUTMEMNAME=,&REXXDIAG=,&SYNC=,        *00206800
               &OREQTOKEN=,&COMPEXIT=,&LINKEP=,&REQTOKEN=,&REXXLIB=,   *00206900
               &REXXLIBLEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=         00207000
.*                                                                      00207100
*                    MACDATE -01/19/14-<0>                              00207200
.*                                                                      00207300
.*******************************************************************    00207400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00207500
.*******************************************************************    00207600
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00207700
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00207800
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00207900
.*                                                                      00208000
                    GBLC  &ZAXREXX    YES=MACRO USED AT LEAST ONCE      00208100
.*******************************************************************    00208200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00208300
.*******************************************************************    00208400
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00208500
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00208600
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00208700
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00208800
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00208900
                    LCLA  &ZAWRK      USED AS A WORK AREA               00209000
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00209100
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00209200
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00209300
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00209400
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00209500
                    LCLC  &ZMAC_G     "G" or null                       00209600
&ZMAC_G             SETC  ''                                            00209700
                    LCLC  &ZMAC_LR                                      00209800
&ZMAC_LR            SETC  'LR'                                          00209900
                    LCLC  &ZMAC_L                                       00210000
&ZMAC_L             SETC  'L'                                           00210100
                    LCLC  &ZMAC_ST                                      00210200
&ZMAC_ST            SETC  'ST'                                          00210300
                    LCLC  &ZMAC_LLGT                                    00210400
&ZMAC_LLGT          SETC  'L'                                           00210500
                    LCLC  &ZMAC_LGR                                     00210600
&ZMAC_LGR           SETC  'LR'                                          00210700
                    LCLC  &ZMAC_LG                                      00210800
&ZMAC_LG            SETC  'L'                                           00210900
                    LCLC  &ZMAC_STG                                     00211000
&ZMAC_STG           SETC  'ST'                                          00211100
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00211200
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00211300
.*                                                                      00211400
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00211500
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00211600
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00211700
                    LCLC  &ZENDBASEPL           End of base PL          00211800
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00211900
.*******************************************************************    00212000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00212100
.*******************************************************************    00212200
                    LCLA  &ZI         INDEX FOR ARRAY                   00212300
                    LCLA  &ZJ         INDEX FOR PARMS                   00212400
                    LCLA  &ZK         INDEX FOR PARSE                   00212500
                    LCLA  &ZLO        LOW RANGE VALUE                   00212600
                    LCLA  &ZHI        HIGH RANGE VALUE                  00212700
                    LCLC  &ZW         WORK AREA FOR PARM                00212800
.********************************************************************   00212900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00213000
.********************************************************************   00213100
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00213200
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00213300
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00213400
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00213500
.*                                                                      00213600
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00213700
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00213800
                    SPLEVEL  TEST                                       00213900
.ZSYS2              ANOP  ,                                             00214000
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00214100
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00214200
                    SYSSTATE TEST                                       00214300
                    AGO   .ZSYS4                                        00214400
.ZSYS3              ANOP  ,                                             00214500
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00214600
.ZSYS4              ANOP  ,                                             00214700
                    AIF   ('&SYSAM64' NE 'YES').ZSYSN64                 00214800
&ZMAC_LLGT          SETC 'LLGT'                                         00214900
&ZMAC_LGR           SETC 'LGR'                                          00215000
&ZMAC_LG            SETC 'LG'                                           00215100
&ZMAC_STG           SETC 'STG'                                          00215200
.ZSYSN64            ANOP  ,                                             00215300
&ZMAC_G             SETC 'G'                                            00215400
&ZMAC_LR            SETC 'LGR'                                          00215500
&ZMAC_L             SETC 'LG'                                           00215600
&ZMAC_ST            SETC 'STG'                                          00215700
.*******************************************************************    00215800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00215900
.*******************************************************************    00216000
                    LCLC  &XREQUEST   ++ VALUE                          00216100
                    LCLC  &XSECURITY  ++ VALUE                          00216200
                    LCLC  &XUTOKEN    ++ NAME                           00216300
                    LCLC  &XTSO       ++ VALUE                          00216400
                    LCLC  &XREXXINDSN           ++ NAME                 00216500
                    LCLC  &XREXXINMEMNAME       ++ NAME                 00216600
                    LCLC  &XCONSDATA  ++ VALUE                          00216700
                    LCLC  &XCART      ++ NAME                           00216800
                    LCLC  &XCONSNAME  ++ NAME                           00216900
                    LCLC  &XTIMELIMIT           ++ VALUE                00217000
                    LCLC  &XTIMEINT   ++ NAME                           00217100
                    LCLC  &XNAME      ++ NAME                           00217200
                    LCLC  &XREXXARGS  ++ NAME                           00217300
                    LCLC  &XREXXVARS  ++ NAME                           00217400
                    LCLC  &XREXXOUTDSN          ++ NAME                 00217500
                    LCLC  &XREXXOUTMEMNAME      ++ NAME                 00217600
                    LCLC  &XREXXDIAG  ++ NAME                           00217700
                    LCLC  &XSYNC      ++ VALUE                          00217800
                    LCLC  &XOREQTOKEN           ++ NAME                 00217900
                    LCLC  &XCOMPEXIT  ++ VALUE                          00218000
                    LCLC  &XLINKEP    ++ NAME                           00218100
                    LCLC  &XREQTOKEN  ++ NAME                           00218200
                    LCLC  &XREXXLIB   ++ NAME                           00218300
                    LCLC  &XREXXLIBLEN          ++ NAME                 00218400
                    LCLC  &XRETCODE   ++ NAME                           00218500
                    LCLC  &XRSNCODE   ++ NAME                           00218600
                    LCLA  &XPLISTVER  ++ VALUE                          00218700
                    LCLC  &XMF        ++ VALUE                          00218800
                    LCLC  &XMFCTRL    ++ NAME                           00218900
                    LCLC  &XMFATTR    ++ VALUE                          00219000
                    LCLC  &XMFSCK     ++ VALUE                          00219100
.*******************************************************************    00219200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00219300
.*******************************************************************    00219400
                    LCLC  &ZXREQUEST  ++ INPUT VALUE                    00219500
                    LCLC  &ZXSECURITY           ++ INPUT VALUE          00219600
                    LCLC  &ZXUTOKEN   ++ INPUT NAME                     00219700
                    LCLC  &ZXTSO      ++ INPUT VALUE                    00219800
                    LCLC  &ZXREXXINDSN          ++ INPUT NAME           00219900
                    LCLC  &ZXREXXINMEMNAME      ++ INPUT NAME           00220000
                    LCLC  &ZXCONSDATA           ++ INPUT VALUE          00220100
                    LCLC  &ZXCART     ++ INPUT NAME                     00220200
                    LCLC  &ZXCONSNAME           ++ INPUT NAME           00220300
                    LCLC  &ZXTIMELIMIT          ++ INPUT VALUE          00220400
                    LCLC  &ZXTIMEINT  ++ INPUT NAME                     00220500
                    LCLC  &ZXNAME     ++ INPUT NAME                     00220600
                    LCLC  &ZXREXXARGS           ++ INOUT NAME           00220700
                    LCLC  &ZXREXXVARS           ++ INOUT NAME           00220800
                    LCLC  &ZXREXXOUTDSN         ++ INPUT NAME           00220900
                    LCLC  &ZXREXXOUTMEMNAME     ++ INPUT NAME           00221000
                    LCLC  &ZXREXXDIAG           ++ OUTPUT NAME          00221100
                    LCLC  &ZXSYNC     ++ INPUT VALUE                    00221200
                    LCLC  &ZXOREQTOKEN          ++ OUTPUT NAME          00221300
                    LCLC  &ZXCOMPEXIT           ++ INPUT VALUE          00221400
                    LCLC  &ZXLINKEP   ++ INPUT NAME                     00221500
                    LCLC  &ZXREQTOKEN           ++ INPUT NAME           00221600
                    LCLC  &ZXREXXLIB  ++ OUTPUT NAME                    00221700
                    LCLC  &ZXREXXLIBLEN         ++ INPUT NAME           00221800
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00221900
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00222000
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00222100
                    LCLC  &ZXMF       ++ INPUT VALUE                    00222200
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00222300
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00222400
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00222500
.********************************************************************   00222600
.***AC.PLV01  PROCESS PLISTVER                                      *   00222700
.********************************************************************   00222800
&XPLISTVER      SETA  0                                                 00222900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00223000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00223100
&XPLISTVER      SETA  0                                                 00223200
.ZPLV0          ANOP  ,                                                 00223300
.*                                                                      00223400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00223500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00223600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00223700
.*-------------------------------------------------------------------   00223800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00223900
&ZMS            SETC  '"PLISTVER='                                      00224000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00224100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00224200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00224300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00224400
                AGO   .ZPVCK2                                           00224500
.ZPVCK3         ANOP  ,                                                 00224600
.*-------------------------------------------------------------------   00224700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00224800
&ZMS            SETC  '"PLISTVER='                                      00224900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00225000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00225100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00225200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00225300
                AGO   .ZPVCKE                                           00225400
.ZPVCK2         ANOP  ,                                                 00225500
.*-------------------------------------------------------------------   00225600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00225700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00225800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00225900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00226000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00226100
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00226200
.ZPVCK6         ANOP  ,                                                 00226300
&ZMS            SETC  '"PLISTVER='                                      00226400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00226500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00226600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00226700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00226800
&XPLISTVER      SETA  0                                                 00226900
                AGO   .ZPVCKE                                           00227000
.*-------------------------------------------------------------------   00227100
.ZPVCK4A        ANOP  ,                                                 00227200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00227300
&ZMS            SETC  'PLISTVER='                                       00227400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00227500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00227600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00227700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00227800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00227900
                AGO   .ZPVCK5                                           00228000
.ZPVCK4         ANOP  ,                                                 00228100
&XPLISTVER      SETA  &PLISTVER(1)                                      00228200
.ZPVCK5         ANOP  ,                                                 00228300
.ZPVCKE         ANOP  ,                                                 00228400
.********************************************************************   00228500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00228600
.********************************************************************   00228700
                    ACTR  10000                                         00228800
.*------------------------------------------------------------------    00228900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00229000
&XMF                SETC  ''          INITIALIZE XVARIABLE              00229100
.*-------------------------------------------------------------------   00229200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00229300
.ZG99               ANOP  ,                                             00229400
&ZTLC               SETC 'S'                                            00229500
                    AIF   ('&MF(1)' NE '&ZTLC').ZG100                   00229600
&XMF                SETC  'S'         SET KEYWORD                       00229700
&XMFSCK             SETC  'COMPLETE'  SET XMFSCK                        00229800
                    AIF   (N'&MF LE 1).ZG99A    CK NUM                  00229900
&ZMS                SETC  '"MF='                                        00230000
&ZMS                SETC  '&ZMS.&MF"'                                   00230100
&ZMS                SETC  '&ZMS "MF"'                                   00230200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00230300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00230400
.ZG99A              ANOP  ,                                             00230500
.*-------------------------------------------------------------------   00230600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00230700
.ZG100              ANOP  ,                                             00230800
&ZTLC               SETC 'L'                                            00230900
                    AIF   ('&MF(1)' NE '&ZTLC').ZG107                   00231000
&XMF                SETC  'L'         SET KEYWORD                       00231100
                    AIF   (N'&MF LE 3).ZG100A   CK NUM                  00231200
&ZMS                SETC  '"MF='                                        00231300
&ZMS                SETC  '&ZMS.&MF"'                                   00231400
&ZMS                SETC  '&ZMS "MF"'                                   00231500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00231600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00231700
.ZG100A             ANOP  ,                                             00231800
.*-------------------------------------------------------------------   00231900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00232000
                    AIF   (N'&SYSLIST NE 0).ZG100B  POSITIONALS?        00232100
                    AIF   ('&REQUEST' NE '').ZG100B  KEYS?              00232200
                    AIF   ('&SECURITY' NE '').ZG100B  KEYS?             00232300
                    AIF   ('&UTOKEN' NE '').ZG100B  KEYS?               00232400
                    AIF   ('&TSO' NE '').ZG100B  KEYS?                  00232500
                    AIF   ('&REXXINDSN' NE '').ZG100B  KEYS?            00232600
                    AIF   ('&REXXINMEMNAME' NE '').ZG100B  KEYS?        00232700
                    AIF   ('&CONSDATA' NE '').ZG100B  KEYS?             00232800
                    AIF   ('&CART' NE '').ZG100B  KEYS?                 00232900
                    AIF   ('&CONSNAME' NE '').ZG100B  KEYS?             00233000
                    AIF   ('&TIMELIMIT' NE '').ZG100B  KEYS?            00233100
                    AIF   ('&TIMEINT' NE '').ZG100B  KEYS?              00233200
                    AIF   ('&NAME' NE '').ZG100B  KEYS?                 00233300
                    AIF   ('&REXXARGS' NE '').ZG100B  KEYS?             00233400
                    AIF   ('&REXXVARS' NE '').ZG100B  KEYS?             00233500
                    AIF   ('&REXXOUTDSN' NE '').ZG100B  KEYS?           00233600
                    AIF   ('&REXXOUTMEMNAME' NE '').ZG100B  KEYS?       00233700
                    AIF   ('&REXXDIAG' NE '').ZG100B  KEYS?             00233800
                    AIF   ('&SYNC' NE '').ZG100B  KEYS?                 00233900
                    AIF   ('&OREQTOKEN' NE '').ZG100B  KEYS?            00234000
                    AIF   ('&COMPEXIT' NE '').ZG100B  KEYS?             00234100
                    AIF   ('&LINKEP' NE '').ZG100B  KEYS?               00234200
                    AIF   ('&REQTOKEN' NE '').ZG100B  KEYS?             00234300
                    AIF   ('&REXXLIB' NE '').ZG100B  KEYS?              00234400
                    AIF   ('&REXXLIBLEN' NE '').ZG100B  KEYS?           00234500
                    AIF   ('&RETCODE' NE '').ZG100B  KEYS?              00234600
                    AIF   ('&RSNCODE' NE '').ZG100B  KEYS?              00234700
                    AGO    .ZG100C    INVOCATION OKAY                   00234800
.ZG100B             ANOP  ,                                             00234900
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00235000
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00235100
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00235200
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00235300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00235400
.ZG100C             ANOP  ,                                             00235500
.*-------------------------------------------------------------------   00235600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00235700
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00235800
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00235900
                    AIF   (N'&MF(2) GT 1).ZG102B  MULTI                 00236000
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00236100
.ZG102B             AIF   (K'&MF(2) GT 0).ZG102C                        00236200
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00236300
&ZMS                SETC  'WHEN "L" IS SPECIFIED'                       00236400
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00236500
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00236600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00236700
.ZG102C             ANOP  ,                                             00236800
.*-------------------------------------------------------------------   00236900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00237000
                    AIF   (K'&ZXMFCTRL LE 0).ZG102P  NOT I/O            00237100
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG102P               00237200
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00237300
&ZMS                SETC  '"MF='                                        00237400
&ZMS                SETC  '&ZMS.&MF"'                                   00237500
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00237600
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00237700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00237800
.ZG102P             ANOP  ,                                             00237900
.*-------------------------------------------------------------------   00238000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00238100
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00238200
&XMFATTR            SETC  '0D'                                          00238300
                    AIF   (K'&MF(3) LE 0).ZG105B  PARM                  00238400
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00238500
                    AIF   (N'&MF(3) GT 1).ZG105B  MULTI                 00238600
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00238700
.ZG105B             ANOP  ,                                             00238800
.*-------------------------------------------------------------------   00238900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00239000
                    AIF   (K'&ZXMFATTR LE 0).ZG105P  NOT I/O            00239100
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG105P               00239200
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00239300
&ZMS                SETC  '"MF='                                        00239400
&ZMS                SETC  '&ZMS.&MF"'                                   00239500
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00239600
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00239700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00239800
.ZG105P             ANOP  ,                                             00239900
.*-------------------------------------------------------------------   00240000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00240100
                    AIF   (K'&ZXMFATTR LE 0).ZG105S  NOT I/O            00240200
                    AIF   (K'&XMFATTR LE 60).ZG105S  LNG OK             00240300
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00240400
&ZMS                SETC  '"MF='                                        00240500
&ZMS                SETC  '&ZMS.&MF"'                                   00240600
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00240700
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00240800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00240900
.ZG105S             ANOP  ,                                             00241000
.*-------------------------------------------------------------------   00241100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241200
.ZG107              ANOP  ,                                             00241300
&ZTLC               SETC 'M'                                            00241400
                    AIF   ('&MF(1)' NE '&ZTLC').ZG116                   00241500
&XMF                SETC  'M'         SET KEYWORD                       00241600
                    AIF   (N'&MF LE 3).ZG107A   CK NUM                  00241700
&ZMS                SETC  '"MF='                                        00241800
&ZMS                SETC  '&ZMS.&MF"'                                   00241900
&ZMS                SETC  '&ZMS "MF"'                                   00242000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00242100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00242200
.ZG107A             ANOP  ,                                             00242300
.*-------------------------------------------------------------------   00242400
.***AG.KKCTL09 -MF(M) OUTPUT KEYS SPECIFIED?                            00242500
                    AIF   ('&OREQTOKEN' NE '').ZG107B  OUTPUT?          00242600
                    AGO    .ZG107C    INVOCATION OKAY                   00242700
.ZG107B             ANOP  ,                                             00242800
&ZMS                SETC  'THE "M" FORM OF "MF" CANNOT'                 00242900
&ZMS                SETC  '&ZMS HAVE THE FOLLOWING OUTPUT KEY(S)'       00243000
&ZMS                SETC  '&ZMS SPECIFIED ON THE INVOCATION:'           00243100
&ZMS                SETC  '&ZMS "OREQTOKEN"'                            00243200
                    MNOTE 8,' &ZMS '                                    00243300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00243400
.ZG107C             ANOP  ,                                             00243500
.*-------------------------------------------------------------------   00243600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00243700
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00243800
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00243900
                    AIF   (N'&MF(2) GT 1).ZG109B  MULTI                 00244000
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00244100
.ZG109B             AIF   (K'&MF(2) GT 0).ZG109C                        00244200
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00244300
&ZMS                SETC  'WHEN "M" IS SPECIFIED'                       00244400
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00244500
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00244600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00244700
.ZG109C             ANOP  ,                                             00244800
.*-------------------------------------------------------------------   00244900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00245000
                    AIF   (K'&ZXMFCTRL LE 0).ZG109R  NOT I/O            00245100
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG109R               00245200
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00245300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG109P                 00245400
                    AIF   (K'&ZCGPR GT 2).ZG109Q                        00245500
                    AIF   ('&ZCGPR' EQ '0').ZG109Q                      00245600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00245700
                    AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME    00245800
.ZG109P             ANOP  ,                                             00245900
                    AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC         00246000
                    AIF   ('&ZCGPR' LT '1').ZG109Q                      00246100
                    AIF   ('&ZCGPR' LE '12').ZG109R                     00246200
.ZG109Q             ANOP  ,                                             00246300
&ZMS                SETC  '"MF='                                        00246400
&ZMS                SETC  '&ZMS.&MF"'                                   00246500
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00246600
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00246700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00246800
.ZG109R             ANOP  ,                                             00246900
.*-------------------------------------------------------------------   00247000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00247100
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00247200
.ZG113A   AIF   ('&MF(3)' NE 'COMPLETE').ZG114A                         00247300
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00247400
.*-------------------------------------------------------------------   00247500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00247600
.ZG114A   AIF   ('&MF(3)' NE 'NOCHECK').ZG115A                          00247700
&XMFSCK             SETC  'NOCHECK'   SET KEYWORD                       00247800
.*-------------------------------------------------------------------   00247900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00248000
.ZG115A             AIF   (K'&XMFSCK GT 0).ZG115C  KEYWORD              00248100
                    AIF   (K'&MF(3) LE 0).ZG115B                        00248200
&ZMS                SETC  '"MF='                                        00248300
&ZMS                SETC  '&ZMS.&MF"'                                   00248400
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00248500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00248600
&ZMS                SETC  '&ZMS "COMPLETE"'                             00248700
&ZMS                SETC  '&ZMS OR "NOCHECK".'                          00248800
                    MNOTE 8,' &ZMS '                                    00248900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00249000
.ZG115B             ANOP  ,                                             00249100
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00249200
.ZG115C             ANOP  ,                                             00249300
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00249400
.*-------------------------------------------------------------------   00249500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249600
.ZG116              ANOP  ,                                             00249700
&ZTLC               SETC 'E'                                            00249800
                    AIF   ('&MF(1)' NE '&ZTLC').ZG125                   00249900
&XMF                SETC  'E'         SET KEYWORD                       00250000
                    AIF   (N'&MF LE 3).ZG116A   CK NUM                  00250100
&ZMS                SETC  '"MF='                                        00250200
&ZMS                SETC  '&ZMS.&MF"'                                   00250300
&ZMS                SETC  '&ZMS "MF"'                                   00250400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00250500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00250600
.ZG116A             ANOP  ,                                             00250700
.*-------------------------------------------------------------------   00250800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00250900
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00251000
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00251100
                    AIF   (N'&MF(2) GT 1).ZG118B  MULTI                 00251200
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00251300
.ZG118B             AIF   (K'&MF(2) GT 0).ZG118C                        00251400
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00251500
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00251600
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00251700
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00251800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00251900
.ZG118C             ANOP  ,                                             00252000
.*-------------------------------------------------------------------   00252100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00252200
                    AIF   (K'&ZXMFCTRL LE 0).ZG118R  NOT I/O            00252300
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG118R               00252400
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00252500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG118P                 00252600
                    AIF   (K'&ZCGPR GT 2).ZG118Q                        00252700
                    AIF   ('&ZCGPR' EQ '0').ZG118Q                      00252800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00252900
                    AIF   (T'&ZCGPR NE 'N').ZG118Q  INVALID REG NAME    00253000
.ZG118P             ANOP  ,                                             00253100
                    AIF   (T'&ZCGPR NE 'N').ZG118R  NON NUMERIC         00253200
                    AIF   ('&ZCGPR' LT '1').ZG118Q                      00253300
                    AIF   ('&ZCGPR' LE '12').ZG118R                     00253400
.ZG118Q             ANOP  ,                                             00253500
&ZMS                SETC  '"MF='                                        00253600
&ZMS                SETC  '&ZMS.&MF"'                                   00253700
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00253800
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00253900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00254000
.ZG118R             ANOP  ,                                             00254100
.*-------------------------------------------------------------------   00254200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00254300
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00254400
.ZG122A   AIF   ('&MF(3)' NE 'COMPLETE').ZG123A                         00254500
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00254600
.*-------------------------------------------------------------------   00254700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00254800
.ZG123A   AIF   ('&MF(3)' NE 'NOCHECK').ZG124A                          00254900
&XMFSCK             SETC  'NOCHECK'   SET KEYWORD                       00255000
.*-------------------------------------------------------------------   00255100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00255200
.ZG124A             AIF   (K'&XMFSCK GT 0).ZG124C  KEYWORD              00255300
                    AIF   (K'&MF(3) LE 0).ZG124B                        00255400
&ZMS                SETC  '"MF='                                        00255500
&ZMS                SETC  '&ZMS.&MF"'                                   00255600
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00255700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00255800
&ZMS                SETC  '&ZMS "COMPLETE"'                             00255900
&ZMS                SETC  '&ZMS OR "NOCHECK".'                          00256000
                    MNOTE 8,' &ZMS '                                    00256100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00256200
.ZG124B             ANOP  ,                                             00256300
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00256400
.ZG124C             ANOP  ,                                             00256500
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00256600
.*------------------------------------------------------------------    00256700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00256800
.ZG125              ANOP  ,                                             00256900
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00257000
                    AIF   (K'&XMF GT 0).ZG125E  VALID ARG               00257100
                    AIF   (T'&MF EQ 'O').ZG125D  OMITTED                00257200
&ZASYSLNDX          SETA  0                                             00257300
.ZG125A             ANOP  ,           POSITIONAL MACRO KEY              00257400
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00257500
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG125C             00257600
&ZTLC               SETC 'MF'                                           00257700
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG125A    00257800
.ZG125B             ANOP  ,                                             00257900
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00258000
&ZMS                SETC  'THE "MF" KEY'                                00258100
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00258200
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00258300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00258400
                    AGO   .ZG125E                                       00258500
.ZG125C             ANOP  ,                                             00258600
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00258700
&ZMS                SETC  '"MF='                                        00258800
&ZMS                SETC  '&ZMS.&MF"'                                   00258900
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00259000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00259100
&ZMS                SETC  '&ZMS "S",'                                   00259200
&ZMS                SETC  '&ZMS "L",'                                   00259300
&ZMS                SETC  '&ZMS "M",'                                   00259400
&ZMS                SETC  '&ZMS OR "E".'                                00259500
                    MNOTE 8,' &ZMS '                                    00259600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00259700
                    AGO   .ZG125E                                       00259800
.ZG125D             ANOP  ,                                             00259900
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00260000
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00260100
.ZG125E             ANOP  ,                                             00260200
.********************************************************************   00260300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00260400
.********************************************************************   00260500
                    ACTR  10000                                         00260600
.*-------------------------------------------------------------------   00260700
.***AG.MF03 MF=(SLME)                                                   00260800
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00260900
                    AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX               00261000
.*------------------------------------------------------------------    00261100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00261200
&XREQUEST           SETC  ''          INITIALIZE XVARIABLE              00261300
.*-------------------------------------------------------------------   00261400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00261500
.ZG3                ANOP  ,                                             00261600
                    AIF   (K'&REQUEST(1) LE 0).ZG3A                     00261700
&ZTLC               SETC 'EXECUTE'                                      00261800
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG76               00261900
&XREQUEST           SETC  'EXECUTE'   SET KEYWORD                       00262000
                    AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                00262100
&ZMS                SETC  '"REQUEST='                                   00262200
&ZMS                SETC  '&ZMS.&REQUEST"'                              00262300
&ZMS                SETC  '&ZMS "REQUEST"'                              00262400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00262500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00262600
.ZG3A               ANOP  ,                                             00262700
.*------------------------------------------------------------------    00262800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00262900
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00263000
.ZG3A0              AIF   (K'&REQTOKEN LE 0).ZG3A1  OK                  00263100
&ZCVAL              SETC '&ZCVAL REQTOKEN'      INCORRECT KEY USED      00263200
.ZG3A1              AIF   (K'&REXXLIB LE 0).ZG3A2  OK                   00263300
&ZCVAL              SETC '&ZCVAL REXXLIB'       INCORRECT KEY USED      00263400
.ZG3A2              AIF   (K'&REXXLIBLEN LE 0).ZG3A3  OK                00263500
&ZCVAL              SETC '&ZCVAL REXXLIBLEN'    INCORRECT KEY USED      00263600
.ZG3A3              AIF   (K'&ZCVAL LE 0).ZG3A4  OK                     00263700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00263800
&ZMS                SETC  '"REQUEST'                                    00263900
&ZMS                SETC  '&ZMS.=&REQUEST"'                             00264000
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00264100
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00264200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00264300
.ZG3A4              ANOP  ,                                             00264400
.*------------------------------------------------------------------    00264500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00264600
&XSECURITY          SETC  ''          INITIALIZE XVARIABLE              00264700
.*-------------------------------------------------------------------   00264800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00264900
.ZG6                ANOP  ,                                             00265000
                    AIF   (K'&SECURITY(1) LE 0).ZG6A                    00265100
&ZTLC               SETC 'BYUTOKEN'                                     00265200
                    AIF   ('&SECURITY(1)' NE '&ZTLC').ZG10              00265300
&XSECURITY          SETC  'BYUTOKEN'  SET KEYWORD                       00265400
                    AIF   (N'&SECURITY LE 1).ZG6A  CK NUM               00265500
&ZMS                SETC  '"SECURITY='                                  00265600
&ZMS                SETC  '&ZMS.&SECURITY"'                             00265700
&ZMS                SETC  '&ZMS "SECURITY"'                             00265800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00265900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00266000
.ZG6A               ANOP  ,                                             00266100
.*----------------------------------------------------------------***   00266200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00266300
                    AIF   (N'&UTOKEN LE 1).ZG8A  CK NUM                 00266400
&ZMS                SETC  '"UTOKEN='                                    00266500
&ZMS                SETC  '&ZMS.&UTOKEN"'                               00266600
&ZMS                SETC  '&ZMS "UTOKEN"'                               00266700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00266800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00266900
.ZG8A               ANOP  ,                                             00267000
.*-------------------------------------------------------------------   00267100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00267200
&ZXUTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00267300
&XUTOKEN            SETC  'TASK'                                        00267400
                    AIF   (K'&UTOKEN(1) LE 0).ZG8B  PARM                00267500
&XUTOKEN            SETC  '&UTOKEN(1)'          SET XVARIABLE           00267600
                    AIF   (N'&UTOKEN GT 1).ZG8B  MULTI                  00267700
&XUTOKEN            SETC  '&UTOKEN'   SET XVARIABLE                     00267800
.ZG8B               ANOP  ,                                             00267900
.*-------------------------------------------------------------------   00268000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00268100
                    AIF   (K'&ZXUTOKEN LE 0).ZG8R  NOT I/O              00268200
         AIF   ('&XUTOKEN' EQ 'TASK').ZG8R                              00268300
                    AIF   ('&XUTOKEN'(1,1) NE '(').ZG8R                 00268400
&ZCGPR              SETC  '&XUTOKEN'(2,K'&XUTOKEN-2)                    00268500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                   00268600
                    AIF   (K'&ZCGPR GT 2).ZG8Q                          00268700
                    AIF   ('&ZCGPR' EQ '0').ZG8Q                        00268800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00268900
                    AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME      00269000
.ZG8P               ANOP  ,                                             00269100
                    AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC           00269200
                    AIF   ('&ZCGPR' LT '2').ZG8Q                        00269300
                    AIF   ('&ZCGPR' LE '12').ZG8R                       00269400
.ZG8Q               ANOP  ,                                             00269500
&ZMS                SETC  '"UTOKEN='                                    00269600
&ZMS                SETC  '&ZMS.&UTOKEN"'                               00269700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00269800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00269900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00270000
.ZG8R               ANOP  ,                                             00270100
.*-------------------------------------------------------------------   00270200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00270300
.ZG10               ANOP  ,                                             00270400
&ZTLC               SETC 'BYAXRUSER'                                    00270500
                    AIF   ('&SECURITY(1)' NE '&ZTLC').ZG11              00270600
&XSECURITY          SETC  'BYAXRUSER'           SET KEYWORD             00270700
                    AIF   (N'&SECURITY LE 1).ZG10A  CK NUM              00270800
&ZMS                SETC  '"SECURITY='                                  00270900
&ZMS                SETC  '&ZMS.&SECURITY"'                             00271000
&ZMS                SETC  '&ZMS "SECURITY"'                             00271100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00271200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00271300
.ZG10A              ANOP  ,                                             00271400
.*------------------------------------------------------------------    00271500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00271600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00271700
.ZG10A0             AIF   (K'&UTOKEN LE 0).ZG10A1  OK                   00271800
&ZCVAL              SETC '&ZCVAL UTOKEN'        INCORRECT KEY USED      00271900
.ZG10A1             AIF   (K'&ZCVAL LE 0).ZG10A2  OK                    00272000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00272100
&ZMS                SETC  '"SECURITY'                                   00272200
&ZMS                SETC  '&ZMS.=&SECURITY"'                            00272300
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00272400
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00272500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00272600
.ZG10A2             ANOP  ,                                             00272700
.*------------------------------------------------------------------    00272800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00272900
.ZG11               ANOP  ,                                             00273000
&ZXSECURITY         SETC  'INPUT'     SET IN/OUTPUT                     00273100
                    AIF   (K'&XSECURITY GT 0).ZG11E  VALID ARG          00273200
                    AIF   (T'&SECURITY EQ 'O').ZG11D  OMITTED           00273300
&ZASYSLNDX          SETA  0                                             00273400
.ZG11A              ANOP  ,           POSITIONAL MACRO KEY              00273500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00273600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG11C              00273700
&ZTLC               SETC 'SECURITY'                                     00273800
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG11A     00273900
.ZG11B              ANOP  ,                                             00274000
&ZXSECURITY         SETC  ''          RESET IN/OUTPUT                   00274100
&ZMS                SETC  'THE "SECURITY" KEY'                          00274200
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00274300
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00274400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00274500
                    AGO   .ZG11E                                        00274600
.ZG11C              ANOP  ,                                             00274700
&ZXSECURITY         SETC  ''          RESET IN/OUTPUT                   00274800
&ZMS                SETC  '"SECURITY='                                  00274900
&ZMS                SETC  '&ZMS.&SECURITY"'                             00275000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00275100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00275200
&ZMS                SETC  '&ZMS "BYUTOKEN"'                             00275300
&ZMS                SETC  '&ZMS OR "BYAXRUSER".'                        00275400
                    MNOTE 8,' &ZMS '                                    00275500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00275600
                    AGO   .ZG11E                                        00275700
.ZG11D              ANOP  ,                                             00275800
&XSECURITY          SETC  'BYUTOKEN'  SET DEFAULT KEYWORD               00275900
.ZG11E              ANOP  ,                                             00276000
.*------------------------------------------------------------------    00276100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00276200
&XTSO               SETC  ''          INITIALIZE XVARIABLE              00276300
.*-------------------------------------------------------------------   00276400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00276500
.ZG14               ANOP  ,                                             00276600
                    AIF   (K'&TSO(1) LE 0).ZG14A                        00276700
&ZTLC               SETC 'NO'                                           00276800
                    AIF   ('&TSO(1)' NE '&ZTLC').ZG21                   00276900
&XTSO               SETC  'NO'        SET KEYWORD                       00277000
                    AIF   (N'&TSO LE 1).ZG14A   CK NUM                  00277100
&ZMS                SETC  '"TSO='                                       00277200
&ZMS                SETC  '&ZMS.&TSO"'                                  00277300
&ZMS                SETC  '&ZMS "TSO"'                                  00277400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00277500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00277600
.ZG14A              ANOP  ,                                             00277700
.*----------------------------------------------------------------***   00277800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00277900
                    AIF   (N'&REXXINDSN LE 1).ZG16A  CK NUM             00278000
&ZMS                SETC  '"REXXINDSN='                                 00278100
&ZMS                SETC  '&ZMS.&REXXINDSN"'                            00278200
&ZMS                SETC  '&ZMS "REXXINDSN"'                            00278300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00278400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00278500
.ZG16A              ANOP  ,                                             00278600
.*-------------------------------------------------------------------   00278700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00278800
&ZXREXXINDSN        SETC  'INPUT'     SET IN/OUTPUT                     00278900
&XREXXINDSN         SETC  'NO_REXXINDSN'                                00279000
                    AIF   (K'&REXXINDSN(1) LE 0).ZG16B  PARM            00279100
&XREXXINDSN         SETC  '&REXXINDSN(1)'       SET XVARIABLE           00279200
                    AIF   (N'&REXXINDSN GT 1).ZG16B  MULTI              00279300
&XREXXINDSN         SETC  '&REXXINDSN'          SET XVARIABLE           00279400
.ZG16B              ANOP  ,                                             00279500
.*-------------------------------------------------------------------   00279600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00279700
                    AIF   (K'&ZXREXXINDSN LE 0).ZG16R  NOT I/O          00279800
         AIF   ('&XREXXINDSN' EQ 'NO_REXXINDSN').ZG16R                  00279900
                    AIF   ('&XREXXINDSN'(1,1) NE '(').ZG16R             00280000
&ZCGPR              SETC  '&XREXXINDSN'(2,K'&XREXXINDSN-2)              00280100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                  00280200
                    AIF   (K'&ZCGPR GT 2).ZG16Q                         00280300
                    AIF   ('&ZCGPR' EQ '0').ZG16Q                       00280400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00280500
                    AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME     00280600
.ZG16P              ANOP  ,                                             00280700
                    AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC          00280800
                    AIF   ('&ZCGPR' LT '2').ZG16Q                       00280900
                    AIF   ('&ZCGPR' LE '12').ZG16R                      00281000
.ZG16Q              ANOP  ,                                             00281100
&ZMS                SETC  '"REXXINDSN='                                 00281200
&ZMS                SETC  '&ZMS.&REXXINDSN"'                            00281300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00281400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00281500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00281600
.ZG16R              ANOP  ,                                             00281700
.*----------------------------------------------------------------***   00281800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00281900
                    AIF   (N'&REXXINMEMNAME LE 1).ZG18A  CK NUM         00282000
&ZMS                SETC  '"REXXINMEMNAME='                             00282100
&ZMS                SETC  '&ZMS.&REXXINMEMNAME"'                        00282200
&ZMS                SETC  '&ZMS "REXXINMEMNAME"'                        00282300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00282400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00282500
.ZG18A              ANOP  ,                                             00282600
.*-------------------------------------------------------------------   00282700
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00282800
&XREXXINMEMNAME     SETC  'NO_REXXINMEMNAME'    SET DEFAULT             00282900
                    AIF   (K'&REXXINMEMNAME(1) LE 0).ZG18C  PARM        00283000
&XREXXINMEMNAME     SETC  '&REXXINMEMNAME(1)'   SET XVARIABLE           00283100
                    AIF   (N'&REXXINMEMNAME GT 1).ZG18B  MULTI          00283200
&XREXXINMEMNAME     SETC  '&REXXINMEMNAME'      SET XVARIABLE           00283300
.ZG18B              AIF   (K'&REXXINDSN(1) GT 0).ZG18C  KEY             00283400
&ZMS                SETC  '"REXXINMEMNAME'                              00283500
&ZMS                SETC  '&ZMS.=&REXXINMEMNAME"'                       00283600
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00283700
&ZMS                SETC  '&ZMS '                                       00283800
&ZMS                SETC  '&ZMS "REXXINDSN"'                            00283900
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00284000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00284100
.ZG18C              ANOP  ,                                             00284200
&ZXREXXINMEMNAME    SETC  'INPUT'     SET IN/OUTPUT                     00284300
.*-------------------------------------------------------------------   00284400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00284500
                    AIF   (K'&ZXREXXINMEMNAME LE 0).ZG18R  NOT I/O      00284600
         AIF   ('&XREXXINMEMNAME' EQ 'NO_REXXINMEMNAME').ZG18R          00284700
                    AIF   ('&XREXXINMEMNAME'(1,1) NE '(').ZG18R         00284800
&ZCGPR              SETC  '&XREXXINMEMNAME'(2,K'&XREXXINMEMNAME-2)      00284900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                  00285000
                    AIF   (K'&ZCGPR GT 2).ZG18Q                         00285100
                    AIF   ('&ZCGPR' EQ '0').ZG18Q                       00285200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00285300
                    AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME     00285400
.ZG18P              ANOP  ,                                             00285500
                    AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC          00285600
                    AIF   ('&ZCGPR' LT '2').ZG18Q                       00285700
                    AIF   ('&ZCGPR' LE '12').ZG18R                      00285800
.ZG18Q              ANOP  ,                                             00285900
&ZMS                SETC  '"REXXINMEMNAME='                             00286000
&ZMS                SETC  '&ZMS.&REXXINMEMNAME"'                        00286100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00286200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00286300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00286400
.ZG18R              ANOP  ,                                             00286500
.*-------------------------------------------------------------------   00286600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00286700
.ZG21               ANOP  ,                                             00286800
&ZTLC               SETC 'YES'                                          00286900
                    AIF   ('&TSO(1)' NE '&ZTLC').ZG22                   00287000
&XTSO               SETC  'YES'       SET KEYWORD                       00287100
                    AIF   (N'&TSO LE 1).ZG21A   CK NUM                  00287200
&ZMS                SETC  '"TSO='                                       00287300
&ZMS                SETC  '&ZMS.&TSO"'                                  00287400
&ZMS                SETC  '&ZMS "TSO"'                                  00287500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00287600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00287700
.ZG21A              ANOP  ,                                             00287800
.*------------------------------------------------------------------    00287900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288000
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00288100
.ZG21A0             AIF   (K'&REXXINDSN LE 0).ZG21A1  OK                00288200
&ZCVAL              SETC '&ZCVAL REXXINDSN'     INCORRECT KEY USED      00288300
.ZG21A1             AIF   (K'&REXXINMEMNAME LE 0).ZG21A2  OK            00288400
&ZCVAL              SETC '&ZCVAL REXXINMEMNAME'  INCORRECT KEY USED     00288500
.ZG21A2             AIF   (K'&ZCVAL LE 0).ZG21A3  OK                    00288600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00288700
&ZMS                SETC  '"TSO'                                        00288800
&ZMS                SETC  '&ZMS.=&TSO"'                                 00288900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00289000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00289100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00289200
.ZG21A3             ANOP  ,                                             00289300
.*------------------------------------------------------------------    00289400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00289500
.ZG22               ANOP  ,                                             00289600
&ZXTSO              SETC  'INPUT'     SET IN/OUTPUT                     00289700
                    AIF   (K'&XTSO GT 0).ZG22E  VALID ARG               00289800
                    AIF   (T'&TSO EQ 'O').ZG22D  OMITTED                00289900
&ZASYSLNDX          SETA  0                                             00290000
.ZG22A              ANOP  ,           POSITIONAL MACRO KEY              00290100
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00290200
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C              00290300
&ZTLC               SETC 'TSO'                                          00290400
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A     00290500
.ZG22B              ANOP  ,                                             00290600
&ZXTSO              SETC  ''          RESET IN/OUTPUT                   00290700
&ZMS                SETC  'THE "TSO" KEY'                               00290800
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00290900
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00291000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00291100
                    AGO   .ZG22E                                        00291200
.ZG22C              ANOP  ,                                             00291300
&ZXTSO              SETC  ''          RESET IN/OUTPUT                   00291400
&ZMS                SETC  '"TSO='                                       00291500
&ZMS                SETC  '&ZMS.&TSO"'                                  00291600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00291700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00291800
&ZMS                SETC  '&ZMS "NO"'                                   00291900
&ZMS                SETC  '&ZMS OR "YES".'                              00292000
                    MNOTE 8,' &ZMS '                                    00292100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00292200
                    AGO   .ZG22E                                        00292300
.ZG22D              ANOP  ,                                             00292400
&XTSO               SETC  'NO'        SET DEFAULT KEYWORD               00292500
.ZG22E              ANOP  ,                                             00292600
.*------------------------------------------------------------------    00292700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00292800
&XCONSDATA          SETC  ''          INITIALIZE XVARIABLE              00292900
.*-------------------------------------------------------------------   00293000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00293100
.ZG25               ANOP  ,                                             00293200
                    AIF   (K'&CONSDATA(1) LE 0).ZG25A                   00293300
&ZTLC               SETC 'NO'                                           00293400
                    AIF   ('&CONSDATA(1)' NE '&ZTLC').ZG26              00293500
&XCONSDATA          SETC  'NO'        SET KEYWORD                       00293600
                    AIF   (N'&CONSDATA LE 1).ZG25A  CK NUM              00293700
&ZMS                SETC  '"CONSDATA='                                  00293800
&ZMS                SETC  '&ZMS.&CONSDATA"'                             00293900
&ZMS                SETC  '&ZMS "CONSDATA"'                             00294000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00294100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00294200
.ZG25A              ANOP  ,                                             00294300
.*------------------------------------------------------------------    00294400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00294500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00294600
.ZG25A0             AIF   (K'&CART LE 0).ZG25A1  OK                     00294700
&ZCVAL              SETC '&ZCVAL CART'          INCORRECT KEY USED      00294800
.ZG25A1             AIF   (K'&CONSNAME LE 0).ZG25A2  OK                 00294900
&ZCVAL              SETC '&ZCVAL CONSNAME'      INCORRECT KEY USED      00295000
.ZG25A2             AIF   (K'&ZCVAL LE 0).ZG25A3  OK                    00295100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00295200
&ZMS                SETC  '"CONSDATA'                                   00295300
&ZMS                SETC  '&ZMS.=&CONSDATA"'                            00295400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00295500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00295600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00295700
.ZG25A3             ANOP  ,                                             00295800
.*-------------------------------------------------------------------   00295900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00296000
.ZG26               ANOP  ,                                             00296100
&ZTLC               SETC 'YES'                                          00296200
                    AIF   ('&CONSDATA(1)' NE '&ZTLC').ZG33              00296300
&XCONSDATA          SETC  'YES'       SET KEYWORD                       00296400
                    AIF   (N'&CONSDATA LE 1).ZG26A  CK NUM              00296500
&ZMS                SETC  '"CONSDATA='                                  00296600
&ZMS                SETC  '&ZMS.&CONSDATA"'                             00296700
&ZMS                SETC  '&ZMS "CONSDATA"'                             00296800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00296900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00297000
.ZG26A              ANOP  ,                                             00297100
.*----------------------------------------------------------------***   00297200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00297300
                    AIF   (N'&CART LE 1).ZG28A  CK NUM                  00297400
&ZMS                SETC  '"CART='                                      00297500
&ZMS                SETC  '&ZMS.&CART"'                                 00297600
&ZMS                SETC  '&ZMS "CART"'                                 00297700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00297800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00297900
.ZG28A              ANOP  ,                                             00298000
.*-------------------------------------------------------------------   00298100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00298200
&ZXCART             SETC  'INPUT'     SET IN/OUTPUT                     00298300
&XCART              SETC  '&CART(1)'  SET XVARIABLE                     00298400
                    AIF   (N'&CART GT 1).ZG28B  MULTI                   00298500
&XCART              SETC  '&CART'     SET XVARIABLE                     00298600
.ZG28B              AIF   (K'&CART(1) GT 0).ZG28C                       00298700
&ZXCART             SETC  ''          RESET IN/OUTPUT                   00298800
&ZMS                SETC  ' '                                           00298900
&ZMS                SETC  '&ZMS "CART" KEY AND ITS'                     00299000
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00299100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00299200
.ZG28C              ANOP  ,                                             00299300
.*-------------------------------------------------------------------   00299400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00299500
                    AIF   (K'&ZXCART LE 0).ZG28R  NOT I/O               00299600
                    AIF   ('&XCART'(1,1) NE '(').ZG28R                  00299700
&ZCGPR              SETC  '&XCART'(2,K'&XCART-2)                        00299800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                  00299900
                    AIF   (K'&ZCGPR GT 2).ZG28Q                         00300000
                    AIF   ('&ZCGPR' EQ '0').ZG28Q                       00300100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00300200
                    AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME     00300300
.ZG28P              ANOP  ,                                             00300400
                    AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC          00300500
                    AIF   ('&ZCGPR' LT '2').ZG28Q                       00300600
                    AIF   ('&ZCGPR' LE '12').ZG28R                      00300700
.ZG28Q              ANOP  ,                                             00300800
&ZMS                SETC  '"CART='                                      00300900
&ZMS                SETC  '&ZMS.&CART"'                                 00301000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00301100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00301200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00301300
.ZG28R              ANOP  ,                                             00301400
.*----------------------------------------------------------------***   00301500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00301600
                    AIF   (N'&CONSNAME LE 1).ZG31A  CK NUM              00301700
&ZMS                SETC  '"CONSNAME='                                  00301800
&ZMS                SETC  '&ZMS.&CONSNAME"'                             00301900
&ZMS                SETC  '&ZMS "CONSNAME"'                             00302000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00302100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00302200
.ZG31A              ANOP  ,                                             00302300
.*-------------------------------------------------------------------   00302400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00302500
&ZXCONSNAME         SETC  'INPUT'     SET IN/OUTPUT                     00302600
&XCONSNAME          SETC  '&CONSNAME(1)'        SET XVARIABLE           00302700
                    AIF   (N'&CONSNAME GT 1).ZG31B  MULTI               00302800
&XCONSNAME          SETC  '&CONSNAME'           SET XVARIABLE           00302900
.ZG31B              AIF   (K'&CONSNAME(1) GT 0).ZG31C                   00303000
&ZXCONSNAME         SETC  ''          RESET IN/OUTPUT                   00303100
&ZMS                SETC  ' '                                           00303200
&ZMS                SETC  '&ZMS "CONSNAME" KEY AND ITS'                 00303300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00303400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00303500
.ZG31C              ANOP  ,                                             00303600
.*-------------------------------------------------------------------   00303700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00303800
                    AIF   (K'&ZXCONSNAME LE 0).ZG31R  NOT I/O           00303900
                    AIF   ('&XCONSNAME'(1,1) NE '(').ZG31R              00304000
&ZCGPR              SETC  '&XCONSNAME'(2,K'&XCONSNAME-2)                00304100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                  00304200
                    AIF   (K'&ZCGPR GT 2).ZG31Q                         00304300
                    AIF   ('&ZCGPR' EQ '0').ZG31Q                       00304400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00304500
                    AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME     00304600
.ZG31P              ANOP  ,                                             00304700
                    AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC          00304800
                    AIF   ('&ZCGPR' LT '2').ZG31Q                       00304900
                    AIF   ('&ZCGPR' LE '12').ZG31R                      00305000
.ZG31Q              ANOP  ,                                             00305100
&ZMS                SETC  '"CONSNAME='                                  00305200
&ZMS                SETC  '&ZMS.&CONSNAME"'                             00305300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00305400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00305500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00305600
.ZG31R              ANOP  ,                                             00305700
.*------------------------------------------------------------------    00305800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00305900
.ZG33               ANOP  ,                                             00306000
&ZXCONSDATA         SETC  'INPUT'     SET IN/OUTPUT                     00306100
                    AIF   (K'&XCONSDATA GT 0).ZG33E  VALID ARG          00306200
                    AIF   (T'&CONSDATA EQ 'O').ZG33D  OMITTED           00306300
&ZASYSLNDX          SETA  0                                             00306400
.ZG33A              ANOP  ,           POSITIONAL MACRO KEY              00306500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00306600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG33C              00306700
&ZTLC               SETC 'CONSDATA'                                     00306800
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG33A     00306900
.ZG33B              ANOP  ,                                             00307000
&ZXCONSDATA         SETC  ''          RESET IN/OUTPUT                   00307100
&ZMS                SETC  'THE "CONSDATA" KEY'                          00307200
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00307300
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00307400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00307500
                    AGO   .ZG33E                                        00307600
.ZG33C              ANOP  ,                                             00307700
&ZXCONSDATA         SETC  ''          RESET IN/OUTPUT                   00307800
&ZMS                SETC  '"CONSDATA='                                  00307900
&ZMS                SETC  '&ZMS.&CONSDATA"'                             00308000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00308100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00308200
&ZMS                SETC  '&ZMS "NO"'                                   00308300
&ZMS                SETC  '&ZMS OR "YES".'                              00308400
                    MNOTE 8,' &ZMS '                                    00308500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00308600
                    AGO   .ZG33E                                        00308700
.ZG33D              ANOP  ,                                             00308800
&XCONSDATA          SETC  'NO'        SET DEFAULT KEYWORD               00308900
.ZG33E              ANOP  ,                                             00309000
.*------------------------------------------------------------------    00309100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00309200
&XTIMELIMIT         SETC  ''          INITIALIZE XVARIABLE              00309300
.*-------------------------------------------------------------------   00309400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00309500
.ZG36               ANOP  ,                                             00309600
                    AIF   (K'&TIMELIMIT(1) LE 0).ZG36A                  00309700
&ZTLC               SETC 'YES'                                          00309800
                    AIF   ('&TIMELIMIT(1)' NE '&ZTLC').ZG40             00309900
&XTIMELIMIT         SETC  'YES'       SET KEYWORD                       00310000
                    AIF   (N'&TIMELIMIT LE 1).ZG36A  CK NUM             00310100
&ZMS                SETC  '"TIMELIMIT='                                 00310200
&ZMS                SETC  '&ZMS.&TIMELIMIT"'                            00310300
&ZMS                SETC  '&ZMS "TIMELIMIT"'                            00310400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00310500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00310600
.ZG36A              ANOP  ,                                             00310700
.*----------------------------------------------------------------***   00310800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00310900
                    AIF   (N'&TIMEINT LE 1).ZG38A  CK NUM               00311000
&ZMS                SETC  '"TIMEINT='                                   00311100
&ZMS                SETC  '&ZMS.&TIMEINT"'                              00311200
&ZMS                SETC  '&ZMS "TIMEINT"'                              00311300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00311400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00311500
.ZG38A              ANOP  ,                                             00311600
.*-------------------------------------------------------------------   00311700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00311800
&ZXTIMEINT          SETC  'INPUT'     SET IN/OUTPUT                     00311900
&XTIMEINT           SETC  'SYSTEM'                                      00312000
                    AIF   (K'&TIMEINT(1) LE 0).ZG38B  PARM              00312100
&XTIMEINT           SETC  '&TIMEINT(1)'         SET XVARIABLE           00312200
                    AIF   (N'&TIMEINT GT 1).ZG38B  MULTI                00312300
&XTIMEINT           SETC  '&TIMEINT'  SET XVARIABLE                     00312400
.ZG38B              ANOP  ,                                             00312500
.*-------------------------------------------------------------------   00312600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00312700
                    AIF   (K'&ZXTIMEINT LE 0).ZG38R  NOT I/O            00312800
         AIF   ('&XTIMEINT' EQ 'SYSTEM').ZG38R                          00312900
                    AIF   ('&XTIMEINT'(1,1) NE '(').ZG38R               00313000
&ZCGPR              SETC  '&XTIMEINT'(2,K'&XTIMEINT-2)                  00313100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                  00313200
                    AIF   (K'&ZCGPR GT 2).ZG38Q                         00313300
                    AIF   ('&ZCGPR' EQ '0').ZG38Q                       00313400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00313500
                    AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME     00313600
.ZG38P              ANOP  ,                                             00313700
                    AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC          00313800
                    AIF   ('&ZCGPR' LT '2').ZG38Q                       00313900
                    AIF   ('&ZCGPR' LE '12').ZG38R                      00314000
.ZG38Q              ANOP  ,                                             00314100
&ZMS                SETC  '"TIMEINT='                                   00314200
&ZMS                SETC  '&ZMS.&TIMEINT"'                              00314300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00314400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00314500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00314600
.ZG38R              ANOP  ,                                             00314700
.*-------------------------------------------------------------------   00314800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00314900
.ZG40               ANOP  ,                                             00315000
&ZTLC               SETC 'NO'                                           00315100
                    AIF   ('&TIMELIMIT(1)' NE '&ZTLC').ZG41             00315200
&XTIMELIMIT         SETC  'NO'        SET KEYWORD                       00315300
                    AIF   (N'&TIMELIMIT LE 1).ZG40A  CK NUM             00315400
&ZMS                SETC  '"TIMELIMIT='                                 00315500
&ZMS                SETC  '&ZMS.&TIMELIMIT"'                            00315600
&ZMS                SETC  '&ZMS "TIMELIMIT"'                            00315700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00315800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00315900
.ZG40A              ANOP  ,                                             00316000
.*------------------------------------------------------------------    00316100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00316200
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00316300
.ZG40A0             AIF   (K'&TIMEINT LE 0).ZG40A1  OK                  00316400
&ZCVAL              SETC '&ZCVAL TIMEINT'       INCORRECT KEY USED      00316500
.ZG40A1             AIF   (K'&ZCVAL LE 0).ZG40A2  OK                    00316600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00316700
&ZMS                SETC  '"TIMELIMIT'                                  00316800
&ZMS                SETC  '&ZMS.=&TIMELIMIT"'                           00316900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00317000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00317100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00317200
.ZG40A2             ANOP  ,                                             00317300
.*------------------------------------------------------------------    00317400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00317500
.ZG41               ANOP  ,                                             00317600
&ZXTIMELIMIT        SETC  'INPUT'     SET IN/OUTPUT                     00317700
                    AIF   (K'&XTIMELIMIT GT 0).ZG41E  VALID ARG         00317800
                    AIF   (T'&TIMELIMIT EQ 'O').ZG41D  OMITTED          00317900
&ZASYSLNDX          SETA  0                                             00318000
.ZG41A              ANOP  ,           POSITIONAL MACRO KEY              00318100
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00318200
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG41C              00318300
&ZTLC               SETC 'TIMELIMIT'                                    00318400
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG41A     00318500
.ZG41B              ANOP  ,                                             00318600
&ZXTIMELIMIT        SETC  ''          RESET IN/OUTPUT                   00318700
&ZMS                SETC  'THE "TIMELIMIT" KEY'                         00318800
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00318900
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00319000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00319100
                    AGO   .ZG41E                                        00319200
.ZG41C              ANOP  ,                                             00319300
&ZXTIMELIMIT        SETC  ''          RESET IN/OUTPUT                   00319400
&ZMS                SETC  '"TIMELIMIT='                                 00319500
&ZMS                SETC  '&ZMS.&TIMELIMIT"'                            00319600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00319700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00319800
&ZMS                SETC  '&ZMS "YES"'                                  00319900
&ZMS                SETC  '&ZMS OR "NO".'                               00320000
                    MNOTE 8,' &ZMS '                                    00320100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00320200
                    AGO   .ZG41E                                        00320300
.ZG41D              ANOP  ,                                             00320400
&XTIMELIMIT         SETC  'YES'       SET DEFAULT KEYWORD               00320500
.ZG41E              ANOP  ,                                             00320600
.*----------------------------------------------------------------***   00320700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00320800
                    AIF   (N'&NAME LE 1).ZG43A  CK NUM                  00320900
&ZMS                SETC  '"NAME='                                      00321000
&ZMS                SETC  '&ZMS.&NAME"'                                 00321100
&ZMS                SETC  '&ZMS "NAME"'                                 00321200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00321300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00321400
.ZG43A              ANOP  ,                                             00321500
.*-------------------------------------------------------------------   00321600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00321700
&ZXNAME             SETC  'INPUT'     SET IN/OUTPUT                     00321800
&XNAME              SETC  '&NAME(1)'  SET XVARIABLE                     00321900
                    AIF   (N'&NAME GT 1).ZG43B  MULTI                   00322000
&XNAME              SETC  '&NAME'     SET XVARIABLE                     00322100
.ZG43B              AIF   (K'&NAME(1) GT 0).ZG43C                       00322200
&ZXNAME             SETC  ''          RESET IN/OUTPUT                   00322300
&ZMS                SETC  ' '                                           00322400
&ZMS                SETC  '&ZMS "NAME" KEY AND ITS'                     00322500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00322600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00322700
.ZG43C              ANOP  ,                                             00322800
.*-------------------------------------------------------------------   00322900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00323000
                    AIF   (K'&ZXNAME LE 0).ZG43R  NOT I/O               00323100
                    AIF   ('&XNAME'(1,1) NE '(').ZG43R                  00323200
&ZCGPR              SETC  '&XNAME'(2,K'&XNAME-2)                        00323300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                  00323400
                    AIF   (K'&ZCGPR GT 2).ZG43Q                         00323500
                    AIF   ('&ZCGPR' EQ '0').ZG43Q                       00323600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00323700
                    AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME     00323800
.ZG43P              ANOP  ,                                             00323900
                    AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC          00324000
                    AIF   ('&ZCGPR' LT '2').ZG43Q                       00324100
                    AIF   ('&ZCGPR' LE '12').ZG43R                      00324200
.ZG43Q              ANOP  ,                                             00324300
&ZMS                SETC  '"NAME='                                      00324400
&ZMS                SETC  '&ZMS.&NAME"'                                 00324500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00324600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00324700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00324800
.ZG43R              ANOP  ,                                             00324900
.*----------------------------------------------------------------***   00325000
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00325100
                    AIF   (N'&REXXARGS LE 1).ZG46A  CK NUM              00325200
&ZMS                SETC  '"REXXARGS='                                  00325300
&ZMS                SETC  '&ZMS.&REXXARGS"'                             00325400
&ZMS                SETC  '&ZMS "REXXARGS"'                             00325500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00325600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00325700
.ZG46A              ANOP  ,                                             00325800
.*-------------------------------------------------------------------   00325900
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00326000
&ZXREXXARGS         SETC  'INOUT'     SET IN/OUTPUT                     00326100
&XREXXARGS          SETC  'NO_ARGS'                                     00326200
                    AIF   (K'&REXXARGS(1) LE 0).ZG46B  PARM             00326300
&XREXXARGS          SETC  '&REXXARGS(1)'        SET XVARIABLE           00326400
                    AIF   (N'&REXXARGS GT 1).ZG46B  MULTI               00326500
&XREXXARGS          SETC  '&REXXARGS'           SET XVARIABLE           00326600
.ZG46B              ANOP  ,                                             00326700
.*-------------------------------------------------------------------   00326800
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00326900
                    AIF   (K'&ZXREXXARGS LE 0).ZG46R  NOT I/O           00327000
         AIF   ('&XREXXARGS' EQ 'NO_ARGS').ZG46R                        00327100
                    AIF   ('&XREXXARGS'(1,1) NE '(').ZG46R              00327200
&ZCGPR              SETC  '&XREXXARGS'(2,K'&XREXXARGS-2)                00327300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                  00327400
                    AIF   (K'&ZCGPR GT 2).ZG46Q                         00327500
                    AIF   ('&ZCGPR' EQ '0').ZG46Q                       00327600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00327700
                    AIF   (T'&ZCGPR NE 'N').ZG46Q  INVALID REG NAME     00327800
.ZG46P              ANOP  ,                                             00327900
                    AIF   (T'&ZCGPR NE 'N').ZG46R  NON NUMERIC          00328000
                    AIF   ('&ZCGPR' LT '2').ZG46Q                       00328100
                    AIF   ('&ZCGPR' LE '12').ZG46R                      00328200
.ZG46Q              ANOP  ,                                             00328300
&ZMS                SETC  '"REXXARGS='                                  00328400
&ZMS                SETC  '&ZMS.&REXXARGS"'                             00328500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00328600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00328700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00328800
.ZG46R              ANOP  ,                                             00328900
.*----------------------------------------------------------------***   00329000
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00329100
                    AIF   (N'&REXXVARS LE 1).ZG49A  CK NUM              00329200
&ZMS                SETC  '"REXXVARS='                                  00329300
&ZMS                SETC  '&ZMS.&REXXVARS"'                             00329400
&ZMS                SETC  '&ZMS "REXXVARS"'                             00329500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00329600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00329700
.ZG49A              ANOP  ,                                             00329800
.*-------------------------------------------------------------------   00329900
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00330000
&ZXREXXVARS         SETC  'INOUT'     SET IN/OUTPUT                     00330100
&XREXXVARS          SETC  'NO_VARS'                                     00330200
                    AIF   (K'&REXXVARS(1) LE 0).ZG49B  PARM             00330300
&XREXXVARS          SETC  '&REXXVARS(1)'        SET XVARIABLE           00330400
                    AIF   (N'&REXXVARS GT 1).ZG49B  MULTI               00330500
&XREXXVARS          SETC  '&REXXVARS'           SET XVARIABLE           00330600
.ZG49B              ANOP  ,                                             00330700
.*-------------------------------------------------------------------   00330800
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00330900
                    AIF   (K'&ZXREXXVARS LE 0).ZG49R  NOT I/O           00331000
         AIF   ('&XREXXVARS' EQ 'NO_VARS').ZG49R                        00331100
                    AIF   ('&XREXXVARS'(1,1) NE '(').ZG49R              00331200
&ZCGPR              SETC  '&XREXXVARS'(2,K'&XREXXVARS-2)                00331300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                  00331400
                    AIF   (K'&ZCGPR GT 2).ZG49Q                         00331500
                    AIF   ('&ZCGPR' EQ '0').ZG49Q                       00331600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00331700
                    AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME     00331800
.ZG49P              ANOP  ,                                             00331900
                    AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC          00332000
                    AIF   ('&ZCGPR' LT '2').ZG49Q                       00332100
                    AIF   ('&ZCGPR' LE '12').ZG49R                      00332200
.ZG49Q              ANOP  ,                                             00332300
&ZMS                SETC  '"REXXVARS='                                  00332400
&ZMS                SETC  '&ZMS.&REXXVARS"'                             00332500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00332600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00332700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00332800
.ZG49R              ANOP  ,                                             00332900
.*----------------------------------------------------------------***   00333000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00333100
                    AIF   (N'&REXXOUTDSN LE 1).ZG52A  CK NUM            00333200
&ZMS                SETC  '"REXXOUTDSN='                                00333300
&ZMS                SETC  '&ZMS.&REXXOUTDSN"'                           00333400
&ZMS                SETC  '&ZMS "REXXOUTDSN"'                           00333500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00333600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00333700
.ZG52A              ANOP  ,                                             00333800
.*-------------------------------------------------------------------   00333900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00334000
&ZXREXXOUTDSN       SETC  'INPUT'     SET IN/OUTPUT                     00334100
&XREXXOUTDSN        SETC  'NO_REXXOUTDSN'                               00334200
                    AIF   (K'&REXXOUTDSN(1) LE 0).ZG52B  PARM           00334300
&XREXXOUTDSN        SETC  '&REXXOUTDSN(1)'      SET XVARIABLE           00334400
                    AIF   (N'&REXXOUTDSN GT 1).ZG52B  MULTI             00334500
&XREXXOUTDSN        SETC  '&REXXOUTDSN'         SET XVARIABLE           00334600
.ZG52B              ANOP  ,                                             00334700
.*-------------------------------------------------------------------   00334800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00334900
                    AIF   (K'&ZXREXXOUTDSN LE 0).ZG52R  NOT I/O         00335000
         AIF   ('&XREXXOUTDSN' EQ 'NO_REXXOUTDSN').ZG52R                00335100
                    AIF   ('&XREXXOUTDSN'(1,1) NE '(').ZG52R            00335200
&ZCGPR              SETC  '&XREXXOUTDSN'(2,K'&XREXXOUTDSN-2)            00335300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                  00335400
                    AIF   (K'&ZCGPR GT 2).ZG52Q                         00335500
                    AIF   ('&ZCGPR' EQ '0').ZG52Q                       00335600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00335700
                    AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME     00335800
.ZG52P              ANOP  ,                                             00335900
                    AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC          00336000
                    AIF   ('&ZCGPR' LT '2').ZG52Q                       00336100
                    AIF   ('&ZCGPR' LE '12').ZG52R                      00336200
.ZG52Q              ANOP  ,                                             00336300
&ZMS                SETC  '"REXXOUTDSN='                                00336400
&ZMS                SETC  '&ZMS.&REXXOUTDSN"'                           00336500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00336600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00336700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00336800
.ZG52R              ANOP  ,                                             00336900
.*----------------------------------------------------------------***   00337000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00337100
                    AIF   (N'&REXXOUTMEMNAME LE 1).ZG54A  CK NUM        00337200
&ZMS                SETC  '"REXXOUTMEMNAME='                            00337300
&ZMS                SETC  '&ZMS.&REXXOUTMEMNAME"'                       00337400
&ZMS                SETC  '&ZMS "REXXOUTMEMNAME"'                       00337500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00337600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00337700
.ZG54A              ANOP  ,                                             00337800
.*-------------------------------------------------------------------   00337900
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00338000
&XREXXOUTMEMNAME    SETC  'NO_REXXOUTMEMNAME'   SET DEFAULT             00338100
                    AIF   (K'&REXXOUTMEMNAME(1) LE 0).ZG54C  PARM       00338200
&XREXXOUTMEMNAME    SETC  '&REXXOUTMEMNAME(1)'  SET XVARIABLE           00338300
                    AIF   (N'&REXXOUTMEMNAME GT 1).ZG54B  MULTI         00338400
&XREXXOUTMEMNAME    SETC  '&REXXOUTMEMNAME'     SET XVARIABLE           00338500
.ZG54B              AIF   (K'&REXXOUTDSN(1) GT 0).ZG54C  KEY            00338600
&ZMS                SETC  '"REXXOUTMEMNAME'                             00338700
&ZMS                SETC  '&ZMS.=&REXXOUTMEMNAME"'                      00338800
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00338900
&ZMS                SETC  '&ZMS '                                       00339000
&ZMS                SETC  '&ZMS "REXXOUTDSN"'                           00339100
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00339200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00339300
.ZG54C              ANOP  ,                                             00339400
&ZXREXXOUTMEMNAME   SETC  'INPUT'     SET IN/OUTPUT                     00339500
.*-------------------------------------------------------------------   00339600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00339700
                    AIF   (K'&ZXREXXOUTMEMNAME LE 0).ZG54R  NOT I/O     00339800
         AIF   ('&XREXXOUTMEMNAME' EQ 'NO_REXXOUTMEMNAME').ZG54R        00339900
                    AIF   ('&XREXXOUTMEMNAME'(1,1) NE '(').ZG54R        00340000
&ZCGPR              SETC  '&XREXXOUTMEMNAME'(2,K'&XREXXOUTMEMNAME-2)    00340100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                  00340200
                    AIF   (K'&ZCGPR GT 2).ZG54Q                         00340300
                    AIF   ('&ZCGPR' EQ '0').ZG54Q                       00340400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00340500
                    AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME     00340600
.ZG54P              ANOP  ,                                             00340700
                    AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC          00340800
                    AIF   ('&ZCGPR' LT '2').ZG54Q                       00340900
                    AIF   ('&ZCGPR' LE '12').ZG54R                      00341000
.ZG54Q              ANOP  ,                                             00341100
&ZMS                SETC  '"REXXOUTMEMNAME='                            00341200
&ZMS                SETC  '&ZMS.&REXXOUTMEMNAME"'                       00341300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00341400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00341500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00341600
.ZG54R              ANOP  ,                                             00341700
.*----------------------------------------------------------------***   00341800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00341900
                    AIF   (N'&REXXDIAG LE 1).ZG58A  CK NUM              00342000
&ZMS                SETC  '"REXXDIAG='                                  00342100
&ZMS                SETC  '&ZMS.&REXXDIAG"'                             00342200
&ZMS                SETC  '&ZMS "REXXDIAG"'                             00342300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00342400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00342500
.ZG58A              ANOP  ,                                             00342600
.*-------------------------------------------------------------------   00342700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00342800
                    AIF   (K'&REXXDIAG(1) LE 0).ZG58C  NO PARM          00342900
&ZXREXXDIAG         SETC  'OUTPUT'    SET OUTPUT                        00343000
&XREXXDIAG          SETC  '&REXXDIAG(1)'        SET XVARIABLE           00343100
                    AIF   (N'&REXXDIAG GT 1).ZG58C                      00343200
&XREXXDIAG          SETC  '&REXXDIAG'           SET XVARIABLE           00343300
.ZG58C              ANOP  ,                                             00343400
.*-------------------------------------------------------------------   00343500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00343600
                    AIF   (K'&ZXREXXDIAG LE 0).ZG58R  NOT I/O           00343700
                    AIF   ('&XREXXDIAG'(1,1) NE '(').ZG58R              00343800
&ZCGPR              SETC  '&XREXXDIAG'(2,K'&XREXXDIAG-2)                00343900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                  00344000
                    AIF   (K'&ZCGPR GT 2).ZG58Q                         00344100
                    AIF   ('&ZCGPR' EQ '0').ZG58Q                       00344200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00344300
                    AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME     00344400
.ZG58P              ANOP  ,                                             00344500
                    AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC          00344600
                    AIF   ('&ZCGPR' LT '2').ZG58Q                       00344700
                    AIF   ('&ZCGPR' LE '12').ZG58R                      00344800
.ZG58Q              ANOP  ,                                             00344900
&ZMS                SETC  '"REXXDIAG='                                  00345000
&ZMS                SETC  '&ZMS.&REXXDIAG"'                             00345100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00345200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00345300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00345400
.ZG58R              ANOP  ,                                             00345500
.*------------------------------------------------------------------    00345600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00345700
&XSYNC              SETC  ''          INITIALIZE XVARIABLE              00345800
.*-------------------------------------------------------------------   00345900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00346000
.ZG62               ANOP  ,                                             00346100
                    AIF   (K'&SYNC(1) LE 0).ZG62A                       00346200
&ZTLC               SETC 'YES'                                          00346300
                    AIF   ('&SYNC(1)' NE '&ZTLC').ZG63                  00346400
&XSYNC              SETC  'YES'       SET KEYWORD                       00346500
                    AIF   (N'&SYNC LE 1).ZG62A  CK NUM                  00346600
&ZMS                SETC  '"SYNC='                                      00346700
&ZMS                SETC  '&ZMS.&SYNC"'                                 00346800
&ZMS                SETC  '&ZMS "SYNC"'                                 00346900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00347000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00347100
.ZG62A              ANOP  ,                                             00347200
.*------------------------------------------------------------------    00347300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00347400
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00347500
.ZG62A0             AIF   (K'&OREQTOKEN LE 0).ZG62A1  OK                00347600
&ZCVAL              SETC '&ZCVAL OREQTOKEN'     INCORRECT KEY USED      00347700
.ZG62A1             AIF   (K'&COMPEXIT LE 0).ZG62A2  OK                 00347800
&ZCVAL              SETC '&ZCVAL COMPEXIT'      INCORRECT KEY USED      00347900
.ZG62A2             AIF   (K'&LINKEP LE 0).ZG62A3  OK                   00348000
&ZCVAL              SETC '&ZCVAL LINKEP'        INCORRECT KEY USED      00348100
.ZG62A3             AIF   (K'&ZCVAL LE 0).ZG62A4  OK                    00348200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00348300
&ZMS                SETC  '"SYNC'                                       00348400
&ZMS                SETC  '&ZMS.=&SYNC"'                                00348500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00348600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00348700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00348800
.ZG62A4             ANOP  ,                                             00348900
.*-------------------------------------------------------------------   00349000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00349100
.ZG63               ANOP  ,                                             00349200
&ZTLC               SETC 'NO'                                           00349300
                    AIF   ('&SYNC(1)' NE '&ZTLC').ZG75                  00349400
&XSYNC              SETC  'NO'        SET KEYWORD                       00349500
                    AIF   (N'&SYNC LE 1).ZG63A  CK NUM                  00349600
&ZMS                SETC  '"SYNC='                                      00349700
&ZMS                SETC  '&ZMS.&SYNC"'                                 00349800
&ZMS                SETC  '&ZMS "SYNC"'                                 00349900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00350000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00350100
.ZG63A              ANOP  ,                                             00350200
.*-------------------------------------------------------------------   00350300
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             00350400
                    AIF   ('&XMF' EQ 'M').ZG66  BYPASS IF MF=M          00350500
.*----------------------------------------------------------------***   00350600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00350700
                    AIF   (N'&OREQTOKEN LE 1).ZG65A  CK NUM             00350800
&ZMS                SETC  '"OREQTOKEN='                                 00350900
&ZMS                SETC  '&ZMS.&OREQTOKEN"'                            00351000
&ZMS                SETC  '&ZMS "OREQTOKEN"'                            00351100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00351200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00351300
.ZG65A              ANOP  ,                                             00351400
.*-------------------------------------------------------------------   00351500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00351600
                    AIF   (K'&OREQTOKEN(1) LE 0).ZG65C  NO PARM         00351700
&ZXOREQTOKEN        SETC  'OUTPUT'    SET OUTPUT                        00351800
&XOREQTOKEN         SETC  '&OREQTOKEN(1)'       SET XVARIABLE           00351900
                    AIF   (N'&OREQTOKEN GT 1).ZG65C                     00352000
&XOREQTOKEN         SETC  '&OREQTOKEN'          SET XVARIABLE           00352100
.ZG65C              ANOP  ,                                             00352200
.*-------------------------------------------------------------------   00352300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00352400
                    AIF   (K'&ZXOREQTOKEN LE 0).ZG65R  NOT I/O          00352500
                    AIF   ('&XOREQTOKEN'(1,1) NE '(').ZG65R             00352600
&ZCGPR              SETC  '&XOREQTOKEN'(2,K'&XOREQTOKEN-2)              00352700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG65P                  00352800
                    AIF   (K'&ZCGPR GT 2).ZG65Q                         00352900
                    AIF   ('&ZCGPR' EQ '0').ZG65Q                       00353000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00353100
                    AIF   (T'&ZCGPR NE 'N').ZG65Q  INVALID REG NAME     00353200
.ZG65P              ANOP  ,                                             00353300
                    AIF   (T'&ZCGPR NE 'N').ZG65R  NON NUMERIC          00353400
                    AIF   ('&ZCGPR' LT '2').ZG65Q                       00353500
                    AIF   ('&ZCGPR' LE '12').ZG65R                      00353600
.ZG65Q              ANOP  ,                                             00353700
&ZMS                SETC  '"OREQTOKEN='                                 00353800
&ZMS                SETC  '&ZMS.&OREQTOKEN"'                            00353900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00354000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00354100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00354200
.ZG65R              ANOP  ,                                             00354300
.*-------------------------------------------------------------------   00354400
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               00354500
.ZG66               ANOP  ,           END OF BYPASS CHECK               00354600
.*------------------------------------------------------------------    00354700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00354800
&XCOMPEXIT          SETC  ''          INITIALIZE XVARIABLE              00354900
.*-------------------------------------------------------------------   00355000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00355100
.ZG69               ANOP  ,                                             00355200
                    AIF   (K'&COMPEXIT(1) LE 0).ZG69A                   00355300
&ZTLC               SETC 'NO_COMPEXIT'                                  00355400
                    AIF   ('&COMPEXIT(1)' NE '&ZTLC').ZG70              00355500
&XCOMPEXIT          SETC  'NO_COMPEXIT'         SET KEYWORD             00355600
                    AIF   (N'&COMPEXIT LE 1).ZG69A  CK NUM              00355700
&ZMS                SETC  '"COMPEXIT='                                  00355800
&ZMS                SETC  '&ZMS.&COMPEXIT"'                             00355900
&ZMS                SETC  '&ZMS "COMPEXIT"'                             00356000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00356100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00356200
.ZG69A              ANOP  ,                                             00356300
.*------------------------------------------------------------------    00356400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00356500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00356600
.ZG69A0             AIF   (K'&LINKEP LE 0).ZG69A1  OK                   00356700
&ZCVAL              SETC '&ZCVAL LINKEP'        INCORRECT KEY USED      00356800
.ZG69A1             AIF   (K'&ZCVAL LE 0).ZG69A2  OK                    00356900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00357000
&ZMS                SETC  '"COMPEXIT'                                   00357100
&ZMS                SETC  '&ZMS.=&COMPEXIT"'                            00357200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00357300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00357400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00357500
.ZG69A2             ANOP  ,                                             00357600
.*-------------------------------------------------------------------   00357700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00357800
.ZG70               ANOP  ,                                             00357900
&ZTLC               SETC 'LINK'                                         00358000
                    AIF   ('&COMPEXIT(1)' NE '&ZTLC').ZG74              00358100
&XCOMPEXIT          SETC  'LINK'      SET KEYWORD                       00358200
                    AIF   (N'&COMPEXIT LE 1).ZG70A  CK NUM              00358300
&ZMS                SETC  '"COMPEXIT='                                  00358400
&ZMS                SETC  '&ZMS.&COMPEXIT"'                             00358500
&ZMS                SETC  '&ZMS "COMPEXIT"'                             00358600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00358700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00358800
.ZG70A              ANOP  ,                                             00358900
.*----------------------------------------------------------------***   00359000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00359100
                    AIF   (N'&LINKEP LE 1).ZG72A  CK NUM                00359200
&ZMS                SETC  '"LINKEP='                                    00359300
&ZMS                SETC  '&ZMS.&LINKEP"'                               00359400
&ZMS                SETC  '&ZMS "LINKEP"'                               00359500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00359600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00359700
.ZG72A              ANOP  ,                                             00359800
.*-------------------------------------------------------------------   00359900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00360000
&ZXLINKEP           SETC  'INPUT'     SET IN/OUTPUT                     00360100
&XLINKEP            SETC  '&LINKEP(1)'          SET XVARIABLE           00360200
                    AIF   (N'&LINKEP GT 1).ZG72B  MULTI                 00360300
&XLINKEP            SETC  '&LINKEP'   SET XVARIABLE                     00360400
.ZG72B              AIF   (K'&LINKEP(1) GT 0).ZG72C                     00360500
&ZXLINKEP           SETC  ''          RESET IN/OUTPUT                   00360600
&ZMS                SETC  ' '                                           00360700
&ZMS                SETC  '&ZMS "LINKEP" KEY AND ITS'                   00360800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00360900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00361000
.ZG72C              ANOP  ,                                             00361100
.*-------------------------------------------------------------------   00361200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00361300
                    AIF   (K'&ZXLINKEP LE 0).ZG72R  NOT I/O             00361400
                    AIF   ('&XLINKEP'(1,1) NE '(').ZG72R                00361500
&ZCGPR              SETC  '&XLINKEP'(2,K'&XLINKEP-2)                    00361600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                  00361700
                    AIF   (K'&ZCGPR GT 2).ZG72Q                         00361800
                    AIF   ('&ZCGPR' EQ '0').ZG72Q                       00361900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00362000
                    AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME     00362100
.ZG72P              ANOP  ,                                             00362200
                    AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC          00362300
                    AIF   ('&ZCGPR' LT '2').ZG72Q                       00362400
                    AIF   ('&ZCGPR' LE '12').ZG72R                      00362500
.ZG72Q              ANOP  ,                                             00362600
&ZMS                SETC  '"LINKEP='                                    00362700
&ZMS                SETC  '&ZMS.&LINKEP"'                               00362800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00362900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00363000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00363100
.ZG72R              ANOP  ,                                             00363200
.*------------------------------------------------------------------    00363300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00363400
.ZG74               ANOP  ,                                             00363500
&ZXCOMPEXIT         SETC  'INPUT'     SET IN/OUTPUT                     00363600
                    AIF   (K'&XCOMPEXIT GT 0).ZG74E  VALID ARG          00363700
                    AIF   (T'&COMPEXIT EQ 'O').ZG74D  OMITTED           00363800
&ZASYSLNDX          SETA  0                                             00363900
.ZG74A              ANOP  ,           POSITIONAL MACRO KEY              00364000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00364100
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG74C              00364200
&ZTLC               SETC 'COMPEXIT'                                     00364300
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG74A     00364400
.ZG74B              ANOP  ,                                             00364500
&ZXCOMPEXIT         SETC  ''          RESET IN/OUTPUT                   00364600
&ZMS                SETC  'THE "COMPEXIT" KEY'                          00364700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00364800
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00364900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00365000
                    AGO   .ZG74E                                        00365100
.ZG74C              ANOP  ,                                             00365200
&ZXCOMPEXIT         SETC  ''          RESET IN/OUTPUT                   00365300
&ZMS                SETC  '"COMPEXIT='                                  00365400
&ZMS                SETC  '&ZMS.&COMPEXIT"'                             00365500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00365600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00365700
&ZMS                SETC  '&ZMS "NO_COMPEXIT"'                          00365800
&ZMS                SETC  '&ZMS OR "LINK".'                             00365900
                    MNOTE 8,' &ZMS '                                    00366000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00366100
                    AGO   .ZG74E                                        00366200
.ZG74D              ANOP  ,                                             00366300
&XCOMPEXIT          SETC  'NO_COMPEXIT'         SET DEFAULT KEYWORD     00366400
.ZG74E              ANOP  ,                                             00366500
.*------------------------------------------------------------------    00366600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00366700
.ZG75               ANOP  ,                                             00366800
&ZXSYNC             SETC  'INPUT'     SET IN/OUTPUT                     00366900
                    AIF   (K'&XSYNC GT 0).ZG75E  VALID ARG              00367000
                    AIF   (T'&SYNC EQ 'O').ZG75D  OMITTED               00367100
&ZASYSLNDX          SETA  0                                             00367200
.ZG75A              ANOP  ,           POSITIONAL MACRO KEY              00367300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00367400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG75C              00367500
&ZTLC               SETC 'SYNC'                                         00367600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG75A     00367700
.ZG75B              ANOP  ,                                             00367800
&ZXSYNC             SETC  ''          RESET IN/OUTPUT                   00367900
&ZMS                SETC  'THE "SYNC" KEY'                              00368000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00368100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00368200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00368300
                    AGO   .ZG75E                                        00368400
.ZG75C              ANOP  ,                                             00368500
&ZXSYNC             SETC  ''          RESET IN/OUTPUT                   00368600
&ZMS                SETC  '"SYNC='                                      00368700
&ZMS                SETC  '&ZMS.&SYNC"'                                 00368800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00368900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00369000
&ZMS                SETC  '&ZMS "YES"'                                  00369100
&ZMS                SETC  '&ZMS OR "NO".'                               00369200
                    MNOTE 8,' &ZMS '                                    00369300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00369400
                    AGO   .ZG75E                                        00369500
.ZG75D              ANOP  ,                                             00369600
&XSYNC              SETC  'YES'       SET DEFAULT KEYWORD               00369700
.ZG75E              ANOP  ,                                             00369800
.*-------------------------------------------------------------------   00369900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00370000
.ZG76               ANOP  ,                                             00370100
&ZTLC               SETC 'CANCEL'                                       00370200
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG80               00370300
&XREQUEST           SETC  'CANCEL'    SET KEYWORD                       00370400
                    AIF   (N'&REQUEST LE 1).ZG76A  CK NUM               00370500
&ZMS                SETC  '"REQUEST='                                   00370600
&ZMS                SETC  '&ZMS.&REQUEST"'                              00370700
&ZMS                SETC  '&ZMS "REQUEST"'                              00370800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00370900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00371000
.ZG76A              ANOP  ,                                             00371100
.*------------------------------------------------------------------    00371200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00371300
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00371400
.ZG76A0             AIF   (K'&SECURITY LE 0).ZG76A1  OK                 00371500
&ZCVAL              SETC '&ZCVAL SECURITY'      INCORRECT KEY USED      00371600
.ZG76A1             AIF   (K'&UTOKEN LE 0).ZG76A2  OK                   00371700
&ZCVAL              SETC '&ZCVAL UTOKEN'        INCORRECT KEY USED      00371800
.ZG76A2             AIF   (K'&TSO LE 0).ZG76A3  OK                      00371900
&ZCVAL              SETC '&ZCVAL TSO'           INCORRECT KEY USED      00372000
.ZG76A3             AIF   (K'&REXXINDSN LE 0).ZG76A4  OK                00372100
&ZCVAL              SETC '&ZCVAL REXXINDSN'     INCORRECT KEY USED      00372200
.ZG76A4             AIF   (K'&REXXINMEMNAME LE 0).ZG76A5  OK            00372300
&ZCVAL              SETC '&ZCVAL REXXINMEMNAME'  INCORRECT KEY USED     00372400
.ZG76A5             AIF   (K'&CONSDATA LE 0).ZG76A6  OK                 00372500
&ZCVAL              SETC '&ZCVAL CONSDATA'      INCORRECT KEY USED      00372600
.ZG76A6             AIF   (K'&CART LE 0).ZG76A7  OK                     00372700
&ZCVAL              SETC '&ZCVAL CART'          INCORRECT KEY USED      00372800
.ZG76A7             AIF   (K'&CONSNAME LE 0).ZG76A8  OK                 00372900
&ZCVAL              SETC '&ZCVAL CONSNAME'      INCORRECT KEY USED      00373000
.ZG76A8             AIF   (K'&TIMELIMIT LE 0).ZG76A9  OK                00373100
&ZCVAL              SETC '&ZCVAL TIMELIMIT'     INCORRECT KEY USED      00373200
.ZG76A9             AIF   (K'&TIMEINT LE 0).ZG76A10  OK                 00373300
&ZCVAL              SETC '&ZCVAL TIMEINT'       INCORRECT KEY USED      00373400
.ZG76A10            AIF   (K'&NAME LE 0).ZG76A11  OK                    00373500
&ZCVAL              SETC '&ZCVAL NAME'          INCORRECT KEY USED      00373600
.ZG76A11            AIF   (K'&REXXARGS LE 0).ZG76A12  OK                00373700
&ZCVAL              SETC '&ZCVAL REXXARGS'      INCORRECT KEY USED      00373800
.ZG76A12            AIF   (K'&REXXVARS LE 0).ZG76A13  OK                00373900
&ZCVAL              SETC '&ZCVAL REXXVARS'      INCORRECT KEY USED      00374000
.ZG76A13            AIF   (K'&REXXOUTDSN LE 0).ZG76A14  OK              00374100
&ZCVAL              SETC '&ZCVAL REXXOUTDSN'    INCORRECT KEY USED      00374200
.ZG76A14            AIF   (K'&REXXOUTMEMNAME LE 0).ZG76A15  OK          00374300
&ZCVAL              SETC '&ZCVAL REXXOUTMEMNAME'  INCORRECT KEY USED    00374400
.ZG76A15            AIF   (K'&REXXDIAG LE 0).ZG76A16  OK                00374500
&ZCVAL              SETC '&ZCVAL REXXDIAG'      INCORRECT KEY USED      00374600
.ZG76A16            AIF   (K'&SYNC LE 0).ZG76A17  OK                    00374700
&ZCVAL              SETC '&ZCVAL SYNC'          INCORRECT KEY USED      00374800
.ZG76A17            AIF   (K'&OREQTOKEN LE 0).ZG76A18  OK               00374900
&ZCVAL              SETC '&ZCVAL OREQTOKEN'     INCORRECT KEY USED      00375000
.ZG76A18            AIF   (K'&COMPEXIT LE 0).ZG76A19  OK                00375100
&ZCVAL              SETC '&ZCVAL COMPEXIT'      INCORRECT KEY USED      00375200
.ZG76A19            AIF   (K'&LINKEP LE 0).ZG76A20  OK                  00375300
&ZCVAL              SETC '&ZCVAL LINKEP'        INCORRECT KEY USED      00375400
.ZG76A20            AIF   (K'&REXXLIB LE 0).ZG76A21  OK                 00375500
&ZCVAL              SETC '&ZCVAL REXXLIB'       INCORRECT KEY USED      00375600
.ZG76A21            AIF   (K'&REXXLIBLEN LE 0).ZG76A22  OK              00375700
&ZCVAL              SETC '&ZCVAL REXXLIBLEN'    INCORRECT KEY USED      00375800
.ZG76A22            AIF   (K'&ZCVAL LE 0).ZG76A23  OK                   00375900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00376000
                    AIF  (K'&ZCVAL LE 160).ZG76A23A                     00376100
&ZCVAL              SETC '&ZCVAL'(1,160)                                00376200
&ZCVAL              SETC '&ZCVAL....'                                   00376300
.ZG76A23A           ANOP                                                00376400
&ZMS                SETC  '"REQUEST'                                    00376500
&ZMS                SETC  '&ZMS.=&REQUEST"'                             00376600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00376700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00376800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00376900
.ZG76A23            ANOP  ,                                             00377000
.*----------------------------------------------------------------***   00377100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00377200
                    AIF   (N'&REQTOKEN LE 1).ZG78A  CK NUM              00377300
&ZMS                SETC  '"REQTOKEN='                                  00377400
&ZMS                SETC  '&ZMS.&REQTOKEN"'                             00377500
&ZMS                SETC  '&ZMS "REQTOKEN"'                             00377600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00377700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00377800
.ZG78A              ANOP  ,                                             00377900
.*-------------------------------------------------------------------   00378000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00378100
&ZXREQTOKEN         SETC  'INPUT'     SET IN/OUTPUT                     00378200
&XREQTOKEN          SETC  '&REQTOKEN(1)'        SET XVARIABLE           00378300
                    AIF   (N'&REQTOKEN GT 1).ZG78B  MULTI               00378400
&XREQTOKEN          SETC  '&REQTOKEN'           SET XVARIABLE           00378500
.ZG78B              AIF   (K'&REQTOKEN(1) GT 0).ZG78C                   00378600
&ZXREQTOKEN         SETC  ''          RESET IN/OUTPUT                   00378700
&ZMS                SETC  ' '                                           00378800
&ZMS                SETC  '&ZMS "REQTOKEN" KEY AND ITS'                 00378900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00379000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00379100
.ZG78C              ANOP  ,                                             00379200
.*-------------------------------------------------------------------   00379300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00379400
                    AIF   (K'&ZXREQTOKEN LE 0).ZG78R  NOT I/O           00379500
                    AIF   ('&XREQTOKEN'(1,1) NE '(').ZG78R              00379600
&ZCGPR              SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                00379700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG78P                  00379800
                    AIF   (K'&ZCGPR GT 2).ZG78Q                         00379900
                    AIF   ('&ZCGPR' EQ '0').ZG78Q                       00380000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00380100
                    AIF   (T'&ZCGPR NE 'N').ZG78Q  INVALID REG NAME     00380200
.ZG78P              ANOP  ,                                             00380300
                    AIF   (T'&ZCGPR NE 'N').ZG78R  NON NUMERIC          00380400
                    AIF   ('&ZCGPR' LT '2').ZG78Q                       00380500
                    AIF   ('&ZCGPR' LE '12').ZG78R                      00380600
.ZG78Q              ANOP  ,                                             00380700
&ZMS                SETC  '"REQTOKEN='                                  00380800
&ZMS                SETC  '&ZMS.&REQTOKEN"'                             00380900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00381000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00381100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00381200
.ZG78R              ANOP  ,                                             00381300
.*-------------------------------------------------------------------   00381400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00381500
.ZG80               ANOP  ,                                             00381600
&ZTLC               SETC 'GETREXXLIB'                                   00381700
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG87               00381800
&XREQUEST           SETC  'GETREXXLIB'          SET KEYWORD             00381900
                    AIF   (N'&REQUEST LE 1).ZG80A  CK NUM               00382000
&ZMS                SETC  '"REQUEST='                                   00382100
&ZMS                SETC  '&ZMS.&REQUEST"'                              00382200
&ZMS                SETC  '&ZMS "REQUEST"'                              00382300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00382400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00382500
.ZG80A              ANOP  ,                                             00382600
.*------------------------------------------------------------------    00382700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00382800
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00382900
.ZG80A0             AIF   (K'&SECURITY LE 0).ZG80A1  OK                 00383000
&ZCVAL              SETC '&ZCVAL SECURITY'      INCORRECT KEY USED      00383100
.ZG80A1             AIF   (K'&UTOKEN LE 0).ZG80A2  OK                   00383200
&ZCVAL              SETC '&ZCVAL UTOKEN'        INCORRECT KEY USED      00383300
.ZG80A2             AIF   (K'&TSO LE 0).ZG80A3  OK                      00383400
&ZCVAL              SETC '&ZCVAL TSO'           INCORRECT KEY USED      00383500
.ZG80A3             AIF   (K'&REXXINDSN LE 0).ZG80A4  OK                00383600
&ZCVAL              SETC '&ZCVAL REXXINDSN'     INCORRECT KEY USED      00383700
.ZG80A4             AIF   (K'&REXXINMEMNAME LE 0).ZG80A5  OK            00383800
&ZCVAL              SETC '&ZCVAL REXXINMEMNAME'  INCORRECT KEY USED     00383900
.ZG80A5             AIF   (K'&CONSDATA LE 0).ZG80A6  OK                 00384000
&ZCVAL              SETC '&ZCVAL CONSDATA'      INCORRECT KEY USED      00384100
.ZG80A6             AIF   (K'&CART LE 0).ZG80A7  OK                     00384200
&ZCVAL              SETC '&ZCVAL CART'          INCORRECT KEY USED      00384300
.ZG80A7             AIF   (K'&CONSNAME LE 0).ZG80A8  OK                 00384400
&ZCVAL              SETC '&ZCVAL CONSNAME'      INCORRECT KEY USED      00384500
.ZG80A8             AIF   (K'&TIMELIMIT LE 0).ZG80A9  OK                00384600
&ZCVAL              SETC '&ZCVAL TIMELIMIT'     INCORRECT KEY USED      00384700
.ZG80A9             AIF   (K'&TIMEINT LE 0).ZG80A10  OK                 00384800
&ZCVAL              SETC '&ZCVAL TIMEINT'       INCORRECT KEY USED      00384900
.ZG80A10            AIF   (K'&NAME LE 0).ZG80A11  OK                    00385000
&ZCVAL              SETC '&ZCVAL NAME'          INCORRECT KEY USED      00385100
.ZG80A11            AIF   (K'&REXXARGS LE 0).ZG80A12  OK                00385200
&ZCVAL              SETC '&ZCVAL REXXARGS'      INCORRECT KEY USED      00385300
.ZG80A12            AIF   (K'&REXXVARS LE 0).ZG80A13  OK                00385400
&ZCVAL              SETC '&ZCVAL REXXVARS'      INCORRECT KEY USED      00385500
.ZG80A13            AIF   (K'&REXXOUTDSN LE 0).ZG80A14  OK              00385600
&ZCVAL              SETC '&ZCVAL REXXOUTDSN'    INCORRECT KEY USED      00385700
.ZG80A14            AIF   (K'&REXXOUTMEMNAME LE 0).ZG80A15  OK          00385800
&ZCVAL              SETC '&ZCVAL REXXOUTMEMNAME'  INCORRECT KEY USED    00385900
.ZG80A15            AIF   (K'&REXXDIAG LE 0).ZG80A16  OK                00386000
&ZCVAL              SETC '&ZCVAL REXXDIAG'      INCORRECT KEY USED      00386100
.ZG80A16            AIF   (K'&SYNC LE 0).ZG80A17  OK                    00386200
&ZCVAL              SETC '&ZCVAL SYNC'          INCORRECT KEY USED      00386300
.ZG80A17            AIF   (K'&OREQTOKEN LE 0).ZG80A18  OK               00386400
&ZCVAL              SETC '&ZCVAL OREQTOKEN'     INCORRECT KEY USED      00386500
.ZG80A18            AIF   (K'&COMPEXIT LE 0).ZG80A19  OK                00386600
&ZCVAL              SETC '&ZCVAL COMPEXIT'      INCORRECT KEY USED      00386700
.ZG80A19            AIF   (K'&LINKEP LE 0).ZG80A20  OK                  00386800
&ZCVAL              SETC '&ZCVAL LINKEP'        INCORRECT KEY USED      00386900
.ZG80A20            AIF   (K'&REQTOKEN LE 0).ZG80A21  OK                00387000
&ZCVAL              SETC '&ZCVAL REQTOKEN'      INCORRECT KEY USED      00387100
.ZG80A21            AIF   (K'&ZCVAL LE 0).ZG80A22  OK                   00387200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00387300
                    AIF  (K'&ZCVAL LE 160).ZG80A22A                     00387400
&ZCVAL              SETC '&ZCVAL'(1,160)                                00387500
&ZCVAL              SETC '&ZCVAL....'                                   00387600
.ZG80A22A           ANOP                                                00387700
&ZMS                SETC  '"REQUEST'                                    00387800
&ZMS                SETC  '&ZMS.=&REQUEST"'                             00387900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00388000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00388100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00388200
.ZG80A22            ANOP  ,                                             00388300
.*----------------------------------------------------------------***   00388400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00388500
                    AIF   (N'&REXXLIB LE 1).ZG82A  CK NUM               00388600
&ZMS                SETC  '"REXXLIB='                                   00388700
&ZMS                SETC  '&ZMS.&REXXLIB"'                              00388800
&ZMS                SETC  '&ZMS "REXXLIB"'                              00388900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00389000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00389100
.ZG82A              ANOP  ,                                             00389200
.*-------------------------------------------------------------------   00389300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00389400
&ZXREXXLIB          SETC  'OUTPUT'    SET IN/OUTPUT                     00389500
&XREXXLIB           SETC  '&REXXLIB(1)'         SET XVARIABLE           00389600
                    AIF   (N'&REXXLIB GT 1).ZG82B  MULTI                00389700
&XREXXLIB           SETC  '&REXXLIB'  SET XVARIABLE                     00389800
.ZG82B              AIF   (K'&REXXLIB(1) GT 0).ZG82C                    00389900
&ZXREXXLIB          SETC  ''          RESET IN/OUTPUT                   00390000
&ZMS                SETC  ' '                                           00390100
&ZMS                SETC  '&ZMS "REXXLIB" KEY AND ITS'                  00390200
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00390300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00390400
.ZG82C              ANOP  ,                                             00390500
.*-------------------------------------------------------------------   00390600
.***AG.KCK01 NAME, RQD OUTPUT, KEYS -GPR NOT ALLOWED                    00390700
                    AIF   (K'&ZXREXXLIB LE 0).ZG82P  NOT I/O            00390800
                    AIF   ('&XREXXLIB'(1,1) NE '(').ZG82P               00390900
&ZXREXXLIB          SETC  ''          RESET IN/OUTPUT                   00391000
&ZMS                SETC  '"REXXLIB='                                   00391100
&ZMS                SETC  '&ZMS.&REXXLIB"'                              00391200
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00391300
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'             00391400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00391500
.ZG82P              ANOP  ,                                             00391600
.*----------------------------------------------------------------***   00391700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00391800
                    AIF   (N'&REXXLIBLEN LE 1).ZG85A  CK NUM            00391900
&ZMS                SETC  '"REXXLIBLEN='                                00392000
&ZMS                SETC  '&ZMS.&REXXLIBLEN"'                           00392100
&ZMS                SETC  '&ZMS "REXXLIBLEN"'                           00392200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00392300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00392400
.ZG85A              ANOP  ,                                             00392500
.*-------------------------------------------------------------------   00392600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00392700
&ZXREXXLIBLEN       SETC  'INPUT'     SET IN/OUTPUT                     00392800
&XREXXLIBLEN        SETC  '&REXXLIBLEN(1)'      SET XVARIABLE           00392900
                    AIF   (N'&REXXLIBLEN GT 1).ZG85B  MULTI             00393000
&XREXXLIBLEN        SETC  '&REXXLIBLEN'         SET XVARIABLE           00393100
.ZG85B              AIF   (K'&REXXLIBLEN(1) GT 0).ZG85C                 00393200
&ZXREXXLIBLEN       SETC  ''          RESET IN/OUTPUT                   00393300
&ZMS                SETC  ' '                                           00393400
&ZMS                SETC  '&ZMS "REXXLIBLEN" KEY AND ITS'               00393500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00393600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00393700
.ZG85C              ANOP  ,                                             00393800
.*-------------------------------------------------------------------   00393900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00394000
                    AIF   (K'&ZXREXXLIBLEN LE 0).ZG85R  NOT I/O         00394100
                    AIF   ('&XREXXLIBLEN'(1,1) NE '(').ZG85R            00394200
&ZCGPR              SETC  '&XREXXLIBLEN'(2,K'&XREXXLIBLEN-2)            00394300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG85P                  00394400
                    AIF   (K'&ZCGPR GT 2).ZG85Q                         00394500
                    AIF   ('&ZCGPR' EQ '0').ZG85Q                       00394600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00394700
                    AIF   (T'&ZCGPR NE 'N').ZG85Q  INVALID REG NAME     00394800
.ZG85P              ANOP  ,                                             00394900
                    AIF   (T'&ZCGPR NE 'N').ZG85R  NON NUMERIC          00395000
                    AIF   ('&ZCGPR' LT '2').ZG85Q                       00395100
                    AIF   ('&ZCGPR' LE '12').ZG85R                      00395200
.ZG85Q              ANOP  ,                                             00395300
&ZMS                SETC  '"REXXLIBLEN='                                00395400
&ZMS                SETC  '&ZMS.&REXXLIBLEN"'                           00395500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00395600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00395700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00395800
.ZG85R              ANOP  ,                                             00395900
.*------------------------------------------------------------------    00396000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00396100
.ZG87               ANOP  ,                                             00396200
&ZXREQUEST          SETC  'INPUT'     SET IN/OUTPUT                     00396300
                    AIF   (K'&XREQUEST GT 0).ZG87E  VALID ARG           00396400
                    AIF   (T'&REQUEST EQ 'O').ZG87D  OMITTED            00396500
&ZASYSLNDX          SETA  0                                             00396600
.ZG87A              ANOP  ,           POSITIONAL MACRO KEY              00396700
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00396800
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG87C              00396900
&ZTLC               SETC 'REQUEST'                                      00397000
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG87A     00397100
.ZG87B              ANOP  ,                                             00397200
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   00397300
&ZMS                SETC  'THE "REQUEST" KEY'                           00397400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00397500
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00397600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00397700
                    AGO   .ZG87E                                        00397800
.ZG87C              ANOP  ,                                             00397900
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   00398000
&ZMS                SETC  '"REQUEST='                                   00398100
&ZMS                SETC  '&ZMS.&REQUEST"'                              00398200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00398300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00398400
&ZMS                SETC  '&ZMS "EXECUTE",'                             00398500
&ZMS                SETC  '&ZMS "CANCEL",'                              00398600
&ZMS                SETC  '&ZMS OR "GETREXXLIB".'                       00398700
                    MNOTE 8,' &ZMS '                                    00398800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00398900
                    AGO   .ZG87E                                        00399000
.ZG87D              ANOP  ,                                             00399100
&XREQUEST           SETC  'EXECUTE'   SET DEFAULT KEYWORD               00399200
.ZG87E              ANOP  ,                                             00399300
.*------------------------------------------------------------------    00399400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00399500
                    AIF   (K'&REQUEST(1) GT 0).ZG87F  PARM              00399600
&XREQUEST           SETC  ''          ENSURE NULL KEYWORD               00399700
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   00399800
&ZMS                SETC  'THE'                                         00399900
&ZMS                SETC  '&ZMS "REQUEST" KEY AND ITS'                  00400000
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00400100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00400200
&ZMS                SETC  '&ZMS "EXECUTE",'                             00400300
&ZMS                SETC  '&ZMS "CANCEL",'                              00400400
&ZMS                SETC  '&ZMS OR "GETREXXLIB".'                       00400500
                    MNOTE 8,' &ZMS '                                    00400600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00400700
.ZG87F              ANOP  ,                                             00400800
.*----------------------------------------------------------------***   00400900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00401000
                    AIF   (N'&RETCODE LE 1).ZG89A  CK NUM               00401100
&ZMS                SETC  '"RETCODE='                                   00401200
&ZMS                SETC  '&ZMS.&RETCODE"'                              00401300
&ZMS                SETC  '&ZMS "RETCODE"'                              00401400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00401500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00401600
.ZG89A              ANOP  ,                                             00401700
.*-------------------------------------------------------------------   00401800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00401900
                    AIF   (K'&RETCODE(1) LE 0).ZG89C  NO PARM           00402000
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00402100
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00402200
                    AIF   (N'&RETCODE GT 1).ZG89C                       00402300
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00402400
.ZG89C              ANOP  ,                                             00402500
.*-------------------------------------------------------------------   00402600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00402700
                    AIF   (K'&ZXRETCODE LE 0).ZG89R  NOT I/O            00402800
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG89R               00402900
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00403000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                  00403100
                    AIF   (K'&ZCGPR GT 2).ZG89Q                         00403200
                    AIF   ('&ZCGPR' EQ '0').ZG89Q                       00403300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00403400
                    AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME     00403500
.ZG89P              ANOP  ,                                             00403600
                    AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC          00403700
                    AIF   ('&ZCGPR' EQ '15').ZG89R                      00403800
                    AIF   ('&ZCGPR' LT '2').ZG89Q                       00403900
                    AIF   ('&ZCGPR' LE '12').ZG89R                      00404000
.ZG89Q              ANOP  ,                                             00404100
&ZMS                SETC  '"RETCODE='                                   00404200
&ZMS                SETC  '&ZMS.&RETCODE"'                              00404300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00404400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00404500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00404600
.ZG89R              ANOP  ,                                             00404700
.*----------------------------------------------------------------***   00404800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00404900
                    AIF   (N'&RSNCODE LE 1).ZG92A  CK NUM               00405000
&ZMS                SETC  '"RSNCODE='                                   00405100
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00405200
&ZMS                SETC  '&ZMS "RSNCODE"'                              00405300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00405400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00405500
.ZG92A              ANOP  ,                                             00405600
.*-------------------------------------------------------------------   00405700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00405800
                    AIF   (K'&RSNCODE(1) LE 0).ZG92C  NO PARM           00405900
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00406000
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00406100
                    AIF   (N'&RSNCODE GT 1).ZG92C                       00406200
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00406300
.ZG92C              ANOP  ,                                             00406400
.*-------------------------------------------------------------------   00406500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00406600
                    AIF   (K'&ZXRSNCODE LE 0).ZG92R  NOT I/O            00406700
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG92R               00406800
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00406900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG92P                  00407000
                    AIF   (K'&ZCGPR GT 2).ZG92Q                         00407100
                    AIF   ('&ZCGPR' EQ '0').ZG92R                       00407200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00407300
                    AIF   (T'&ZCGPR NE 'N').ZG92Q  INVALID REG NAME     00407400
.ZG92P              ANOP  ,                                             00407500
                    AIF   (T'&ZCGPR NE 'N').ZG92R  NON NUMERIC          00407600
                    AIF   ('&ZCGPR' EQ '0').ZG92R                       00407700
                    AIF   ('&ZCGPR' LT '2').ZG92Q                       00407800
                    AIF   ('&ZCGPR' LE '12').ZG92R                      00407900
.ZG92Q              ANOP  ,                                             00408000
&ZMS                SETC  '"RSNCODE='                                   00408100
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00408200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00408300
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00408400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00408500
.ZG92R              ANOP  ,                                             00408600
.******************************************************************     00408700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00408800
.******************************************************************     00408900
                    ACTR  10000                                         00409000
.*----------------------------------------------------------------***   00409100
.***AH.P02 EXTRA POSITIONALS                                            00409200
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00409300
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00409400
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00409500
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00409600
.ZGLISTX1           ANOP  ,                                             00409700
&ZCVAL              SETC  ''          ERROR FIELD                       00409800
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00409900
.ZGLIST2            ANOP  ,                                             00410000
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00410100
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00410200
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00410300
                    AGO   .ZGLIST2                                      00410400
.*                                                                      00410500
.ZGLIST3            ANOP  ,                                             00410600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00410700
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00410800
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00410900
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00411000
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00411100
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00411200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00411300
.ZGLISTX            ANOP  ,                                             00411400
&ZASYSLNDX          SETA  0                                             00411500
.*-------------------------------------------------------------------   00411600
.***AG.MF04 MF=(SLME)                                                   00411700
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00411800
.********************************************************************   00411900
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             00412000
.********************************************************************   00412100
                    ACTR  10000                                         00412200
.*-------------------------------------------------------------------   00412300
.***AE.MF01 MF=(SLME)                                                   00412400
                    AIF   ('&XMF' EQ 'L').ZEMFX                         00412500
                    AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                00412600
.********************************************************************   00412700
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        00412800
.********************************************************************   00412900
&XREQUEST           SETC  ''          INITIALIZE XVARIABLE              00413000
&XSECURITY          SETC  ''          INITIALIZE XVARIABLE              00413100
&XTSO               SETC  ''          INITIALIZE XVARIABLE              00413200
&XCONSDATA          SETC  ''          INITIALIZE XVARIABLE              00413300
&XTIMELIMIT         SETC  ''          INITIALIZE XVARIABLE              00413400
&XSYNC              SETC  ''          INITIALIZE XVARIABLE              00413500
&XCOMPEXIT          SETC  ''          INITIALIZE XVARIABLE              00413600
.*-------------------------------------------------------------------   00413700
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00413800
&ZTLC               SETC 'EXECUTE'                                      00413900
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE3A               00414000
&XREQUEST           SETC  'EXECUTE'   SET KEYWORD                       00414100
                    AIF   (N'&REQUEST LE 1).ZE3A  CK NUM                00414200
&ZMS                SETC  '"REQUEST='                                   00414300
&ZMS                SETC  '&ZMS.&REQUEST"'                              00414400
&ZMS                SETC  '&ZMS "REQUEST"'                              00414500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00414600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00414700
.ZE3A               ANOP  ,                                             00414800
.*-------------------------------------------------------------------   00414900
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00415000
&ZTLC               SETC 'BYUTOKEN'                                     00415100
                    AIF   ('&SECURITY(1)' NE '&ZTLC').ZE6A              00415200
&XSECURITY          SETC  'BYUTOKEN'  SET KEYWORD                       00415300
                    AIF   (N'&SECURITY LE 1).ZE6A  CK NUM               00415400
&ZMS                SETC  '"SECURITY='                                  00415500
&ZMS                SETC  '&ZMS.&SECURITY"'                             00415600
&ZMS                SETC  '&ZMS "SECURITY"'                             00415700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00415800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00415900
.ZE6A               ANOP  ,                                             00416000
.*----------------------------------------------------------------***   00416100
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00416200
                    AIF   (N'&UTOKEN LE 1).ZE8A  CK NUM                 00416300
&ZMS                SETC  '"UTOKEN='                                    00416400
&ZMS                SETC  '&ZMS.&UTOKEN"'                               00416500
&ZMS                SETC  '&ZMS "UTOKEN"'                               00416600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00416700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00416800
.ZE8A               ANOP  ,                                             00416900
.*-------------------------------------------------------------------   00417000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00417100
                    AIF   (K'&UTOKEN(1) LE 0).ZE8B NO PRM               00417200
&ZXUTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00417300
&XUTOKEN            SETC  '&UTOKEN(1)'          SET XVARIABLE           00417400
                    AIF   (N'&UTOKEN GT 1).ZE8B                         00417500
.*                  ANOP                                                00417600
&XUTOKEN            SETC  '&UTOKEN'   SET XVARIABLE                     00417700
.ZE8B               ANOP  ,                                             00417800
.*-------------------------------------------------------------------   00417900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00418000
                    AIF   (K'&ZXUTOKEN LE 0).ZE8R  NOT I/O              00418100
                    AIF   ('&XUTOKEN'(1,1) NE '(').ZE8R                 00418200
&ZCGPR              SETC  '&XUTOKEN'(2,K'&XUTOKEN-2)                    00418300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE8P                   00418400
                    AIF   (K'&ZCGPR GT 2).ZE8Q                          00418500
                    AIF   ('&ZCGPR' EQ '0').ZE8Q                        00418600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00418700
                    AIF   (T'&ZCGPR NE 'N').ZE8Q  INVALID REG NAME      00418800
.ZE8P               ANOP  ,                                             00418900
                    AIF   (T'&ZCGPR NE 'N').ZE8R  NON NUMERIC           00419000
                    AIF   ('&ZCGPR' LT '2').ZE8Q                        00419100
                    AIF   ('&ZCGPR' LE '12').ZE8R                       00419200
.ZE8Q               ANOP  ,                                             00419300
&ZMS                SETC  '"UTOKEN='                                    00419400
&ZMS                SETC  '&ZMS.&UTOKEN"'                               00419500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00419600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00419700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00419800
.ZE8R               ANOP  ,                                             00419900
.*-------------------------------------------------------------------   00420000
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00420100
&ZTLC               SETC 'BYAXRUSER'                                    00420200
                    AIF   ('&SECURITY(1)' NE '&ZTLC').ZE10A             00420300
&XSECURITY          SETC  'BYAXRUSER'           SET KEYWORD             00420400
                    AIF   (N'&SECURITY LE 1).ZE10A  CK NUM              00420500
&ZMS                SETC  '"SECURITY='                                  00420600
&ZMS                SETC  '&ZMS.&SECURITY"'                             00420700
&ZMS                SETC  '&ZMS "SECURITY"'                             00420800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00420900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00421000
.ZE10A              ANOP  ,                                             00421100
.*------------------------------------------------------------------    00421200
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00421300
.ZE11               AIF   (K'&XSECURITY GT 0).ZE11A                     00421400
                    AIF   (K'&SECURITY(1) LE 0).ZE11B                   00421500
&ZMS                SETC  '"SECURITY='                                  00421600
&ZMS                SETC  '&ZMS.&SECURITY"'                             00421700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00421800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00421900
&ZMS                SETC  '&ZMS "BYUTOKEN"'                             00422000
&ZMS                SETC  '&ZMS OR "BYAXRUSER".'                        00422100
                    MNOTE 8,' &ZMS '                                    00422200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00422300
                    AGO   .ZE11B                                        00422400
.*                                                                      00422500
.ZE11A              ANOP  ,                                             00422600
&ZXSECURITY         SETC  'INPUT'     SET IN/OUTPUT                     00422700
.ZE11B              ANOP  ,                                             00422800
.*-------------------------------------------------------------------   00422900
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00423000
&ZTLC               SETC 'NO'                                           00423100
                    AIF   ('&TSO(1)' NE '&ZTLC').ZE14A                  00423200
&XTSO               SETC  'NO'        SET KEYWORD                       00423300
                    AIF   (N'&TSO LE 1).ZE14A   CK NUM                  00423400
&ZMS                SETC  '"TSO='                                       00423500
&ZMS                SETC  '&ZMS.&TSO"'                                  00423600
&ZMS                SETC  '&ZMS "TSO"'                                  00423700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00423800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00423900
.ZE14A              ANOP  ,                                             00424000
.*----------------------------------------------------------------***   00424100
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00424200
                    AIF   (N'&REXXINDSN LE 1).ZE16A  CK NUM             00424300
&ZMS                SETC  '"REXXINDSN='                                 00424400
&ZMS                SETC  '&ZMS.&REXXINDSN"'                            00424500
&ZMS                SETC  '&ZMS "REXXINDSN"'                            00424600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00424700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00424800
.ZE16A              ANOP  ,                                             00424900
.*-------------------------------------------------------------------   00425000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00425100
                    AIF   (K'&REXXINDSN(1) LE 0).ZE16B NO PRM           00425200
&ZXREXXINDSN        SETC  'INPUT'     SET IN/OUTPUT                     00425300
&XREXXINDSN         SETC  '&REXXINDSN(1)'       SET XVARIABLE           00425400
                    AIF   (N'&REXXINDSN GT 1).ZE16B                     00425500
.*                  ANOP                                                00425600
&XREXXINDSN         SETC  '&REXXINDSN'          SET XVARIABLE           00425700
.ZE16B              ANOP  ,                                             00425800
.*-------------------------------------------------------------------   00425900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00426000
                    AIF   (K'&ZXREXXINDSN LE 0).ZE16R  NOT I/O          00426100
                    AIF   ('&XREXXINDSN'(1,1) NE '(').ZE16R             00426200
&ZCGPR              SETC  '&XREXXINDSN'(2,K'&XREXXINDSN-2)              00426300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE16P                  00426400
                    AIF   (K'&ZCGPR GT 2).ZE16Q                         00426500
                    AIF   ('&ZCGPR' EQ '0').ZE16Q                       00426600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00426700
                    AIF   (T'&ZCGPR NE 'N').ZE16Q  INVALID REG NAME     00426800
.ZE16P              ANOP  ,                                             00426900
                    AIF   (T'&ZCGPR NE 'N').ZE16R  NON NUMERIC          00427000
                    AIF   ('&ZCGPR' LT '2').ZE16Q                       00427100
                    AIF   ('&ZCGPR' LE '12').ZE16R                      00427200
.ZE16Q              ANOP  ,                                             00427300
&ZMS                SETC  '"REXXINDSN='                                 00427400
&ZMS                SETC  '&ZMS.&REXXINDSN"'                            00427500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00427600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00427700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00427800
.ZE16R              ANOP  ,                                             00427900
.*----------------------------------------------------------------***   00428000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00428100
                    AIF   (N'&REXXINMEMNAME LE 1).ZE18A  CK NUM         00428200
&ZMS                SETC  '"REXXINMEMNAME='                             00428300
&ZMS                SETC  '&ZMS.&REXXINMEMNAME"'                        00428400
&ZMS                SETC  '&ZMS "REXXINMEMNAME"'                        00428500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00428600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00428700
.ZE18A              ANOP  ,                                             00428800
.*-------------------------------------------------------------------   00428900
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00429000
                    AIF   (K'&REXXINMEMNAME(1) LE 0).ZE18B NO PRM       00429100
&ZXREXXINMEMNAME    SETC  'INPUT'     SET IN/OUTPUT                     00429200
&XREXXINMEMNAME     SETC  '&REXXINMEMNAME(1)'   SET XVARIABLE           00429300
                    AIF   (N'&REXXINMEMNAME GT 1).ZE18B                 00429400
.*                  ANOP                                                00429500
&XREXXINMEMNAME     SETC  '&REXXINMEMNAME'      SET XVARIABLE           00429600
.ZE18B              ANOP  ,                                             00429700
.*-------------------------------------------------------------------   00429800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00429900
                    AIF   (K'&ZXREXXINMEMNAME LE 0).ZE18R  NOT I/O      00430000
                    AIF   ('&XREXXINMEMNAME'(1,1) NE '(').ZE18R         00430100
&ZCGPR              SETC  '&XREXXINMEMNAME'(2,K'&XREXXINMEMNAME-2)      00430200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE18P                  00430300
                    AIF   (K'&ZCGPR GT 2).ZE18Q                         00430400
                    AIF   ('&ZCGPR' EQ '0').ZE18Q                       00430500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00430600
                    AIF   (T'&ZCGPR NE 'N').ZE18Q  INVALID REG NAME     00430700
.ZE18P              ANOP  ,                                             00430800
                    AIF   (T'&ZCGPR NE 'N').ZE18R  NON NUMERIC          00430900
                    AIF   ('&ZCGPR' LT '2').ZE18Q                       00431000
                    AIF   ('&ZCGPR' LE '12').ZE18R                      00431100
.ZE18Q              ANOP  ,                                             00431200
&ZMS                SETC  '"REXXINMEMNAME='                             00431300
&ZMS                SETC  '&ZMS.&REXXINMEMNAME"'                        00431400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00431500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00431600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00431700
.ZE18R              ANOP  ,                                             00431800
.*-------------------------------------------------------------------   00431900
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00432000
&ZTLC               SETC 'YES'                                          00432100
                    AIF   ('&TSO(1)' NE '&ZTLC').ZE21A                  00432200
&XTSO               SETC  'YES'       SET KEYWORD                       00432300
                    AIF   (N'&TSO LE 1).ZE21A   CK NUM                  00432400
&ZMS                SETC  '"TSO='                                       00432500
&ZMS                SETC  '&ZMS.&TSO"'                                  00432600
&ZMS                SETC  '&ZMS "TSO"'                                  00432700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00432800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00432900
.ZE21A              ANOP  ,                                             00433000
.*------------------------------------------------------------------    00433100
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00433200
.ZE22               AIF   (K'&XTSO GT 0).ZE22A                          00433300
                    AIF   (K'&TSO(1) LE 0).ZE22B                        00433400
&ZMS                SETC  '"TSO='                                       00433500
&ZMS                SETC  '&ZMS.&TSO"'                                  00433600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00433700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00433800
&ZMS                SETC  '&ZMS "NO"'                                   00433900
&ZMS                SETC  '&ZMS OR "YES".'                              00434000
                    MNOTE 8,' &ZMS '                                    00434100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00434200
                    AGO   .ZE22B                                        00434300
.*                                                                      00434400
.ZE22A              ANOP  ,                                             00434500
&ZXTSO              SETC  'INPUT'     SET IN/OUTPUT                     00434600
.ZE22B              ANOP  ,                                             00434700
.*-------------------------------------------------------------------   00434800
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00434900
&ZTLC               SETC 'NO'                                           00435000
                    AIF   ('&CONSDATA(1)' NE '&ZTLC').ZE25A             00435100
&XCONSDATA          SETC  'NO'        SET KEYWORD                       00435200
                    AIF   (N'&CONSDATA LE 1).ZE25A  CK NUM              00435300
&ZMS                SETC  '"CONSDATA='                                  00435400
&ZMS                SETC  '&ZMS.&CONSDATA"'                             00435500
&ZMS                SETC  '&ZMS "CONSDATA"'                             00435600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00435700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00435800
.ZE25A              ANOP  ,                                             00435900
.*-------------------------------------------------------------------   00436000
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00436100
&ZTLC               SETC 'YES'                                          00436200
                    AIF   ('&CONSDATA(1)' NE '&ZTLC').ZE26A             00436300
&XCONSDATA          SETC  'YES'       SET KEYWORD                       00436400
                    AIF   (N'&CONSDATA LE 1).ZE26A  CK NUM              00436500
&ZMS                SETC  '"CONSDATA='                                  00436600
&ZMS                SETC  '&ZMS.&CONSDATA"'                             00436700
&ZMS                SETC  '&ZMS "CONSDATA"'                             00436800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00436900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00437000
.ZE26A              ANOP  ,                                             00437100
.*----------------------------------------------------------------***   00437200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00437300
                    AIF   (N'&CART LE 1).ZE28A  CK NUM                  00437400
&ZMS                SETC  '"CART='                                      00437500
&ZMS                SETC  '&ZMS.&CART"'                                 00437600
&ZMS                SETC  '&ZMS "CART"'                                 00437700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00437800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00437900
.ZE28A              ANOP  ,                                             00438000
.*-------------------------------------------------------------------   00438100
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00438200
                    AIF   (K'&CART(1) LE 0).ZE28B NO PRM                00438300
&ZXCART             SETC  'INPUT'     SET IN/OUTPUT                     00438400
&XCART              SETC  '&CART(1)'  SET XVARIABLE                     00438500
                    AIF   (N'&CART GT 1).ZE28B                          00438600
.*                  ANOP                                                00438700
&XCART              SETC  '&CART'     SET XVARIABLE                     00438800
.ZE28B              ANOP  ,                                             00438900
.*-------------------------------------------------------------------   00439000
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00439100
                    AIF   (K'&ZXCART LE 0).ZE28R  NOT I/O               00439200
                    AIF   ('&XCART'(1,1) NE '(').ZE28R                  00439300
&ZCGPR              SETC  '&XCART'(2,K'&XCART-2)                        00439400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE28P                  00439500
                    AIF   (K'&ZCGPR GT 2).ZE28Q                         00439600
                    AIF   ('&ZCGPR' EQ '0').ZE28Q                       00439700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00439800
                    AIF   (T'&ZCGPR NE 'N').ZE28Q  INVALID REG NAME     00439900
.ZE28P              ANOP  ,                                             00440000
                    AIF   (T'&ZCGPR NE 'N').ZE28R  NON NUMERIC          00440100
                    AIF   ('&ZCGPR' LT '2').ZE28Q                       00440200
                    AIF   ('&ZCGPR' LE '12').ZE28R                      00440300
.ZE28Q              ANOP  ,                                             00440400
&ZMS                SETC  '"CART='                                      00440500
&ZMS                SETC  '&ZMS.&CART"'                                 00440600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00440700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00440800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00440900
.ZE28R              ANOP  ,                                             00441000
.*----------------------------------------------------------------***   00441100
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00441200
                    AIF   (N'&CONSNAME LE 1).ZE31A  CK NUM              00441300
&ZMS                SETC  '"CONSNAME='                                  00441400
&ZMS                SETC  '&ZMS.&CONSNAME"'                             00441500
&ZMS                SETC  '&ZMS "CONSNAME"'                             00441600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00441700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00441800
.ZE31A              ANOP  ,                                             00441900
.*-------------------------------------------------------------------   00442000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00442100
                    AIF   (K'&CONSNAME(1) LE 0).ZE31B NO PRM            00442200
&ZXCONSNAME         SETC  'INPUT'     SET IN/OUTPUT                     00442300
&XCONSNAME          SETC  '&CONSNAME(1)'        SET XVARIABLE           00442400
                    AIF   (N'&CONSNAME GT 1).ZE31B                      00442500
.*                  ANOP                                                00442600
&XCONSNAME          SETC  '&CONSNAME'           SET XVARIABLE           00442700
.ZE31B              ANOP  ,                                             00442800
.*-------------------------------------------------------------------   00442900
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00443000
                    AIF   (K'&ZXCONSNAME LE 0).ZE31R  NOT I/O           00443100
                    AIF   ('&XCONSNAME'(1,1) NE '(').ZE31R              00443200
&ZCGPR              SETC  '&XCONSNAME'(2,K'&XCONSNAME-2)                00443300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE31P                  00443400
                    AIF   (K'&ZCGPR GT 2).ZE31Q                         00443500
                    AIF   ('&ZCGPR' EQ '0').ZE31Q                       00443600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00443700
                    AIF   (T'&ZCGPR NE 'N').ZE31Q  INVALID REG NAME     00443800
.ZE31P              ANOP  ,                                             00443900
                    AIF   (T'&ZCGPR NE 'N').ZE31R  NON NUMERIC          00444000
                    AIF   ('&ZCGPR' LT '2').ZE31Q                       00444100
                    AIF   ('&ZCGPR' LE '12').ZE31R                      00444200
.ZE31Q              ANOP  ,                                             00444300
&ZMS                SETC  '"CONSNAME='                                  00444400
&ZMS                SETC  '&ZMS.&CONSNAME"'                             00444500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00444600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00444700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00444800
.ZE31R              ANOP  ,                                             00444900
.*------------------------------------------------------------------    00445000
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00445100
.ZE33               AIF   (K'&XCONSDATA GT 0).ZE33A                     00445200
                    AIF   (K'&CONSDATA(1) LE 0).ZE33B                   00445300
&ZMS                SETC  '"CONSDATA='                                  00445400
&ZMS                SETC  '&ZMS.&CONSDATA"'                             00445500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00445600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00445700
&ZMS                SETC  '&ZMS "NO"'                                   00445800
&ZMS                SETC  '&ZMS OR "YES".'                              00445900
                    MNOTE 8,' &ZMS '                                    00446000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00446100
                    AGO   .ZE33B                                        00446200
.*                                                                      00446300
.ZE33A              ANOP  ,                                             00446400
&ZXCONSDATA         SETC  'INPUT'     SET IN/OUTPUT                     00446500
.ZE33B              ANOP  ,                                             00446600
.*-------------------------------------------------------------------   00446700
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00446800
&ZTLC               SETC 'YES'                                          00446900
                    AIF   ('&TIMELIMIT(1)' NE '&ZTLC').ZE36A            00447000
&XTIMELIMIT         SETC  'YES'       SET KEYWORD                       00447100
                    AIF   (N'&TIMELIMIT LE 1).ZE36A  CK NUM             00447200
&ZMS                SETC  '"TIMELIMIT='                                 00447300
&ZMS                SETC  '&ZMS.&TIMELIMIT"'                            00447400
&ZMS                SETC  '&ZMS "TIMELIMIT"'                            00447500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00447600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00447700
.ZE36A              ANOP  ,                                             00447800
.*----------------------------------------------------------------***   00447900
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00448000
                    AIF   (N'&TIMEINT LE 1).ZE38A  CK NUM               00448100
&ZMS                SETC  '"TIMEINT='                                   00448200
&ZMS                SETC  '&ZMS.&TIMEINT"'                              00448300
&ZMS                SETC  '&ZMS "TIMEINT"'                              00448400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00448500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00448600
.ZE38A              ANOP  ,                                             00448700
.*-------------------------------------------------------------------   00448800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00448900
                    AIF   (K'&TIMEINT(1) LE 0).ZE38B NO PRM             00449000
&ZXTIMEINT          SETC  'INPUT'     SET IN/OUTPUT                     00449100
&XTIMEINT           SETC  '&TIMEINT(1)'         SET XVARIABLE           00449200
                    AIF   (N'&TIMEINT GT 1).ZE38B                       00449300
.*                  ANOP                                                00449400
&XTIMEINT           SETC  '&TIMEINT'  SET XVARIABLE                     00449500
.ZE38B              ANOP  ,                                             00449600
.*-------------------------------------------------------------------   00449700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00449800
                    AIF   (K'&ZXTIMEINT LE 0).ZE38R  NOT I/O            00449900
                    AIF   ('&XTIMEINT'(1,1) NE '(').ZE38R               00450000
&ZCGPR              SETC  '&XTIMEINT'(2,K'&XTIMEINT-2)                  00450100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE38P                  00450200
                    AIF   (K'&ZCGPR GT 2).ZE38Q                         00450300
                    AIF   ('&ZCGPR' EQ '0').ZE38Q                       00450400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00450500
                    AIF   (T'&ZCGPR NE 'N').ZE38Q  INVALID REG NAME     00450600
.ZE38P              ANOP  ,                                             00450700
                    AIF   (T'&ZCGPR NE 'N').ZE38R  NON NUMERIC          00450800
                    AIF   ('&ZCGPR' LT '2').ZE38Q                       00450900
                    AIF   ('&ZCGPR' LE '12').ZE38R                      00451000
.ZE38Q              ANOP  ,                                             00451100
&ZMS                SETC  '"TIMEINT='                                   00451200
&ZMS                SETC  '&ZMS.&TIMEINT"'                              00451300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00451400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00451500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00451600
.ZE38R              ANOP  ,                                             00451700
.*-------------------------------------------------------------------   00451800
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00451900
&ZTLC               SETC 'NO'                                           00452000
                    AIF   ('&TIMELIMIT(1)' NE '&ZTLC').ZE40A            00452100
&XTIMELIMIT         SETC  'NO'        SET KEYWORD                       00452200
                    AIF   (N'&TIMELIMIT LE 1).ZE40A  CK NUM             00452300
&ZMS                SETC  '"TIMELIMIT='                                 00452400
&ZMS                SETC  '&ZMS.&TIMELIMIT"'                            00452500
&ZMS                SETC  '&ZMS "TIMELIMIT"'                            00452600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00452700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00452800
.ZE40A              ANOP  ,                                             00452900
.*------------------------------------------------------------------    00453000
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00453100
.ZE41               AIF   (K'&XTIMELIMIT GT 0).ZE41A                    00453200
                    AIF   (K'&TIMELIMIT(1) LE 0).ZE41B                  00453300
&ZMS                SETC  '"TIMELIMIT='                                 00453400
&ZMS                SETC  '&ZMS.&TIMELIMIT"'                            00453500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00453600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00453700
&ZMS                SETC  '&ZMS "YES"'                                  00453800
&ZMS                SETC  '&ZMS OR "NO".'                               00453900
                    MNOTE 8,' &ZMS '                                    00454000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00454100
                    AGO   .ZE41B                                        00454200
.*                                                                      00454300
.ZE41A              ANOP  ,                                             00454400
&ZXTIMELIMIT        SETC  'INPUT'     SET IN/OUTPUT                     00454500
.ZE41B              ANOP  ,                                             00454600
.*----------------------------------------------------------------***   00454700
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00454800
                    AIF   (N'&NAME LE 1).ZE43A  CK NUM                  00454900
&ZMS                SETC  '"NAME='                                      00455000
&ZMS                SETC  '&ZMS.&NAME"'                                 00455100
&ZMS                SETC  '&ZMS "NAME"'                                 00455200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00455300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00455400
.ZE43A              ANOP  ,                                             00455500
.*-------------------------------------------------------------------   00455600
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00455700
                    AIF   (K'&NAME(1) LE 0).ZE43B NO PRM                00455800
&ZXNAME             SETC  'INPUT'     SET IN/OUTPUT                     00455900
&XNAME              SETC  '&NAME(1)'  SET XVARIABLE                     00456000
                    AIF   (N'&NAME GT 1).ZE43B                          00456100
.*                  ANOP                                                00456200
&XNAME              SETC  '&NAME'     SET XVARIABLE                     00456300
.ZE43B              ANOP  ,                                             00456400
.*-------------------------------------------------------------------   00456500
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00456600
                    AIF   (K'&ZXNAME LE 0).ZE43R  NOT I/O               00456700
                    AIF   ('&XNAME'(1,1) NE '(').ZE43R                  00456800
&ZCGPR              SETC  '&XNAME'(2,K'&XNAME-2)                        00456900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE43P                  00457000
                    AIF   (K'&ZCGPR GT 2).ZE43Q                         00457100
                    AIF   ('&ZCGPR' EQ '0').ZE43Q                       00457200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00457300
                    AIF   (T'&ZCGPR NE 'N').ZE43Q  INVALID REG NAME     00457400
.ZE43P              ANOP  ,                                             00457500
                    AIF   (T'&ZCGPR NE 'N').ZE43R  NON NUMERIC          00457600
                    AIF   ('&ZCGPR' LT '2').ZE43Q                       00457700
                    AIF   ('&ZCGPR' LE '12').ZE43R                      00457800
.ZE43Q              ANOP  ,                                             00457900
&ZMS                SETC  '"NAME='                                      00458000
&ZMS                SETC  '&ZMS.&NAME"'                                 00458100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00458200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00458300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00458400
.ZE43R              ANOP  ,                                             00458500
.*----------------------------------------------------------------***   00458600
.***AE.KXVAR03 NAME, OPT INOUT, KEYS -XVAR KEY                          00458700
                    AIF   (N'&REXXARGS LE 1).ZE46A  CK NUM              00458800
&ZMS                SETC  '"REXXARGS='                                  00458900
&ZMS                SETC  '&ZMS.&REXXARGS"'                             00459000
&ZMS                SETC  '&ZMS "REXXARGS"'                             00459100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00459200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00459300
.ZE46A              ANOP  ,                                             00459400
.*-------------------------------------------------------------------   00459500
.***AE.KXVAR04 NAME, OPT INOUT, KEYS -XVAR ARGUMENT                     00459600
                    AIF   (K'&REXXARGS(1) LE 0).ZE46B NO PRM            00459700
&ZXREXXARGS         SETC  'INOUT'     SET IN/OUTPUT                     00459800
&XREXXARGS          SETC  '&REXXARGS(1)'        SET XVARIABLE           00459900
                    AIF   (N'&REXXARGS GT 1).ZE46B                      00460000
.*                  ANOP                                                00460100
&XREXXARGS          SETC  '&REXXARGS'           SET XVARIABLE           00460200
.ZE46B              ANOP  ,                                             00460300
.*-------------------------------------------------------------------   00460400
.***AE.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00460500
                    AIF   (K'&ZXREXXARGS LE 0).ZE46R  NOT I/O           00460600
                    AIF   ('&XREXXARGS'(1,1) NE '(').ZE46R              00460700
&ZCGPR              SETC  '&XREXXARGS'(2,K'&XREXXARGS-2)                00460800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE46P                  00460900
                    AIF   (K'&ZCGPR GT 2).ZE46Q                         00461000
                    AIF   ('&ZCGPR' EQ '0').ZE46Q                       00461100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00461200
                    AIF   (T'&ZCGPR NE 'N').ZE46Q  INVALID REG NAME     00461300
.ZE46P              ANOP  ,                                             00461400
                    AIF   (T'&ZCGPR NE 'N').ZE46R  NON NUMERIC          00461500
                    AIF   ('&ZCGPR' LT '2').ZE46Q                       00461600
                    AIF   ('&ZCGPR' LE '12').ZE46R                      00461700
.ZE46Q              ANOP  ,                                             00461800
&ZMS                SETC  '"REXXARGS='                                  00461900
&ZMS                SETC  '&ZMS.&REXXARGS"'                             00462000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00462100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00462200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00462300
.ZE46R              ANOP  ,                                             00462400
.*----------------------------------------------------------------***   00462500
.***AE.KXVAR03 NAME, OPT INOUT, KEYS -XVAR KEY                          00462600
                    AIF   (N'&REXXVARS LE 1).ZE49A  CK NUM              00462700
&ZMS                SETC  '"REXXVARS='                                  00462800
&ZMS                SETC  '&ZMS.&REXXVARS"'                             00462900
&ZMS                SETC  '&ZMS "REXXVARS"'                             00463000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00463100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00463200
.ZE49A              ANOP  ,                                             00463300
.*-------------------------------------------------------------------   00463400
.***AE.KXVAR04 NAME, OPT INOUT, KEYS -XVAR ARGUMENT                     00463500
                    AIF   (K'&REXXVARS(1) LE 0).ZE49B NO PRM            00463600
&ZXREXXVARS         SETC  'INOUT'     SET IN/OUTPUT                     00463700
&XREXXVARS          SETC  '&REXXVARS(1)'        SET XVARIABLE           00463800
                    AIF   (N'&REXXVARS GT 1).ZE49B                      00463900
.*                  ANOP                                                00464000
&XREXXVARS          SETC  '&REXXVARS'           SET XVARIABLE           00464100
.ZE49B              ANOP  ,                                             00464200
.*-------------------------------------------------------------------   00464300
.***AE.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00464400
                    AIF   (K'&ZXREXXVARS LE 0).ZE49R  NOT I/O           00464500
                    AIF   ('&XREXXVARS'(1,1) NE '(').ZE49R              00464600
&ZCGPR              SETC  '&XREXXVARS'(2,K'&XREXXVARS-2)                00464700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE49P                  00464800
                    AIF   (K'&ZCGPR GT 2).ZE49Q                         00464900
                    AIF   ('&ZCGPR' EQ '0').ZE49Q                       00465000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00465100
                    AIF   (T'&ZCGPR NE 'N').ZE49Q  INVALID REG NAME     00465200
.ZE49P              ANOP  ,                                             00465300
                    AIF   (T'&ZCGPR NE 'N').ZE49R  NON NUMERIC          00465400
                    AIF   ('&ZCGPR' LT '2').ZE49Q                       00465500
                    AIF   ('&ZCGPR' LE '12').ZE49R                      00465600
.ZE49Q              ANOP  ,                                             00465700
&ZMS                SETC  '"REXXVARS='                                  00465800
&ZMS                SETC  '&ZMS.&REXXVARS"'                             00465900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00466000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00466100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00466200
.ZE49R              ANOP  ,                                             00466300
.*----------------------------------------------------------------***   00466400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00466500
                    AIF   (N'&REXXOUTDSN LE 1).ZE52A  CK NUM            00466600
&ZMS                SETC  '"REXXOUTDSN='                                00466700
&ZMS                SETC  '&ZMS.&REXXOUTDSN"'                           00466800
&ZMS                SETC  '&ZMS "REXXOUTDSN"'                           00466900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00467000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00467100
.ZE52A              ANOP  ,                                             00467200
.*-------------------------------------------------------------------   00467300
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00467400
                    AIF   (K'&REXXOUTDSN(1) LE 0).ZE52B NO PRM          00467500
&ZXREXXOUTDSN       SETC  'INPUT'     SET IN/OUTPUT                     00467600
&XREXXOUTDSN        SETC  '&REXXOUTDSN(1)'      SET XVARIABLE           00467700
                    AIF   (N'&REXXOUTDSN GT 1).ZE52B                    00467800
.*                  ANOP                                                00467900
&XREXXOUTDSN        SETC  '&REXXOUTDSN'         SET XVARIABLE           00468000
.ZE52B              ANOP  ,                                             00468100
.*-------------------------------------------------------------------   00468200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00468300
                    AIF   (K'&ZXREXXOUTDSN LE 0).ZE52R  NOT I/O         00468400
                    AIF   ('&XREXXOUTDSN'(1,1) NE '(').ZE52R            00468500
&ZCGPR              SETC  '&XREXXOUTDSN'(2,K'&XREXXOUTDSN-2)            00468600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE52P                  00468700
                    AIF   (K'&ZCGPR GT 2).ZE52Q                         00468800
                    AIF   ('&ZCGPR' EQ '0').ZE52Q                       00468900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00469000
                    AIF   (T'&ZCGPR NE 'N').ZE52Q  INVALID REG NAME     00469100
.ZE52P              ANOP  ,                                             00469200
                    AIF   (T'&ZCGPR NE 'N').ZE52R  NON NUMERIC          00469300
                    AIF   ('&ZCGPR' LT '2').ZE52Q                       00469400
                    AIF   ('&ZCGPR' LE '12').ZE52R                      00469500
.ZE52Q              ANOP  ,                                             00469600
&ZMS                SETC  '"REXXOUTDSN='                                00469700
&ZMS                SETC  '&ZMS.&REXXOUTDSN"'                           00469800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00469900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00470000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00470100
.ZE52R              ANOP  ,                                             00470200
.*----------------------------------------------------------------***   00470300
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00470400
                    AIF   (N'&REXXOUTMEMNAME LE 1).ZE54A  CK NUM        00470500
&ZMS                SETC  '"REXXOUTMEMNAME='                            00470600
&ZMS                SETC  '&ZMS.&REXXOUTMEMNAME"'                       00470700
&ZMS                SETC  '&ZMS "REXXOUTMEMNAME"'                       00470800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00470900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00471000
.ZE54A              ANOP  ,                                             00471100
.*-------------------------------------------------------------------   00471200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00471300
                    AIF   (K'&REXXOUTMEMNAME(1) LE 0).ZE54B NO PRM      00471400
&ZXREXXOUTMEMNAME   SETC  'INPUT'     SET IN/OUTPUT                     00471500
&XREXXOUTMEMNAME    SETC  '&REXXOUTMEMNAME(1)'  SET XVARIABLE           00471600
                    AIF   (N'&REXXOUTMEMNAME GT 1).ZE54B                00471700
.*                  ANOP                                                00471800
&XREXXOUTMEMNAME    SETC  '&REXXOUTMEMNAME'     SET XVARIABLE           00471900
.ZE54B              ANOP  ,                                             00472000
.*-------------------------------------------------------------------   00472100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00472200
                    AIF   (K'&ZXREXXOUTMEMNAME LE 0).ZE54R  NOT I/O     00472300
                    AIF   ('&XREXXOUTMEMNAME'(1,1) NE '(').ZE54R        00472400
&ZCGPR              SETC  '&XREXXOUTMEMNAME'(2,K'&XREXXOUTMEMNAME-2)    00472500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE54P                  00472600
                    AIF   (K'&ZCGPR GT 2).ZE54Q                         00472700
                    AIF   ('&ZCGPR' EQ '0').ZE54Q                       00472800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00472900
                    AIF   (T'&ZCGPR NE 'N').ZE54Q  INVALID REG NAME     00473000
.ZE54P              ANOP  ,                                             00473100
                    AIF   (T'&ZCGPR NE 'N').ZE54R  NON NUMERIC          00473200
                    AIF   ('&ZCGPR' LT '2').ZE54Q                       00473300
                    AIF   ('&ZCGPR' LE '12').ZE54R                      00473400
.ZE54Q              ANOP  ,                                             00473500
&ZMS                SETC  '"REXXOUTMEMNAME='                            00473600
&ZMS                SETC  '&ZMS.&REXXOUTMEMNAME"'                       00473700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00473800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00473900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00474000
.ZE54R              ANOP  ,                                             00474100
.*----------------------------------------------------------------***   00474200
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00474300
                    AIF   (N'&REXXDIAG LE 1).ZE58A  CK NUM              00474400
&ZMS                SETC  '"REXXDIAG='                                  00474500
&ZMS                SETC  '&ZMS.&REXXDIAG"'                             00474600
&ZMS                SETC  '&ZMS "REXXDIAG"'                             00474700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00474800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00474900
.ZE58A              ANOP  ,                                             00475000
.*-------------------------------------------------------------------   00475100
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00475200
                    AIF   (K'&REXXDIAG(1) LE 0).ZE58B NO PRM            00475300
&ZXREXXDIAG         SETC  'OUTPUT'    SET IN/OUTPUT                     00475400
&XREXXDIAG          SETC  '&REXXDIAG(1)'        SET XVARIABLE           00475500
                    AIF   (N'&REXXDIAG GT 1).ZE58B                      00475600
.*                  ANOP                                                00475700
&XREXXDIAG          SETC  '&REXXDIAG'           SET XVARIABLE           00475800
.ZE58B              ANOP  ,                                             00475900
.*-------------------------------------------------------------------   00476000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00476100
                    AIF   (K'&ZXREXXDIAG LE 0).ZE58R  NOT I/O           00476200
                    AIF   ('&XREXXDIAG'(1,1) NE '(').ZE58R              00476300
&ZCGPR              SETC  '&XREXXDIAG'(2,K'&XREXXDIAG-2)                00476400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE58P                  00476500
                    AIF   (K'&ZCGPR GT 2).ZE58Q                         00476600
                    AIF   ('&ZCGPR' EQ '0').ZE58Q                       00476700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00476800
                    AIF   (T'&ZCGPR NE 'N').ZE58Q  INVALID REG NAME     00476900
.ZE58P              ANOP  ,                                             00477000
                    AIF   (T'&ZCGPR NE 'N').ZE58R  NON NUMERIC          00477100
                    AIF   ('&ZCGPR' LT '2').ZE58Q                       00477200
                    AIF   ('&ZCGPR' LE '12').ZE58R                      00477300
.ZE58Q              ANOP  ,                                             00477400
&ZMS                SETC  '"REXXDIAG='                                  00477500
&ZMS                SETC  '&ZMS.&REXXDIAG"'                             00477600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00477700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00477800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00477900
.ZE58R              ANOP  ,                                             00478000
.*-------------------------------------------------------------------   00478100
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00478200
&ZTLC               SETC 'YES'                                          00478300
                    AIF   ('&SYNC(1)' NE '&ZTLC').ZE62A                 00478400
&XSYNC              SETC  'YES'       SET KEYWORD                       00478500
                    AIF   (N'&SYNC LE 1).ZE62A  CK NUM                  00478600
&ZMS                SETC  '"SYNC='                                      00478700
&ZMS                SETC  '&ZMS.&SYNC"'                                 00478800
&ZMS                SETC  '&ZMS "SYNC"'                                 00478900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00479000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00479100
.ZE62A              ANOP  ,                                             00479200
.*-------------------------------------------------------------------   00479300
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00479400
&ZTLC               SETC 'NO'                                           00479500
                    AIF   ('&SYNC(1)' NE '&ZTLC').ZE63A                 00479600
&XSYNC              SETC  'NO'        SET KEYWORD                       00479700
                    AIF   (N'&SYNC LE 1).ZE63A  CK NUM                  00479800
&ZMS                SETC  '"SYNC='                                      00479900
&ZMS                SETC  '&ZMS.&SYNC"'                                 00480000
&ZMS                SETC  '&ZMS "SYNC"'                                 00480100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00480200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00480300
.ZE63A              ANOP  ,                                             00480400
.*----------------------------------------------------------------***   00480500
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00480600
                    AIF   (N'&OREQTOKEN LE 1).ZE65A  CK NUM             00480700
&ZMS                SETC  '"OREQTOKEN='                                 00480800
&ZMS                SETC  '&ZMS.&OREQTOKEN"'                            00480900
&ZMS                SETC  '&ZMS "OREQTOKEN"'                            00481000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00481100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00481200
.ZE65A              ANOP  ,                                             00481300
.*-------------------------------------------------------------------   00481400
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00481500
                    AIF   (K'&OREQTOKEN(1) LE 0).ZE65B NO PRM           00481600
&ZXOREQTOKEN        SETC  'OUTPUT'    SET IN/OUTPUT                     00481700
&XOREQTOKEN         SETC  '&OREQTOKEN(1)'       SET XVARIABLE           00481800
                    AIF   (N'&OREQTOKEN GT 1).ZE65B                     00481900
.*                  ANOP                                                00482000
&XOREQTOKEN         SETC  '&OREQTOKEN'          SET XVARIABLE           00482100
.ZE65B              ANOP  ,                                             00482200
.*-------------------------------------------------------------------   00482300
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00482400
                    AIF   (K'&ZXOREQTOKEN LE 0).ZE65R  NOT I/O          00482500
                    AIF   ('&XOREQTOKEN'(1,1) NE '(').ZE65R             00482600
&ZCGPR              SETC  '&XOREQTOKEN'(2,K'&XOREQTOKEN-2)              00482700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE65P                  00482800
                    AIF   (K'&ZCGPR GT 2).ZE65Q                         00482900
                    AIF   ('&ZCGPR' EQ '0').ZE65Q                       00483000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00483100
                    AIF   (T'&ZCGPR NE 'N').ZE65Q  INVALID REG NAME     00483200
.ZE65P              ANOP  ,                                             00483300
                    AIF   (T'&ZCGPR NE 'N').ZE65R  NON NUMERIC          00483400
                    AIF   ('&ZCGPR' LT '2').ZE65Q                       00483500
                    AIF   ('&ZCGPR' LE '12').ZE65R                      00483600
.ZE65Q              ANOP  ,                                             00483700
&ZMS                SETC  '"OREQTOKEN='                                 00483800
&ZMS                SETC  '&ZMS.&OREQTOKEN"'                            00483900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00484000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00484100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00484200
.ZE65R              ANOP  ,                                             00484300
.*-------------------------------------------------------------------   00484400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00484500
&ZTLC               SETC 'NO_COMPEXIT'                                  00484600
                    AIF   ('&COMPEXIT(1)' NE '&ZTLC').ZE69A             00484700
&XCOMPEXIT          SETC  'NO_COMPEXIT'         SET KEYWORD             00484800
                    AIF   (N'&COMPEXIT LE 1).ZE69A  CK NUM              00484900
&ZMS                SETC  '"COMPEXIT='                                  00485000
&ZMS                SETC  '&ZMS.&COMPEXIT"'                             00485100
&ZMS                SETC  '&ZMS "COMPEXIT"'                             00485200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00485300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00485400
.ZE69A              ANOP  ,                                             00485500
.*-------------------------------------------------------------------   00485600
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00485700
&ZTLC               SETC 'LINK'                                         00485800
                    AIF   ('&COMPEXIT(1)' NE '&ZTLC').ZE70A             00485900
&XCOMPEXIT          SETC  'LINK'      SET KEYWORD                       00486000
                    AIF   (N'&COMPEXIT LE 1).ZE70A  CK NUM              00486100
&ZMS                SETC  '"COMPEXIT='                                  00486200
&ZMS                SETC  '&ZMS.&COMPEXIT"'                             00486300
&ZMS                SETC  '&ZMS "COMPEXIT"'                             00486400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00486500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00486600
.ZE70A              ANOP  ,                                             00486700
.*----------------------------------------------------------------***   00486800
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00486900
                    AIF   (N'&LINKEP LE 1).ZE72A  CK NUM                00487000
&ZMS                SETC  '"LINKEP='                                    00487100
&ZMS                SETC  '&ZMS.&LINKEP"'                               00487200
&ZMS                SETC  '&ZMS "LINKEP"'                               00487300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00487400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00487500
.ZE72A              ANOP  ,                                             00487600
.*-------------------------------------------------------------------   00487700
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00487800
                    AIF   (K'&LINKEP(1) LE 0).ZE72B NO PRM              00487900
&ZXLINKEP           SETC  'INPUT'     SET IN/OUTPUT                     00488000
&XLINKEP            SETC  '&LINKEP(1)'          SET XVARIABLE           00488100
                    AIF   (N'&LINKEP GT 1).ZE72B                        00488200
.*                  ANOP                                                00488300
&XLINKEP            SETC  '&LINKEP'   SET XVARIABLE                     00488400
.ZE72B              ANOP  ,                                             00488500
.*-------------------------------------------------------------------   00488600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00488700
                    AIF   (K'&ZXLINKEP LE 0).ZE72R  NOT I/O             00488800
                    AIF   ('&XLINKEP'(1,1) NE '(').ZE72R                00488900
&ZCGPR              SETC  '&XLINKEP'(2,K'&XLINKEP-2)                    00489000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE72P                  00489100
                    AIF   (K'&ZCGPR GT 2).ZE72Q                         00489200
                    AIF   ('&ZCGPR' EQ '0').ZE72Q                       00489300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00489400
                    AIF   (T'&ZCGPR NE 'N').ZE72Q  INVALID REG NAME     00489500
.ZE72P              ANOP  ,                                             00489600
                    AIF   (T'&ZCGPR NE 'N').ZE72R  NON NUMERIC          00489700
                    AIF   ('&ZCGPR' LT '2').ZE72Q                       00489800
                    AIF   ('&ZCGPR' LE '12').ZE72R                      00489900
.ZE72Q              ANOP  ,                                             00490000
&ZMS                SETC  '"LINKEP='                                    00490100
&ZMS                SETC  '&ZMS.&LINKEP"'                               00490200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00490300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00490400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00490500
.ZE72R              ANOP  ,                                             00490600
.*------------------------------------------------------------------    00490700
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00490800
.ZE74               AIF   (K'&XCOMPEXIT GT 0).ZE74A                     00490900
                    AIF   (K'&COMPEXIT(1) LE 0).ZE74B                   00491000
&ZMS                SETC  '"COMPEXIT='                                  00491100
&ZMS                SETC  '&ZMS.&COMPEXIT"'                             00491200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00491300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00491400
&ZMS                SETC  '&ZMS "NO_COMPEXIT"'                          00491500
&ZMS                SETC  '&ZMS OR "LINK".'                             00491600
                    MNOTE 8,' &ZMS '                                    00491700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00491800
                    AGO   .ZE74B                                        00491900
.*                                                                      00492000
.ZE74A              ANOP  ,                                             00492100
&ZXCOMPEXIT         SETC  'INPUT'     SET IN/OUTPUT                     00492200
.ZE74B              ANOP  ,                                             00492300
.*------------------------------------------------------------------    00492400
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492500
.ZE75               AIF   (K'&XSYNC GT 0).ZE75A                         00492600
                    AIF   (K'&SYNC(1) LE 0).ZE75B                       00492700
&ZMS                SETC  '"SYNC='                                      00492800
&ZMS                SETC  '&ZMS.&SYNC"'                                 00492900
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00493000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00493100
&ZMS                SETC  '&ZMS "YES"'                                  00493200
&ZMS                SETC  '&ZMS OR "NO".'                               00493300
                    MNOTE 8,' &ZMS '                                    00493400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00493500
                    AGO   .ZE75B                                        00493600
.*                                                                      00493700
.ZE75A              ANOP  ,                                             00493800
&ZXSYNC             SETC  'INPUT'     SET IN/OUTPUT                     00493900
.ZE75B              ANOP  ,                                             00494000
.*-------------------------------------------------------------------   00494100
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00494200
&ZTLC               SETC 'CANCEL'                                       00494300
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE76A              00494400
&XREQUEST           SETC  'CANCEL'    SET KEYWORD                       00494500
                    AIF   (N'&REQUEST LE 1).ZE76A  CK NUM               00494600
&ZMS                SETC  '"REQUEST='                                   00494700
&ZMS                SETC  '&ZMS.&REQUEST"'                              00494800
&ZMS                SETC  '&ZMS "REQUEST"'                              00494900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00495000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00495100
.ZE76A              ANOP  ,                                             00495200
.*----------------------------------------------------------------***   00495300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00495400
                    AIF   (N'&REQTOKEN LE 1).ZE78A  CK NUM              00495500
&ZMS                SETC  '"REQTOKEN='                                  00495600
&ZMS                SETC  '&ZMS.&REQTOKEN"'                             00495700
&ZMS                SETC  '&ZMS "REQTOKEN"'                             00495800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00495900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00496000
.ZE78A              ANOP  ,                                             00496100
.*-------------------------------------------------------------------   00496200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00496300
                    AIF   (K'&REQTOKEN(1) LE 0).ZE78B NO PRM            00496400
&ZXREQTOKEN         SETC  'INPUT'     SET IN/OUTPUT                     00496500
&XREQTOKEN          SETC  '&REQTOKEN(1)'        SET XVARIABLE           00496600
                    AIF   (N'&REQTOKEN GT 1).ZE78B                      00496700
.*                  ANOP                                                00496800
&XREQTOKEN          SETC  '&REQTOKEN'           SET XVARIABLE           00496900
.ZE78B              ANOP  ,                                             00497000
.*-------------------------------------------------------------------   00497100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00497200
                    AIF   (K'&ZXREQTOKEN LE 0).ZE78R  NOT I/O           00497300
                    AIF   ('&XREQTOKEN'(1,1) NE '(').ZE78R              00497400
&ZCGPR              SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                00497500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE78P                  00497600
                    AIF   (K'&ZCGPR GT 2).ZE78Q                         00497700
                    AIF   ('&ZCGPR' EQ '0').ZE78Q                       00497800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00497900
                    AIF   (T'&ZCGPR NE 'N').ZE78Q  INVALID REG NAME     00498000
.ZE78P              ANOP  ,                                             00498100
                    AIF   (T'&ZCGPR NE 'N').ZE78R  NON NUMERIC          00498200
                    AIF   ('&ZCGPR' LT '2').ZE78Q                       00498300
                    AIF   ('&ZCGPR' LE '12').ZE78R                      00498400
.ZE78Q              ANOP  ,                                             00498500
&ZMS                SETC  '"REQTOKEN='                                  00498600
&ZMS                SETC  '&ZMS.&REQTOKEN"'                             00498700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00498800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00498900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00499000
.ZE78R              ANOP  ,                                             00499100
.*-------------------------------------------------------------------   00499200
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00499300
&ZTLC               SETC 'GETREXXLIB'                                   00499400
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE80A              00499500
&XREQUEST           SETC  'GETREXXLIB'          SET KEYWORD             00499600
                    AIF   (N'&REQUEST LE 1).ZE80A  CK NUM               00499700
&ZMS                SETC  '"REQUEST='                                   00499800
&ZMS                SETC  '&ZMS.&REQUEST"'                              00499900
&ZMS                SETC  '&ZMS "REQUEST"'                              00500000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00500100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00500200
.ZE80A              ANOP  ,                                             00500300
.*----------------------------------------------------------------***   00500400
.***AE.KXVAR03 NAME, RQD OUTPUT, KEYS -XVAR KEY                         00500500
                    AIF   (N'&REXXLIB LE 1).ZE82A  CK NUM               00500600
&ZMS                SETC  '"REXXLIB='                                   00500700
&ZMS                SETC  '&ZMS.&REXXLIB"'                              00500800
&ZMS                SETC  '&ZMS "REXXLIB"'                              00500900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00501000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00501100
.ZE82A              ANOP  ,                                             00501200
.*-------------------------------------------------------------------   00501300
.***AE.KXVAR04 NAME, RQD OUTPUT, KEYS -XVAR ARGUMENT                    00501400
                    AIF   (K'&REXXLIB(1) LE 0).ZE82B NO PRM             00501500
&ZXREXXLIB          SETC  'OUTPUT'    SET IN/OUTPUT                     00501600
&XREXXLIB           SETC  '&REXXLIB(1)'         SET XVARIABLE           00501700
                    AIF   (N'&REXXLIB GT 1).ZE82B                       00501800
.*                  ANOP                                                00501900
&XREXXLIB           SETC  '&REXXLIB'  SET XVARIABLE                     00502000
.ZE82B              ANOP  ,                                             00502100
.*-------------------------------------------------------------------   00502200
.***AE.KCK01 NAME, RQD OUTPUT, KEYS -GPR NOT ALLOWED                    00502300
                    AIF   (K'&ZXREXXLIB LE 0).ZE82P  NOT I/O            00502400
                    AIF   ('&XREXXLIB'(1,1) NE '(').ZE82P               00502500
&ZXREXXLIB          SETC  ''          RESET IN/OUTPUT                   00502600
&ZMS                SETC  '"REXXLIB='                                   00502700
&ZMS                SETC  '&ZMS.&REXXLIB"'                              00502800
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00502900
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'             00503000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00503100
.ZE82P              ANOP  ,                                             00503200
.*----------------------------------------------------------------***   00503300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00503400
                    AIF   (N'&REXXLIBLEN LE 1).ZE85A  CK NUM            00503500
&ZMS                SETC  '"REXXLIBLEN='                                00503600
&ZMS                SETC  '&ZMS.&REXXLIBLEN"'                           00503700
&ZMS                SETC  '&ZMS "REXXLIBLEN"'                           00503800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00503900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00504000
.ZE85A              ANOP  ,                                             00504100
.*-------------------------------------------------------------------   00504200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00504300
                    AIF   (K'&REXXLIBLEN(1) LE 0).ZE85B NO PRM          00504400
&ZXREXXLIBLEN       SETC  'INPUT'     SET IN/OUTPUT                     00504500
&XREXXLIBLEN        SETC  '&REXXLIBLEN(1)'      SET XVARIABLE           00504600
                    AIF   (N'&REXXLIBLEN GT 1).ZE85B                    00504700
.*                  ANOP                                                00504800
&XREXXLIBLEN        SETC  '&REXXLIBLEN'         SET XVARIABLE           00504900
.ZE85B              ANOP  ,                                             00505000
.*-------------------------------------------------------------------   00505100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00505200
                    AIF   (K'&ZXREXXLIBLEN LE 0).ZE85R  NOT I/O         00505300
                    AIF   ('&XREXXLIBLEN'(1,1) NE '(').ZE85R            00505400
&ZCGPR              SETC  '&XREXXLIBLEN'(2,K'&XREXXLIBLEN-2)            00505500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE85P                  00505600
                    AIF   (K'&ZCGPR GT 2).ZE85Q                         00505700
                    AIF   ('&ZCGPR' EQ '0').ZE85Q                       00505800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00505900
                    AIF   (T'&ZCGPR NE 'N').ZE85Q  INVALID REG NAME     00506000
.ZE85P              ANOP  ,                                             00506100
                    AIF   (T'&ZCGPR NE 'N').ZE85R  NON NUMERIC          00506200
                    AIF   ('&ZCGPR' LT '2').ZE85Q                       00506300
                    AIF   ('&ZCGPR' LE '12').ZE85R                      00506400
.ZE85Q              ANOP  ,                                             00506500
&ZMS                SETC  '"REXXLIBLEN='                                00506600
&ZMS                SETC  '&ZMS.&REXXLIBLEN"'                           00506700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00506800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00506900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00507000
.ZE85R              ANOP  ,                                             00507100
.*------------------------------------------------------------------    00507200
.***AE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00507300
.ZE87               AIF   (K'&XREQUEST GT 0).ZE87A                      00507400
                    AIF   (K'&REQUEST(1) LE 0).ZE87B                    00507500
&ZMS                SETC  '"REQUEST='                                   00507600
&ZMS                SETC  '&ZMS.&REQUEST"'                              00507700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00507800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00507900
&ZMS                SETC  '&ZMS "EXECUTE",'                             00508000
&ZMS                SETC  '&ZMS "CANCEL",'                              00508100
&ZMS                SETC  '&ZMS OR "GETREXXLIB".'                       00508200
                    MNOTE 8,' &ZMS '                                    00508300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00508400
                    AGO   .ZE87B                                        00508500
.*                                                                      00508600
.ZE87A              ANOP  ,                                             00508700
&ZXREQUEST          SETC  'INPUT'     SET IN/OUTPUT                     00508800
.ZE87B              ANOP  ,                                             00508900
.*----------------------------------------------------------------***   00509000
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00509100
                    AIF   (N'&RETCODE LE 1).ZE89A  CK NUM               00509200
&ZMS                SETC  '"RETCODE='                                   00509300
&ZMS                SETC  '&ZMS.&RETCODE"'                              00509400
&ZMS                SETC  '&ZMS "RETCODE"'                              00509500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00509600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00509700
.ZE89A              ANOP  ,                                             00509800
.*-------------------------------------------------------------------   00509900
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00510000
                    AIF   (K'&RETCODE(1) LE 0).ZE89B NO PRM             00510100
&ZXRETCODE          SETC  'OUTPUT'    SET IN/OUTPUT                     00510200
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00510300
                    AIF   (N'&RETCODE GT 1).ZE89B                       00510400
.*                  ANOP                                                00510500
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00510600
.ZE89B              ANOP  ,                                             00510700
.*-------------------------------------------------------------------   00510800
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00510900
                    AIF   (K'&ZXRETCODE LE 0).ZE89R  NOT I/O            00511000
                    AIF   ('&XRETCODE'(1,1) NE '(').ZE89R               00511100
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00511200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE89P                  00511300
                    AIF   (K'&ZCGPR GT 2).ZE89Q                         00511400
                    AIF   ('&ZCGPR' EQ '0').ZE89Q                       00511500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00511600
                    AIF   (T'&ZCGPR NE 'N').ZE89Q  INVALID REG NAME     00511700
.ZE89P              ANOP  ,                                             00511800
                    AIF   (T'&ZCGPR NE 'N').ZE89R  NON NUMERIC          00511900
                    AIF   ('&ZCGPR' LT '2').ZE89Q                       00512000
                    AIF   ('&ZCGPR' LE '12').ZE89R                      00512100
.ZE89Q              ANOP  ,                                             00512200
&ZMS                SETC  '"RETCODE='                                   00512300
&ZMS                SETC  '&ZMS.&RETCODE"'                              00512400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00512500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00512600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00512700
.ZE89R              ANOP  ,                                             00512800
.*----------------------------------------------------------------***   00512900
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00513000
                    AIF   (N'&RSNCODE LE 1).ZE92A  CK NUM               00513100
&ZMS                SETC  '"RSNCODE='                                   00513200
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00513300
&ZMS                SETC  '&ZMS "RSNCODE"'                              00513400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00513500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00513600
.ZE92A              ANOP  ,                                             00513700
.*-------------------------------------------------------------------   00513800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00513900
                    AIF   (K'&RSNCODE(1) LE 0).ZE92B NO PRM             00514000
&ZXRSNCODE          SETC  'OUTPUT'    SET IN/OUTPUT                     00514100
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00514200
                    AIF   (N'&RSNCODE GT 1).ZE92B                       00514300
.*                  ANOP                                                00514400
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00514500
.ZE92B              ANOP  ,                                             00514600
.*-------------------------------------------------------------------   00514700
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00514800
                    AIF   (K'&ZXRSNCODE LE 0).ZE92R  NOT I/O            00514900
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZE92R               00515000
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00515100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE92P                  00515200
                    AIF   (K'&ZCGPR GT 2).ZE92Q                         00515300
                    AIF   ('&ZCGPR' EQ '0').ZE92Q                       00515400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00515500
                    AIF   (T'&ZCGPR NE 'N').ZE92Q  INVALID REG NAME     00515600
.ZE92P              ANOP  ,                                             00515700
                    AIF   (T'&ZCGPR NE 'N').ZE92R  NON NUMERIC          00515800
                    AIF   ('&ZCGPR' LT '2').ZE92Q                       00515900
                    AIF   ('&ZCGPR' LE '12').ZE92R                      00516000
.ZE92Q              ANOP  ,                                             00516100
&ZMS                SETC  '"RSNCODE='                                   00516200
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00516300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00516400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00516500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00516600
.ZE92R              ANOP  ,                                             00516700
.******************************************************************     00516800
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00516900
.******************************************************************     00517000
                    ACTR  10000                                         00517100
.*----------------------------------------------------------------***   00517200
.***AF.P02 EXTRA POSITIONALS                                            00517300
                    AIF   (N'&SYSLIST LE 0).ZELISTX  NO EXTRAS          00517400
&ZCVAL              SETC  ''          ERROR FIELD                       00517500
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00517600
.ZELIST2            ANOP  ,                                             00517700
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00517800
                    AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE          00517900
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00518000
                    AGO   .ZELIST2                                      00518100
.*                                                                      00518200
.ZELIST3            ANOP  ,                                             00518300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00518400
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00518500
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00518600
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00518700
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00518800
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00518900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00519000
.ZELISTX            ANOP  ,                                             00519100
&ZASYSLNDX          SETA  0                                             00519200
.*-------------------------------------------------------------------   00519300
.***AE.MF02 MF=(SLME)                                                   00519400
.ZEMFX              ANOP  ,           END OF PARTIAL SYNTAX CHECK       00519500
.*******************************************************************    00519600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00519700
.*******************************************************************    00519800
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00519900
.*******************************************************************    00520000
.***AE.01  START OF AXREXX MACRO CODE                                   00520100
.*******************************************************************    00520200
                    LCLC  &M0M0001                 NAME                 00520300
&M0M0001            SETC  '&XLABEL'                SET NAME             00520400
                    AIF   (K'&XLABEL NE 0).XLAB2                        00520500
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00520600
.*                                                                      00520700
.XLAB2              ANOP  ,                                             00520800
                    AIF   ('&XMF' EQ 'L').XLAB3                         00520900
&M0M0001 DS    0H                             AXREXX-0                  00521000
.XLAB3              ANOP  ,                                             00521100
.*******************************************************************    00521200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00521300
.*******************************************************************    00521400
              PUSH  PRINT                                               00521500
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00521600
                    PRINT OFF         ++ PR01                           00521700
                    AGO   .ZPRNTXX                                      00521800
.ZPRINTX            PRINT ON                                            00521900
.ZPRNTXX            ANOP  ,                                             00522000
.********************************************************************   00522100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00522200
.********************************************************************   00522300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00522400
                      LCLA  &ZOPN1         INVOCATION INDEX             00522500
                      LCLC  &ZOPL(4095)    LABEL                        00522600
                      LCLC  &ZOPO(4095)    OPERATION                    00522700
                      LCLC  &ZOPV(4095)    VALUE                        00522800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00522900
.*                                                                      00523000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00523100
.******************************************************************     00523200
.***AL.L10 AXREXX FMT=LIST MF=S!L PARAMETERS                            00523300
.******************************************************************     00523400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00523500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00523600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00523700
&XMFATTR              SETC  '0D'                                        00523800
.*                                                                      00523900
&ZOPN                 SETA  &ZOPN+1                                     00524000
&ZOPL(&ZOPN)          SETC  ' '                                         00524100
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00524200
&ZOPV(&ZOPN)          SETC  '4,8'                                       00524300
&ZOPN                 SETA  &ZOPN+1                                     00524400
&ZOPL(&ZOPN)          SETC  ' '                                         00524500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00524600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00524700
&ZOPD(&ZOPN)          SETC  '++ AXREXX ARG PARMS'                       00524800
.*                                                                      00524900
&ZOPN                 SETA  &ZOPN+1                                     00525000
&ZOPL(&ZOPN)          SETC  ' '                                         00525100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00525200
&ZOPV(&ZOPN)          SETC  '1'                                         00525300
&ZOPD(&ZOPN)          SETC  ' '                                         00525400
.*                                                                      00525500
.ZLMFSL2              ANOP  ,                                           00525600
.*-------------------------------------------------------------------   00525700
.***AM.L00  AXREXX FMT=LIST name                                        00525800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00525900
&ZOPN                 SETA &ZOPN+1                                      00526000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00526100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00526200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00526300
&ZOPD(&ZOPN)          SETC '++ AXREXX NAME'                             00526400
.ZLMFSL2M             ANOP  ,                                           00526500
.*-------------------------------------------------------------------   00526600
.***AM.L01  AXREXX FMT=LIST PARAMETERS                                  00526700
&ZOPN                 SETA &ZOPN+1                                      00526800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00526900
&ZOPO(&ZOPN)          SETC 'DS'                                         00527000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00527100
&ZOPD(&ZOPN)          SETC '++ AXREXX PARM LIST'                        00527200
.*-------------------------------------------------------------------   00527300
.***AM.L02 XVERSION XL1                                                 00527400
&ZOPN                 SETA &ZOPN+1                                      00527500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00527600
&ZOPO(&ZOPN)          SETC 'DS'                                         00527700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00527800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00527900
.*-------------------------------------------------------------------   00528000
.***AM.L03 XFLAGS1 BL.8                                                 00528100
&ZOPN                 SETA &ZOPN+1                                      00528200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          00528300
&ZOPO(&ZOPN)          SETC 'DS'                                         00528400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00528500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00528600
.*                                                                      00528700
&ZOPN                 SETA  &ZOPN+1                                     00528800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_UTOKEN'                  00528900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00529000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00529100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00529200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UTOKEN'                       00529300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00529400
.*                                                                      00529500
&ZOPN                 SETA  &ZOPN+1                                     00529600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REXXARGS'                00529700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00529800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00529900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00530000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REXXARGS'                     00530100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00530200
.*                                                                      00530300
&ZOPN                 SETA  &ZOPN+1                                     00530400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TIMEINT'                 00530500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00530600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00530700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00530800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TIMEINT'                      00530900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00531000
.*                                                                      00531100
&ZOPN                 SETA  &ZOPN+1                                     00531200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REXXINDSN'               00531300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00531400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00531500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00531600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REXXINDSN'                    00531700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00531800
.*                                                                      00531900
&ZOPN                 SETA  &ZOPN+1                                     00532000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REXXOUTDSN'              00532100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00532200
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00532300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00532400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REXXOUTDSN'                   00532500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00532600
.*                                                                      00532700
&ZOPN                 SETA  &ZOPN+1                                     00532800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REXXDIAG'                00532900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00533000
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00533100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00533200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REXXDIAG'                     00533300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00533400
.*                                                                      00533500
&ZOPN                 SETA  &ZOPN+1                                     00533600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REXXVARS'                00533700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00533800
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00533900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00534000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REXXVARS'                     00534100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00534200
.*                                                                      00534300
&ZOPN                 SETA  &ZOPN+1                                     00534400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REXXINMEMNAME'           00534500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00534600
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00534700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00534800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REXXINMEMNAME'                00534900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00535000
.*-------------------------------------------------------------------   00535100
.***AM.L03 XFLAGS2 BL.8                                                 00535200
&ZOPN                 SETA &ZOPN+1                                      00535300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS2'                          00535400
&ZOPO(&ZOPN)          SETC 'DS'                                         00535500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00535600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00535700
.*                                                                      00535800
&ZOPN                 SETA  &ZOPN+1                                     00535900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYNC_YES'                       00536000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00536100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00536200
&ZOPD(&ZOPN)          SETC  '++ XSYNC.'                                 00536300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00536400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00536500
.*                                                                      00536600
&ZOPN                 SETA  &ZOPN+1                                     00536700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTIMELIMIT_YES'                  00536800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00536900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00537000
&ZOPD(&ZOPN)          SETC  '++ XTIMELIMIT.'                            00537100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00537200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00537300
.*                                                                      00537400
&ZOPN                 SETA  &ZOPN+1                                     00537500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCOMPEXIT_LINK'                  00537600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00537700
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00537800
&ZOPD(&ZOPN)          SETC  '++ XCOMPEXIT.'                             00537900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LINK'                         00538000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00538100
.*                                                                      00538200
&ZOPN                 SETA  &ZOPN+1                                     00538300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCONSDATA_YES'                   00538400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00538500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00538600
&ZOPD(&ZOPN)          SETC  '++ XCONSDATA.'                             00538700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00538800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00538900
.*                                                                      00539000
&ZOPN                 SETA  &ZOPN+1                                     00539100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REXXOUTMEMNAME'          00539200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00539300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00539400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00539500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REXXOUTMEMNAME'               00539600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00539700
.*                                                                      00539800
&ZOPN                 SETA  &ZOPN+1                                     00539900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTSO_YES'                        00540000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00540100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00540200
&ZOPD(&ZOPN)          SETC  '++ XTSO.'                                  00540300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00540400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00540500
.*                                                                      00540600
&ZOPN                 SETA  &ZOPN+1                                     00540700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSECURITY_BYAXRUSER'             00540800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00540900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00541000
&ZOPD(&ZOPN)          SETC  '++ XSECURITY.'                             00541100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BYAXRUSER'                    00541200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00541300
.*-------------------------------------------------------------------   00541400
.***AM.L05 XREQUEST XL1                                                 00541500
&ZOPN                 SETA &ZOPN+1                                      00541600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00541700
&ZOPO(&ZOPN)          SETC 'DS'                                         00541800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00541900
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00542000
.*                                                                      00542100
&ZOPN                 SETA  &ZOPN+1                                     00542200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_EXECUTE'                00542300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00542400
&ZOPV(&ZOPN)          SETC  '1'                                         00542500
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00542600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXECUTE'                      00542700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00542800
.*                                                                      00542900
&ZOPN                 SETA  &ZOPN+1                                     00543000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CANCEL'                 00543100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00543200
&ZOPV(&ZOPN)          SETC  '2'                                         00543300
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00543400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CANCEL'                       00543500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00543600
.*                                                                      00543700
&ZOPN                 SETA  &ZOPN+1                                     00543800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_GETREXXLIB'             00543900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00544000
&ZOPV(&ZOPN)          SETC  '3'                                         00544100
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00544200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GETREXXLIB'                   00544300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00544400
.*-------------------------------------------------------------------   00544500
.***AM.L09  XRESERVED1 CL4                                              00544600
&ZOPN                 SETA &ZOPN+1                                      00544700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESERVED1'                       00544800
&ZOPO(&ZOPN)          SETC 'DS'                                         00544900
&ZOPV(&ZOPN)          SETC 'CL4'                                        00545000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00545100
.*-------------------------------------------------------------------   00545200
.***AM.L09 ADDR3164 XREXXARGS AD                                        00545300
&ZOPN                 SETA &ZOPN+1                                      00545400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXARGS_ADDR3164'               00545500
&ZOPO(&ZOPN)          SETC 'DS'                                         00545600
&ZOPV(&ZOPN)          SETC 'AD'                                         00545700
&ZOPD(&ZOPN)          SETC '++ &ZXREXXARGS ADDR3164'                    00545800
.*-------------------------------------------------------------------   00545900
.***AM.L09 ADDR3164 XUTOKEN AD                                          00546000
&ZOPN                 SETA &ZOPN+1                                      00546100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUTOKEN_ADDR3164'                 00546200
&ZOPO(&ZOPN)          SETC 'DS'                                         00546300
&ZOPV(&ZOPN)          SETC 'AD'                                         00546400
&ZOPD(&ZOPN)          SETC '++ &ZXUTOKEN ADDR3164'                      00546500
.*-------------------------------------------------------------------   00546600
.***AM.L09 ADDR3164 XREXXVARS AD                                        00546700
&ZOPN                 SETA &ZOPN+1                                      00546800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXVARS_ADDR3164'               00546900
&ZOPO(&ZOPN)          SETC 'DS'                                         00547000
&ZOPV(&ZOPN)          SETC 'AD'                                         00547100
&ZOPD(&ZOPN)          SETC '++ &ZXREXXVARS ADDR3164'                    00547200
.*-------------------------------------------------------------------   00547300
.***AM.L09 ADDR3164 XREXXINDSN AD                                       00547400
&ZOPN                 SETA &ZOPN+1                                      00547500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXINDSN_ADDR3164'              00547600
&ZOPO(&ZOPN)          SETC 'DS'                                         00547700
&ZOPV(&ZOPN)          SETC 'AD'                                         00547800
&ZOPD(&ZOPN)          SETC '++ &ZXREXXINDSN ADDR3164'                   00547900
.*-------------------------------------------------------------------   00548000
.***AM.L09 ADDR3164 XREXXOUTDSN AD                                      00548100
&ZOPN                 SETA &ZOPN+1                                      00548200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXOUTDSN_ADDR3164'             00548300
&ZOPO(&ZOPN)          SETC 'DS'                                         00548400
&ZOPV(&ZOPN)          SETC 'AD'                                         00548500
&ZOPD(&ZOPN)          SETC '++ &ZXREXXOUTDSN ADDR3164'                  00548600
.*-------------------------------------------------------------------   00548700
.***AM.L09 ADDR3164 XREXXDIAG AD                                        00548800
&ZOPN                 SETA &ZOPN+1                                      00548900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXDIAG_ADDR3164'               00549000
&ZOPO(&ZOPN)          SETC 'DS'                                         00549100
&ZOPV(&ZOPN)          SETC 'AD'                                         00549200
&ZOPD(&ZOPN)          SETC '++ &ZXREXXDIAG ADDR3164'                    00549300
.*-------------------------------------------------------------------   00549400
.***AM.L09 ALET XUTOKEN F                                               00549500
&ZOPN                 SETA &ZOPN+1                                      00549600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUTOKEN_ALET'                     00549700
&ZOPO(&ZOPN)          SETC 'DS'                                         00549800
&ZOPV(&ZOPN)          SETC 'F'                                          00549900
&ZOPD(&ZOPN)          SETC '++ &ZXUTOKEN ALET'                          00550000
.*-------------------------------------------------------------------   00550100
.***AM.L09 ALET XREXXARGS F                                             00550200
&ZOPN                 SETA &ZOPN+1                                      00550300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXARGS_ALET'                   00550400
&ZOPO(&ZOPN)          SETC 'DS'                                         00550500
&ZOPV(&ZOPN)          SETC 'F'                                          00550600
&ZOPD(&ZOPN)          SETC '++ &ZXREXXARGS ALET'                        00550700
.*-------------------------------------------------------------------   00550800
.***AM.L09 ALET XREXXVARS F                                             00550900
&ZOPN                 SETA &ZOPN+1                                      00551000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXVARS_ALET'                   00551100
&ZOPO(&ZOPN)          SETC 'DS'                                         00551200
&ZOPV(&ZOPN)          SETC 'F'                                          00551300
&ZOPD(&ZOPN)          SETC '++ &ZXREXXVARS ALET'                        00551400
.*-------------------------------------------------------------------   00551500
.***AM.L09 ALET XREXXINDSN F                                            00551600
&ZOPN                 SETA &ZOPN+1                                      00551700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXINDSN_ALET'                  00551800
&ZOPO(&ZOPN)          SETC 'DS'                                         00551900
&ZOPV(&ZOPN)          SETC 'F'                                          00552000
&ZOPD(&ZOPN)          SETC '++ &ZXREXXINDSN ALET'                       00552100
.*-------------------------------------------------------------------   00552200
.***AM.L09 ALET XREXXOUTDSN F                                           00552300
&ZOPN                 SETA &ZOPN+1                                      00552400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXOUTDSN_ALET'                 00552500
&ZOPO(&ZOPN)          SETC 'DS'                                         00552600
&ZOPV(&ZOPN)          SETC 'F'                                          00552700
&ZOPD(&ZOPN)          SETC '++ &ZXREXXOUTDSN ALET'                      00552800
.*-------------------------------------------------------------------   00552900
.***AM.L09 ALET XREXXDIAG F                                             00553000
&ZOPN                 SETA &ZOPN+1                                      00553100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXDIAG_ALET'                   00553200
&ZOPO(&ZOPN)          SETC 'DS'                                         00553300
&ZOPV(&ZOPN)          SETC 'F'                                          00553400
&ZOPD(&ZOPN)          SETC '++ &ZXREXXDIAG ALET'                        00553500
.*-------------------------------------------------------------------   00553600
.***AM.L09  XTIMEINT F                                                  00553700
&ZOPN                 SETA &ZOPN+1                                      00553800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTIMEINT'                         00553900
&ZOPO(&ZOPN)          SETC 'DS'                                         00554000
&ZOPV(&ZOPN)          SETC 'F'                                          00554100
&ZOPD(&ZOPN)          SETC '++ &ZXTIMEINT '                             00554200
.*-------------------------------------------------------------------   00554300
.***AM.L09  XNAME CL8                                                   00554400
&ZOPN                 SETA &ZOPN+1                                      00554500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAME'                            00554600
&ZOPO(&ZOPN)          SETC 'DS'                                         00554700
&ZOPV(&ZOPN)          SETC 'CL8'                                        00554800
&ZOPD(&ZOPN)          SETC '++ &ZXNAME '                                00554900
.*-------------------------------------------------------------------   00555000
.***AM.L09  XLINKEP CL8                                                 00555100
&ZOPN                 SETA &ZOPN+1                                      00555200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLINKEP'                          00555300
&ZOPO(&ZOPN)          SETC 'DS'                                         00555400
&ZOPV(&ZOPN)          SETC 'CL8'                                        00555500
&ZOPD(&ZOPN)          SETC '++ &ZXLINKEP '                              00555600
.*-------------------------------------------------------------------   00555700
.***AM.L09  XCART CL8                                                   00555800
&ZOPN                 SETA &ZOPN+1                                      00555900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCART'                            00556000
&ZOPO(&ZOPN)          SETC 'DS'                                         00556100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00556200
&ZOPD(&ZOPN)          SETC '++ &ZXCART '                                00556300
.*-------------------------------------------------------------------   00556400
.***AM.L09  XCONSNAME CL8                                               00556500
&ZOPN                 SETA &ZOPN+1                                      00556600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONSNAME'                        00556700
&ZOPO(&ZOPN)          SETC 'DS'                                         00556800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00556900
&ZOPD(&ZOPN)          SETC '++ &ZXCONSNAME '                            00557000
.*-------------------------------------------------------------------   00557100
.***AM.L09  XREXXOUTMEMNAME CL8                                         00557200
&ZOPN                 SETA &ZOPN+1                                      00557300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXOUTMEMNAME'                  00557400
&ZOPO(&ZOPN)          SETC 'DS'                                         00557500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00557600
&ZOPD(&ZOPN)          SETC '++ &ZXREXXOUTMEMNAME '                      00557700
.*-------------------------------------------------------------------   00557800
.***AM.L09  XREXXINMEMNAME CL8                                          00557900
&ZOPN                 SETA &ZOPN+1                                      00558000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXINMEMNAME'                   00558100
&ZOPO(&ZOPN)          SETC 'DS'                                         00558200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00558300
&ZOPD(&ZOPN)          SETC '++ &ZXREXXINMEMNAME '                       00558400
.*-------------------------------------------------------------------   00558500
.***AM.L09  XREQTOKEN CL16                                              00558600
&ZOPN                 SETA &ZOPN+1                                      00558700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        00558800
&ZOPO(&ZOPN)          SETC 'DS'                                         00558900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00559000
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN '                            00559100
.*-------------------------------------------------------------------   00559200
.***AM.L09  XRSV068 CL68                                                00559300
&ZOPN                 SETA &ZOPN+1                                      00559400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV068'                          00559500
&ZOPO(&ZOPN)          SETC 'DS'                                         00559600
&ZOPV(&ZOPN)          SETC 'CL68'                                       00559700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00559800
.*-------------------------------------------------------------------   00559900
.***AM.MLM1 SAVED LOCATION COUNTER                                      00560000
                      AIF  ('&ZENDBASEPL' NE '').ZL44LB                 00560100
&ZENDBASEPL           SETC 'YES'                                        00560200
&ZOPN                 SETA &ZOPN+1                                      00560300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00560400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00560500
&ZOPV(&ZOPN)          SETC '*'                                          00560600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00560700
.ZL44LB               ANOP  ,                                           00560800
.*-------------------------------------------------------------------   00560900
.***AM.PJR1 DEFINED ON XREQTOKEN                                        00561000
&ZOPN                 SETA &ZOPN+1                                      00561100
&ZOPL(&ZOPN)          SETC ' '                                          00561200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00561300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              00561400
&ZOPD(&ZOPN)          SETC ' '                                          00561500
.*-------------------------------------------------------------------   00561600
.***AM.L09  XOREQTOKEN CL16                                             00561700
&ZOPN                 SETA &ZOPN+1                                      00561800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOREQTOKEN'                       00561900
&ZOPO(&ZOPN)          SETC 'DS'                                         00562000
&ZOPV(&ZOPN)          SETC 'CL16'                                       00562100
&ZOPD(&ZOPN)          SETC '++ &ZXOREQTOKEN '                           00562200
.*-------------------------------------------------------------------   00562300
.***AM.PJR1 DEFINED ON XTIMEINT                                         00562400
&ZOPN                 SETA &ZOPN+1                                      00562500
&ZOPL(&ZOPN)          SETC ' '                                          00562600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00562700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+80'                               00562800
&ZOPD(&ZOPN)          SETC ' '                                          00562900
.*-------------------------------------------------------------------   00563000
.***AM.L09 ADDR3164 XREXXLIB AD                                         00563100
&ZOPN                 SETA &ZOPN+1                                      00563200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXLIB_ADDR3164'                00563300
&ZOPO(&ZOPN)          SETC 'DS'                                         00563400
&ZOPV(&ZOPN)          SETC 'AD'                                         00563500
&ZOPD(&ZOPN)          SETC '++ &ZXREXXLIB ADDR3164'                     00563600
.*-------------------------------------------------------------------   00563700
.***AM.L09 ALET XREXXLIB F                                              00563800
&ZOPN                 SETA &ZOPN+1                                      00563900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXLIB_ALET'                    00564000
&ZOPO(&ZOPN)          SETC 'DS'                                         00564100
&ZOPV(&ZOPN)          SETC 'F'                                          00564200
&ZOPD(&ZOPN)          SETC '++ &ZXREXXLIB ALET'                         00564300
.*-------------------------------------------------------------------   00564400
.***AM.L09  XREXXLIBLEN F                                               00564500
&ZOPN                 SETA &ZOPN+1                                      00564600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREXXLIBLEN'                      00564700
&ZOPO(&ZOPN)          SETC 'DS'                                         00564800
&ZOPV(&ZOPN)          SETC 'F'                                          00564900
&ZOPD(&ZOPN)          SETC '++ &ZXREXXLIBLEN '                          00565000
&ZOPN                 SETA &ZOPN+1                                      00565100
&ZOPL(&ZOPN)          SETC ' '                                          00565200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00565300
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00565400
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00565500
.*-------------------------------------------------------------------   00565600
.***AM.L10 END OF AXREXX LIST PARAMETERS                                00565700
&ZOPN                 SETA &ZOPN+1                                      00565800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00565900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00566000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00566100
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00566200
.*                                                                      00566300
&ZOPN                 SETA &ZOPN+1                                      00566400
&ZOPL(&ZOPN)          SETC ' '                                          00566500
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00566600
&ZOPV(&ZOPN)          SETC '1'                                          00566700
&ZOPD(&ZOPN)          SETC ' '                                          00566800
.*-------------------------------------------------------------------   00566900
.***AL.L12 AXREXX FMT=LIST MF=S!L PARAMETERS                            00567000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00567100
.*                                                                      00567200
&ZOPN                 SETA  &ZOPN+1                                     00567300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00567400
&ZOPO(&ZOPN)          SETC  'DC'                                        00567500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00567600
&ZOPD(&ZOPN)          SETC  '++ AXREXX ARG PARMS'                       00567700
.*                                                                      00567800
.ZLMFSLX              ANOP  ,                                           00567900
.*-------------------------------------------------------------------   00568000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00568100
&ZPLLEN               SETA 216                                          00568200
.*                                                                      00568300
.******************************************************************     00568400
.***AI.L01 AXREXX FMT=LIST FILL IN PARAMETER AREA                       00568500
.******************************************************************     00568600
                      ACTR  10000                                       00568700
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00568800
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00568900
&ZCVAL                SETC  'LAE'          XAX MODE                     00569000
.ZIMFXA               ANOP ,                                            00569100
.*                                                                      00569200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00569300
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00569400
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00569500
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00569600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00569700
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00569800
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00569900
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00570000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00570100
&ZOPN                 SETA  &ZOPN+1                                     00570200
&ZOPL(&ZOPN)          SETC  ' '                                         00570300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00570400
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00570500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00570600
                      AGO   .ZIMFNX                                     00570700
.*                                                                      00570800
.ZIMFN2               ANOP ,                                            00570900
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00571000
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00571100
&ZOPN                 SETA  &ZOPN+1                                     00571200
&ZOPL(&ZOPN)          SETC  ' '                                         00571300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00571400
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00571500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00571600
                      AGO   .ZIMFNX                                     00571700
.ZIMFNX1              ANOP ,                                            00571800
&ZOPN                 SETA  &ZOPN+1                                     00571900
&ZOPL(&ZOPN)          SETC  ' '                                         00572000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00572100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00572200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00572300
.ZIMFNX               ANOP ,                                            00572400
.********************************************************************   00572500
.***AI.L02 AXREXX FMT=LIST INITIALIZE PARAMETER AREA                    00572600
.********************************************************************   00572700
.***AI.L03 MF=(SLME)                                                    00572800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00572900
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            00573000
.*                                                                      00573100
&ZOPN                 SETA  &ZOPN+1                                     00573200
&ZOPL(&ZOPN)          SETC  ' '                                         00573300
&ZOPO(&ZOPN)          SETC  'XC'                                        00573400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00573500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00573600
.ZIMFLX               ANOP  ,                                           00573700
.*-------------------------------------------------------------------   00573800
.***AI.L05 XFLAGS1 BL1                                                  00573900
&ZW                   SETC  ''                                          00574000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00574100
&ZMS                  SETC  ''                                          00574200
&ZC                   SETC  ''                                          00574300
.*-------------------------------------------------------------------   00574400
.***AI.L08 XFLAGS1 "UTOKEN"                                             00574500
.***      BL1'1XXXXXXX'                                                 00574600
         AIF   ('&UTOKEN' EQ '').ZI3A                                   00574700
         AIF   ('&UTOKEN' EQ 'TASK').ZI3A                               00574800
&ZW                   SETC  '&ZW.1'                                     00574900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00575000
&ZMS                  SETC  '&ZMS.0'                                    00575100
                      AGO   .ZI3C                                       00575200
.*                                                                      00575300
.ZI3A                 ANOP  ,                                           00575400
&ZW                   SETC  '&ZW.0'                                     00575500
&ZMS                  SETC  '&ZMS.1'                                    00575600
.ZI3C                 ANOP  ,                                           00575700
.*-------------------------------------------------------------------   00575800
.***AI.L08 XFLAGS1 "REXXARGS"                                           00575900
.***      BL1'X1XXXXXX'                                                 00576000
         AIF   ('&REXXARGS' EQ '').ZI4A                                 00576100
         AIF   ('&REXXARGS' EQ 'NO_ARGS').ZI4A                          00576200
&ZW                   SETC  '&ZW.1'                                     00576300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00576400
&ZMS                  SETC  '&ZMS.0'                                    00576500
                      AGO   .ZI4C                                       00576600
.*                                                                      00576700
.ZI4A                 ANOP  ,                                           00576800
&ZW                   SETC  '&ZW.0'                                     00576900
&ZMS                  SETC  '&ZMS.1'                                    00577000
.ZI4C                 ANOP  ,                                           00577100
.*-------------------------------------------------------------------   00577200
.***AI.L08 XFLAGS1 "TIMEINT"                                            00577300
.***      BL1'XX1XXXXX'                                                 00577400
         AIF   ('&TIMEINT' EQ '').ZI5A                                  00577500
&ZW                   SETC  '&ZW.1'                                     00577600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00577700
&ZMS                  SETC  '&ZMS.0'                                    00577800
                      AGO   .ZI5C                                       00577900
.*                                                                      00578000
.ZI5A                 ANOP  ,                                           00578100
&ZW                   SETC  '&ZW.0'                                     00578200
&ZMS                  SETC  '&ZMS.1'                                    00578300
.ZI5C                 ANOP  ,                                           00578400
.*-------------------------------------------------------------------   00578500
.***AI.L08 XFLAGS1 "REXXINDSN"                                          00578600
.***      BL1'XXX1XXXX'                                                 00578700
         AIF   ('&REXXINDSN' EQ '').ZI6A                                00578800
         AIF   ('&REXXINDSN' EQ 'NO_REXXINDSN').ZI6A                    00578900
&ZW                   SETC  '&ZW.1'                                     00579000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00579100
&ZMS                  SETC  '&ZMS.0'                                    00579200
                      AGO   .ZI6C                                       00579300
.*                                                                      00579400
.ZI6A                 ANOP  ,                                           00579500
&ZW                   SETC  '&ZW.0'                                     00579600
&ZMS                  SETC  '&ZMS.1'                                    00579700
.ZI6C                 ANOP  ,                                           00579800
.*-------------------------------------------------------------------   00579900
.***AI.L08 XFLAGS1 "REXXOUTDSN"                                         00580000
.***      BL1'XXXX1XXX'                                                 00580100
         AIF   ('&REXXOUTDSN' EQ '').ZI7A                               00580200
         AIF   ('&REXXOUTDSN' EQ 'NO_REXXOUTDSN').ZI7A                  00580300
&ZW                   SETC  '&ZW.1'                                     00580400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00580500
&ZMS                  SETC  '&ZMS.0'                                    00580600
                      AGO   .ZI7C                                       00580700
.*                                                                      00580800
.ZI7A                 ANOP  ,                                           00580900
&ZW                   SETC  '&ZW.0'                                     00581000
&ZMS                  SETC  '&ZMS.1'                                    00581100
.ZI7C                 ANOP  ,                                           00581200
.*-------------------------------------------------------------------   00581300
.***AI.L08 XFLAGS1 "REXXDIAG"                                           00581400
.***      BL1'XXXXX1XX'                                                 00581500
         AIF   ('&REXXDIAG' EQ '').ZI8A                                 00581600
&ZW                   SETC  '&ZW.1'                                     00581700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00581800
&ZMS                  SETC  '&ZMS.0'                                    00581900
                      AGO   .ZI8C                                       00582000
.*                                                                      00582100
.ZI8A                 ANOP  ,                                           00582200
&ZW                   SETC  '&ZW.0'                                     00582300
&ZMS                  SETC  '&ZMS.1'                                    00582400
.ZI8C                 ANOP  ,                                           00582500
.*-------------------------------------------------------------------   00582600
.***AI.L08 XFLAGS1 "REXXVARS"                                           00582700
.***      BL1'XXXXXX1X'                                                 00582800
         AIF   ('&REXXVARS' EQ '').ZI9A                                 00582900
         AIF   ('&REXXVARS' EQ 'NO_VARS').ZI9A                          00583000
&ZW                   SETC  '&ZW.1'                                     00583100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00583200
&ZMS                  SETC  '&ZMS.0'                                    00583300
                      AGO   .ZI9C                                       00583400
.*                                                                      00583500
.ZI9A                 ANOP  ,                                           00583600
&ZW                   SETC  '&ZW.0'                                     00583700
&ZMS                  SETC  '&ZMS.1'                                    00583800
.ZI9C                 ANOP  ,                                           00583900
.*-------------------------------------------------------------------   00584000
.***AI.L08 XFLAGS1 "REXXINMEMNAME"                                      00584100
.***      BL1'XXXXXXX1'                                                 00584200
         AIF   ('&REXXINMEMNAME' EQ '').ZI10A                           00584300
&ZW                   SETC  '&ZW.1'                                     00584400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00584500
&ZMS                  SETC  '&ZMS.0'                                    00584600
                      AGO   .ZI10C                                      00584700
.*                                                                      00584800
.ZI10A                ANOP  ,                                           00584900
&ZW                   SETC  '&ZW.0'                                     00585000
&ZMS                  SETC  '&ZMS.1'                                    00585100
.ZI10C                ANOP  ,                                           00585200
.*-------------------------------------------------------------------   00585300
.***AI.L11 XFLAGS1 BL1                                                  00585400
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI10D              00585500
                      AIF   ('&ZC' NE 'YES').ZI10D                      00585600
&ZOPN                 SETA  &ZOPN+1                                     00585700
&ZOPL(&ZOPN)          SETC  ' '                                         00585800
&ZOPO(&ZOPN)          SETC  'NI'                                        00585900
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZMS'''                            00586000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00586100
.ZI10D                ANOP  ,                                           00586200
                      AIF   ('&ZCLNG' NE 'YES').ZI10E  ALL ZERO BITS    00586300
&ZOPN                 SETA  &ZOPN+1                                     00586400
&ZOPL(&ZOPN)          SETC  ' '                                         00586500
&ZOPO(&ZOPN)          SETC  'OI'                                        00586600
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00586700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00586800
.ZI10E                ANOP  ,                                           00586900
.*-------------------------------------------------------------------   00587000
.***AI.L05 XFLAGS2 BL1                                                  00587100
&ZW                   SETC  ''                                          00587200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00587300
&ZMS                  SETC  ''                                          00587400
&ZC                   SETC  ''                                          00587500
.*-------------------------------------------------------------------   00587600
.***AI.L08 XFLAGS2 "YES"                                                00587700
.***      BL1'1XXXXXXX'                                                 00587800
         AIF   ('&XSYNC' NE 'YES').ZI12A                                00587900
&ZW                   SETC  '&ZW.1'                                     00588000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00588100
&ZMS                  SETC  '&ZMS.1'                                    00588200
                      AGO   .ZI12C                                      00588300
.*                                                                      00588400
.ZI12A                ANOP  ,                                           00588500
&ZW                   SETC  '&ZW.0'                                     00588600
         AIF   ('&ZXSYNC' EQ '').ZI12B                                  00588700
&ZMS                  SETC  '&ZMS.0'                                    00588800
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00588900
                      AGO   .ZI12C                                      00589000
.*                                                                      00589100
.ZI12B                ANOP  ,                                           00589200
&ZMS                  SETC  '&ZMS.1'                                    00589300
.ZI12C                ANOP  ,                                           00589400
.*-------------------------------------------------------------------   00589500
.***AI.L08 XFLAGS2 "YES"                                                00589600
.***      BL1'X1XXXXXX'                                                 00589700
         AIF   ('&XTIMELIMIT' NE 'YES').ZI13A                           00589800
&ZW                   SETC  '&ZW.1'                                     00589900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00590000
&ZMS                  SETC  '&ZMS.1'                                    00590100
                      AGO   .ZI13C                                      00590200
.*                                                                      00590300
.ZI13A                ANOP  ,                                           00590400
&ZW                   SETC  '&ZW.0'                                     00590500
         AIF   ('&ZXTIMELIMIT' EQ '').ZI13B                             00590600
&ZMS                  SETC  '&ZMS.0'                                    00590700
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00590800
                      AGO   .ZI13C                                      00590900
.*                                                                      00591000
.ZI13B                ANOP  ,                                           00591100
&ZMS                  SETC  '&ZMS.1'                                    00591200
.ZI13C                ANOP  ,                                           00591300
.*-------------------------------------------------------------------   00591400
.***AI.L08 XFLAGS2 "LINK"                                               00591500
.***      BL1'XX1XXXXX'                                                 00591600
         AIF   ('&XCOMPEXIT' NE 'LINK').ZI14A                           00591700
&ZW                   SETC  '&ZW.1'                                     00591800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00591900
&ZMS                  SETC  '&ZMS.1'                                    00592000
                      AGO   .ZI14C                                      00592100
.*                                                                      00592200
.ZI14A                ANOP  ,                                           00592300
&ZW                   SETC  '&ZW.0'                                     00592400
         AIF   ('&ZXCOMPEXIT' EQ '').ZI14B                              00592500
&ZMS                  SETC  '&ZMS.0'                                    00592600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00592700
                      AGO   .ZI14C                                      00592800
.*                                                                      00592900
.ZI14B                ANOP  ,                                           00593000
&ZMS                  SETC  '&ZMS.1'                                    00593100
.ZI14C                ANOP  ,                                           00593200
.*-------------------------------------------------------------------   00593300
.***AI.L08 XFLAGS2 "YES"                                                00593400
.***      BL1'XXX1XXXX'                                                 00593500
         AIF   ('&XCONSDATA' NE 'YES').ZI15A                            00593600
&ZW                   SETC  '&ZW.1'                                     00593700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00593800
&ZMS                  SETC  '&ZMS.1'                                    00593900
                      AGO   .ZI15C                                      00594000
.*                                                                      00594100
.ZI15A                ANOP  ,                                           00594200
&ZW                   SETC  '&ZW.0'                                     00594300
         AIF   ('&ZXCONSDATA' EQ '').ZI15B                              00594400
&ZMS                  SETC  '&ZMS.0'                                    00594500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00594600
                      AGO   .ZI15C                                      00594700
.*                                                                      00594800
.ZI15B                ANOP  ,                                           00594900
&ZMS                  SETC  '&ZMS.1'                                    00595000
.ZI15C                ANOP  ,                                           00595100
.*-------------------------------------------------------------------   00595200
.***AI.L08 XFLAGS2 "REXXOUTMEMNAME"                                     00595300
.***      BL1'XXXX1XXX'                                                 00595400
         AIF   ('&REXXOUTMEMNAME' EQ '').ZI16A                          00595500
&ZW                   SETC  '&ZW.1'                                     00595600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00595700
&ZMS                  SETC  '&ZMS.0'                                    00595800
                      AGO   .ZI16C                                      00595900
.*                                                                      00596000
.ZI16A                ANOP  ,                                           00596100
&ZW                   SETC  '&ZW.0'                                     00596200
&ZMS                  SETC  '&ZMS.1'                                    00596300
.ZI16C                ANOP  ,                                           00596400
.*-------------------------------------------------------------------   00596500
.***AI.L08 XFLAGS2 "YES"                                                00596600
.***      BL1'XXXXX1XX'                                                 00596700
         AIF   ('&XTSO' NE 'YES').ZI17A                                 00596800
&ZW                   SETC  '&ZW.1'                                     00596900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00597000
&ZMS                  SETC  '&ZMS.1'                                    00597100
                      AGO   .ZI17C                                      00597200
.*                                                                      00597300
.ZI17A                ANOP  ,                                           00597400
&ZW                   SETC  '&ZW.0'                                     00597500
         AIF   ('&ZXTSO' EQ '').ZI17B                                   00597600
&ZMS                  SETC  '&ZMS.0'                                    00597700
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00597800
                      AGO   .ZI17C                                      00597900
.*                                                                      00598000
.ZI17B                ANOP  ,                                           00598100
&ZMS                  SETC  '&ZMS.1'                                    00598200
.ZI17C                ANOP  ,                                           00598300
.*-------------------------------------------------------------------   00598400
.***AI.L08 XFLAGS2 "BYAXRUSER"                                          00598500
.***      BL1'XXXXXX1X'                                                 00598600
         AIF   ('&XSECURITY' NE 'BYAXRUSER').ZI18A                      00598700
&ZW                   SETC  '&ZW.10'                                    00598800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00598900
&ZMS                  SETC  '&ZMS.11'                                   00599000
                      AGO   .ZI18C                                      00599100
.*                                                                      00599200
.ZI18A                ANOP  ,                                           00599300
&ZW                   SETC  '&ZW.00'                                    00599400
         AIF   ('&ZXSECURITY' EQ '').ZI18B                              00599500
&ZMS                  SETC  '&ZMS.01'                                   00599600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00599700
                      AGO   .ZI18C                                      00599800
.*                                                                      00599900
.ZI18B                ANOP  ,                                           00600000
&ZMS                  SETC  '&ZMS.11'                                   00600100
.ZI18C                ANOP  ,                                           00600200
.*-------------------------------------------------------------------   00600300
.***AI.L11 XFLAGS2 BL1                                                  00600400
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI18D              00600500
                      AIF   ('&ZC' NE 'YES').ZI18D                      00600600
&ZOPN                 SETA  &ZOPN+1                                     00600700
&ZOPL(&ZOPN)          SETC  ' '                                         00600800
&ZOPO(&ZOPN)          SETC  'NI'                                        00600900
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZMS'''                            00601000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00601100
.ZI18D                ANOP  ,                                           00601200
                      AIF   ('&ZCLNG' NE 'YES').ZI18E  ALL ZERO BITS    00601300
&ZOPN                 SETA  &ZOPN+1                                     00601400
&ZOPL(&ZOPN)          SETC  ' '                                         00601500
&ZOPO(&ZOPN)          SETC  'OI'                                        00601600
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00601700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00601800
.ZI18E                ANOP  ,                                           00601900
.*-------------------------------------------------------------------   00602000
.***AI.L07 XREQUEST AL1                                                 00602100
&ZW                   SETC  ''                                          00602200
.*-------------------------------------------------------------------   00602300
.***AI.L15 XREQUEST "EXECUTE" AL1                                       00602400
         AIF   ('&XREQUEST' NE 'EXECUTE').ZI20A                         00602500
&ZW                   SETC  '1'                                         00602600
.ZI20A                ANOP  ,                                           00602700
.*-------------------------------------------------------------------   00602800
.***AI.L15 XREQUEST "CANCEL" AL1                                        00602900
         AIF   ('&XREQUEST' NE 'CANCEL').ZI21A                          00603000
&ZW                   SETC  '2'                                         00603100
.ZI21A                ANOP  ,                                           00603200
.*-------------------------------------------------------------------   00603300
.***AI.L15 XREQUEST "GETREXXLIB" AL1                                    00603400
         AIF   ('&XREQUEST' NE 'GETREXXLIB').ZI22A                      00603500
&ZW                   SETC  '3'                                         00603600
.ZI22A                ANOP  ,                                           00603700
.*-------------------------------------------------------------------   00603800
.***AI.L17 XREQUEST AL1                                                 00603900
                      AIF   ('&ZW' NE '0').ZI22C                        00604000
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI22B             00604100
.ZI22C                ANOP  ,                                           00604200
                      AIF   ('&ZW' EQ '').ZI22B                         00604300
.*                                                                      00604400
&ZOPN                 SETA  &ZOPN+1                                     00604500
&ZOPL(&ZOPN)          SETC  ' '                                         00604600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00604700
&ZOPV(&ZOPN)          SETC  '3(1),&ZW'                                  00604800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00604900
.ZI22B                ANOP  ,                                           00605000
.*-------------------------------------------------------------------   00605100
.***AI.L18 ADDR3164 XREXXARGS AD                                        00605200
         AIF   ('&XREXXARGS' NE 'NO_ARGS').ZI24                         00605300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI24  CK *        00605400
&ZXREXXARGS           SETC  ''             RESET INPUT/OUTPUT           00605500
.ZI24                 ANOP  ,                                           00605600
.*-------------------------------------------------------------------   00605700
.***AI.L19 ADDR3164 XREXXARGS AD                                        00605800
                      AIF   ('&ZXREXXARGS' EQ '').ZI24H                 00605900
&ZCLNG                SETC  '&XREXXARGS'                                00606000
&ZCGPR                SETC  '14'                                        00606100
         AIF   ('&XREXXARGS'(1,1) EQ '(').ZI24F  IN GPR                 00606200
        AIF   ('&XREXXARGS' NE 'NO_ARGS').ZI24A                         00606300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI24H             00606400
.*                                                                      00606500
&ZCLNG                SETC  '=XL8''00'''                                00606600
.ZI24A                ANOP  ,                                           00606700
.*                                                                      00606800
&ZOPN                 SETA  &ZOPN+1                                     00606900
&ZOPL(&ZOPN)          SETC  ' '                                         00607000
&ZOPO(&ZOPN)          SETC  'LA'                                        00607100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00607200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXARGS XREXXARGS'                  00607300
.*                                                                      00607400
                      AGO   .ZI24G                                      00607500
.*                                                                      00607600
.ZI24F                ANOP  ,                                           00607700
&ZCGPR   SETC  '&XREXXARGS'(2,K'&XREXXARGS-2)                           00607800
.*                                                                      00607900
.ZI24G                ANOP  ,                                           00608000
                      AIF   ('&SYSAM64' EQ 'YES').ZI24H1A               00608100
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI24C2             00608200
.*                                                                      00608300
&ZOPN                 SETA  &ZOPN+1                                     00608400
&ZOPL(&ZOPN)          SETC  ' '                                         00608500
&ZOPO(&ZOPN)          SETC  'XC'                                        00608600
&ZOPV(&ZOPN)          SETC  '8(4,1),8(1)'                               00608700
.ZI24C2               ANOP  ,                                           00608800
.*                                                                      00608900
&ZOPN                 SETA  &ZOPN+1                                     00609000
&ZOPL(&ZOPN)          SETC  ' '                                         00609100
&ZOPO(&ZOPN)          SETC  'ST'                                        00609200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+8(,1)'                            00609300
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXARGS XREXXARGS'                  00609400
.*                                                                      00609500
                      AGO   .ZI24H                                      00609600
.ZI24H1A              ANOP  ,                                           00609700
.*                                                                      00609800
&ZOPN                 SETA  &ZOPN+1                                     00609900
&ZOPL(&ZOPN)          SETC  ' '                                         00610000
&ZOPO(&ZOPN)          SETC  'STG'                                       00610100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00610200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXARGS XREXXARGS'                  00610300
.*                                                                      00610400
.ZI24H                ANOP  ,                                           00610500
.*-------------------------------------------------------------------   00610600
.***AI.L18 ADDR3164 XUTOKEN AD                                          00610700
         AIF   ('&XUTOKEN' NE 'TASK').ZI25                              00610800
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI25  CK *        00610900
&ZXUTOKEN             SETC  ''             RESET INPUT/OUTPUT           00611000
.ZI25                 ANOP  ,                                           00611100
.*-------------------------------------------------------------------   00611200
.***AI.L19 ADDR3164 XUTOKEN AD                                          00611300
                      AIF   ('&ZXUTOKEN' EQ '').ZI25H                   00611400
&ZCLNG                SETC  '&XUTOKEN'                                  00611500
&ZCGPR                SETC  '14'                                        00611600
         AIF   ('&XUTOKEN'(1,1) EQ '(').ZI25F  IN GPR                   00611700
        AIF   ('&XUTOKEN' NE 'TASK').ZI25A                              00611800
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI25H             00611900
.*                                                                      00612000
&ZCLNG                SETC  '=XL8''00'''                                00612100
.ZI25A                ANOP  ,                                           00612200
.*                                                                      00612300
&ZOPN                 SETA  &ZOPN+1                                     00612400
&ZOPL(&ZOPN)          SETC  ' '                                         00612500
&ZOPO(&ZOPN)          SETC  'LA'                                        00612600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00612700
&ZOPD(&ZOPN)          SETC  '++ &ZXUTOKEN XUTOKEN'                      00612800
.*                                                                      00612900
                      AGO   .ZI25G                                      00613000
.*                                                                      00613100
.ZI25F                ANOP  ,                                           00613200
&ZCGPR   SETC  '&XUTOKEN'(2,K'&XUTOKEN-2)                               00613300
.*                                                                      00613400
.ZI25G                ANOP  ,                                           00613500
                      AIF   ('&SYSAM64' EQ 'YES').ZI25H1A               00613600
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI25C2             00613700
.*                                                                      00613800
&ZOPN                 SETA  &ZOPN+1                                     00613900
&ZOPL(&ZOPN)          SETC  ' '                                         00614000
&ZOPO(&ZOPN)          SETC  'XC'                                        00614100
&ZOPV(&ZOPN)          SETC  '16(4,1),16(1)'                             00614200
.ZI25C2               ANOP  ,                                           00614300
.*                                                                      00614400
&ZOPN                 SETA  &ZOPN+1                                     00614500
&ZOPL(&ZOPN)          SETC  ' '                                         00614600
&ZOPO(&ZOPN)          SETC  'ST'                                        00614700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+16(,1)'                           00614800
&ZOPD(&ZOPN)          SETC  '++ &ZXUTOKEN XUTOKEN'                      00614900
.*                                                                      00615000
                      AGO   .ZI25H                                      00615100
.ZI25H1A              ANOP  ,                                           00615200
.*                                                                      00615300
&ZOPN                 SETA  &ZOPN+1                                     00615400
&ZOPL(&ZOPN)          SETC  ' '                                         00615500
&ZOPO(&ZOPN)          SETC  'STG'                                       00615600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                             00615700
&ZOPD(&ZOPN)          SETC  '++ &ZXUTOKEN XUTOKEN'                      00615800
.*                                                                      00615900
.ZI25H                ANOP  ,                                           00616000
.*-------------------------------------------------------------------   00616100
.***AI.L18 ADDR3164 XREXXVARS AD                                        00616200
         AIF   ('&XREXXVARS' NE 'NO_VARS').ZI26                         00616300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI26  CK *        00616400
&ZXREXXVARS           SETC  ''             RESET INPUT/OUTPUT           00616500
.ZI26                 ANOP  ,                                           00616600
.*-------------------------------------------------------------------   00616700
.***AI.L19 ADDR3164 XREXXVARS AD                                        00616800
                      AIF   ('&ZXREXXVARS' EQ '').ZI26H                 00616900
&ZCLNG                SETC  '&XREXXVARS'                                00617000
&ZCGPR                SETC  '14'                                        00617100
         AIF   ('&XREXXVARS'(1,1) EQ '(').ZI26F  IN GPR                 00617200
        AIF   ('&XREXXVARS' NE 'NO_VARS').ZI26A                         00617300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI26H             00617400
.*                                                                      00617500
&ZCLNG                SETC  '=XL8''00'''                                00617600
.ZI26A                ANOP  ,                                           00617700
.*                                                                      00617800
&ZOPN                 SETA  &ZOPN+1                                     00617900
&ZOPL(&ZOPN)          SETC  ' '                                         00618000
&ZOPO(&ZOPN)          SETC  'LA'                                        00618100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00618200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXVARS XREXXVARS'                  00618300
.*                                                                      00618400
                      AGO   .ZI26G                                      00618500
.*                                                                      00618600
.ZI26F                ANOP  ,                                           00618700
&ZCGPR   SETC  '&XREXXVARS'(2,K'&XREXXVARS-2)                           00618800
.*                                                                      00618900
.ZI26G                ANOP  ,                                           00619000
                      AIF   ('&SYSAM64' EQ 'YES').ZI26H1A               00619100
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI26C2             00619200
.*                                                                      00619300
&ZOPN                 SETA  &ZOPN+1                                     00619400
&ZOPL(&ZOPN)          SETC  ' '                                         00619500
&ZOPO(&ZOPN)          SETC  'XC'                                        00619600
&ZOPV(&ZOPN)          SETC  '24(4,1),24(1)'                             00619700
.ZI26C2               ANOP  ,                                           00619800
.*                                                                      00619900
&ZOPN                 SETA  &ZOPN+1                                     00620000
&ZOPL(&ZOPN)          SETC  ' '                                         00620100
&ZOPO(&ZOPN)          SETC  'ST'                                        00620200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+24(,1)'                           00620300
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXVARS XREXXVARS'                  00620400
.*                                                                      00620500
                      AGO   .ZI26H                                      00620600
.ZI26H1A              ANOP  ,                                           00620700
.*                                                                      00620800
&ZOPN                 SETA  &ZOPN+1                                     00620900
&ZOPL(&ZOPN)          SETC  ' '                                         00621000
&ZOPO(&ZOPN)          SETC  'STG'                                       00621100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00621200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXVARS XREXXVARS'                  00621300
.*                                                                      00621400
.ZI26H                ANOP  ,                                           00621500
.*-------------------------------------------------------------------   00621600
.***AI.L18 ADDR3164 XREXXINDSN AD                                       00621700
         AIF   ('&XREXXINDSN' NE 'NO_REXXINDSN').ZI27                   00621800
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI27  CK *        00621900
&ZXREXXINDSN          SETC  ''             RESET INPUT/OUTPUT           00622000
.ZI27                 ANOP  ,                                           00622100
.*-------------------------------------------------------------------   00622200
.***AI.L19 ADDR3164 XREXXINDSN AD                                       00622300
                      AIF   ('&ZXREXXINDSN' EQ '').ZI27H                00622400
&ZCLNG                SETC  '&XREXXINDSN'                               00622500
&ZCGPR                SETC  '14'                                        00622600
         AIF   ('&XREXXINDSN'(1,1) EQ '(').ZI27F  IN GPR                00622700
        AIF   ('&XREXXINDSN' NE 'NO_REXXINDSN').ZI27A                   00622800
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI27H             00622900
.*                                                                      00623000
&ZCLNG                SETC  '=XL8''00'''                                00623100
.ZI27A                ANOP  ,                                           00623200
.*                                                                      00623300
&ZOPN                 SETA  &ZOPN+1                                     00623400
&ZOPL(&ZOPN)          SETC  ' '                                         00623500
&ZOPO(&ZOPN)          SETC  'LA'                                        00623600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00623700
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXINDSN XREXXINDSN'                00623800
.*                                                                      00623900
                      AGO   .ZI27G                                      00624000
.*                                                                      00624100
.ZI27F                ANOP  ,                                           00624200
&ZCGPR   SETC  '&XREXXINDSN'(2,K'&XREXXINDSN-2)                         00624300
.*                                                                      00624400
.ZI27G                ANOP  ,                                           00624500
                      AIF   ('&SYSAM64' EQ 'YES').ZI27H1A               00624600
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI27C2             00624700
.*                                                                      00624800
&ZOPN                 SETA  &ZOPN+1                                     00624900
&ZOPL(&ZOPN)          SETC  ' '                                         00625000
&ZOPO(&ZOPN)          SETC  'XC'                                        00625100
&ZOPV(&ZOPN)          SETC  '32(4,1),32(1)'                             00625200
.ZI27C2               ANOP  ,                                           00625300
.*                                                                      00625400
&ZOPN                 SETA  &ZOPN+1                                     00625500
&ZOPL(&ZOPN)          SETC  ' '                                         00625600
&ZOPO(&ZOPN)          SETC  'ST'                                        00625700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+32(,1)'                           00625800
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXINDSN XREXXINDSN'                00625900
.*                                                                      00626000
                      AGO   .ZI27H                                      00626100
.ZI27H1A              ANOP  ,                                           00626200
.*                                                                      00626300
&ZOPN                 SETA  &ZOPN+1                                     00626400
&ZOPL(&ZOPN)          SETC  ' '                                         00626500
&ZOPO(&ZOPN)          SETC  'STG'                                       00626600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00626700
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXINDSN XREXXINDSN'                00626800
.*                                                                      00626900
.ZI27H                ANOP  ,                                           00627000
.*-------------------------------------------------------------------   00627100
.***AI.L18 ADDR3164 XREXXOUTDSN AD                                      00627200
         AIF   ('&XREXXOUTDSN' NE 'NO_REXXOUTDSN').ZI28                 00627300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI28  CK *        00627400
&ZXREXXOUTDSN         SETC  ''             RESET INPUT/OUTPUT           00627500
.ZI28                 ANOP  ,                                           00627600
.*-------------------------------------------------------------------   00627700
.***AI.L19 ADDR3164 XREXXOUTDSN AD                                      00627800
                      AIF   ('&ZXREXXOUTDSN' EQ '').ZI28H               00627900
&ZCLNG                SETC  '&XREXXOUTDSN'                              00628000
&ZCGPR                SETC  '14'                                        00628100
         AIF   ('&XREXXOUTDSN'(1,1) EQ '(').ZI28F  IN GPR               00628200
        AIF   ('&XREXXOUTDSN' NE 'NO_REXXOUTDSN').ZI28A                 00628300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI28H             00628400
.*                                                                      00628500
&ZCLNG                SETC  '=XL8''00'''                                00628600
.ZI28A                ANOP  ,                                           00628700
.*                                                                      00628800
&ZOPN                 SETA  &ZOPN+1                                     00628900
&ZOPL(&ZOPN)          SETC  ' '                                         00629000
&ZOPO(&ZOPN)          SETC  'LA'                                        00629100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00629200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXOUTDSN XREXXOUTDSN'              00629300
.*                                                                      00629400
                      AGO   .ZI28G                                      00629500
.*                                                                      00629600
.ZI28F                ANOP  ,                                           00629700
&ZCGPR   SETC  '&XREXXOUTDSN'(2,K'&XREXXOUTDSN-2)                       00629800
.*                                                                      00629900
.ZI28G                ANOP  ,                                           00630000
                      AIF   ('&SYSAM64' EQ 'YES').ZI28H1A               00630100
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI28C2             00630200
.*                                                                      00630300
&ZOPN                 SETA  &ZOPN+1                                     00630400
&ZOPL(&ZOPN)          SETC  ' '                                         00630500
&ZOPO(&ZOPN)          SETC  'XC'                                        00630600
&ZOPV(&ZOPN)          SETC  '40(4,1),40(1)'                             00630700
.ZI28C2               ANOP  ,                                           00630800
.*                                                                      00630900
&ZOPN                 SETA  &ZOPN+1                                     00631000
&ZOPL(&ZOPN)          SETC  ' '                                         00631100
&ZOPO(&ZOPN)          SETC  'ST'                                        00631200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+40(,1)'                           00631300
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXOUTDSN XREXXOUTDSN'              00631400
.*                                                                      00631500
                      AGO   .ZI28H                                      00631600
.ZI28H1A              ANOP  ,                                           00631700
.*                                                                      00631800
&ZOPN                 SETA  &ZOPN+1                                     00631900
&ZOPL(&ZOPN)          SETC  ' '                                         00632000
&ZOPO(&ZOPN)          SETC  'STG'                                       00632100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,40(,1)'                             00632200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXOUTDSN XREXXOUTDSN'              00632300
.*                                                                      00632400
.ZI28H                ANOP  ,                                           00632500
.*-------------------------------------------------------------------   00632600
.***AI.L19 ADDR3164 XREXXDIAG AD                                        00632700
                      AIF   ('&ZXREXXDIAG' EQ '').ZI29H                 00632800
&ZCLNG                SETC  '&XREXXDIAG'                                00632900
&ZCGPR                SETC  '14'                                        00633000
         AIF   ('&XREXXDIAG'(1,1) EQ '(').ZI29F  IN GPR                 00633100
.*                                                                      00633200
&ZOPN                 SETA  &ZOPN+1                                     00633300
&ZOPL(&ZOPN)          SETC  ' '                                         00633400
&ZOPO(&ZOPN)          SETC  'LA'                                        00633500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00633600
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXDIAG XREXXDIAG'                  00633700
.*                                                                      00633800
                      AGO   .ZI29G                                      00633900
.*                                                                      00634000
.ZI29F                ANOP  ,                                           00634100
&ZCGPR   SETC  '&XREXXDIAG'(2,K'&XREXXDIAG-2)                           00634200
.*                                                                      00634300
.ZI29G                ANOP  ,                                           00634400
                      AIF   ('&SYSAM64' EQ 'YES').ZI29H1A               00634500
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI29C2             00634600
.*                                                                      00634700
&ZOPN                 SETA  &ZOPN+1                                     00634800
&ZOPL(&ZOPN)          SETC  ' '                                         00634900
&ZOPO(&ZOPN)          SETC  'XC'                                        00635000
&ZOPV(&ZOPN)          SETC  '48(4,1),48(1)'                             00635100
.ZI29C2               ANOP  ,                                           00635200
.*                                                                      00635300
&ZOPN                 SETA  &ZOPN+1                                     00635400
&ZOPL(&ZOPN)          SETC  ' '                                         00635500
&ZOPO(&ZOPN)          SETC  'ST'                                        00635600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+48(,1)'                           00635700
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXDIAG XREXXDIAG'                  00635800
.*                                                                      00635900
                      AGO   .ZI29H                                      00636000
.ZI29H1A              ANOP  ,                                           00636100
.*                                                                      00636200
&ZOPN                 SETA  &ZOPN+1                                     00636300
&ZOPL(&ZOPN)          SETC  ' '                                         00636400
&ZOPO(&ZOPN)          SETC  'STG'                                       00636500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,48(,1)'                             00636600
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXDIAG XREXXDIAG'                  00636700
.*                                                                      00636800
.ZI29H                ANOP  ,                                           00636900
.*-------------------------------------------------------------------   00637000
.***AI.L18 ALET XUTOKEN F                                               00637100
         AIF   ('&XUTOKEN' NE 'TASK').ZI30                              00637200
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI30  CK *        00637300
&ZXUTOKEN             SETC  ''             RESET INPUT/OUTPUT           00637400
.ZI30                 ANOP  ,                                           00637500
.*-------------------------------------------------------------------   00637600
.***AI.L23 ALET XUTOKEN F                                               00637700
         AIF   ('&ZXUTOKEN' EQ '').ZI30G                                00637800
         AIF   ('&SYSASCE' EQ 'P').ZI30G   SYSSTATE PRIMARY             00637900
&ZCLNG                SETC  '&XUTOKEN'                                  00638000
         AIF   ('&XUTOKEN'(1,1) EQ '(').ZI30E  IN AR                    00638100
.*                                                                      00638200
        AIF   ('&XUTOKEN' NE 'TASK').ZI30A                              00638300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI30G             00638400
.*                                                                      00638500
&ZCLNG                SETC  '=XL4''00'''                                00638600
.ZI30A                ANOP  ,                                           00638700
.*                                                                      00638800
&ZCGPR                SETC  '14'                                        00638900
&ZOPN                 SETA  &ZOPN+1                                     00639000
&ZOPL(&ZOPN)          SETC  ' '                                         00639100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00639200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00639300
&ZOPD(&ZOPN)          SETC  '++ &ZXUTOKEN XUTOKEN'                      00639400
                      AGO   .ZI30F                                      00639500
.*                                                                      00639600
.ZI30E                ANOP  ,                                           00639700
&ZCGPR   SETC  '&XUTOKEN'(2,K'&XUTOKEN-2)                               00639800
.*                                                                      00639900
.ZI30F                ANOP  ,                                           00640000
.*                                                                      00640100
&ZOPN                 SETA  &ZOPN+1                                     00640200
&ZOPL(&ZOPN)          SETC  ' '                                         00640300
&ZOPO(&ZOPN)          SETC  'STAM'                                      00640400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       00640500
&ZOPD(&ZOPN)          SETC  '++ &ZXUTOKEN XUTOKEN'                      00640600
.*                                                                      00640700
.ZI30G                ANOP  ,                                           00640800
.*-------------------------------------------------------------------   00640900
.***AI.L18 ALET XREXXARGS F                                             00641000
         AIF   ('&XREXXARGS' NE 'NO_ARGS').ZI31                         00641100
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI31  CK *        00641200
&ZXREXXARGS           SETC  ''             RESET INPUT/OUTPUT           00641300
.ZI31                 ANOP  ,                                           00641400
.*-------------------------------------------------------------------   00641500
.***AI.L23 ALET XREXXARGS F                                             00641600
         AIF   ('&ZXREXXARGS' EQ '').ZI31G                              00641700
         AIF   ('&SYSASCE' EQ 'P').ZI31G   SYSSTATE PRIMARY             00641800
&ZCLNG                SETC  '&XREXXARGS'                                00641900
         AIF   ('&XREXXARGS'(1,1) EQ '(').ZI31E  IN AR                  00642000
.*                                                                      00642100
        AIF   ('&XREXXARGS' NE 'NO_ARGS').ZI31A                         00642200
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI31G             00642300
.*                                                                      00642400
&ZCLNG                SETC  '=XL4''00'''                                00642500
.ZI31A                ANOP  ,                                           00642600
.*                                                                      00642700
&ZCGPR                SETC  '14'                                        00642800
&ZOPN                 SETA  &ZOPN+1                                     00642900
&ZOPL(&ZOPN)          SETC  ' '                                         00643000
&ZOPO(&ZOPN)          SETC  'LAE'                                       00643100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00643200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXARGS XREXXARGS'                  00643300
                      AGO   .ZI31F                                      00643400
.*                                                                      00643500
.ZI31E                ANOP  ,                                           00643600
&ZCGPR   SETC  '&XREXXARGS'(2,K'&XREXXARGS-2)                           00643700
.*                                                                      00643800
.ZI31F                ANOP  ,                                           00643900
.*                                                                      00644000
&ZOPN                 SETA  &ZOPN+1                                     00644100
&ZOPL(&ZOPN)          SETC  ' '                                         00644200
&ZOPO(&ZOPN)          SETC  'STAM'                                      00644300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,60(1)'                       00644400
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXARGS XREXXARGS'                  00644500
.*                                                                      00644600
.ZI31G                ANOP  ,                                           00644700
.*-------------------------------------------------------------------   00644800
.***AI.L18 ALET XREXXVARS F                                             00644900
         AIF   ('&XREXXVARS' NE 'NO_VARS').ZI32                         00645000
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI32  CK *        00645100
&ZXREXXVARS           SETC  ''             RESET INPUT/OUTPUT           00645200
.ZI32                 ANOP  ,                                           00645300
.*-------------------------------------------------------------------   00645400
.***AI.L23 ALET XREXXVARS F                                             00645500
         AIF   ('&ZXREXXVARS' EQ '').ZI32G                              00645600
         AIF   ('&SYSASCE' EQ 'P').ZI32G   SYSSTATE PRIMARY             00645700
&ZCLNG                SETC  '&XREXXVARS'                                00645800
         AIF   ('&XREXXVARS'(1,1) EQ '(').ZI32E  IN AR                  00645900
.*                                                                      00646000
        AIF   ('&XREXXVARS' NE 'NO_VARS').ZI32A                         00646100
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI32G             00646200
.*                                                                      00646300
&ZCLNG                SETC  '=XL4''00'''                                00646400
.ZI32A                ANOP  ,                                           00646500
.*                                                                      00646600
&ZCGPR                SETC  '14'                                        00646700
&ZOPN                 SETA  &ZOPN+1                                     00646800
&ZOPL(&ZOPN)          SETC  ' '                                         00646900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00647000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00647100
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXVARS XREXXVARS'                  00647200
                      AGO   .ZI32F                                      00647300
.*                                                                      00647400
.ZI32E                ANOP  ,                                           00647500
&ZCGPR   SETC  '&XREXXVARS'(2,K'&XREXXVARS-2)                           00647600
.*                                                                      00647700
.ZI32F                ANOP  ,                                           00647800
.*                                                                      00647900
&ZOPN                 SETA  &ZOPN+1                                     00648000
&ZOPL(&ZOPN)          SETC  ' '                                         00648100
&ZOPO(&ZOPN)          SETC  'STAM'                                      00648200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,64(1)'                       00648300
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXVARS XREXXVARS'                  00648400
.*                                                                      00648500
.ZI32G                ANOP  ,                                           00648600
.*-------------------------------------------------------------------   00648700
.***AI.L18 ALET XREXXINDSN F                                            00648800
         AIF   ('&XREXXINDSN' NE 'NO_REXXINDSN').ZI33                   00648900
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI33  CK *        00649000
&ZXREXXINDSN          SETC  ''             RESET INPUT/OUTPUT           00649100
.ZI33                 ANOP  ,                                           00649200
.*-------------------------------------------------------------------   00649300
.***AI.L23 ALET XREXXINDSN F                                            00649400
         AIF   ('&ZXREXXINDSN' EQ '').ZI33G                             00649500
         AIF   ('&SYSASCE' EQ 'P').ZI33G   SYSSTATE PRIMARY             00649600
&ZCLNG                SETC  '&XREXXINDSN'                               00649700
         AIF   ('&XREXXINDSN'(1,1) EQ '(').ZI33E  IN AR                 00649800
.*                                                                      00649900
        AIF   ('&XREXXINDSN' NE 'NO_REXXINDSN').ZI33A                   00650000
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI33G             00650100
.*                                                                      00650200
&ZCLNG                SETC  '=XL4''00'''                                00650300
.ZI33A                ANOP  ,                                           00650400
.*                                                                      00650500
&ZCGPR                SETC  '14'                                        00650600
&ZOPN                 SETA  &ZOPN+1                                     00650700
&ZOPL(&ZOPN)          SETC  ' '                                         00650800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00650900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00651000
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXINDSN XREXXINDSN'                00651100
                      AGO   .ZI33F                                      00651200
.*                                                                      00651300
.ZI33E                ANOP  ,                                           00651400
&ZCGPR   SETC  '&XREXXINDSN'(2,K'&XREXXINDSN-2)                         00651500
.*                                                                      00651600
.ZI33F                ANOP  ,                                           00651700
.*                                                                      00651800
&ZOPN                 SETA  &ZOPN+1                                     00651900
&ZOPL(&ZOPN)          SETC  ' '                                         00652000
&ZOPO(&ZOPN)          SETC  'STAM'                                      00652100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,68(1)'                       00652200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXINDSN XREXXINDSN'                00652300
.*                                                                      00652400
.ZI33G                ANOP  ,                                           00652500
.*-------------------------------------------------------------------   00652600
.***AI.L18 ALET XREXXOUTDSN F                                           00652700
         AIF   ('&XREXXOUTDSN' NE 'NO_REXXOUTDSN').ZI34                 00652800
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI34  CK *        00652900
&ZXREXXOUTDSN         SETC  ''             RESET INPUT/OUTPUT           00653000
.ZI34                 ANOP  ,                                           00653100
.*-------------------------------------------------------------------   00653200
.***AI.L23 ALET XREXXOUTDSN F                                           00653300
         AIF   ('&ZXREXXOUTDSN' EQ '').ZI34G                            00653400
         AIF   ('&SYSASCE' EQ 'P').ZI34G   SYSSTATE PRIMARY             00653500
&ZCLNG                SETC  '&XREXXOUTDSN'                              00653600
         AIF   ('&XREXXOUTDSN'(1,1) EQ '(').ZI34E  IN AR                00653700
.*                                                                      00653800
        AIF   ('&XREXXOUTDSN' NE 'NO_REXXOUTDSN').ZI34A                 00653900
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI34G             00654000
.*                                                                      00654100
&ZCLNG                SETC  '=XL4''00'''                                00654200
.ZI34A                ANOP  ,                                           00654300
.*                                                                      00654400
&ZCGPR                SETC  '14'                                        00654500
&ZOPN                 SETA  &ZOPN+1                                     00654600
&ZOPL(&ZOPN)          SETC  ' '                                         00654700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00654800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00654900
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXOUTDSN XREXXOUTDSN'              00655000
                      AGO   .ZI34F                                      00655100
.*                                                                      00655200
.ZI34E                ANOP  ,                                           00655300
&ZCGPR   SETC  '&XREXXOUTDSN'(2,K'&XREXXOUTDSN-2)                       00655400
.*                                                                      00655500
.ZI34F                ANOP  ,                                           00655600
.*                                                                      00655700
&ZOPN                 SETA  &ZOPN+1                                     00655800
&ZOPL(&ZOPN)          SETC  ' '                                         00655900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00656000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,72(1)'                       00656100
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXOUTDSN XREXXOUTDSN'              00656200
.*                                                                      00656300
.ZI34G                ANOP  ,                                           00656400
.*-------------------------------------------------------------------   00656500
.***AI.L23 ALET XREXXDIAG F                                             00656600
         AIF   ('&ZXREXXDIAG' EQ '').ZI35G                              00656700
         AIF   ('&SYSASCE' EQ 'P').ZI35G   SYSSTATE PRIMARY             00656800
&ZCLNG                SETC  '&XREXXDIAG'                                00656900
         AIF   ('&XREXXDIAG'(1,1) EQ '(').ZI35E  IN AR                  00657000
.*                                                                      00657100
&ZCGPR                SETC  '14'                                        00657200
&ZOPN                 SETA  &ZOPN+1                                     00657300
&ZOPL(&ZOPN)          SETC  ' '                                         00657400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00657500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00657600
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXDIAG XREXXDIAG'                  00657700
                      AGO   .ZI35F                                      00657800
.*                                                                      00657900
.ZI35E                ANOP  ,                                           00658000
&ZCGPR   SETC  '&XREXXDIAG'(2,K'&XREXXDIAG-2)                           00658100
.*                                                                      00658200
.ZI35F                ANOP  ,                                           00658300
.*                                                                      00658400
&ZOPN                 SETA  &ZOPN+1                                     00658500
&ZOPL(&ZOPN)          SETC  ' '                                         00658600
&ZOPO(&ZOPN)          SETC  'STAM'                                      00658700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,76(1)'                       00658800
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXDIAG XREXXDIAG'                  00658900
.*                                                                      00659000
.ZI35G                ANOP  ,                                           00659100
.*-------------------------------------------------------------------   00659200
.***AI.L18  XTIMEINT F                                                  00659300
         AIF   ('&XTIMEINT' NE 'SYSTEM').ZI36                           00659400
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI36  CK *        00659500
&ZXTIMEINT            SETC  ''             RESET INPUT/OUTPUT           00659600
.ZI36                 ANOP  ,                                           00659700
.*-------------------------------------------------------------------   00659800
.***AI.L25  XTIMEINT F                                                  00659900
                      AIF   ('&ZXTIMEINT' EQ '').ZI36E                  00660000
                      AIF   ('&ZXTIMEINT' EQ 'OUTPUT').ZI36E            00660100
&ZCGPR                SETC  '&XTIMEINT'                                 00660200
         AIF   ('&XTIMEINT' NE 'SYSTEM').ZI36A                          00660300
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI36E                          00660400
.*                                                                      00660500
&ZCGPR                SETC  '=XL4''00'''                                00660600
.ZI36A                ANOP  ,                                           00660700
.*                                                                      00660800
                      AIF   ('&XTIMEINT'(1,1) NE '(').ZI36B             00660900
&ZCGPR   SETC  '0('.'&XTIMEINT'(2,K'&XTIMEINT-2).')'                    00661000
                      AGO   .ZI36D                                      00661100
.ZI36B                ANOP  ,                                           00661200
.*                                                                      00661300
&ZC                   SETC  '&XTIMEINT'(1,1)                            00661400
                      AIF   (T'&ZC NE 'N').ZI36D                        00661500
&ZC                   SETC  '&XTIMEINT'                                 00661600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI36D               00661700
&ZCGPR                SETC  '=AL4(&XTIMEINT)'                           00661800
.*                                                                      00661900
.ZI36D                ANOP  ,                                           00662000
.*                                                                      00662100
&ZOPN                 SETA  &ZOPN+1                                     00662200
&ZOPL(&ZOPN)          SETC  ' '                                         00662300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00662400
&ZOPV(&ZOPN)          SETC  '80(4,1),&ZCGPR'                            00662500
&ZOPD(&ZOPN)          SETC  '++ &ZXTIMEINT XTIMEINT'                    00662600
.*                                                                      00662700
.ZI36E                ANOP  ,                                           00662800
.*-------------------------------------------------------------------   00662900
.***AI.L25  XNAME CL8                                                   00663000
                      AIF   ('&ZXNAME' EQ '').ZI37E                     00663100
                      AIF   ('&ZXNAME' EQ 'OUTPUT').ZI37E               00663200
&ZCGPR                SETC  '&XNAME'                                    00663300
.*                                                                      00663400
                      AIF   ('&XNAME'(1,1) NE '(').ZI37B                00663500
&ZCGPR   SETC  '0('.'&XNAME'(2,K'&XNAME-2).')'                          00663600
.ZI37B                ANOP  ,                                           00663700
.*                                                                      00663800
&ZOPN                 SETA  &ZOPN+1                                     00663900
&ZOPL(&ZOPN)          SETC  ' '                                         00664000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00664100
&ZOPV(&ZOPN)          SETC  '84(8,1),&ZCGPR'                            00664200
&ZOPD(&ZOPN)          SETC  '++ &ZXNAME XNAME'                          00664300
.*                                                                      00664400
.ZI37E                ANOP  ,                                           00664500
.*-------------------------------------------------------------------   00664600
.***AI.L25  XLINKEP CL8                                                 00664700
                      AIF   ('&ZXLINKEP' EQ '').ZI38E                   00664800
                      AIF   ('&ZXLINKEP' EQ 'OUTPUT').ZI38E             00664900
&ZCGPR                SETC  '&XLINKEP'                                  00665000
.*                                                                      00665100
                      AIF   ('&XLINKEP'(1,1) NE '(').ZI38B              00665200
&ZCGPR   SETC  '0('.'&XLINKEP'(2,K'&XLINKEP-2).')'                      00665300
.ZI38B                ANOP  ,                                           00665400
.*                                                                      00665500
&ZOPN                 SETA  &ZOPN+1                                     00665600
&ZOPL(&ZOPN)          SETC  ' '                                         00665700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00665800
&ZOPV(&ZOPN)          SETC  '92(8,1),&ZCGPR'                            00665900
&ZOPD(&ZOPN)          SETC  '++ &ZXLINKEP XLINKEP'                      00666000
.*                                                                      00666100
.ZI38E                ANOP  ,                                           00666200
.*-------------------------------------------------------------------   00666300
.***AI.L25  XCART CL8                                                   00666400
                      AIF   ('&ZXCART' EQ '').ZI39E                     00666500
                      AIF   ('&ZXCART' EQ 'OUTPUT').ZI39E               00666600
&ZCGPR                SETC  '&XCART'                                    00666700
.*                                                                      00666800
                      AIF   ('&XCART'(1,1) NE '(').ZI39B                00666900
&ZCGPR   SETC  '0('.'&XCART'(2,K'&XCART-2).')'                          00667000
.ZI39B                ANOP  ,                                           00667100
.*                                                                      00667200
&ZOPN                 SETA  &ZOPN+1                                     00667300
&ZOPL(&ZOPN)          SETC  ' '                                         00667400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00667500
&ZOPV(&ZOPN)          SETC  '100(8,1),&ZCGPR'                           00667600
&ZOPD(&ZOPN)          SETC  '++ &ZXCART XCART'                          00667700
.*                                                                      00667800
.ZI39E                ANOP  ,                                           00667900
.*-------------------------------------------------------------------   00668000
.***AI.L25  XCONSNAME CL8                                               00668100
                      AIF   ('&ZXCONSNAME' EQ '').ZI40E                 00668200
                      AIF   ('&ZXCONSNAME' EQ 'OUTPUT').ZI40E           00668300
&ZCGPR                SETC  '&XCONSNAME'                                00668400
.*                                                                      00668500
                      AIF   ('&XCONSNAME'(1,1) NE '(').ZI40B            00668600
&ZCGPR   SETC  '0('.'&XCONSNAME'(2,K'&XCONSNAME-2).')'                  00668700
.ZI40B                ANOP  ,                                           00668800
.*                                                                      00668900
&ZOPN                 SETA  &ZOPN+1                                     00669000
&ZOPL(&ZOPN)          SETC  ' '                                         00669100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00669200
&ZOPV(&ZOPN)          SETC  '108(8,1),&ZCGPR'                           00669300
&ZOPD(&ZOPN)          SETC  '++ &ZXCONSNAME XCONSNAME'                  00669400
.*                                                                      00669500
.ZI40E                ANOP  ,                                           00669600
.*-------------------------------------------------------------------   00669700
.***AI.L18  XREXXOUTMEMNAME CL8                                         00669800
         AIF   ('&XREXXOUTMEMNAME' NE 'NO_REXXOUTMEMNAME').ZI41         00669900
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI41  CK *        00670000
&ZXREXXOUTMEMNAME     SETC  ''             RESET INPUT/OUTPUT           00670100
.ZI41                 ANOP  ,                                           00670200
.*-------------------------------------------------------------------   00670300
.***AI.L25  XREXXOUTMEMNAME CL8                                         00670400
                      AIF   ('&ZXREXXOUTMEMNAME' EQ '').ZI41E           00670500
                      AIF   ('&ZXREXXOUTMEMNAME' EQ 'OUTPUT').ZI41E     00670600
&ZCGPR                SETC  '&XREXXOUTMEMNAME'                          00670700
         AIF   ('&XREXXOUTMEMNAME' NE 'NO_REXXOUTMEMNAME').ZI41A        00670800
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI41E                          00670900
.*                                                                      00671000
&ZCGPR                SETC  '=XL8''00'''                                00671100
.ZI41A                ANOP  ,                                           00671200
.*                                                                      00671300
                      AIF   ('&XREXXOUTMEMNAME'(1,1) NE '(').ZI41B      00671400
&ZCGPR   SETC  '0('.'&XREXXOUTMEMNAME'(2,K'&XREXXOUTMEMNAME-2).')'      00671500
.ZI41B                ANOP  ,                                           00671600
.*                                                                      00671700
&ZOPN                 SETA  &ZOPN+1                                     00671800
&ZOPL(&ZOPN)          SETC  ' '                                         00671900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00672000
&ZOPV(&ZOPN)          SETC  '116(8,1),&ZCGPR'                           00672100
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXOUTMEMNAME XREXXOUTMEMNAME'      00672200
.*                                                                      00672300
.ZI41E                ANOP  ,                                           00672400
.*-------------------------------------------------------------------   00672500
.***AI.L18  XREXXINMEMNAME CL8                                          00672600
         AIF   ('&XREXXINMEMNAME' NE 'NO_REXXINMEMNAME').ZI42           00672700
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI42  CK *        00672800
&ZXREXXINMEMNAME      SETC  ''             RESET INPUT/OUTPUT           00672900
.ZI42                 ANOP  ,                                           00673000
.*-------------------------------------------------------------------   00673100
.***AI.L25  XREXXINMEMNAME CL8                                          00673200
                      AIF   ('&ZXREXXINMEMNAME' EQ '').ZI42E            00673300
                      AIF   ('&ZXREXXINMEMNAME' EQ 'OUTPUT').ZI42E      00673400
&ZCGPR                SETC  '&XREXXINMEMNAME'                           00673500
         AIF   ('&XREXXINMEMNAME' NE 'NO_REXXINMEMNAME').ZI42A          00673600
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI42E                          00673700
.*                                                                      00673800
&ZCGPR                SETC  '=XL8''00'''                                00673900
.ZI42A                ANOP  ,                                           00674000
.*                                                                      00674100
                      AIF   ('&XREXXINMEMNAME'(1,1) NE '(').ZI42B       00674200
&ZCGPR   SETC  '0('.'&XREXXINMEMNAME'(2,K'&XREXXINMEMNAME-2).')'        00674300
.ZI42B                ANOP  ,                                           00674400
.*                                                                      00674500
&ZOPN                 SETA  &ZOPN+1                                     00674600
&ZOPL(&ZOPN)          SETC  ' '                                         00674700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00674800
&ZOPV(&ZOPN)          SETC  '124(8,1),&ZCGPR'                           00674900
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXINMEMNAME XREXXINMEMNAME'        00675000
.*                                                                      00675100
.ZI42E                ANOP  ,                                           00675200
.*-------------------------------------------------------------------   00675300
.***AI.L25  XREQTOKEN CL16                                              00675400
                      AIF   ('&ZXREQTOKEN' EQ '').ZI43E                 00675500
                      AIF   ('&ZXREQTOKEN' EQ 'OUTPUT').ZI43E           00675600
&ZCGPR                SETC  '&XREQTOKEN'                                00675700
.*                                                                      00675800
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZI43B            00675900
&ZCGPR   SETC  '0('.'&XREQTOKEN'(2,K'&XREQTOKEN-2).')'                  00676000
.ZI43B                ANOP  ,                                           00676100
.*                                                                      00676200
&ZOPN                 SETA  &ZOPN+1                                     00676300
&ZOPL(&ZOPN)          SETC  ' '                                         00676400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00676500
&ZOPV(&ZOPN)          SETC  '132(16,1),&ZCGPR'                          00676600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  00676700
.*                                                                      00676800
.ZI43E                ANOP  ,                                           00676900
.*-------------------------------------------------------------------   00677000
.***AI.L19 ADDR3164 XREXXLIB AD                                         00677100
                      AIF   ('&ZXREXXLIB' EQ '').ZI48H                  00677200
&ZCLNG                SETC  '&XREXXLIB'                                 00677300
&ZCGPR                SETC  '14'                                        00677400
.*                                                                      00677500
&ZOPN                 SETA  &ZOPN+1                                     00677600
&ZOPL(&ZOPN)          SETC  ' '                                         00677700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00677800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00677900
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXLIB XREXXLIB'                    00678000
                      AIF   ('&SYSAM64' EQ 'YES').ZI48H1A               00678100
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI48C2             00678200
.*                                                                      00678300
&ZOPN                 SETA  &ZOPN+1                                     00678400
&ZOPL(&ZOPN)          SETC  ' '                                         00678500
&ZOPO(&ZOPN)          SETC  'XC'                                        00678600
&ZOPV(&ZOPN)          SETC  '80(4,1),80(1)'                             00678700
.ZI48C2               ANOP  ,                                           00678800
.*                                                                      00678900
&ZOPN                 SETA  &ZOPN+1                                     00679000
&ZOPL(&ZOPN)          SETC  ' '                                         00679100
&ZOPO(&ZOPN)          SETC  'ST'                                        00679200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+80(,1)'                           00679300
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXLIB XREXXLIB'                    00679400
.*                                                                      00679500
                      AGO   .ZI48H                                      00679600
.ZI48H1A              ANOP  ,                                           00679700
.*                                                                      00679800
&ZOPN                 SETA  &ZOPN+1                                     00679900
&ZOPL(&ZOPN)          SETC  ' '                                         00680000
&ZOPO(&ZOPN)          SETC  'STG'                                       00680100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,80(,1)'                             00680200
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXLIB XREXXLIB'                    00680300
.*                                                                      00680400
.ZI48H                ANOP  ,                                           00680500
.*-------------------------------------------------------------------   00680600
.***AI.L24 ALET XREXXLIB F                                              00680700
         AIF   ('&ZXREXXLIB' EQ '').ZI49G                               00680800
         AIF   ('&SYSASCE' EQ 'P').ZI49G   SYSSTATE PRIMARY             00680900
&ZCLNG                SETC  '&XREXXLIB'                                 00681000
.*                                                                      00681100
&ZCGPR                SETC  '14'                                        00681200
.*                                                                      00681300
&ZOPN                 SETA  &ZOPN+1                                     00681400
&ZOPL(&ZOPN)          SETC  ' '                                         00681500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00681600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,88(1)'                       00681700
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXLIB XREXXLIB'                    00681800
.*                                                                      00681900
.ZI49G                ANOP  ,                                           00682000
.*-------------------------------------------------------------------   00682100
.***AI.L25  XREXXLIBLEN F                                               00682200
                      AIF   ('&ZXREXXLIBLEN' EQ '').ZI50E               00682300
                      AIF   ('&ZXREXXLIBLEN' EQ 'OUTPUT').ZI50E         00682400
&ZCGPR                SETC  '&XREXXLIBLEN'                              00682500
.*                                                                      00682600
                      AIF   ('&XREXXLIBLEN'(1,1) NE '(').ZI50B          00682700
&ZCGPR   SETC  '0('.'&XREXXLIBLEN'(2,K'&XREXXLIBLEN-2).')'              00682800
                      AGO   .ZI50D                                      00682900
.ZI50B                ANOP  ,                                           00683000
.*                                                                      00683100
&ZC                   SETC  '&XREXXLIBLEN'(1,1)                         00683200
                      AIF   (T'&ZC NE 'N').ZI50D                        00683300
&ZC                   SETC  '&XREXXLIBLEN'                              00683400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI50D               00683500
&ZCGPR                SETC  '=AL4(&XREXXLIBLEN)'                        00683600
.*                                                                      00683700
.ZI50D                ANOP  ,                                           00683800
.*                                                                      00683900
&ZOPN                 SETA  &ZOPN+1                                     00684000
&ZOPL(&ZOPN)          SETC  ' '                                         00684100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00684200
&ZOPV(&ZOPN)          SETC  '92(4,1),&ZCGPR'                            00684300
&ZOPD(&ZOPN)          SETC  '++ &ZXREXXLIBLEN XREXXLIBLEN'              00684400
.*                                                                      00684500
.ZI50E                ANOP  ,                                           00684600
.*-------------------------------------------------------------------   00684700
&ZOPN1                SETA &ZOPN                                        00684800
.*-------------------------------------------------------------------   00684900
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              00685000
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         00685100
.*******************************************************************    00685200
.***  PROCESS AXREXX OUTPUT PARAMETERS                                  00685300
.*******************************************************************    00685400
                      ACTR  10000                                       00685500
.*------------------------------------------------------------------    00685600
.***AO.L02 XOREQTOKEN CL16                                              00685700
         AIF   ('&ZXOREQTOKEN' EQ 'OUTPUT').ZO46A  OUTPUT               00685800
         AIF   ('&ZXOREQTOKEN' NE 'INOUT').ZO46C  INOUT                 00685900
.ZO46A    AIF   ('&XOREQTOKEN'(1,1) NE '(').ZO46B  ADDR IN GPR          00686000
&ZCGPR   SETC  '&XOREQTOKEN'(2,K'&XOREQTOKEN-2)                         00686100
&ZOPN                 SETA  &ZOPN+1                                     00686200
&ZOPL(&ZOPN)          SETC  ' '                                         00686300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00686400
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),132(1)'                       00686500
&ZOPD(&ZOPN)          SETC  '++ XOREQTOKEN CL16'                        00686600
                      AGO   .ZO46C                                      00686700
.*                                                                      00686800
.ZO46B                ANOP  ,                                           00686900
&ZAWRK   SETA  K'&XOREQTOKEN                                            00687000
         AIF   ('&XOREQTOKEN'(&ZAWRK,1) NE ')').ZO46G                   00687100
&ZN      SETA  2                                                        00687200
.ZO46H    ANOP                                                          00687300
         AIF   (&ZN GE &ZAWRK).ZO46G                                    00687400
         AIF   ('&XOREQTOKEN'(&ZN,1) NE '(').ZO46I                      00687500
&ZC      SETC  '&XOREQTOKEN'(1,&ZN).'16'.','                            00687600
&ZC      SETC  '&ZC'.'&XOREQTOKEN'(&ZN+1,&ZAWRK-&ZN).',132(1)'          00687700
         AGO   .ZO46J                                                   00687800
.ZO46I    ANOP                                                          00687900
&ZN      SETA  &ZN+1                                                    00688000
         AGO   .ZO46H                                                   00688100
.ZO46G    ANOP                                                          00688200
&ZC      SETC  '&XOREQTOKEN.(16),132(1)'                                00688300
.ZO46J    ANOP                                                          00688400
&ZOPN                 SETA  &ZOPN+1                                     00688500
&ZOPL(&ZOPN)          SETC  ' '                                         00688600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00688700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00688800
&ZOPD(&ZOPN)          SETC  '++ XOREQTOKEN CL16'                        00688900
.ZO46C                ANOP  ,                                           00689000
.*******************************************************************    00689100
.***AO.X02  RETURN CODE PROCESSING                                      00689200
.*******************************************************************    00689300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00689400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00689500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00689600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00689700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00689800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00689900
&ZOPN                 SETA  &ZOPN+1                                     00690000
&ZOPL(&ZOPN)          SETC  ' '                                         00690100
&ZOPO(&ZOPN)          SETC  'ST'                                        00690200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00690300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00690400
                      AGO   .ZMRETX                                     00690500
.*                                                                      00690600
.ZMRET2               ANOP  ,                                           00690700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00690800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00690900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00691000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00691100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00691200
&ZOPN                 SETA  &ZOPN+1                                     00691300
&ZOPL(&ZOPN)          SETC  ' '                                         00691400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00691500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00691600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00691700
.ZMRETX               ANOP  ,                                           00691800
.*******************************************************************    00691900
.***AO.X03  REASON CODE PROCESSING                                      00692000
.*******************************************************************    00692100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00692200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00692300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00692400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00692500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00692600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00692700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00692800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00692900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00693000
&ZOPN                 SETA  &ZOPN+1                                     00693100
&ZOPL(&ZOPN)          SETC  ' '                                         00693200
&ZOPO(&ZOPN)          SETC  'ST'                                        00693300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00693400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00693500
                      AGO   .ZMRSNX                                     00693600
.*                                                                      00693700
.ZMRSN2               ANOP  ,                                           00693800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00693900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00694000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00694100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00694200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00694300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00694400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00694500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00694600
&ZOPN                 SETA  &ZOPN+1                                     00694700
&ZOPL(&ZOPN)          SETC  ' '                                         00694800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00694900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00695000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00695100
.ZMRSNX               ANOP  ,                                           00695200
.*******************************************************************    00695300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00695400
.*******************************************************************    00695500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00695600
.*******************************************************************    00695700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00695800
.*******************************************************************    00695900
                      ACTR  10000                                       00696000
.*                                                                      00696100
                      LCLA  &ZLC           COLUMN POSITION              00696200
                      LCLA  &ZOPX          LIST TABLE INDEX             00696300
                      LCLC  &ZLL           LABEL                        00696400
                      LCLC  &ZLOP          OPERATION                    00696500
                      LCLC  &ZLV           VALUE                        00696600
                      LCLC  &ZLD           DESCRIPTION                  00696700
.*                                                                      00696800
&ZOPX                 SETA  1                                           00696900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00697000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00697100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00697200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00697300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00697400
                      AIF   (K'&ZLD LE 0).ZL5                           00697500
&ZLC                  SETA  35             COMMENT COLUMN               00697600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00697700
&ZLC                  SETA  33             COMMMENT COLUMN              00697800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00697900
&ZLV                  SETC  '&ZLV'.' '                                  00698000
                      AGO   .ZL3                                        00698100
.*                                                                      00698200
.ZL4                  ANOP  ,                                           00698300
&ZLV                  SETC  '&ZLV'.' '                                  00698400
.ZL5                  ANOP  ,                                           00698500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00698600
.*                                                                      00698700
&ZLL     &ZLOP &ZLV                                                     00698800
.*                                                                      00698900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00699000
                      AGO   .ZL2           CONTINUE LOOPING             00699100
.*                                                                      00699200
.ZLX                  ANOP  ,                                           00699300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00699400
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                00699500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00699600
         AIF   ('&XMF' NE 'M').NOTM                                     00699700
&ZMS     SETC  'MF=M MAY NOT BE SPECIFIED'                              00699800
         MNOTE 8,'&ZMS'                                                 00699900
         POP   PRINT                                                    00700000
         MEXIT                                                          00700100
.NOTM ANOP                                                              00700200
         AIF   ('&COMPEXIT' NE 'LINK').NOTLINK                          00700300
&ZMS     SETC  'COMPEXIT=LINK MAY NOT BE SPECIFIED'                     00700400
         MNOTE 8,'&ZMS'                                                 00700500
         POP   PRINT                                                    00700600
         MEXIT                                                          00700700
.NOTLINK ANOP                                                           00700800
         AIF   ('&SYSAM64' NE 'YES').NTAM641                            00700900
&LOAD    SETC  'LLGT'                                                   00701000
         AGO  .AM641                                                    00701100
.NTAM641 ANOP                                                           00701200
&LOAD    SETC  'L   '                                                   00701300
.AM641   ANOP                                                           00701400
         &LOAD 14,16(0,0)        GET CVT ADDRESS                  @L2C  00701500
         L     14,140(14,0)      GET ECVT address                 @L2C  00701600
         L     14,844(14,0)      GET AXRB address                 @L2C  00701700
         LTR   14,14             AXRB exists?                           00701800
         JNP   AXREXX_NOTACT&SYSNDX  Branch if not active         @P6C  00701900
         &LOAD 15,16(14,0)       Obtain branch address            @P6C  00702000
         BALR  14,15             BALR to AXREXX processor               00702100
         J     AXREXX_ACTIVE&SYSNDX Skip bad return/reason codes  @P6C  00702200
AXREXX_NOTACT&SYSNDX DS    0H                                     @L2A  00702300
         LA    0,AxrNotActive    Indicate AXR not available             00702400
         LA    15,AxrRetcodeEnvError   Indicate environmental error     00702500
AXREXX_ACTIVE&SYSNDX DS    0H                                     @L2A  00702600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00702700
.ZLINKX               ANOP  ,                                           00702800
.*******************************************************************    00702900
.***AP.X01  FORMAT GENERATED CODE                                       00703000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00703100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00703200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00703300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00703400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00703500
                      AIF   (K'&ZLD LE 0).ZL51                          00703600
&ZLC                  SETA  35             COMMENT COLUMN               00703700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00703800
&ZLC                  SETA  33             COMMENT COLUMN               00703900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00704000
&ZLV                  SETC  '&ZLV'.' '                                  00704100
                      AGO   .ZL31                                       00704200
.*                                                                      00704300
.ZL41                 ANOP  ,                                           00704400
&ZLV                  SETC  '&ZLV'.' '                                  00704500
.ZL51                 ANOP  ,                                           00704600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00704700
.*                                                                      00704800
&ZLL     &ZLOP &ZLV                                                     00704900
.*                                                                      00705000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00705100
                      AGO   .ZL21          CONTINUE LOOPING             00705200
.*                                                                      00705300
.ZLX1                 ANOP  ,                                           00705400
.*******************************************************************    00705500
.***AP.X02  END OF AXREXX MACRO                                         00705600
&ZAXREXX              SETC  'YES'          SET AXREXX USED              00705700
         POP   PRINT                                                    00705800
*                                            AXREXX-0                   00705900
         SPACE 1                                                        00706000
.ZLX2                 ANOP  ,                                           00706100
         MEND                                                           00706200
**********************************************************************/ 00706300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00706400
*%AXREXX: MACRO KEYS(REQUEST,SECURITY,UTOKEN,TSO,REXXINDSN,             00706500
*                 REXXINMEMNAME,CONSDATA,CART,CONSNAME,TIMELIMIT,       00706600
*                 TIMEINT,NAME,REXXARGS,REXXVARS,REXXOUTDSN,            00706700
*                 REXXOUTMEMNAME,REXXDIAG,SYNC,OREQTOKEN,COMPEXIT,      00706800
*                 LINKEP,REQTOKEN,REXXLIB,REXXLIBLEN,RETCODE,RSNCODE,   00706900
*                 PLISTVER,MF);                                         00707000
*  ANS('?'!!MACLABEL!!' '!!'AXREXXP '!!MACLIST!!                        00707100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00707200
*%END AXREXX;                                                           00707300
