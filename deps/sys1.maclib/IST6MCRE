         MACRO                                                                  
         IST6MCRE &AREA=,&AREALEN=,&QUALIFY=,&CD=,&CONVID=,&CONMODE=,  X        
               &BRANCH=,&ECB=,&EXIT=,&OPTCD=,&FILL=,&CONXMOD=,         X        
               &INVALP1=,&INVALP2=,&VTRINA=,&VTRINL=,&VTROUTA=,        X        
               &VTROUTL=                                           @D1C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: IST6MCRE                                          */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: CONTROL = RECEIVE PROCESSOR                 */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1994.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR PROCESSING THE                 */         
.* /*      CONTROL=RECEIVE PARAMETER ON THE APPCCMD MACRO.           */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS:                                              */         
.* /*      IST6MCUA,IST6MCUP,IST6MCUC,IST6MCER                       */         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*                                                                */         
.* /*    07/11/88 - ADD CD= KEYWORD OPERAND FOR RECEIVE      @P058398*/         
.* /*    07/29/88 - FIX CD= FOR DEFER SETTING                @P058899*/         
.* /*                                                                */         
.* /*  $MAC(IST6MCRE),COMP(API),PROD(VTAM): CONTROL=RECEIVE PROCESSOR*/         
.* /*                                                                */         
.* /*  FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS         */         
.* /*  ---- -------- ------- ------ ------  ---------------------    */         
.* /*  $BB= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION         */         
.* /*  $I1= BR@@@MST APPCE01 911108 510689: APPC Receive Immediate   */         
.* /*  $I2= FF@@@MST APPCFDX 911118 879315: APPC Full-Duplex support */         
.* /*  $L1= KA@@@PLD APPCRR  930726 446638: DCE Security Services    */         
.* /*  $U2= P111572  GENRES  931029 879315: Split INVALKW keyword    */         
.* /*  $L2= KA@DR006 APPCRR  940713 576146: Vector Format            */         
.* /*  $D1= ID@@@MST FPAPI   941005 510689: Fast Path API for APPC   */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
         GBLB  &ISTGEN                                                          
         GBLB  &ISTRE                                                           
         AIF   (&ISTRE EQ 1).REINVKW                                            
*                                                                               
*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM                              
*                                                                               
*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"               
*                                                                               
*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1993.                      
*             ALL RIGHTS RESERVED.                                              
*                                                                               
*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -                         
*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY                      
*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.                          
*                                                                               
*             SEE COPYRIGHT INSTRUCTIONS.                                       
*                                                                               
&ISTRE   SETB  1                                                                
.REINVKW ANOP                                                                   
         IST6MCUC RECEIVE,CONTROL,INVALKW=&INVALP1                 @U2C         
         IST6MCUC RECEIVE,CONTROL,INVALKW=&INVALP2                 @U2A         
.*                                             CHECK INVALID APPCCMD            
.REAREA  ANOP                       ** AREA= PROCESSING **                      
         AIF   ('&AREA' EQ '').REALEN                                           
         IST6MCUA KWVAL=&AREA,LOC=RPLAREA-IFGRPL,BASEREG=1,            X        
               KW=AREA_ADDRESS                                                  
.*                                             PUT AREA ADDRESS IN RPL          
.REALEN  ANOP                       ** AREALEN= PROCESSING **                   
         AIF   ('&AREALEN' EQ '').REQFY                                         
         IST6MCUA KWVAL=&AREALEN,LOC=RPLBUFL-IFGRPL,BASEREG=1,         X        
               KW=AREA_LENGTH                                                   
.*                                             PUT AREA LENGTH IN RPL           
.REQFY   ANOP                       ** QUALIFY= PROCESSING **                   
         AIF   ('&QUALIFY' EQ '').REID                                          
.REQFY1  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'ANY').REQFY2                                     
         IST6MCUC ANY,QUALIFY,INVALKW=(FILL=&FILL,CONVID=&CONVID)               
         AIF   (NOT &ISTGEN).RECOMKW                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6ANY                                    
*                                         PUT ANY CODE IN APPC AREA             
         AGO   .RECOMKW                                                         
.REQFY2  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'IANY').REQFY3                       @I1A         
         IST6MCUC IANY,QUALIFY,INVALKW=(FILL=&FILL,CONVID=&CONVID) @I1A         
         AIF   (NOT &ISTGEN).RECOMKW                               @I1A         
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6IANY                      @I1A         
*                                      PUT IANY CODE IN APPC AREA  @I1A         
         AGO   .RECOMKW                                            @I1A         
.REQFY3  ANOP                                                      @I1A         
         AIF   ('&QUALIFY' NE 'SPEC').REQFY4                       @I1C         
         AIF   (NOT &ISTGEN).REFILL                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6SPEC                                   
*                                         PUT SPEC CODE IN APPC AREA            
         AGO   .REID                                                            
.REQFY4  ANOP                                                      @I1A         
         AIF   ('&QUALIFY' NE 'ISPEC').REQFYER                     @I1A         
         AIF   (NOT &ISTGEN).REFILL                                @I1A         
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6ISPC                      @I1A         
*                                      PUT ISPEC CODE IN APPC AREA @I1A         
         AGO   .REID                                               @I1A         
.REQFYER ANOP                                                      @I1A         
         IST6MCER 5,QUALIFY,&QUALIFY                                            
.REID    ANOP                       ** CONVID= PROCESSING **                    
         AIF   ('&CONVID' EQ '').REFILL                                         
         IST6MCUA KWVAL=&CONVID,LOC=RPL6CNVD-ISTRPL6X,BASEREG=14,      X        
               KW=CONVID                                                        
.*                                              PUT CONVID IN APPC AREA         
.REFILL  ANOP                       ** FILL= PROCESSING **                      
         AIF   ('&FILL' EQ '').RECOMKW                                          
         AIF   ('&FILL' NE 'LL').REFIL1                                         
         AIF   (NOT &ISTGEN).RECOMKW                                            
         OI    RPL6FLG1-ISTRPL6X(14),RPL6LL  SET FILL TO LL                     
         AGO   .RECOMKW                                                         
.REFIL1  ANOP                                                                   
         AIF   ('&FILL' NE 'BUFF').REFIL2                                       
         AIF   (NOT &ISTGEN).RECOMKW                                            
         NI    RPL6FLG1-ISTRPL6X(14),X'FF'-RPL6LL                               
*                                            SET FILL TO BUFF                   
         AGO   .RECOMKW                                                         
.REFIL2  ANOP                                                                   
         IST6MCER 5,FILL,&FILL                                                  
.RECOMKW ANOP                       ** COMMON KEYWORDS **                       
         AIF   ('&CD' EQ '').RECD0                             @P058398         
         AIF   ('&CD' NE 'IMMED').RECD1                        @P058398         
.RECD0   AIF   (NOT &ISTGEN).RECONMD                           @P058398         
         NI    RPL6FLG1-ISTRPL6X(14),X'FF'-RPL6CDDE            @P058899         
*                                            SET CD TO IMMED   @P058398         
         AGO   .RECONMD                                        @P058398         
.RECD1   ANOP                                                  @P058398         
         AIF   ('&CD' NE 'DEFER').RECD2                        @P058398         
         AIF   (NOT &ISTGEN).RECONMD                           @P058398         
         OI    RPL6FLG1-ISTRPL6X(14),RPL6CDDE                                   
*                                            SET CD TO DEFER   @P058899         
         AGO   .RECONMD                                        @P058398         
.RECD2   ANOP                                                  @P058398         
         IST6MCER 5,CD,&CD                                     @P058398         
.RECONMD ANOP                       ** CONMODE= PROCESSING **  @P058398         
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD PARAMETERX        
               CKBUFF=OBUF         XBUFLST/NBUFFLST IS        @I2C @D1C         
.*                                 VALID OPTCD PARARAMETER                      
.*                                     ENSURE BOTH PARMS ARE CODED @L1A         
.*                                     OR BOTH ARE NOT CODED       @L1A         
         AIF   (('&VTRINA' EQ '') AND ('&VTRINL' EQ '')).REVOUT    @D1C         
         AIF   (('&VTRINA' EQ '') OR  ('&VTRINL' EQ '')).REERVI    @D1C         
         IST6MCUA KWVAL=&VTRINA,LOC=RPL6VAIA-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_ADDRESS                      @D1C         
.*                                     STORE VECTOR AREA INPUT ADDRESS          
.*                                                                 @L1A         
.*                                  ** VTRINL = PROCESSING **      @L1A         
         IST6MCUA KWVAL=&VTRINL,LOC=RPL6VAIL-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_LENGTH,LEN=2                 @D1C         
.*                                     STORE VECTOR AREA INPUT LENGTH           
.*                                                                 @L1A         
         AGO   .REVOUT                                             @D1C         
.REERVI  ANOP                                                      @L1A         
         IST6MCER 13,VTRINA,VTRINL     ONLY ONE PARM CODED         @D1C         
.REVOUT  ANOP                          ENSURE BOTH PARMS ARE CODED              
.*                                     OR BOTH ARE NOT CODED       @D1A         
         AIF   (('&VTROUTA' EQ '') AND ('&VTROUTL' EQ '')).REREQ   @D1A         
         AIF   (('&VTROUTA' EQ '') OR ('&VTROUTL' EQ '')).REERVO   @D1A         
         IST6MCUA KWVAL=&VTROUTA,KW=APPL_TO_VTAM_VECTOR_ADDRESS,       X        
               LOC=RPL6VAOA-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT ADDRESS            
.*                                     IN APPC AREA                @D1A         
         IST6MCUA KWVAL=&VTROUTL,KW=APPL_TO_VTAM_VECTOR_LENGTH,LEN=2,  X        
               LOC=RPL6VAOL-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT LENGTH             
.*                                     IN APPC AREA                @D1A         
         AGO   .REREQ                                                           
.REERVO  ANOP                                                      @D1A         
         IST6MCER 13,VTROUTA,VTROUTL   ONLY ONE PARM CODED         @D1A         
.REREQ   ANOP                       ** MACRO REQUEST TYPE **                    
         AIF   (NOT &ISTGEN).REEXIT                                             
         MVI   RPL6REQ-ISTRPL6X(14),RPL6RCV                                     
*                               PUT RECEIVE REQUEST CODE IN APPC AREA           
.REEXIT  MEND                                                                   
