*                                                                       00001000
* %DCL HZSPQE_INCLUDED CHAR EXT;                                        00002000
* %DEACTIVATE HZSPQE_INCLUDED;                                          00003000
* %IF HZSPQE_INCLUDED = '' %THEN                                        00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 19025. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         HZSPQE &DSECT=YES,&LIST=YES,&TITLE=YES,&HZSPQE=YES,           *00009000
               &Pqe_LastUpdatedBy_Type=COND                             00010000
                      GBLC  &HZSPQE_INCLUDED                            00011000
                      GBLC  &ZCBPRINT                                   00012000
&HZSPQE_INCLUDED      SETC  'YES'                                       00013000
                      AIF   ('&LIST' EQ 'NONE').P0                      00014000
                      AIF   ('&TITLE' EQ 'NO').P5                       00015000
 TITLE                'HZSPQE  - Process Queue Element                 *00016000
                        '                                               00017000
.P5                   ANOP                                              00018000
**/ HZSPQE_1:;                                                          00019000
*/* START OF SPECIFICATIONS ******************************************* 00020000
*                                                                       00021000
*01* PROPRIETARY STATEMENT =                                            00022000
*                                                                       00023000
*    Licensed Materials - Property of IBM                               00024000
*    5650-ZOS                                                           00025000
*    COPYRIGHT IBM CORP. 2005,2019                                      00026000
*                                                                       00027000
*01* STATUS = HBB77C0                                                   00028000
*                                                                       00029000
*01* END OF PROPRIETARY STATEMENT                                       00030000
*                                                                       00031000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00032000
*01* END OF EXTERNAL CLASSIFICATION:                                    00033000
*                                                                       00034000
*01* DESCRIPTIVE NAME:  Process Queue Element                           00035000
*02*  ACRONYM:  PQE                                                     00036000
*                                                                       00037000
*01* MACRO NAME:  HZSPQE                                                00038000
*                                                                       00039000
*01* DSECT NAME:                                                        00040000
*     HZSPQE                                                            00041000
*     Pqe_LastUpdatedBy_Type                                            00042000
*                                                                       00043000
*01* COMPONENT:  IBM Health Checker for z/OS (SCHZS)                    00044000
*                                                                       00045000
*01* EYE-CATCHER:  PQE                                                  00046000
*02*   OFFSET:   0                                                      00047000
*02*   LENGTH:   4                                                      00048000
*                                                                       00049000
*01* STORAGE ATTRIBUTES:                                                00050000
*02*  SUBPOOL:  user-supplied                                           00051000
*02*  SUBPOOL INTERNAL:  Hchecker private                               00052000
*02*  KEY:   user-supplied                                              00053000
*02*  KEY INTERNAL:   8                                                 00054000
*02*  RESIDENCY: user-supplied                                          00055000
*                                                                       00056000
*01* SIZE:                                                              00057000
*             HZSPQE                 -- X'1000' bytes                   00058000
*             Pqe_LastUpdatedBy_Type -- X'0010' bytes                   00059000
*                                                                       00060000
*01* CREATED BY:                                                        00061000
*     A PQE is created within a user-supplied area by HZSQUERY          00062000
*     processing when returning data about a not-deleted check          00063000
*                                                                       00064000
*01* CREATED BY INTERNAL:                                               00065000
*     A PQE is created when a check is added via the HZSADDCK macro     00066000
*                                                                       00067000
*01* POINTED TO BY:                                                     00068000
*     None                                                              00069000
*                                                                       00070000
*01* POINTED TO BY INTERNAL:                                            00071000
*     The PQE for a specified check is passed as a parameter to the     00072000
*     check.                                                            00073000
*                                                                       00074000
*                                                                       00075000
*01* SERIALIZATION:                                                     00076000
*     None required                                                     00077000
*                                                                       00078000
*01* FUNCTION:                                                          00079000
*02* Maps the data for a check routine                                  00080000
*                                                                       00081000
*01* METHOD OF ACCESS:                                                  00082000
*02*  ASM:                                                              00083000
*      HZSPQE                                                           00084000
*           DSECT=YES!NO  -- Request DSECT definition                   00085000
*           HZSPQE=YES!NO!COND -- Request Header record mapping         00086000
*                            USING on HZSPQE                            00087000
*           PQE_LastUpdatedBy_Type=YES!NO!COND -- Request mapping       00088000
*                            for LastUpdatedBy.                         00089000
*                            USING on PQE_LastUpdatedBy_Type            00090000
*     Default: DSECT=YES,HZSPQE=YES,PQE_LastUpdatedBy_Type=COND         00091000
*     Notes: name=YES  => expand                                        00092000
*            name=NO   => do not expand                                 00093000
*            name=COND => expand only if DSECT=YES                      00094000
*                                                                       00095000
*02*   PL/X:                                                            00096000
*                                                                       00097000
*        ?ASAADMAC NAME(HZSPQE)                                         00098000
*                                                                       00099000
*        By default, the PQE is based on PQE_Ptr. If other              00100000
*        basing is desired, use %PQEBASED='xxxxx'.                      00101000
*        Or specify %HZSPQE_TYPE = 'NODCL' to get a TYPE definition     00102000
*          with no additional DCLs                                      00103000
*                                                                       00104000
*01* DELETED BY:                                                        00105000
*        Caller of HZSQUERY                                             00106000
*                                                                       00107000
*01* DELETED BY INTERNAL:  IBM Health Checker for z/OS when             00108000
*                 one of the following occurs:                          00109000
*                 * The check is deleted - DELCHK/DELCAT                00110000
*                 * The check is refreshed - REFRESH                    00111000
*                 * Health Checker is shutting down                     00112000
*                                                                       00113000
*01* FREQUENCY:  One PQE per check                                      00114000
*                                                                       00115000
*01* DEPENDENCIES:  hzshpqe.h Metal C header file                       00116000
*                                                                       00117000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00118000
*                                                                       00119000
*01* CHANGE ACTIVITY:                                                   00120000
*  $L0=HCHECK   HZS7720,040401,PD00MP: Health Checker Initial release   00121000
*  $P1=ME01424  HZS7720,040804,PD00MP: Bilingual support                00122000
*  $L1=ME01560  HZS7720,040821,PD00ZJ: change basing default            00123000
*  $P2=ME01717  HZS7720,040915,PD00MP: Hide Internal PQE data           00124000
*  $P4=ME02679  HZS7720,050118,PD00XB: Policy Date Exception            00125000
*  $P5=xxxxxxx  HZS7720,050517,PD00MP: PQE_GlobalCheck_RanElsewhere     00126000
*  $P6=xxxxxxx  HZS7720,050727,PD00MP: PQE_GlobalCheck_Sysname is       00127000
*                                      valid for current system         00128000
*  $L2=HCR8     HBB7730 051001 PD00XB: R8                               00129000
*  $P7=ME05073  HBB7730 051111,PD00XB: Move PQE_Fail_Count_Abend        00130000
*  $P8=ME05843  HBB7730 060223 PD00XB: TimeLimit                        00131000
*  $P9=MExxxxx  HBB7730 060418 PD00XB: LastUpdatedBy_System             00132000
*  $PA=MExxxxx  HBB7730 060508 PD00XB: Fail_Count_NotAvail              00133000
*  $L3=HCR9     HBB7740 060712 PD00XB: REXXTSO                          00134000
*  $L4=xxxxxx   HBB7750 060701 PD00XB: LastRan                          00135000
*  $L5=HCR10    HBB7750 070101 PD00XB: R10                              00136000
*  $PB=ME11655  HBB7750 071101 PD00XB: CS logic                         00137000
*  $L6=HCR11    HBB7750 080318 PD00MB: R11                              00138000
*  $L8=ME19322  HBB7780 100614 RD00UT: DOM Control                      00139000
*  $L9=ME19736  HBB7780 100811 RD00UT: Severity Control                 00140000
*  $LA=ME19927  HBB7780 100908 RD00UT: Timed Checks                     00141000
*  $LB=ME20157  HBB7780 101022 RD00UT: Timed Checks 2                   00142000
*  $LC=ME20971  HBB7780 110211 RD00UT: DOM Disabled                     00143000
*  $L7=ME21792  HBB7790 110615 RD00UT: ZTT CheckTimeDivide              00144000
*  $LD=X120800  HBB77B0 160627 RD00UT: Two ENVNA flavors                00145000
*  $LE=HZSV2R4  HBB77C0 171002 RD00UT: Update REXXHLQ                   00146000
*                                                                       00147000
* ****************************************************************      00148000
* *** Any and all changes to this macro MUST also be reflected ***      00149000
* *** in the corresponding Metal C header file hzshpqe.h       ***      00150000
* ****************************************************************      00151000
*                                                                       00152000
* END OF SPECIFICATIONS *********************************************/  00153000
*% /*                                                                   00154000
.P0                   ANOP                                              00155000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00156000
                      AIF   ('&LIST' EQ 'YES').P2                       00157000
.P1                   ANOP                                              00158000
                      PUSH  PRINT                                       00159000
                      PRINT OFF                                         00160000
.P2                   ANOP                                              00161000
                      AIF   ('&HZSPQE' EQ 'NO').L0002                   00162000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00163000
                      AIF   ('&HZSPQE' NE 'YES').L0002                  00164000
HZSPQE                DS    0D     Process Queue Element                00165000
                      AGO   .L0004                                      00166000
.L0003                ANOP                                              00167000
HZSPQE                DSECT        Process Queue Element                00168000
.L0004                ANOP                                              00169000
*                                                                       00170000
*      ***************************************************************  00171000
*      *                                                             *  00172000
*      * PQEHeader: General control block information Offset:        *  00173000
*      * 0000/'0000'X Length: 0128/'0080'X                           *  00174000
*      *                                                             *  00175000
*      ***************************************************************  00176000
*                                                                       00177000
*                                                                       00178000
PQEHeader             DS    CL128  PQE header information               00179000
                      ORG   PQEHeader                                   00180000
PQE_ID                DS    CL4    Eye catcher: 'PQE '                  00181000
PQE_Version           DS    H      Version - 0 (Incompatible PQE       *00182000
                                   mappings will result in new version *00183000
                                   numbers.)                            00184000
                      DS    CL2    Reserved                             00185000
PQE_DynamicAreaAddr   DS    A      Dynamic area for Check routine:     *00186000
                                   Address of 4K dynamic work area     *00187000
                                   (Assumed dirty, do not use before   *00188000
                                   set)                                 00189000
                      ORG   PQE_DynamicAreaAddr                         00190000
PQE_DynamicArea@      DS    A                                           00191000
                      DS    CL20                                        00192000
*                                                                       00193000
*                                                                       00194000
*                                                                       00195000
*                                                                       00196000
PQE_Text_String2      DS    CL96   Text strings that can be used for   *00197000
                                   display. Valid only as output from  *00198000
                                   HZSQUERY when TEXTSTRING=YES         00199000
                      ORG   PQE_Text_String2                            00200000
PQE_Text_String_Origin DS   CL8    For example, HZSADDCK. Valid only   *00201000
                                   as output from HZSQUERY when        *00202000
                                   TEXTSTRING=YES                       00203000
PQE_Text_String_Locale DS   CL8    For example, REMOTE. Valid only as  *00204000
                                   output from HZSQUERY when           *00205000
                                   TEXTSTRING=YES                       00206000
*                                                                       00207000
*      ***************************************************************  00208000
*      *                                                             *  00209000
*      * Note: RexxIn and RexxOut datasets names will never exceed 34*  00210000
*      * characters: hlq.execname.REXXOUT (8+1+8+1+7)                *  00211000
*      * hlq.execname.REXXOUT.E####### (8+1+8+1+7+1+8)               *  00212000
*      * hlq.execname.REXXIN (8+1+8+1+6) hlq.execname.REXXIN.E#######*  00213000
*      * (8+1+8+1+6+1+8) Therefore, a short dataset name can be used.*  00214000
*      *                                                             *  00215000
*      ***************************************************************  00216000
*                                                                       00217000
*                                                                       00218000
PQE_Text_String_Rexx_dsns DS CL80                                       00219000
                      ORG   PQE_Text_String_Rexx_dsns                   00220000
PQE_Text_String_RexxIN_dsn DS CL40 REXX input dsn:                     *00221000
                                   hlq.execname.REXXIN.E#######, or    *00222000
                                   hlq.execname.REXXIN. Valid only as  *00223000
                                   output from HZSQUERY when           *00224000
                                   TEXTSTRING=YES and PQE_REXXIN='1'b   00225000
PQE_Text_String_RexxOUT_dsn DS CL40 REXX out dsn:                      *00226000
                                   hlq.execname.REXXOUT.E#######, or   *00227000
                                   hlq.execname.REXXOUT. Valid only as *00228000
                                   output from HZSQUERY when           *00229000
                                   TEXTSTRING=YES and PQE_REXX='1'b     00230000
*                                                                       00231000
*      ***************************************************************  00232000
*      *                                                             *  00233000
*      * PQEMsgInfo Check message information Offset: 0128/'0080'X   *  00234000
*      * Length: 0128/'0080'X                                        *  00235000
*      *                                                             *  00236000
*      ***************************************************************  00237000
*                                                                       00238000
*                                                                       00239000
PQEMsginfo            DS    CL128  Message info area                    00240000
                      ORG   PQEMsginfo                                  00241000
PQE_LastBlockId       DS    CL8    System Logger BlockID of the last   *00242000
                                   successful complete write of the    *00243000
                                   message stream to System Logger      00244000
PQE_MsgTimeStamp      DS    CL16   Time stamp (Local & GMT Time) of    *00245000
                                   the last successful complete write  *00246000
                                   to System Logger                     00247000
                      DS    CL8    Reserved for future use              00248000
PQE_Reserved2         DS    CL96   RESERVED FOR IBM PROPRIETARY        *00249000
                                   PROGRAMMING SUPPORT                  00250000
*                                                                       00251000
*      ***************************************************************  00252000
*      *                                                             *  00253000
*      * PQEStatus Check status, return codes, severity, categories, *  00254000
*      * etc. Offset: 0256/'0100'X Length: 0256/'0100'X              *  00255000
*      *                                                             *  00256000
*      ***************************************************************  00257000
*                                                                       00258000
*                                                                       00259000
PQEStatus             DS    CL256  Global check information             00260000
                      ORG   PQEStatus                                   00261000
PQE_Fail_Count        DS    F      Number of times the check has       *00262000
                                   failed in a row. This could have    *00263000
                                   been an abend or, for a REXX check, *00264000
                                   unsuccessful completion.             00265000
PQE_Started_Extended_TOD DS BL16   When the check last started. This   *00266000
                                   is the time when the system marked  *00267000
                                   the check ready to run. It might    *00268000
                                   not yet have actually begun running *00269000
                                   (perhaps because no worker tasks    *00270000
                                   are available). This field is       *00271000
                                   displayed preceded by "LAST RAN"    *00272000
                                   but if the display shows            *00273000
                                   "SCHEDULED" it has not actually run *00274000
                                   yet.                                 00275000
                      ORG   PQE_Started_Extended_TOD                    00276000
                      DS    B      High byte of eTOD                    00277000
PQE_Started_TOD       DS    BL8    TOD: check last started              00278000
                      ORG   PQE_Started_TOD                             00279000
PQE_Started_TOD_High  DS    BL4    High order word                      00280000
PQE_Started_TOD_Low   DS    BL4    Low order word                       00281000
                      DS    BL7    Low bytes of eTOD                    00282000
PQE_NextScheduled_Extended_TOD DS BL16 When the check is next          *00283000
                                   scheduled to start. Note that when  *00284000
                                   PQE_Do_Not_Call_Flags is non-zero,  *00285000
                                   this field does not contain valid   *00286000
                                   information.                         00287000
                      ORG   PQE_NextScheduled_Extended_TOD              00288000
PQE_NextScheduled_ETOD DS   BL16   When the check is next next         *00289000
                                   scheduled to start. Note that when  *00290000
                                   PQE_Do_Not_Call_Flags is non-zero,  *00291000
                                   this field does not contain valid   *00292000
                                   information.                         00293000
                      ORG   PQE_NextScheduled_ETOD                      00294000
                      DS    B      High byte of eTOD                    00295000
PQE_NextScheduled_TOD DS    BL8    TOD: Next scheduled check start as  *00296000
                                   per TIMEINT                          00297000
                      ORG   PQE_NextScheduled_TOD                       00298000
PQE_NextScheduled_TOD_High DS BL4  High order word                      00299000
PQE_NextScheduled_TOD_Low DS BL4   Low order word                       00300000
                      DS    BL7    Low bytes of eTOD                    00301000
PQE_GlobalCheck_Sysname DS  CL8    The name of the system on which     *00302000
                                   that check is active. Set for       *00303000
                                   HZSQUERY when                       *00304000
                                   GLOBALCHECK=FINDSYSTEM is specified *00305000
                                   only                                 00306000
PQE_LastRan           DS    CL8    STCK value when check last ran       00307000
PQE_Result_And_Diag   DS    CL12                                        00308000
                      ORG   PQE_Result_And_Diag                         00309000
PQE_Result            DS    F      Result from the last check          *00310000
                                   invocation (See equates             *00311000
                                   PQE_Result_xxx) =0, No exceptions   *00312000
                                   found (Or SEV(None) w/exceptions)   *00313000
                                   =4, SEV(L) Exception found =8,      *00314000
                                   SEV(M) Exception found =12, SEV(H)  *00315000
                                   Exception found                      00316000
PQE_DIAG              DS    CL8    Diagnostic information from the     *00317000
                                   check routine                        00318000
                      ORG   PQE_DIAG                                    00319000
PQE_DIAG1             DS    CL4    First word of DIAG                   00320000
PQE_DIAG2             DS    CL4    Second word of DIAG                  00321000
PQE_Time_Intvl        DS    F      Time interval in .01 seconds        *00322000
                                   between runnings of the check. A    *00323000
                                   value of 0 indicates that the check *00324000
                                   was defined as ONETIME.              00325000
PQE_Check_Count       DS    F      The check iteration number since    *00326000
                                   initialized / refreshed. Updated    *00327000
                                   just before calling the "check"     *00328000
                                   function. For a remote check,       *00329000
                                   includes times when the system      *00330000
                                   attempted to start a check but the  *00331000
                                   check itself might not have         *00332000
                                   confirmed that it got control        00333000
PQE_Do_Not_Call_Flags DS    BL4    Do not call the checking routine     00334000
                      ORG   PQE_Do_Not_Call_Flags                       00335000
PQE_Do_Not_Call_Flags_Not_Transient DS BL3                              00336000
                      ORG   PQE_Do_Not_Call_Flags_Not_Transient         00337000
PQE_Do_Not_Call_Flags_ByHC DS B    Flags determined by health checker   00338000
                      ORG   PQE_Do_Not_Call_Flags_ByHC                  00339000
PQE_ByHC_ResetOnParmChange DS B                                         00340000
*  Bit definitions:                                                     00341000
PQE_Error_Threshold_Exceeded EQU X'80' Check routine abended 2         *00342000
                                   consecutive times, or the check     *00343000
                                   initialization routine failed        00344000
PQE_CheckRoutine_Init_Error EQU X'40' Error within INIT function of    *00345000
                                   check routine                        00346000
PQE_CheckRoutine_Delete_Error EQU X'20' Error within DELETE function   *00347000
                                   of check routine                     00348000
PQE_Missing_DOM_Error EQU   X'10'  A DOM(CHECK) check missed to DOM    *00349000
                                   exception WTOs from a previous      *00350000
                                   check iteration, when the current   *00351000
                                   iteration ended without check       *00352000
                                   exception.                           00353000
PQE_Error_Threshold_Exceeded_Abend EQU X'08' When the error threshold  *00354000
                                   was exceeded, it was because of an  *00355000
                                   abend (as opposed to an             *00356000
                                   unsuccessful REXX check)             00357000
                      ORG   PQE_Do_Not_Call_Flags_ByHC+1                00358000
PQE_Do_Not_Call_Flags_ByCheck DS B Flags determined by the check       *00359000
                                   routine                              00360000
                      ORG   PQE_Do_Not_Call_Flags_ByCheck               00361000
PQE_ByCheck_ResetOnParmChange DS B                                      00362000
*  Bit definitions:                                                     00363000
PQE_Environment_NA_Disabled EQU X'80' HZS1003E - Check not applicable  *00364000
                                   in current environment and is being *00365000
                                   disabled. See also                  *00366000
                                   PQE_Environment_NA_Enabled           00367000
PQE_Environment_NA    EQU   X'80'  old alias for now                   *00368000
                                   PQE_Environment_NA_Disabled          00369000
PQE_Parm_Error        EQU   X'40'  HZS1001i Parameter error found for  *00370000
                                   this check                           00371000
PQE_UnExpected_Error_STOP EQU X'20' Unexpected error via HZSFMSG       *00372000
                                   REQUEST=STOP                         00373000
                      ORG   PQE_Do_Not_Call_Flags_ByCheck+1             00374000
PQE_Do_Not_Call_Flags_ByUser DS B  Flags determined by the             *00375000
                                   user/customer                        00376000
*  Bit definitions:                                                     00377000
PQE_Deactivated       EQU   X'80'  Check was deactivated (must be      *00378000
                                   activated before check is started    00379000
                      ORG   PQE_Do_Not_Call_Flags_Not_Transient+3       00380000
PQE_Do_Not_Call_Flags_ByHC_Transient DS B                               00381000
*  Bit definitions:                                                     00382000
PQE_WaitingForPriorToBeDeleted EQU X'80' Check can not be activated    *00383000
                                   until the prior copy has been       *00384000
                                   deleted                              00385000
PQE_GlobalCheck_ActiveElsewhere EQU X'40' Global check is active on    *00386000
                                   another system within the sysplex    00387000
PQE_USS_NotAvail      EQU   X'20'  This check is known to be a USS     *00388000
                                   user, but USS is down at the moment  00389000
PQE_REXX_NotAvail     EQU   X'10'  This check is known to be a REXX    *00390000
                                   user, but REXX services are not     *00391000
                                   available                            00392000
PQE_REXX_TooBusy      EQU   X'08'  This check is known to be a REXX    *00393000
                                   user, but REXX is currently         *00394000
                                   "too busy".                          00395000
PQE_REXX_Full         EQU   X'08'                                       00396000
                      ORG   PQE_Do_Not_Call_Flags+4                     00397000
PQE_Union             DS    CL84                                        00398000
                      ORG   PQE_Union                                   00399000
PQE_WTO_WorkArea      DS    CL84                                        00400000
                      ORG   PQE_WTO_WorkArea                            00401000
PQE_WTO_Num_Outstanding DS  F      Not part of the intended interface. *00402000
                                   Number of (most) outstanding, not   *00403000
                                   DOM'd, WTOs issued by this check.   *00404000
                                   Differences between this and        *00405000
                                   PQE_OutstandingExceptions: - this   *00406000
                                   includes non-"exception message"    *00407000
                                   WTOs, like from HZSFMSG             *00408000
                                   REQUEST=HZSMSG - this is capped -   *00409000
                                   this can include counts for a       *00410000
                                   different iteration, if DOM(CHECK)   00411000
*                                  is in effect "Most", since some     *00412000
                                   WTOs are tracked individually.       00413000
                      ORG   PQE_Union                                   00414000
PQE_Text_Strings      DS    CL84   Text strings that can be used for   *00415000
                                   display. Valid only as output from  *00416000
                                   HZSQUERY when TEXTSTRING=YES         00417000
                      ORG   PQE_Text_Strings                            00418000
                      DS    CL4    Padding                              00419000
PQE_Text_String_State DS    CL18   For example, ACTIVE(ENABLED). Valid *00420000
                                   only as output from HZSQUERY when   *00421000
                                   TEXTSTRING=YES                       00422000
PQE_Text_String_Global DS   CL6    GLOBAL or blank. Valid only as      *00423000
                                   output from HZSQUERY when           *00424000
                                   TEXTSTRING=YES                       00425000
PQE_Text_String_Status DS   CL16   For example, RUNNING. Valid only as *00426000
                                   output from HZSQUERY when           *00427000
                                   TEXTSTRING=YES                       00428000
PQE_Text_String_Severity DS CL6    For example, MEDIUM. Valid only as  *00429000
                                   output from HZSQUERY when           *00430000
                                   TEXTSTRING=YES                       00431000
PQE_Text_String_Wtotype DS  CL9    For example, IMMEDIATE. Valid only  *00432000
                                   as output from HZSQUERY when        *00433000
                                   TEXTSTRING=YES                       00434000
PQE_Text_String_ModifiedBy DS CL24 For example,                        *00435000
                                   STMT(pppppppppppppppp). Valid only  *00436000
                                   as output from HZSQUERY when        *00437000
                                   TEXTSTRING=YES                       00438000
                      ORG   PQE_Union+84                                00439000
PQE_Check_Status      DS    BL4    We need CS logic at least for Byte  *00440000
                                   1, which has the possibility of     *00441000
                                   concurrent updates between HZSTKSCH *00442000
                                   and HZSAACMD. Rather than worry     *00443000
                                   about whether that byte alone is    *00444000
                                   sufficient, the whole word is made  *00445000
                                   to use CS manipulation               00446000
                      ORG   PQE_Check_Status                            00447000
PQE_Check_StatusB0    DS    B      Byte 0                               00448000
*  Bit definitions:                                                     00449000
PQE_ParmErrorsDetected EQU  X'80'  HZSPRMxx parameters detected for    *00450000
                                   this check were found in error and  *00451000
                                   will not be used, the check will    *00452000
                                   still be executed                    00453000
PQE_InitializationIncomplete EQU X'40' Check initialization for this   *00454000
                                   check has not been completed (Run   *00455000
                                   init)                                00456000
PQE_Deleting          EQU   X'20'  Delete processing has started        00457000
PQE_NotLogged         EQU   X'10'  there is a message buffer, and some *00458000
                                   or all of the current buffer has    *00459000
                                   NOT been copied to to the message   *00460000
                                   buffer                               00461000
PQE_Init_called       EQU   X'08'  Check_Init was called. When         *00462000
                                   initially inactive, we will not     *00463000
                                   call INIT routine. So we remember   *00464000
                                   that we need to do that, for when   *00465000
                                   ACTIVATE occurs. But once this is   *00466000
                                   set, it is never reset so that on a *00467000
                                   subsequent DEACTIVATE we do not     *00468000
                                   call any longer                      00469000
PQE_ModifiedNotByPolicy EQU X'04'  This check has been modified not by *00470000
                                   a policy statement, so updates will *00471000
                                   be lost if a refresh occurs          00472000
PQE_UpdatesNotYetMerged EQU X'02'  Valid only within HZSQUERY output,  *00473000
                                   indicates that a currently          *00474000
                                   scheduled check routine might not   *00475000
                                   yet reflect the most recent update  *00476000
                                   request(s)                           00477000
PQE_SetToForce        EQU   X'01'  Need to Force this check, which is  *00478000
                                   a strong delete                      00479000
PQE_Check_StatusB1    DS    B      Byte 1                               00480000
*  Bit definitions:                                                     00481000
PQE_Checkrunning      EQU   X'80'  Check is currently scheduled to run  00482000
PQE_WaitingForTimerPop EQU  X'40'  PQE_NextScheduled_Tod is is set for *00483000
                                   the future and waiting to go off.   *00484000
                                   This is an internal flag             00485000
PQE_Timer_Running     EQU   X'40'  old name for this field              00486000
PQE_Forced            EQU   X'20'  Force (CALLRTM ABTERM) done          00487000
PQE_PolicyDateException EQU X'10'  A policy statement matches this     *00488000
                                   check, but the date on that policy  *00489000
                                   statement is earlier than the       *00490000
                                   check's date and the policy date    *00491000
                                   was not NOCHECK                      00492000
PQE_PolicyDateExceptionTemp EQU X'08'                                   00493000
PQE_CheckRoutineInControl EQU X'04' The check routine is currently in  *00494000
                                   control                              00495000
PQE_OnScheduleQueue   EQU   X'02'  PQE is on scheduled queue This is   *00496000
                                   an internal flag.                    00497000
PQE_Never_run         EQU   X'01'  Check has not run yet: Scheduled to *00498000
                                   run the first time. This is an      *00499000
                                   internal flag.                       00500000
PQE_Check_StatusB2    DS    B      Byte 2                               00501000
*  Bit definitions:                                                     00502000
PQE_Unexpected_Error_HZSMSG EQU X'80' Unexpected error specified via   *00503000
                                   HZSFMSG REQUEST=HZSMSG               00504000
PQE_NotReallyScheduled EQU  X'40'  The check is being processed by the *00505000
                                   system, but not in order to run it   00506000
PQE_GlobalCheck_RanElsewhere EQU X'20' The last time an attempt was    *00507000
                                   made to run this global check on    *00508000
                                   this system, it was active on       *00509000
                                   another system in the sysplex,      *00510000
                                   However, it is no longer active on  *00511000
                                   any system in the sysplex. Valid    *00512000
                                   only as output from HZSQUERY         00513000
PQE_Refreshing        EQU   X'10'  Refresh processing has started       00514000
PQE_Fail_Count_Abend  EQU   X'08'  The last time that the fail count   *00515000
                                   was incremented it was because of   *00516000
                                   an abend (as opposed to an          *00517000
                                   unsuccessful REXX check)             00518000
PQE_Fail_Count_NotAvail EQU X'04'  The last time that the fail count   *00519000
                                   was incremented it was because of a *00520000
                                   SYSREXX memterm, so that REXX is no *00521000
                                   longer available                     00522000
PQE_PolicySyncValException EQU X'02' A policy statement matches this   *00523000
                                   check, but the SyncVal and          *00524000
                                   (E)Interval values between that     *00525000
                                   policy stmt and the check are in    *00526000
                                   conflict.                            00527000
PQE_PolicySyncValExceptionTemp EQU X'01'                                00528000
PQE_Check_StatusB3    DS    B      Byte 3                               00529000
*  Bit definitions:                                                     00530000
PQE_ClearOnCheckCall  EQU   X'FE'  Reset each time the CHECK function  *00531000
                                   is called                            00532000
PQE_CheckAbended      EQU   X'80'  The check abended while running but *00533000
                                   the abend has not yet been counted  *00534000
                                   within PQE_Fail_Count. To tell if a *00535000
                                   check failed on its last iteration, *00536000
                                   see if PQE_Fail_Count is non-zero.   00537000
PQE_Diag_From         EQU   X'70'  Diag_From bits                       00538000
PQE_Diag_From_Abend   EQU   X'40'  PQE_Diag contains abend code and    *00539000
                                   abend reason code from SDWACMPC and *00540000
                                   SDWACRC                              00541000
PQE_Diag_From_HC      EQU   X'20'  PQE_Diag contains data set by HC     00542000
PQE_Diag_From_CheckRoutine EQU X'10' PQE_Diag contains diagnostic data *00543000
                                   provided by the check routine        00544000
PQE_CleanupInDifferentTaskThanCheck EQU X'08'                           00545000
PQE_RemoteCheckUnsuccessful EQU X'04' When a REXX check ran, it either *00546000
                                   did not issue LINKMVS HZSLSTRT or,  *00547000
                                   according to AXREXX, it did not     *00548000
                                   complete successfully. Or when      *00549000
                                   starting a remote not REXX check,   *00550000
                                   the release did not work to get it  *00551000
                                   started                              00552000
PQE_Environment_NA_Enabled EQU X'02' HZS1004I - Check not applicable   *00553000
                                   in current environment and is       *00554000
                                   staying enabled                      00555000
                      ORG   PQE_Check_Status+4                          00556000
PQE_OutstandingExceptions DS F     The number of exceptions found by   *00557000
                                   the most current iteration of the   *00558000
                                   check.                               00559000
PQE_Function_code     DS    F      Checks may get control for function *00560000
                                   codes: Pqe_Function_Code_Init 1     *00561000
                                   Pqe_Function_Code_Check 2           *00562000
                                   Pqe_Function_Code_cleanup 3         *00563000
                                   Pqe_Function_Code_Delete 7FFFFFFF    00564000
PQE_DataspaceALET     DS    F      For a non-remote check, the ALET of *00565000
                                   a data space on the DU-AL that the  *00566000
                                   check routine may use for any       *00567000
                                   purpose it desires. The check       *00568000
                                   routine must not assume that any of *00569000
                                   the storage is 0. The check may use *00570000
                                   all the storage in the range        *00571000
                                   1000-x'7FFEFFF'.                     00572000
PQE_DataspaceSTOKEN   DS    CL8    For a non-remote check, the STOKEN  *00573000
                                   of the data space addressed by      *00574000
                                   PQE_DataspaceALET. If the check     *00575000
                                   routine uses more than two pages of *00576000
                                   data space storage it should issue  *00577000
                                   DSPSERV RELEASE using this STOKEN   *00578000
                                   and the used range upon completion  *00579000
                                   of the check function (or in the    *00580000
                                   cleanup function).                   00581000
PQE_LastCPUTime_Check DS    F      The CPU time used by the "check"    *00582000
                                   function the last time it ran. This *00583000
                                   value is captured from bytes 2-5 of *00584000
                                   TCBTTIME before and after the check *00585000
                                   function. A value of 7FFFFFFF       *00586000
                                   indicates that the value was        *00587000
                                   greater than or equal to            *00588000
                                   x'7FFFFFFF'.                         00589000
PQE_MaxCPUTime_Check  DS    F      The maximum CPU time used by the    *00590000
                                   "check" function. This value is     *00591000
                                   captured from bytes 2-5 of TCBTTIME *00592000
                                   before and after the check          *00593000
                                   function. A value of 7FFFFFFF       *00594000
                                   indicates that the value was        *00595000
                                   greater than or equal to            *00596000
                                   x'7FFFFFFF'.                         00597000
PQE_Environment       DS    BL4    The current operating environment    00598000
*  Bit definitions:                                                     00599000
PQE_Environment_XCFLocal EQU X'80' Xcf local mode                       00600000
PQE_Environment_XCFMonoPlex EQU X'40' Xcf Monoplex                      00601000
PQE_Remote            EQU   X'20'  This is a REMOTE check               00602000
PQE_REXX              EQU   X'10'  This is a REXX check                 00603000
                      DS    BL.028 Reserved for future use              00604000
                      ORG   PQE_Environment+4                           00605000
PQE_LastResult        DS    F      Result when check last ran           00606000
PQE_Cum_Check_Count   DS    F      The cumulative check iteration      *00607000
                                   number since initialized. This      *00608000
                                   differs from PQE_Check_Count in     *00609000
                                   that it is not reset when a refresh *00610000
                                   occurs. It is updated just before   *00611000
                                   calling the "check" function. For a *00612000
                                   remote check, includes times when   *00613000
                                   the system attempted to start a     *00614000
                                   check but the check itself might    *00615000
                                   not have confirmed that it got       00616000
*                                  control                              00617000
PQE_LastOutstandingExceptions DS F The number of exceptions found by   *00618000
                                   the last complete iteration of the  *00619000
                                   check                                00620000
PQE_StatusRsvd        DS    CL28   Reserved for future use              00621000
*                                                                       00622000
*      ***************************************************************  00623000
*      *                                                             *  00624000
*      * PQEChkInfo Check defaults and best practices as defined when*  00625000
*      * the check was added to Health Checker (via ?HZSADDCK macro) *  00626000
*      * Offset: 0512/'0200'X Length: 0768/'0300'X                   *  00627000
*      *                                                             *  00628000
*      ***************************************************************  00629000
*                                                                       00630000
*                                                                       00631000
                      ORG   PQEStatus+256                               00632000
PQEChkInfo            DS    CL768  Name/category/defaults               00633000
*                                                                       00634000
*      ***************************************************************  00635000
*      *                                                             *  00636000
*      * CheckName and CheckOwner combination will identify a unique *  00637000
*      * check                                                       *  00638000
*      *                                                             *  00639000
*      ***************************************************************  00640000
*                                                                       00641000
*                                                                       00642000
                      ORG   PQEChkInfo                                  00643000
PQE_CheckOwnerName    DS    CL48                                        00644000
                      ORG   PQE_CheckOwnerName                          00645000
PQE_CheckOwner        DS    CL16                                        00646000
*                                                                       00647000
*                                      owning company and/or            00648000
*                                      component                        00649000
*                                                                       00650000
PQE_CheckName         DS    CL32   check name                           00651000
PQE_CheckModuleName   DS    CL8    Check routine load module            00652000
PQE_CheckExitRtn      DS    CL8    Exit ModName that added this check   00653000
PQE_MsgTableName      DS    CL8    load module of msg table             00654000
                      ORG   PQE_MsgTableName                            00655000
PQE_MsgModuleName     DS    CL8    load module of msg module            00656000
PQE_Entry_Code        DS    F      Check entry code                     00657000
PQE_DefaultSeverity   DS    F      Severity level of check: (See       *00658000
                                   severity constants for the excepted *00659000
                                   values)                              00660000
PQE_DefaultInterval   DS    CL4    Default Time interval A value of    *00661000
                                   '00000000'X indicates the check     *00662000
                                   should not be run more then once    *00663000
                                   unless the interval is overridden    00664000
                      ORG   PQE_DefaultInterval                         00665000
PQE_DefaultHours      DS    H      Number of hours                      00666000
PQE_DefaultMinutes    DS    H      Number of minutes                    00667000
PQE_DefaultFlags      DS    BL4    other defaults                       00668000
                      ORG   PQE_DefaultFlags                            00669000
PQE_DefaultFlagsB1    DS    B      Byte 1                               00670000
*  Bit definitions:                                                     00671000
PQE_Global_Check      EQU   X'80'  Global check: If a check is marked  *00672000
                                   as global, it will only be run on   *00673000
                                   the 1 system in the sysplex that    *00674000
                                   obtains global enque for the check  *00675000
                                   - Major name: 'HZS ', Minor name:   *00676000
                                   PQE_CheckOwner!!PQE_CheckName        00677000
PQE_Rexxin            EQU   X'40'  For a REXX check, the REXXIN data   *00678000
                                   set exists                           00679000
PQE_DOM_Check         EQU   X'20'  Who will issue Delete Operator      *00680000
                                   Message (DOM) requests for the      *00681000
                                   check's check exception WTO         *00682000
                                   messages: '1'b = the check '0'b =   *00683000
                                   the system (default)                 00684000
PQE_AllowDynSev       EQU   X'10'  Whether dynamic severity is allowed *00685000
                                   for HZSFMSG: '1'b = Yes '0'b = No   *00686000
                                   (default)                            00687000
PQE_DefaultFlagsB2    DS    B      Byte 2                               00688000
                      ORG   PQE_DefaultFlagsB2                          00689000
                      DS    B      Reserved for future use              00690000
PQE_DefaultFlagsB3    DS    B      Byte 3                               00691000
                      ORG   PQE_DefaultFlagsB3                          00692000
                      DS    B      Reserved for future use              00693000
PQE_DefaultFlagsB4    DS    B      Byte 4                               00694000
*                                                                       00695000
*      ***************************************************************  00696000
*      *                                                             *  00697000
*      * ------ Byte 4 ------                                        *  00698000
*      *                                                             *  00699000
*      ***************************************************************  00700000
*                                                                       00701000
*                                                                       00702000
PQE_DefaultDate       DS    CL8    Date of Default parm YYYYMMDD        00703000
PQE_DefaultParmLen    DS    H      Length of parms in default parmarea  00704000
                      DS    CL2    reserved                             00705000
PQE_DefaultExceptionInterval DS CL4 Default Time exception interval     00706000
                      ORG   PQE_DefaultExceptionInterval                00707000
PQE_DefaultEIHours    DS    H      Number of hours                      00708000
*  Bit definitions:                                                     00709000
PQE_DefaultEINotHHHMM EQU   X'80'                                       00710000
PQE_DefaultEISystem   EQU   X'40'  Valid only when                     *00711000
                                   PQE_DefaultEINotHHHMM                00712000
PQE_DefaultEIHalf     EQU   X'20'  Valid only when                     *00713000
                                   PQE_DefaultEINotHHHMM                00714000
PQE_DefaultEIMinutes  DS    H      Number of minutes                    00715000
PQE_Reserved4         DS    CL128  RESERVED FOR IBM PROPRIETARY        *00716000
                                   PROGRAMMING SUPPORT                  00717000
PQE_Reserved5         DS    CL140  RESERVED FOR IBM PROPRIETARY        *00718000
                                   PROGRAMMING SUPPORT                  00719000
PQE_DefaultReason     DS    CL128  specified reason for the check and  *00720000
                                   default values                       00721000
                      ORG   PQE_DefaultReason                           00722000
PQE_DefaultReason_Len DS    XL2                                         00723000
PQE_DefaultReason_String DS CL126                                       00724000
                      ORG   PQE_DefaultReason                           00725000
PQE_DefaultReasonLength DS  H      Reason Length                        00726000
PQE_DefaultReasonText DS    CL126  Reason text                          00727000
PQE_DefaultParmArea   DS    CL256  Area for default parameters.         00728000
*                                                                       00729000
*      ***************************************************************  00730000
*      *                                                             *  00731000
*      * PQEChkParms User parms and best practices overrides Offset: *  00732000
*      * 1280/'0500'X Length: 0768/'0300'X                           *  00733000
*      *                                                             *  00734000
*      ***************************************************************  00735000
*                                                                       00736000
*                                                                       00737000
                      ORG   PQEChkInfo+768                              00738000
PQEChkParms           DS    CL768  Check over ride values               00739000
                      ORG   PQEChkParms                                 00740000
PQE_Severity          DS    F      Severity level of check. Default    *00741000
                                   severity or user-specified severity *00742000
                                   (it is the latter when              *00743000
                                   PQE_UserSeveritySpecified) (See     *00744000
                                   severity constants for the expected *00745000
                                   values)                              00746000
                      ORG   PQE_Severity                                00747000
PQE_UserSeverity      DS    F      Severity level of check. Default    *00748000
                                   severity or user-specified severity *00749000
                                   (it is the latter when              *00750000
                                   PQE_UserSeveritySpecified) (See     *00751000
                                   severity constants for the expected *00752000
                                   values)                              00753000
PQE_Interval          DS    CL4    Check time interval. interval. A    *00754000
                                   value of '00000000'X indicates the  *00755000
                                   check should not be run more then   *00756000
                                   once unless the interval is         *00757000
                                   overridden Default interval or      *00758000
                                   user-specified interval (it is the  *00759000
                                   latter when                         *00760000
                                   PQE_UserIntervalSpecified)           00761000
                      ORG   PQE_Interval                                00762000
PQE_UserInterval      DS    CL4    Check time interval. A value of     *00763000
                                   '00000000'X indicates the check     *00764000
                                   should not be run more then once    *00765000
                                   unless the interval is overridden   *00766000
                                   Default interval or user-specified  *00767000
                                   interval (it is the latter when     *00768000
                                   PQE_UserIntervalSpecified)           00769000
                      ORG   PQE_UserInterval                            00770000
PQE_Hours             DS    H      Number of hours                      00771000
                      ORG   PQE_Hours                                   00772000
PQE_UserHours         DS    H      Number of hours                      00773000
PQE_Minutes           DS    H      Number of minutes                    00774000
                      ORG   PQE_Minutes                                 00775000
PQE_UserMinutes       DS    H      Number of minutes                    00776000
PQE_Date              DS    CL8    Default date or User-specified date *00777000
                                   YYYYMMDD (it is the latter when     *00778000
                                   PQE_UserDateSpecified)               00779000
                      ORG   PQE_Date                                    00780000
PQE_UserDate          DS    CL8    Default date or User-specified date *00781000
                                   YYYYMMDD (it is the latter when     *00782000
                                   PQE_UserDateSpecified)               00783000
PQE_WTOType           DS    X      user-specified WtoType (valid       *00784000
                                   PQE_UserWtoTypeSpecified) Critical, *00785000
                                   Eventual Action, etc. See WtoType   *00786000
                                   constants                            00787000
                      ORG   PQE_WTOType                                 00788000
PQE_User_WTOType      DS    X      user-specified WtoType (valid       *00789000
                                   PQE_UserWtoTypeSpecified) Critical, *00790000
                                   Eventual Action, etc. See WtoType   *00791000
                                   constants                            00792000
PQE_Debug             DS    X      See PQE_DEBUG_xxx. Default Debug or *00793000
                                   user-specified Debug (it is the     *00794000
                                   latter when PQE_UserDebugSpecified)  00795000
                      ORG   PQE_Debug                                   00796000
PQE_User_Debug        DS    X      See PQE_DEBUG_xxx. Default Debug or *00797000
                                   user-specified Debug (it is the     *00798000
                                   latter when PQE_UserDebugSpecified)  00799000
PQE_UserSpecified_Flags DS  BL2    Indicates which fields the user     *00800000
                                   specified                            00801000
                      ORG   PQE_UserSpecified_Flags                     00802000
PQE_UserSpecified_Flags0 DS B      Byte 0 of flags                      00803000
*  Bit definitions:                                                     00804000
PQE_UserSeveritySpecified EQU X'80' A user-specified SEVERITY value    *00805000
                                   was found                            00806000
PQE_UserWtoTypeSpecified EQU X'40' A user-specified WTOTYPE value was  *00807000
                                   found                                00808000
PQE_UserDesccodeSpecified EQU X'20' A user-specified Desc Code value   *00809000
                                   was found                            00810000
PQE_UserRoutcodeSpecified EQU X'10' A user-specified Route Code value  *00811000
                                   was found                            00812000
PQE_UserDateSpecified EQU   X'08'  A user-specified DATE value was     *00813000
                                   found                                00814000
PQE_UserReasonSpecified EQU X'04'  A user-specified REASON value was   *00815000
                                   found. That reason is different     *00816000
                                   than the default.                    00817000
PQE_UserParmSpecified EQU   X'02'  A user-specified PARM value was     *00818000
                                   found. That reason is different     *00819000
                                   than the default.                    00820000
PQE_UserIntervalSpecified EQU X'01' A user-specified interval value    *00821000
                                   was found                            00822000
PQE_UserSpecified_Flags1 DS B      Byte 1 of flags                      00823000
*  Bit definitions:                                                     00824000
PQE_UserCategorySpecified EQU X'80' User-specified categories were     *00825000
                                   processed                            00826000
PQE_UserDebugSpecified EQU  X'40'  User-specified debug was processed   00827000
PQE_UserVerboseSpecified EQU X'20' User-specified verbose was          *00828000
                                   processed                            00829000
PQE_UserExceptionIntervalSpecified EQU X'10' A user-specified          *00830000
                                   exception interval was found         00831000
PQE_UserRexxTimeLimitSpecified EQU X'08' User-specified TimeLimit was  *00832000
                                   processed                            00833000
PQE_UserRexxHLQSpecified EQU X'04' User-specified REXXHLQ was          *00834000
                                   processed                            00835000
                      ORG   PQE_UserSpecified_Flags+2                   00836000
PQE_WTO_DescCode      DS    BL2    User specified addition DESCCODEs    00837000
                      ORG   PQE_WTO_DescCode                            00838000
PQE_UserDesccode      DS    BL2    User specified additional DESCCODEs  00839000
PQE_MoreFlags         DS    B                                           00840000
*  Bit definitions:                                                     00841000
PQE_NotAllCategoriesApplied EQU X'80' This is set when a category ADD  *00842000
                                   is processed but there are already  *00843000
                                   the maximum allowed. It is reset    *00844000
                                   only when a category REPLACE is     *00845000
                                   done (not when a category REMOVE is *00846000
                                   done).                               00847000
PQE_LookAtParms       EQU   X'40'  This will be on for the call to the *00848000
                                   init function, for the first call   *00849000
                                   to the check function and for the   *00850000
                                   next call to the check function     *00851000
                                   after the user updated the parms.   *00852000
                                   Note that there might actually be   *00853000
                                   no parms.                            00854000
PQE_UserParmChangedSinceLastTime EQU X'40' See comment on              *00855000
                                   PQE_LookAtParms                      00856000
PQE_Internal_UserParmChanged EQU X'20' This is an internal indicator   *00857000
                                   not for use by check routines        00858000
PQE_PolicyUpdate_Active EQU X'10'  A policy update requested that the  *00859000
                                   check be active                      00860000
PQE_PolicyUpdate_Inactive EQU X'08' A policy update requested that the *00861000
                                   check be active                      00862000
PQE_NeedToApplyPolicy EQU   X'04'  Categories were updated by a        *00863000
                                   "change" so we need to re-apply     *00864000
                                   policy. This is not an interface.    00865000
PQE_Verbose           DS    X      See PQE_Verbose_xxx. Default        *00866000
                                   Verbose or user-specified Verbose   *00867000
                                   (it is the latter when              *00868000
                                   PQE_UserVerboseSpecified)            00869000
                      ORG   PQE_Verbose                                 00870000
PQE_User_Verbose      DS    X      See PQE_Verbose_xxx. Default        *00871000
                                   Verbose or user-specified Verbose   *00872000
                                   (it is the latter when              *00873000
                                   PQE_UserVerboseSpecified)            00874000
PQE_WTO_Routcode      DS    CL16   Route code to be used for WTO. All  *00875000
                                   0's => none                          00876000
                      ORG   PQE_WTO_Routcode                            00877000
PQE_UserRoutcode      DS    CL16   Route codes to be used for WTO. All *00878000
                                   0's => none                          00879000
PQE_LastUpdatedBy_Area DS   CL16   Either policy statement name or     *00880000
                                   'HZSCHECK' !! jobname (HZSCHECK     *00881000
                                   macro) or 'COMMAND' (modify         *00882000
                                   command) or 'PARMLIB' (a statement  *00883000
                                   in a parmlib member) 'SYSTEM'. This *00884000
                                   is mapped by the                    *00885000
                                   Pqe_LastUpdatedBy_Type DSECT         00886000
PQE_ExceptionInterval DS    CL4    Check time exception interval. A    *00887000
                                   value of >= 80000000 indicates that *00888000
                                   it is either to be run according to *00889000
                                   the interval or one half the        *00890000
                                   interval. This is either the        *00891000
                                   default exception interval or the   *00892000
                                   user-specified exception (it is the *00893000
                                   latter when PQE_Use                 *00894000
                                   rExceptionIntervalSpecified is on)   00895000
                      ORG   PQE_ExceptionInterval                       00896000
PQE_EIHours           DS    H      Number of hours                      00897000
*  Bit definitions:                                                     00898000
PQE_EINotHHHMM        EQU   X'80'                                       00899000
PQE_EISystem          EQU   X'40'  Valid only when PQE_EINotHHHMM       00900000
PQE_EIHalf            EQU   X'20'  Valid only when PQE_EINotHHHMM       00901000
PQE_EIMinutes         DS    H      Number of minutes                    00902000
PQE_Time_ExceptionInterval DS F    Exception time interval in 0.01     *00903000
                                   seconds                              00904000
PQE_REXXTimeLimit     DS    F      Valid only for REXX=YES checks       00905000
PQE_REXXPQECHKWORK_Len DS   H      Length of PQEChkArea that was last  *00906000
                                   saved. Valid for REXX=YES checks     00907000
PQE_Chkparms_Flags    DS    B                                           00908000
*  Bit definitions:                                                     00909000
PQE_RexxTsoNo         EQU   X'80'                                       00910000
                      DS    CL1    Reserved for future use              00911000
PQE_RexxHLQ           DS    CL8    Valid only for REXX=YES checks.     *00912000
                                   This is either the default, as      *00913000
                                   taken from the required REXXHLQ     *00914000
                                   parameter at ADD CHECK time, or a   *00915000
                                   user override, if                   *00916000
                                   PQE_UserRexxHLQSpecified is ON       00917000
PQE_SyncValNotSystem  DS    X      anything by SYSTEM                   00918000
*  Bit definitions:                                                     00919000
PQE_SyncValHHMM       EQU   X'80'  On, when SYNCVAL(HH:MM)              00920000
PQE_SyncValAnyHour    EQU   X'40'  On, when SYNCVAL(*:MM)               00921000
PQE_SyncValHours      DS    X      0..23 for HH:MM                      00922000
PQE_SyncValMinutes    DS    X      0..59 for HH:MM or *:MM              00923000
                      DS    X      Reserved for future use              00924000
                      DS    CL20   Reserved for future use              00925000
PQE_CheckExec         DS    CL8                                         00926000
PQE_CategoryArea      DS    CL260                                       00927000
                      ORG   PQE_CategoryArea                            00928000
PQE_NumcategoriesDefined DS F      Number of categories associated     *00929000
                                   with this check. The categories     *00930000
                                   will occupy the first "n" slots in  *00931000
                                   the PQE_CategoryArray.               00932000
PQE_CategoryArray     DS    CL16   array of categories associated with *00933000
                                   this check. There are               *00934000
                                   PQE_MaxCategoryEntries contiguous   *00935000
                                   entries in the array. Each array    *00936000
                                   entry is a 16-byte category          00937000
                      ORG   PQE_CategoryArray                           00938000
PQE_Category          DS    CL16   Category name                        00939000
                      ORG   PQE_CategoryArea+260                        00940000
PQE_ParmLen           DS    H      Quotes that were used to surround   *00941000
                                   the PARMS value within an operator  *00942000
                                   command or HZSPRMxx statement are   *00943000
                                   not included within the resulting   *00944000
                                   length                               00945000
                      ORG   PQE_ParmLen                                 00946000
PQE_UserParmLen       DS    H                                           00947000
PQE_Reserved6         DS    CL2    RESERVED FOR IBM PROPRIETARY        *00948000
                                   PROGRAMMING SUPPORT                  00949000
PQE_Reason_Union      DS    CL128                                       00950000
                      ORG   PQE_Reason_Union                            00951000
PQE_Reason            DS    CL128                                       00952000
                      ORG   PQE_Reason                                  00953000
PQE_Reason_Len        DS    XL2                                         00954000
PQE_Reason_String     DS    CL126                                       00955000
*                                                                       00956000
*                                      specified reason for the check   00957000
*                                      and user Default reason or       00958000
*                                      user-specified reason (it is     00959000
*                                      the latter when                  00960000
*                                      PQE_UserReasonSpecified)         00961000
*                                                                       00962000
                      ORG   PQE_Reason                                  00963000
PQE_ReasonLen         DS    H      Reason Length                        00964000
PQE_ReasonText        DS    CL126  Reason text                          00965000
                      ORG   PQE_Reason_Union                            00966000
PQE_UserReason        DS    CL128  specified reason for the check and  *00967000
                                   user values. Default reason or      *00968000
                                   user-specified reason (it is the    *00969000
                                   latter when                         *00970000
                                   PQE_UserReasonSpecified)             00971000
                      ORG   PQE_UserReason                              00972000
PQE_UserReason_Len    DS    XL2                                         00973000
PQE_UserReason_String DS    CL126                                       00974000
                      ORG   PQE_UserReason                              00975000
PQE_UserReasonLength  DS    H      Reason Length                        00976000
PQE_UserReasonText    DS    CL126  Reason text                          00977000
PQE_ParmArea          DS    CL256  Area for parameters Default         *00978000
                                   parameters or user-specified        *00979000
                                   parameters (it is the latter when   *00980000
                                   PQE_UserparametersSpecified).       *00981000
                                   Quotes that were used to surround   *00982000
                                   the PARMS value within an operator  *00983000
                                   command or HZSPRMxx statement are   *00984000
                                   not included and   are also not     *00985000
                                   counted in the actual length        *00986000
                                   provided via field PQE_ParmLen.      00987000
                      ORG   PQE_ParmArea                                00988000
PQE_UserParmArea      DS    CL256  Area for user parameters Default    *00989000
                                   parameters or user-specified        *00990000
                                   parameters (it is the latter when   *00991000
                                   PQE_UserparametersSpecified)         00992000
*                                                                       00993000
*      ***************************************************************  00994000
*      *                                                             *  00995000
*      * PQE_ChkWork Work area used (and mapped) by the check routine*  00996000
*      * as needed Offset: 2048/'0800'X Length: 2048/'0800'X         *  00997000
*      *                                                             *  00998000
*      ***************************************************************  00999000
*                                                                       01000000
*                                                                       01001000
                      ORG   PQEChkParms+768                             01002000
PQE_ChkWork           DS    CL2048 2K work area for check routine       01003000
                      ORG   PQE_ChkWork                                 01004000
PQEChkWork            DS    CL2048 2K work area for check routine       01005000
*                                                                       01006000
* ********************************************************************  01007000
* * PQE and check related constants                                  *  01008000
* ********************************************************************  01009000
*                                                                       01010000
*                                                                       01011000
PQE_acronym           EQU   C'PQE ' Eye catcher for PQE                 01012000
PQE_SystemSeverity    EQU   0      For dynamic severity "default".     *01013000
                                   Never actually in PQE.               01014000
PQE_NoSeverity        EQU   255    Severity value for NO severity      *01015000
                                   value                                01016000
PQE_LowSeverity       EQU   4      Severity value for Low severity     *01017000
                                   value                                01018000
PQE_MediumSeverity    EQU   8      Severity value for Medium severity  *01019000
                                   value                                01020000
PQE_HighSeverity      EQU   12     Severity value for High severity    *01021000
                                   value                                01022000
PQE_Result_NoExceptions EQU 0                                           01023000
PQE_Result_LowSeverityExceptions EQU 4                                  01024000
PQE_Result_MediumSeverityExceptions EQU 8                               01025000
PQE_Result_HighSeverityExceptions EQU 12                                01026000
PQE_WtoType_Critical  EQU   16                                          01027000
PQE_WtoType_Eventual  EQU   12                                          01028000
PQE_WtoType_Info      EQU   8                                           01029000
PQE_WtoType_Hardcopy  EQU   4                                           01030000
PQE_WtoType_None      EQU   255                                         01031000
PQE_WtoType_No_Change EQU   0      From HZSCHECK only, never actually  *01032000
                                   in a PQE                             01033000
PQE_Severity_No_Change EQU  0      From HZSCHECK only, never actually  *01034000
                                   in a PQE                             01035000
PQE_Debug_Off         EQU   0                                           01036000
PQE_Debug_On          EQU   8                                           01037000
PQE_Verbose_No        EQU   0                                           01038000
PQE_Verbose_Yes       EQU   8                                           01039000
PQE_Function_Code_Init EQU  1      Check initialization                 01040000
PQE_Function_Code_Check EQU 2      Check code                           01041000
PQE_Function_Code_Cleanup EQU 3    Check cleanup                        01042000
PQE_Function_Code_Delete EQU 2147483647 Check Delete                    01043000
PQE_Init              EQU   1                                           01044000
PQE_Check             EQU   2                                           01045000
PQE_cleanup           EQU   3                                           01046000
PQE_Delete            EQU   2147483647                                  01047000
PQE_ReasonLength      EQU   126                                         01048000
PQE_ParmLength        EQU   256                                         01049000
PQE_MaxCategoryEntries EQU  16                                          01050000
HZSPQE_Len            EQU   *-HZSPQE                                    01051000
.L0002                ANOP                                              01052000
                      AIF   ('&Pqe_LastUpdatedBy_Type' EQ 'NO').L0005   01053000
                      AIF   ('&DSECT' EQ 'YES').L0006                   01054000
                      AIF   ('&Pqe_LastUpdatedBy_Type' NE 'YES').L0005  01055000
Pqe_LastUpdatedBy_Type DS   0X                                          01056000
                      AGO   .L0007                                      01057000
.L0006                ANOP                                              01058000
Pqe_LastUpdatedBy_Type DSECT                                            01059000
.L0007                ANOP                                              01060000
PQE_LastUpdatedBy_Type_Union DS CL16                                    01061000
                      ORG   PQE_LastUpdatedBy_Type_Union                01062000
                      DS    CL16                                        01063000
                      ORG   PQE_LastUpdatedBy_Type_Union                01064000
PQE_LastUpdatedBy_Hzscheck_Structure DS CL16                            01065000
                      ORG   PQE_LastUpdatedBy_Hzscheck_Structure        01066000
PQE_LastUpdatedBy_Hzscheck_Header DS CL8                                01067000
PQE_LastUpdatedBy_Hzscheck_Jobname DS CL8                               01068000
                      ORG   PQE_LastUpdatedBy_Type_Union                01069000
PQE_LastUpdatedBy_Parmlib_Structure DS CL16                             01070000
                      ORG   PQE_LastUpdatedBy_Parmlib_Structure         01071000
PQE_LastUpdatedBy_Parmlib_Header DS CL8                                 01072000
PQE_LastUpdatedBy_Parmlib_HZSPRMxx DS CL8                               01073000
                      ORG   PQE_LastUpdatedBy_Type_Union                01074000
PQE_LastUpdatedBy_System_Area DS CL8                                    01075000
PQE_LastUpdatedBy_Hzscheck_0TO3 EQU C'HZSC' This is the first 4-byte   *01076000
                                   segment of an 8-byte constant. The  *01077000
                                   trailing 8 characters of the field  *01078000
                                   in this case are the jobname         01079000
PQE_LastUpdatedBy_Hzscheck_4TO7 EQU C'HECK' This is the second 4-byte  *01080000
                                   segment of an 8-byte constant. The  *01081000
                                   trailing 8 characters of the field  *01082000
                                   in this case are the jobname         01083000
PQE_LastUpdatedBy_Command_0TO3 EQU C'COMM' This is the first 4-byte    *01084000
                                   segment of an 8-byte constant.       01085000
PQE_LastUpdatedBy_Command_4TO7 EQU C'AND ' This is the second 4-byte   *01086000
                                   segment of an 8-byte constant.       01087000
PQE_LastUpdatedBy_Parmlib_0TO3 EQU C'PARM' This is the first 4-byte    *01088000
                                   segment of an 8-byte constant. The  *01089000
                                   trailing 8 characters of the field  *01090000
                                   in this case are the parmlib member *01091000
                                   name                                 01092000
PQE_LastUpdatedBy_Parmlib_4TO7 EQU C'LIB ' This is the second 4-byte   *01093000
                                   segment of an 8-byte constant. The  *01094000
                                   trailing 8 characters of the field  *01095000
                                   in this case are the parmlib member *01096000
                                   name                                 01097000
PQE_LastUpdatedBy_System_0TO3 EQU C'SYST' This is the first 4-byte     *01098000
                                   segment of an 8-byte constant. The  *01099000
                                   trailing characters of the field in *01100000
                                   this case are blanks                 01101000
PQE_LastUpdatedBy_System_4TO7 EQU C'EM  ' This is the second 4-byte    *01102000
                                   segment of an 8-byte constant. The  *01103000
                                   trailing characters of the field in *01104000
                                   this case are blanks                 01105000
                      ORG   Pqe_LastUpdatedBy_Type+16                   01106000
Pqe_LastUpdatedBy_Type_Len EQU *-Pqe_LastUpdatedBy_Type                 01107000
.L0005                ANOP                                              01108000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    01109000
                      AIF   ('&LIST' EQ 'YES').P4                       01110000
.P3                   ANOP                                              01111000
                      POP   PRINT                                       01112000
.P4                   ANOP                                              01113000
.P_EXIT               ANOP                                              01114000
                      MEND                                              01115000
**/ HZSPQE_2:;                                                          01116000
* %HZSPQE_INCLUDED = 'YES';                                             01117000
* %DCL ZCBPRINT CHAR EXT;                                               01118000
* %DEACTIVATE ZCBPRINT;                                                 01119000
* %DCL HZSPQE_LIST CHAR EXT;                                            01120000
* %DEACTIVATE HZSPQE_LIST;                                              01121000
* %IF HZSPQE_LIST ^= 'NO' &                                             01122000
*    ZCBPRINT ^= 'NO' %THEN                                             01123000
*   %GOTO HZSPQE_3;                                                     01124000
*   @LIST PUSH NOECHO;                                                  01125000
*   @LIST NOASSEMBLE NOECHO;                                            01126000
*   @LIST OFF C NOECHO;                                                 01127000
* %HZSPQE_3:;                                                           01128000
*/* Start of PL/X Source                                             */ 01129000
*                                                                       01130000
*%HZSALET = '';                                                         01131000
*                                                                       01132000
*%DCL HZS_INTERNAL CHAR EXTERNAL;   /*                           @P3A*/ 01133000
*                                                                       01134000
*%IF HZSPQE_TYPE ^= '' &                                                01135000
*    Translate(HZSPQE_TYPE) ^= 'NO' %Then                               01136000
*%DO;                                                                   01137000
*  %HZSPQE_ATTR_STRING = ' TYPE ';                                      01138000
*  %If Translate(HZSPQE_TYPE) ^= 'NODCL' %Then                          01139000
*  %DO;                                                                 01140000
*  DCL bPQE isa(HZSPQE) Based;                                /* @L5C*/ 01141000
*  %END;                                                                01142000
*%END;                                                                  01143000
*%ELSE %DO;                                                             01144000
*  %IF PQEBASED='' %THEN                                                01145000
*  %DO;                                                                 01146000
*    %PQEBASED='BASED(PQE_Ptr) ';                                       01147000
*   %IF HZS_INTERNAL='YES' %THEN    /*                           @L5A*/ 01148000
*   %DO;                            /*                           @L5A*/ 01149000
*    %IF Translate(HZSPQE_PQE_PTR_NoReg) ^= 'YES' %THEN       /* @L5A*/ 01150000
*    %DO;                                                     /* @L5A*/ 01151000
*    DCL  PQE_Ptr isa(Hzsptr);                                /* @L5A*/ 01152000
*    %END;                                                    /* @L5A*/ 01153000
*    %ELSE %DO;                                               /* @L5A*/ 01154000
*    DCL  PQE_Ptr isa(Hzsptr) Noreg;                          /* @L5A*/ 01155000
*    %END;                                                    /* @L5A*/ 01156000
*   %END;                           /*                           @L5A*/ 01157000
*   %ELSE %DO;                      /*                           @L5A*/ 01158000
*    %IF Translate(HZSPQE_PQE_PTR_NoReg) ^= 'YES' %THEN                 01159000
*    %DO;                                                               01160000
*    DCL  PQE_Ptr Ptr(31);          /* Pointer to the PQE            */ 01161000
*    %END;                                                              01162000
*    %ELSE %DO;                                                         01163000
*    DCL  PQE_Ptr Ptr(31) Noreg;    /* Pointer to the PQE            */ 01164000
*    %END;                                                              01165000
*   %END;                           /*                           @L5A*/ 01166000
*  %END;                                                                01167000
*  %HZSPQE_ATTR_STRING = PQEBASED !! HZSALET;                           01168000
*%END;                                                                  01169000
*  %IF HZS_INTERNAL='YES' %THEN     /*                           @L5A*/ 01170000
*   %HZSPQE_Len_Value = '8192';     /*                           @L5A*/ 01171000
*  %ELSE                            /*                           @L5A*/ 01172000
*   %HZSPQE_Len_Value = '4096';     /*                           @L5A*/ 01173000
*Dcl                                                                    01174000
*  1  HZSPQE Bdy(DWord) char(HZSPQE_Len_Value) HZSPQE_ATTR_STRING,  /*  01175000
*                                      Process Queue Element     @L5C*/ 01176000
*                                                                       01177000
*    /****************************************************************/ 01178000
*    /* PQEHeader:                                                   */ 01179000
*    /*   General control block information                          */ 01180000
*    /*                                                              */ 01181000
*    /*   Offset: 0000/'0000'X                                       */ 01182000
*    /*   Length: 0128/'0080'X                                       */ 01183000
*    /*                                                              */ 01184000
*    /****************************************************************/ 01185000
*    3  PQEHeader char(128) BDY(DWord), /* PQE header information    */ 01186000
*      5  PQE_ID   Char(4),         /* Eye catcher: 'PQE '           */ 01187000
*      5  PQE_Version Fixed(15),    /* Version - 0 (Incompatible PQE    01188000
*                                      mappings will result in new      01189000
*                                      version numbers.)             */ 01190000
*      5  * Char(2),                /* Reserved                      */ 01191000
*      5  PQE_DynamicAreaAddr PTR(31), /* Dynamic area for Check        01192000
*                                      routine: Address of 4K dynamic   01193000
*                                      work area (Assumed dirty, do not 01194000
*                                      use before set)           @P3M*/ 01195000
*        7  PQE_DynamicArea@ PTR(31),                                   01196000
*      5  * Char(20) Bdy(Dword,5),  /* Reserved for IBM use only @L5C*/ 01197000
*  %IF HZS_INTERNAL='YES' %THEN     /*                           @L2A*/ 01198000
*    %DO;                           /*                           @L2A*/ 01199000
*      %HZSPQEI_PART='1';           /*                           @L2A*/ 01200000
*      %INCLUDE SYSLIB(HZSPQEI);    /*                           @L2A*/ 01201000
*    %END;                          /*                           @L2A*/ 01202000
* /*                                                            1@L5D*/ 01203000
*      5  PQE_Text_String2 Char(96) Bdy(Word), /* Text strings that     01204000
*                                      can be used for display. Valid   01205000
*                                      only as output from HZSQUERY     01206000
*                                      when TEXTSTRING=YES       @L2A*/ 01207000
*          7 PQE_Text_String_Origin Char(8),   /* For example,          01208000
*                                      HZSADDCK. Valid only as output   01209000
*                                      from HZSQUERY                    01210000
*                                      when TEXTSTRING=YES       @L2A*/ 01211000
*          7 PQE_Text_String_Locale Char(8),   /* For example,          01212000
*                                      REMOTE. Valid only as output     01213000
*                                      from HZSQUERY                    01214000
*                                      when TEXTSTRING=YES       @L2A*/ 01215000
*          /**********************************************************/ 01216000
*          /* Note: RexxIn and RexxOut datasets names will never     */ 01217000
*          /*       exceed 34 characters:                            */ 01218000
*          /*         hlq.execname.REXXOUT          (8+1+8+1+7)      */ 01219000
*          /*         hlq.execname.REXXOUT.E####### (8+1+8+1+7+1+8)  */ 01220000
*          /*         hlq.execname.REXXIN           (8+1+8+1+6)      */ 01221000
*          /*         hlq.execname.REXXIN.E#######  (8+1+8+1+6+1+8)  */ 01222000
*          /*       Therefore, a short dataset name can be used.     */ 01223000
*          /**********************************************************/ 01224000
*          7 PQE_Text_String_Rexx_dsns char(80), /*              @L6A*/ 01225000
*            9  PQE_Text_String_RexxIN_dsn Char(40), /* REXX input dsn: 01226000
*                                      hlq.execname.REXXIN.E#######, or 01227000
*                                      hlq.execname.REXXIN.  Valid only 01228000
*                                      as output from HZSQUERY when     01229000
*                                      TEXTSTRING=YES and               01230000
*                                      PQE_REXXIN='1'b           @L6A*/ 01231000
*            9  PQE_Text_String_RexxOUT_dsn Char(40), /* REXX out dsn:  01232000
*                                      hlq.execname.REXXOUT.E#######,   01233000
*                                      or hlq.execname.REXXOUT.  Valid  01234000
*                                      only as output from HZSQUERY     01235000
*                                      when TEXTSTRING=YES and          01236000
*                                      PQE_REXX='1'b             @L6A*/ 01237000
*    /****************************************************************/ 01238000
*    /*                                                              */ 01239000
*    /* PQEMsgInfo                                                   */ 01240000
*    /*   Check message information                                  */ 01241000
*    /*                                                              */ 01242000
*    /*   Offset: 0128/'0080'X                                       */ 01243000
*    /*   Length: 0128/'0080'X                                       */ 01244000
*    /*                                                              */ 01245000
*    /****************************************************************/ 01246000
*    3  PQEMsginfo char(128) BDY(DWord), /* Message info area        */ 01247000
*      5  PQE_LastBlockId Char(8) BDY(DWORD), /* System Logger BlockID  01248000
*                                      of the last successful complete  01249000
*                                      write of the message stream to   01250000
*                                      System Logger                 */ 01251000
*      5  PQE_MsgTimeStamp CHAR(16), /* Time stamp (Local & GMT Time)   01252000
*                                      of the last successful complete  01253000
*                                      write to System Logger        */ 01254000
*      5  *        Char(8),         /* Reserved for future use   @P3C*/ 01255000
*      5  PQE_Reserved2 char(96) BDY(DWORD), /* RESERVED FOR IBM        01256000
*                                      PROPRIETARY PROGRAMMING SUPPORT  01257000
*                                                                @P3A*/ 01258000
*    /****************************************************************/ 01259000
*    /*                                                              */ 01260000
*    /* PQEStatus                                                    */ 01261000
*    /*   Check status, return codes, severity, categories, etc.     */ 01262000
*    /*                                                              */ 01263000
*    /*   Offset: 0256/'0100'X                                       */ 01264000
*    /*   Length: 0256/'0100'X                                       */ 01265000
*    /*                                                              */ 01266000
*    /****************************************************************/ 01267000
*    3  PQEStatus Char(256) BDY(Dword), /* Global check information  */ 01268000
*      5  PQE_Fail_Count Fixed(31), /* Number of times the check        01269000
*                                      has failed in a row. This could  01270000
*                                      have been an abend or, for a     01271000
*                                      REXX check, unsuccessful         01272000
*                                      completion.                   */ 01273000
*      5  PQE_Started_Extended_TOD Bit(128), /* When the check last     01274000
*                               started. This is the time when the      01275000
*                               system marked the check ready to run.   01276000
*                               It might not yet have actually          01277000
*                               begun running (perhaps because no       01278000
*                               worker tasks are available). This       01279000
*                               field is displayed preceded by          01280000
*                               "LAST RAN" but if the display shows     01281000
*                               "SCHEDULED" it has not actually run     01282000
*                               yet.                                 */ 01283000
*        7  *        Bit(8),            /*  High byte of eTOD        */ 01284000
*        7  PQE_Started_TOD bit(64), /* TOD: check last started      */ 01285000
*          9  PQE_Started_TOD_High BIT(32), /* High order word       */ 01286000
*          9  PQE_Started_TOD_Low BIT(32), /* Low order word         */ 01287000
*        7  *        Bit(56),           /* Low bytes of eTOD         */ 01288000
*      5 PQE_NextScheduled_Extended_TOD bit(128), /* When the check is  01289000
*                                      next scheduled to start. Note    01290000
*                                      that when PQE_Do_Not_Call_Flags  01291000
*                                      is non-zero, this field does     01292000
*                                      not contain valid information.   01293000
*                                                                    */ 01294000
*       7 PQE_NextScheduled_ETOD bit(128), /* When the check is next    01295000
*                                      next scheduled to start. Note    01296000
*                                      that when PQE_Do_Not_Call_Flags  01297000
*                                      is non-zero, this field does     01298000
*                                      not contain valid information.   01299000
*                                                                    */ 01300000
*        8  *        Bit(8),            /* High byte of eTOD         */ 01301000
*        8  PQE_NextScheduled_TOD bit(64), /* TOD: Next scheduled check 01302000
*                                      start as per TIMEINT          */ 01303000
*          10 PQE_NextScheduled_TOD_High BIT(32), /* High order word */ 01304000
*          10 PQE_NextScheduled_TOD_Low BIT(32), /* Low order word   */ 01305000
*        8  *        Bit(56),           /* Low bytes of eTOD         */ 01306000
*      5  PQE_GlobalCheck_Sysname Char(8),  /* The name of the system   01307000
*                               on which that check is active.          01308000
*                               Set for HZSQUERY when                   01309000
*                               GLOBALCHECK=FINDSYSTEM is specified     01310000
*                               only                             @P6C*/ 01311000
*      5  PQE_LastRan Char(8),     /* STCK value when check last        01312000
*                               ran                              @L4A*/ 01313000
*      5  PQE_Result_And_Diag,                                          01314000
*       7 PQE_Result Fixed(31),    /* Result from the last check        01315000
*                                     invocation (See equates           01316000
*                                     PQE_Result_xxx)                   01317000
*                                      =0, No exceptions found          01318000
*                                          (Or SEV(None) w/exceptions)  01319000
*                                      =4, SEV(L) Exception found       01320000
*                                      =8, SEV(M) Exception found       01321000
*                                      =12, SEV(H) Exception found   */ 01322000
*       7 PQE_DIAG Char(8) Bdy(Word), /* Diagnostic information from    01323000
*                           the check routine                        */ 01324000
*        9 PQE_DIAG1 Char(4),       /* First word of DIAG            */ 01325000
*        9 PQE_DIAG2 Char(4),       /* Second word of DIAG           */ 01326000
*      5  PQE_Time_Intvl Fixed(32), /* Time interval in .01 seconds     01327000
*                                      between runnings of the check.   01328000
*                                      A value of 0 indicates that the  01329000
*                                      check was defined as ONETIME. */ 01330000
*      5  PQE_Check_Count FIXED(32), /* The check iteration number      01331000
*                        since initialized / refreshed. Updated just    01332000
*                        before calling the "check" function. For a     01333000
*                        remote check, includes times when the system   01334000
*                        attempted to start a check but the check       01335000
*                        itself might not have confirmed that it        01336000
*                        got control                                 */ 01337000
*      5  PQE_Do_Not_Call_Flags Bit(32), /* Do not call the checking    01338000
*                                      routine                       */ 01339000
*       6  PQE_Do_Not_Call_Flags_Not_Transient Bit(24),  /*          */ 01340000
*        7 PQE_Do_Not_Call_Flags_ByHC BIT(8), /* Flags determined       01341000
*                                      by health checker             */ 01342000
*         8 PQE_ByHC_ResetOnParmChange Bit(8),   /*                  */ 01343000
*          9 PQE_Error_Threshold_Exceeded Bit(1), /*                    01344000
*                                      Check routine abended 2          01345000
*                                      consecutive times, or the        01346000
*                                      check initialization routine     01347000
*                                      failed                        */ 01348000
*          9 PQE_CheckRoutine_Init_Error Bit(1), /* Error within        01349000
*                                   INIT function of check routine   */ 01350000
*          9 PQE_CheckRoutine_Delete_Error Bit(1), /* Error within      01351000
*                                   DELETE function of check routine */ 01352000
*          9 PQE_Missing_DOM_Error Bit(1), /* A DOM(CHECK) check missed 01353000
*                                    to DOM exception WTOs from a       01354000
*                                    previous check iteration,          01355000
*                                    when the current iteration ended   01356000
*                                    without check exception. @LCA */   01357000
*          9 PQE_Error_Threshold_Exceeded_Abend Bit(1),  /* When the    01358000
*                        error threshold was exceeded, it was because   01359000
*                        of an abend (as opposed to an unsuccessful     01360000
*                        REXX check)                             @L2A*/ 01361000
*          9 * Bit(3),                 /*                            */ 01362000
*        7 PQE_Do_Not_Call_Flags_ByCheck BIT(8), /* Flags determined    01363000
*                                      by the check routine          */ 01364000
*         8 PQE_ByCheck_ResetOnParmChange Bit(8), /*                 */ 01365000
*          9 PQE_Environment_NA_Disabled Bit(1), /* HZS1003E - Check    01366000
*                                      not applicable in current        01367000
*                                      environment and is being         01368000
*                                      disabled. See also               01369000
*                                    PQE_Environment_NA_Enabled @LDA */ 01370000
*           11 PQE_Environment_NA Bit(1), /* old alias for now          01371000
*                                   PQE_Environment_NA_Disabled @LDC */ 01372000
*          9 PQE_Parm_Error Bit(1), /* HZS1001i Parameter error found   01373000
*                                      for this check                */ 01374000
*          9 PQE_UnExpected_Error_STOP Bit(1), /* Unexpected error      01375000
*                                      via HZSFMSG REQUEST=STOP      */ 01376000
*          9 *       Bit(5),        /* Reserved for future use       */ 01377000
*        7 PQE_Do_Not_Call_Flags_ByUser BIT(8), /* Flags determined     01378000
*                                      by the user/customer          */ 01379000
*         8 PQE_Deactivated BIT(1), /* Check was deactivated (must be   01380000
*                                      activated before check is        01381000
*                                      started                       */ 01382000
*         8 *        Bit(7),        /* Reserved for future use       */ 01383000
*       6  PQE_Do_Not_Call_Flags_ByHC_Transient Bit(8),  /*          */ 01384000
*        7  PQE_WaitingForPriorToBeDeleted BIT(1),  /* Check can not    01385000
*                                      be activated until the prior     01386000
*                                      copy has been deleted         */ 01387000
*        7  PQE_GlobalCheck_ActiveElsewhere Bit(1), /* Global           01388000
*                                      check is active on another       01389000
*                                      system within the sysplex     */ 01390000
*        7  PQE_USS_NotAvail Bit(1),           /* This check is known   01391000
*                                      to be a USS user, but USS is     01392000
*                                      down at the moment            */ 01393000
*        7  PQE_REXX_NotAvail Bit(1),          /* This check is known   01394000
*                                      to be a REXX user, but REXX      01395000
*                                      services are not available       01396000
*                                                                @L2A*/ 01397000
*        7  PQE_REXX_TooBusy Bit(1),           /* This check is known   01398000
*                                      to be a REXX user, but REXX      01399000
*                                      is currently "too busy".         01400000
*                                                                @L2A*/ 01401000
*          9 PQE_REXX_Full Bit(1),                                      01402000
*       5 PQE_Union Char(84) Bdy(Word) Union,                           01403000
*         7 PQE_WTO_WorkArea Char(84) Bdy(Word),                        01404000
*           9 PQE_WTO_Num_Outstanding FIXED,/* Not part of the intended 01405000
*                         interface. Number of (most) outstanding, not  01406000
*                         DOM'd, WTOs issued by this check.             01407000
*                         Differences between this and                  01408000
*                         PQE_OutstandingExceptions:                    01409000
*                            - this includes non-"exception message"    01410000
*                              WTOs, like from HZSFMSG REQUEST=HZSMSG   01411000
*                            - this is capped                           01412000
*                            - this can include counts for a different  01413000
*                              iteration, if DOM(CHECK) is in effect    01414000
*                         "Most", since some WTOs are tracked           01415000
*                         individually.                        @L8C*/   01416000
*        7 PQE_Text_Strings Char(84) Bdy(Word), /* Text strings that    01417000
*                                      can be used for display. Valid   01418000
*                                      only as output from HZSQUERY     01419000
*                                      when TEXTSTRING=YES       @L2A*/ 01420000
*          9 * Char(4),             /* Padding                       */ 01421000
*          9 PQE_Text_String_State char(18), /* For example,            01422000
*                                      ACTIVE(ENABLED). Valid           01423000
*                                      only as output from HZSQUERY     01424000
*                                      when TEXTSTRING=YES       @L2A*/ 01425000
*          9 PQE_Text_String_Global char(6), /* GLOBAL or blank. Valid  01426000
*                                      only as output from HZSQUERY     01427000
*                                      when TEXTSTRING=YES       @L2A*/ 01428000
*          9 PQE_Text_String_Status char(16), /* For example,           01429000
*                                      RUNNING. Valid                   01430000
*                                      only as output from HZSQUERY     01431000
*                                      when TEXTSTRING=YES       @L2A*/ 01432000
*          9 PQE_Text_String_Severity Char(6), /* For example,          01433000
*                                      MEDIUM. Valid                    01434000
*                                      only as output from HZSQUERY     01435000
*                                      when TEXTSTRING=YES       @L2A*/ 01436000
*          9 PQE_Text_String_Wtotype Char(9), /* For example,           01437000
*                                      IMMEDIATE. Valid                 01438000
*                                      only as output from HZSQUERY     01439000
*                                      when TEXTSTRING=YES       @L2A*/ 01440000
*          9 PQE_Text_String_ModifiedBy char(24), /* For example,       01441000
*                                      STMT(pppppppppppppppp). Valid    01442000
*                                      only as output from HZSQUERY     01443000
*                                      when TEXTSTRING=YES       @L2A*/ 01444000
*      5  PQE_Check_Status      Bit(32) abnormal,  /* We need CS        01445000
*                             logic at least for Byte 1, which has      01446000
*                             the possibility of concurrent updates     01447000
*                             between HZSTKSCH and HZSAACMD. Rather     01448000
*                             than worry about whether that byte alone  01449000
*                             is sufficient, the whole word is made     01450000
*                             to use CS manipulation             @PBC*/ 01451000
*       6  PQE_Check_StatusB0 BIT(8), /* Byte 0                  @P1A*/ 01452000
*        7  PQE_ParmErrorsDetected Bit(1), /* HZSPRMxx parameters       01453000
*                                      detected for this check were     01454000
*                                      found in error and will not be   01455000
*                                      used, the check will still be    01456000
*                                      executed                      */ 01457000
*        7 PQE_InitializationIncomplete Bit(1), /* Check initialization 01458000
*                                      for this check has not been      01459000
*                                      completed (Run init)          */ 01460000
*        7 PQE_Deleting BIT(1),     /* Delete processing has started    01461000
*                                                                @P2A*/ 01462000
*        7  PQE_NotLogged bit(1),   /* there is a message buffer, and   01463000
*                                      some or all of the current       01464000
*                                      buffer has NOT been copied to    01465000
*                                      to the message buffer         */ 01466000
*        7 PQE_Init_called BIT(1),  /* Check_Init was called.           01467000
*                                    When initially inactive,           01468000
*                                    we will not call INIT routine.     01469000
*                                    So we remember that we need to     01470000
*                                    do that, for when ACTIVATE occurs. 01471000
*                                    But once this is set, it is never  01472000
*                                    reset so that on a subsequent      01473000
*                                    DEACTIVATE we do not call any      01474000
*                                    longer                          */ 01475000
*        7  PQE_ModifiedNotByPolicy Bit(1), /* This check has been      01476000
*                                      modified not by a policy         01477000
*                                      statement, so updates will be    01478000
*                                      lost if a refresh occurs  @P2M*/ 01479000
*        7  PQE_UpdatesNotYetMerged Bit(1),  /* Valid only within       01480000
*                                      HZSQUERY output, indicates       01481000
*                                      that a currently scheduled       01482000
*                                      check routine might not yet      01483000
*                                      reflect the most recent          01484000
*                                      update request(s)             */ 01485000
*        7  PQE_SetToForce Bit(1),    /* Need to Force this check,      01486000
*                                        which is a strong delete    */ 01487000
*       6  PQE_Check_StatusB1 BIT(8), /* Byte 1                  @P1A*/ 01488000
*        7 PQE_Checkrunning BIT(1),  /* Check is currently scheduled    01489000
*                                       to run                       */ 01490000
*        7 PQE_WaitingForTimerPop Bit(1), /* PQE_NextScheduled_Tod is   01491000
*                                      is set for the                   01492000
*                                      future and waiting to go off.    01493000
*                                      This is an internal flag      */ 01494000
*          9 PQE_Timer_Running BIT(1), /* old name for this field    */ 01495000
*        7 PQE_Forced Bit(1),         /* Force (CALLRTM ABTERM) done */ 01496000
*        7 PQE_PolicyDateException Bit(1),  /* A policy statement       01497000
*                         matches this check, but the date on that      01498000
*                         policy statement is earlier than the check's  01499000
*                       date and the policy date was not NOCHECK @P4A*/ 01500000
*        7 PQE_PolicyDateExceptionTemp Bit(1),  /*               @P4A*/ 01501000
*        7 PQE_CheckRoutineInControl Bit(1),  /* The check routine is   01502000
*                                       currently in control         */ 01503000
*        7  PQE_OnScheduleQueue BIT(1), /* PQE is on scheduled queue    01504000
*                                      This is an internal flag. @P2M*/ 01505000
*        7  PQE_Never_run BIT(1),   /* Check has not run yet: Scheduled 01506000
*                                      to run the first time.           01507000
*                                      This is an internal flag. @P2M*/ 01508000
*       6  PQE_Check_StatusB2 BIT(8), /* Byte 2                  @P1A*/ 01509000
*        7 PQE_Unexpected_Error_HZSMSG Bit(1),  /* Unexpected error     01510000
*                                      specified via HZSFMSG            01511000
*                                      REQUEST=HZSMSG                */ 01512000
*        7 PQE_NotReallyScheduled Bit(1),  /* The check is being        01513000
*                                      processed by the system, but not 01514000
*                                      in order to run it            */ 01515000
*        7  PQE_GlobalCheck_RanElsewhere Bit(1), /* The last time an    01516000
*                                      attempt was made to run this     01517000
*                                      global check on this system, it  01518000
*                                      was active on another system in  01519000
*                                      the sysplex, However, it is no   01520000
*                                      longer active on any system in   01521000
*                                      the sysplex. Valid only as       01522000
*                                      output from HZSQUERY      @P5A*/ 01523000
*        7 PQE_Refreshing BIT(1),   /* Refresh processing has started   01524000
*                                                                @L2A*/ 01525000
*        7 PQE_Fail_Count_Abend Bit(1), /* The last time that the       01526000
*                        fail count was incremented it was because      01527000
*                        of an abend (as opposed to an unsuccessful     01528000
*                        REXX check)                             @P7A*/ 01529000
*        7 PQE_Fail_Count_NotAvail Bit(1),  /* The last time that the   01530000
*                        fail count was incremented it was because      01531000
*                        of a SYSREXX memterm, so that REXX is no       01532000
*                        longer available                        @PAA*/ 01533000
*        7 PQE_PolicySyncValException Bit(1),  /* A policy statement    01534000
*                         matches this check, but the SyncVal and       01535000
*                         (E)Interval values between that policy stmt   01536000
*                         and the check are in conflict.       @LBA*/   01537000
*        7 PQE_PolicySyncValExceptionTemp Bit(1),          /* @LBC */   01538000
*       6  PQE_Check_StatusB3 BIT(8), /* Byte 3                  @P1A*/ 01539000
*        7  PQE_ClearOnCheckCall Bit(7), /* Reset each time the CHECK   01540000
*                                        function is called          */ 01541000
*          9 PQE_CheckAbended Bit(1), /* The check abended while        01542000
*                           running but the abend has not yet been      01543000
*                           counted within PQE_Fail_Count. To tell if   01544000
*                           a check failed on its last iteration,       01545000
*                           see if PQE_Fail_Count is non-zero.       */ 01546000
*          9 PQE_Diag_From Bit(3),       /* Diag_From bits           */ 01547000
*           11 PQE_Diag_From_Abend Bit(1), /* PQE_Diag contains         01548000
*                                        abend code and abend reason    01549000
*                                        code from SDWACMPC and         01550000
*                                        SDWACRC                     */ 01551000
*           11 PQE_Diag_From_HC Bit(1),  /* PQE_Diag contains           01552000
*                                        data set by HC              */ 01553000
*           11 PQE_Diag_From_CheckRoutine Bit(1), /* PQE_Diag contains  01554000
*                                        diagnostic data provided by    01555000
*                                        the check routine           */ 01556000
*          9 PQE_CleanupInDifferentTaskThanCheck Bit(1),                01557000
*          9 PQE_RemoteCheckUnsuccessful Bit(1),   /* When a REXX       01558000
*                           check ran, it either did not issue          01559000
*                           LINKMVS HZSLSTRT or, according to AXREXX,   01560000
*                           it did not complete successfully. Or when   01561000
*                           starting a remote not REXX check, the       01562000
*                           release did not work to get it started      01563000
*                                                                @L2A*/ 01564000
*          9 PQE_Environment_NA_Enabled Bit(1), /* HZS1004I - Check     01565000
*                                      not applicable in current        01566000
*                                      environment and is staying       01567000
*                                      enabled                  @LDA */ 01568000
*        7  * Bit(1), /* Available @LDA */                              01569000
*      5 PQE_OutstandingExceptions fixed(31), /* The number of          01570000
*                                      exceptions found by the most     01571000
*                                    current iteration of the check. */ 01572000
*      5  PQE_Function_code Fixed(32),                                  01573000
*                                      /* Checks may get control for    01574000
*                                         function codes:               01575000
*                           Pqe_Function_Code_Init       1              01576000
*                           Pqe_Function_Code_Check      2              01577000
*                           Pqe_Function_Code_cleanup    3              01578000
*                           Pqe_Function_Code_Delete     7FFFFFFF    */ 01579000
*      5  PQE_DataspaceALET Fixed(32),  /* For a non-remote check, the  01580000
*                           ALET of a data space on the DU-AL that the  01581000
*                           check routine may use for any purpose it    01582000
*                           desires. The check routine must not assume  01583000
*                           that any of the storage is 0.               01584000
*                           The check may use all the storage           01585000
*                           in the range 1000-x'7FFEFFF'.        @L2A*/ 01586000
*      5  PQE_DataspaceSTOKEN Char(8), /* For a non-remote check, the   01587000
*                           STOKEN of the data space addressed by       01588000
*                           PQE_DataspaceALET. If the check routine     01589000
*                           uses more than two pages of data space      01590000
*                           storage it should issue DSPSERV RELEASE     01591000
*                           using this STOKEN and the used range upon   01592000
*                           completion of the check function (or in     01593000
*                           the cleanup function).                      01594000
*                                                                @L2A*/ 01595000
*      5  PQE_LastCPUTime_Check Fixed(32), /* The CPU time used by the  01596000
*                           "check" function the last time it ran.      01597000
*                           This value is captured from bytes 2-5       01598000
*                           of TCBTTIME before and after the check      01599000
*                           function. A value of 7FFFFFFF indicates     01600000
*                           that the value was greater than or equal    01601000
*                           to x'7FFFFFFF'.                          */ 01602000
*      5  PQE_MaxCPUTime_Check Fixed(32), /* The maximum CPU time used  01603000
*                           by the "check" function.                    01604000
*                           This value is captured from bytes 2-5       01605000
*                           of TCBTTIME before and after the check      01606000
*                           function. A value of 7FFFFFFF indicates     01607000
*                           that the value was greater than or equal    01608000
*                           to x'7FFFFFFF'.                          */ 01609000
*      5  PQE_Environment     Bit(32), /* The current operating         01610000
*                                      environment                   */ 01611000
*         7  PQE_Environment_XCFLocal Bit(1), /* Xcf local mode      */ 01612000
*         7  PQE_Environment_XCFMonoPlex Bit(1), /* Xcf Monoplex     */ 01613000
*         7  PQE_Remote Bit(1),     /* This is a REMOTE check    @L2A*/ 01614000
*         7  PQE_REXX Bit(1),       /* This is a REXX check      @L2A*/ 01615000
*         7  *        Bit(28),      /* Reserved for future use       */ 01616000
*      5  PQE_LastResult Fixed(31), /* Result when check last ran       01617000
*                                                                @L4A*/ 01618000
*      5  PQE_Cum_Check_Count FIXED(32), /* The cumulative check        01619000
*                        iteration number since initialized. This       01620000
*                        differs from PQE_Check_Count in that it        01621000
*                        is not reset when a refresh occurs.            01622000
*                        It is updated just                             01623000
*                        before calling the "check" function. For a     01624000
*                        remote check, includes times when the system   01625000
*                        attempted to start a check but the check       01626000
*                        itself might not have confirmed that it        01627000
*                        got control                             @L5A*/ 01628000
*      5 PQE_LastOutstandingExceptions fixed(31), /* The number of      01629000
*                        exceptions found by the last complete          01630000
*                        iteration of the check                  @L5A*/ 01631000
*      5  PQE_StatusRsvd Char(28),  /* Reserved for future use   @L5C*/ 01632000
*    /****************************************************************/ 01633000
*    /*                                                              */ 01634000
*    /* PQEChkInfo                                                   */ 01635000
*    /*   Check defaults and best practices as defined when the      */ 01636000
*    /*   check was added to Health Checker (via ?HZSADDCK macro)    */ 01637000
*    /*                                                              */ 01638000
*    /*   Offset: 0512/'0200'X                                       */ 01639000
*    /*   Length: 0768/'0300'X                                       */ 01640000
*    /*                                                              */ 01641000
*    /****************************************************************/ 01642000
*    3  PQEChkInfo Char(768) bdy(DWORD), /* Name/category/defaults   */ 01643000
*      /**************************************************************/ 01644000
*      /* CheckName and CheckOwner combination will identify a       */ 01645000
*      /* unique check                                               */ 01646000
*      /**************************************************************/ 01647000
*      5  PQE_CheckOwnerName,                                           01648000
*        7 PQE_CheckOwner isa(PQE_CheckOwner_Type) Bdy(Dword), /*       01649000
*                               owning company and/or component      */ 01650000
*        7 PQE_CheckName isa(PQE_Checkname_Type) Bdy(Dword), /* check   01651000
*                                      name                          */ 01652000
*      5  PQE_CheckModuleName CHAR(8) bdy(dword), /* Check routine load 01653000
*                                      module                        */ 01654000
*      5  PQE_CheckExitRtn  CHAR(8) bdy(dword), /* Exit ModName that    01655000
*                                      added this check              */ 01656000
*      5  PQE_MsgTableName CHAR(8) bdy(dword), /* load module of msg    01657000
*                                      table                         */ 01658000
*        7 PQE_MsgModuleName CHAR(8) bdy(dword), /* load module of msg  01659000
*                                      module                        */ 01660000
*      5  PQE_Entry_Code Fixed(31),  /* Check entry code             */ 01661000
*      5  PQE_DefaultSeverity  FIXED(31),  /* Severity level of check:  01662000
*                                      (See severity constants for the  01663000
*                                      excepted values)              */ 01664000
*      5  PQE_DefaultInterval,      /* Default Time interval            01665000
*                                      A value of '00000000'X indicates 01666000
*                                      the check should not be run more 01667000
*                                      then once unless the interval    01668000
*                                      is overridden                 */ 01669000
*        7  PQE_DefaultHours FIXED(16), /* Number of hours           */ 01670000
*        7  PQE_DefaultMinutes FIXED(16), /* Number of minutes       */ 01671000
*      5  PQE_DefaultFlags Bit(32), /* other defaults                */ 01672000
*       6  PQE_DefaultFlagsB1 BIT(8), /* Byte 1                  @P1A*/ 01673000
*        7  PQE_Global_Check Bit(1), /* Global check: If a check is     01674000
*                                      marked as global, it will only   01675000
*                                      be run on the 1 system in the    01676000
*                                      sysplex that obtains global      01677000
*                                      enque for the check - Major      01678000
*                                      name: 'HZS ', Minor name:        01679000
*                                      PQE_CheckOwner!!PQE_CheckName */ 01680000
*        7  PQE_Rexxin Bit(1),         /* For a REXX check, the         01681000
*                                      REXXIN data set exists    @L2A*/ 01682000
*        7  PQE_DOM_Check Bit(1),      /* Who will issue Delete @L8A    01683000
*                                      Operator Message (DOM) requests  01684000
*                                      for the check's check exception  01685000
*                                      WTO messages:                    01686000
*                                      '1'b = the check                 01687000
*                                      '0'b = the system (default)   */ 01688000
*        7  PQE_AllowDynSev Bit(1),    /* Whether dynamic severity      01689000
*                                      is allowed for HZSFMSG:          01690000
*                                      '1'b = Yes                       01691000
*                                      '0'b = No (default)     @L9A*/   01692000
*        7  *        Bit(4),        /* Reserved for future use @L9C*/   01693000
*       6  PQE_DefaultFlagsB2 BIT(8), /* Byte 2                  @P1A*/ 01694000
*        7  *        Bit(8),        /* Reserved for future use       */ 01695000
*       6  PQE_DefaultFlagsB3 BIT(8), /* Byte 3                  @P1A*/ 01696000
*        7  *        Bit(8),        /* Reserved for future use       */ 01697000
*       6  PQE_DefaultFlagsB4 BIT(8), /* Byte 4                  @P1A*/ 01698000
*        /* ------                   Byte 4                   ------ */ 01699000
*      5  PQE_DefaultDate char(8),  /* Date of Default parm YYYYMMDD */ 01700000
*      5  PQE_DefaultParmLen Fixed(15),/* Length of parms in default    01701000
*                                      parmarea                      */ 01702000
*      5  * Char(2),                /* reserved                      */ 01703000
*      5  PQE_DefaultExceptionInterval, /*                              01704000
*                                       Default Time exception interval 01705000
*                                                                @L2A*/ 01706000
*        7  PQE_DefaultEIHours FIXED(16), /* Number of hours     @L2A*/ 01707000
*          9 PQE_DefaultEINotHHHMM Bit(1),/*                     @L2A*/ 01708000
*          9 PQE_DefaultEISystem Bit(1),  /* Valid only when            01709000
*                                      PQE_DefaultEINotHHHMM     @L2A*/ 01710000
*          9 PQE_DefaultEIHalf Bit(1),    /* Valid only when            01711000
*                                      PQE_DefaultEINotHHHMM     @L2A*/ 01712000
*        7  PQE_DefaultEIMinutes FIXED(16), /* Number of minutes @L2A*/ 01713000
*      5  PQE_Reserved4 char(128) BDY(DWORD), /* RESERVED FOR IBM       01714000
*                                      PROPRIETARY PROGRAMMING SUPPORT  01715000
*                                                                @L2C*/ 01716000
*      5  PQE_Reserved5 char(140) BDY(DWORD),   /* RESERVED FOR IBM     01717000
*                                      PROPRIETARY PROGRAMMING SUPPORT  01718000
*                                                                @L2A*/ 01719000
*      5  PQE_DefaultReason char(PQE_ReasonLength)                      01720000
*                                     Varying Bdy(word), /* specified   01721000
*                                      reason for the check and default 01722000
*                                      values                        */ 01723000
*        7  PQE_DefaultReasonLength fixed(15), /* Reason Length      */ 01724000
*        7  PQE_DefaultReasonText char(PQE_ReasonLength), /*            01725000
*                                               Reason text          */ 01726000
*      5  PQE_DefaultParmArea char(PQE_ParmLength), /*                  01727000
*                                      Area for default parameters.  */ 01728000
*    /****************************************************************/ 01729000
*    /*                                                              */ 01730000
*    /* PQEChkParms                                                  */ 01731000
*    /*   User parms and best practices overrides                    */ 01732000
*    /*                                                              */ 01733000
*    /*   Offset: 1280/'0500'X                                       */ 01734000
*    /*   Length: 0768/'0300'X                                       */ 01735000
*    /*                                                              */ 01736000
*    /****************************************************************/ 01737000
*    3  PQEChkParms Char(768) BDY(Dword), /* Check over ride values  */ 01738000
*      5 PQE_Severity FIXED(31),    /* Severity level of check.         01739000
*                                      Default severity or              01740000
*                                      user-specified severity (it is   01741000
*                                      the latter when                  01742000
*                                      PQE_UserSeveritySpecified)       01743000
*                                      (See severity constants for the  01744000
*                                      expected values)              */ 01745000
*        7 PQE_UserSeverity FIXED(31), /* Severity level of check.      01746000
*                                      Default severity or              01747000
*                                      user-specified severity (it is   01748000
*                                      the latter when                  01749000
*                                      PQE_UserSeveritySpecified)       01750000
*                                      (See severity constants for the  01751000
*                                      expected values)              */ 01752000
*      5 PQE_Interval,              /* Check time interval.             01753000
*                                      interval. A value of '00000000'X 01754000
*                                      indicates the check should not   01755000
*                                      be run more then once unless the 01756000
*                                      interval is overridden           01757000
*                                      Default interval or              01758000
*                                      user-specified interval (it is   01759000
*                                      the latter when                  01760000
*                                      PQE_UserIntervalSpecified)    */ 01761000
*       6 PQE_UserInterval,         /* Check time                       01762000
*                                      interval. A value of '00000000'X 01763000
*                                      indicates the check should not   01764000
*                                      be run more then once unless the 01765000
*                                      interval is overridden           01766000
*                                      Default interval or              01767000
*                                      user-specified interval (it is   01768000
*                                      the latter when                  01769000
*                                      PQE_UserIntervalSpecified)    */ 01770000
*        7 PQE_Hours FIXED(15),      /* Number of hours              */ 01771000
*          9 PQE_UserHours FIXED(15), /* Number of hours             */ 01772000
*        7 PQE_Minutes FIXED(15),   /* Number of minutes             */ 01773000
*          9 PQE_UserMinutes FIXED(15), /* Number of minutes         */ 01774000
*      5 PQE_Date char(8),          /* Default date or User-specified   01775000
*                                      date YYYYMMDD (it is the latter  01776000
*                                      when PQE_UserDateSpecified)   */ 01777000
*        7 PQE_UserDate char(8),    /* Default date or User-specified   01778000
*                                      date YYYYMMDD (it is the latter  01779000
*                                      when PQE_UserDateSpecified)   */ 01780000
*      5 PQE_WTOType Fixed(8),      /* user-specified WtoType (valid    01781000
*                                      PQE_UserWtoTypeSpecified)        01782000
*                                      Critical, Eventual Action, etc.  01783000
*                                      See WtoType constants         */ 01784000
*        7 PQE_User_WTOType Fixed(8), /* user-specified WtoType (valid  01785000
*                                      PQE_UserWtoTypeSpecified)        01786000
*                                      Critical, Eventual Action, etc.  01787000
*                                      See WtoType constants         */ 01788000
*      5 PQE_Debug Fixed(8),        /* See PQE_DEBUG_xxx.               01789000
*                                      Default Debug or                 01790000
*                                      user-specified Debug (it is      01791000
*                                      the latter when                  01792000
*                                      PQE_UserDebugSpecified)       */ 01793000
*        7 PQE_User_Debug Fixed(8),      /* See PQE_DEBUG_xxx.          01794000
*                                      Default Debug or                 01795000
*                                      user-specified Debug (it is      01796000
*                                      the latter when                  01797000
*                                      PQE_UserDebugSpecified)       */ 01798000
*      5  PQE_UserSpecified_Flags Bit(16),  /* Indicates which          01799000
*                                      fields the user specified     */ 01800000
*       6 PQE_UserSpecified_Flags0 Bit(8),  /* Byte 0 of flags       */ 01801000
*        7  PQE_UserSeveritySpecified Bit(1), /* A user-specified       01802000
*                                      SEVERITY value was found      */ 01803000
*        7  PQE_UserWtoTypeSpecified BIT(1), /* A user-specified        01804000
*                                      WTOTYPE value was found       */ 01805000
*        7  PQE_UserDesccodeSpecified BIT(1), /* A user-specified Desc  01806000
*                                      Code value was found          */ 01807000
*        7  PQE_UserRoutcodeSpecified BIT(1), /* A user-specified Route 01808000
*                                      Code value was found          */ 01809000
*        7  PQE_UserDateSpecified BIT(1), /* A user-specified DATE      01810000
*                                      value was found               */ 01811000
*        7  PQE_UserReasonSpecified BIT(1), /* A user-specified REASON  01812000
*                                      value was found. That reason is  01813000
*                                      different than the default.   */ 01814000
*        7  PQE_UserParmSpecified BIT(1), /* A user-specified PARM      01815000
*                                      value was found. That reason is  01816000
*                                      different than the default.   */ 01817000
*        7  PQE_UserIntervalSpecified Bit(1), /* A user-specified       01818000
*                                      interval value was found      */ 01819000
*       6 PQE_UserSpecified_Flags1 Bit(8),  /* Byte 1 of flags       */ 01820000
*        7  PQE_UserCategorySpecified BIT(1),  /* User-specified        01821000
*                                      categories were processed     */ 01822000
*        7  PQE_UserDebugSpecified BIT(1),  /* User-specified           01823000
*                                      debug was processed           */ 01824000
*        7  PQE_UserVerboseSpecified BIT(1), /* User-specified          01825000
*                                      verbose was processed     @L2C*/ 01826000
*        7  PQE_UserExceptionIntervalSpecified Bit(1), /*               01827000
*                                      A user-specified                 01828000
*                                      exception interval was found     01829000
*                                                                @L2A*/ 01830000
*        7  PQE_UserRexxTimeLimitSpecified BIT(1), /* User-specified    01831000
*                                      TimeLimit was processed   @P8A*/ 01832000
*        7  PQE_UserRexxHLQSpecified BIT(1), /* User-specified          01833000
*                                      REXXHLQ was processed     @LEA*/ 01834000
*        7  *        Bit(2),        /* Reserved for future use   @LEC*/ 01835000
*      5 PQE_WTO_DescCode Bit(16),  /* User specified addition          01836000
*                                      DESCCODEs                     */ 01837000
*        7 PQE_UserDesccode Bit(16), /* User specified additional       01838000
*                                      DESCCODEs                     */ 01839000
*      5  PQE_MoreFlags Bit(8) Abnormal,                                01840000
*        7 PQE_NotAllCategoriesApplied Bit(1),        /* This is set    01841000
*                                      when a category ADD is           01842000
*                                      processed but there are already  01843000
*                                      the maximum allowed. It is       01844000
*                                      reset only when a category       01845000
*                                      REPLACE is done (not when a      01846000
*                                      category REMOVE is done).     */ 01847000
*        7 PQE_LookAtParms Bit(1),  /* This will be on for the call     01848000
*                                      to the init function, for the    01849000
*                                      first call to the check          01850000
*                                      function and for the next        01851000
*                                      call to the check function after 01852000
*                                      the user updated the parms.      01853000
*                                      Note that there might actually   01854000
*                                      be no parms.                  */ 01855000
*          9 PQE_UserParmChangedSinceLastTime Bit(1), /* See comment    01856000
*                                      on PQE_LookAtParms            */ 01857000
*        7 PQE_Internal_UserParmChanged Bit(1),  /* This is an          01858000
*                                      internal indicator not for       01859000
*                                      use by check routines         */ 01860000
*        7 PQE_PolicyUpdate_Active Bit(1),  /* A policy update          01861000
*                                      requested that the check be      01862000
*                                      active                        */ 01863000
*        7 PQE_PolicyUpdate_Inactive Bit(1),  /* A policy update        01864000
*                                      requested that the check be      01865000
*                                      active                        */ 01866000
*        7 PQE_NeedToApplyPolicy Bit(1),      /* Categories were        01867000
*                         updated by a "change" so we need to           01868000
*                         re-apply policy. This is not an interface. */ 01869000
*      5 PQE_Verbose Fixed(8),      /* See PQE_Verbose_xxx.             01870000
*                                      Default Verbose or               01871000
*                                      user-specified Verbose (it is    01872000
*                                      the latter when                  01873000
*                                      PQE_UserVerboseSpecified)        01874000
*                                                                @L2A*/ 01875000
*        7 PQE_User_Verbose Fixed(8),    /* See PQE_Verbose_xxx.        01876000
*                                      Default Verbose or               01877000
*                                      user-specified Verbose (it is    01878000
*                                      the latter when                  01879000
*                                      PQE_UserVerboseSpecified)        01880000
*                                                                @L2A*/ 01881000
*      5 PQE_WTO_Routcode Char(16),/* Route code to be used for         01882000
*                                      WTO. All 0's => none          */ 01883000
*        7 PQE_UserRoutcode Char(16), /* Route codes to be used for     01884000
*                                      WTO. All 0's => none          */ 01885000
*      5  PQE_LastUpdatedBy_Area                                        01886000
*              Char(Length(Pqe_LastUpdatedBy_Type)),  /*                01887000
*                                      Either policy statement name or  01888000
*                                      'HZSCHECK' !! jobname            01889000
*                                      (HZSCHECK macro) or              01890000
*                                      'COMMAND' (modify command) or    01891000
*                                      'PARMLIB' (a statement in a      01892000
*                                      parmlib member)                  01893000
*                                      'SYSTEM'.                        01894000
*                                      This is mapped by the            01895000
*                                      Pqe_LastUpdatedBy_Type DSECT  */ 01896000
*%IF HZSPQE_ASMONLY = '' %THEN                                          01897000
*%DO;                                                                   01898000
*        7 PQE_LastUpdatedBy isa(Pqe_LastUpdatedBy_Type),   /*       */ 01899000
*%END;                                                                  01900000
*      5 PQE_ExceptionInterval,     /* Check time exception interval.   01901000
*                                      A value of >= 80000000           01902000
*                                      indicates that it is either      01903000
*                                      to be run according to the       01904000
*                                      interval or one half the         01905000
*                                      interval. This is either the     01906000
*                                      default exception interval or    01907000
*                                      the user-specified exception     01908000
*                                      (it is the latter when           01909000
*                                    PQE_UserExceptionIntervalSpecified 01910000
*                                      is on)                    @L2A*/ 01911000
*        7 PQE_EIHours FIXED(15),    /* Number of hours          @L2A*/ 01912000
*          9 PQE_EINotHHHMM Bit(1),/*                            @L2A*/ 01913000
*          9 PQE_EISystem Bit(1),         /* Valid only when            01914000
*                                      PQE_EINotHHHMM            @L2A*/ 01915000
*          9 PQE_EIHalf Bit(1),           /* Valid only when            01916000
*                                      PQE_EINotHHHMM            @L2A*/ 01917000
*        7 PQE_EIMinutes FIXED(15), /* Number of minutes         @L2A*/ 01918000
*      5  PQE_Time_ExceptionInterval Fixed(32),  /* Exception time      01919000
*                                     interval in 0.01 seconds   @L2A*/ 01920000
*      5  PQE_REXXTimeLimit Fixed(32),     /* Valid only for            01921000
*                                     REXX=YES checks            @L2A*/ 01922000
*      5  PQE_REXXPQECHKWORK_Len FIXED(15), /* Length of PQEChkArea     01923000
*                                      that was last saved.  Valid for  01924000
*                                      REXX=YES checks           @L2A*/ 01925000
*      5  PQE_Chkparms_Flags Bit(8), /*                          @L3A*/ 01926000
*        7 PQE_RexxTsoNo Bit(1),     /*                          @L3A*/ 01927000
*      5  * Char(1),                 /* Reserved for future use  @L2C*/ 01928000
*      5  PQE_RexxHLQ Char(8),       /* Valid only for REXX=YES checks. 01929000
*                                       This is either the default, as  01930000
*                                       taken from the required REXXHLQ 01931000
*                                       parameter at ADD CHECK time, or 01932000
*                                       a user override, if             01933000
*                                       PQE_UserRexxHLQSpecified is ON  01934000
*                                                                @LEC*/ 01935000
*      5  PQE_SyncValNotSystem Fixed(8),] anything by SYSTEM     @LBC   01936000
*          9 PQE_SyncValHHMM    Bit(1), ] On, when SYNCVAL(HH:MM)       01937000
*          9 PQE_SyncValAnyHour Bit(1), ] On, when SYNCVAL(*:MM)        01938000
*          9 *                  Bit(6), ] for future use                01939000
*      5  PQE_SyncValHours Fixed(8),    ] 0..23 for HH:MM               01940000
*      5  PQE_SyncValMinutes Fixed(8),  ] 0..59 for HH:MM or *:MM       01941000
*      5  * Fixed(8),                /* Reserved for future use@LAA*/   01942000
*      5  * Char(20) Bdy(Word),      /* Reserved for future use@LAC*/   01943000
*      5  PQE_CheckExec isa(Pqe_CheckExec_Type), /*              @L2A*/ 01944000
*      5  PQE_CategoryArea Bdy(Dword),                                  01945000
*       6 PQE_NumcategoriesDefined Fixed(31), /* Number of categories   01946000
*                                      associated with this check.      01947000
*                                      The categories will occupy the   01948000
*                                      first "n" slots in the           01949000
*                                      PQE_CategoryArray.            */ 01950000
*       6 PQE_CategoryArray (PQE_MaxCategoryEntries), /*                01951000
*                                      array of categories associated   01952000
*                                      with this check. There are       01953000
*                                      PQE_MaxCategoryEntries           01954000
*                                      contiguous entries in the array. 01955000
*                                      Each array entry is              01956000
*                                      a 16-byte category            */ 01957000
*        7  PQE_Category isa(PQE_Category_Type), /* Category name    */ 01958000
*      5  PQE_ParmLen Fixed(15),       /*                               01959000
*                                      Quotes that were used to         01960000
*                                      surround the PARMS value within  01961000
*                                      an operator command or HZSPRMxx  01962000
*                                      statement are not included       01963000
*                                      within the resulting length   */ 01964000
*        7  PQE_UserParmLen Fixed(15),                                  01965000
*      5  PQE_Reserved6 char(2) Bdy(HWord),     /* RESERVED FOR IBM     01966000
*                                      PROPRIETARY PROGRAMMING SUPPORT  01967000
*                                                                @L2A*/ 01968000
*  %IF HZS_INTERNAL='YES' %THEN     /*                           @L2A*/ 01969000
*    %DO;                           /*                           @L2A*/ 01970000
*      %HZSPQEI_PART='6';           /*                           @L2A*/ 01971000
*      %INCLUDE SYSLIB(HZSPQEI);    /*                           @L2A*/ 01972000
*    %END;                          /*                           @L2A*/ 01973000
*      5  PQE_Reason_Union Union,                                       01974000
*       6 PQE_Reason char(PQE_ReasonLength)                             01975000
*                                  Varying Bdy(DWord), /* specified     01976000
*                                      reason for the check and user    01977000
*                                      Default reason or                01978000
*                                      user-specified reason (it is     01979000
*                                      the latter when                  01980000
*                                      PQE_UserReasonSpecified)      */ 01981000
*        7  PQE_ReasonLen fixed(15),    /* Reason Length             */ 01982000
*        7  PQE_ReasonText char(PQE_ReasonLength), /*                   01983000
*                                            Reason text             */ 01984000
*       6 PQE_UserReason char(PQE_ReasonLength)                         01985000
*                                  Varying Bdy(DWord), /* specified     01986000
*                                      reason for the check and user    01987000
*                                      values.                          01988000
*                                      Default reason or                01989000
*                                      user-specified reason (it is     01990000
*                                      the latter when                  01991000
*                                      PQE_UserReasonSpecified)      */ 01992000
*        7 PQE_UserReasonLength fixed(15), /* Reason Length          */ 01993000
*        7 PQE_UserReasonText char(PQE_ReasonLength), /*                01994000
*                                            Reason text             */ 01995000
*      5  PQE_ParmArea char(PQE_ParmLength), /*                         01996000
*                                      Area for parameters              01997000
*                                      Default parameters or            01998000
*                                      user-specified parameters (it is 01999000
*                                      the latter when                  02000000
*                                      PQE_UserparametersSpecified).    02001000
*                                      Quotes that were used to         02002000
*                                      surround the PARMS value within  02003000
*                                      an operator command or HZSPRMxx  02004000
*                                      statement are not included and   02005000
*                                      are also not counted in the      02006000
*                                      actual length provided via field 02007000
*                                      PQE_ParmLen.                  */ 02008000
*        7  PQE_UserParmArea char(PQE_ParmLength), /*                   02009000
*                                      Area for user parameters         02010000
*                                      Default parameters or            02011000
*                                      user-specified parameters (it is 02012000
*                                      the latter when                  02013000
*                                      PQE_UserparametersSpecified)  */ 02014000
*  %IF HZS_INTERNAL='YES' %THEN     /*                           @P3A*/ 02015000
*    %DO;                           /*                           @P3A*/ 02016000
*    3  PQEI_AREA Char(4096) Bdy(DWORD) Union,  /* Mapped with HZSPQEI  02017000
*                                                                    */ 02018000
*     4 PQE_ChkWork Char(2048) BDY(DWORD), /* 2K work area for check    02019000
*                                      routine. Will be copied from     02020000
*                                      PQEI_ChkWork into local PQE      02021000
*                                                                @L5A*/ 02022000
*     4 PQE_Internal Char(2048) Bdy(Dword), /* This can be increased in 02023000
*                                      size up to 4096           @L5A*/ 02024000
*      %HZSPQEI_PART='2';           /*                           @P3A*/ 02025000
*      %INCLUDE SYSLIB(HZSPQEI);    /*                           @P3A*/ 02026000
*    3  PQEI_ChkWork Char(2048) BDY(DWORD); /* 2K work area for check   02027000
*                                      routine                       */ 02028000
*    %END;                          /*                           @P3A*/ 02029000
*  %ELSE %DO;                       /*                           @P3A*/ 02030000
*    /****************************************************************/ 02031000
*    /*                                                              */ 02032000
*    /* PQE_ChkWork                                                  */ 02033000
*    /*   Work area used (and mapped) by the check routine as needed */ 02034000
*    /*                                                              */ 02035000
*    /*   Offset: 2048/'0800'X                                       */ 02036000
*    /*   Length: 2048/'0800'X                                       */ 02037000
*    /*                                                              */ 02038000
*    /****************************************************************/ 02039000
*    3  PQE_ChkWork Char(2048) BDY(DWORD), /* 2K work area for check    02040000
*                                      routine                       */ 02041000
*     5 PQEChkWork Char(2048) BDY(DWORD); /* 2K work area for check     02042000
*                                      routine                       */ 02043000
*  %END;                            /*                           @P3A*/ 02044000
*/********************************************************************/ 02045000
*/* PQE and check related constants                                  */ 02046000
*/********************************************************************/ 02047000
*Dcl                                                                    02048000
* PQE_acronym    Constant('PQE ') Char(*), /* Eye catcher for PQE    */ 02049000
* PQE_SystemSeverity Constant(0),   /* For dynamic severity "default".  02050000
*                                      Never actually in PQE. @L9A*/    02051000
* PQE_NoSeverity     Constant(255), /* Severity value for NO severity   02052000
*                                      value                     @P2C*/ 02053000
* PQE_LowSeverity    Constant(4),   /* Severity value for Low severity  02054000
*                                      value                     @P2C*/ 02055000
* PQE_MediumSeverity Constant(8),   /* Severity value for Medium        02056000
*                                      severity value            @P2C*/ 02057000
* PQE_HighSeverity   Constant(12),  /* Severity value for High severity 02058000
*                                      value                     @P2C*/ 02059000
* PQE_Result_NoExceptions Constant(0),                                  02060000
* PQE_Result_LowSeverityExceptions Constant(4),                         02061000
* PQE_Result_MediumSeverityExceptions Constant(8),                      02062000
* PQE_Result_HighSeverityExceptions Constant(12),                       02063000
* PQE_WtoType_Critical Constant(16),                            /*   */ 02064000
* PQE_WtoType_Eventual Constant(12),                            /*   */ 02065000
* PQE_WtoType_Info Constant(8),                                 /*   */ 02066000
* PQE_WtoType_Hardcopy Constant(4),                             /*   */ 02067000
* PQE_WtoType_None Constant(255),                               /*   */ 02068000
* PQE_WtoType_No_Change Constant(0),  /* From HZSCHECK only, never      02069000
*                                        actually in a PQE           */ 02070000
* PQE_Severity_No_Change Constant(0), /* From HZSCHECK only, never      02071000
*                                        actually in a PQE           */ 02072000
* PQE_Debug_Off Constant(0),                                            02073000
* PQE_Debug_On Constant(8);                                             02074000
*Dcl PQE_Verbose_No Constant(0);    /*                           @L2A*/ 02075000
*Dcl PQE_Verbose_Yes Constant(8);   /*                           @L2A*/ 02076000
*Dcl PQE_Function_Code_Init Constant(1); /* Check initialization     */ 02077000
*Dcl PQE_Function_Code_Check Constant(2); /* Check code              */ 02078000
*Dcl PQE_Function_Code_Cleanup Constant(3); /* Check cleanup         */ 02079000
*Dcl PQE_Function_Code_Delete Constant('7FFFFFFF'x); /* Check Delete */ 02080000
*Dcl PQE_Init Constant(PQE_Function_Code_Init);            /*        */ 02081000
*Dcl PQE_Check Constant(PQE_Function_Code_Check);          /*        */ 02082000
*Dcl PQE_cleanup Constant(PQE_Function_Code_Cleanup);      /*        */ 02083000
*Dcl PQE_Delete Constant(PQE_Function_Code_Delete);        /*        */ 02084000
*Dcl PQE_ReasonLength Constant(126);                                    02085000
*Dcl PQE_ParmLength Constant(256);                                      02086000
*Dcl PQE_MaxCategoryEntries Constant(16);                               02087000
*Dcl PQE_Category_Type Char(16) TYPE Synonym;                           02088000
*Dcl PQE_Checkname_Type Char(32) TYPE Synonym;                          02089000
*Dcl PQE_CheckOwner_Type Char(16) TYPE Synonym;                         02090000
*Dcl PQE_PolicyStatementName Char(16) TYPE Synonym;                     02091000
*Dcl PQE_ParmlibSuffix_Type Char(2) TYPE Synonym;                       02092000
*Dcl PQE_CheckExec_Type Char(8) TYPE Synonym;                 /* @L2A*/ 02093000
*DCL 1 PQE_LastUpdatedBy_Type TYPE                                      02094000
*      ,3 PQE_LastUpdatedBy_Type_Union UNION                            02095000
*        ,5 * isa(PQE_PolicyStatementName)                              02096000
*        ,5 PQE_LastUpdatedBy_Hzscheck_Structure                        02097000
*          ,7 PQE_LastUpdatedBy_Hzscheck_Header Char(8)                 02098000
*          ,7 PQE_LastUpdatedBy_Hzscheck_Jobname Char(8)                02099000
*        ,5 PQE_LastUpdatedBy_Parmlib_Structure                         02100000
*          ,7 PQE_LastUpdatedBy_Parmlib_Header Char(8)                  02101000
*          ,7 PQE_LastUpdatedBy_Parmlib_HZSPRMxx Char(8)                02102000
*        ,5 PQE_LastUpdatedBy_System_Area Char(8)             /* @P9A*/ 02103000
*          ;                                                            02104000
*Dcl PQE_LastUpdatedBy_Hzscheck Char(8)                                 02105000
*      Constant('HZSCHECK');     /* The trailing 8 characters of        02106000
*                         the field in this case are the jobname     */ 02107000
*Dcl PQE_LastUpdatedBy_Command Char(8)                                  02108000
*      Constant('COMMAND ');                                            02109000
*Dcl PQE_LastUpdatedBy_Parmlib Char(8)                                  02110000
*      Constant('PARMLIB ');    /* The trailing 8 characters of         02111000
*                         the field in this case are the parmlib        02112000
*                         member name                                */ 02113000
*Dcl PQE_LastUpdatedBy_System Char(8)                                   02114000
*      Constant('SYSTEM  ');  /* The trailing characters of             02115000
*                         the field in this case are blanks      @P9A*/ 02116000
*  %IF HZS_INTERNAL='YES' %THEN     /*                           @L2A*/ 02117000
*    %DO;                           /*                           @L2A*/ 02118000
*      %HZSPQEI_PART='3';           /*                           @L2A*/ 02119000
*      %INCLUDE SYSLIB(HZSPQEI);    /*                           @L2A*/ 02120000
*    %END;                          /*                           @L2A*/ 02121000
*                                                                       02122000
*%IF Translate(HZS_ZTT)='YES' %THEN                           /* @L7A*/ 02123000
* %DO;                                                                  02124000
* /* For PLX-only, provide access to check configuration variable(s)    02125000
* used in a test (ZTT) environment. Requires CS$TBL definition, see     02126000
* ?EPILOG. */                                                           02127000
*DCL HZS_ZTT_CHECKTIMEDIVIDE FIXED(32) /* see xHc_ZTT_CheckTimeDivide*/ 02128000
*                   BASED(CS$CTBL(76)) /* in HZSTABLE */                02129000
*                     POS(1520+1);                            /* @L7A*/ 02130000
* %END;                                                                 02131000
*                                                                       02132000
*@LOGIC;                                                                02133000
*#PRAGMA TOOL=CBGEN.                                                    02134000
*#LINE.%HZSPQE_ASMONLY = 'YES';                                         02135000
*#LINE.%INCLUDE SYSLIB(HZSPQE);                                         02136000
*#DELETE.HZS_ZTT_CHECKTIMEDIVIDE                                        02137000
*#USEORG.                                                               02138000
*#ALIGNOP.                                                              02139000
*#NOTUPPER.                                                             02140000
*#EPRAGMA.                                                              02141000
*@ENDLOGIC;                                                             02142000
*/* End of PL/X Source                                               */ 02143000
* %IF HZSPQE_LIST ^= 'NO' &                                             02144000
*    ZCBPRINT ^= 'NO' %THEN                                             02145000
*   %GOTO HZSPQE_4;                                                     02146000
*   @LIST POP NOECHO;                                                   02147000
* %HZSPQE_4:;                                                           02148000
* %END;                                                                 02149000
