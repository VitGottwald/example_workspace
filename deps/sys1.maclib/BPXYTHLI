*                                                                       00001000
* %DCL BPXYTHLI_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE BPXYTHLI_INCLUDED;                                        00003000
* %IF BPXYTHLI_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 09132. CBGEN compile date 09089         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         BPXYTHLI &DSECT=YES,&LIST=YES,&TITLE=YES,&THLI=YES             00009000
         GBLC  &BPXYTHLI_INCLUDED                                       00010000
         GBLC  &ZCBPRINT                                                00011000
&BPXYTHLI_INCLUDED SETC 'YES'                                           00012000
         AIF   ('&LIST' EQ 'NONE').P0                                   00013000
         AIF   ('&TITLE' EQ 'NO').P5                                    00014000
 TITLE   'BPXYTHLI  - Thread Level Information                        '*00015000
                                                                        00016000
.P5      ANOP                                                           00017000
**/ BPXYTHLI_1:;                                                        00018000
*/****START OF SPECIFICATIONS****************************************** 00019000
*                                                                       00020000
*    $MAC (BPXYTHLI) COMP(SCPX1) PROD(BPX):                             00021000
*                                                                       00022000
*01* MACRO NAME: BPXYTHLI                                               00023000
*                                                                       00024000
*01* DSECT NAME: BPXYTHLI                                               00025000
*                                                                       00026000
*01* DESCRIPTIVE NAME: Thread Level Information                         00027000
*                                                                       00028000
*02*   ACRONYM: THLI                                                    00029000
**/                                                                     00030000
*/*01* PROPRIETARY STATEMENT=                                        */ 00031000
*/***PROPRIETARY_STATEMENT********************************************/ 00032000
*/*                                                                  */ 00033000
*/*                                                                  */ 00034000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00035000
*/* 5694-A01 COPYRIGHT IBM CORP. 1996, 2010                          */ 00036000
*/*                                                                  */ 00037000
*/* STATUS= HBB7770                                                  */ 00038000
*/*                                                                  */ 00039000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00040000
*/*                                                                     00041000
*                                                                       00042000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00043000
*01* END OF EXTERNAL CLASSIFICATION:                                    00044000
*                                                                       00045000
*01* FUNCTION:                                                          00046000
*                                                                       00047000
*    This file contains the mapping of thread related information       00048000
*    of possible interest to external users.  One of these data areas   00049000
*    will be created whenever a task is dubbed.                         00050000
*                                                                       00051000
*01* METHOD OF ACCESS:                                                  00052000
*                                                                       00053000
*02*   PL/X:                                                            00054000
*                                                                       00055000
*        %INCLUDE SYSLIB(BPXYTHLI)                                      00056000
*                                                                       00057000
*        By default, the THLI is based on OtcbThli. If                  00058000
*        other basing is desired, use %THLIBASE='BASED(xxxxxx)'.        00059000
*                                                                       00060000
*02*   ASM:                                                             00061000
*        With DSECT=NO (default), storage is allocated in line          00062000
*        and addressability is provided thru that DSECT or CSECT.       00063000
*        With DSECT=YES, a DSECT is produced and "USING Thli,reg"       00064000
*        is required for addressability.  Here "reg" contains the       00065000
*        address of THLI#LEN bytes of storage.                          00066000
*                                                                       00067000
*01* SIZE: THLI#LEN                                                     00068000
*            THLI -- X'00EC' bytes                                      00069000
*                                                                       00070000
*01* POINTED TO BY:                                                     00071000
*                   OtcbThli                                            00072000
*                                                                       00073000
*01* CREATED BY: BPXPRIN1                                               00074000
*                                                                       00075000
*01* DELETED BY:                                                        00076000
*      Task termination cleanup                                         00077000
*      Process cleanup                                                  00078000
*                                                                       00079000
*01* STORAGE ATTRIBUTES:                                                00080000
*02*   SUBPOOL: 230                                                     00081000
*02*   KEY: Same as callers key who was first dubbed in the process     00082000
*02*   RESIDENCY: private                                               00083000
*                                                                       00084000
*01* FREQUENCY: 1 per task                                              00085000
*                                                                       00086000
*01* SERIALIZATION: None                                                00087000
*                                                                       00088000
*01* DEPENDENCIES: None                                                 00089000
*                                                                       00090000
*01* NOTES: None                                                        00091000
*                                                                       00092000
*01* COMPONENT:  OpenMVS (SCPX1)                                        00093000
*                                                                       00094000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00095000
*                                                                       00096000
*01* EYE-CATCHER: THLI                                                  00097000
*02*   OFFSET:  0                                                       00098000
*02*   LENGTH:  4                                                       00099000
*                                                                       00100000
*                                                                       00101000
*01* CHANGE-ACTIVITY:                                                   00102000
* $L0=DRGA153 HOM1140 951212 PDPY: A153.03 - Performance                00103000
* $P0=PQC1585 HOM1150 960425 PDJM: Rework assembler portion             00104000
* $P1=PQC2019 HOM1150 960803 PDJJ: Add pointer to PPSD (OW21905)        00105000
* $D1=DSYA194 HBB6604 960918 PDJJ: A194.02 Async I/O exits              00106000
* $D2=DUXA217 HBB6605 970527 PDPY: DCR A217.18  Thli post support       00107000
* $P2=PUX0406 HBB6605 970811 PDJY: Add pointer to PPSD (OW21905)        00108000
* $D3=DVTA239 HBB6606 970925 PDJJ: DCR A239.00  Set Timer Event         00109000
* $D4=DWWA275 HBB6606 980224 PDJJ: DCR A275.00  aio_suspend             00110000
* $P3=PWA0200 HBB6607 980605 PDJJ: Putback cancel asyncflag             00111000
* $P4=PWK0271 HBB6608 981001 PDJJ: Pass IP@ to security exits OW35109   00112000
* $D5=DWKA320 HBB6608 981008 PD16: JAVA performance enhancement A320.00 00113000
* $01=OW37717 HBB6608 990303 PDJT: Avoid Signals for XTI        PWY0213 00114000
* $D6=DXDA396 HBB7703 990826 PDJC: (DCR A396.00) KERNEL Generic         00115000
*                                  Timeout Service                      00116000
* $02=OW41895 HBB7703 991210 PDKG: Add Appl Parm to RacRacroute         00117000
* $P5=PXV0292 HBB7704 000904 PDJJ: Allow PTQ to give timeout failure    00118000
* $D7=DX0A412 HBB7705 000215 PDMX: Native ASCII A412.00                 00119000
* $P6=PXV0312 HBB7704 001012 PDI6: Freeze Stop Flag for LE Dumping      00120000
* $D8=DYN0519 HBB7708 000317 PDJM: A519.01 64-bit virtual               00121000
* $D9=DCRA539 HBB7705 001115 PDSZ: Defer Signals                        00122000
* $P7=PX01333 HBB7705 010126 PDJJ: Post for Resolver                    00123000
* $P8=PYN0039 HBB7708 010615 PDJC: Fix 64 bit sticky - code missing     00124000
* $D9=DYN0519 HBB7708 010715 PDZJ: Copy hi memory objects               00125000
* $03=OW50963 HBB7708 010828 PDJJ: Perc tcb exit abend                  00126000
* $DA=DYVA551 HBB7708 010221 PDJI: A551.00 Enhanced pthread quiesce     00127000
* $DB=DYVA590 HBB7707 011015 PDJJ: Abend from signal IRB                00128000
* $P9=PYN0220 HBB7708 020301 PDFO: Bilingual fixup                      00129000
* $DC=DYNA613 HBB7708 020801 PDSZ: Dynamic CBS                          00130000
* $DD=DYNA614 HBB7709 020725 PDJQ: DCR A614 Fork w/setuid accting       00131000
*                                  and make THLI CBGENable              00132000
* $DE=DJKA747 HBB7709 031121 PDJJ: DCR A747 Propagate auth on fork      00133000
* $DF=DDEA698 HBB7709 040301 PDGF: DCR A698 Added ThliRetCode and       00134000
*                                  ThliRsnCode for JCPR syscall         00135000
*                                  failures                             00136000
* $04=OA08216 HBB7709 050214 PDJJ: Add applid for use in ptsec          00137000
* $05=OA12246 HBB7720 050701 PDJQ: mvsprocclp should cleanup caller's   00138000
*                                  process only                         00139000
* $DG=DCR0SRM HBB7740 060616 PDI6: Addition of SRM flags                00140000
* $DH=ME09278 HBB7750 070205 PDJJ: B264 Dump priority support           00141000
* $DI=ME10013 HBB7750 070331 PDKG: B337 Applid support - extended parms 00142000
* $DJ=DCRB448 HBB7760 080630 PDJQ: B448 RAS - identify last SAF error   00143000
* $xx=ME14877 HBB7760 081028 PDHA: Clean up proprietary statement       00144000
* $DK=DCRB644 HBB7770 080912 PDJC: B644 SMF IEFU83 support              00145000
* $06=OA27451 HBB7750 081215 PDJJ: GID name support for NFS             00145100
* $DL=DCRC511 HBB77A0 120116 PDJJ: Pause/Release support for condwait() 00145200
* $07=W103331 HBB77B0 160110 PDJJ: Propagate abterm flag OA48017        00145300
* $DM=DCRC893 HBB77B0 160731 PDJQ: DCR C893.00 Syscall Exits            00145400
****END OF SPECIFICATIONS*********************************************/ 00145500
*% /*                                                                   00145600
.P0      ANOP                                                           00145700
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00145800
         AIF   ('&LIST' EQ 'YES').P2                                    00145900
.P1      ANOP                                                           00146000
         PUSH  PRINT                                                    00146100
         PRINT OFF                                                      00146200
.P2      ANOP                                                           00146300
         AIF   ('&THLI' EQ 'NO').L0002                                  00146400
         AIF   ('&DSECT' EQ 'YES').L0003                                00146500
         AIF   ('&THLI' NE 'YES').L0002                                 00146600
THLI     DS    0D                                                       00146700
         AGO   .L0004                                                   00146800
.L0003   ANOP                                                           00146900
THLI     DSECT                                                          00147000
.L0004   ANOP                                                           00148000
THLIID   DS    CL4       EBCDIC ID - Thli                               00149000
THLISP   DS    X         Subpool number of this Thli                    00150000
THLILEN  DS    FL3       Length of this Thli                            00151000
THLIFLAGS DS   0BL4      Flag bits                                      00152000
THLIFLAGB1 DS  0B                                                       00153000
THLISIGPENDING EQU X'80' Signal pending flag                            00154000
THLICANCELDISABLED EQU X'40' Cancel request type 0=enabled, 1=disabled  00155000
THLICANCELPENDING EQU X'20' Cancel pending for thread                   00156000
THLICANCELASYNC EQU X'10' Cancelation request state 0 = controlled, 1  *00157000
                         = aysnc                                        00158000
THLIITERATESIR EQU X'08' Use back door signal dlv 0 = Sir can exit 1 = *00159000
                         New sig in PPSD(Iterate Sir)                   00160000
THLINOSIG EQU  X'04'     Suppress signal generation for this socket    *00161000
                         call.                                          00162000
THLITIMEOUTSET EQU X'02' Kernel Time Out Service requested              00163000
THLITIMERPOPPED EQU X'01' Kernel Time Out Service timer popped          00164000
         ORG   THLIFLAGB1+1                                             00165000
THLIFLAGB2 DS  0B                                                       00166000
THLIPTQTIMEOUT EQU X'80' If on, invokers of the BPX1PTQ call will      *00167000
                         recieve EAGAIN/JRTimeOut if quiece times oyt  *00168000
                         and all threads are not quieced.               00169000
THLIFREEZESTOP EQU X'40' Thread has been frozen via Status Stop         00170000
THLIDEFERSIGNALS EQU X'20' Defer signals for user                       00171000
THLIPOSTANDDEFER EQU X'10' Post regardless of key defer delivery until *00172000
                         key ok                                         00173000
THLITCBEXITPERC EQU X'08' Set by application to allow abends in        *00174000
                         tcbexits to perc to Tcb                        00175000
THLIIRBNORETRY EQU X'04' Set by NSSIR to indicate the calling IRB is   *00176000
                         not to retry any abends                        00177000
THLISIGIRBABEND EQU X'02' Abend on sigkill regardless of state          00178000
*                                                                       00179000
*      ***************************************************************  00180000
*      *                                                             *  00181000
*      * Use WorkPtr64 instead of WorkPtr when ThliUseWorkPtr64 is   *  00182000
*      * ON. Thread was pthread_created in 64 bit mode               *  00183000
*      *                                                             *  00184000
*      ***************************************************************  00185000
*                                                                       00186000
*                                                                       00187000
THLIUSEWORKPTR64 EQU X'01'                                              00188000
         ORG   THLIFLAGB2+1                                             00189000
THLIFLAGB3 DS  0B                                                       00190000
THLIFORKACCTG EQU X'80'  Child accounting data based on setuid         *00191000
                         identity                                       00192000
THLIPROPAUTH EQU X'40'   Propagate JSCBAUTH to child on fork            00193000
THLIUNDUBCALLERONLY EQU X'20' mvsprocclp should cleanup caller's       *00194000
                         process only                                   00195000
         ORG   THLIFLAGS+4                                              00196000
THLIPPSD DS    F         Address of Ppsd                                00197000
THLISIGMASK DS BL8       Signal mask. Primarliy set by sigprocmask().   00198000
THLIPRLI DS    A         -> Prli. Process related information           00199000
*                                                                       00200000
*      ***************************************************************  00201000
*      *                                                             *  00202000
*      * Use ThliWorkPtr64 if this thread was created via a pthread  *  00203000
*      * create done in amode 64                                        00204000
*      *                                                             *  00205000
*      ***************************************************************  00206000
*                                                                       00207000
*                                                                       00208000
THLIWORKPTR DS A         -> To user work area specified on             *00209000
                         pthread_create                                 00210000
THLICOMECB DS  0F        User communication ECB                         00211000
THLICOMECBWAIT EQU X'80' ECB wait bit                                   00212000
THLICOMECBPOST EQU X'40' ECB post bit                                   00213000
         ORG   THLICOMECB+4                                             00214000
THLICOMFLAGS DS 0BL4     ECB control flags                              00215000
THLICOMFLAGSB1 DS B      reserved                                       00216000
THLICOMFLAGSB2 DS B      reserved                                       00217000
THLICOMFLAGSB3 DS 0B     reserved for user                              00218000
THLICOMFLAGSU0 EQU X'80' reserved for user                              00219000
THLICOMFLAGSU1 EQU X'40' reserved for user                              00220000
THLICOMFLAGSU2 EQU X'20' reserved for user                              00221000
THLICOMFLAGSU3 EQU X'10' reserved for user                              00222000
THLICOMFLAGSU4 EQU X'08' reserved for user                              00223000
THLICOMFLAGSU5 EQU X'04' reserved for user                              00224000
THLICOMFLAGSU6 EQU X'02' reserved for user                              00225000
THLICOMFLAGSU7 EQU X'01' reserved for user                              00226000
         ORG   THLICOMFLAGSB3+1                                         00227000
THLICOMFLAGSB4 DS 0B                                                    00228000
THLIWILLFREEZEME EQU X'08' LE will issue FreezeMe for this task         00229000
THLIFROZEN EQU X'04'     BPX1PQG freeze request has been issued        *00230000
                         against the task                               00231000
THLISIGPOSTED EQU X'02'  User posted due to signal                      00232000
THLISIGWAIT EQU X'01'    User wants ECB posted when a signal will be   *00233000
                         delivered                                      00234000
         ORG   THLICOMFLAGS+4                                           00235000
THLIKEY  DS    CL1       PSW key of Thli control block. The key is in  *00236000
                         bits 0-3, bits 4-7 are zero                    00237000
THLIIP@LEN DS  X         Length in bytes of ThliIP                      00238000
THLIFLAGS2 DS  0B        Flag Byte                                      00239000
*                                                                       00240000
*      ***************************************************************  00241000
*      *                                                             *  00242000
*      * Specifying JOBNAME for APPLID is only used by MRPWD and     *  00243000
*      * PRSUI.                                                      *  00244000
*      *                                                             *  00245000
*      ***************************************************************  00246000
*                                                                       00247000
*                                                                       00248000
THLIF2_SETAPPL EQU X'80' Set RACROUTE APPL parm with JOBNAME            00249000
THLICVTON EQU  X'40'     Activates auto conversion for this thread      00250000
THLICVTOFF EQU X'20'     Deactivates auto conversion for this          *00251000
                         thread-both ThliCvton and ThliCvtOff should   *00252000
                         not be on                                      00253000
         ORG   THLIFLAGS2+1                                             00254000
THLIEXECPARMNUM DS X     Number of parms being passed in exec style    *00255000
                         parm list. Zero indicates either mvs style    *00256000
                         parm list or not exec                          00257000
THLITIMERECB DS 0F       ECB posted when timer pops from BPX1STE call   00258000
THLITIMERECBWAIT EQU X'80' ECB wait bit                                 00259000
THLITIMERECBPOST EQU X'40' ECB post bit                                 00260000
         DS    BL.030                                                   00261000
         ORG   THLITIMERECB+4                                           00262000
THLIASPIRBECB DS 0F      ECB posted when aio done                       00263000
THLIASPIRBWAIT EQU X'80' Wait bit                                       00264000
THLIASPIRBPOST EQU X'40' Post bit                                       00265000
         ORG   THLIASPIRBECB+4                                          00266000
THLIJAVA DS    A         JAVA thread control block address. *** DO NOT *00267000
                         MOVE this field *** Modified by assembler     *00268000
                         code in JAVA                                   00269000
THLIIP@  DS    CL16      IP@ stored by app left justified               00270000
THLITIMEOUT DS 0CL8      Kernel Time Out Service parameters             00271000
THLISECS DS    BL4       Seconds to wait for event                      00272000
THLINANOS DS   BL4       Nanoseconds to wait for event                  00273000
THLICCSID DS   H         Program character set Id for filesystem       *00274000
                         reads/writes                                   00275000
THLIAPPLIDLEN DS X       Len of string in ThliAppid ignored if 0 or >8  00276000
THLISRMFLAGS DS 0B       SRM flags Ownership: SRM                       00277000
THLIVCMOVERRIDE EQU X'80' This bit indicates that this unit of work    *00278000
                         should not follow the standard SRM management *00279000
                         in an VCM=on environment. Instead of trying   *00280000
                         to assign the work to the same affinity node  *00281000
                         for cache efficiency concerns, assign this    *00282000
                         work to any affinity node, ignore any cache   *00283000
                         concerns.                                      00284000
         ORG   THLISRMFLAGS+1                                           00285000
THLISHMDUMPPRIO DS X     Dump priority assigned to shared memory       *00286000
                         segment on next shmget() or shmat() call       00287000
         DS    CL3       Reserved                                       00288000
THLIWORKPTR64 DS CL8     -> To user work area specified on             *00289000
                         pthread_create                                 00290000
THLIUTOKENINFO DS 0CL8   Fork Hi Memory token                           00291000
THLIPARENTTKN DS CL4     parents IARV64 user token                      00292000
THLICHILDTKN DS CL4      token assigned to child                        00293000
THLIRETCODE DS F         Failing retcode from CPR                       00294000
THLIRSNCODE DS F         Failing rsncode from CPR                       00295000
THLIAPPLID DS  CL8       Applid passed for ptsec, and __passwd after   *00296000
                         ptsec                                          00297000
THLINFS  DS    A         Reserved for NFS                               00298000
THLIEP_FUNCTIONCODE DS F                                                00299000
THLIEXTENDEDPARMS DS 0CL24                                              00300000
         ORG   THLIEXTENDEDPARMS                                        00301000
THLIEXTENDEDPARMAREA DS 0CL24                                           00302000
         DS    CL24                                                     00303000
*                                                                       00304000
*                                                                       00305000
*      Add a substructure of 5 under the Main UNION for each            00306000
*      set of input parms  (each of these maps over the storage         00307000
*      defined as ThliExtendedParmArea).                                00308000
*      Since all the extended parms are mapped in the same area in      00309000
*      the Thli, it is the responsibility of the syscall using the      00310000
*      fields to clear them after use.  The contents of these THLI      00311000
*      fields cannot be expected to be retained across syscalls.        00312000
*                                                                       00313000
*                                                                       00314000
*                                                                       00315000
         ORG   THLIEXTENDEDPARMS                                        00316000
THLIEXTENDEDAPPLPARMS DS 0CL24 Entry parms                              00317000
THLIEP_APPLIDLEN DS X                                                   00318000
THLIEP_APPLID DS CL8                                                    00319000
         DS    CL15                                                     00320000
         ORG   THLIEXTENDEDPARMS                                        00321000
THLIEXTENDEDMRSMFPARMS DS 0CL24 BPX1SMF parms                           00322000
THLIEP_MRSMFFLAGS DS 0B                                                 00323000
THLIEP_MRSMFIEFU83 EQU X'80' If on for invokers of BPX1SMF, SMF is     *00324000
                         invoked to write the SMF record such that the *00325000
                         SMF record is given to installation exit      *00326000
                         IEFU83 rather than exit IEFU84                 00327000
         ORG   THLIEP_MRSMFFLAGS+1                                      00328000
         DS    CL23                                                     00329000
         ORG   THLIEXTENDEDPARMS                                        00330000
THLIEXTENDEDGIDNAME DS 0CL24 Output for GIDNameSet                      00331000
THLIEP_GIDNAMELEN DS F                                                  00332000
THLIEP_GIDNAME DS CL8                                                   00333000
THLIEP_GIDLEN DS F                                                      00334000
THLIEP_GID DS  F                                                        00335000
THLIEP_GROUPCOUNT DS F                                                  00336000
*                                                                       00337000
*   End of Extended parameter area declarations                         00338000
*                                                                       00339000
*                                                                       00340000
* ********************************************************************  00341000
* * The ThliSecErrDetail area provides detailed information for      *  00342000
* * select SAF service errors. This information is only provided when*  00343000
* * the syscall rv/rc/rs values are ambiguous and do not provide the *  00343100
* * user with enough information to determine the potential cause    *  00343200
* * of the error. Refer to the appropriate SAF service documentation *  00343300
* * to decode the RACF/SAF return codes.                             *  00343400
* ********************************************************************  00343500
*                                                                       00343600
*                                                                       00343700
THLISECERRDETAIL DS 0CL64                                               00343800
THLISECERRCT DS 0CL40    This level also maps the first 40 bytes of    *00343900
                         the ctrace SAF exception record, see the      *00344000
                         bpxtrace command for details                   00345000
THLISECSERVICENAME DS CL8 SAF serice name                               00346000
THLISECSERVICEQUAL DS CL8 REQ or function (when applicable)             00347000
THLISECSAFRC DS F        SAF return code                                00348000
THLISECRACFRC DS F       RACF return code                               00349000
THLISECRACFRS DS F       RACF reason code                               00350000
THLISECSCRV DS F         Syscall RV                                     00351000
THLISECSCRC DS F         Syscall RC                                     00352000
THLISECSCRS DS F         Syscall RS                                     00353000
THLISECERRNONCT DS F                                                    00354000
THLISECSYSCALL DS CL8    Syscall name                                   00355000
         DS    CL4       reserved (dword bdy)                           00356000
THLISECERRTOD DS CL8     Time of error (TOD)                            00357000
THLIPET       DS CL16    LE's Pause Element Token                       00358000
         DS    CL04      reserved                                       00359000
*                                                                       00360000
*                                                                       00361000
*     NOTE: The size of this control block is retrieved dynamically     00362000
*           during runtime by the modules that need it.                 00363000
*           When adding additional fields to this control block,        00364000
*                                                                       00365000
*     ====> THE ONLY MODULE THAT *MUST* BE RECOMPILED IS BPXPRIT        00366000
*                                                                       00367000
*                                                                       00368000
*                                                                       00369000
THLIEND  DS    0C        End of Thli                                    00370000
*                                                                       00371000
*   Extended parameter codes.                                           00372000
*                                                                       00373000
*                                                                       00374000
THLIEP_APPLSET EQU 1                                                    00375000
THLIEP_MRSMFFLAGSET EQU 2                                               00376000
*                                                                       00377000
*   GIDNameSet function code can be used for BPX1GGI and BPX1GGN to     00378000
*   bypass group list processing. Just the information mapped by        00379000
*   ThliExtendedGidName is returned.  GroupCount will always be         00380000
*   set to zero.                                                        00381000
*                                                                       00382000
*                                                                       00383000
THLIEP_GIDNAMESET EQU 3                                                 00384000
*                                                                       00385000
*   If a thread is PAUSE'd on a Pause Element Token represented by      00386000
*   ThliPET then the kernel can RELEASE that Pause Element with         00387000
*   one the following release codes:                                    00388000
*                                                                       00389000
THLI#PAUSESIGNAL  EQU 4 Catchable signal interrupted                    00390000
THLI#PAUSETIMEOUT EQU 8 Time expired from BPX1STE service               00391000
*                                                                       00391100
*                                                                       00391200
*                                                                       00391300
*                                                                       00391400
THLI#ID  EQU   C'THLI'   Control Block Acronym                          00391500
THLI#LEN EQU   236       Length of Thli                                 00391600
THLI#SP  EQU   230       Subpool for the Thli                           00391700
THLI_LEN EQU   *-THLI                                                   00391800
.L0002   ANOP                                                           00391900
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00392000
         AIF   ('&LIST' EQ 'YES').P4                                    00393000
.P3      ANOP                                                           00394000
         POP   PRINT                                                    00395000
.P4      ANOP                                                           00396000
.P_EXIT  ANOP                                                           00397000
         MEND                                                           00398000
**/ BPXYTHLI_2:;                                                        00399000
* %BPXYTHLI_INCLUDED = 'YES';                                           00400000
* %DCL ZCBPRINT CHAR EXT;                                               00401000
* %DEACTIVATE ZCBPRINT;                                                 00402000
* %DCL BPXYTHLI_LIST CHAR EXT;                                          00403000
* %DEACTIVATE BPXYTHLI_LIST;                                            00404000
* %IF BPXYTHLI_LIST ^= 'NO' &                                           00405000
*    ZCBPRINT ^= 'NO' %THEN                                             00406000
*   %GOTO BPXYTHLI_3;                                                   00407000
*   @LIST PUSH NOECHO;                                                  00408000
*   @LIST NOASSEMBLE NOECHO;                                            00409000
*   @LIST OFF C NOECHO;                                                 00410000
* %BPXYTHLI_3:;                                                         00411000
*/* Start of PL/X Source                                             */ 00412000
*                                                               @EJECT; 00413000
*%IF ThliBASE='' %THEN                                                  00414000
*  %DO;                                                                 00415000
*    %ThliBASE='BASED(OtcbThli)';                                       00416000
*  %END;                                                                00417000
*                                                                       00418000
*%IF AsaxmacP64 = ''                                          /* @D8A*/ 00419000
*   %Then %AsaxmacP64 = 'Char(8)';                            /* @D8A*/ 00420000
*%IF AsaxmacF64 = ''                                          /* @D8A*/ 00421000
*   %Then %AsaxmacF64 = 'Char(8)';                            /* @D8A*/ 00422000
*%IF AsaxmacF63 = ''                                          /* @D8A*/ 00423000
*   %Then %AsaxmacF63 = 'Char(8)';                            /* @D8A*/ 00424000
*                                                                       00425000
*   DECLARE                                                             00426000
*     1    Thli     ThliBASE Bdy(DWord),                      /* @D8C*/ 00427000
*       3    ThliID   Char(04),     /* EBCDIC ID - Thli              */ 00428000
*       3    ThliSP   Fixed(08),    /* Subpool number of this Thli   */ 00429000
*       3    ThliLEN  Fixed(24),    /* Length of this Thli           */ 00430000
*       3    Thliflags Abnormal Bit(32), /* Flag bits                */ 00431000
*        4    ThliFlagB1   Bit(8),                                      00432000
*         5    ThliSigPending Bit(01), /* Signal pending flag        */ 00433000
*         5    ThliCancelDisabled Bit(01), /* Cancel request type       00434000
*                                      0=enabled, 1=disabled         */ 00435000
*         5    ThliCancelPending Bit(01), /* Cancel pending for         00436000
*                                      thread                        */ 00437000
*         5    ThliCancelAsync Bit(01), /* Cancelation request state    00438000
*                                          0 = controlled, 1 = aysnc    00439000
*                                                                @P3A*/ 00440000
*         5    ThliIterateSIR  Bit(01), /* Use back door signal dlv     00441000
*                                      0 = Sir can exit                 00442000
*                                      1 = New sig in PPSD(Iterate Sir) 00443000
*                                                                @D1A*/ 00444000
*         5    ThliNoSig       Bit(01), /* Suppress signal generation   00445000
*                                          for this socket call. @01A*/ 00446000
*         5    ThliTimeOutSet  Bit(01), /* Kernel Time Out Service      00447000
*                                          requested             @D6A*/ 00448000
*         5    ThliTimerPopped Bit(01), /* Kernel Time Out Service      00449000
*                                          timer popped          @D6A*/ 00450000
*        4    ThliFlagB2   Bit(8),                                      00451000
*         5    ThliPTQtimeout  Bit(01), /* If on, invokers of the       00452000
*                                          BPX1PTQ call will recieve    00453000
*                                          EAGAIN/JRTimeOut if quiece   00454000
*                                          times oyt and all threads    00455000
*                                          are not quieced.      @P5A*/ 00456000
*         5    ThliFreezeStop  Bit(01), /* Thread has been frozen via   00457000
*                                          Status Stop           @P6A*/ 00458000
*         5    ThliDeferSignals Bit(01),/* Defer signals for user@D9A*/ 00459000
*         5    ThliPostAndDefer Bit(01),/* Post regardless of key       00460000
*                                          defer delivery until key     00461000
*                                          ok                    @P7A*/ 00462000
*         5    ThliTcbExitPerc  Bit(01),/* Set by application to allow  00463000
*                                          abends in tcbexits to perc   00464000
*                                          to Tcb                @03A*/ 00465000
*         5    ThliIrbNoRetry   Bit(01),/* Set by NSSIR to indicate     00466000
*                                          the calling IRB is not to    00467000
*                                          retry any abends      @03A*/ 00468000
*         5    ThliSigIrbAbend  Bit(01),/* Abend on sigkill regardless  00469000
*                                          of state              @DBA*/ 00470000
*         /* Use WorkPtr64 instead of WorkPtr when ThliUseWorkPtr64  */ 00471000
*         /* is ON.  Thread was pthread_created in 64 bit mode       */ 00472000
*         5    ThliUseWorkPtr64 Bit(01),                      /* @D8A*/ 00473000
*        4    ThliFlagB3   Bit(8),                                      00474000
*         5    ThliForkAcctg    Bit(01),/* Child accounting data based  00475000
*                                        on setuid identity      @DDA*/ 00476000
*         5    ThliPropAuth     Bit(01),/* Propagate JSCBAUTH to child  00477000
*                                          on fork               @DEA*/ 00478000
*         5    ThliUndubCallerOnly Bit(01),/* mvsprocclp should cleanup 00479000
*                                      caller's process only     @05A*/ 00480000
*         5    ThliAbnormalTerm Bit(01),/* LE will set this flag when   00481000
*                                      a pthread terms abnormally, the  00482000
*                                      kernel will propagate to         00483000
*                                      TCB_PThreadTermAbnormal, RRS     00484000
*                                      will use for backout logic.      00485000
*                                                                @07A*/ 00486000
*       3    ThliPpsd,              /* Address of Ppsd           @P1C*/ 00487000
*       3    ThliSigMask BIT(64),   /* Signal mask.  Primarliy set by   00488000
*                                      sigprocmask().                */ 00489000
*       3    ThliPrli    Ptr(31),   /* -> Prli. Process related         00489100
*                                      information                   */ 00489200
*       /* Use ThliWorkPtr64 if this thread was created via a        */ 00489300
*       /* pthread create done in amode 64                       @D8A*/ 00489400
*       3    ThliWorkPtr Ptr(31),   /* -> To user work area specified   00489500
*                                      on pthread_create             */ 00489600
*       3    ThliComEcb  Fixed(32), /* User communication ECB    @D2A*/ 00489700
*         5  ThliComEcbWait Bit(1), /* ECB wait bit              @D4A*/ 00489800
*         5  ThliComEcbPost Bit(1), /* ECB post bit              @D4A*/ 00489900
*       3    ThliComFlags Abnormal Bit(32), /* ECB control flags @D2A*/ 00490000
*         5   ThliComFlagsB1 Bit(8), /* reserved                 @D2A*/ 00491000
*         5   ThliComFlagsB2 Bit(8), /* reserved                 @D2A*/ 00492000
*         5   ThliComFlagsB3 Bit(8), /* reserved for user        @D2A*/ 00493000
*            7  ThliComFlagsU0 Bit(01), /* reserved for user     @D2A*/ 00494000
*            7  ThliComFlagsU1 Bit(01), /* reserved for user     @D2A*/ 00495000
*            7  ThliComFlagsU2 Bit(01), /* reserved for user     @D2A*/ 00496000
*            7  ThliComFlagsU3 Bit(01), /* reserved for user     @D2A*/ 00497000
*            7  ThliComFlagsU4 Bit(01), /* reserved for user     @D2A*/ 00498000
*            7  ThliComFlagsU5 Bit(01), /* reserved for user     @D2A*/ 00499000
*            7  ThliComFlagsU6 Bit(01), /* reserved for user     @D2A*/ 00500000
*            7  ThliComFlagsU7 Bit(01), /* reserved for user     @D2A*/ 00501000
*         5   ThliComFlagsB4 Bit(8), /*                          @D2A*/ 00502000
*            7  *           Bit(04), /* reserved                 @D9C*/ 00503000
*            7  ThliWillFreezeMe Bit(01), /* LE will issue FreezeMe     00504000
*                                       for this task            @DAA*/ 00505000
*            7  ThliFrozen  Bit(01), /* BPX1PQG freeze request has been 00506000
*                                       issued against the task  @DAA*/ 00507000
*            7  ThliSigPosted Bit(01), /* User posted due to            00508000
*                                       signal                   @D2A*/ 00509000
*            7  ThliSigWait Bit(01), /* User wants ECB posted when a    00510000
*                                       signal will be delivered @D2A*/ 00511000
*       3    ThliKey Char(1),       /* PSW key of Thli control block.   00512000
*                                      The key is in bits 0-3, bits 4-7 00513000
*                                      are zero                  @P2A*/ 00514000
*       3    ThliIP@Len Fixed(8),  /* Length in bytes of ThliIP@ @P4A*/ 00515000
*       3    ThliFlags2      Bit(8),  /* Flag Byte               @02A*/ 00516000
*          /* Specifying JOBNAME for APPLID is only used by          */ 00517000
*          /* MRPWD and PRSUI.                                       */ 00518000
*          5  ThliF2_SetAppl Bit(1),  /*  Set RACROUTE APPL parm @02A*/ 00519000
*                                     /*   with JOBNAME          @02A*/ 00520000
*          5  ThliCvtOn Bit,          /* Activates auto conversion      00521000
*                                        for this thread         @D7A*/ 00522000
*          5  ThliCvtOff Bit,         /* Deactivates auto conversion    00523000
*                                        for this thread-both ThliCvton 00524000
*                                        and ThliCvtOff should not be   00525000
*                                        on                      @D7A*/ 00526000
*       3    ThliExecParmNum Fixed(8), /* Number of parms being passed  00527000
*                                        in exec style parm list. Zero  00528000
*                                        indicates either mvs style     00529000
*                                        parm list or not exec   @P8C*/ 00530000
*       3    ThliTimerEcb Fixed(32), /* ECB posted when timer pops      00531000
*                                       from BPX1STE call        @D3A*/ 00532000
*         5  ThliTimerEcbWait Bit(1), /* ECB wait bit            @D3A*/ 00533000
*         5  ThliTimerEcbPost Bit(1), /* ECB post bit            @D3A*/ 00534000
*         5  * Bit(30),                                      /*  @D3A*/ 00535000
*       3    ThliAspIrbEcb fixed(32),/* ECB posted when aio done @D4A*/ 00536000
*         5 ThliAspIrbWait      Bit(1),     /* Wait bit          @D4A*/ 00537000
*         5 ThliAspIrbPost      Bit(1),     /* Post bit          @D4A*/ 00538000
*                                                                       00538103
*       /*************************************************************/ 00538203
*       /*  JAVA no longer uses the ThliJava field.  The last time   */ 00538303
*       /*  it was used was in z/OS 1.12 (Java 1.4.2)       3/9/2016 */ 00538403
*       /*************************************************************/ 00538503
*       3    ThliJava    Ptr(31),   /* JAVA thread control block        00539000
*                                      address.                         00540000
*                                      *** DO NOT MOVE this field ***   00541000
*                                      Modified by assembler code       00542000
*                                      in JAVA                   @D5A*/ 00543000
*       3    ThliIP@ Char(16),      /* IP@ stored by app left justified 00544000
*                                                                @P4A*/ 00545000
*       3 ThliTimeOut  Char(8),     /* Kernel Time Out Service          00546000
*                                      parameters                @D6A*/ 00547000
*          5 ThliSecs  Bit(32),     /* Seconds to wait for event @D6A*/ 00548000
*          5 ThliNanos Bit(32),     /* Nanoseconds to wait for event    00549000
*                                                                @D6A*/ 00550000
*       3 ThliCcsid    Fixed(16),   /* Program character set Id for     00551000
*                                      filesystem reads/writes   @D7A*/ 00552000
*       3 ThliApplidLen Fixed(8),  /* Len of string in ThliAppid        00553000
*                                     ignored if 0 or >8         @04A*/ 00554000
*       3 ThliSRMFlags Bit(8),      /* SRM flags                        00555000
*                                      Ownership: SRM            @DGA*/ 00556000
*          5 ThliVCMOverRide Bit(1),/* This bit indicates that this     00557000
*                                      unit of work should not follow   00558000
*                                      the standard SRM management in   00559000
*                                      an VCM=on environment.           00560000
*                                      Instead of trying to assign the  00561000
*                                      work to the same affinity node   00562000
*                                      for cache efficiency concerns,   00563000
*                                      assign this work to any affinity 00564000
*                                      node, ignore any cache concerns. 00565000
*                                                                @DGA*/ 00566000
*       3 ThliShmDumpPrio Fixed(8), /* Dump priority assigned to        00567000
*                                      shared memory segment on next    00568000
*                                      shmget() or shmat() call  @DHA*/ 00569000
*       3 *            Char(3),     /* Reserved                  @DHC*/ 00570000
*       3 ThliWorkPtr64  AsaxmacP64 Bdy(DWord), /* -> To user work area 00571000
*                                   specified on pthread_create  @D8A*/ 00572000
*       3 ThliUtokenInfo Char(8),   /* Fork Hi Memory token      @D9A*/ 00573000
*         5 ThliParentTkn Char(4),  /* parents IARV64 user token @D9A*/ 00574000
*         5 ThliChildTkn  Char(4),  /* token assigned to child   @D9C*/ 00575000
*       3 ThliRetCode  Fixed(32),   /* Failing retcode from CPR  @DFA*/ 00576000
*       3 ThliRsnCode  Fixed(32),   /* Failing rsncode from CPR  @DFA*/ 00577000
*       3 ThliApplid       Char(8), /* Applid passed for ptsec,  @04A*/ 00578000
*                                   /* and __passwd after ptsec  @DIC*/ 00579000
*       3 ThliNFS      Ptr(31),     /* Reserved for NFS          @DKC*/ 00580000
*       3 ThliEP_FunctionCode   Fixed(31),                              00581000
*       3 ThliExtendedParms  Union,                                     00582000
*         5 ThliExtendedParmArea,                                       00583000
*           7 *               Char(24) Bdy(Dword),                      00584000
*/*                                                                  */ 00585000
*/*    Add a substructure of 5 under the Main UNION for each         */ 00586000
*/*    set of input parms  (each of these maps over the storage      */ 00587000
*/*    defined as ThliExtendedParmArea).                             */ 00588000
*/*    Since all the extended parms are mapped in the same area in   */ 00589000
*/*    the Thli, it is the responsibility of the syscall using the   */ 00590000
*/*    fields to clear them after use.  The contents of these THLI   */ 00591000
*/*    fields cannot be expected to be retained across syscalls.     */ 00592000
*/*                                                                  */ 00593000
*         5 ThliExtendedApplParms,    /* Entry parms                 */ 00594000
*           7 ThliEP_ApplidLen     Fixed(8),                            00595000
*           7 ThliEP_Applid        Char(8),                             00596000
*           7 *                    Char(15),                            00597000
*         5 ThliExtendedMrSMFParms, /* BPX1SMF parms             @DKA*/ 00598000
*           7 ThliEP_MrSMFFlags    Bit(8),                    /* @DKA*/ 00599000
*             9 ThliEP_MrSMFIEFU83 Bit(01), /* If on for invokers of    00600000
*                                      BPX1SMF, SMF is invoked to       00601000
*                                      write the SMF record such that   00602000
*                                      the SMF record is given          00603000
*                                      to installation exit IEFU83      00604000
*                                      rather than exit IEFU84   @DKA*/ 00605000
*             9 *                  Bit(7),                    /* @DKA*/ 00606000
*           7 *                    Char(23),                  /* @DKA*/ 00607000
*         5 ThliExtendedGIDName,      /* Output for GIDNameSet   @06A*/ 00608000
*           7 ThliEP_GIDNameLen    Fixed(31),                           00609000
*           7 ThliEP_GIDName       Char(8),                             00610000
*           7 ThliEP_GIDLen        Fixed(31),                           00611000
*           7 ThliEP_GID           Fixed(31),                           00612000
*           7 ThliEP_GroupCount    Fixed(31),                           00613000
*/* End of Extended parameter area declarations                  @04A*/ 00614000
*/*                                                                  */ 00615000
*/*                                                                  */ 00616000
*/********************************************************************/ 00617000
*/* The ThliSecErrDetail area provides detailed information for      */ 00618000
*/* select SAF service errors. This information is only provided when*/ 00619000
*/* the syscall rv/rc/rs values are ambiguous and do not provide the */ 00619100
*/* user with enough information to determine the potential cause    */ 00619200
*/* of the error. Refer to the appropriate SAF service documentation */ 00619300
*/* to decode the RACF/SAF return codes.                             */ 00619400
*/********************************************************************/ 00619500
*       3 ThliSecErrDetail,                                   /* @DJA*/ 00619600
*        5 ThliSecErrCT,  /* This level also maps the first 40 bytes    00619700
*                            of the ctrace SAF exception record, see    00619800
*                            the bpxtrace command for details    @DJA*/ 00619900
*         7 ThliSecServiceName Char(8), /* SAF serice name       @DJA*/ 00620000
*         7 ThliSecServiceQual Char(8), /* REQ or function (when        00621000
*                                          applicable)           @DJA*/ 00622000
*         7 ThliSecSafRC   Fixed(32), /* SAF return code         @DJA*/ 00623000
*         7 ThliSecRacfRC  Fixed(32), /* RACF return code        @DJA*/ 00624000
*         7 ThliSecRacfRS  Fixed(32), /* RACF reason code        @DJA*/ 00625000
*         7 ThliSecScRv    Fixed(31), /* Syscall RV              @DJA*/ 00626000
*         7 ThliSecScRc    Fixed(32), /* Syscall RC              @DJA*/ 00627000
*         7 ThliSecScRs    Fixed(32), /* Syscall RS              @DJA*/ 00628000
*        5 ThliSecErrNonCT,                                   /* @DJA*/ 00629000
*         5 ThliSecSyscall Char(8),     /* Syscall name          @DJA*/ 00630000
*         5 *              Char(4),     /* reserved (dword bdy)  @DJA*/ 00631000
*         5 ThliSecErrTOD  Char(8) Bdy(Dword), /* Time of error (TOD)   00632000
*                                                                @DJA*/ 00633000
*       3 ThliPET Char(16),           /* Pause Element Token            00634000
*                                        to be used by LE during        00635000
*                                        condwait() processing   @DLA*/ 00636000
*       /*************************************************************/ 00637000
*       /* This information is supplied by the pre-syscall exit      */ 00638000
*       /* routine that disallowed the syscall. Refer to the         */ 00639000
*       /* documentation for the product that did not allowed the    */ 00640000
*       /* syscall for an explanation why it was not allowed.        */ 00641002
*       /*                                                       @DMA*/ 00642000
*       /*************************************************************/ 00643000
*       3 ThliRejectSCXInfo,                                  /* @DMA*/ 00644000
*        4 ThliRejectSCXProduct    Char(16),                  /* @DMA*/ 00645000
*        4 ThliRejectSCXReturnCode Fixed(32),                 /* @DMA*/ 00645100
*        4 ThliRejectSCXReasonCode Fixed(32),                 /* @DMA*/ 00645200
*       3 *                  Char(32), /* reserved               @DMC*/ 00645300
*  /*                                                                */ 00645400
*  /* NOTE: The size of this control block is retrieved dynamically  */ 00645500
*  /*       during runtime by the modules that need it.              */ 00645600
*  /*       When adding additional fields to this control block,     */ 00645700
*  /*                                                                */ 00645800
*  /* ====> THE ONLY MODULE THAT *MUST* BE RECOMPILED IS BPXPRIT @DCA*/ 00645900
*  /*                                                                */ 00646000
*       3    ThliEnd  Bdy(Word) Char(0); /* End of Thli              */ 00647000
*                                                                       00648000
*/* Extended parameter codes.                                        */ 00649000
*                                                                       00650000
* Dcl ThliEP_ApplSet     Fixed(31) Constant(1);                         00651000
* Dcl ThliEP_MrSMFFlagSet Fixed(31) Constant(2);              /* @DKA*/ 00652000
*/* GIDNameSet function code can be used for BPX1GGI and BPX1GGN to  */ 00653000
*/* bypass group list processing. Just the information mapped by     */ 00654000
*/* ThliExtendedGidName is returned.  GroupCount will always be      */ 00655000
*/* set to zero.                                                 @06A*/ 00656000
* Dcl ThliEP_GIDNameSet  Fixed(31) Constant(3);               /* @06A*/ 00657000
* Dcl                                                                   00658000
*   Thli#PauseSignal Bit(24) Constant('000004'x), /* Pause Element      00659000
*                                     represented by ThliPET was        00660000
*                                     RELEASE'd due to a signal. @DLA*/ 00661000
*   Thli#PauseTimeout Bit(24) Constant('000008'x); /* Pause Element     00662000
*                                     represented by ThliPET was        00662100
*                                     RELEASE'd due to a timeout.@DLA*/ 00662200
*/*                                                                  */ 00662300
*   DECLARE                                                             00662400
*     Thli#ID  Char(4) Constant('THLI'), /* Control Block Acronym    */ 00662500
*     Thli#Len Fixed(16) Constant(LENGTH(Thli)), /* Length of Thli   */ 00662600
*     Thli#SP  Fixed(31) Constant(230); /* Subpool for the Thli      */ 00662700
*/*  End of ParmCode declares                                        */ 00662800
*/* End of PL/X Source                                               */ 00662900
* %IF BPXYTHLI_LIST ^= 'NO' &                                           00663000
*    ZCBPRINT ^= 'NO' %THEN                                             00664000
*   %GOTO BPXYTHLI_4;                                                   00665000
*   @LIST POP NOECHO;                                                   00666000
* %BPXYTHLI_4:;                                                         00667000
* %END;                                                                 00668000
