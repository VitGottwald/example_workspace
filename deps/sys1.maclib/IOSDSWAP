*                                                                       00001000
* %DCL IOSDSWAP_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IOSDSWAP_INCLUDED;                                        00003000
* %IF IOSDSWAP_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 12164. CBGEN compile date 11090         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IOSDSWAP &DSECT=YES,&LIST=YES,&TITLE=YES,&Swap=YES,           *00009000
               &SwapList=COND                                           00010000
                      GBLC  &IOSDSWAP_INCLUDED                          00011000
                      GBLC  &ZCBPRINT                                   00012000
&IOSDSWAP_INCLUDED    SETC  'YES'                                       00013000
                      AIF   ('&LIST' EQ 'NONE').P0                      00014000
                      AIF   ('&TITLE' EQ 'NO').P5                       00015000
 TITLE                'IOSDSWAP  - IOS Swap Parameter List             *00016000
                         '                                              00017000
.P5                   ANOP                                              00018000
**/ IOSDSWAP_1:;                                                        00019000
*/*** START OF SPECIFICATIONS ****************************************  00020000
*                                                                    *  00021000
*01* Macro Name: IOSDSWAP                                            *  00022000
*                                                                    *  00023000
*01* Descriptive Name: IOS Swap Parameter List                       *  00024000
*                                                                    *  00025000
*02*  Acronym: SWAP                                                  *  00026000
*                                                                    *  00027000
*02*  Dsect Name: SWAP                                               *  00028000
*                                                                    *  00029000
*01* Proprietary Statement                                           *  00030000
*    Licensed Materials - Property of IBM                            *  00031000
*    5647-A01 Copyright IBM Corp. 1999,2007                      @P1C*  00032000
*                                                                    *  00033000
*01* Status: HBB7740                                             @P1C*  00034000
*                                                                    *  00035000
*01* Component: I/O Supervisor (SC1C3)                               *  00036000
*                                                                    *  00037000
*01* Function:                                                       *  00038000
*       This mapping is used as input to IOSVSWAP and UCBSWAP in     *  00039000
*       order to allow a list of device pairs to be swapped.         *  00040000
*                                                                    *  00041000
*02*  Notes:                                                     @01A*  00042000
*     - In order to distinguish the use of this mapping vs. the      *  00043000
*       register only interface to IOSVSWAP, the high order bit      *  00044000
*       of register 1, which contains the address of the Swap        *  00045000
*       Parameter List, must be set to 1 when calling IOSVSWAP       *  00046000
*       (i.e., Reg1 = the Swap Parameter List address OR'd           *  00047000
*       with x'80000000).                                        @01A*  00048000
*                                                                    *  00049000
*     - UCBSWAP is for IOS use only and is not part of the           *  00050000
*       programming interface.                                       *  00051000
*                                                                    *  00052000
*01* Eye-Catcher: SWAP                                               *  00053000
*02*  Offset: 0                                                      *  00054000
*02*  Length: 4                                                      *  00055000
*                                                                    *  00056000
*01* Created By: Callers of IOSVSWAP and users of UCBSWAP            *  00057000
*                                                                    *  00058000
*01* Deleted By: Callers of IOSVSWAP and users of UCBSWAP            *  00059000
*                                                                    *  00060000
*01* Pointed To By: n/a                                              *  00061000
*                                                                    *  00062000
*01* SIZE: One SWAP DSECT plus one SWAPLIST DSECT per device pair    *  00063000
*            Swap     -- X'0010' bytes                               *  00064000
*            SwapList -- X'0010' bytes                               *  00065000
*                                                                    *  00066000
*01* Module Type: Mapping macro                                      *  00067000
*                                                                    *  00068000
*01* Method Of Access:                                               *  00069000
*                                                                    *  00070000
*02*  ASM:                                                           *  00071000
*      IOSDSWAP                                                      *  00072000
*           DSECT=YES!NO         -- Request DSECT definition         *  00073000
*           SWAP=YES!NO!COND     -- Area header (USING on SWAP)      *  00074000
*           SWAPLIST=YES!NO!COND -- Device pair entry (USING on      *  00075000
*                                   SWAPLIST)                        *  00076000
*     Default: DSECT=YES,SWAP=YES,SWAPLIST=COND                      *  00077000
*     Notes: name=YES  => expand                                     *  00078000
*            name=NO   => do not expand                              *  00079000
*            name=COND => expand only if DSECT=YES                   *  00080000
*                                                                    *  00081000
*     PL/X: %Dcl SwapBase Char Ext                                   *  00082000
*           %SwapBase=value                                          *  00083000
*             value = basing expression                              *  00084000
*                     Default=BASED                                  *  00085000
*           %Include Syslib(IosDSwap)                                *  00086000
*                                                                    *  00087000
*01* Dependencies:  See Function notes                               *  00088000
*                                                                    *  00089000
*01* Serialization: None                                             *  00090000
*                                                                    *  00091000
*01* Restrictions: None                                              *  00092000
*                                                                    *  00093000
*01* Storage Attributes:                                             *  00094000
*02*  Subpool: Any fixed storage subpool                         @01C*  00095000
*02*  Key: 0                                                         *  00096000
*02*  Dataspace: n/a                                                 *  00097000
*02*  Residency: Fixed storage                                       *  00098000
*02*  Frequency: One per call to IOSVSWAP or UCBSWAP                 *  00099000
*                                                                    *  00100000
*01* Distribution Library (DLIB): AMACLIB                        @01C*  00101000
*                                                                    *  00102000
*01* External Classification: PI                                 @01C*  00103000
*01* End of External Classification:                                 *  00104000
*                                                                    *  00105000
*01* Change Activity:                                                *  00106000
*                                                                    *  00107000
* Flag Item     FMID    Date   ID      Comment                       *  00108000
* ---- -------- ------- ------ ----    ----------------------------- *  00109000
* $L0  OW55532  HBB7703 020930 PDLZ    Hyperswap support             *  00110000
* $P1  ME01793  HBB7740 070315 PDNO    Add Return and Reason code    *  00111000
*                                      constants                 @P1A*  00112000
* $01  OA27065  HBB7750 090515 PDNO    Allow vendors to bypass       *  00113000
*                                      queued MSCH checks.           *  00114000
*                                      NOTE: Made Bi-Lingual and     *  00115000
*                                      moved to AMACLIB          @01A*  00116000
* $02  OA34008  HBB7750 100930 PDNO    Add failing reason for the    *  00117000
*                                      case where the devices ULUT   *  00118000
*                                      entries could not be found    *  00119000
*                                                                @02A*  00120000
* $03  OA32240  HBB7750 120330 PDNO    Allow MIDAW consistency       *  00121000
*                                      checking to be bypassed   @03A*  00122000
*                                                                    *  00123000
**** END OF SPECIFICATIONS *******************************************/ 00124000
*% /*                                                                   00125000
.P0                   ANOP                                              00126000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00127000
                      AIF   ('&LIST' EQ 'YES').P2                       00128000
.P1                   ANOP                                              00129000
                      PUSH  PRINT                                       00130000
                      PRINT OFF                                         00131000
.P2                   ANOP                                              00132000
                      AIF   ('&Swap' EQ 'NO').L0002                     00133000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00134000
                      AIF   ('&Swap' NE 'YES').L0002                    00135000
Swap                  DS    0F     SWAP parameter list mapping          00136000
                      AGO   .L0004                                      00137000
.L0003                ANOP                                              00138000
Swap                  DSECT        SWAP parameter list mapping          00139000
.L0004                ANOP                                              00140000
SwapId                DS    CL4    Swap identifier "SWAP"               00141000
SwapVersion           DS    X      Version number                       00142000
SwapFlags             DS    CL1    Flags                                00143000
*  Bit definitions:                                                     00144000
SwapBypassAllocTables EQU   X'80'  Indicates that IOSVSWAP should      *00145000
                                   bypass swapping the allocation      *00146000
                                   tables                               00147000
SwapBypassQueuedMSCHChecks EQU X'40' Indicates that IOSVSWAP should    *00148000
                                   bypass queued MSCH checking for all *00149000
                                   devices in the SwapList. This       *00150000
                                   avoids a queued modify from causing *00151000
                                   IOSVSWAP to fail                     00152000
SwapBypassMidawChecks EQU   X'20'  Indicates that IOSVSWAP should      *00153000
                                   bypass MIDAW consistency checking   *00154000
                                   for all devices in the SwapList.    *00155000
                                   Note: This bit is for IOS use only   00156000
                      DS    CL2    Available                            00157000
SwapListCounter       DS    F      Count of device pairs to swap        00158000
SwapListAddress       DS    A      Address of device pair list          00159000
SwapEnd               DS    0C     End of table                         00160000
*                                                                       00161000
* ********************************************************************  00162000
* * Constants - Header Information                                   *  00163000
* ********************************************************************  00164000
*                                                                       00165000
*                                                                       00166000
Swap_Version          EQU   0      Current version constant             00167000
Swap_Identifer        EQU   C'SWAP' Swap Id                             00168000
Swap_Len              EQU   *-Swap                                      00169000
.L0002                ANOP                                              00170000
                      AIF   ('&SwapList' EQ 'NO').L0005                 00171000
                      AIF   ('&DSECT' EQ 'YES').L0006                   00172000
                      AIF   ('&SwapList' NE 'YES').L0005                00173000
.L0006                ANOP                                              00174000
*                                                                       00175000
* ********************************************************************  00176000
* * SwapList - Device pair list                                      *  00177000
* ********************************************************************  00178000
*                                                                       00179000
*                                                                       00180000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00181000
SwapList              DS    0F     Swap device pair list                00182000
                      AGO   .L0008                                      00183000
.L0007                ANOP                                              00184000
SwapList              DSECT        Swap device pair list                00185000
.L0008                ANOP                                              00186000
SwapFromUcb           DS    A      From device actual UCB addr          00187000
SwapToUcb             DS    A      To device actual UCB addr            00188000
SwapWorkArea          DS    CL4    Workarea for caller                  00189000
SwapEntryResult       DS    CL4    Results                              00190000
                      ORG   SwapEntryResult                             00191000
SwapEntryRsn          DS    H      Reason code for device pair          00192000
SwapEntryRc           DS    H      Return code for device pair          00193000
*                                                                       00194000
* ********************************************************************  00195000
* * Constants - IOSVSWAP Return Codes                                *  00196000
* ********************************************************************  00197000
*                                                                       00198000
*                                                                       00199000
Swap_RcSuccess        EQU   0      Swap successful                      00200000
Swap_RcFailed         EQU   4      Swap failed                          00201000
*                                                                       00202000
* ********************************************************************  00203000
* * Constants - IOSVSWAP Reason Codes                                *  00204000
* ********************************************************************  00205000
*                                                                       00206000
*                                                                       00207000
Swap_RsnFromDisableFailed1 EQU 2   The attempt to disable the FROM     *00208000
                                   device failed. This reason code is  *00209000
                                   used when the device is not boxed.   00210000
Swap_RsnFromDisableFailed2 EQU 3   The attempt to disable the FROM     *00211000
                                   device failed. This reason code is  *00212000
                                   used when the device is boxed and   *00213000
                                   either disabled or hot               00214000
Swap_RsnToDisableFailed EQU 4      The attempt to disable the TO       *00215000
                                   device failed.                       00216000
Swap_RsnToDisabled    EQU   5      The TO device was already in the    *00217000
                                   disabled state.                      00218000
Swap_RsnFromHasQueuedMSCH EQU 6    The FROM device had a modify        *00219000
                                   subchannel request queued            00220000
Swap_RsnToHasQueuedMSCH EQU 7      The TO device had a modify          *00221000
                                   subchannel request queued            00222000
Swap_RsnMIDAWIncompatible EQU 8    The MIDAW capabilities of the FROM  *00223000
                                   and TO device are different          00224000
Swap_RsnULUTEntryNotFound EQU 9    The ULUT entry was not successfully *00225000
                                   found for one or both of the        *00226000
                                   devices being swapped                00227000
SwapList_Len          EQU   *-SwapList                                  00228000
.L0005                ANOP                                              00229000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00230000
                      AIF   ('&LIST' EQ 'YES').P4                       00231000
.P3                   ANOP                                              00232000
                      POP   PRINT                                       00233000
.P4                   ANOP                                              00234000
.P_EXIT               ANOP                                              00235000
                      MEND                                              00236000
**/ IOSDSWAP_2:;                                                        00237000
* %IOSDSWAP_INCLUDED = 'YES';                                           00238000
* %DCL ZCBPRINT CHAR EXT;                                               00239000
* %DEACTIVATE ZCBPRINT;                                                 00240000
* %DCL IOSDSWAP_LIST CHAR EXT;                                          00241000
* %DEACTIVATE IOSDSWAP_LIST;                                            00242000
* %IF IOSDSWAP_LIST ^= 'NO' &                                           00243000
*    ZCBPRINT ^= 'NO' %THEN                                             00244000
*   %GOTO IOSDSWAP_3;                                                   00245000
*   @LIST PUSH NOECHO;                                                  00246000
*   @LIST NOASSEMBLE NOECHO;                                            00247000
*   @LIST OFF C NOECHO;                                                 00248000
* %IOSDSWAP_3:;                                                         00249000
*/* Start of PL/X Source                                             */ 00250000
*%If SwapBase = '' %Then %SwapBase = 'BASED';                           00251000
*Dcl 1 Swap Bdy(Word) SwapBase,     /* SWAP parameter list mapping   */ 00252000
*      3 SwapId       Char(4),      /* Swap identifier "SWAP"        */ 00253000
*      3 SwapVersion  Fixed(8),     /* Version number                */ 00254000
*      3 SwapFlags    Char(1),      /* Flags                         */ 00255000
*        5 SwapBypassAllocTables Bit(1), /* Indicates that IOSVSWAP     00256000
*                                      should bypass swapping the       00257000
*                                      allocation tables             */ 00258000
*        5 SwapBypassQueuedMSCHChecks Bit(1), /* Indicates that         00259000
*                                      IOSVSWAP should bypass queued    00260000
*                                      MSCH checking for all devices    00261000
*                                      in the SwapList.  This avoids    00262000
*                                      a queued modify from causing     00263000
*                                      IOSVSWAP to fail          @01A*/ 00264000
*        5 SwapBypassMidawChecks Bit(1), /* Indicates that IOSVSWAP     00265000
*                                      should bypass MIDAW consistency  00266000
*                                      checking for all devices in      00267000
*                                      the SwapList.  Note: This bit    00268000
*                                      is for IOS use only       @03A*/ 00269000
*        5 * Bit(5),                /* Available                 @03C*/ 00270000
*      3 *            Char(2),      /* Available                     */ 00271000
*      3 SwapListCounter Fixed(31), /* Count of device pairs to swap */ 00272000
*      3 SwapListAddress Ptr(31),   /* Address of device pair list   */ 00273000
*      3 SwapEnd Char(0) Bdy(Word); /* End of table                  */ 00274000
*/********************************************************************/ 00275000
*/* Constants - Header Information                                   */ 00276000
*/********************************************************************/ 00277000
*Dcl Swap_Version Fixed(8) Constant(0); /* Current version constant  */ 00278000
*Dcl Swap_Identifer Char(4) Constant('SWAP'); /* Swap Id             */ 00279000
*/********************************************************************/ 00280000
*/* SwapList - Device pair list                                      */ 00281000
*/********************************************************************/ 00282000
*Dcl 1 SwapList(*) Bdy(Word) Based(SwapListAddress), /* Swap device     00283000
*                                      pair list                     */ 00284000
*      3 SwapFromUcb  Ptr(31),      /* From device actual UCB addr   */ 00285000
*      3 SwapToUcb    Ptr(31),      /* To device actual UCB addr     */ 00286000
*      3 SwapWorkArea Char(4),      /* Workarea for caller           */ 00287000
*      3 SwapEntryResult,           /* Results                       */ 00288000
*        5 SwapEntryRsn Fixed(16),  /* Reason code for device pair   */ 00289000
*        5 SwapEntryRc  Fixed(16);  /* Return code for device pair   */ 00290000
*/********************************************************************/ 00291000
*/* Constants - IOSVSWAP Return Codes                                */ 00292000
*/********************************************************************/ 00293000
*Dcl Swap_RcSuccess Fixed(16) Constant(0); /* Swap successful    @P1A*/ 00294000
*Dcl Swap_RcFailed  Fixed(16) Constant(4); /* Swap failed        @P1A*/ 00295000
*/********************************************************************/ 00296000
*/* Constants - IOSVSWAP Reason Codes                                */ 00297000
*/********************************************************************/ 00298000
*Dcl Swap_RsnFromDisableFailed1 Fixed(16) Constant(2); /* The attempt   00299000
*                                      to disable the FROM device       00300000
*                                      failed.  This reason code        00301000
*                                      is used when the device          00302000
*                                      is not boxed.             @P1A*/ 00303000
*Dcl Swap_RsnFromDisableFailed2 Fixed(16) Constant(3); /* The attempt   00304000
*                                      to disable the FROM device       00305000
*                                      failed.  This reason code        00306000
*                                      is used when the device is       00307000
*                                      boxed and either disabled        00308000
*                                      or hot                    @P1A*/ 00309000
*Dcl Swap_RsnToDisableFailed Fixed(16) Constant(4); /* The attempt      00310000
*                                      to disable the TO device         00311000
*                                      failed.                   @P1A*/ 00312000
*Dcl Swap_RsnToDisabled Fixed(16) Constant(5); /* The TO device         00313000
*                                      was already in the disabled      00314000
*                                      state.                    @P1A*/ 00315000
*Dcl Swap_RsnFromHasQueuedMSCH Fixed(16) Constant(6); /* The FROM       00316000
*                                      device had a modify subchannel   00317000
*                                      request queued            @P1A*/ 00318000
*Dcl Swap_RsnToHasQueuedMSCH Fixed(16) Constant(7); /* The TO device    00319000
*                                      had a modify subchannel request  00320000
*                                      queued                    @P1A*/ 00321000
*Dcl Swap_RsnMIDAWIncompatible Fixed(16) Constant(8); /* The MIDAW      00322000
*                                      capabilities of the FROM and     00323000
*                                      TO device are different   @P1A*/ 00324000
*Dcl Swap_RsnULUTEntryNotFound Fixed(16) Constant(9); /* The ULUT       00325000
*                                      entry was not successfully       00326000
*                                      found for one or both of the     00327000
*                                      devices being swapped     @02A*/ 00328000
* @logic;                                                               00329000
* #pragma tool=cbgen.                                                   00330000
* #USEORG.                                                              00331000
* #ALIGNOP.                                                             00332000
* #NOTUPPER.                                                            00333000
* #epragma.                                                             00334000
* @endlogic;                                                            00335000
*/* End of PL/X Source                                               */ 00336000
* %IF IOSDSWAP_LIST ^= 'NO' &                                           00337000
*    ZCBPRINT ^= 'NO' %THEN                                             00338000
*   %GOTO IOSDSWAP_4;                                                   00339000
*   @LIST POP NOECHO;                                                   00340000
* %IOSDSWAP_4:;                                                         00341000
* %END;                                                                 00342000
