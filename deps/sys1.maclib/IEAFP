*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEAFP                                 -06/17/16-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Floating Point Services                       * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1998, 2017                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77B0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IEAFP STOP allows you to request that, for your work unit, the * 00002100
*      system stop its status saving of the additional floating point * 00002200
*      status provided with the binary floating point architecture.   * 00002300
*      This status consists of the additional floating point (AFP)    * 00002400
*      registers - FPRs 1,3,5,7-15 and the floating point control     * 00002500
*      (FPC) register.  It will also stop its saving of the vector    * 00002600
*      register status.                                               * 00002700
*                                                                     * 00002800
*      You would typically use this service only when you are a       * 00002900
*      server task which "subdispatches" unrelated units of work      * 00003000
*      (e.g., CICS transactions).  To avoid subsequent units of work  * 00003100
*      being penalized by the floating point actions of previous      * 00003200
*      units of work, the additional FP status saving function of the * 00003300
*      operating system can be turned off.  When a unit of work       * 00003400
*      actually begins to use FP, all appropriate status saving will  * 00003500
*      be resumed.                                                    * 00003600
*                                                                     * 00003700
*      IEAFP START allows you to request that, for your work unit,    * 00003800
*      the system prepare for subsequent saving of vector register    * 00003900
*      status.  You would typically use this if your work unit is an  * 00004000
*      SRB or (for a task) if your first usage of vector registers    * 00004100
*      might be while disabled for I/O and external interrupts or     * 00004200
*      while holding a lock other than the LOCAL lock.                * 00004300
*                                                                     * 00004400
*      IEAFP STOPVECTOR is similar to IEAFP STOP but affects only the * 00004500
*      vector register status saving. It leaves unchanged the         * 00004600
*      floating point register status saving                          * 00004700
*                                                                     * 00004800
*01* EXTERNAL CLASSIFICATION:                                         * 00004900
*                                                                     * 00005000
*02* GUPI: BASE                                                       * 00005100
*                                                                     * 00005200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005300
*                                                                     * 00005400
*01* ENVIRONMENT:                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*      Minimum authorization:                                         * 00005800
*                                                                     * 00005900
*                        The minimum authority for IEAFP is problem   * 00006000
*                        state and PSW key 8-15.                      * 00006100
*                                                                     * 00006200
*      Dispatchable unit mode: Task or SRB mode.                      * 00006300
*                                                                     * 00006400
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00006500
*                                                                     * 00006600
*      AMODE:            31-bit.                                      * 00006700
*                                                                     * 00006800
*      ASC mode:         Primary or Access Register.                  * 00006900
*                                                                     * 00007000
*      Interrupt status: Enabled or disabled for I/O and external     * 00007100
*                        interrupts.                                  * 00007200
*                                                                     * 00007300
*      Locks:            The caller is not required to hold any locks * 00007400
*                        on entry.  For STOP or STOPVECTOR, the       * 00007500
*                        caller may hold the local, CMS, or CPU lock. * 00007600
*                        For START, the caller may hold the LOCAL     * 00007700
*                        lock (not a CML).                            * 00007800
*                                                                     * 00007900
*      Control parameters: None.                                      * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*01* PROGRAMMING REQUIREMENTS:                                        * 00008400
*                                                                     * 00008500
*    The caller can include the IHAFPRET mapping macro to get equate  * 00008600
*    symbols for the return and reason codes provided by the IEAFP    * 00008700
*    macro.                                                           * 00008800
*                                                                     * 00008900
*01* RESTRICTIONS:                                                    * 00009000
*                                                                     * 00009100
*    IEAFP must not be issued from an asynchronous exit routine.      * 00009200
*                                                                     * 00009300
*01* INPUT REGISTER INFORMATION:                                      * 00009400
*                                                                     * 00009500
*    Before issuing the IEAFP macro, the caller does not have to      * 00009600
*    place any information into any general purpose register (GPR) or * 00009700
*    access register (AR) unless using it in register notation for a  * 00009800
*    particular parameter, or using it as a base register.            * 00009900
*                                                                     * 00010000
*01* OUTPUT REGISTER INFORMATION:                                     * 00010100
*                                                                     * 00010200
*    When control returns to the caller, the GPRs contain:            * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*    REGISTER    CONTENTS                                             * 00010600
*                                                                     * 00010700
*    0           Reason code, when GPR 15 is non-zero                 * 00010800
*                                                                     * 00010900
*    1           Used as a work register by the system                * 00011000
*                                                                     * 00011100
*    2-13        Unchanged                                            * 00011200
*                                                                     * 00011300
*    14-15       Used as a work register by the system                * 00011400
*                                                                     * 00011500
*    15          Return code                                          * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*    When control returns to the caller, the ARs contain:             * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*    REGISTER    CONTENTS                                             * 00012300
*                                                                     * 00012400
*    0-1         Used as work registers by the system                 * 00012500
*                                                                     * 00012600
*    2-13        Unchanged                                            * 00012700
*                                                                     * 00012800
*    14-15       Used as work registers by the system                 * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*    Some callers depend on register contents remaining the same      * 00013300
*    before and after issuing a service.  If the system changes the   * 00013400
*    contents of registers on which the caller depends, the caller    * 00013500
*    must save them before issuing the service, and restore them      * 00013600
*    after the system returns control.                                * 00013700
*                                                                     * 00013800
*01* PERFORMANCE IMPLICATIONS:                                        * 00013900
*    None.                                                            * 00014000
*                                                                     * 00014100
*01* SYNTAX:                                                          * 00014200
*                                                                     * 00014300
*Ýxlabel¨  IEAFP  Ð  START                                            * 00014400
*                 Ô ,STOP                                             * 00014500
*                 ¿ ,STOPVECTOR                                       * 00014600
*                  Ý,RETCODE=xretcode¨                                * 00014700
*                  Ý,RSNCODE=xrsncode¨                                * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*      Where:                                                         * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*      Ýxlabel¨                                                       * 00015400
*          is an optional symbol, starting in column 1, that is the   * 00015500
*          name on the IEAFP macro invocation.  The name must conform * 00015600
*          to the rules for an ordinary assembler language symbol.    * 00015700
*          DEFAULT: No name.                                          * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*      The following is a set of mutually exclusive keys.  This set   * 00016300
*      is required; only one key must be specified.                   * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*      START                                                          * 00016700
*          keyword that indicates to prepare for saving additional    * 00016800
*          floating point   status.  and vector status Resources will * 00016900
*          be allocated at this point so that initial use may occur   * 00017000
*          with fewer restrictions.                                   * 00017100
*                                                                     * 00017200
*      STOP                                                           * 00017300
*          keyword that indicates to stop saving additional floating  * 00017400
*          point status and vector status until such time as a new    * 00017500
*          operation requires it.  Resources will not be freed until  * 00017600
*          termination of the work unit, making re-starting faster.   * 00017700
*                                                                     * 00017800
*      STOPVECTOR                                                     * 00017900
*          keyword that indicates to stop saving vector register      * 00018000
*          status until such time as a new vector operation requires  * 00018100
*          it.  Saving of additional floating point status will       * 00018200
*          continue.                                                  * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*      End of a set of mutually exclusive required keys.              * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*      ÝRETCODE=xretcode¨                                             * 00019100
*          is the name (RS-type) of an optional fullword output       * 00019200
*          variable, or register (2)-(12) or (15), into which the     * 00019300
*          return code is to be copied from GPR 15.  If you specify   * 00019400
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00019500
*          the value will be left in GPR 15.                          * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*      ÝRSNCODE=xrsncode¨                                             * 00020100
*          is the name (RS-type) of an optional fullword output       * 00020200
*          variable into which the reason code is to be copied from   * 00020300
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00020400
*          R0 (within or without parentheses), the value will be left * 00020500
*          in GPR 0.                                                  * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*01* ABEND CODES:  None.                                              * 00021000
*                                                                     * 00021100
*01* RETURN CODES:                                                    * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                 Macro IHAFPRET provides equate symbols for the      * 00021500
*                 return and reason codes.                            * 00021600
*                                                                     * 00021700
*       0         Name: IeafpRc_OK                                    * 00021800
*                                                                     * 00021900
*                 Meaning:  IEAFP request successful.                 * 00022000
*                                                                     * 00022100
*                 Action:  None required.                             * 00022200
*                                                                     * 00022300
*       8         Name: IeafpRc_InvParm                               * 00022400
*                                                                     * 00022500
*                 Meaning:  IEAFP request specifies parameters that   * 00022600
*                 are not valid.                                      * 00022700
*                                                                     * 00022800
*                 Action:  Refer to the action provided with the      * 00022900
*                 specific reason code.                               * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                 HEX REASON  MEANING/ACTION                          * 00023300
*                 CODE                                                * 00023400
*                                                                     * 00023500
*                 xxxx0801    Name: IeafpRsnBadFunction               * 00023600
*                                                                     * 00023700
*                             Meaning: Incorrect value passed to      * 00023800
*                             target routine.                         * 00023900
*                                                                     * 00024000
*                             Action: Check for possible storage      * 00024100
*                             overlay.                                * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*       C         Name: IeafpRc_Env                                   * 00024700
*                                                                     * 00024800
*                 Meaning: Environmental error                        * 00024900
*                                                                     * 00025000
*                 Action:  Refer to the action provided with the      * 00025100
*                 specific reason code.                               * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                 HEX REASON  MEANING/ACTION                          * 00025500
*                 CODE                                                * 00025600
*                                                                     * 00025700
*                 xxxx0C01    Name: IeafpRsnFromAsynchExit            * 00025800
*                                                                     * 00025900
*                             Meaning: IEAFP was issued from an       * 00026000
*                             asynchronous exit routine.              * 00026100
*                                                                     * 00026200
*                             Action: Avoid issuing IEAFP from an     * 00026300
*                             asynchronous exit routine.              * 00026400
*                                                                     * 00026500
*                 xxxx0C02    Name: IeafpRsnFromNonPreemptibleSRB     * 00026600
*                                                                     * 00026700
*                             Meaning: IEAFP START was issued from an * 00026800
*                             SRB that was a non-preemptible SRB.     * 00026900
*                                                                     * 00027000
*                             Action: Avoid issuing IEAFP from a      * 00027100
*                             non-preemptible SRB.                    * 00027200
*                                                                     * 00027300
*                 xxxx0C03    Name: IeafpRsnFromNotBITCB              * 00027400
*                                                                     * 00027500
*                             Meaning: IEAFP START was issued from a  * 00027600
*                             task that was not the jobstep program   * 00027700
*                             task nor a subtask of that task.        * 00027800
*                                                                     * 00027900
*                             Action: When using IEAFP START from a   * 00028000
*                             task, do so only from the jobstep       * 00028100
*                             program task or a subtask of that task. * 00028200
*                                                                     * 00028300
*                 xxxx0C04    Name: IeafpRsnLocked                    * 00028400
*                                                                     * 00028500
*                             Meaning: IEAFP START was issued when    * 00028600
*                             holding a lock other than the LOCAL     * 00028700
*                             lock.                                   * 00028800
*                                                                     * 00028900
*                             Action: Avoid using IEAFP START when    * 00029000
*                             holding a lock other than the LOCAL     * 00029100
*                             lock.                                   * 00029200
*                                                                     * 00029300
*                 xxxx0C05    Name: IeafpRsnNoStorage                 * 00029400
*                                                                     * 00029500
*                             Meaning: Necessary system storage could * 00029600
*                             not be obtained.  For a task mode       * 00029700
*                             request, it is LSQA storage. For an SRB * 00029800
*                             mode request, it is ESQA storage.       * 00029900
*                                                                     * 00030000
*                             Action: If issued in task mode, use     * 00030100
*                             IEAFP START at an earlier time in the   * 00030200
*                             jobstep. If issued in SRB mode, arrange * 00030300
*                             for some current user of ESQA storage   * 00030400
*                             to release it or run this after a       * 00030500
*                             re-IPL after ensuring additional ESQA   * 00030600
*                             storage availability for that IPL.      * 00030700
*                                                                     * 00030800
*                 xxxx0C06    Name: IeafpRsnSuperBit                  * 00030900
*                                                                     * 00031000
*                             Meaning: IEAFP START was issued from a  * 00031100
*                             work unit with at least one bit on in   * 00031200
*                             the PSASUPER word. A DIE is one such    * 00031300
*                             kind of work unit.                      * 00031400
*                                                                     * 00031500
*                             Action: Avoid issuing IEAFP from a DIE  * 00031600
*                             or any other work unit running with     * 00031700
*                             PSASUPER on.                            * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*01* REASON CODES:                                                    * 00032400
*                                                                     * 00032500
*       Reason codes, as appropriate, are defined under their         * 00032600
*       corresponding return code.                                    * 00032700
*                                                                     * 00032800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00032900
*                                                                     * 00033000
*02*   PROCESSOR:  ASSEM                                              * 00033100
*                                                                     * 00033200
*01* COMPONENT:  SC1C5                                                * 00033300
*                                                                     * 00033400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00033500
*                                                                     * 00033600
*01* EXAMPLES:                                                        * 00033700
*                                                                     * 00033800
*    Example 1                                                        * 00033900
*                                                                     * 00034000
*    Operation:                                                       * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*    1.  Stop additional status saving                                * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*    The code is as follows.                                          * 00034800
*                                                                     * 00034900
*               IEAFP STOP                                            * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*01* MACRO USAGE NOTES:                                               * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00035600
*        global macro variable.  Any value other than 'NO' will       * 00035700
*        result in the macro expansion being printed.  The default is * 00035800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00035900
*        variable should be set.                                      * 00036000
*                                                                     * 00036100
*                    GBLC &ZPRINT                                     * 00036200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*01* CHANGE ACTIVITY:                                                 * 00036700
*                                                                     * 00036800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00036900
*                                                                     * 00037000
*    $L0=IEEEAMG  HBB6606 980825 PD00XB:  IEEE FP                     * 00037100
*    $L1=IEEESUP  HBB6606 980825 PD00XB:  IEEE FP                     * 00037200
*    $L2=ME24913  HBB7790 121101 PD00XB:  ME24913                     * 00037300
*    $L3=GSF      HBB77B0 150706 PD00KD:  Reserve function codes 5-8  * 00037400
*                                         for GSF                     * 00037500
****** END OF SPECIFICATIONS *****************************************/ 00037600
*/********************************************************************* 00037700
         MACRO                                                          00037800
&XLABEL  IEAFP &RETCODE=,&RSNCODE=                                      00037900
.*                                                                      00038000
*                MACDATE -06/17/16-<0>                                  00038100
.*                                                                      00038200
.*******************************************************************    00038300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00038400
.*******************************************************************    00038500
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00038600
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00038700
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00038800
.*                                                                      00038900
                GBLC  &ZIEAFP     YES=MACRO USED AT LEAST ONCE          00039000
.*******************************************************************    00039100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00039200
.*******************************************************************    00039300
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00039400
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00039500
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00039600
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00039700
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00039800
                LCLA  &ZAWRK      USED AS A WORK AREA                   00039900
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00040000
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00040100
                LCLC  &ZC         CHARACTER WORK VARIABLE               00040200
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00040300
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00040400
                LCLC  &ZMAC_G     "G" or null                           00040500
&ZMAC_G         SETC  ''                                                00040600
                LCLC  &ZMAC_LR                                          00040700
&ZMAC_LR        SETC  'LR'                                              00040800
                LCLC  &ZMAC_L                                           00040900
&ZMAC_L         SETC  'L'                                               00041000
                LCLC  &ZMAC_ST                                          00041100
&ZMAC_ST        SETC  'ST'                                              00041200
                LCLC  &ZMAC_LLGT                                        00041300
&ZMAC_LLGT      SETC  'L'                                               00041400
                LCLC  &ZMAC_LGR                                         00041500
&ZMAC_LGR       SETC  'LR'                                              00041600
                LCLC  &ZMAC_LG                                          00041700
&ZMAC_LG        SETC  'L'                                               00041800
                LCLC  &ZMAC_STG                                         00041900
&ZMAC_STG       SETC  'ST'                                              00042000
                LCLA  &ZMACRET    MACRO RETURN CODE                     00042100
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00042200
.*                                                                      00042300
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00042400
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00042500
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00042600
                LCLC  &ZENDBASEPL               End of base PL          00042700
.********************************************************************   00042800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00042900
.********************************************************************   00043000
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00043100
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00043200
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00043300
                GBLC  &SYSAM64    SYSSTATE AMODE64                      00043400
.*                                                                      00043500
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00043600
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00043700
                SPLEVEL  TEST                                           00043800
.ZSYS2          ANOP  ,                                                 00043900
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00044000
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00044100
                SYSSTATE TEST                                           00044200
                AGO   .ZSYS4                                            00044300
.ZSYS3          ANOP  ,                                                 00044400
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00044500
.ZSYS4          ANOP  ,                                                 00044600
                AIF   ('&SYSAM64' NE 'YES').ZSYSN64                     00044700
&ZMAC_LLGT      SETC 'LLGT'                                             00044800
&ZMAC_LGR       SETC 'LGR'                                              00044900
&ZMAC_LG        SETC 'LG'                                               00045000
&ZMAC_STG       SETC 'STG'                                              00045100
.ZSYSN64        ANOP  ,                                                 00045200
.*******************************************************************    00045300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00045400
.*******************************************************************    00045500
                LCLC  &XOPER      ++ VALUE                              00045600
                LCLC  &XSTART     ++ VALUE                              00045700
                LCLC  &XSTOP      ++ VALUE                              00045800
                LCLC  &XSTOPVECTOR              ++ VALUE                00045900
                LCLC  &XRETCODE   ++ NAME                               00046000
                LCLC  &XRSNCODE   ++ NAME                               00046100
.*******************************************************************    00046200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00046300
.*******************************************************************    00046400
                LCLC  &ZXOPER     ++ INPUT VALUE                        00046500
                LCLC  &ZXSTART    ++ INPUT VALUE                        00046600
                LCLC  &ZXSTOP     ++ INPUT VALUE                        00046700
                LCLC  &ZXSTOPVECTOR             ++ INPUT VALUE          00046800
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00046900
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00047000
.********************************************************************   00047100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00047200
.********************************************************************   00047300
                ACTR  10000                                             00047400
.*-------------------------------------------------------------------   00047500
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00047600
&XOPER          SETC  ''          INITIALIZE XVARIABLE                  00047700
&ZASYSLNDX      SETA  0                                                 00047800
.ZG2A           ANOP  ,           POSITIONAL KEY SEARCH                 00047900
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00048000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00048100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00048200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'START').ZG2A                 00048300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00048400
&ZXOPER         SETC  'INPUT'     SET IN/OUTPUT                         00048500
&XOPER          SETC  'START'     SET XVARIABLE                         00048600
&ZXSTART        SETC  'INPUT'     SET IN/OUTPUT                         00048700
&XSTART         SETC  'START'     SET XVARIABLE PARM                    00048800
.ZG2B           ANOP  ,                                                 00048900
.*-------------------------------------------------------------------   00049000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00049100
&ZASYSLNDX      SETA  0                                                 00049200
.ZG3A           ANOP  ,           POSITIONAL KEY SEARCH                 00049300
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00049400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG3C  DONE                    00049500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG3A             00049600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'STOP').ZG3A                  00049700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00049800
                AIF   (K'&XOPER LE 0).ZG3B      VALID                   00049900
&ZMS            SETC  '"STOP'                                           00050000
&ZMS            SETC  '&ZMS."'                                          00050100
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00050200
&ZMS            SETC  '&ZMS "&XOPER"'                                   00050300
                MNOTE 8,' &ZMS KEY.'                                    00050400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00050500
                AGO   .ZG3C                                             00050600
.*                                                                      00050700
.ZG3B           ANOP  ,                                                 00050800
&ZXOPER         SETC  'INPUT'     SET IN/OUTPUT                         00050900
&XOPER          SETC  'STOP'      SET XVARIABLE                         00051000
&ZXSTOP         SETC  'INPUT'     SET IN/OUTPUT                         00051100
&XSTOP          SETC  'STOP'      SET XVARIABLE PARM                    00051200
.ZG3C           ANOP  ,                                                 00051300
.*-------------------------------------------------------------------   00051400
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00051500
&ZASYSLNDX      SETA  0                                                 00051600
.ZG4A           ANOP  ,           POSITIONAL KEY SEARCH                 00051700
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00051800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG4C  DONE                    00051900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG4A             00052000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'STOPVECTOR').ZG4A            00052100
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00052200
                AIF   (K'&XOPER LE 0).ZG4B      VALID                   00052300
&ZMS            SETC  '"STOPVECTOR'                                     00052400
&ZMS            SETC  '&ZMS."'                                          00052500
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00052600
&ZMS            SETC  '&ZMS "&XOPER"'                                   00052700
                MNOTE 8,' &ZMS KEY.'                                    00052800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00052900
                AGO   .ZG4C                                             00053000
.*                                                                      00053100
.ZG4B           ANOP  ,                                                 00053200
&ZXOPER         SETC  'INPUT'     SET IN/OUTPUT                         00053300
&XOPER          SETC  'STOPVECTOR'              SET XVARIABLE           00053400
&ZXSTOPVECTOR   SETC  'INPUT'     SET IN/OUTPUT                         00053500
&XSTOPVECTOR    SETC  'STOPVECTOR'              SET XVARIABLE PARM      00053600
.ZG4C           ANOP  ,                                                 00053700
.*------------------------------------------------------------------    00053800
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00053900
                AIF   (K'&XOPER GT 0).ZG5B                              00054000
&ZXOPER         SETC  ''          RESET IN/OUTPUT                       00054100
&ZXSTART        SETC  ''          RESET IN/OUTPUT                       00054200
&XOPER          SETC  ''          ENSURE NULL                           00054300
&XSTART         SETC  ''          ENSURE NULL                           00054400
&ZMS            SETC  'ONE OF THE FOLLOWING'                            00054500
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00054600
&ZMS            SETC  '&ZMS REQUIRED:'                                  00054700
&ZMS            SETC  '&ZMS "START",'           VALID ME KEY            00054800
&ZMS            SETC  '&ZMS "STOP",'            VALID ME KEY            00054900
&ZMS            SETC  '&ZMS OR "STOPVECTOR".'   VALID ME KEY            00055000
                MNOTE 8,' &ZMS '                                        00055100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00055200
.ZG5B           ANOP  ,                                                 00055300
.*-------------------------------------------------------------------   00055400
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00055500
.ZG2ZY  AIF    ('&XOPER' NE 'START').ZG3ZY                              00055600
.*-------------------------------------------------------------------   00055700
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00055800
.ZG3ZY  AIF    ('&XOPER' NE 'STOP').ZG4ZY                               00055900
.*-------------------------------------------------------------------   00056000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00056100
.ZG4ZY  AIF    ('&XOPER' NE 'STOPVECTOR').ZG5ZY                         00056200
.*-------------------------------------------------------------------   00056300
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00056400
.ZG5ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS           00056500
.*----------------------------------------------------------------***   00056600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00056700
                AIF   (N'&RETCODE LE 1).ZG7A    CK NUM                  00056800
&ZMS            SETC  '"RETCODE='                                       00056900
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00057000
&ZMS            SETC  '&ZMS "RETCODE"'                                  00057100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00057200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00057300
.ZG7A           ANOP  ,                                                 00057400
.*-------------------------------------------------------------------   00057500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00057600
                AIF   (K'&RETCODE(1) LE 0).ZG7C  NO PARM                00057700
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00057800
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00057900
                AIF   (N'&RETCODE GT 1).ZG7C                            00058000
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00058100
.ZG7C           ANOP  ,                                                 00058200
.*-------------------------------------------------------------------   00058300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00058400
                AIF   (K'&ZXRETCODE LE 0).ZG7R  NOT I/O                 00058500
                AIF   ('&XRETCODE'(1,1) NE '(').ZG7R                    00058600
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00058700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                       00058800
                AIF   (K'&ZCGPR GT 2).ZG7Q                              00058900
                AIF   ('&ZCGPR' EQ '0').ZG7Q                            00059000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00059100
                AIF   (T'&ZCGPR NE 'N').ZG7Q    INVALID REG NAME        00059200
.ZG7P           ANOP  ,                                                 00059300
                AIF   (T'&ZCGPR NE 'N').ZG7R    NON NUMERIC             00059400
                AIF   ('&ZCGPR' EQ '15').ZG7R                           00059500
                AIF   ('&ZCGPR' LT '2').ZG7Q                            00059600
                AIF   ('&ZCGPR' LE '12').ZG7R                           00059700
.ZG7Q           ANOP  ,                                                 00059800
&ZMS            SETC  '"RETCODE='                                       00059900
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00060000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00060100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00060200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00060300
.ZG7R           ANOP  ,                                                 00060400
.*----------------------------------------------------------------***   00060500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00060600
                AIF   (N'&RSNCODE LE 1).ZG10A   CK NUM                  00060700
&ZMS            SETC  '"RSNCODE='                                       00060800
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00060900
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00061000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00061100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061200
.ZG10A          ANOP  ,                                                 00061300
.*-------------------------------------------------------------------   00061400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00061500
                AIF   (K'&RSNCODE(1) LE 0).ZG10C  NO PARM               00061600
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00061700
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00061800
                AIF   (N'&RSNCODE GT 1).ZG10C                           00061900
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00062000
.ZG10C          ANOP  ,                                                 00062100
.*-------------------------------------------------------------------   00062200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00062300
                AIF   (K'&ZXRSNCODE LE 0).ZG10R  NOT I/O                00062400
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG10R                   00062500
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00062600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                      00062700
                AIF   (K'&ZCGPR GT 2).ZG10Q                             00062800
                AIF   ('&ZCGPR' EQ '0').ZG10R                           00062900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00063000
                AIF   (T'&ZCGPR NE 'N').ZG10Q   INVALID REG NAME        00063100
.ZG10P          ANOP  ,                                                 00063200
                AIF   (T'&ZCGPR NE 'N').ZG10R   NON NUMERIC             00063300
                AIF   ('&ZCGPR' EQ '0').ZG10R                           00063400
                AIF   ('&ZCGPR' LT '2').ZG10Q                           00063500
                AIF   ('&ZCGPR' LE '12').ZG10R                          00063600
.ZG10Q          ANOP  ,                                                 00063700
&ZMS            SETC  '"RSNCODE='                                       00063800
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00063900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00064000
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00064100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064200
.ZG10R          ANOP  ,                                                 00064300
.******************************************************************     00064400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00064500
.******************************************************************     00064600
                ACTR  10000                                             00064700
.*-------------------------------------------------------------------   00064800
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00064900
&ZCVAL          SETC  ''          ERROR FIELD                           00065000
&ZAWRK          SETA  0           POSITIONAL COUNTER                    00065100
&ZASYSLNDX      SETA  0           NON-X KEY COUNTER                     00065200
.ZGLIST2        ANOP  ,                                                 00065300
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT NON-X KEY          00065400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00065500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00065600
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00065700
                AIF   (&ZAWRK LE 0).ZGLIST2                             00065800
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA               00065900
                AGO   .ZGLIST2                                          00066000
.*                                                                      00066100
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00066200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00066300
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00066400
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00066500
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00066600
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00066700
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00066800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066900
.ZGLISTX        ANOP  ,                                                 00067000
&ZASYSLNDX      SETA  0                                                 00067100
.*******************************************************************    00067200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00067300
.*******************************************************************    00067400
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00067500
.*******************************************************************    00067600
.***AE.01  START OF IEAFP MACRO CODE                                    00067700
.*******************************************************************    00067800
                LCLC  &M0M0001                 NAME                     00067900
&M0M0001        SETC  '&XLABEL'                SET NAME                 00068000
                AIF   (K'&XLABEL NE 0).XLAB2                            00068100
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00068200
.*                                                                      00068300
.XLAB2          ANOP  ,                                                 00068400
&M0M0001 DS    0H                             IEAFP-0                   00068500
.*******************************************************************    00068600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00068700
.*******************************************************************    00068800
              PUSH  PRINT                                               00068900
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00069000
                PRINT OFF         ++ PR01                               00069100
                AGO   .ZPRNTXX                                          00069200
.ZPRINTX        PRINT ON                                                00069300
.ZPRNTXX        ANOP  ,                                                 00069400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00069500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00069600
.********************************************************************   00069700
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00069800
.********************************************************************   00069900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00070000
                      LCLA  &ZOPN1         INVOCATION INDEX             00070100
                      LCLC  &ZOPL(4095)    LABEL                        00070200
                      LCLC  &ZOPO(4095)    OPERATION                    00070300
                      LCLC  &ZOPV(4095)    VALUE                        00070400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00070500
.*                                                                      00070600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00070700
.*-------------------------------------------------------------------   00070800
&ZOPN1                SETA &ZOPN                                        00070900
.*******************************************************************    00071000
.***AO.X02  RETURN CODE PROCESSING                                      00071100
.*******************************************************************    00071200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00071300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00071400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00071500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00071600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00071700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00071800
&ZOPN                 SETA  &ZOPN+1                                     00071900
&ZOPL(&ZOPN)          SETC  ' '                                         00072000
&ZOPO(&ZOPN)          SETC  'ST'                                        00072100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00072200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00072300
                      AGO   .ZMRETX                                     00072400
.*                                                                      00072500
.ZMRET2               ANOP  ,                                           00072600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00072700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00072800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00072900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00073000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00073100
&ZOPN                 SETA  &ZOPN+1                                     00073200
&ZOPL(&ZOPN)          SETC  ' '                                         00073300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00073400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00073500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00073600
.ZMRETX               ANOP  ,                                           00073700
.*******************************************************************    00073800
.***AO.X03  REASON CODE PROCESSING                                      00073900
.*******************************************************************    00074000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00074100
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00074200
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00074300
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00074400
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00074500
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00074600
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00074700
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00074800
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00074900
&ZOPN                 SETA  &ZOPN+1                                     00075000
&ZOPL(&ZOPN)          SETC  ' '                                         00075100
&ZOPO(&ZOPN)          SETC  'ST'                                        00075200
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00075300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00075400
                      AGO   .ZMRSNX                                     00075500
.*                                                                      00075600
.ZMRSN2               ANOP  ,                                           00075700
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00075800
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00075900
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00076000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00076100
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00076200
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00076300
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00076400
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00076500
&ZOPN                 SETA  &ZOPN+1                                     00076600
&ZOPL(&ZOPN)          SETC  ' '                                         00076700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00076800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00076900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00077000
.ZMRSNX               ANOP  ,                                           00077100
.*******************************************************************    00077200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00077300
.*******************************************************************    00077400
                      ACTR  10000                                       00077500
.*                                                                      00077600
                      LCLA  &ZLC           COLUMN POSITION              00077700
                      LCLA  &ZOPX          LIST TABLE INDEX             00077800
                      LCLC  &ZLL           LABEL                        00077900
                      LCLC  &ZLOP          OPERATION                    00078000
                      LCLC  &ZLV           VALUE                        00078100
                      LCLC  &ZLD           DESCRIPTION                  00078200
.*                                                                      00078300
&ZOPX                 SETA  1                                           00078400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00078500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00078600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00078700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00078800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00078900
                      AIF   (K'&ZLD LE 0).ZL5                           00079000
&ZLC                  SETA  35             COMMENT COLUMN               00079100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00079200
&ZLC                  SETA  33             COMMMENT COLUMN              00079300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00079400
&ZLV                  SETC  '&ZLV'.' '                                  00079500
                      AGO   .ZL3                                        00079600
.*                                                                      00079700
.ZL4                  ANOP  ,                                           00079800
&ZLV                  SETC  '&ZLV'.' '                                  00079900
.ZL5                  ANOP  ,                                           00080000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00080100
.*                                                                      00080200
&ZLL     &ZLOP &ZLV                                                     00080300
.*                                                                      00080400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00080500
                      AGO   .ZL2           CONTINUE LOOPING             00080600
.*                                                                      00080700
.ZLX                  ANOP  ,                                           00080800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00080900
.* Note that function codes 5-8 are reserved for IEAGSF            @L3A 00081000
         AIF   ('&XOPER' EQ 'STOPVECTOR').SET2                     @L2A 00081100
         AIF   ('&XOPER' EQ 'START').SET1                          @L2A 00081200
         XR    0,0                     Indicate "STOP" function    @L1A 00081300
         AGO   .CALL                                               @L2A 00081400
.SET1    ANOP                                                      @L2A 00081500
         LHI   0,1                     Indicate "START"            @L2A 00081600
         AGO   .CALL                                               @L2A 00081700
.SET2    ANOP                                                      @L2A 00081800
         LHI   0,2                     Indicate "STOPVECTOR"       @L2A 00081900
         AGO   .CALL                                               @L2A 00082000
.CALL    ANOP                                                      @L2A 00082100
         L     14,16(0,0)              GET CVT ADDRESS             @L1A 00082200
         L     14,772(14,0)            GET SFT ADDRESS             @L1A 00082300
         L     14,496(14,0)            GET LX/EX FOR SERVICE RTN   @L1A 00082400
         PC    0(14)                                               @L1A 00082500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00082600
.*******************************************************************    00082700
.***AP.X01  FORMAT GENERATED CODE                                       00082800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00082900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00083000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00083100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00083200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00083300
                      AIF   (K'&ZLD LE 0).ZL51                          00083400
&ZLC                  SETA  35             COMMENT COLUMN               00083500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00083600
&ZLC                  SETA  33             COMMENT COLUMN               00083700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00083800
&ZLV                  SETC  '&ZLV'.' '                                  00083900
                      AGO   .ZL31                                       00084000
.*                                                                      00084100
.ZL41                 ANOP  ,                                           00084200
&ZLV                  SETC  '&ZLV'.' '                                  00084300
.ZL51                 ANOP  ,                                           00084400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00084500
.*                                                                      00084600
&ZLL     &ZLOP &ZLV                                                     00084700
.*                                                                      00084800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00084900
                      AGO   .ZL21          CONTINUE LOOPING             00085000
.*                                                                      00085100
.ZLX1                 ANOP  ,                                           00085200
.*******************************************************************    00085300
.***AP.X02  END OF IEAFP MACRO                                          00085400
&ZIEAFP               SETC  'YES'          SET IEAFP USED               00085500
         POP   PRINT                                                    00085600
*                                            IEAFP-0                    00085700
         SPACE 1                                                        00085800
.ZLX2                 ANOP  ,                                           00085900
         MEND                                                           00086000
**********************************************************************/ 00086100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00086200
*%IEAFP: MACRO KEYS(START,STOP,STOPVECTOR,RETCODE,RSNCODE);             00086300
*  ANS('?'!!MACLABEL!!' '!!'IEAFPP '!!MACLIST!!                         00086400
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00086500
*%END IEAFP;                                                            00086600
