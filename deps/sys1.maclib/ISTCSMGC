#ifndef __istcsmgc_h                                                            
#define __istcsmgc_h                                                            
                                                                                
 /********************************************************************/         
 /*                                                                  */         
 /* CONTROL BLOCK NAME: ISTCSMGC                                     */         
 /*                                                                  */         
 /* DESCRIPTIVE NAME:   NMI Enterprise Extender Summary Mapping      */         
 /*                     for CSM Global Statistics                    */         
 /*                                                                  */         
 /* Copyright: Licensed Materials - Property of IBM                  */         
 /*            5650-ZOS                                              */         
 /*            Copyright IBM Corp. 2003, 2015                        */         
 /* Status:    CSV2R2                                                */         
 /*                                                                  */         
 /* FUNCTION: Maps the record formats returned in response to        */         
 /*           an Network Management Enterprise Extender CSM          */         
 /*           statistics request. The records that are returned are: */         
 /*             (1) CSM Global Pool Record (one per CSM pool)        */         
 /*             (2) CSM Global Summary Record (one)                  */         
 /*             (3) Optionally, CSM Storage Owner Data record (one   */         
 /*                 per jobname/ASID owner)                      @F1A*/         
 /*                                                                  */         
 /* STORAGE USED FOR CONTROL BLOCK:                                  */         
 /*                                                                  */         
 /*    ALLOCATED BY:                                                 */         
 /*                                                                  */         
 /*    FREED BY:                                                     */         
 /*                                                                  */         
 /*    POINTED TO BY:                                                */         
 /*                                                                  */         
 /*    TYPE:                                                         */         
 /*                                                                  */         
 /* ALIGNMENT:                                                       */         
 /*       This control block MUST be on a DWORD boundary.            */         
 /*                                                                  */         
 /* OPERATING SYSTEM SPECIFICS:                                      */         
 /*                                                                  */         
 /* NOTES: None                                                      */         
 /*                                                                  */         
 /* SERIALIZATION CONCERNS:                                          */         
 /*                                                                  */         
 /* LIST RECOMPILE MODULES:                                          */         
 /*                                                                  */         
 /* CHANGE ACTIVITY:                                                 */         
 /*                                                                  */         
 /* $MAC(ISTCSMGC),COMP(MGMTSVC),PROD(VTAM): NMI CSM Global Summary  */         
 /*                                          Mapping                 */         
 /*                                                                  */         
 /* Flag Reason   Release  Date   Origin    Description              */         
 /* ---- -------- -------- ------ --------  ------------------------ */         
 /* $Q0= R16EEMGT CSV1R5   030404 SMOONEN : ITNMP Processing         */         
 /* $Q1= D132554  R16EEMGT 030505 SMOONEN : Eyecatchers, sequence #s */         
 /* $  = D132928  X16BASE  031013 RKunkel : Fix copyright statements */         
 /* $A1= OA10317  ZCSV2R7  050315 JPERKINS: Add comment that data    */         
 /*                                         space pool buffers are   */         
 /*                                         combined from DS 31 and  */         
 /*                                         DS 64 pools              */         
 /* $X1= R8RASCSM CSV1R8   050418 GaryZ   : DISPLAY CSM Enhancements */         
 /* $Y1= D140673  R9BASE   070309 HARISHS : Fix CSMSummGData         */         
 /* $F1= RBNMIENH CSV1R11  080515 AGFarrel: CSM Owner Record updates */         
 /* $31= 18245    RFBASE   131030 HARISHS : 64-Bit addr support      */         
 /* $32= 21167    RFBASE   140402 HARISHS : Fix the field name of    */         
 /*                                         CSMStorOD_180KHVBuffers  */         
 /*                                                                  */         
 /********************************************************************/         
                                                                                
#include <isteehnc.h>                                                           
                                                                                
#ifdef __cplusplus                                                              
      extern "C" {                                                              
#endif                                                                          
                                                                                
#pragma pack(1)                     /* Align structures at bytes     */         
                                                                                
/*********************************************************************/         
/* CSM Pool Global record                                            */         
/*********************************************************************/         
                                                                                
typedef struct {                                                                
  unsigned int   CSMPoolG_Eye;      /* CSM Pool Global ID (CSMP) @Q1C*/         
  unsigned int   CSMPoolG_Len;      /* Overall length of this record */         
  unsigned short CSMPoolG_Rsvd;     /* Reserved                      */         
  unsigned short CSMPoolG_NumTriplets;  /* Number of triplets defined           
                                           for this record           */         
  EEHNMRecordTriplet CSMPoolG_Triplet;  /* Only one triplet                     
                                           defined for this record   */         
} CSMPoolGlobal;                                                                
                                                                                
/*********************************************************************/         
/* CSM Pool Global Data record (one per CSM pool)                    */         
/*********************************************************************/         
                                                                                
/*********************************************************************/         
/* Note: Number of available and inuse buffers in the data space     */         
/*       pool record is the total of DS 31 and DS 64 pools. There    */         
/*       is no separate pool record for DS 31 and DS 64 pools.   @A1A*/         
/*********************************************************************/         
                                                                                
typedef struct {                                                                
  int           CSMPoolGD_Size;     /* Pool size                     */         
  unsigned char CSMPoolGD_Srce;     /* Buffer source flag            */         
  char          CSMPoolGD_RsvdÝ3¨;  /* Not used - available          */         
  int           CSMPoolGD_InUse;    /* Number of buffers in                     
                                       pool that are in use          */         
  int           CSMPoolGD_Free;     /* Number of buffers in                     
                                       pool that are available       */         
} CSMPoolGData;                                                                 
                                                                                
/*********************************************************************/         
/* CSM Summary Global record                                         */         
/*********************************************************************/         
                                                                                
typedef struct {                                                                
  unsigned int   CSMSummG_Eye;      /* CSM Summary Global ID (CSMS)             
                                                                 @Q1C*/         
  unsigned int   CSMSummG_Len;      /* Overall length of this record */         
  unsigned short CSMSummG_Rsvd;     /* Reserved                      */         
  unsigned short CSMSummG_NumTriplets;  /* Number of triplets defined           
                                           for this record           */         
  EEHNMRecordTriplet CSMSummG_Triplet;  /* Only one triplet                     
                                           defined for this record   */         
} CSMSummGlobal;                                                                
                                                                                
/*********************************************************************/         
/* CSM Summary Global Data record (one per system)                   */         
/*********************************************************************/         
                                                                                
typedef struct {                                                                
  unsigned int CSMSummGD_MaxFiNMeg :1;  /* When off value = bytes               
                                           When on value  = megabytes*/         
  unsigned int CSMSummGD_MaxFixed  :31; /* Installation Max                     
                                           fixed storage         @Y1C*/         
  unsigned int CSMSummGD_CurFiNMeg :1;  /* When off value = bytes               
                                           When on value  = megabytes*/         
  unsigned int CSMSummGD_CurFixed  :31; /* Current fixed storage                
                                           in use                @Y1C*/         
  unsigned int CSMSummGD_MaxECSA;       /* Installation max ECSA     */         
  unsigned int CSMSummGD_CurECSA;       /* Current ECSA Storage      */         
  unsigned int CSMSummGD_Max_DISPFiNMeg :1; /* When off value = bytes           
                                       When on value  = megabytes               
                                                                 @X1A*/         
  unsigned int CSMSummGD_Max_DISPLAY_Fixed :31; /* Maximum fixed                
                                       storage since last DISPLAY CSM           
                                       without OWNERID specified @X1A*/         
  unsigned int CSMSummGD_Max_IPL_FiNMeg :1; /* When off value = bytes           
                                       When on value  = megabytes               
                                                                 @X1A*/         
  unsigned int CSMSummGD_Max_IPL_Fixed :31; /* Maximum fixed storage            
                                       since IPL                 @X1A*/         
  unsigned int CSMSummGD_Max_DISPECSA; /* Maximum ECSA storage since            
                                       last DISPLAY CSM without                 
                                       OWNERID specified         @X1A*/         
  unsigned int CSMSummGD_Max_IPL_ECSA; /* Maximum ECSA storage since            
                                       IPL                       @X1A*/         
  unsigned int CSMSummGD_MaxHVNMeg :1; /* When off value = bytes                
                                       When on value  = megabytes               
                                                                 @31A*/         
  unsigned int CSMSummGD_MaxHV :31; /* Installation Max HVCOMMON value          
                                                                 @31A*/         
  unsigned int CSMSummGD_CurHVNMeg :1; /* When off value = bytes                
                                       When on value  = megabytes               
                                                                 @31A*/         
  unsigned int CSMSummGD_CurHV :31; /* Current HVCOMMON Storage                 
                                       allocated                 @31A*/         
  unsigned int CSMSummGD_Max_DISPHVNMeg :1; /* When off value = bytes           
                                       When on value  = megabytes               
                                                                 @31A*/         
  unsigned int CSMSummGD_Max_DISP_HV :31; /* HVCOMMON maximum since             
                                       last DISPLAY CSM entered                 
                                       without OWNERID           @31A*/         
  unsigned int CSMSummGD_Max_IPL_HVNMeg :1; /* When off value = bytes           
                                       When on value  = megabytes               
                                                                 @31A*/         
  unsigned int CSMSummGD_Max_IPL_HV :31; /* HVCOMMON maximum since              
                                       IPL                       @31A*/         
} CSMSummGData;                                                                 
                                                                                
/*********************************************************************/         
/* CSM Storage Owner record                                      @F1A*/         
/*********************************************************************/         
                                                                                
typedef struct {                                                                
  unsigned int   CSMStorO_Eye;      /* CSM Storage Owner ID (CSMO)              
                                                                 @F1A*/         
  unsigned int   CSMStorO_Len;      /* Overall length of record  @F1A*/         
  unsigned short CSMStorO_Rsvd;     /* Reserved                  @F1A*/         
  unsigned short CSMStorO_NumTriplets;  /* Number of triplets defined           
                                           for this record       @F1A*/         
  EEHNMRecordTriplet CSMStorO_Triplet;  /* Only one triplet                     
                                       defined for this record   @F1A*/         
} CSMStorageOwner;                                                              
                                                                                
/*********************************************************************/         
/* CSM Storage Owner Data record section                             */         
/* (one per jobname/ASID combination that has CSM storage            */         
/* allocated)                                                    @F1A*/         
/*********************************************************************/         
                                                                                
typedef struct {                                                                
  char   CSMStorOD_JobnameÝ8¨;      /* Jobname of user that owns these          
                                       CSM buffers               @F1A*/         
  unsigned short CSMStorOD_ASID;    /* ASID associated with user                
                                       that owns these buffers   @F1A*/         
  unsigned short CSMStorOD_Rsvd;    /* Reserved                  @F1A*/         
  int  CSMStorOD_4KECSABuffers;     /* Total 4K ECSA                            
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_4KDSBuffers;       /* Total 4K DS                              
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_16KECSABuffers;    /* Total 16K ECSA                           
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_16KDSBuffers;      /* Total 16K DS                             
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_32KECSABuffers;    /* Total 32K ECSA                           
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_32KDSBuffers;      /* Total 32K DS                             
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_60KECSABuffers;    /* Total 60K ECSA                           
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_60KDSBuffers;      /* Total 60K DS                             
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_180KECSABuffers;   /* Total 180K ECSA                          
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_180KDSBuffers;     /* Total 180K DS                            
                                       buffers used by this user @F1A*/         
  int  CSMStorOD_4KHVBuffers;       /* Total 4K HVCOMMON                        
                                       buffers used by this user @31A*/         
  int  CSMStorOD_16KHVBuffers;      /* Total 16K HVCOMMON                       
                                       buffers used by this user @31A*/         
  int  CSMStorOD_32KHVBuffers;      /* Total 32K HVCOMMON                       
                                       buffers used by this user @31A*/         
  int  CSMStorOD_60KHVBuffers;      /* Total 60K HVCOMMON                       
                                       buffers used by this user @31A*/         
  int  CSMStorOD_180KHVBuffers;     /* Total 180K HVCOMMON buffers              
                                       used by this user    @31A @32C*/         
} CSMStorOData;                                                                 
                                                                                
/*********************************************************************/         
/* Eyecatcher constants for CSM Summary pool and summary records     */         
/*********************************************************************/         
                                                                                
const unsigned int CSMPool_ID                                                   
  = 0xC3E2D4D7;                     /* CSM Pool Global ID "CSMP" @Q1C*/         
const unsigned int CSMSumm_ID                                                   
  = 0xC3E2D4E2;                     /* CSM Summary Global ID "CSMS"             
                                                                 @Q1C*/         
const unsigned int CSMStor_ID                                                   
  = 0xC3E2D4D6;                     /* CSM Storage Owner ID "CSMO"              
                                                                 @F1A*/         
                                                                                
/*********************************************************************/         
/* Constants to describe CSMPoolGD_Srce (buffer source)              */         
/*********************************************************************/         
                                                                                
const int CSMPoolGD_SrceECSA = 0x80;    /* Indicates source is                  
                                           CSM ECSA                  */         
const int CSMPoolGD_SrceDS   = 0x40;    /* Indicates source is                  
                                           CSM DS                    */         
                                                                                
/*********************************************************************/         
/* Constants for Triplet counts for the various records              */         
/*********************************************************************/         
const int CSMPoolG_TripletCnt = 1;  /* CSM Pool Global record has               
                                       one triplet                   */         
const int CSMSummG_TripletCnt = 1;  /* CSM Summary Global record has            
                                       one triplet                   */         
const int CSMStorO_TripletCnt = 1;  /* CSM Storage Owner record has             
                                       one triplet               @F1A*/         
                                                                                
#ifdef __cplusplus                                                              
      }   /* extern "C" */                                                      
#endif                                                                          
                                                                                
#pragma pack(reset)                 /* Return to prior alignment     */         
                                                                                
#endif   /* __istcsmgc_h */                                                     
                                                                                
