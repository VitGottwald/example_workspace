*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4MXFR                              -09/17/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitoring environment transfer               * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2013                               * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to reflect that the delay       * 00002100
*      information for a work request may now also reside in a        * 00002200
*      dependent monitoring environment (CONTINUE) OR that delay      * 00002300
*      information is no longer present in a dependent monitoring     * 00002400
*      environment (RETURN).                                          * 00002500
*                                                                     * 00002600
*      The two monitoring environments referred to above must be      * 00002700
*      related by a previous IWM4MRLT invocation.  This service       * 00002800
*      requires as input the monitoring token for the dependent       * 00002900
*      environment, which is accessed, but the parent environment     * 00003000
*      must also be updated.  This implies that the user must have    * 00003100
*      addressability and update access to the parent monitoring      * 00003200
*      environment.  PARENTKEYP and PARENTENV keywords are provided   * 00003300
*      to accommodate these requirements.  These restrictions apply   * 00003400
*      even when the Relate was performed using the FINDACTIVE        * 00003500
*      option, though when the monitoring environment is related to   * 00003600
*      the address space characteristics, no key or addressability    * 00003700
*      requirements exist beyond those for the dependent monitoring   * 00003800
*      environment.                                                   * 00003900
*                                                                     * 00004000
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00004100
*                                                                     * 00004200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004300
*                                                                     * 00004400
*01* ENVIRONMENT:                                                     * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*      Dispatchable unit mode: Task or SRB mode.                      * 00004800
*                                                                     * 00004900
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005000
*                                                                     * 00005100
*      Minimum authorization:                                         * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                        o   Either problem state or supervisor       * 00005500
*                            state.                                   * 00005600
*                                                                     * 00005700
*                        o   PSW key must either be 0 or match the    * 00005800
*                            value supplied on IWM4MCRE for the       * 00005900
*                            (dependent) monitoring token.            * 00006000
*                                                                     * 00006100
*                        o   PARENTKEYP(VALUE) may only be specified  * 00006200
*                            in supervisor state or with PKM          * 00006300
*                            authority to the key specified by        * 00006400
*                            PARENTKEY.  Note that the key for        * 00006500
*                            IWM4MXFR is located in bit positions 0-3 * 00006600
*                            (using 0 origin), which is the machine   * 00006700
*                            orientation to keeping keys, not the     * 00006800
*                            "natural" way of declaring the key       * 00006900
*                            value.                                   * 00007000
*                                                                     * 00007100
*                        o   PARENTKEYP(UNKNOWN) may only be          * 00007200
*                            specified in supervisor state or with    * 00007300
*                            PKM authority to key 0.                  * 00007400
*                                                                     * 00007500
*                        o   When PARENTKEYP(PSWKEY) is specified,    * 00007600
*                            the PSW key must either be 0 or match    * 00007700
*                            the value supplied on IWM4MCRE for the   * 00007800
*                            parent monitoring environment.           * 00007900
*                                                                     * 00008000
*                        o   If FUNCTION=RETURN is specified and the  * 00008100
*                            passed delay monitoring token is         * 00008200
*                            associated with an ARM work request      * 00008300
*                            (EWLM=YES was specified on IWMCONN and   * 00008400
*                            the monitoring environvironment was      * 00008500
*                            created using that CONNTKN), the caller  * 00008600
*                            must be in supervisor state or have PKM  * 00008700
*                            authority to key 0.                      * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00009200
*                        mode, code SYSSTATE AMODE64=YES before       * 00009300
*                        invoking this macro.                         * 00009400
*                                                                     * 00009500
*      ASC mode:         Primary.                                     * 00009600
*                                                                     * 00009700
*      Interrupt status: Enabled for I/O and external interrupts.     * 00009800
*                                                                     * 00009900
*      Locks:            No locks held.                               * 00010000
*                                                                     * 00010100
*      Control parameters: Control parameters must be in the primary  * 00010200
*                        address space.                               * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*01* PROGRAMMING REQUIREMENTS:                                        * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*    1.  The macro IWMYCON must be included to use this macro.        * 00011000
*                                                                     * 00011100
*    2.  The macro IWMPB must be in the library concatenation, since  * 00011200
*        it is included by IWMYCON.                                   * 00011300
*                                                                     * 00011400
*    3.  Note that the high order halfword of register 0, and the     * 00011500
*        reason code variable when specified, may be non-zero and     * 00011600
*        represents diagnostic data which is NOT part of the external * 00011700
*        interface.  The high order halfword should thus be excluded  * 00011800
*        from comparison with the reason code values described above. * 00011900
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00012000
*        be used for this purpose.                                    * 00012100
*                                                                     * 00012200
*    4.  Note that specification of FUNCTION(CONTINUE) produces an    * 00012300
*        inline expansion rather than an out-of-line service.         * 00012400
*        Registers 0, 1, 14, and 15 are not preserved across the      * 00012500
*        expansion.  In the PL/AS form, Register 2 is also destroyed  * 00012600
*        when BOTH PARENTENV(SECONDARY) and RUNTIME_VER(SHORT_FORM)   * 00012700
*        are specified (the latter may be defaulted).                 * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*01* RESTRICTIONS:                                                    * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*    1.  This macro may not be used prior to the completion of WLM    * 00013500
*        address space initialization                                 * 00013600
*                                                                     * 00013700
*    2.  If the key specified on IWM4MCRE for the dependent           * 00013800
*        monitoring environment was a user key (8-F), then primary    * 00013900
*        addressability must exist to the performance block IWM4MCRE  * 00014000
*        obtained.  This condition is satisfied by ensuring that      * 00014100
*        current primary matches primary at the time that IWM4MCRE    * 00014200
*        was invoked.  If this service is invoked in a subspace, the  * 00014300
*        condition may be satisfied by ensuring that the performance  * 00014400
*        block is shared with the base space.                         * 00014500
*                                                                     * 00014600
*    3.  If the key specified on IWM4MCRE for the parent environment  * 00014700
*        was a user key (8-F), then either primary OR secondary       * 00014800
*        addressability must exist to the performance block for the   * 00014900
*        parent environment.                                          * 00015000
*                                                                     * 00015100
*    4.  When FUNCTION(CONTINUE!RETURN) are used, the caller is       * 00015200
*        responsible for error recovery                               * 00015300
*                                                                     * 00015400
*    5.  When FUNCTION(CONTINUE) is used, the caller is responsible   * 00015500
*        to ensure that the parent monitoring environment does not    * 00015600
*        already have a continuation (via a previous IWM4MXFR or      * 00015700
*        IWM4MSWC) to another (or other) dependent monitoring         * 00015800
*        environment(s).                                              * 00015900
*                                                                     * 00016000
*    6.  Both monitoring environments must be established on the same * 00016100
*        MVS image.                                                   * 00016200
*                                                                     * 00016300
*    7.  The caller must serialize to prevent any delay monitoring    * 00016400
*        services from being invoked concurrently for the dependent   * 00016500
*        monitoring environment.                                      * 00016600
*                                                                     * 00016700
*    8.  The caller and/or the owner of the parent environment must   * 00016800
*        ensure that parent environment is not deleted while between  * 00016900
*        the time that IWM4MXFR FUNCTION(CONTINUE) is used and the    * 00017000
*        time that either IWM4MXFR FUNCTION(RETURN) is used against   * 00017100
*        the dependent monitoring environment OR IWM4MSWC             * 00017200
*        FUNCTION(RETURN) is used against the parent monitoring       * 00017300
*        environment.                                                 * 00017400
*                                                                     * 00017500
*    9.  Only limited validity checking is done on the input          * 00017600
*        monitoring tokens.                                           * 00017700
*                                                                     * 00017800
*    10. This macro may only be used on z/OS V2R1 or higher.          * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*01* INPUT REGISTER INFORMATION:                                      * 00018300
*                                                                     * 00018400
*    Before issuing the IWM4MXFR macro, the caller does not have to   * 00018500
*    place any information into any register unless using it in       * 00018600
*    register notation for a particular parameter, or using it as a   * 00018700
*    base register.                                                   * 00018800
*                                                                     * 00018900
*    The following general purpose registers (GPRs) have to contain   * 00019000
*    the specified information:                                       * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*    REGISTER  CONTENTS                                               * 00019400
*                                                                     * 00019500
*    13        The address of a 216-byte standard save area in the    * 00019600
*              primary address space.                                 * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*01* OUTPUT REGISTER INFORMATION:                                     * 00020100
*                                                                     * 00020200
*    When control returns to the caller, the GPRs contain:            * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*    REGISTER  CONTENTS                                               * 00020600
*                                                                     * 00020700
*    0         Reason code if GR15 return code is non-zero            * 00020800
*                                                                     * 00020900
*    1         Used as work registers by the system                   * 00021000
*                                                                     * 00021100
*    2-13      Unchanged                                              * 00021200
*                                                                     * 00021300
*    14        Used as work registers by the system                   * 00021400
*                                                                     * 00021500
*    15        Return code                                            * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*    When control returns to the caller, the ARs contain:             * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*    REGISTER  CONTENTS                                               * 00022300
*                                                                     * 00022400
*    0-1       Used as work registers by the system                   * 00022500
*                                                                     * 00022600
*    2-13      Unchanged                                              * 00022700
*                                                                     * 00022800
*    14-15     Used as work registers by the system                   * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*    Some callers depend on register contents remaining the same      * 00023300
*    before and after issuing a service.  If the system changes the   * 00023400
*    contents of registers on which the caller depends, the caller    * 00023500
*    must save them before issuing the service, and restore them      * 00023600
*    after the system returns control.                                * 00023700
*                                                                     * 00023800
*01* PERFORMANCE IMPLICATIONS:                                        * 00023900
*                                                                     * 00024000
*    None                                                             * 00024100
*                                                                     * 00024200
*01* SYNTAX:                                                          * 00024300
*                                                                     * 00024400
*Ýxlabel¨  IWM4MXFR  Ð  FUNCTION=CONTINUE                             * 00024500
*                    !   ÐÝ,RUNTIME_VER=SHORT_FORM¨                   * 00024600
*                    !   ¿Ý,RUNTIME_VER=MINIMAL¨                      * 00024700
*                    ¿ ,FUNCTION=RETURN                               * 00024800
*                        ÐÝ,RUNTIME_VER=SHORT_FORM¨                   * 00024900
*                        ¿Ý,RUNTIME_VER=MINIMAL¨                      * 00025000
*                         Ý,WORKREQ_STA                               * 00025100
*                                       =»xworkreq_sta!IWMEWLMARMSTAT * 00025200
*                                       USNONEº¨                      * 00025300
*                    Ð ,MONTKN=xmontkn                                * 00025400
*                    ¿ ,MONTKN64=xmontkn64                            * 00025500
*                    Ð ,PARENTKEYP=VALUE                              * 00025600
*                    !     ,PARENTKEY=xparentkey                      * 00025700
*                    Ô ,PARENTKEYP=PSWKEY                             * 00025800
*                    ¿ ,PARENTKEYP=UNKNOWN                            * 00025900
*                    Ð ,PARENTENV=NOSWITCH                            * 00026000
*                    ¿ ,PARENTENV=SECONDARY                           * 00026100
*                     Ý,EWLM=»NOº¨                                    * 00026200
*                    ÐÝ,COMPCODE=YES¨                                 * 00026300
*                    ¿Ý,COMPCODE=NO¨                                  * 00026400
*                     Ý,RETCODE=xretcode¨                             * 00026500
*                     Ý,RSNCODE=xrsncode¨                             * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*      Where:                                                         * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*      Ýxlabel¨                                                       * 00027200
*          is an optional symbol, starting in column 1, that is the   * 00027300
*          name on the IWM4MXFR macro invocation.  The name must      * 00027400
*          conform to the rules for an ordinary assembler language    * 00027500
*          symbol.                                                    * 00027600
*          DEFAULT: No name.                                          * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*      FUNCTION=»CONTINUE!RETURNº                                     * 00028200
*          is a required keyword input which indicates whether the    * 00028300
*          dependent environment is continuing from or returning to   * 00028400
*          the parent environment.                                    * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*          FUNCTION=CONTINUE                                          * 00028800
*              indicates that this is a unique continuation of the    * 00028900
*              work request which is reflected in the dependent       * 00029000
*              monitoring environment.                                * 00029100
*                                                                     * 00029200
*              Note that the parent environment may continue to be    * 00029300
*              active on behalf of the work request.                  * 00029400
*                                                                     * 00029500
*              Note that specification of FUNCTION(CONTINUE) produces * 00029600
*              an inline expansion rather than an out-of-line         * 00029700
*              service.  Registers 0, 1, 14, and 15 are not preserved * 00029800
*              across the expansion.                                  * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*              ÝRUNTIME_VER=»SHORT_FORM!MINIMALº¨                     * 00030200
*                  is an optional keyword input which indicates what  * 00030300
*                  level of runtime verification will be performed.   * 00030400
*                  DEFAULT: SHORT_FORM                                * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                  ÝRUNTIME_VER=SHORT_FORM¨                           * 00030800
*                      indicates that checking should verify that a   * 00030900
*                      monitoring environment is established and      * 00031000
*                      passes a short form of verification prior to   * 00031100
*                      being used.                                    * 00031200
*                                                                     * 00031300
*                  ÝRUNTIME_VER=MINIMAL¨                              * 00031400
*                      indicates that checking will only be done to   * 00031500
*                      verify that a monitoring environment may be    * 00031600
*                      established, assuming that it would be valid   * 00031700
*                      and useable if established.                    * 00031800
*                      DEFAULT: SHORT_FORM indicates that short form  * 00031900
*                      checking is desired.                           * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*          FUNCTION=RETURN                                            * 00032600
*              indicates that the work request is returning to a      * 00032700
*              previously established parent monitoring environment.  * 00032800
*                                                                     * 00032900
*              Use of this option indicates that the dependent        * 00033000
*              environment no longer represents the work request.     * 00033100
*                                                                     * 00033200
*              Note that specification of FUNCTION(RETURN) produces   * 00033300
*              an inline expansion rather than an out-of-line         * 00033400
*              service.  Registers 0, 1, 14, and 15 are not preserved * 00033500
*              across the expansion.                                  * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*              ÝRUNTIME_VER=»SHORT_FORM!MINIMALº¨                     * 00033900
*                  is an optional keyword input which indicates what  * 00034000
*                  level of runtime verification will be performed.   * 00034100
*                  DEFAULT: SHORT_FORM                                * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                  ÝRUNTIME_VER=SHORT_FORM¨                           * 00034500
*                      indicates that checking should verify that a   * 00034600
*                      monitoring environment is established and      * 00034700
*                      passes a short form of verification prior to   * 00034800
*                      being used.                                    * 00034900
*                                                                     * 00035000
*                  ÝRUNTIME_VER=MINIMAL¨                              * 00035100
*                      indicates that checking will only be done to   * 00035200
*                      verify that a monitoring environment may be    * 00035300
*                      established, assuming that it would be valid   * 00035400
*                      and useable if established.                    * 00035500
*                      DEFAULT: SHORT_FORM indicates that short form  * 00035600
*                      checking is desired.                           * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*              ÝWORKREQ_STA=»xworkreq_sta!IWMEWLMARMSTATUSNONEº¨      * 00036400
*                  is the name (RS-type), or address in register      * 00036500
*                  (2)-(12), of an optional fullword input which      * 00036600
*                  contains the completion status code of the work    * 00036700
*                  request.  Available completion status codes        * 00036800
*                  (defined in macro IWMYCON) are:                    * 00036900
*                  * IwmEwlmArmStatusGood(0),                         * 00037000
*                  * IwmEwlmArmStatusAborted(1),                      * 00037100
*                  * IwmEwlmArmStatusFailed(2) or                     * 00037200
*                  * IwmEwlmArmStatusUnknown(3)                       * 00037300
*                  The codes above correspond to status codes in the  * 00037400
*                  OpenGroup ARM 4.0 Standard (for the meaning of the * 00037500
*                  status codes see the ARM 4.0 Standard at           * 00037600
*                  http://www.opengroup.org/management/arm).          * 00037700
*                                                                     * 00037800
*                  DEFAULT: IWMEWLMARMSTATUSNONE                      * 00037900
*                  indicates that internal information in the         * 00038000
*                  Monitoring Environment will be examined to         * 00038100
*                  determine the status of the work request: if no    * 00038200
*                  abnormal event was recorded for the monitoring     * 00038300
*                  environment via the IWM4MABN service, the          * 00038400
*                  completion status IwmEwlmArmStatusGood will be     * 00038500
*                  reported to EWLM. If an abnormal event was         * 00038600
*                  reported via IWM4MABN, the completion status       * 00038700
*                  IwmEwlmArmStatusFailed will be reported to EWLM.   * 00038800
*                                                                     * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*      The following is a set of mutually exclusive keys.  This set   * 00039700
*      is required; only one key must be specified.                   * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*      MONTKN=xmontkn                                                 * 00040100
*          belongs to a set of mutually exclusive keys. It is the     * 00040200
*          name (RS-type), or address in register (2)-(12), of a 32   * 00040300
*          bit input which contains the delay monitoring token for    * 00040400
*          the dependent environment.                                 * 00040500
*                                                                     * 00040600
*      MONTKN64=xmontkn64                                             * 00040700
*          belongs to a set of mutually exclusive keys. It is the     * 00040800
*          name (RS-type), or address in register (2)-(12), of a 64   * 00040900
*          bit input which contains the long delay monitoring token   * 00041000
*          for the dependent environment.                             * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*      End of a set of mutually exclusive required keys.              * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*      PARENTKEYP=»VALUE!PSWKEY!UNKNOWNº                              * 00041900
*          is a required keyword input which describes whether a key  * 00042000
*          switch is needed to access the parent monitoring           * 00042100
*          environment.                                               * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*          PARENTKEYP=VALUE                                           * 00042500
*                                                                     * 00042600
*              indicates that the key is being passed explicitly via  * 00042700
*              PARENTKEY.                                             * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*              PARENTKEY=xparentkey                                   * 00043100
*                  is the name (RS-type), or address in register      * 00043200
*                  (2)-(12), of a required 8 bit input which contains * 00043300
*                  the key in which the parent monitoring environment * 00043400
*                  must be accessed.  Use of this keyword value       * 00043500
*                  requires that the invoker be in supervisor state   * 00043600
*                  or that the caller have PKM authority to the key   * 00043700
*                  specified.  The high order 4 bits (i.e. bits 0-3)  * 00043800
*                  contain the key value.                             * 00043900
*                                                                     * 00044000
*                  Note that this is different from the "natural" way * 00044100
*                  of declaring the key, and uses the machine         * 00044200
*                  orientation for keeping the storage key in the     * 00044300
*                  high order bits.                                   * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*          PARENTKEYP=PSWKEY                                          * 00044800
*                                                                     * 00044900
*              indicates that the current PSW key should be used.     * 00045000
*              Use of this keyword value requires that the parent     * 00045100
*              monitoring environment was established with the same   * 00045200
*              key as the current PSW.                                * 00045300
*                                                                     * 00045400
*          PARENTKEYP=UNKNOWN                                         * 00045500
*                                                                     * 00045600
*              indicates that the key associated with the parent      * 00045700
*              monitoring environment is unknown.  Use of this        * 00045800
*              keyword value requires that the invoker be in          * 00045900
*              supervisor state or that the caller have PKM authority * 00046000
*              to key 0.                                              * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*      PARENTENV=»NOSWITCH!SECONDARYº                                 * 00046800
*          is a required keyword input which describes whether a      * 00046900
*          space switch is needed to access the parent monitoring     * 00047000
*          environment.                                               * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*          PARENTENV=NOSWITCH                                         * 00047400
*                                                                     * 00047500
*              indicates that NO space switch is needed to access the * 00047600
*              parent monitoring environment.  This would be          * 00047700
*              appropriate if the parent monitoring environment was   * 00047800
*              established (by IWM4MCRE) to be used by routines in a  * 00047900
*              specific system key or if it was established to be     * 00048000
*              used in a specific user key in the current primary.    * 00048100
*                                                                     * 00048200
*          PARENTENV=SECONDARY                                        * 00048300
*                                                                     * 00048400
*              indicates that the parent monitoring environment was   * 00048500
*              established in current secondary (for use by a         * 00048600
*              specific user key).                                    * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*                                                                     * 00049300
*      ÝEWLM=»NOº¨                                                    * 00049400
*          is an optional keyword input which indicates if this work  * 00049500
*          manager intents to participate in cross platform           * 00049600
*          Enterprise Workload Management (eWLM).                     * 00049700
*          DEFAULT: NO                                                * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*          EWLM=NO                                                    * 00050100
*              The work manager interacts only with WLM and no        * 00050200
*              interaction with eWLM takes place.                     * 00050300
*              DEFAULT: NO                                            * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*      ÝCOMPCODE=»YES!NOº¨                                            * 00051100
*          is an optional keyword input which indicates whether       * 00051200
*          completion status for this service is needed.              * 00051300
*          DEFAULT: YES                                               * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*          ÝCOMPCODE=YES¨                                             * 00051700
*              indicates that completion status is needed.            * 00051800
*                                                                     * 00051900
*          ÝCOMPCODE=NO¨                                              * 00052000
*              indicates that completion status is not needed.        * 00052100
*              Registers 0, 15 cannot be used as reason code and      * 00052200
*              return code registers upon completion of the macro     * 00052300
*              expansion. For this reason neither RETCODE NOR RSNCODE * 00052400
*              may be specified when COMPCODE(NO) is specified.       * 00052500
*              DEFAULT: YES indicates that completion status is       * 00052600
*              needed.                                                * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*      ÝRETCODE=xretcode¨                                             * 00053400
*          is the name (RS-type) of an optional fullword output       * 00053500
*          variable, or register (2)-(12) or (15), into which the     * 00053600
*          return code is to be copied from GPR 15.  If you specify   * 00053700
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00053800
*          the value will be left in GPR 15.                          * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*      ÝRSNCODE=xrsncode¨                                             * 00054400
*          is the name (RS-type) of an optional fullword output       * 00054500
*          variable into which the reason code is to be copied from   * 00054600
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00054700
*          R0 (within or without parentheses), the value will be left * 00054800
*          in GPR 0.                                                  * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*01* ABEND CODES:  None.                                              * 00055300
*                                                                     * 00055400
*01* RETURN CODES:                                                    * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*            0    Name: IwmRetCodeOk                                  * 00055800
*                                                                     * 00055900
*                 Meaning: Successful completion.                     * 00056000
*                                                                     * 00056100
*                 Action: None required.                              * 00056200
*                                                                     * 00056300
*            4    Name: IwmRetCodeWarning                             * 00056400
*                                                                     * 00056500
*                 Meaning: Successful completion, unusual conditions  * 00056600
*                 noted.                                              * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*                 HEX REASON  MEANING/ACTION                          * 00057000
*                 CODE                                                * 00057100
*                                                                     * 00057200
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00057300
*                                                                     * 00057400
*                             Meaning:  Input monitoring token        * 00057500
*                             indicates no monitoring environment was * 00057600
*                             established.                            * 00057700
*                                                                     * 00057800
*                             Action: None required.                  * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*            8    Name: IwmRetCodeInvocError                          * 00058300
*                                                                     * 00058400
*                 Meaning: Invalid invocation environment or          * 00058500
*                 parameters.                                         * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*                 HEX REASON  MEANING/ACTION                          * 00058900
*                 CODE                                                * 00059000
*                                                                     * 00059100
*                 xxxx081F    Name: IwmRsnCodeNoRelate                * 00059200
*                                                                     * 00059300
*                             Meaning:  NO Parent environment exists  * 00059400
*                             since Relate Function(Continue) has not * 00059500
*                             been performed or has not been          * 00059600
*                             performed subsequent to a Relate        * 00059700
*                             Function(Delete).                       * 00059800
*                                                                     * 00059900
*                             Action: Check for possible storage      * 00060000
*                             overlay and whether Relate              * 00060100
*                             Function(Continue) has been used        * 00060200
*                             properly.                               * 00060300
*                                                                     * 00060400
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00060500
*                                                                     * 00060600
*                             Meaning:  Monitoring environment does   * 00060700
*                             not pass verification.                  * 00060800
*                                                                     * 00060900
*                 xxxx0822    IwmRsnCodeBadParEnv:  Parent monitoring * 00061000
*                             environment does not pass verification. * 00061100
*                                                                     * 00061200
*                             Action: Check for possible storage      * 00061300
*                             overlay.                                * 00061400
*                                                                     * 00061500
*                 xxxx0895    Name: IwmRsnCodeEWLMServNotEnabled      * 00061600
*                                                                     * 00061700
*                             Meaning: Service is not enabled because * 00061800
*                             monitoring environment can not be       * 00061900
*                             associated with EWLM work requests.     * 00062000
*                                                                     * 00062100
*                             Action: Specify the parameter           * 00062200
*                             WORKREQ_STA only when the monitoring    * 00062300
*                             environment is created with IWM4MCRE    * 00062400
*                             EWLM=YES or the address space is        * 00062500
*                             connected with IWMCONN EWLM=YES and the * 00062600
*                             connect token is passed to IWM4MCRE     * 00062700
*                             when creating the monitoring            * 00062800
*                             environment.                            * 00062900
*                                                                     * 00063000
*                 xxxx0897    Name: IwmRsnCodeTranStatusInvalid       * 00063100
*                                                                     * 00063200
*                             Meaning: Passed work request completion * 00063300
*                             status is not valid.                    * 00063400
*                                                                     * 00063500
*                             Action: Check the EWLM ARM interface    * 00063600
*                             specification for valid completion      * 00063700
*                             status values.                          * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*01* REASON CODES:                                                    * 00064400
*                                                                     * 00064500
*       A unique reason code will be returned whenever the return     * 00064600
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00064700
*       under their corresponding return code.  Reason code and       * 00064800
*       return code constants are defined within IWMYCON.  Note that  * 00064900
*       the high order halfword of register 0, and the reason code    * 00065000
*       variable when specified, may be non-zero and represents       * 00065100
*       diagnostic data which is NOT part of the external interface.  * 00065200
*       The high order halfword should thus be excluded from          * 00065300
*       comparison with the reason code values described above.  The  * 00065400
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00065500
*       used for this purpose.                                        * 00065600
*                                                                     * 00065700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00065800
*                                                                     * 00065900
*02*   PROCESSOR:  ASSEM                                              * 00066000
*                                                                     * 00066100
*01* COMPONENT:  SCWLM                                                * 00066200
*                                                                     * 00066300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00066400
*                                                                     * 00066500
*01* EXAMPLES:                                                        * 00066600
*                                                                     * 00066700
*01* MACRO USAGE NOTES:                                               * 00066800
*                                                                     * 00066900
*                                                                     * 00067000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00067100
*        global macro variable.  Any value other than 'NO' will       * 00067200
*        result in the macro expansion being printed.  The default is * 00067300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00067400
*        variable should be set.                                      * 00067500
*                                                                     * 00067600
*                    GBLC &ZPRINT                                     * 00067700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00067800
*                                                                     * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*01* CHANGE ACTIVITY:                                                 * 00068200
*                                                                     * 00068300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00068400
*                                                                     * 00068500
*    $L0=LPBABV   HBB7790 120520 3241DW:  Initial version PB above 2G * 00068600
*    $P0=ME24836  HBB7790 120927 3241DW:  G64R00F declaration missing * 00068700
*    $P1=ME24923  HBB7790 121016 3241AH:  Fix SYSAM64 logic           * 00068800
*    $P2=ME25096  HBB7790 121112 3241DW:  MONTKN not corrected ANDed  * 00068900
*                                         prior assignment            * 00069000
*    $P3=ME25540  HBB7790 130122 3241DW:  Literal not accessible in   * 00069100
*                                         AMODE 64                    * 00069200
*    $P4=OA47042  HBB7790 150306 3241IS:  G64R14P not unrestricted    * 00069300
*                                         for EWLM=NO                 * 00069400
*    $P5=WI272457 HBB77C0 180904 3241DW:  Wrong parent environment    * 00069500
*                                         check                       * 00069600
****** END OF SPECIFICATIONS *****************************************/ 00069700
*/********************************************************************* 00069800
         MACRO                                                          00069900
&XLABEL  IWM4MXFR &FUNCTION=,&RUNTIME_VER=,&WORKREQ_STA=,&MONTKN=,     *00070000
               &MONTKN64=,&PARENTKEYP=,&PARENTKEY=,&PARENTENV=,&EWLM=, *00070100
               &COMPCODE=,&RETCODE=,&RSNCODE=                           00070200
.*                                                                      00070300
*                 MACDATE -09/17/18-<0>                                 00070400
.*                                                                      00070500
.*******************************************************************    00070600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00070700
.*******************************************************************    00070800
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00070900
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00071000
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00071100
.*                                                                      00071200
                 GBLC  &ZIWM4MXFR  YES=MACRO USED AT LEAST ONCE         00071300
.*******************************************************************    00071400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00071500
.*******************************************************************    00071600
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00071700
                 LCLC  &ZCNDX      SYSNDX CHARACTERS                    00071800
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00071900
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00072000
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00072100
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00072200
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00072300
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00072400
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00072500
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00072600
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00072700
                 LCLC  &ZMAC_G     "G" or null                          00072800
&ZMAC_G          SETC  ''                                               00072900
                 LCLC  &ZMAC_LR                                         00073000
&ZMAC_LR         SETC  'LR'                                             00073100
                 LCLC  &ZMAC_L                                          00073200
&ZMAC_L          SETC  'L'                                              00073300
                 LCLC  &ZMAC_ST                                         00073400
&ZMAC_ST         SETC  'ST'                                             00073500
                 LCLC  &ZMAC_LLGT                                       00073600
&ZMAC_LLGT       SETC  'L'                                              00073700
                 LCLC  &ZMAC_LGR                                        00073800
&ZMAC_LGR        SETC  'LR'                                             00073900
                 LCLC  &ZMAC_LG                                         00074000
&ZMAC_LG         SETC  'L'                                              00074100
                 LCLC  &ZMAC_STG                                        00074200
&ZMAC_STG        SETC  'ST'                                             00074300
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00074400
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00074500
.*                                                                      00074600
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00074700
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00074800
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00074900
                 LCLC  &ZENDBASEPL              End of base PL          00075000
.*******************************************************************    00075100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00075200
.*******************************************************************    00075300
                 LCLC  &XFUNCTION  ++ VALUE                             00075400
                 LCLC  &XRUNTIME_VER            ++ VALUE                00075500
                 LCLC  &XWORKREQ_STA            ++ NAME                 00075600
                 LCLC  &XUSEDMONTKNKEY          ++ NAME                 00075700
                 LCLC  &XMONTKN    ++ NAME                              00075800
                 LCLC  &XMONTKN64  ++ NAME                              00075900
                 LCLC  &XPARENTKEYP             ++ VALUE                00076000
                 LCLC  &XPARENTKEY              ++ NAME                 00076100
                 LCLC  &XPARENTENV              ++ VALUE                00076200
                 LCLC  &XEWLM      ++ VALUE                             00076300
                 LCLC  &XCOMPCODE  ++ VALUE                             00076400
                 LCLC  &XRETCODE   ++ NAME                              00076500
                 LCLC  &XRSNCODE   ++ NAME                              00076600
.*******************************************************************    00076700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00076800
.*******************************************************************    00076900
                 LCLC  &ZXFUNCTION              ++ INPUT VALUE          00077000
                 LCLC  &ZXRUNTIME_VER           ++ INPUT VALUE          00077100
                 LCLC  &ZXWORKREQ_STA           ++ INPUT NAME           00077200
                 LCLC  &ZXUSEDMONTKNKEY         ++ INPUT NAME           00077300
                 LCLC  &ZXMONTKN   ++ INPUT NAME                        00077400
                 LCLC  &ZXMONTKN64              ++ INPUT NAME           00077500
                 LCLC  &ZXPARENTKEYP            ++ INPUT VALUE          00077600
                 LCLC  &ZXPARENTKEY             ++ INPUT NAME           00077700
                 LCLC  &ZXPARENTENV             ++ INPUT VALUE          00077800
                 LCLC  &ZXEWLM     ++ INPUT VALUE                       00077900
                 LCLC  &ZXCOMPCODE              ++ INPUT VALUE          00078000
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00078100
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00078200
.********************************************************************   00078300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00078400
.********************************************************************   00078500
                 ACTR  10000                                            00078600
.*------------------------------------------------------------------    00078700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078800
&XFUNCTION       SETC  ''          INITIALIZE XVARIABLE                 00078900
.*-------------------------------------------------------------------   00079000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079100
.ZG3             ANOP  ,                                                00079200
                 AIF   (K'&FUNCTION(1) LE 0).ZG3A                       00079300
&ZTLC            SETC 'CONTINUE'                                        00079400
                 AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG9                  00079500
&XFUNCTION       SETC  'CONTINUE'  SET KEYWORD                          00079600
                 AIF   (N'&FUNCTION LE 1).ZG3A  CK NUM                  00079700
&ZMS             SETC  '"FUNCTION='                                     00079800
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00079900
&ZMS             SETC  '&ZMS "FUNCTION"'                                00080000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00080100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00080200
.ZG3A            ANOP  ,                                                00080300
.*------------------------------------------------------------------    00080400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00080500
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00080600
.ZG3A0           AIF   (K'&WORKREQ_STA LE 0).ZG3A1  OK                  00080700
&ZCVAL           SETC '&ZCVAL WORKREQ_STA'      INCORRECT KEY USED      00080800
.ZG3A1           AIF   (K'&ZCVAL LE 0).ZG3A2    OK                      00080900
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00081000
&ZMS             SETC  '"FUNCTION'                                      00081100
&ZMS             SETC  '&ZMS.=&FUNCTION"'                               00081200
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00081300
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00081400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00081500
.ZG3A2           ANOP  ,                                                00081600
.*------------------------------------------------------------------    00081700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081800
&XRUNTIME_VER    SETC  ''          INITIALIZE XVARIABLE                 00081900
.*-------------------------------------------------------------------   00082000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00082100
.ZG6             ANOP  ,                                                00082200
                 AIF   (K'&RUNTIME_VER(1) LE 0).ZG6A                    00082300
&ZTLC            SETC 'SHORT_FORM'                                      00082400
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG7               00082500
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET KEYWORD             00082600
                 AIF   (N'&RUNTIME_VER LE 1).ZG6A  CK NUM               00082700
&ZMS             SETC  '"RUNTIME_VER='                                  00082800
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00082900
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00083000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00083100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00083200
.ZG6A            ANOP  ,                                                00083300
.*-------------------------------------------------------------------   00083400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083500
.ZG7             ANOP  ,                                                00083600
&ZTLC            SETC 'MINIMAL'                                         00083700
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG8               00083800
&XRUNTIME_VER    SETC  'MINIMAL'   SET KEYWORD                          00083900
                 AIF   (N'&RUNTIME_VER LE 1).ZG7A  CK NUM               00084000
&ZMS             SETC  '"RUNTIME_VER='                                  00084100
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00084200
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00084300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00084400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00084500
.ZG7A            ANOP  ,                                                00084600
.*------------------------------------------------------------------    00084700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00084800
.ZG8             ANOP  ,                                                00084900
&ZXRUNTIME_VER   SETC  'INPUT'     SET IN/OUTPUT                        00085000
                 AIF   (K'&XRUNTIME_VER GT 0).ZG8E  VALID ARG           00085100
                 AIF   (T'&RUNTIME_VER EQ 'O').ZG8D  OMITTED            00085200
&ZASYSLNDX       SETA  0                                                00085300
.ZG8A            ANOP  ,           POSITIONAL MACRO KEY                 00085400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00085500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG8C                  00085600
&ZTLC            SETC 'RUNTIME_VER'                                     00085700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG8A         00085800
.ZG8B            ANOP  ,                                                00085900
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00086000
&ZMS             SETC  'THE "RUNTIME_VER" KEY'                          00086100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00086200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00086300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00086400
                 AGO   .ZG8E                                            00086500
.ZG8C            ANOP  ,                                                00086600
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00086700
&ZMS             SETC  '"RUNTIME_VER='                                  00086800
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00086900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00087000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00087100
&ZMS             SETC  '&ZMS "SHORT_FORM"'                              00087200
&ZMS             SETC  '&ZMS OR "MINIMAL".'                             00087300
                 MNOTE 8,' &ZMS '                                       00087400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00087500
                 AGO   .ZG8E                                            00087600
.ZG8D            ANOP  ,                                                00087700
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET DEFAULT KEYWORD     00087800
.ZG8E            ANOP  ,                                                00087900
.*-------------------------------------------------------------------   00088000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088100
.ZG9             ANOP  ,                                                00088200
&ZTLC            SETC 'RETURN'                                          00088300
                 AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG18                 00088400
&XFUNCTION       SETC  'RETURN'    SET KEYWORD                          00088500
                 AIF   (N'&FUNCTION LE 1).ZG9A  CK NUM                  00088600
&ZMS             SETC  '"FUNCTION='                                     00088700
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00088800
&ZMS             SETC  '&ZMS "FUNCTION"'                                00088900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00089000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00089100
.ZG9A            ANOP  ,                                                00089200
.*------------------------------------------------------------------    00089300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089400
&XRUNTIME_VER    SETC  ''          INITIALIZE XVARIABLE                 00089500
.*-------------------------------------------------------------------   00089600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089700
.ZG12            ANOP  ,                                                00089800
                 AIF   (K'&RUNTIME_VER(1) LE 0).ZG12A                   00089900
&ZTLC            SETC 'SHORT_FORM'                                      00090000
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG13              00090100
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET KEYWORD             00090200
                 AIF   (N'&RUNTIME_VER LE 1).ZG12A  CK NUM              00090300
&ZMS             SETC  '"RUNTIME_VER='                                  00090400
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00090500
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00090600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00090700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00090800
.ZG12A           ANOP  ,                                                00090900
.*-------------------------------------------------------------------   00091000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00091100
.ZG13            ANOP  ,                                                00091200
&ZTLC            SETC 'MINIMAL'                                         00091300
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG14              00091400
&XRUNTIME_VER    SETC  'MINIMAL'   SET KEYWORD                          00091500
                 AIF   (N'&RUNTIME_VER LE 1).ZG13A  CK NUM              00091600
&ZMS             SETC  '"RUNTIME_VER='                                  00091700
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00091800
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00091900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00092000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00092100
.ZG13A           ANOP  ,                                                00092200
.*------------------------------------------------------------------    00092300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092400
.ZG14            ANOP  ,                                                00092500
&ZXRUNTIME_VER   SETC  'INPUT'     SET IN/OUTPUT                        00092600
                 AIF   (K'&XRUNTIME_VER GT 0).ZG14E  VALID ARG          00092700
                 AIF   (T'&RUNTIME_VER EQ 'O').ZG14D  OMITTED           00092800
&ZASYSLNDX       SETA  0                                                00092900
.ZG14A           ANOP  ,           POSITIONAL MACRO KEY                 00093000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00093100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG14C                 00093200
&ZTLC            SETC 'RUNTIME_VER'                                     00093300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG14A        00093400
.ZG14B           ANOP  ,                                                00093500
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00093600
&ZMS             SETC  'THE "RUNTIME_VER" KEY'                          00093700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00093800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00093900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00094000
                 AGO   .ZG14E                                           00094100
.ZG14C           ANOP  ,                                                00094200
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00094300
&ZMS             SETC  '"RUNTIME_VER='                                  00094400
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00094500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00094600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00094700
&ZMS             SETC  '&ZMS "SHORT_FORM"'                              00094800
&ZMS             SETC  '&ZMS OR "MINIMAL".'                             00094900
                 MNOTE 8,' &ZMS '                                       00095000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00095100
                 AGO   .ZG14E                                           00095200
.ZG14D           ANOP  ,                                                00095300
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET DEFAULT KEYWORD     00095400
.ZG14E           ANOP  ,                                                00095500
.*----------------------------------------------------------------***   00095600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00095700
                 AIF   (N'&WORKREQ_STA LE 1).ZG16A  CK NUM              00095800
&ZMS             SETC  '"WORKREQ_STA='                                  00095900
&ZMS             SETC  '&ZMS.&WORKREQ_STA"'                             00096000
&ZMS             SETC  '&ZMS "WORKREQ_STA"'                             00096100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00096200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00096300
.ZG16A           ANOP  ,                                                00096400
.*-------------------------------------------------------------------   00096500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00096600
&ZXWORKREQ_STA   SETC  'INPUT'     SET IN/OUTPUT                        00096700
&XWORKREQ_STA    SETC  'IWMEWLMARMSTATUSNONE'                           00096800
                 AIF   (K'&WORKREQ_STA(1) LE 0).ZG16B  PARM             00096900
&XWORKREQ_STA    SETC  '&WORKREQ_STA(1)'        SET XVARIABLE           00097000
                 AIF   (N'&WORKREQ_STA GT 1).ZG16B  MULTI               00097100
&XWORKREQ_STA    SETC  '&WORKREQ_STA'           SET XVARIABLE           00097200
.ZG16B           ANOP  ,                                                00097300
.*-------------------------------------------------------------------   00097400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00097500
                 AIF   (K'&ZXWORKREQ_STA LE 0).ZG16R  NOT I/O           00097600
         AIF   ('&XWORKREQ_STA' EQ 'IWMEWLMARMSTATUSNONE').ZG16R        00097700
                 AIF   ('&XWORKREQ_STA'(1,1) NE '(').ZG16R              00097800
&ZCGPR           SETC  '&XWORKREQ_STA'(2,K'&XWORKREQ_STA-2)             00097900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                     00098000
                 AIF   (K'&ZCGPR GT 2).ZG16Q                            00098100
                 AIF   ('&ZCGPR' EQ '0').ZG16Q                          00098200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00098300
                 AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME        00098400
.ZG16P           ANOP  ,                                                00098500
                 AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC             00098600
                 AIF   ('&ZCGPR' LT '2').ZG16Q                          00098700
                 AIF   ('&ZCGPR' LE '12').ZG16R                         00098800
.ZG16Q           ANOP  ,                                                00098900
&ZMS             SETC  '"WORKREQ_STA='                                  00099000
&ZMS             SETC  '&ZMS.&WORKREQ_STA"'                             00099100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00099200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00099300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00099400
.ZG16R           ANOP  ,                                                00099500
.*------------------------------------------------------------------    00099600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00099700
.ZG18            ANOP  ,                                                00099800
&ZXFUNCTION      SETC  'INPUT'     SET IN/OUTPUT                        00099900
                 AIF   (K'&XFUNCTION GT 0).ZG18E  VALID ARG             00100000
                 AIF   (T'&FUNCTION EQ 'O').ZG18D  OMITTED              00100100
&ZASYSLNDX       SETA  0                                                00100200
.ZG18A           ANOP  ,           POSITIONAL MACRO KEY                 00100300
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00100400
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG18C                 00100500
&ZTLC            SETC 'FUNCTION'                                        00100600
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG18A        00100700
.ZG18B           ANOP  ,                                                00100800
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00100900
&ZMS             SETC  'THE "FUNCTION" KEY'                             00101000
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00101100
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00101200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00101300
                 AGO   .ZG18E                                           00101400
.ZG18C           ANOP  ,                                                00101500
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00101600
&ZMS             SETC  '"FUNCTION='                                     00101700
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00101800
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00101900
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00102000
&ZMS             SETC  '&ZMS "CONTINUE"'                                00102100
&ZMS             SETC  '&ZMS OR "RETURN".'                              00102200
                 MNOTE 8,' &ZMS '                                       00102300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00102400
                 AGO   .ZG18E                                           00102500
.ZG18D           ANOP  ,                                                00102600
&XFUNCTION       SETC  'CONTINUE'  SET DEFAULT KEYWORD                  00102700
.ZG18E           ANOP  ,                                                00102800
.*------------------------------------------------------------------    00102900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00103000
                 AIF   (K'&FUNCTION(1) GT 0).ZG18F  PARM                00103100
&XFUNCTION       SETC  ''          ENSURE NULL KEYWORD                  00103200
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00103300
&ZMS             SETC  'THE'                                            00103400
&ZMS             SETC  '&ZMS "FUNCTION" KEY AND ITS'                    00103500
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00103600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00103700
&ZMS             SETC  '&ZMS "CONTINUE"'                                00103800
&ZMS             SETC  '&ZMS OR "RETURN".'                              00103900
                 MNOTE 8,' &ZMS '                                       00104000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00104100
.ZG18F           ANOP  ,                                                00104200
.*----------------------------------------------------------------***   00104300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00104400
&XUSEDMONTKNKEY  SETC  ''          INITIALIZE XVARIABLE                 00104500
                 AIF   (K'&MONTKN LE 0).ZG20C                           00104600
&ZXUSEDMONTKNKEY                   SETC  'INPUT'  SET IN/OUTPUT         00104700
&XUSEDMONTKNKEY  SETC  'MONTKN'    SET XVARIABLE                        00104800
&ZXMONTKN        SETC  'INPUT'     SET IN/OUTPUT                        00104900
&XMONTKN         SETC  '&MONTKN(1)'             SET XVARIABLE PARM      00105000
                 AIF   (N'&MONTKN GT 1).ZG20A                           00105100
&XMONTKN         SETC  '&MONTKN'   SET XVARIABLE PARM                   00105200
.ZG20A           AIF   (N'&MONTKN LE 1).ZG20B   CK NUM                  00105300
&ZMS             SETC  '"MONTKN='                                       00105400
&ZMS             SETC  '&ZMS.&MONTKN"'                                  00105500
&ZMS             SETC  '&ZMS "MONTKN"'                                  00105600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00105700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00105800
.ZG20B           AIF   (K'&XMONTKN GT 0).ZG20C  ONE PARM                00105900
&ZXUSEDMONTKNKEY                   SETC  ''     RESET IN/OUTPUT         00106000
&ZXMONTKN        SETC  ''          RESET IN/OUTPUT                      00106100
&ZMS             SETC  ' '                                              00106200
&ZMS             SETC  '&ZMS "MONTKN" KEY AND ITS'                      00106300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00106400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00106500
.ZG20C           ANOP  ,                                                00106600
.*----------------------------------------------------------------***   00106700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00106800
                 AIF   (K'&MONTKN64 LE 0).ZG21D  NO ME KEY              00106900
                 AIF   (N'&MONTKN64 LE 1).ZG21A  CK NUM                 00107000
&ZMS             SETC  '"MONTKN64='                                     00107100
&ZMS             SETC  '&ZMS.&MONTKN64"'                                00107200
&ZMS             SETC  '&ZMS "MONTKN64"'                                00107300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00107400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00107500
.ZG21A           AIF   (K'&XUSEDMONTKNKEY LE 0).ZG21B                   00107600
&ZMS             SETC  '"MONTKN64'                                      00107700
&ZMS             SETC  '&ZMS.=&MONTKN64"'                               00107800
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00107900
&ZMS             SETC  '&ZMS "&XUSEDMONTKNKEY"'                         00108000
                 MNOTE 8,' &ZMS KEY.'                                   00108100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00108200
                 AGO   .ZG21D                                           00108300
.*                                                                      00108400
.ZG21B           ANOP  ,                                                00108500
&ZXUSEDMONTKNKEY                   SETC  'INPUT'  SET IN/OUTPUT         00108600
&XUSEDMONTKNKEY  SETC  'MONTKN64'  SET XVARIABLE                        00108700
&ZXMONTKN64      SETC  'INPUT'     SET IN/OUTPUT                        00108800
&XMONTKN64       SETC  '&MONTKN64(1)'           SET XVARIABLE PARM      00108900
                 AIF   (N'&MONTKN64 GT 1).ZG21C                         00109000
&XMONTKN64       SETC  '&MONTKN64'              SET XVARIABLE PARM      00109100
.ZG21C           AIF   (K'&XMONTKN64 GT 0).ZG21D  ONE PARM              00109200
&ZXUSEDMONTKNKEY                   SETC  ''     RESET IN/OUTPUT         00109300
&ZXMONTKN64      SETC  ''          RESET IN/OUTPUT                      00109400
&ZMS             SETC  ' '                                              00109500
&ZMS             SETC  '&ZMS "MONTKN64" KEY AND ITS'                    00109600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00109700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00109800
.ZG21D           ANOP  ,                                                00109900
.*------------------------------------------------------------------    00110000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00110100
                 AIF   (K'&XUSEDMONTKNKEY GT 0).ZG22B                   00110200
&ZXUSEDMONTKNKEY                   SETC  ''     RESET IN/OUTPUT         00110300
&ZXMONTKN        SETC  ''          RESET IN/OUTPUT                      00110400
&XUSEDMONTKNKEY  SETC  ''          ENSURE NULL                          00110500
&XMONTKN         SETC  ''          ENSURE NULL                          00110600
&ZMS             SETC  'ONE OF THE FOLLOWING'                           00110700
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00110800
&ZMS             SETC  '&ZMS REQUIRED:'                                 00110900
&ZMS             SETC  '&ZMS "MONTKN"'          VALID ME KEY            00111000
&ZMS             SETC  '&ZMS OR "MONTKN64".'    VALID ME KEY            00111100
                 MNOTE 8,' &ZMS '                                       00111200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00111300
.ZG22B           ANOP  ,                                                00111400
.*-------------------------------------------------------------------   00111500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00111600
.ZG20ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG21ZY                  00111700
.*-------------------------------------------------------------------   00111800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00111900
                 AIF   (K'&ZXMONTKN LE 0).ZG20R  NOT I/O                00112000
                 AIF   ('&XMONTKN'(1,1) NE '(').ZG20R                   00112100
&ZCGPR           SETC  '&XMONTKN'(2,K'&XMONTKN-2)                       00112200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                     00112300
                 AIF   (K'&ZCGPR GT 2).ZG20Q                            00112400
                 AIF   ('&ZCGPR' EQ '0').ZG20Q                          00112500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00112600
                 AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME        00112700
.ZG20P           ANOP  ,                                                00112800
                 AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC             00112900
                 AIF   ('&ZCGPR' LT '2').ZG20Q                          00113000
                 AIF   ('&ZCGPR' LE '12').ZG20R                         00113100
.ZG20Q           ANOP  ,                                                00113200
&ZMS             SETC  '"MONTKN='                                       00113300
&ZMS             SETC  '&ZMS.&MONTKN"'                                  00113400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00113500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00113600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00113700
.ZG20R           ANOP  ,                                                00113800
.*-------------------------------------------------------------------   00113900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00114000
.ZG21ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG22ZY                00114100
.*-------------------------------------------------------------------   00114200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00114300
                 AIF   (K'&ZXMONTKN64 LE 0).ZG21R  NOT I/O              00114400
                 AIF   ('&XMONTKN64'(1,1) NE '(').ZG21R                 00114500
&ZCGPR           SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)                   00114600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                     00114700
                 AIF   (K'&ZCGPR GT 2).ZG21Q                            00114800
                 AIF   ('&ZCGPR' EQ '0').ZG21Q                          00114900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00115000
                 AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME        00115100
.ZG21P           ANOP  ,                                                00115200
                 AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC             00115300
                 AIF   ('&ZCGPR' LT '2').ZG21Q                          00115400
                 AIF   ('&ZCGPR' LE '12').ZG21R                         00115500
.ZG21Q           ANOP  ,                                                00115600
&ZMS             SETC  '"MONTKN64='                                     00115700
&ZMS             SETC  '&ZMS.&MONTKN64"'                                00115800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00115900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00116000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00116100
.ZG21R           ANOP  ,                                                00116200
.*-------------------------------------------------------------------   00116300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00116400
.ZG22ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS          00116500
.*------------------------------------------------------------------    00116600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00116700
&XPARENTKEYP     SETC  ''          INITIALIZE XVARIABLE                 00116800
.*-------------------------------------------------------------------   00116900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00117000
.ZG25            ANOP  ,                                                00117100
                 AIF   (K'&PARENTKEYP(1) LE 0).ZG25A                    00117200
&ZTLC            SETC 'VALUE'                                           00117300
                 AIF   ('&PARENTKEYP(1)' NE '&ZTLC').ZG29               00117400
&XPARENTKEYP     SETC  'VALUE'     SET KEYWORD                          00117500
                 AIF   (N'&PARENTKEYP LE 1).ZG25A  CK NUM               00117600
&ZMS             SETC  '"PARENTKEYP='                                   00117700
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00117800
&ZMS             SETC  '&ZMS "PARENTKEYP"'                              00117900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00118000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00118100
.ZG25A           ANOP  ,                                                00118200
.*----------------------------------------------------------------***   00118300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00118400
                 AIF   (N'&PARENTKEY LE 1).ZG27A  CK NUM                00118500
&ZMS             SETC  '"PARENTKEY='                                    00118600
&ZMS             SETC  '&ZMS.&PARENTKEY"'                               00118700
&ZMS             SETC  '&ZMS "PARENTKEY"'                               00118800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00118900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00119000
.ZG27A           ANOP  ,                                                00119100
.*-------------------------------------------------------------------   00119200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00119300
&ZXPARENTKEY     SETC  'INPUT'     SET IN/OUTPUT                        00119400
&XPARENTKEY      SETC  '&PARENTKEY(1)'          SET XVARIABLE           00119500
                 AIF   (N'&PARENTKEY GT 1).ZG27B  MULTI                 00119600
&XPARENTKEY      SETC  '&PARENTKEY'             SET XVARIABLE           00119700
.ZG27B           AIF   (K'&PARENTKEY(1) GT 0).ZG27C                     00119800
&ZXPARENTKEY     SETC  ''          RESET IN/OUTPUT                      00119900
&ZMS             SETC  ' '                                              00120000
&ZMS             SETC  '&ZMS "PARENTKEY" KEY AND ITS'                   00120100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00120200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00120300
.ZG27C           ANOP  ,                                                00120400
.*-------------------------------------------------------------------   00120500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00120600
                 AIF   (K'&ZXPARENTKEY LE 0).ZG27R  NOT I/O             00120700
                 AIF   ('&XPARENTKEY'(1,1) NE '(').ZG27R                00120800
&ZCGPR           SETC  '&XPARENTKEY'(2,K'&XPARENTKEY-2)                 00120900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                     00121000
                 AIF   (K'&ZCGPR GT 2).ZG27Q                            00121100
                 AIF   ('&ZCGPR' EQ '0').ZG27Q                          00121200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00121300
                 AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME        00121400
.ZG27P           ANOP  ,                                                00121500
                 AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC             00121600
                 AIF   ('&ZCGPR' LT '2').ZG27Q                          00121700
                 AIF   ('&ZCGPR' LE '12').ZG27R                         00121800
.ZG27Q           ANOP  ,                                                00121900
&ZMS             SETC  '"PARENTKEY='                                    00122000
&ZMS             SETC  '&ZMS.&PARENTKEY"'                               00122100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00122200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00122300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00122400
.ZG27R           ANOP  ,                                                00122500
.*-------------------------------------------------------------------   00122600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00122700
.ZG29            ANOP  ,                                                00122800
&ZTLC            SETC 'PSWKEY'                                          00122900
                 AIF   ('&PARENTKEYP(1)' NE '&ZTLC').ZG30               00123000
&XPARENTKEYP     SETC  'PSWKEY'    SET KEYWORD                          00123100
                 AIF   (N'&PARENTKEYP LE 1).ZG29A  CK NUM               00123200
&ZMS             SETC  '"PARENTKEYP='                                   00123300
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00123400
&ZMS             SETC  '&ZMS "PARENTKEYP"'                              00123500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00123600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00123700
.ZG29A           ANOP  ,                                                00123800
.*------------------------------------------------------------------    00123900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00124000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00124100
.ZG29A0          AIF   (K'&PARENTKEY LE 0).ZG29A1  OK                   00124200
&ZCVAL           SETC '&ZCVAL PARENTKEY'        INCORRECT KEY USED      00124300
.ZG29A1          AIF   (K'&ZCVAL LE 0).ZG29A2   OK                      00124400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00124500
&ZMS             SETC  '"PARENTKEYP'                                    00124600
&ZMS             SETC  '&ZMS.=&PARENTKEYP"'                             00124700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00124800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00124900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00125000
.ZG29A2          ANOP  ,                                                00125100
.*-------------------------------------------------------------------   00125200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00125300
.ZG30            ANOP  ,                                                00125400
&ZTLC            SETC 'UNKNOWN'                                         00125500
                 AIF   ('&PARENTKEYP(1)' NE '&ZTLC').ZG31               00125600
&XPARENTKEYP     SETC  'UNKNOWN'   SET KEYWORD                          00125700
                 AIF   (N'&PARENTKEYP LE 1).ZG30A  CK NUM               00125800
&ZMS             SETC  '"PARENTKEYP='                                   00125900
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00126000
&ZMS             SETC  '&ZMS "PARENTKEYP"'                              00126100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00126200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00126300
.ZG30A           ANOP  ,                                                00126400
.*------------------------------------------------------------------    00126500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00126600
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00126700
.ZG30A0          AIF   (K'&PARENTKEY LE 0).ZG30A1  OK                   00126800
&ZCVAL           SETC '&ZCVAL PARENTKEY'        INCORRECT KEY USED      00126900
.ZG30A1          AIF   (K'&ZCVAL LE 0).ZG30A2   OK                      00127000
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00127100
&ZMS             SETC  '"PARENTKEYP'                                    00127200
&ZMS             SETC  '&ZMS.=&PARENTKEYP"'                             00127300
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00127400
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00127500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00127600
.ZG30A2          ANOP  ,                                                00127700
.*------------------------------------------------------------------    00127800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00127900
.ZG31            ANOP  ,                                                00128000
&ZXPARENTKEYP    SETC  'INPUT'     SET IN/OUTPUT                        00128100
                 AIF   (K'&XPARENTKEYP GT 0).ZG31E  VALID ARG           00128200
                 AIF   (T'&PARENTKEYP EQ 'O').ZG31D  OMITTED            00128300
&ZASYSLNDX       SETA  0                                                00128400
.ZG31A           ANOP  ,           POSITIONAL MACRO KEY                 00128500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00128600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                 00128700
&ZTLC            SETC 'PARENTKEYP'                                      00128800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A        00128900
.ZG31B           ANOP  ,                                                00129000
&ZXPARENTKEYP    SETC  ''          RESET IN/OUTPUT                      00129100
&ZMS             SETC  'THE "PARENTKEYP" KEY'                           00129200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00129300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00129400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00129500
                 AGO   .ZG31E                                           00129600
.ZG31C           ANOP  ,                                                00129700
&ZXPARENTKEYP    SETC  ''          RESET IN/OUTPUT                      00129800
&ZMS             SETC  '"PARENTKEYP='                                   00129900
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00130000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00130100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00130200
&ZMS             SETC  '&ZMS "VALUE",'                                  00130300
&ZMS             SETC  '&ZMS "PSWKEY",'                                 00130400
&ZMS             SETC  '&ZMS OR "UNKNOWN".'                             00130500
                 MNOTE 8,' &ZMS '                                       00130600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00130700
                 AGO   .ZG31E                                           00130800
.ZG31D           ANOP  ,                                                00130900
&XPARENTKEYP     SETC  'VALUE'     SET DEFAULT KEYWORD                  00131000
.ZG31E           ANOP  ,                                                00131100
.*------------------------------------------------------------------    00131200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00131300
                 AIF   (K'&PARENTKEYP(1) GT 0).ZG31F  PARM              00131400
&XPARENTKEYP     SETC  ''          ENSURE NULL KEYWORD                  00131500
&ZXPARENTKEYP    SETC  ''          RESET IN/OUTPUT                      00131600
&ZMS             SETC  'THE'                                            00131700
&ZMS             SETC  '&ZMS "PARENTKEYP" KEY AND ITS'                  00131800
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00131900
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00132000
&ZMS             SETC  '&ZMS "VALUE",'                                  00132100
&ZMS             SETC  '&ZMS "PSWKEY",'                                 00132200
&ZMS             SETC  '&ZMS OR "UNKNOWN".'                             00132300
                 MNOTE 8,' &ZMS '                                       00132400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00132500
.ZG31F           ANOP  ,                                                00132600
.*------------------------------------------------------------------    00132700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00132800
&XPARENTENV      SETC  ''          INITIALIZE XVARIABLE                 00132900
.*-------------------------------------------------------------------   00133000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133100
.ZG34            ANOP  ,                                                00133200
                 AIF   (K'&PARENTENV(1) LE 0).ZG34A                     00133300
&ZTLC            SETC 'NOSWITCH'                                        00133400
                 AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG35                00133500
&XPARENTENV      SETC  'NOSWITCH'  SET KEYWORD                          00133600
                 AIF   (N'&PARENTENV LE 1).ZG34A  CK NUM                00133700
&ZMS             SETC  '"PARENTENV='                                    00133800
&ZMS             SETC  '&ZMS.&PARENTENV"'                               00133900
&ZMS             SETC  '&ZMS "PARENTENV"'                               00134000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00134100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00134200
.ZG34A           ANOP  ,                                                00134300
.*-------------------------------------------------------------------   00134400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00134500
.ZG35            ANOP  ,                                                00134600
&ZTLC            SETC 'SECONDARY'                                       00134700
                 AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG36                00134800
&XPARENTENV      SETC  'SECONDARY'              SET KEYWORD             00134900
                 AIF   (N'&PARENTENV LE 1).ZG35A  CK NUM                00135000
&ZMS             SETC  '"PARENTENV='                                    00135100
&ZMS             SETC  '&ZMS.&PARENTENV"'                               00135200
&ZMS             SETC  '&ZMS "PARENTENV"'                               00135300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00135400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00135500
.ZG35A           ANOP  ,                                                00135600
.*------------------------------------------------------------------    00135700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00135800
.ZG36            ANOP  ,                                                00135900
&ZXPARENTENV     SETC  'INPUT'     SET IN/OUTPUT                        00136000
                 AIF   (K'&XPARENTENV GT 0).ZG36E  VALID ARG            00136100
                 AIF   (T'&PARENTENV EQ 'O').ZG36D  OMITTED             00136200
&ZASYSLNDX       SETA  0                                                00136300
.ZG36A           ANOP  ,           POSITIONAL MACRO KEY                 00136400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00136500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG36C                 00136600
&ZTLC            SETC 'PARENTENV'                                       00136700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG36A        00136800
.ZG36B           ANOP  ,                                                00136900
&ZXPARENTENV     SETC  ''          RESET IN/OUTPUT                      00137000
&ZMS             SETC  'THE "PARENTENV" KEY'                            00137100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00137200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00137300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00137400
                 AGO   .ZG36E                                           00137500
.ZG36C           ANOP  ,                                                00137600
&ZXPARENTENV     SETC  ''          RESET IN/OUTPUT                      00137700
&ZMS             SETC  '"PARENTENV='                                    00137800
&ZMS             SETC  '&ZMS.&PARENTENV"'                               00137900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00138000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00138100
&ZMS             SETC  '&ZMS "NOSWITCH"'                                00138200
&ZMS             SETC  '&ZMS OR "SECONDARY".'                           00138300
                 MNOTE 8,' &ZMS '                                       00138400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00138500
                 AGO   .ZG36E                                           00138600
.ZG36D           ANOP  ,                                                00138700
&XPARENTENV      SETC  'NOSWITCH'  SET DEFAULT KEYWORD                  00138800
.ZG36E           ANOP  ,                                                00138900
.*------------------------------------------------------------------    00139000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00139100
                 AIF   (K'&PARENTENV(1) GT 0).ZG36F  PARM               00139200
&XPARENTENV      SETC  ''          ENSURE NULL KEYWORD                  00139300
&ZXPARENTENV     SETC  ''          RESET IN/OUTPUT                      00139400
&ZMS             SETC  'THE'                                            00139500
&ZMS             SETC  '&ZMS "PARENTENV" KEY AND ITS'                   00139600
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00139700
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00139800
&ZMS             SETC  '&ZMS "NOSWITCH"'                                00139900
&ZMS             SETC  '&ZMS OR "SECONDARY".'                           00140000
                 MNOTE 8,' &ZMS '                                       00140100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00140200
.ZG36F           ANOP  ,                                                00140300
.*----------------------------------------------------------------***   00140400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00140500
                 AIF   (N'&EWLM LE 1).ZG38A     CK NUM                  00140600
&ZMS             SETC  '"EWLM='                                         00140700
&ZMS             SETC  '&ZMS.&EWLM"'                                    00140800
&ZMS             SETC  '&ZMS "EWLM"'                                    00140900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00141000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00141100
.ZG38A           ANOP  ,                                                00141200
.*-------------------------------------------------------------------   00141300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00141400
&XEWLM           SETC  ''          INITIALIZE XVARIABLE                 00141500
.ZG39A   AIF   ('&EWLM(1)' NE 'NO').ZG40A                               00141600
&XEWLM           SETC  'NO'        SET KEYWORD                          00141700
.*-------------------------------------------------------------------   00141800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00141900
.ZG40A           AIF   (K'&XEWLM GT 0).ZG40C    KEYWORD                 00142000
                 AIF   (K'&EWLM(1) LE 0).ZG40B                          00142100
&ZMS             SETC  '"EWLM='                                         00142200
&ZMS             SETC  '&ZMS.&EWLM"'                                    00142300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00142400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00142500
&ZMS             SETC  '&ZMS "NO".'                                     00142600
                 MNOTE 8,' &ZMS '                                       00142700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00142800
.ZG40B           ANOP  ,                                                00142900
&XEWLM           SETC  'NO'        SET DEFAULT KEYWORD                  00143000
.ZG40C           ANOP  ,                                                00143100
&ZXEWLM          SETC  'INPUT'     SET IN/OUTPUT                        00143200
.*------------------------------------------------------------------    00143300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00143400
&XCOMPCODE       SETC  ''          INITIALIZE XVARIABLE                 00143500
.*-------------------------------------------------------------------   00143600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00143700
.ZG43            ANOP  ,                                                00143800
                 AIF   (K'&COMPCODE(1) LE 0).ZG43A                      00143900
&ZTLC            SETC 'YES'                                             00144000
                 AIF   ('&COMPCODE(1)' NE '&ZTLC').ZG44                 00144100
&XCOMPCODE       SETC  'YES'       SET KEYWORD                          00144200
                 AIF   (N'&COMPCODE LE 1).ZG43A  CK NUM                 00144300
&ZMS             SETC  '"COMPCODE='                                     00144400
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00144500
&ZMS             SETC  '&ZMS "COMPCODE"'                                00144600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00144700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00144800
.ZG43A           ANOP  ,                                                00144900
.*-------------------------------------------------------------------   00145000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145100
.ZG44            ANOP  ,                                                00145200
&ZTLC            SETC 'NO'                                              00145300
                 AIF   ('&COMPCODE(1)' NE '&ZTLC').ZG45                 00145400
&XCOMPCODE       SETC  'NO'        SET KEYWORD                          00145500
                 AIF   (N'&COMPCODE LE 1).ZG44A  CK NUM                 00145600
&ZMS             SETC  '"COMPCODE='                                     00145700
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00145800
&ZMS             SETC  '&ZMS "COMPCODE"'                                00145900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00146000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00146100
.ZG44A           ANOP  ,                                                00146200
.*------------------------------------------------------------------    00146300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00146400
.ZG45            ANOP  ,                                                00146500
&ZXCOMPCODE      SETC  'INPUT'     SET IN/OUTPUT                        00146600
                 AIF   (K'&XCOMPCODE GT 0).ZG45E  VALID ARG             00146700
                 AIF   (T'&COMPCODE EQ 'O').ZG45D  OMITTED              00146800
&ZASYSLNDX       SETA  0                                                00146900
.ZG45A           ANOP  ,           POSITIONAL MACRO KEY                 00147000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00147100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG45C                 00147200
&ZTLC            SETC 'COMPCODE'                                        00147300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG45A        00147400
.ZG45B           ANOP  ,                                                00147500
&ZXCOMPCODE      SETC  ''          RESET IN/OUTPUT                      00147600
&ZMS             SETC  'THE "COMPCODE" KEY'                             00147700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00147800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00147900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00148000
                 AGO   .ZG45E                                           00148100
.ZG45C           ANOP  ,                                                00148200
&ZXCOMPCODE      SETC  ''          RESET IN/OUTPUT                      00148300
&ZMS             SETC  '"COMPCODE='                                     00148400
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00148500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00148600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00148700
&ZMS             SETC  '&ZMS "YES"'                                     00148800
&ZMS             SETC  '&ZMS OR "NO".'                                  00148900
                 MNOTE 8,' &ZMS '                                       00149000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00149100
                 AGO   .ZG45E                                           00149200
.ZG45D           ANOP  ,                                                00149300
&XCOMPCODE       SETC  'YES'       SET DEFAULT KEYWORD                  00149400
.ZG45E           ANOP  ,                                                00149500
.*----------------------------------------------------------------***   00149600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00149700
                 AIF   (N'&RETCODE LE 1).ZG47A  CK NUM                  00149800
&ZMS             SETC  '"RETCODE='                                      00149900
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00150000
&ZMS             SETC  '&ZMS "RETCODE"'                                 00150100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00150200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00150300
.ZG47A           ANOP  ,                                                00150400
.*-------------------------------------------------------------------   00150500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00150600
                 AIF   (K'&RETCODE(1) LE 0).ZG47C  NO PARM              00150700
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00150800
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00150900
                 AIF   (N'&RETCODE GT 1).ZG47C                          00151000
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00151100
.ZG47C           ANOP  ,                                                00151200
.*-------------------------------------------------------------------   00151300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00151400
                 AIF   (K'&ZXRETCODE LE 0).ZG47R  NOT I/O               00151500
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG47R                  00151600
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00151700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                     00151800
                 AIF   (K'&ZCGPR GT 2).ZG47Q                            00151900
                 AIF   ('&ZCGPR' EQ '0').ZG47Q                          00152000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00152100
                 AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME        00152200
.ZG47P           ANOP  ,                                                00152300
                 AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC             00152400
                 AIF   ('&ZCGPR' EQ '15').ZG47R                         00152500
                 AIF   ('&ZCGPR' LT '2').ZG47Q                          00152600
                 AIF   ('&ZCGPR' LE '12').ZG47R                         00152700
.ZG47Q           ANOP  ,                                                00152800
&ZMS             SETC  '"RETCODE='                                      00152900
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00153000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00153100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'         00153200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00153300
.ZG47R           ANOP  ,                                                00153400
.*----------------------------------------------------------------***   00153500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00153600
                 AIF   (N'&RSNCODE LE 1).ZG50A  CK NUM                  00153700
&ZMS             SETC  '"RSNCODE='                                      00153800
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00153900
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00154000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00154100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00154200
.ZG50A           ANOP  ,                                                00154300
.*-------------------------------------------------------------------   00154400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00154500
                 AIF   (K'&RSNCODE(1) LE 0).ZG50C  NO PARM              00154600
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00154700
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00154800
                 AIF   (N'&RSNCODE GT 1).ZG50C                          00154900
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00155000
.ZG50C           ANOP  ,                                                00155100
.*-------------------------------------------------------------------   00155200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00155300
                 AIF   (K'&ZXRSNCODE LE 0).ZG50R  NOT I/O               00155400
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG50R                  00155500
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00155600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                     00155700
                 AIF   (K'&ZCGPR GT 2).ZG50Q                            00155800
                 AIF   ('&ZCGPR' EQ '0').ZG50R                          00155900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00156000
                 AIF   (T'&ZCGPR NE 'N').ZG50Q  INVALID REG NAME        00156100
.ZG50P           ANOP  ,                                                00156200
                 AIF   (T'&ZCGPR NE 'N').ZG50R  NON NUMERIC             00156300
                 AIF   ('&ZCGPR' EQ '0').ZG50R                          00156400
                 AIF   ('&ZCGPR' LT '2').ZG50Q                          00156500
                 AIF   ('&ZCGPR' LE '12').ZG50R                         00156600
.ZG50Q           ANOP  ,                                                00156700
&ZMS             SETC  '"RSNCODE='                                      00156800
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00156900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00157000
                 MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'          00157100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00157200
.ZG50R           ANOP  ,                                                00157300
.******************************************************************     00157400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00157500
.******************************************************************     00157600
                 ACTR  10000                                            00157700
.*----------------------------------------------------------------***   00157800
.***AH.P02 EXTRA POSITIONALS                                            00157900
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00158000
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00158100
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00158200
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00158300
.ZGLISTX1        ANOP  ,                                                00158400
&ZCVAL           SETC  ''          ERROR FIELD                          00158500
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00158600
.ZGLIST2         ANOP  ,                                                00158700
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00158800
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00158900
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00159000
                 AGO   .ZGLIST2                                         00159100
.*                                                                      00159200
.ZGLIST3         ANOP  ,                                                00159300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00159400
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'                        00159500
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00159600
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00159700
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00159800
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00159900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00160000
.ZGLISTX         ANOP  ,                                                00160100
&ZASYSLNDX       SETA  0                                                00160200
.*******************************************************************    00160300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00160400
.*******************************************************************    00160500
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00160600
.*******************************************************************    00160700
.***AE.01  START OF IWM4MXFR MACRO CODE                                 00160800
.*******************************************************************    00160900
                 LCLC  &M0M0001                 NAME                    00161000
&M0M0001         SETC  '&XLABEL'                SET NAME                00161100
                 AIF   (K'&XLABEL NE 0).XLAB2                           00161200
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00161300
.*                                                                      00161400
.XLAB2           ANOP  ,                                                00161500
&M0M0001 DS    0H                             IWM4MXFR-0                00161600
.*******************************************************************    00161700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00161800
.*******************************************************************    00161900
              PUSH  PRINT                                               00162000
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00162100
                 PRINT OFF         ++ PR01                              00162200
                 AGO   .ZPRNTXX                                         00162300
.ZPRINTX         PRINT ON                                               00162400
.ZPRNTXX         ANOP  ,                                                00162500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00162600
         GBLC  &SYSAM64                                             @P2 00162700
         GBLA  &SYSALVL                                             @P2 00162800
         LCLC  &T1                                                      00162900
         LCLC  &T_Montkn                                                00163000
.*--------------------------------------------------------------------- 00163100
.* Do we run on HBB7790 or higher                                       00163200
.*--------------------------------------------------------------------- 00163300
         LLGT  14,16(0,0)              Get CVT address                  00163400
         TM    CVTOSLV6-CVT(14),CVTH7790   Test for HBB7790             00163500
         JO    Mxfr&SYSNDX._Begin      Branch when Lvl is present  @P3C 00163600
         LA    0,IWMRSNCODEBADVERSION  HBB7790 is required              00163700
         LA    15,IWMRETCODEINVOCERROR Set Return Code                  00163800
         J     Mxfr&SYSNDX._EndX       Branch to end label         @P3C 00163900
Mxfr&SYSNDX._Begin DS 0H                                                00164000
                                                                        00164100
         AIF   ('&XCOMPCODE' EQ 'YES').STARTLOGIC                       00164200
         AIF   ('&XRETCODE' EQ '').RSNCODECHK                           00164300
&T1      SETC  'RETCODE, RSNCODE MAY NOT BE USED WITH COMPCODE(NO)'     00164400
         MNOTE 8,'&T1'                                                  00164500
         MEXIT                                                          00164600
.RSNCODECHK ANOP                                                        00164700
         AIF   ('&XRSNCODE' EQ '').STARTLOGIC                           00164800
&T1      SETC  'RETCODE, RSNCODE MAY NOT BE USED WITH COMPCODE(NO)'     00164900
         MNOTE 8,'&T1'                                                  00165000
         MEXIT                                                          00165100
.STARTLOGIC ANOP                                                        00165200
.*--------------------------------------------------------------------- 00165300
.* Set AMODE 64                                                         00165400
.*--------------------------------------------------------------------- 00165500
         AIF   ('&SYSAM64' EQ 'YES').Mrlt_A64_Switch1              @P3A 00165600
         SAM64                                                     @P3A 00165700
.Mxfr_A64_Switch1 ANOP                                             @P3A 00165800
.*--------------------------------------------------------------------- 00165900
.* MONTKN / MONTKN64 - Setup                                            00166000
.*--------------------------------------------------------------------- 00166100
.Mxfr_Montkn1_Begin ANOP                                                00166200
         AIF ('&MONTKN' EQ '').Mxfr_Montkn1_64                          00166300
&T_Montkn SETC '&MONTKN'                                                00166400
         AIF   ('&MONTKN'(1,1) NE '(').Mxfr_Montkn1_31_Code             00166500
&T_Montkn SETC '&MONTKN'(2,K'&MONTKN-2)                                 00166600
&T_Montkn SETC '0(&T_Montkn.)'                                          00166700
.Mxfr_Montkn1_31_Code ANOP                                              00166800
.* R14 is now a valid base displacement                                 00166900
         LLGT  14,&T_Montkn            Fetch 31bit Monitoring Token     00167000
         AGO .Mxfr_Montkn1_End                                          00167100
.Mxfr_Montkn1_64 ANOP                                                   00167200
&T_Montkn SETC '&MONTKN64'                                              00167300
         AIF   ('&MONTKN64'(1,1) NE '(').Mxfr_Montkn1_64_Code           00167400
&T_Montkn SETC '&MONTKN64'(2,K'&MONTKN-2)                               00167500
&T_Montkn SETC '0(&T_Montkn.)'                                          00167600
.Mxfr_Montkn1_64_Code ANOP                                              00167700
.* R14 is now a valid base displacement                                 00167800
         LG    14,&T_Montkn            Fetch 64bit Monitoring Token     00167900
.Mxfr_Montkn1_End ANOP                                                  00168000
         LTGR  14,14                   Test the MONTKN value            00168100
.*                                                                      00168200
         AIF   ('&XCOMPCODE' NE 'YES').Mxfr_CompCode1_No                00168300
.********************************************************************** 00168400
.*                                                                      00168500
.*       COMPCODE(YES) code expansion follows                           00168600
.*       This block of code determines whether the input montkn=0,      00168700
.*        and for Runtime_Ver(Short_Form) also checks the eye-catcher.  00168800
.*                                                                      00168900
.********************************************************************** 00169000
         JNZ   Mxfr&SYSNDX._CompCode1  BRANCH WHEN MON ENV IS PRESENT   00169100
*                                                                  @P3C 00169200
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00169300
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00169400
         J     Mxfr&SYSNDX._End        BRANCH TO END LABEL         @P3C 00169500
Mxfr&SYSNDX._CompCode1 DS 0H           BRANCH LABEL FOR MON ENV PRESENT 00169600
.*                                                                      00169700
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').Mxfr_CompCode1_End        00169800
         LLILF 0,PB_ID_CONST           Load PB eyecatcher into R15 @P3A 00169900
         CL    0,PB_ID-PB(,14)         Check eyecatcher            @P3C 00170000
         JE    Mxfr&SYSNDX._Minimal1   BRANCH WHEN MON ENV PASSES  @P3C 00170100
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00170200
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00170300
         J     Mxfr&SYSNDX._End        BRANCH TO END LABEL         @P3C 00170400
Mxfr&SYSNDX._Minimal1 DS 0H            BRANCH LABEL FOR MON ENV OK      00170500
.*                                                                      00170600
         AGO .Mxfr_CompCode1_End                                        00170700
.*                                                                      00170800
.********************************************************************** 00170900
.*                                                                      00171000
.*       COMPCODE(NO) code expansion follows                            00171100
.*       This block of code determines whether the input montkn=0,      00171200
.*        and for Runtime_Ver(Short_Form) also checks the eye-catcher.  00171300
.*                                                                      00171400
.********************************************************************** 00171500
.Mxfr_CompCode1_No ANOP                                                 00171600
         JZ    Mxfr&SYSNDX._End        BRANCH TO END LABEL         @P3C 00171700
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').Mxfr_CompCode1_End        00171800
         LLILF 0,PB_ID_CONST           Load PB eyecatcher into R15 @P3A 00171900
         CL    0,PB_ID-PB(,14)         Check eyecatcher            @P3C 00172000
         JNE   Mxfr&SYSNDX._End        BRANCH TO END LABEL         @P3C 00172100
.*                                                                      00172200
.Mxfr_CompCode1_End ANOP                                                00172300
.*                                                                      00172400
.********************************************************************** 00172500
.*                                                                      00172600
.*       COMMON code expansion follows                                  00172700
.*       This block of code determines whether the input PB is related  00172800
.*        to a parent PB (i.e. high order bit is set),                  00172900
.*        or to an ASID/Enclave (high order bit off, but parent tkn^=0) 00173000
.*        or not related at all (parent tkn=0)                          00173100
.*                                                                      00173200
.********************************************************************** 00173300
         USING PB,14                                                    00173400
.*                                                                      00173500
         ICM   15,15,PB_PARENT_MONTKN  Extract parent monitoring token  00173600
*                                      and check if we are related to   00173700
*                                      the Home Space (HIBIT off)       00173800
         BRC   2,IWM4MXFR_HOME&SYSNDX  Branch if related to Home Space  00173900
*                                                                  @P3C 00174000
         BRC   8,IWM4MXFR_PAR_NOT_EXISTS&SYSNDX Branch if no parent     00174100
*                                                                  @P3C 00174200
*                                      monitoring environment exists    00174300
         LG    15,PBX_PARENT_MONTKN    Extract long parent monitoring   00174400
*                                      token                            00174500
         LTGR  15,15                   Do we have a long token          00174600
         JNZ   Mxfr&SYSNDX._ParLoadEnd Yes, continue               @P3C 00174700
         L     15,PB_PARENT_MONTKN     No, extract parent monitoring    00174800
*                                      token                            00174900
Mxfr&SYSNDX._ParLoadEnd DS 0H                                           00175000
         J     IWM4MXFR_PAR_EXISTS&SYSNDX Branch, Parent Env exists@P3C 00175100
.*                                                                      00175200
*--------------------------------------------------------------------*  00175300
* Parent Environment doesnot exist                                   *  00175400
*--------------------------------------------------------------------*  00175500
IWM4MXFR_PAR_NOT_EXISTS&SYSNDX DS 0H                                    00175600
         AIF   ('&XCOMPCODE' NE 'YES').Mxfr_CompCode2_No                00175700
         LA    0,IWMRSNCODENORELATE    SET REASON CODE = NO RELATE DONE 00175800
         LA    15,IWMRETCODEINVOCERROR SET RC = INVOCATION ERROR        00175900
.Mxfr_CompCode2_No  ANOP                                                00176000
         J     Mxfr&SYSNDX._End        BRANCH TO END LABEL         @P3C 00176100
.*                                                                      00176200
*--------------------------------------------------------------------*  00176300
* Parent Environment doesnot exist                                   *  00176400
*--------------------------------------------------------------------*  00176500
IWM4MXFR_PAR_EXISTS&SYSNDX DS 0H       BRANCH LABEL FOR PAR ENV EXISTS  00176600
.*                                                                      00176700
          LCLC  &DMONTVAL                                               00176800
          LCLC  &STATEVAL                                               00176900
          LCLC  &KEYVALUE                                               00177000
&KEYVALUE SETC  'NO'                                                    00177100
.*                                                                      00177200
         AIF   ('&XFUNCTION' NE 'CONTINUE').Mxfr_Func1Return            00177300
.*******************************************************************    00177400
.*                                                                      00177500
.*       FOLLOWING IS LOGIC FOR FUNCTION(CONTINUE)                      00177600
.*                                                                      00177700
.*       This block of code sets up the instructions for                00177800
.*        extracting the mirror token of the dependent (input) PB,      00177900
.*        saving the dependent (input) montkn in the parent PB, and     00178000
.*        setting the state to active in the dependent (input) PB       00178100
.*                                                                      00178200
.*******************************************************************    00178300
.*                                                                      00178400
&DMONTVAL  SETC  '14'                                                   00178500
&STATEVAL  SETC  'ACTIVE'                                               00178600
           AGO   .Mxfr_Func1End                                         00178700
.Mxfr_Func1Return ANOP                                                  00178800
.*                                                                      00178900
.*******************************************************************    00179000
.*                                                                      00179100
.*       FOLLOWING IS LOGIC FOR FUNCTION(RETURN)                        00179200
.*                                                                      00179300
.*       This block of code sets up the instructions for                00179400
.*        clearing the dep. mirror token in the parent PB,              00179500
.*        clearing the dependent (input) montkn in the parent PB, and   00179600
.*        setting the state to free in the parent PB                    00179700
.*                                                                      00179800
.*******************************************************************    00179900
&DMONTVAL  SETC  '1'                                                    00180000
&STATEVAL  SETC  'FREE'                                                 00180100
.*                                                                      00180200
.Mxfr_Func1End  ANOP                                                    00180300
.*                                                                      00180400
.*******************************************************************    00180500
.*                                                                      00180600
.*       FOLLOWING IS LOGIC FOR FUNCTION(CONTINUE!RETURN)               00180700
.*                                                                      00180800
.*       This block of code sets up the default instructions for        00180900
.*        changing addressability (DS 0H).                              00181000
.*        These symbolic substitutions will be updated below, as        00181100
.*        needed, to SAC to the correct ASC mode.                       00181200
.*                                                                      00181300
.*******************************************************************    00181400
.*                                                                      00181500
         LCLC  &SACTO1                                                  00181600
         LCLC  &SACTO2                                                  00181700
         LCLC  &SACBACK1                                                00181800
         LCLC  &SACBACK2                                                00181900
&SACTO1  SETC  'DS'                                                     00182000
&SACTO2  SETC  '0H'                                                     00182100
&SACBACK1 SETC  'DS'                                                    00182200
&SACBACK2 SETC  '0H'                                                    00182300
.*                                                                      00182400
         AIF   ('&XPARENTENV' NE 'NOSWITCH').ENDNOSWITCH1               00182500
.*                                                                      00182600
.*******************************************************************    00182700
.*                                                                      00182800
.*       Code expansion for PARENTENV(NOSWITCH) follows                 00182900
.*          for either Function(Continue ! Return)                      00183000
.*          and RUNTIME_VER(SHORT_FORM ! MINIMAL)                       00183100
.*                                                                      00183200
.*******************************************************************    00183300
.*                                                                      00183400
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').MINVERCONT1               00183500
.*                                                                      00183600
.*******************************************************************    00183700
.*                                                                      00183800
.*       Code expansion for PARENTENV(NOSWITCH) follows                 00183900
.*          for either Function(Continue ! Return)                      00184000
.*          with RUNTIME_VER(SHORT_FORM)                                00184100
.*                                                                      00184200
.*******************************************************************    00184300
.*                                                                      00184400
         LLILF 0,PB_ID_CONST           Load PB eyecatcher into R15 @P3A 00184500
         CL    0,PB_ID-PB(,15)                                     @P3C 00184600
         AGO   .COMMONSFVER1                                            00184700
.*                                                                      00184800
.ENDNOSWITCH1   ANOP                                                    00184900
.*                                                                      00185000
.*                                                                      00185100
.*******************************************************************    00185200
.*                                                                      00185300
.*       Code expansion for PARENTENV(SECONDARY) follows                00185400
.*          for either Function(Continue ! Return)                      00185500
.*          and RUNTIME_VER(MINIMAL ! SHORT_FORM)                       00185600
.*                                                                      00185700
.*******************************************************************    00185800
.*                                                                      00185900
         AIF   ('&XFUNCTION' EQ 'CONTINUE').Mxfr_Func2End               00186000
         ICM  14,15,PB_ABNORMAL_FLAGS  SAVE DEPENDENT PB ABNORMAL FLAGS 00186100
         DROP 14          RELEASE REGISTER 14                           00186200
.Mxfr_Func2End ANOP                                                     00186300
.*                                                                      00186400
.*******************************************************************    00186500
.*       The following block of code sets up the SAC to secondary       00186600
.*******************************************************************    00186700
.*                                                                      00186800
&SACTO1  SETC  'SAC'                                                    00186900
&SACTO2  SETC  '256'                                                    00187000
&SACBACK1 SETC  'SAC'                                                   00187100
&SACBACK2 SETC  '0'                                                     00187200
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').MINVERCONT1               00187300
.*                                                                      00187400
.*******************************************************************    00187500
.*                                                                      00187600
.*       Code expansion for RUNTIME_VER(SHORT_FORM) follows             00187700
.*          for Parentenv(Secondary)                                    00187800
.*          and either Function(Continue ! Return)                      00187900
.*                                                                      00188000
.*******************************************************************    00188100
.*                                                                      00188200
.*       THE PB ACRONYM, REFERENCED AS A LITERAL, RESIDES IN CURRENT    00188300
.*         PRIMARY, AND MUST BE LOADED BEFORE CHANGING PSWKEY (SINCE    00188400
.*         THE MODULE MAY BE IN FETCH-PROTECTED STORAGE) AND BEFORE     00188500
.*         CHANGING ASC MODES.                                          00188600
.*                                                                      00188700
.*                       LOGIC:                                         00188800
.*       REG 0 HAS PB_ID (ALL FLOWS FOR SECONDARY)                      00188900
.*       PARENTKEYP(VALUE) ==> REG 1 HAS KEY NEEDED TO UPDATE PARENT    00189000
.*                             SET UP AR15 FOR PARENT PB                00189100
.*                             SAC TO AR                                00189200
.*                             SET REG 1 TO DEPENDENT MIRROR TOKEN      00189300
.*                                 USING INDEX REGISTER NOTATION        00189400
.*                                                                      00189500
.*       PARENTKEYP(PSWKEY!UNKNOWN) ==> SET REG 1 TO DEP MIRROR TOKEN   00189600
.*                             SAC TO SECONDARY                         00189700
.*                                                                      00189800
.*                                                                1@P3D 00189900
         AIF   ('&PARENTKEYP' NE 'VALUE').ENDVALUE   BRANCH IF ^VALUE   00190000
.*                                                                      00190100
.*******************************************************************    00190200
.*       The following block of code handles Parentkeyp(Value)          00190300
.*******************************************************************    00190400
.*                                                                      00190500
         LA    1,1                                                      00190600
         SAR   15,1                    SET AR15 FOR SECONDARY           00190700
.*                                                                      00190800
.*       MUST ANTICIPATE NEED TO CHANGE PSW KEY,KEPT IN CURRENT PRIMARY 00190900
.*                                                                      00191000
&T1      SETC  '&PARENTKEY'                                             00191100
         AIF   ('&PARENTKEY'(1,1) NE '(').PARENTKEY1                    00191200
&T1      SETC  '&PARENTKEY'(2,K'&PARENTKEY-2)                           00191300
&T1      SETC  '0(&T1.)'                                                00191400
.PARENTKEY1 ANOP                                                        00191500
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00191600
         IC    1,&T1                                                    00191700
.*                                                                      00191800
.*******************************************************************    00191900
.*       The following block of code sets up the SAC to AR mode         00192000
.*        for PARENTKEYP(VALUE) and Parentenv(Secondary)                00192100
.*******************************************************************    00192200
.*                                                                      00192300
&SACTO1  SETC  'SAC'                                                    00192400
&SACTO2  SETC  '512'                                                    00192500
&KEYVALUE SETC  'YES'                                                   00192600
.*                                                                      00192700
         AGO  .COMSECSFVER1                                             00192800
.ENDVALUE    ANOP                                                       00192900
.*                                                                      00193000
.*******************************************************************    00193100
.*       The following block of code handles Parentkeyp(Unknown!Pswkey) 00193200
.*       The following instruction either extracts/clears the           00193300
.*        value of the dependent mirror token.                          00193400
.*******************************************************************    00193500
.*                                                                      00193600
         AIF   ('&XFUNCTION' EQ 'CONTINUE').Mxfr_Func3Continue          00193700
.*******************************************************************    00193800
.* Set register 1                                                       00193900
.*          for a Return we clear R1,                                   00194000
.*          for a Continue we extract the Mirror Token                  00194100
.*          for either Function(Continue ! Return)                      00194200
.*******************************************************************    00194300
         SLGR  1,1                     Clear R1, because we do a RETURN 00194400
         AGO   .Mxfr_Func3End                                           00194500
.Mxfr_Func3Continue ANOP                                                00194600
         LG    1,PBX_MIRROR_TKN-PB(14,0) Extract the long mirror token  00194700
         LTGR  1,1                                                      00194800
         JZ    Mxfr&SYSNDX._Func3End                               @P3C 00194900
         L     1,PB_MIRROR_TKN-PB(14,0) Extract the mirror token        00195000
.Mxfr_Func3End ANOP                                                     00195100
Mxfr&SYSNDX._Func3End DS 0H                                             00195200
.*                                                                      00195300
.COMSECSFVER1 ANOP                                                      00195400
.*                                                                      00195500
.*********************************************************************  00195600
.*                                                                      00195700
.* COMMON CODE FOR RUNTIME_VER(SHORT_FORM) WITH PARENTENV(SECONDARY)    00195800
.* This code establishes addressability, as needed, to the parent env.  00195900
.*  and checks the eye-catcher in the parent PB.                        00196000
.*                                                                      00196100
.*********************************************************************  00196200
.*                                                                      00196300
         &SACTO1 &SACTO2                                                00196400
&SACTO1  SETC  'DS'                                                     00196500
&SACTO2  SETC  '0H'                                                     00196600
         LLILF 0,PB_ID_CONST           Load PB eyecatcher into R15 @P3A 00196700
         CL    0,PB_ID-PB(,15)                                     @P3C 00196800
.*                                                                      00196900
.COMMONSFVER1 ANOP                                                      00197000
.*                                                                      00197100
.*******************************************************************    00197200
.*                                                                      00197300
.*             COMMON CODE FOR SHORT-FORM VERIFICATION                  00197400
.*          for either Function(Continue ! Return)                      00197500
.*          and either Parentenv(Noswitch ! Secondary)                  00197600
.*                                                                      00197700
.*          This block of code reacts to the earlier test of the        00197800
.*           parent PB eyecatcher, and restores addressability,         00197900
.*           as needed, to current primary.                             00198000
.*                                                                      00198100
.*******************************************************************    00198200
.*                                                                      00198300
         JE    PARENVOK&SYSNDX         BRANCH WHEN PARENT ENV PASSES    00198400
*                                                                  @P3C 00198500
         &SACBACK1 &SACBACK2                                            00198600
         AIF   ('&XCOMPCODE' NE 'YES').Mxfr_CompCode3_No                00198700
         LA    0,IWMRSNCODEBADPARENV   SET REASON CODE = BAD PAR ENV    00198800
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00198900
.Mxfr_CompCode3_No  ANOP                                                00199000
         J     Mxfr&SYSNDX._End        BRANCH TO END LABEL              00199100
PARENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00199200
.*                                                                      00199300
.*******************************************************************    00199400
.*                                                                      00199500
.*       Code expansion for RUNTIME_VER(SHORT_FORM ! MINIMAL) follows   00199600
.*          for either Function(Continue ! Return)                      00199700
.*          and Parentenv(Noswitch ! Secondary)                         00199800
.*                                                                      00199900
.*       This block of code performs the PSW key manipulations needed.  00200000
.*                                                                      00200100
.*******************************************************************    00200200
.*                                                                      00200300
.MINVERCONT1 ANOP                                                       00200400
.*                                                                      00200500
.*     THE CODE TO SET THE PSW KEY MUST TOLERATE RUNNING IN AR MODE.    00200600
.*     FOR THIS REASON, THE ADDRESS OF THE BYTE CONTAINING THE KEY      00200700
.*        HAS BEEN SAVED IN GPR01 WHEN NECESSARY (I.E. KEYVALUE=YES)    00200800
.*                                                                      00200900
         AIF   ('&PARENTKEYP' EQ 'PSWKEY').PSWKEY   BRANCH IF PSWKEY OK 00201000
         LR    0,2                 SAVE GPR 2 BEFORE USING IPK          00201100
         IPK                       SAVE PSWKEY IN BITS 24-27 OF GPR2    00201200
         AIF   ('&KEYVALUE' EQ 'YES').SPKAINST      BRANCH IF KEY IN R1 00201300
         AIF   ('&PARENTKEYP' EQ 'VALUE').VALUE     BRANCH IF VALUE     00201400
         SPKA  0(0)                SET THE PSW KEY TO 0                 00201500
         AGO   .PSWKEY                                                  00201600
.*                                                                      00201700
.VALUE   ANOP                                                           00201800
&T1      SETC  '&PARENTKEY'                                             00201900
         AIF   ('&PARENTKEY'(1,1) NE '(').PARENTKEY                     00202000
&T1      SETC  '&PARENTKEY'(2,K'&PARENTKEY-2)                           00202100
&T1      SETC  '0(&T1.)'                                                00202200
.PARENTKEY ANOP                                                         00202300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00202400
         IC    1,&T1                                                    00202500
.SPKAINST ANOP                                                          00202600
         SPKA  0(1)               SET THE PSW KEY FROM GPR 1 BITS 24-27 00202700
.*                                                                      00202800
.PSWKEY ANOP                                                            00202900
.*                                                                      00203000
.********************************************************************** 00203100
.*       The following block of code                                    00203200
.*        sets/clears the dep mirror token value,                       00203300
.*        establishes addressability, as needed to the parent PB,       00203400
.*        saves the dep mirror token value in the parent PB, and        00203500
.*        saves the dep monitor token value in the parent PB.           00203600
.********************************************************************** 00203700
         AIF   ('&XFUNCTION' EQ 'CONTINUE').Mxfr_Func4Continue          00203800
.*******************************************************************    00203900
.* Set register 1                                                       00204000
.*          for a Return we clear R1,                                   00204100
.*          for a Continue we extract the Mirror Token                  00204200
.*          for either Function(Continue ! Return)                      00204300
.*******************************************************************    00204400
         SLGR  1,1                     Clear R1, because we do a RETURN 00204500
         AGO   .Mxfr_Func4End                                           00204600
.Mxfr_Func4Continue ANOP                                                00204700
         LG    1,PBX_MIRROR_TKN-PB(14,0) Extract the long mirror token  00204800
         LTGR  1,1                                                      00204900
         JZ    Mxfr&SYSNDX._Func4End                               @P3C 00205000
         L     1,PB_MIRROR_TKN-PB(14,0) Extract the mirror token        00205100
.Mxfr_Func4End ANOP                                                     00205200
Mxfr&SYSNDX._Func4End DS 0H                                             00205300
.*                                                                      00205400
         &SACTO1 &SACTO2                                                00205500
         STG   1,PBX_DEP_MIRROR_TKN-PB(0,15) SET DEPENDENT MIRROR TOKEN 00205600
         ST    1,PB_DEP_MIRROR_TKN-PB(0,15)  Store the low part into    00205700
         CLGFI 1,X'7FFFFFFF'      Does the 64bit token fit in 31bit@P3C 00205800
         JL    Mxfr&SYSNDX._Xfer1 Branch if >7FFFFFFF              @P3C 00205900
         LLILF 1,X'7FFFF000'                                       @P3A 00206000
         ST    1,PB_DEP_MIRROR_TKN-PB(,15)                         @P3A 00206100
         LG    1,PBX_DEP_MIRROR_TKN-PB(0,15)                       @P3A 00206200
Mxfr&SYSNDX._Xfer1 DS 0H                                                00206300
         STG   &DMONTVAL.,PBX_DEP_MONTKN-PB(0,15) Set long dependent    00206400
*                                     monitoring token                  00206500
         ST    &DMONTVAL.,PB_DEP_MONTKN-PB(0,15) Store the low part     00206600
*                                     into the original variable        00206700
         CLGFI &DMONTVAL.,X'7FFFFFFF' Does the 64bit token fit in       00206800
*                                     31bit                        @P3C 00206900
         JZ    Mxfr&SYSNDX._Xfer3     Branch if zero               @P3C 00207000
         JH    Mxfr&SYSNDX._Xfer2     Branch if >7FFFFFFF          @P3C 00207100
         OI    PB_DEP_MONTKN-PB(15),X'80' Set high order bit            00207200
.*                                    (PB_DEP_MONTKN_HIBIT)             00207300
         J     Mxfr&SYSNDX._Xfer3                                  @P3C 00207400
Mxfr&SYSNDX._Xfer2 DS 0H                                                00207500
         LLILF 1,X'FFFFF000'                                       @P3A 00207600
         ST    1,PB_DEP_MONTKN-PB(,15)      Set a 7FFFF000         @P3A 00207700
.*                                     and a high order bit        @P3A 00207800
         LG    1,PBX_DEP_MIRROR_TKN-PB(0,15)                       @P3A 00207900
.*                                    (PB_DEP_MONTKN_HIBIT)             00208000
Mxfr&SYSNDX._Xfer3 DS 0H                                                00208100
.*                                                                      00208200
         AIF   ('&XFUNCTION' EQ 'CONTINUE').Mxfr_Func5Continue          00208300
.********************************************************************** 00208400
.*                                                                      00208500
.*       Function(Return) code expansion follows                        00208600
.*       This block of code is responsible for propagating the abnormal 00208700
.*        flags from the dependent PB to the parent PB (ORs the two).   00208800
.*                                                                      00208900
.********************************************************************** 00209000
         AIF   ('&XPARENTENV' EQ 'SECONDARY').Mxfr_Func5ParSec          00209100
         L     1,PB_ABNORMAL_FLAGS-PB(0,15)  GET ABNORMAL FLAG          00209200
         O     1,PB_ABNORMAL_FLAGS  OR IN ABNORMAL FLAG FROM DEP PB     00209300
         ST    1,PB_ABNORMAL_FLAGS-PB(0,15)  STORE IN NEW ABNORMAL FLAG 00209400
         AGO   .Mxfr_Func5End                                           00209500
.Mxfr_Func5ParSec ANOP                                                  00209600
         L     1,PB_ABNORMAL_FLAGS-PB(0,15)  GET ABNORMAL FLAG          00209700
         OR    1,14                 OR IN ABNORMAL FLAG FROM DEP PB     00209800
         ST    1,PB_ABNORMAL_FLAGS-PB(0,15)  STORE IN NEW ABNORMAL FLAG 00209900
         AGO   .Mxfr_Func5End                                           00210000
.*                                                                      00210100
.********************************************************************** 00210200
.*                                                                      00210300
.*       Function(Continue) code expansion follows                      00210400
.*       This block of code is responsible for extracting the scl token 00210500
.*                                                                      00210600
.********************************************************************** 00210700
.Mxfr_Func5Continue ANOP                                                00210800
         L     15,PB_SC_TKN-PB(0,15)  GET SERVICE CLASS TOKEN           00210900
.*                                                                      00211000
.Mxfr_Func5End ANOP                                                     00211100
.*                                                                      00211200
.********************************************************************** 00211300
.*                                                                      00211400
.*       Function(Continue ! Return) code expansion follows             00211500
.*       This block of code restores addressability to current primary, 00211600
.*        and restores the original PSW key.                            00211700
.*                                                                      00211800
.********************************************************************** 00211900
.*                                                                      00212000
.*                                                                      00212100
         &SACBACK1 &SACBACK2                                            00212200
.*                                                                      00212300
         AIF   ('&PARENTKEYP' EQ 'PSWKEY').PSWKEY2 BRANCH IF PSWKEY OK  00212400
         SPKA  0(2)                    RESTORE PSWKEY FROM GPR 2        00212500
         LR    2,0                     RESTORE GPR 2 TO ORIGINAL VALUE  00212600
.*                                                                      00212700
.PSWKEY2       ANOP                                                     00212800
.*                                                                      00212900
         AIF   ('&XFUNCTION' EQ 'CONTINUE').Mxfr_Func6Continue          00213000
.********************************************************************** 00213100
.*                                                                      00213200
.*       Function(Return) code expansion follows                        00213300
.*                                                                      00213400
.********************************************************************** 00213500
.*--------------------------------------------------------------------- 00213600
.* MONTKN / MONTKN64 - Setup                                            00213700
.*--------------------------------------------------------------------- 00213800
.Mxfr_Montkn2_Begin ANOP                                                00213900
         AIF ('&MONTKN' EQ '').Mxfr_Montkn2_64                          00214000
&T_Montkn SETC '&MONTKN'                                                00214100
         AIF   ('&MONTKN'(1,1) NE '(').Mxfr_Montkn2_31_Code             00214200
&T_Montkn SETC '&MONTKN'(2,K'&MONTKN-2)                                 00214300
&T_Montkn SETC '0(&T_Montkn.)'                                          00214400
.Mxfr_Montkn2_31_Code ANOP                                              00214500
.* R14 is now a valid base displacement                                 00214600
         LLGT  14,&T_Montkn          ReFetch 31bit Monitoring Token     00214700
         AGO .Mxfr_Montkn2_End                                          00214800
.Mxfr_Montkn2_64 ANOP                                                   00214900
&T_Montkn SETC '&MONTKN64'                                              00215000
         AIF   ('&MONTKN64'(1,1) NE '(').Mxfr_Montkn2_64_Code           00215100
&T_Montkn SETC '&MONTKN64'(2,K'&MONTKN-2)                               00215200
&T_Montkn SETC '0(&T_Montkn.)'                                          00215300
.Mxfr_Montkn2_64_Code ANOP                                              00215400
.* R14 is now a valid base displacement                                 00215500
         LG    14,&T_Montkn          ReFetch 64bit Monitoring Token     00215600
.Mxfr_Montkn2_End ANOP                                                  00215700
.*                                                                      00215800
         USING PB,14                 SET BASING FOR PB                  00215900
.SKIPRESTORE    ANOP                                                    00216000
         SLR   15,15                                                    00216100
         ST    15,PB_SC_TKN          CLEAR SERVICE CLASS TOKEN          00216200
         XC    PB_TRANS_TTOKEN,PB_TRANS_TTOKEN  Clear Trans Trace Token 00216300
         AGO   .Mxfr_Func6End                                           00216400
.*                                                                      00216500
.********************************************************************** 00216600
.*                                                                      00216700
.*       Function(Continue) code expansion follows                      00216800
.*                                                                      00216900
.********************************************************************** 00217000
.Mxfr_Func6Continue ANOP                                                00217100
         ST    15,PB_SC_TKN           Save service class token          00217200
         LG    15,PBX_PARENT_MONTKN   Extract long parent monitoring    00217300
.*                                    token                             00217400
         LTGR  15,15                                                    00217500
         JZ    Mxfr&SYSNDX._Func6ParTkn                            @P3C 00217600
         L     15,PB_PARENT_MONTKN    EXTRACT PARENT MONITORING TOKEN   00217700
Mxfr&SYSNDX._Func6ParTkn DS 0H                                          00217800
.*                                                                      00217900
.* Move Transaction Trace Token (Ttt)                                   00218000
         AIF   ('&XPARENTENV' EQ 'SECONDARY').Mxfr_Func6MoveTttSec      00218100
         MVC   PB_TRANS_TTOKEN,PB_TRANS_TTOKEN-PB(15)            SAVE  *00218200
                                      THE TRANSACTION TRACE TOKEN       00218300
         AGO   .Mxfr_Func6MoveTttEnd                                    00218400
.Mxfr_Func6MoveTttSec ANOP                                              00218500
.*                                                                      00218600
.* Parent key processing                                                00218700
         AIF   ('&PARENTKEYP' NE 'PSWKEY').Mxfr_ParKeyNoPswKey          00218800
.* PSW key logic                                                        00218900
         LR    1,2                 SAVE GPR 2 BEFORE USING IPK          00219000
         IPK                       SAVE PSWKEY IN BITS 24-27 OF GPR2    00219100
         LR    0,2                 SAVE PSWKEY IN GPR 1                 00219200
         LR    2,1                 RESTORE GPR 2 VALUE                  00219300
         AGO   .Mxfr_ParKeyEnd                                          00219400
.*                                                                      00219500
.Mxfr_ParKeyNoPswKey ANOP                                               00219600
         AIF   ('&PARENTKEYP' NE 'VALUE').Mxfr_ParKeyNoValue            00219700
&T1      SETC  '&PARENTKEY'                                             00219800
         AIF   ('&PARENTKEY'(1,1) NE '(').Mxfr_ParKeyValue              00219900
&T1      SETC  '&PARENTKEY'(2,K'&PARENTKEY-2)                           00220000
&T1      SETC  '0(&T1.)'                                                00220100
.Mxfr_ParKeyValue ANOP                                                  00220200
.* Value logic                                                          00220300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00220400
         IC    0,&T1                                                    00220500
         AGO   .Mxfr_ParKeyEnd                                          00220600
.*                                                                      00220700
.Mxfr_ParKeyNoValue ANOP                                                00220800
.* No value logic                                                       00220900
         LA    0,0                    SET MVCP PSW KEY TO ZERO          00221000
.*                                                                      00221100
.Mxfr_ParKeyEnd  ANOP                                                   00221200
.*                                                                      00221300
.* Copy the Transaction Token from Parent PB                            00221400
         LA    1,32                   LENGTH OF TRANSACTION TRACE TOKEN 00221500
         MVCP  PB_TRANS_TTOKEN(1),PB_TRANS_TTOKEN-PB(15),0             *00221600
                                      SAVE THE TRANSACTION TRACE TOKEN  00221700
.Mxfr_Func6MoveTttEnd ANOP                                              00221800
.*                                                                      00221900
.Mxfr_Func6End       ANOP                                               00222000
.*                                                                      00222100
*--------------------------------------------------------------------*  00222200
* No related Home address space exists                               *  00222300
*--------------------------------------------------------------------*  00222400
IWM4MXFR_HOME&SYSNDX DS 0H                                              00222500
.*                                                                      00222600
.*--------------------------------------------------------------------- 00222700
.*                                                                      00222800
.*       Function(Continue ! Return) code expansion follows             00222900
.*                                                                      00223000
.*--------------------------------------------------------------------- 00223100
*                                                                       00223200
         MVI   PB_STATE,PB_STATE_&STATEVAL.                             00223300
         AIF   ('&XCOMPCODE' NE 'YES').Mxfr_CompCode9_No                00223400
         LA    15,IWMRETCODEOK         SET RETURN CODE = OK             00223500
.Mxfr_CompCode9_No  ANOP                                                00223600
.*                                                                      00223700
         AIF   ('&XEWLM' NE 'YES').Mxfr_NoEwlm                     @L0A 00223800
*--------------------------------------------------------------------*  00223900
* Begin EWLM reprot support                                          *  00224000
*--------------------------------------------------------------------*  00224100
.* THE MONTKN PB CAN BE HOME RELATED. IF SO, WE WILL DO NOTHING.        00224200
         LG    1,PBX_PARENT_MONTKN     EXTRACT THE LONG PARENT          00224300
*                                      MONITORING TOKEN                 00224400
         LTGR  1,1                                                      00224500
         JZ    Mxfr&SYSNDX._EwlmLoadPar                            @P3C 00224600
         ICM   1,15,PB_PARENT_MONTKN   EXTRACT PARENT MONITORING TOKEN  00224700
Mxfr&SYSNDX._EwlmLoadPar DS 0H                                          00224800
.*  A MONITOR TOKEN HAS HIGH ORDER BIT ON, I.E. <0                      00224900
         JH    Mxfr&SYSNDX._EwlmEnd BRANCH IF RELATED TO HOME SPACE(>0) 00225000
*                                      MONITORING TOKEN            @P3C 00225100
         MVI   PB_EWLM_REQUEST,PB_EWLM_REQUEST_XFER_&XFUNCTION._&XPAREN*00225200
               TENV                                                     00225300
.*                                                                      00225400
         AIF   ('&XFUNCTION' NE 'RETURN').Mxfr_EwlmFuncReturn           00225500
         AIF   (N'&WORKREQ_STA LE 0).Mxfr_EwlmWrStaNone                 00225600
&T2      SETC  '&WORKREQ_STA'                                           00225700
         AIF   ('&WORKREQ_STA'(1,1) NE '(').Mxfr_EwlmWrStaValid         00225800
&T2      SETC  '&WORKREQ_STA'(2,K'&WORKREQ_STA-2)                       00225900
&T2      SETC  '0(&T2.)'                                                00226000
.* &T2 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00226100
.Mxfr_EwlmWrStaValid ANOP                                               00226200
         MVC   PB_EWLM_WORKREQ_STA,&T2                                  00226300
         AGO   .Mxfr_EwlmFuncReturn                                     00226400
.Mxfr_EwlmWrStaNone ANOP                                                00226500
.*       LA    1,IWMEWLMARMSTATUSNONE                                   00226600
         SLR   1,1                                                      00226700
         BCTR  1,0                                                      00226800
         ST    1,PB_EWLM_WORKREQ_STA  WORKREQ_STA NOT SPECIFIED=-1      00226900
.Mxfr_EwlmFuncReturn ANOP                                               00227000
         SGR   0,0                    Clear GPR0                        00227100
         LGR   1,14                   GPR1  ->  PB                      00227200
         LLGT  14,16(0,0)             GET  CVT  ADDRESS                 00227300
         LLGT  14,X'8C'(14,0)         Get ECVT Address                  00227400
         LLGT  14,X'C4'(14,0)         Get WMVT Address                  00227500
         AIF   ('&SYSAM64' NE 'YES').Mxfr_EwlmAmode31                   00227600
         LLGT  15,X'164'(14,0)        Get M_Xfer Entry Point Addr       00227700
         BASR  14,15                  Call 64bit Classify Routine       00227800
         LGR   14,1                   GPR14 ->  PB                 @L0A 00227900
         AGO   .Mxfr_EwlmEnd                                            00228000
.Mxfr_EwlmAmode31 ANOP                                                  00228100
         SAM31                                                     @P3A 00228200
         LLGTR 1,1                    Clear High Half of R1             00228300
         LLGT  15,X'160'(14,0)        Get M_Xfer Entry Point Addr       00228400
         BASR  14,15                  Call 31bit Classify Routine       00228500
         LGR   14,1                   GPR14 ->  PB                 @L0A 00228600
.Mxfr_EwlmEnd ANOP                                                      00228700
Mxfr&SYSNDX._EwlmEnd DS 0H                                         @L0A 00228800
.Mxfr_NoEwlm ANOP                                                       00228900
.*                                                                      00229000
.* END EWLM Reporting                                 @WLMPERS          00229100
.*                                                                      00229200
         DROP  14                                                       00229300
Mxfr&SYSNDX._End DS    0H                    END LABEL                  00229400
.*--------------------------------------------------------------------- 00229500
.* Set AMODE 31                                                         00229600
.*--------------------------------------------------------------------- 00229700
         AIF   ('&SYSAM64' EQ 'YES').Mxfr_A31_Switch1              @P3A 00229800
         SAM31                                                     @P3A 00229900
.Mxfr_A31_Switch1 ANOP                                             @P3A 00230000
Mxfr&SYSNDX._EndX DS    0H                   END LABEL NO SAM64    @P3A 00230100
.*******************************************************************    00230200
.***        RETURN CODE PROCESSING                                      00230300
.*******************************************************************    00230400
         AIF   (N'&RETCODE LE 0).IWM4MXFR_ENDRC_EXP                     00230500
         AIF   ('&XRETCODE'(1,1) EQ '(').IWM4MXFR_RC_REG                00230600
         AIF   ('&XRETCODE' EQ 'GPR15').IWM4MXFR_ENDRC_EXP              00230700
         AIF   ('&XRETCODE' EQ 'REG15').IWM4MXFR_ENDRC_EXP              00230800
         AIF   ('&XRETCODE' EQ 'R15').IWM4MXFR_ENDRC_EXP                00230900
         AIF   ('&XRETCODE' EQ '15').IWM4MXFR_ENDRC_EXP                 00231000
         ST    15,&XRETCODE                                             00231100
         AGO   .IWM4MXFR_ENDRC_EXP                                      00231200
.*                                                                      00231300
.IWM4MXFR_RC_REG      ANOP  ,                                           00231400
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00231500
         AIF   ('&T1' EQ 'GPR15').IWM4MXFR_ENDRC_EXP                    00231600
         AIF   ('&T1' EQ 'REG15').IWM4MXFR_ENDRC_EXP                    00231700
         AIF   ('&T1' EQ 'R15').IWM4MXFR_ENDRC_EXP                      00231800
         AIF   ('&T1' EQ '15').IWM4MXFR_ENDRC_EXP                       00231900
         LR    &T1,15                                                   00232000
.IWM4MXFR_ENDRC_EXP   ANOP  ,                                           00232100
.*******************************************************************    00232200
.***        REASON CODE PROCESSING                                      00232300
.*******************************************************************    00232400
         AIF   (N'&RSNCODE LE 0).IWM4MXFR_ENDRSN_EXP                    00232500
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWM4MXFR_RSN_REG               00232600
         AIF   ('&XRSNCODE' EQ 'GPR0').IWM4MXFR_ENDRSN_EXP              00232700
         AIF   ('&XRSNCODE' EQ 'GPR00').IWM4MXFR_ENDRSN_EXP             00232800
         AIF   ('&XRSNCODE' EQ 'REG0').IWM4MXFR_ENDRSN_EXP              00232900
         AIF   ('&XRSNCODE' EQ 'REG00').IWM4MXFR_ENDRSN_EXP             00233000
         AIF   ('&XRSNCODE' EQ 'R0').IWM4MXFR_ENDRSN_EXP                00233100
         AIF   ('&XRSNCODE' EQ '0').IWM4MXFR_ENDRSN_EXP                 00233200
         AIF   ('&XRSNCODE' EQ '00').IWM4MXFR_ENDRSN_EXP                00233300
         ST    0,&XRSNCODE                                              00233400
         AGO   .IWM4MXFR_ENDRSN_EXP                                     00233500
.*                                                                      00233600
.IWM4MXFR_RSN_REG     ANOP  ,                                           00233700
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00233800
         AIF  ('&ZCGPR' EQ 'GPR0').IWM4MXFR_ENDRSN_EXP                  00233900
         AIF  ('&ZCGPR' EQ 'GPR00').IWM4MXFR_ENDRSN_EXP                 00234000
         AIF  ('&ZCGPR' EQ 'REG0').IWM4MXFR_ENDRSN_EXP                  00234100
         AIF  ('&ZCGPR' EQ 'REG00').IWM4MXFR_ENDRSN_EXP                 00234200
         AIF  ('&ZCGPR' EQ 'R0').IWM4MXFR_ENDRSN_EXP                    00234300
         AIF  ('&ZCGPR' EQ '0').IWM4MXFR_ENDRSN_EXP                     00234400
         AIF  ('&ZCGPR' EQ '00').IWM4MXFR_ENDRSN_EXP                    00234500
         LR   &T1,0                                                     00234600
.IWM4MXFR_ENDRSN_EXP  ANOP  ,                                           00234700
.*******************************************************************    00234800
&ZIWM4MXFR            SETC  'YES'          SET IWM4MXFR USED            00234900
         POP   PRINT                                                    00235000
*                                            IWM4MXFR END               00235100
         SPACE 1                                                        00235200
         MEXIT                                                          00235300
.NOCODENEEDED ANOP                                                      00235400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00235500
.********************************************************************   00235600
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00235700
.********************************************************************   00235800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00235900
                      LCLA  &ZOPN1         INVOCATION INDEX             00236000
                      LCLC  &ZOPL(4095)    LABEL                        00236100
                      LCLC  &ZOPO(4095)    OPERATION                    00236200
                      LCLC  &ZOPV(4095)    VALUE                        00236300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00236400
.*                                                                      00236500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00236600
.*******************************************************************    00236700
.***AO.X02  RETURN CODE PROCESSING                                      00236800
.*******************************************************************    00236900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00237000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00237100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00237200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00237300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00237400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00237500
&ZOPN                 SETA  &ZOPN+1                                     00237600
&ZOPL(&ZOPN)          SETC  ' '                                         00237700
&ZOPO(&ZOPN)          SETC  'ST'                                        00237800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00237900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00238000
                      AGO   .ZMRETX                                     00238100
.*                                                                      00238200
.ZMRET2               ANOP  ,                                           00238300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00238400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00238500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00238600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00238700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00238800
&ZOPN                 SETA  &ZOPN+1                                     00238900
&ZOPL(&ZOPN)          SETC  ' '                                         00239000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00239100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00239200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00239300
.ZMRETX               ANOP  ,                                           00239400
.*******************************************************************    00239500
.***AO.X03  REASON CODE PROCESSING                                      00239600
.*******************************************************************    00239700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00239800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00239900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00240000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00240100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00240200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00240300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00240400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00240500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00240600
&ZOPN                 SETA  &ZOPN+1                                     00240700
&ZOPL(&ZOPN)          SETC  ' '                                         00240800
&ZOPO(&ZOPN)          SETC  'ST'                                        00240900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00241000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00241100
                      AGO   .ZMRSNX                                     00241200
.*                                                                      00241300
.ZMRSN2               ANOP  ,                                           00241400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00241500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00241600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00241700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00241800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00241900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00242000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00242100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00242200
&ZOPN                 SETA  &ZOPN+1                                     00242300
&ZOPL(&ZOPN)          SETC  ' '                                         00242400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00242500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00242600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00242700
.ZMRSNX               ANOP  ,                                           00242800
.*******************************************************************    00242900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00243000
.*******************************************************************    00243100
                      ACTR  10000                                       00243200
.*                                                                      00243300
                      LCLA  &ZLC           COLUMN POSITION              00243400
                      LCLA  &ZOPX          LIST TABLE INDEX             00243500
                      LCLC  &ZLL           LABEL                        00243600
                      LCLC  &ZLOP          OPERATION                    00243700
                      LCLC  &ZLV           VALUE                        00243800
                      LCLC  &ZLD           DESCRIPTION                  00243900
.*                                                                      00244000
&ZOPX                 SETA  1                                           00244100
.*******************************************************************    00244200
.***AP.X01  FORMAT GENERATED CODE                                       00244300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00244400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00244500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00244600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00244700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00244800
                      AIF   (K'&ZLD LE 0).ZL51                          00244900
&ZLC                  SETA  35             COMMENT COLUMN               00245000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00245100
&ZLC                  SETA  33             COMMENT COLUMN               00245200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00245300
&ZLV                  SETC  '&ZLV'.' '                                  00245400
                      AGO   .ZL31                                       00245500
.*                                                                      00245600
.ZL41                 ANOP  ,                                           00245700
&ZLV                  SETC  '&ZLV'.' '                                  00245800
.ZL51                 ANOP  ,                                           00245900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00246000
.*                                                                      00246100
&ZLL     &ZLOP &ZLV                                                     00246200
.*                                                                      00246300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00246400
                      AGO   .ZL21          CONTINUE LOOPING             00246500
.*                                                                      00246600
.ZLX1                 ANOP  ,                                           00246700
.*******************************************************************    00246800
.***AP.X02  END OF IWM4MXFR MACRO                                       00246900
&ZIWM4MXFR            SETC  'YES'          SET IWM4MXFR USED            00247000
         POP   PRINT                                                    00247100
*                                            IWM4MXFR-0                 00247200
         SPACE 1                                                        00247300
.ZLX2                 ANOP  ,                                           00247400
         MEND                                                           00247500
**********************************************************************/ 00247600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00247700
*%IWM4MXFR: MACRO KEYS(FUNCTION,RUNTIME_VER,WORKREQ_STA,MONTKN,         00247800
*                 MONTKN64,PARENTKEYP,PARENTKEY,PARENTENV,EWLM,         00247900
*                 COMPCODE,RETCODE,RSNCODE);                            00248000
*  ANS('?'!!MACLABEL!!' '!!'IWM4MXFP '!!MACLIST!!                       00248100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00248200
*%END IWM4MXFR;                                                         00248300
