*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMSGOX                              -01/13/18-<6> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Message-Out                               * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2010, 2015                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77A0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXCMSGOX macro is the interface to the Cross System        * 00002100
*      Coupling Facility (XCF) Message-Out service. This interface is * 00002200
*      the successor to the IXCMSGO macro interface, contains all the * 00002300
*      functionality of the IXCMSGO Message-Out macro interface and   * 00002400
*      is the suggested XCF Message-Out service interface to use.     * 00002500
*                                                                     * 00002600
*      An active member of an XCF group uses the Message-Out service  * 00002700
*      to send data to one or more active member(s) of the same       * 00002800
*      group.  XCF delivers the message by calling the message exit   * 00002900
*      routine that the target member defined when it joined          * 00003000
*      (IXCJOIN) the group.  The target member can invoke the         * 00003100
*      message-in service (IXCMSGIX) to receive the data, or can      * 00003200
*      invoke the message-control service (IXCMSGC) to save the       * 00003300
*      message in XCF managed storage for later processing.           * 00003400
*                                                                     * 00003500
*      To invoke the Message-Out service, the sender must indicate:   * 00003600
*                                                                     * 00003700
*                                                                     * 00003800
*      o   Who is sending the message                                 * 00003900
*                                                                     * 00004000
*      o   Target(s) to receive the message                           * 00004100
*                                                                     * 00004200
*      o   The content of the message                                 * 00004300
*                                                                     * 00004400
*      o   Any desired delivery options or message attributes         * 00004500
*                                                                     * 00004600
*      o   Desired completion notification                            * 00004700
*                                                                     * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*      SOURCE    The sender must be an active member of an XCF group. * 00005200
*                The sender identifies itself using the MEMTOKEN      * 00005300
*                keyword.                                             * 00005400
*                                                                     * 00005500
*      TARGET    The SENDTO keyword indicates to whom the message is  * 00005600
*                to be sent.                                          * 00005700
*                                                                     * 00005800
*                An active member can send a message to active        * 00005900
*                members within its XCF group:                        * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*                o   A particular member (TARGET), or                 * 00006300
*                                                                     * 00006400
*                o   All members of the group (MEMBERS=ALL), or       * 00006500
*                                                                     * 00006600
*                o   Every member but the sender (MEMBERS=OTHER), or  * 00006700
*                                                                     * 00006800
*                o   Selected members of the group (MEMBERS=TABLE),   * 00006900
*                    or                                               * 00007000
*                                                                     * 00007100
*                o   The originator that requested a response         * 00007200
*                    (RESPONSEID)                                     * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*      MESSAGE CONTENT                                                * 00007700
*                                                                     * 00007800
*                The data sent to the target be any combination (or   * 00007900
*                none) of message control data (MSGCNTL) and message  * 00008000
*                data.  In the simplest case, the message data        * 00008100
*                resides in one contiguous virtual storage area       * 00008200
*                (MSGBUF).  Alternatively, the sender can have the    * 00008300
*                Message-Out service gather the message data from     * 00008400
*                discontiguous storage areas (MULTIPART=YES).  In     * 00008500
*                this case, the sender provides "elements" that       * 00008600
*                describe where the various pieces of the message     * 00008700
*                data can be located.  The elements can be entries in * 00008800
*                an array (ELEMFORM=TABLE) or they can be chained     * 00008900
*                together in a linked list (ELEMFORM=QUEUE).          * 00009000
*                                                                     * 00009100
*      OPTIONS   The sender can specify various options that          * 00009200
*                influence the delivery and/or processing of the      * 00009300
*                message (DELIVERMSG, GETRESPONSE, ATTRIBUTES,        * 00009400
*                TIMEOUT, MSGACCESS).                                 * 00009500
*                                                                     * 00009600
*      COMPLETION NOTIFICATION                                        * 00009700
*                                                                     * 00009800
*                Finally, the sender can specify whether the          * 00009900
*                Message-Out service should notify the sender when    * 00010000
*                the message completes (NOTIFY).  If so, the sender   * 00010100
*                can specify the circumstances (NOTIFYIF) and means   * 00010200
*                by which it is to receive said notification          * 00010300
*                (NOTIFYBY).                                          * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*      The Message-Out routine is given control from the IXCMSGOX     * 00010800
*      macro.  The IXCMSGOX macro will complete the parameter list    * 00010900
*      with caller provided data and generate a stacking, space       * 00011000
*      switching, program call to the Message-Out service.  The       * 00011100
*      IXCMSGOX macro is provided in list, execute, and standard      * 00011200
*      form.  The list form accepts no variable parameters and is     * 00011300
*      used only to reserve space for the Message-Out parameter list. * 00011400
*      The standard form is provided for use with routines which do   * 00011500
*      not require reentrant code.  The execute form is provided for  * 00011600
*      use with the list format for reentrant routines.  The IXCMSGOX * 00011700
*      macro is provided in PL/X and Assembler formats.               * 00011800
*                                                                     * 00011900
*      The parameter list must be located in the caller's primary     * 00012000
*      address space and may reside in 31-bit or 64-bit addressable   * 00012100
*      virtual storage.                                               * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*      INPUT REGISTERS:                                               * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                          GR0-GR1     reserved                       * 00012900
*                                                                     * 00013000
*                          GR2-GR13    undefined                      * 00013100
*                                                                     * 00013200
*                          GR14-GR15   reserved                       * 00013300
*                                                                     * 00013400
*                          AR0-AR1     reserved                       * 00013500
*                                                                     * 00013600
*                          AR2-AR13    undefined                      * 00013700
*                                                                     * 00013800
*                          AR14-AR15   reserved                       * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00014300
*                                                                     * 00014400
*      OUTPUT REGISTERS:                                              * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*                          GR0         reason code based on GR15      * 00014800
*                                                                     * 00014900
*                          GR1         used as work register by the   * 00015000
*                                      system                         * 00015100
*                                                                     * 00015200
*                          GR2-GR13    unchanged                      * 00015300
*                                                                     * 00015400
*                          GR14        used as work register by the   * 00015500
*                                      system                         * 00015600
*                                                                     * 00015700
*                          GR15        return code                    * 00015800
*                                                                     * 00015900
*                          AR0-AR1     used as work registers by the  * 00016000
*                                      system                         * 00016100
*                                                                     * 00016200
*                          AR2-AR13    unchanged                      * 00016300
*                                                                     * 00016400
*                          AR14-AR15   used as work registers by the  * 00016500
*                                      system                         * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*01* EXTERNAL CLASSIFICATION:                                         * 00017200
*                                                                     * 00017300
*02* GUPI: BASE                                                       * 00017400
*                                                                     * 00017500
*02* NONE: FIELDS                                                     * 00017600
*          XCFDATA                                                    * 00017700
*                                                                     * 00017800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00017900
*                                                                     * 00018000
*01* ENVIRONMENT:                                                     * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*      Dispatchable unit mode: Task or SRB mode.                      * 00018400
*                                                                     * 00018500
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00018600
*                        0-7.                                         * 00018700
*                                                                     * 00018800
*      AMODE:            31- or 64-bit.                               * 00018900
*                                                                     * 00019000
*                        Addressability notes:                        * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                        o   In order to pass keyword values that     * 00019400
*                            name and reference 64-bit addressable    * 00019500
*                            virtual storage, SYSSTATE AMODE64=YES    * 00019600
*                            must be specified prior to invoking the  * 00019700
*                            IXCMSGOX macro service.                  * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                        The following IXCMSGOX macro parameters may  * 00020200
*                        reside in either 31-bit or 64-bit            * 00020300
*                        addressable virtual storage:                 * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                        o   MSGBUF                                   * 00020700
*                                                                     * 00020800
*                        o   MSGCNTL                                  * 00020900
*                                                                     * 00021000
*                        o   ELEMENT                                  * 00021100
*                                                                     * 00021200
*                        o   TARGETS                                  * 00021300
*                                                                     * 00021400
*                        o   RETMSGOTOKEN                             * 00021500
*                                                                     * 00021600
*                        o   PARTLENTBL                               * 00021700
*                                                                     * 00021800
*                        o   PARTALETTBL                              * 00021900
*                                                                     * 00022000
*                        o   the TABLE or QUEUE of message elements   * 00022100
*                            that describe the message parts of a     * 00022200
*                            MULTIPART message.  The buffer addresses * 00022300
*                            contained within the message data        * 00022400
*                            elements may reference 31-bit or 64-bit  * 00022500
*                            storage                                  * 00022600
*                                                                     * 00022700
*                        o   the area used for the IXCMSGOX macro     * 00022800
*                            service parameter list.  See Programming * 00022900
*                            Requirements notes pertaining to a       * 00023000
*                            parameter list residing in 64-bit        * 00023100
*                            storage.                                 * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*      ASC mode:         Primary or Access Register.                  * 00023600
*                                                                     * 00023700
*                        If in Access Register ASC mode, specify      * 00023800
*                        SYSSTATE ASCENV=AR before invoking this      * 00023900
*                        macro.                                       * 00024000
*                                                                     * 00024100
*                        Unless MSGOUTASID(ANY) was specified at the  * 00024200
*                        time the group was joined, the primary must  * 00024300
*                        be equal to the requesting member's primary  * 00024400
*                        at the time the group was joined or MASTER   * 00024500
*                        address space, any secondary address space,  * 00024600
*                        any home address space.  If MSGOUTASID(ANY)  * 00024700
*                        was specified when the group was joined,     * 00024800
*                        IXCMSGO can be used from any address space.  * 00024900
*                                                                     * 00025000
*                        Swappable or non-swappable primary address   * 00025100
*                        space.                                       * 00025200
*                                                                     * 00025300
*                        When invoked from someplace besides the      * 00025400
*                        joiner's primary address space, some         * 00025500
*                        functions may not be available.  See macro   * 00025600
*                        usage notes below for more detail.           * 00025700
*                                                                     * 00025800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00025900
*                                                                     * 00026000
*      Locks:            No locks held.                               * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*01* PROGRAMMING REQUIREMENTS:                                        * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*    1.  If the program is in AR mode, issue the SYSSTATE ASCENV=AR   * 00026800
*        macro before issuing IXCMSGOX to generate code for AR mode.  * 00026900
*                                                                     * 00027000
*    2.  If the parameter list specified for the IXCMSGOX macro       * 00027100
*        service resides in 64-bit virtual storage above the          * 00027200
*        2-gigabyte bar, the caller must be executing in AMODE 64     * 00027300
*        when invoking the IXCMSGOX macro service.                    * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*01* SYNTAX:                                                          * 00027800
*                                                                     * 00027900
*Ýxlabel¨  IXCMSGOX     MEMTOKEN=xmemtoken                            * 00028000
*                    ÐÝ,SENDTO=MEMBER                                 * 00028100
*                    !     ,TARGET=xtarget                            * 00028200
*                    !   ÐÝ,DELIVERMSG=UNORDERED¨                     * 00028300
*                    !   ÔÝ,DELIVERMSG=ORDERED                        * 00028400
*                    !   !    Ý,STREAMID=»xstreamid!1º¨¨              * 00028500
*                    !   ¿Ý,DELIVERMSG=DUPLICATES¨                    * 00028600
*                    !   ÐÝ,GETRESPONSE=NO                            * 00028700
*                    !   !    Ý,TIMEOUT=»xtimeout!ZEROº¨¨             * 00028800
*                    !   ¿Ý,GETRESPONSE=YES                           * 00028900
*                    !         ,TIMEOUT=xtimeout¨¨                    * 00029000
*                    ÔÝ,SENDTO=GROUP                                  * 00029100
*                    !   Ð ,MEMBERS=TABLE                             * 00029200
*                    !   !     ,TARGETS=xtargets                      * 00029300
*                    !   !     ,#TARGETS=x#targets                    * 00029400
*                    !   !    Ý,NEXTTARGETOFF=»xnexttargetoff!8º¨     * 00029500
*                    !   Ô ,MEMBERS=ALL                               * 00029600
*                    !   ¿ ,MEMBERS=OTHER                             * 00029700
*                    !    Ý,FILTERGROUP=»xfiltergroup!SENDERSGROUPº¨  * 00029800
*                    !   ÐÝ,DELIVERMSG=UNORDERED¨                     * 00029900
*                    !   ÔÝ,DELIVERMSG=ORDERED                        * 00030000
*                    !   !    Ý,STREAMID=»xstreamid!1º¨¨              * 00030100
*                    !   ¿Ý,DELIVERMSG=DUPLICATES¨                    * 00030200
*                    !   ÐÝ,GETRESPONSE=NO                            * 00030300
*                    !   !    Ý,TIMEOUT=»xtimeout!ZEROº¨¨             * 00030400
*                    !   ¿Ý,GETRESPONSE=YES                           * 00030500
*                    !         ,TIMEOUT=xtimeout¨¨                    * 00030600
*                    ¿Ý,SENDTO=ORIGINATOR                             * 00030700
*                          ,RESPONSEID=xresponseid                    * 00030800
*                         Ý,TIMEOUT=»xtimeout!ZEROº¨¨                 * 00030900
*                    ÐÝ,MULTIPART=NO                                  * 00031000
*                    !   Ð ,MSGCNTL=xmsgcntl                          * 00031100
*                    !   ¿ ,MSGBUF=xmsgbuf                            * 00031200
*                    !         ,MSGLEN=xmsglen¨                       * 00031300
*                    ¿Ý,MULTIPART=YES                                 * 00031400
*                         Ý,MSGCNTL=»xmsgcntl!ALLZEROº¨               * 00031500
*                         Ý,MSGLEN=»xmsglen!SUMPARTLENSº¨             * 00031600
*                         Ý,#MSGPARTS=»x#msgparts!ATLEASTONEº¨        * 00031700
*                          ,ELEMENT=xelement                          * 00031800
*                             Ý,ELEMADDRMODE=»31!64º¨                 * 00031900
*                        Ð ,ELEMFORM=TABLE                            * 00032000
*                        !     ,NEXTOFF=xnextoff                      * 00032100
*                        ¿ ,ELEMFORM=QUEUE                            * 00032200
*                              ,NEXTPTROFF=xnextptroff                * 00032300
*                             Ý,ENDOFQUEUE=»xendofqueue!ZEROº¨        * 00032400
*                        Ð ,PARTOFF=xpartoff                          * 00032500
*                        ¿ ,PARTPTROFF=xpartptroff                    * 00032600
*                            ÐÝ,PARTALET=»xpartalet!ZEROº             * 00032700
*                            Ô ,PARTALETOFF=»xpartaletoffº            * 00032800
*                            ¿ ,PARTALETTBL=»xpartalettblº¨           * 00032900
*                        Ð ,PARTLEN=xpartlen                          * 00033000
*                        Ô ,PARTLENOFF=xpartlenoff                    * 00033100
*                        ¿ ,PARTLENTBL=xpartlentbl¨                   * 00033200
*                     Ý,MSGSTGKEY=»xmsgstgkey!ANYº¨                   * 00033300
*                    ÐÝ,MSGACCESS=SYNC¨                               * 00033400
*                    ÔÝ,MSGACCESS=SYNCSUSPEND                         * 00033500
*                    !     ,SENDTIME=xsendtime¨                       * 00033600
*                    ¿Ý,MSGACCESS=ASYNC¨                              * 00033700
*                    ÐÝ,NOTIFY=NO¨                                    * 00033800
*                    ¿Ý,NOTIFY=YES                                    * 00033900
*                         Ý,USERDATA=»xuserdata!ALLZEROº¨             * 00034000
*                        ÐÝ,NOTIFYIF=COMPLETED¨                       * 00034100
*                        ¿Ý,NOTIFYIF=FAILED¨                          * 00034200
*                        ÔÝ,NOTIFYBY=EXIT                             * 00034300
*                        !    Ý,NOTIFYEXIT=»xnotifyexit!FROMJOINº¨¨   * 00034400
*                        !Ý,RETMSGOTOKEN=xretmsgotoken¨¨              * 00034500
*                     Ý,ATTRIBUTES=NONE!RECOVERY!CRITICAL¨            * 00034600
*                     Ý,RETCODE=xretcode¨                             * 00034700
*                     Ý,RSNCODE=xrsncode¨                             * 00034800
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00034900
*                    ÐÝ,MF=S¨                                         * 00035000
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00035100
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*      Where:                                                         * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*      Ýxlabel¨                                                       * 00035800
*          is an optional symbol, starting in column 1, that is the   * 00035900
*          name on the IXCMSGOX macro invocation.  The name must      * 00036000
*          conform to the rules for an ordinary assembler language    * 00036100
*          symbol.                                                    * 00036200
*          DEFAULT: No name.                                          * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*      MEMTOKEN=xmemtoken                                             * 00036800
*          is the name (RS-type), or address in register (2)-(12), of * 00036900
*          a required 64 bit input variable containing the member     * 00037000
*          token of the XCF group member that is sending the message. * 00037100
*          The member token was returned by the IXCJOIN invocation    * 00037200
*          that caused the member to become an active member of its   * 00037300
*          group.                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*      ÝSENDTO=»MEMBER!GROUP!ORIGINATORº¨                             * 00037900
*          is an optional keyword input that indicates the member(s)  * 00038000
*          to which the message should be sent.                       * 00038100
*          DEFAULT: MEMBER                                            * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*          ÝSENDTO=MEMBER                                             * 00038500
*              Send the message to the (one) member indicated by      * 00038600
*              TARGET.                                                * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*              TARGET=xtarget                                         * 00039000
*                  is the name (RS-type), or address in register      * 00039100
*                  (2)-(12), of a required 64 bit input variable      * 00039200
*                  containing the member token of the target member.  * 00039300
*                                                                     * 00039400
*                  Typically, the target member token is obtained     * 00039500
*                  from data presented to the source member's group   * 00039600
*                  exit when XCF provides notification that the       * 00039700
*                  target member became active in the group, from     * 00039800
*                  answer data provided by the IXCQUERY service       * 00039900
*                  (mapped by IXCYQUAA), from the MEPLSRCE field in   * 00040000
*                  the Message Exit Parameter List (mapped by         * 00040100
*                  IXCYMEPL), or from the MnplTrRespSrce field in the * 00040200
*                  Message Notification Parameter List (mapped by     * 00040300
*                  IXCYMNPL).                                         * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*              ÝDELIVERMSG=»UNORDERED!ORDERED!DUPLICATESº¨            * 00040900
*                  is an optional keyword input that indicates        * 00041000
*                  whether the message is to be delivered in          * 00041100
*                  sequential order or not or whether the target      * 00041200
*                  member can tolerate receiving the message multiple * 00041300
*                  times.                                             * 00041400
*                  DEFAULT: UNORDERED                                 * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                  ÝDELIVERMSG=UNORDERED¨                             * 00041800
*                      The message is to be delivered as soon as      * 00041900
*                      possible.  No ordering is imposed on this      * 00042000
*                      message with respect to any other message sent * 00042100
*                      by the sending member to the target member.    * 00042200
*                                                                     * 00042300
*                      Given any other message sent by the sending    * 00042400
*                      member to the target member, no assumption can * 00042500
*                      be made about the order in which that message  * 00042600
*                      and this message will be delivered.            * 00042700
*                                                                     * 00042800
*                  ÝDELIVERMSG=ORDERED                                * 00042900
*                      An ordering is to be imposed on this message   * 00043000
*                      with respect to other ordered messages sent by * 00043100
*                      the sending member to the target member.  The  * 00043200
*                      ordering is determined by the order in which   * 00043300
*                      the message-out service accepts the messages   * 00043400
*                      for delivery.  For a sender to be absolutely   * 00043500
*                      certain of the order in which two such         * 00043600
*                      messages will be delivered, it must wait for   * 00043700
*                      the message-out service to return from         * 00043800
*                      processing the first message before attempting * 00043900
*                      to send the second ordered message.  The       * 00044000
*                      message exit routine of the target member will * 00044100
*                      be presented the ordered messages in the same  * 00044200
*                      order that they were accepted for delivery.    * 00044300
*                      Delivery of these messages will be delayed as  * 00044400
*                      needed to ensure that proper ordering occurs.  * 00044500
*                                                                     * 00044600
*                      Note that the ordering is imposed on the       * 00044700
*                      messages sent between a particular pair of     * 00044800
*                      members.  The ordered delivery of messages     * 00044900
*                      sent between one particular pair of members is * 00045000
*                      independent of message delivery between any    * 00045100
*                      other pair of members and is also independent  * 00045200
*                      of message delivery of unordered messages.     * 00045300
*                                                                     * 00045400
*                      Between a particular pair of members, the      * 00045500
*                      STREAMID keyword can be used to send messages  * 00045600
*                      in independently ordered streams.  The streams * 00045700
*                      of any one pair of members are independent of  * 00045800
*                      the streams of any other pair of members.  For * 00045900
*                      a given pair of members, messages within a     * 00046000
*                      particular stream are delivered independently  * 00046100
*                      of any other stream.                           * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*                      ÝSTREAMID=»xstreamid!1º¨¨                      * 00046500
*                          is the name (RS-type), or address in       * 00046600
*                          register (2)-(12), of an optional fullword * 00046700
*                          input variable, or decimal value,          * 00046800
*                          identifying the stream of ordered messages * 00046900
*                          to which this message belongs.  The value  * 00047000
*                          specified for STREAMID must be between 0   * 00047100
*                          and 65535 (decimal), inclusive.  XCF       * 00047200
*                          assigns no meaning to the STREAMID other   * 00047300
*                          than for the purpose of providing          * 00047400
*                          independently ordered streams of messages  * 00047500
*                          between the sending member and target      * 00047600
*                          member.                                    * 00047700
*                          DEFAULT: 1 - stream id 1                   * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*                  ÝDELIVERMSG=DUPLICATES¨                            * 00048200
*                      Indicates that the target member(s) can        * 00048300
*                      tolerate receiving the message multiple times. * 00048400
*                      In general, one should expect exactly one      * 00048500
*                      instance of the message to be delivered to     * 00048600
*                      each target member.  However, if the           * 00048700
*                      signalling path over which the message was     * 00048800
*                      sent is restarted or stopped before the signal * 00048900
*                      is known to have been transferred to the       * 00049000
*                      target system, this option allows XCF to       * 00049100
*                      resend the signal to the target member via an  * 00049200
*                      alternate signalling path without first        * 00049300
*                      discovering whether the target system had      * 00049400
*                      already received the signal.  If the original  * 00049500
*                      signal did in fact get transferred to the      * 00049600
*                      target system, then both the original message  * 00049700
*                      and the resent copy could be delivered to the  * 00049800
*                      target member.  If the signalling path used to * 00049900
*                      send the second instance of the signal is      * 00050000
*                      similarly restarted or stopped, then XCF could * 00050100
*                      send yet another instance of the signal via an * 00050200
*                      alternate signalling path.  Thus specifying    * 00050300
*                      DELIVERMSG=DUPLICATES could potentially result * 00050400
*                      in an arbitrary number of copies of the        * 00050500
*                      message being delivered to the targeted        * 00050600
*                      member.  It is up to the sender to determine   * 00050700
*                      whether or not the target member can tolerate  * 00050800
*                      duplicate messages.  If the message is being   * 00050900
*                      broadcast to multiple targets, then every      * 00051000
*                      target member must tolerate duplicate copies   * 00051100
*                      of the message.                                * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*              ÝGETRESPONSE=»NO!YESº¨                                 * 00051900
*                  is an optional keyword input indicating whether    * 00052000
*                  XCF is to manage the collection of responses to    * 00052100
*                  this message.                                      * 00052200
*                  DEFAULT: NO                                        * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*                  ÝGETRESPONSE=NO                                    * 00052600
*                      XCF is not to manage collection of responses   * 00052700
*                      for this message.  Management of responses, if * 00052800
*                      any, is the responsibility of the user.        * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*                      ÝTIMEOUT=»xtimeout!ZEROº¨¨                     * 00053200
*                          is the name (RS-type), or address in       * 00053300
*                          register (2)-(12), of an optional halfword * 00053400
*                          input indicating the number of seconds     * 00053500
*                          that the user is willing to allow for the  * 00053600
*                          message to complete.  The timeout value    * 00053700
*                          specified must be between one and '7FFF'X, * 00053800
*                          inclusive.  If the message has not         * 00053900
*                          otherwise completed before the timeout     * 00054000
*                          value expires, the message is declared to  * 00054100
*                          be completed.  Message completion is then  * 00054200
*                          processed as indicated by the NOTIFY       * 00054300
*                          keywords.  See the NOTIFY keyword for a    * 00054400
*                          definition of message completion.          * 00054500
*                                                                     * 00054600
*                          Note that a specification of a timeout     * 00054700
*                          value allows XCF to queue a message that   * 00054800
*                          might otherwise have been rejected for     * 00054900
*                          lack of an XCF I/O buffer or for lack of   * 00055000
*                          signalling connectivity to the target      * 00055100
*                          system (return code 'C'x, reason codes 4   * 00055200
*                          and 8 respectively).                       * 00055300
*                          DEFAULT: ZERO - immediate send required    * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*                  ÝGETRESPONSE=YES                                   * 00055800
*                      XCF is to manage the collection of any         * 00055900
*                      response(s) to this message.  When completed,  * 00056000
*                      the sender is presented with the collected     * 00056100
*                      response message(s).  As part of this          * 00056200
*                      management, XCF recognizes situations for      * 00056300
*                      which it is no longer reasonable to expect a   * 00056400
*                      response (ie, target member's system fails).   * 00056500
*                                                                     * 00056600
*                      Response collection is a cooperative effort    * 00056700
*                      between XCF and the target member(s).  When    * 00056800
*                      XCF presents this message to the target        * 00056900
*                      member's exit routine (message or notify), a   * 00057000
*                      flag in the parameter list is set to indicate  * 00057100
*                      that XCF is managing response collection, and  * 00057200
*                      a response ID is provided to allow XCF to      * 00057300
*                      identify the message to which the response is  * 00057400
*                      to be associated.  After composing the         * 00057500
*                      response, the target member replies by         * 00057600
*                      invoking the Message-out service to send the   * 00057700
*                      response to the ORIGINATOR of the message      * 00057800
*                      identified by the RESPONSEID.  The particular  * 00057900
*                      form of the message-out invocation used to     * 00058000
*                      make the reply allows XCF to recognize the     * 00058100
*                      message as a response.  When collection of the * 00058200
*                      response(s) has completed, XCF presents the    * 00058300
*                      collected response message(s) to the member    * 00058400
*                      that originated the GETRESPONSE message-out    * 00058500
*                      request.  The manner in which the collected    * 00058600
*                      response(s) are presented is determined by the * 00058700
*                      NOTIFYBY keyword.                              * 00058800
*                                                                     * 00058900
*                      The target member itself must be capable of    * 00059000
*                      participating in this protocol by invoking the * 00059100
*                      message-out service to send its reply in a way * 00059200
*                      that allows XCF to recognize it as a response. * 00059300
*                      The CANREPLY keyword on the IXCJOIN macro      * 00059400
*                      indicates whether a member can participate in  * 00059500
*                      this protocol.  The message is sent to a       * 00059600
*                      target member even if it appears that the      * 00059700
*                      member is not able to participate in the XCF   * 00059800
*                      response collection protocol.  XCF will not    * 00059900
*                      however, expect a reply from such a member.    * 00060000
*                      The XCF Query Service (IXCQUERY) can be used   * 00060100
*                      to determine whether the XCF managed response  * 00060200
*                      collection protocol is supported for a         * 00060300
*                      particular target member.                      * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*                      TIMEOUT=xtimeout¨¨                             * 00060700
*                          is the name (RS-type), or address in       * 00060800
*                          register (2)-(12), of a required halfword  * 00060900
*                          input indicating the number of seconds     * 00061000
*                          that the user is willing to allow for the  * 00061100
*                          message to complete.  The timeout value    * 00061200
*                          specified must be between one and '7FFF'X, * 00061300
*                          inclusive.  If the message has not         * 00061400
*                          otherwise completed before the timeout     * 00061500
*                          value expires, the message is declared to  * 00061600
*                          be completed.  Message completion is then  * 00061700
*                          processed as indicated by the the NOTIFY   * 00061800
*                          keywords.  See the NOTIFY keyword for a    * 00061900
*                          definition of message completion.          * 00062000
*                                                                     * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*          ÝSENDTO=GROUP                                              * 00062800
*              Send the message to a collection of members in the     * 00062900
*              same group as the sending member.  This type of send   * 00063000
*              is often referred to as a "broadcast".                 * 00063100
*                                                                     * 00063200
*              Note that a send to GROUP where the collection of      * 00063300
*              members consists of only one member does not           * 00063400
*              necessarily have the same behavior as a send to        * 00063500
*              MEMBER.  For example, suppose that in both cases the   * 00063600
*              one target member specified was not a valid target.    * 00063700
*              In both cases, the message would not be sent to the    * 00063800
*              invalid target.  But the send to MEMBER request would  * 00063900
*              be rejected with return code 8 reason code 8 (target   * 00064000
*              not valid), whereas the send to a collection of group  * 00064100
*              members consisting of just one member would complete   * 00064200
*              with return code 4 reason code '404'x, indicating that * 00064300
*              the broadcast was accepted but the send to at least    * 00064400
*              one target was rejected.  The send reason code         * 00064500
*              reported for the individual target in the collection   * 00064600
*              would however indicate target not valid.               * 00064700
*                                                                     * 00064800
*                                                                     * 00064900
*              MEMBERS=»TABLE!ALL!OTHERº                              * 00065000
*                  is a required keyword input indicating how the     * 00065100
*                  collection of target members is to be determined.  * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                  MEMBERS=TABLE                                      * 00065500
*                      The sender is providing a table that contains  * 00065600
*                      a member token for each intended target        * 00065700
*                      member.                                        * 00065800
*                                                                     * 00065900
*                      The table is an array of entries.  Each entry  * 00066000
*                      has the same fixed size, and can contain data  * 00066100
*                      other than a target member token.  The storage * 00066200
*                      location named by TARGETS contains the first   * 00066300
*                      BIT(64) target member token.  Subsequent       * 00066400
*                      target member tokens are iteratively located   * 00066500
*                      by adding the value NEXTTARGETOFF to the       * 00066600
*                      address of each member token in turn.  The     * 00066700
*                      keyword #TARGETS indicates the number of       * 00066800
*                      entries in the table.                          * 00066900
*                                                                     * 00067000
*                      The table can contain "holes" in the sense     * 00067100
*                      that XCF will skip an entry if the indicated   * 00067200
*                      target member token is hexadecimal zero.       * 00067300
*                      However, XCF will preserve the "holes" so that * 00067400
*                      the TARGETS table has a one-to-one             * 00067500
*                      correspondence with any XCF table constructed  * 00067600
*                      for this request.  For example, the i'th entry * 00067700
*                      of the TARGETS table would correspond to the   * 00067800
*                      i'th MqaTargRespEntry (or MqaTargOnlyEntry)    * 00067900
*                      returned by the XCF Message Control Query      * 00068000
*                      Message Service (IXCMSGC), or would correspond * 00068100
*                      to the i'th MnplTargRespEntry (or              * 00068200
*                      MnplTargOnlyEntry) presented to a user         * 00068300
*                      notification exit routine.  The system incurs  * 00068400
*                      the least overhead if there are no "holes".    * 00068500
*                                                                     * 00068600
*                      The invoker is responsible for maintaining the * 00068700
*                      integrity of the TARGETS table until the       * 00068800
*                      Message-Out service returns.  If the table     * 00068900
*                      changes while being processed by the           * 00069000
*                      Message-Out service, the message may be sent   * 00069100
*                      to a different set of targets than expected.   * 00069200
*                      Also, the content of the entries in tables     * 00069300
*                      constructed by XCF about this request might no * 00069400
*                      longer correspond to the content of the        * 00069500
*                      entries in the TARGETS table.                  * 00069600
*                                                                     * 00069700
*                                                                     * 00069800
*                      TARGETS=xtargets                               * 00069900
*                          is the name (RS-type), or address in       * 00070000
*                          register (2)-(12), of a required character * 00070100
*                          input of a table containing a member token * 00070200
*                          for each intended target member.  The      * 00070300
*                          storage location named by TARGETS contains * 00070400
*                          the first member token to be processed.    * 00070500
*                                                                     * 00070600
*                          The storage area indicated by TARGETS must * 00070700
*                          either be in the caller's primary address  * 00070800
*                          space, or in an address/data space that is * 00070900
*                          addressable through a public entry on the  * 00071000
*                          caller's dispatchable unit access list     * 00071100
*                          (DU-AL), or in a common area data space.   * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*                                                                     * 00071500
*                                                                     * 00071600
*                      #TARGETS=x#targets                             * 00071700
*                          is the name (RS-type), or address in       * 00071800
*                          register (2)-(12), of a required fullword  * 00071900
*                          input variable, or decimal value,          * 00072000
*                          containing the number of entries in the    * 00072100
*                          TARGETS table.  The value specified for    * 00072200
*                          #TARGETS must be between one and the       * 00072300
*                          maximum number of members per XCF group    * 00072400
*                          that is supported by the sending system,   * 00072500
*                          inclusive.                                 * 00072600
*                                                                     * 00072700
*                          Note that #TARGETS indicates the number of * 00072800
*                          potential targets.  A TARGETS table entry  * 00072900
*                          containing a zero member token is          * 00073000
*                          considered a potential target and should   * 00073100
*                          be included in the #TARGETS count.         * 00073200
*                                                                     * 00073300
*                                                                     * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                      ÝNEXTTARGETOFF=»xnexttargetoff!8º¨             * 00073700
*                          is the name (RS-type), or address in       * 00073800
*                          register (2)-(12), of an optional fullword * 00073900
*                          input which indicates, in bytes, the       * 00074000
*                          relative location of the next member token * 00074100
*                          within the TARGETS table.  The next member * 00074200
*                          token is located by adding the indicated   * 00074300
*                          value to the location of the current       * 00074400
*                          member token.  Usually this value is       * 00074500
*                          simply the length of an individual entry   * 00074600
*                          in the TARGETS table.                      * 00074700
*                          DEFAULT: 8 - each table entry is a member  * 00074800
*                          token only                                 * 00074900
*                                                                     * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                  MEMBERS=ALL                                        * 00075300
*                      Send a copy of the message to every active     * 00075400
*                      member in the sender's XCF group (includes the * 00075500
*                      sender).                                       * 00075600
*                                                                     * 00075700
*                      XCF determines the collection of members that  * 00075800
*                      are currently active in the sender's XCF group * 00075900
*                      throughout the sysplex.  This collection is    * 00076000
*                      equivalent to the list of members that would   * 00076100
*                      be returned by invoking the XCF Query service  * 00076200
*                      IXCQUERY with REQTYPE=IMMEDIATE.               * 00076300
*                                                                     * 00076400
*                  MEMBERS=OTHER                                      * 00076500
*                      Send a copy of the message to every active     * 00076600
*                      member in the sender's XCF group except for    * 00076700
*                      the sender.                                    * 00076800
*                                                                     * 00076900
*                      XCF determines the collection of members that  * 00077000
*                      are currently active in the sender's XCF group * 00077100
*                      throughout the sysplex.  This collection is    * 00077200
*                      equivalent to the list of members that would   * 00077300
*                      be returned by invoking the XCF Query service  * 00077400
*                      IXCQUERY with REQTYPE=IMMEDIATE, with the      * 00077500
*                      sender excluded.                               * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*              ÝFILTERGROUP=»xfiltergroup!SENDERSGROUPº¨              * 00078300
*                  is the name (RS-type), or address in register      * 00078400
*                  (2)-(12), of an optional 8 character input         * 00078500
*                  variable containing the name of an XCF Group.  The * 00078600
*                  8 character group name must be left justified and  * 00078700
*                  padded on the right with blanks if necessary. The  * 00078800
*                  valid characters are A-Z, 0-9, $, @, and #.        * 00078900
*                                                                     * 00079000
*                  The FILTERGROUP specification is used to further   * 00079100
*                  qualify the set of members to which the message is * 00079200
*                  sent.  XCF will first construct the set of         * 00079300
*                  candidate target members according to the MEMBERS  * 00079400
*                  specification.  When sending the message, XCF will * 00079500
*                  apply the FILTERGROUP filter to each candidate     * 00079600
*                  target member as follows.  If the FILTERGROUP      * 00079700
*                  group has an active member on the system where the * 00079800
*                  candidate target member resides, the message is    * 00079900
*                  sent to the target member.  If the FILTERGROUP     * 00080000
*                  group does not have an active member on that       * 00080100
*                  system, the target member is "skipped".  The       * 00080200
*                  message will not be sent to that target member.    * 00080300
*                                                                     * 00080400
*                  In effect, FILTERGROUP prevents the message from   * 00080500
*                  being sent to certain systems in the sysplex.      * 00080600
*                  Such filtering could be useful in cases where two  * 00080700
*                  different XCF groups need to cooperate to perform  * 00080800
*                  their function.  It might be the case that a given * 00080900
*                  message only needs to be processed by systems that * 00081000
*                  have active members in both groups.                * 00081100
*                                                                     * 00081200
*                  For example, consider a four system sysplex with   * 00081300
*                  systems named SYS1, SYS2, SYS3, and SYS4.  A       * 00081400
*                  member of group MSGGRP needs to send a message to  * 00081500
*                  all the members of its group, but not every member * 00081600
*                  needs to process the message.  The message is only * 00081700
*                  of interest to those members of MSGGRP that reside * 00081800
*                  on systems that also have a member of group        * 00081900
*                  PEERGRP.  An active member of group MSGGRP might   * 00082000
*                  invoke IXCMSGOX with MEMBERS=ALL and               * 00082100
*                  FILTERGROUP='PEERGRP '.                            * 00082200
*                                                                     * 00082300
*                                                                     * 00082400
*                  o   Suppose MSGGRP had an active member on every   * 00082500
*                      system in the sysplex but group PEERGRP only   * 00082600
*                      had members on systems SYS3 and SYS4.  XCF     * 00082700
*                      would send the message to the members of       * 00082800
*                      MSGGRP residing on systems SYS3 and SYS4.  The * 00082900
*                      sends to the members of MSGGRP residing on     * 00083000
*                      systems SYS1 and SYS2 would be skipped because * 00083100
*                      PEERGRP does not have any active members on    * 00083200
*                      those systems.                                 * 00083300
*                                                                     * 00083400
*                  o   Suppose instead, that MSGGRP had members on    * 00083500
*                      systems SYS1, SYS2, and SYS3 while PEERGRP had * 00083600
*                      members on systems SYS2, SYS3, and SYS4.  XCF  * 00083700
*                      would send the message to the members of       * 00083800
*                      MSGGRP residing on systems SYS2 and SYS3 since * 00083900
*                      both groups have members on those two systems. * 00084000
*                      The send to the members of MSGGRP residing on  * 00084100
*                      SYS1 would be skipped because PEERGRP does not * 00084200
*                      have any members on SYS1.  Although PEERGRP    * 00084300
*                      has members on SYS4, MSGGRP does not.  Thus no * 00084400
*                      signals would be sent to system SYS4.          * 00084500
*                                                                     * 00084600
*                  o   If PEERGRP does not have any active members,   * 00084700
*                      all the target members are skipped.            * 00084800
*                                                                     * 00084900
*                                                                     * 00085000
*                                                                     * 00085100
*                  XCF determines the collection of members that are  * 00085200
*                  currently active in the group specified by         * 00085300
*                  FILTERGROUP.  This collection is equivalent to the * 00085400
*                  list of members that would be returned by invoking * 00085500
*                  the XCF Query Service IXCQUERY with                * 00085600
*                  REQTYPE=IMMEDIATE.                                 * 00085700
*                                                                     * 00085800
*                  Note that the target members must be in the same   * 00085900
*                  group as the member that sends the message.        * 00086000
*                  Specifying FILTERGROUP does not change that fact.  * 00086100
*                  The members of FILTERGROUP are not the targets for * 00086200
*                  the message.  The existence of active members in   * 00086300
*                  FILTERGROUP determines which members of the        * 00086400
*                  sending member's group will get the message.       * 00086500
*                                                                     * 00086600
*                  Specifying the name of the sending member's group  * 00086700
*                  is functionally equivalent to taking or specifying * 00086800
*                  the default of SENDERSGROUP.  However, explicitly  * 00086900
*                  coding the group name incurs more overhead.        * 00087000
*                                                                     * 00087100
*                  DEFAULT: SENDERSGROUP - the Sender's Group Name    * 00087200
*                                                                     * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*              ÝDELIVERMSG=»UNORDERED!ORDERED!DUPLICATESº¨            * 00087700
*                  is an optional keyword input that indicates        * 00087800
*                  whether the message is to be delivered in          * 00087900
*                  sequential order or not or whether the target      * 00088000
*                  member can tolerate receiving the message multiple * 00088100
*                  times.                                             * 00088200
*                  DEFAULT: UNORDERED                                 * 00088300
*                                                                     * 00088400
*                                                                     * 00088500
*                  ÝDELIVERMSG=UNORDERED¨                             * 00088600
*                      The message is to be delivered as soon as      * 00088700
*                      possible.  No ordering is imposed on this      * 00088800
*                      message with respect to any other message sent * 00088900
*                      by the sending member to the target member.    * 00089000
*                                                                     * 00089100
*                      Given any other message sent by the sending    * 00089200
*                      member to the target member, no assumption can * 00089300
*                      be made about the order in which that message  * 00089400
*                      and this message will be delivered.            * 00089500
*                                                                     * 00089600
*                  ÝDELIVERMSG=ORDERED                                * 00089700
*                      An ordering is to be imposed on this message   * 00089800
*                      with respect to other ordered messages sent by * 00089900
*                      the sending member to the target member.  The  * 00090000
*                      ordering is determined by the order in which   * 00090100
*                      the message-out service accepts the messages   * 00090200
*                      for delivery.  The message exit routine of the * 00090300
*                      target member will be presented the ordered    * 00090400
*                      messages in the same order that they were      * 00090500
*                      accepted for delivery.  Delivery of these      * 00090600
*                      messages will be delayed as needed to ensure   * 00090700
*                      that proper ordering occurs.                   * 00090800
*                                                                     * 00090900
*                      Note that the ordering is imposed on the       * 00091000
*                      messages sent between a particular pair of     * 00091100
*                      members.  The ordered delivery of messages     * 00091200
*                      sent between one particular pair of members is * 00091300
*                      independent of message delivery between any    * 00091400
*                      other pair of members.                         * 00091500
*                                                                     * 00091600
*                      Between a particular pair of members, the      * 00091700
*                      STREAMID keyword can be used to send messages  * 00091800
*                      in independently ordered streams.  The streams * 00091900
*                      of any one pair of members are independent of  * 00092000
*                      the streams of any other pair of members.  For * 00092100
*                      a given pair of members, messages within a     * 00092200
*                      particular stream are delivered independently  * 00092300
*                      of any other stream.                           * 00092400
*                                                                     * 00092500
*                                                                     * 00092600
*                      ÝSTREAMID=»xstreamid!1º¨¨                      * 00092700
*                          is the name (RS-type), or address in       * 00092800
*                          register (2)-(12), of an optional fullword * 00092900
*                          input variable, or decimal value,          * 00093000
*                          identifying the stream of ordered messages * 00093100
*                          to which this message belongs.  The value  * 00093200
*                          specified for STREAMID must be between 0   * 00093300
*                          and 65535 (decimal), inclusive.  XCF       * 00093400
*                          assigns no meaning to the STREAMID other   * 00093500
*                          than for the purpose of providing          * 00093600
*                          independently ordered streams of messages  * 00093700
*                          between the sending member and target      * 00093800
*                          member.                                    * 00093900
*                          DEFAULT: 1 - stream id 1                   * 00094000
*                                                                     * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*                  ÝDELIVERMSG=DUPLICATES¨                            * 00094400
*                      Indicates that the target member(s) can        * 00094500
*                      tolerate receiving the message multiple times. * 00094600
*                      In general, one should expect exactly one      * 00094700
*                      instance of the message to be delivered to     * 00094800
*                      each target member.  However, if the           * 00094900
*                      signalling path over which the message was     * 00095000
*                      sent is restarted or stopped before the signal * 00095100
*                      is known to have been transferred to the       * 00095200
*                      target system, this option allows XCF to       * 00095300
*                      resend the signal to the target member via an  * 00095400
*                      alternate signalling path without first        * 00095500
*                      discovering whether the target system had      * 00095600
*                      already received the signal.  If the original  * 00095700
*                      signal did in fact get transferred to the      * 00095800
*                      target system, then both the original message  * 00095900
*                      and the resent copy could be delivered to the  * 00096000
*                      target member.  If the signalling path used to * 00096100
*                      send the second instance of the signal is      * 00096200
*                      similarly restarted or stopped, then XCF could * 00096300
*                      send yet another instance of the signal via an * 00096400
*                      alternate signalling path.  Thus specifying    * 00096500
*                      DELIVERMSG=DUPLICATES could potentially result * 00096600
*                      in an arbitrary number of copies of the        * 00096700
*                      message being delivered to the targeted        * 00096800
*                      member.  It is up to the sender to determine   * 00096900
*                      whether or not the target member can tolerate  * 00097000
*                      duplicate messages.  If the message is being   * 00097100
*                      broadcast to multiple targets, then every      * 00097200
*                      target member must tolerate duplicate copies   * 00097300
*                      of the message.                                * 00097400
*                                                                     * 00097500
*                                                                     * 00097600
*                                                                     * 00097700
*                                                                     * 00097800
*                                                                     * 00097900
*                                                                     * 00098000
*              ÝGETRESPONSE=»NO!YESº¨                                 * 00098100
*                  is an optional keyword input indicating whether    * 00098200
*                  XCF is to manage the collection of responses to    * 00098300
*                  this message.                                      * 00098400
*                  DEFAULT: NO                                        * 00098500
*                                                                     * 00098600
*                                                                     * 00098700
*                  ÝGETRESPONSE=NO                                    * 00098800
*                      XCF is not to manage collection of responses   * 00098900
*                      for this message.  Management of responses, if * 00099000
*                      any, is the responsibility of the user.        * 00099100
*                                                                     * 00099200
*                                                                     * 00099300
*                      ÝTIMEOUT=»xtimeout!ZEROº¨¨                     * 00099400
*                          is the name (RS-type), or address in       * 00099500
*                          register (2)-(12), of an optional halfword * 00099600
*                          input indicating the number of seconds     * 00099700
*                          that the user is willing to allow for the  * 00099800
*                          message to complete.  The timeout value    * 00099900
*                          specified must be between one and '7FFF'X, * 00100000
*                          inclusive.  If the message has not         * 00100100
*                          otherwise completed before the timeout     * 00100200
*                          value expires, the message is declared to  * 00100300
*                          be completed.  Message completion is then  * 00100400
*                          processed as indicated by the NOTIFY       * 00100500
*                          keywords.  See the NOTIFY keyword for a    * 00100600
*                          definition of message completion.          * 00100700
*                                                                     * 00100800
*                          Note that a specification of a timeout     * 00100900
*                          value allows XCF to queue a message that   * 00101000
*                          might otherwise have been rejected for     * 00101100
*                          lack of an XCF I/O buffer or for lack of   * 00101200
*                          signalling connectivity to the target      * 00101300
*                          system (return code 'C'x, reason codes 4   * 00101400
*                          and 8 respectively).                       * 00101500
*                                                                     * 00101600
*                          A nonzero TIMEOUT value is required if     * 00101700
*                          MSGACCESS of ASYNC is specified.           * 00101800
*                          DEFAULT: ZERO - immediate send required    * 00101900
*                                                                     * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*                  ÝGETRESPONSE=YES                                   * 00102300
*                      XCF is to manage the collection of any         * 00102400
*                      response(s) to this message.  When completed,  * 00102500
*                      the sender is presented with the collected     * 00102600
*                      response message(s).  As part of this          * 00102700
*                      management, XCF recognizes situations for      * 00102800
*                      which it is no longer reasonable to expect a   * 00102900
*                      response (ie, target member's system fails).   * 00103000
*                                                                     * 00103100
*                      Response collection is a cooperative effort    * 00103200
*                      between XCF and the target member(s).  When    * 00103300
*                      XCF presents this message to the target        * 00103400
*                      member's exit routine (message or notify), a   * 00103500
*                      flag in the parameter list is set to indicate  * 00103600
*                      that XCF is managing response collection, and  * 00103700
*                      a response ID is provided to allow XCF to      * 00103800
*                      identify the message to which the response is  * 00103900
*                      to be associated.  After composing the         * 00104000
*                      response, the target member replies by         * 00104100
*                      invoking the Message-out service to send the   * 00104200
*                      response to the ORIGINATOR of the message      * 00104300
*                      identified by the RESPONSEID.  The particular  * 00104400
*                      form of the message-out invocation used to     * 00104500
*                      make the reply allows XCF to recognize the     * 00104600
*                      message as a response.  When collection of the * 00104700
*                      response(s) has completed, XCF presents the    * 00104800
*                      collected response message(s) to the member    * 00104900
*                      that originated the GETRESPONSE message-out    * 00105000
*                      request.  The manner in which the collected    * 00105100
*                      response(s) are presented is determined by the * 00105200
*                      NOTIFYBY keyword.                              * 00105300
*                                                                     * 00105400
*                      The target member itself must be capable of    * 00105500
*                      participating in this protocol by invoking the * 00105600
*                      message-out service to send its reply in a way * 00105700
*                      that allows XCF to recognize it as a response. * 00105800
*                      The CANREPLY keyword on the IXCJOIN macro      * 00105900
*                      indicates whether a member can participate in  * 00106000
*                      this protocol.  The message is sent to a       * 00106100
*                      target member even if it appears that the      * 00106200
*                      member is not able to participate in the XCF   * 00106300
*                      response collection protocol.  XCF will not    * 00106400
*                      however, expect a reply from such a member.    * 00106500
*                      The XCF Query Service (IXCQUERY) can be used   * 00106600
*                      to determine whether the XCF managed response  * 00106700
*                      collection protocol is supported for a         * 00106800
*                      particular target member.                      * 00106900
*                                                                     * 00107000
*                                                                     * 00107100
*                      TIMEOUT=xtimeout¨¨                             * 00107200
*                          is the name (RS-type), or address in       * 00107300
*                          register (2)-(12), of a required halfword  * 00107400
*                          input indicating the number of seconds     * 00107500
*                          that the user is willing to allow for the  * 00107600
*                          message to complete.  The timeout value    * 00107700
*                          specified must be between one and '7FFF'X, * 00107800
*                          inclusive.  If the message has not         * 00107900
*                          otherwise completed before the timeout     * 00108000
*                          value expires, the message is declared to  * 00108100
*                          be completed.  Message completion is then  * 00108200
*                          processed as indicated by the the NOTIFY   * 00108300
*                          keywords.  See the NOTIFY keyword for a    * 00108400
*                          definition of message completion.          * 00108500
*                                                                     * 00108600
*                                                                     * 00108700
*                                                                     * 00108800
*                                                                     * 00108900
*                                                                     * 00109000
*                                                                     * 00109100
*                                                                     * 00109200
*          ÝSENDTO=ORIGINATOR                                         * 00109300
*              Send a response message.                               * 00109400
*                                                                     * 00109500
*              A previously received message indicated that its       * 00109600
*              sender had requested that XCF manage the gathering of  * 00109700
*              response(s) to that message.  This message-out request * 00109800
*              is sending a response for that message.                * 00109900
*                                                                     * 00110000
*                                                                     * 00110100
*              RESPONSEID=xresponseid                                 * 00110200
*                  is the name (RS-type), or address in register      * 00110300
*                  (2)-(12), of a required 24 character input         * 00110400
*                  variable containing an XCF identifier for the      * 00110500
*                  originating message to which this request is       * 00110600
*                  making a response.                                 * 00110700
*                                                                     * 00110800
*                  The RESPONSEID is obtained from the MeplResponseID * 00110900
*                  field in the Message Exit Parameter List           * 00111000
*                  (IXCYMEPL) that was presented to a message exit    * 00111100
*                  routine, or from the MnplTrResponseID field in the * 00111200
*                  Message Notification Parameter List (IXCYMNPL)     * 00111300
*                  that was presented to a notify exit routine, or    * 00111400
*                  from the MqaMidResponseID field in the Message     * 00111500
*                  Query Answer Area (IXCYMQAA) that was returned by  * 00111600
*                  the XCF Message Control QUERYMSG Service           * 00111700
*                  (IXCMSGC).                                         * 00111800
*                                                                     * 00111900
*                                                                     * 00112000
*                                                                     * 00112100
*                                                                     * 00112200
*              ÝTIMEOUT=»xtimeout!ZEROº¨¨                             * 00112300
*                  is the name (RS-type), or address in register      * 00112400
*                  (2)-(12), of an optional halfword input indicating * 00112500
*                  the number of seconds that the user is willing to  * 00112600
*                  allow for the message to complete.  The timeout    * 00112700
*                  value specified must be between one and '7FFF'X,   * 00112800
*                  inclusive.  If the message has not otherwise       * 00112900
*                  completed before the timeout value expires, the    * 00113000
*                  message is declared to be completed.  Message      * 00113100
*                  completion is then processed as indicated by the   * 00113200
*                  NOTIFY keywords.  See the NOTIFY keyword for a     * 00113300
*                  definition of message completion.                  * 00113400
*                                                                     * 00113500
*                  Note that a specification of a timeout value       * 00113600
*                  allows XCF to queue a message that might otherwise * 00113700
*                  have been rejected for lack of an XCF I/O buffer   * 00113800
*                  or for lack of signalling connectivity to the      * 00113900
*                  target system (return code 'C'x, reason codes 4    * 00114000
*                  and 8 respectively).                               * 00114100
*                  DEFAULT: ZERO - immediate send required            * 00114200
*                                                                     * 00114300
*                                                                     * 00114400
*                                                                     * 00114500
*                                                                     * 00114600
*                                                                     * 00114700
*                                                                     * 00114800
*                                                                     * 00114900
*                                                                     * 00115000
*      ÝMULTIPART=»NO!YESº                                            * 00115100
*          is an optional keyword input indicating whether or not the * 00115200
*          message data may reside in more than one area of storage.  * 00115300
*          DEFAULT: NO                                                * 00115400
*                                                                     * 00115500
*                                                                     * 00115600
*          ÝMULTIPART=NO                                              * 00115700
*              indicates that the message data resides in one         * 00115800
*              contiguous area of storage.                            * 00115900
*                                                                     * 00116000
*                                                                     * 00116100
*              The following is a group of keys.  At least one must   * 00116200
*              be specified.                                          * 00116300
*                                                                     * 00116400
*                                                                     * 00116500
*              MSGCNTL=xmsgcntl                                       * 00116600
*                  is the name (RS-type), or address in register      * 00116700
*                  (2)-(12), of a character input of the area         * 00116800
*                  containing control information for the message to  * 00116900
*                  be sent.  The message control data can help the    * 00117000
*                  receiving member process the message.  For example * 00117100
*                  it might be used to identify the type of message   * 00117200
*                  being sent, or it might be used to identify which  * 00117300
*                  message format is being used when the sender and   * 00117400
*                  receiver are running different releases of a       * 00117500
*                  program.  It is up to the user to decide what data * 00117600
*                  is needed and how it is to be used.                * 00117700
*                                                                     * 00117800
*                  A copy of the contents of this 32-byte area is     * 00117900
*                  provided to the message exit through the message   * 00118000
*                  exit parameter list (mapped by IXCYMEPL).          * 00118100
*                                                                     * 00118200
*                  DEFAULT: ALLZERO - the message control data        * 00118300
*                  presented to the target member consists of         * 00118400
*                  hexadecimal zeros.                                 * 00118500
*                                                                     * 00118600
*              MSGBUF=xmsgbuf                                         * 00118700
*                  is the name (RS-type), or address in register      * 00118800
*                  (2)-(12), of a character input of the area         * 00118900
*                  containing the message to be sent.  The message    * 00119000
*                  buffer area must either reside in the caller's     * 00119100
*                  primary address space, or in a data space that is  * 00119200
*                  accessible via a public entry on the caller's      * 00119300
*                  Dispatchable Unit Access List (DU-AL), or in a     * 00119400
*                  common area data space.                            * 00119500
*                                                                     * 00119600
*                  If MSGACCESS of ASYNC or SYNCSUSPEND is specified, * 00119700
*                  the storage indicated by MSGBUF is subject to the  * 00119800
*                  following additional restrictions:                 * 00119900
*                                                                     * 00120000
*                                                                     * 00120100
*                  o   If the storage is in the caller's primary      * 00120200
*                      address space and this space is not the same   * 00120300
*                      space that was primary when the sending member * 00120400
*                      joined its XCF group (ie, the joiner's space), * 00120500
*                      the caller's primary address space must be     * 00120600
*                      non-swappable.                                 * 00120700
*                                                                     * 00120800
*                  o   If the storage is in a data space accessible   * 00120900
*                      via a public entry on the caller's DU-AL, the  * 00121000
*                      data space must either be owned by the         * 00121100
*                      joiner's address space, or be owned by a       * 00121200
*                      non-swappable address space, or be a common    * 00121300
*                      area data space.                               * 00121400
*                                                                     * 00121500
*                  o   If the storage is in an address space          * 00121600
*                      accessible via a public entry on the caller's  * 00121700
*                      DU-AL, that address space must either be the   * 00121800
*                      joiner's address space or be a non-swappable   * 00121900
*                      address space.                                 * 00122000
*                                                                     * 00122100
*                                                                     * 00122200
*                                                                     * 00122300
*                  The storage key of the storage area containing the * 00122400
*                  message data must match the storage protect key    * 00122500
*                  indicated by the MSGSTGKEY keyword.                * 00122600
*                                                                     * 00122700
*                                                                     * 00122800
*                  MSGLEN=xmsglen¨                                    * 00122900
*                      is the name (RS-type), or address in register  * 00123000
*                      (2)-(12), of a required fullword input         * 00123100
*                      variable containing the length in bytes of the * 00123200
*                      entire message.                                * 00123300
*                                                                     * 00123400
*                      For MSGACCESS of SYNC, MSGLEN must be in the   * 00123500
*                      decimal range of 0-62464 bytes.                * 00123600
*                                                                     * 00123700
*                      For MSGACCESS of ASYNC or SYNCSUSPEND, MSGLEN  * 00123800
*                      can be in the decimal range of 0 to            * 00123900
*                      134,217,728 (128M) bytes.  If MSGLEN exceeds   * 00124000
*                      62464 (61K), both the sending member and       * 00124100
*                      target member must have specified YES for the  * 00124200
*                      GT61KMSG keyword when the IXCJOIN macro was    * 00124300
*                      invoked to join the group.  Use the IXCQUERY   * 00124400
*                      service to determine whether the large message * 00124500
*                      delivery protocol is supported for a           * 00124600
*                      particular target member.                      * 00124700
*                                                                     * 00124800
*                                                                     * 00124900
*                                                                     * 00125000
*                                                                     * 00125100
*                                                                     * 00125200
*              End of group of keys.                                  * 00125300
*                                                                     * 00125400
*                                                                     * 00125500
*          ÝMULTIPART=YES                                             * 00125600
*              indicates that the message data resides in one or more * 00125700
*              areas of storage.                                      * 00125800
*                                                                     * 00125900
*              The message parts and the buffer areas that contain    * 00126000
*              them are described by elements.  The Message-Out       * 00126100
*              service gathers the message data from the indicated    * 00126200
*              buffer areas, thereby assembling the message data into * 00126300
*              a single contiguous message.  Processing each element  * 00126400
*              consecutively, the Message-Out service moves message   * 00126500
*              data from a buffer area until the part is complete or  * 00126600
*              the indicated total number of bytes of message data    * 00126700
*              have been gathered.  A part is complete when the       * 00126800
*              number of bytes of message data moved from the buffer  * 00126900
*              area equals the length of the part.  When a part is    * 00127000
*              complete and message data remains, the next element,   * 00127100
*              if any, is used to gather the message data from        * 00127200
*              another buffer area.                                   * 00127300
*                                                                     * 00127400
*              If the indicated total message length exceeds the      * 00127500
*              number of bytes of message data gathered from the      * 00127600
*              parts, no message is sent since it is assumed that an  * 00127700
*              error has occurred.  However, having the number of     * 00127800
*              bytes of message data available from the parts exceed  * 00127900
*              the indicated total message length is not considered   * 00128000
*              an error.  Thus the sender could provide a static part * 00128100
*              structure and specify the total message length to vary * 00128200
*              the amount of message data sent.                       * 00128300
*                                                                     * 00128400
*              The gathering of message data from the indicated parts * 00128500
*              ends when one of the following conditions is met:      * 00128600
*                                                                     * 00128700
*              o Specified total number of bytes of message data have * 00128800
*              been gathered                                          * 00128900
*                                                                     * 00129000
*              o Specified number of message parts processed          * 00129100
*                                                                     * 00129200
*              o End of queue of elements reached                     * 00129300
*                                                                     * 00129400
*              o Number of message parts was not specified and more   * 00129500
*              than 65,536 zero length parts processed consecutively  * 00129600
*              (message is never sent for this case)                  * 00129700
*                                                                     * 00129800
*                                                                     * 00129900
*              ÝMSGCNTL=»xmsgcntl!ALLZEROº¨                           * 00130000
*                  is the name (RS-type), or address in register      * 00130100
*                  (2)-(12), of an optional character input of the    * 00130200
*                  area containing control information for the        * 00130300
*                  message to be sent.  The message control data can  * 00130400
*                  help the receiving member process the message.     * 00130500
*                  For example it might be used to identify the type  * 00130600
*                  of message being sent, or it might be used to      * 00130700
*                  identify which message format is being used when   * 00130800
*                  the sender and receiver are running different      * 00130900
*                  releases of a program.  It is up to the user to    * 00131000
*                  decide what data is needed and how it is to be     * 00131100
*                  used.                                              * 00131200
*                                                                     * 00131300
*                  A copy of the contents of this 32-byte area is     * 00131400
*                  provided to the message exit through the message   * 00131500
*                  exit parameter list (mapped by IXCYMEPL).          * 00131600
*                                                                     * 00131700
*                  DEFAULT: ALLZERO - the message control data        * 00131800
*                  presented to the target member consists of         * 00131900
*                  hexadecimal zeros.                                 * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*                                                                     * 00132300
*                                                                     * 00132400
*              ÝMSGLEN=»xmsglen!SUMPARTLENSº¨                         * 00132500
*                  is the name (RS-type), or address in register      * 00132600
*                  (2)-(12), of an optional fullword input containing * 00132700
*                  the length in bytes of the entire message.         * 00132800
*                                                                     * 00132900
*                  For MSGACCESS of SYNC, MSGLEN must be in the       * 00133000
*                  decimal range of 0-62464 bytes.                    * 00133100
*                                                                     * 00133200
*                  For MSGACCESS of ASYNC or SYNCSUSPEND, MSGLEN can  * 00133300
*                  be in the decimal range of 0 to 134,217,728 (128M) * 00133400
*                  bytes.  If MSGLEN exceeds 62464 (61K), both the    * 00133500
*                  sending member and target member must have         * 00133600
*                  specified YES for the GT61KMSG keyword when the    * 00133700
*                  IXCJOIN macro was invoked to join the group.  Use  * 00133800
*                  the IXCQUERY service to determine whether the      * 00133900
*                  large message delivery protocol is supported for a * 00134000
*                  particular target member.                          * 00134100
*                                                                     * 00134200
*                  If MSGLEN is specified, the Message-Out service    * 00134300
*                  requires that there be enough elements to describe * 00134400
*                  all the parts needed to allow a message of the     * 00134500
*                  indicated length to be sent.  That is, the sum of  * 00134600
*                  the part lengths must be greater than or equal to  * 00134700
*                  the indicated total message length.                * 00134800
*                                                                     * 00134900
*                  If MSGLEN is not specified, the Message-Out        * 00135000
*                  service may need to determine the message length.  * 00135100
*                  Specifying the total message length avoids this    * 00135200
*                  processing.                                        * 00135300
*                                                                     * 00135400
*                  DEFAULT: SUMPARTLENS - sum of the lengths of the   * 00135500
*                  parts                                              * 00135600
*                                                                     * 00135700
*                                                                     * 00135800
*                                                                     * 00135900
*                                                                     * 00136000
*              Ý#MSGPARTS=»x#msgparts!ATLEASTONEº¨                    * 00136100
*                  is the name (RS-type), or address in register      * 00136200
*                  (2)-(12), of an optional fullword input containing * 00136300
*                  the number of message parts to be gathered into a  * 00136400
*                  contiguous message.  If specified, the number of   * 00136500
*                  message parts must be greater than zero.           * 00136600
*                                                                     * 00136700
*                  The default value used when #MSGPARTS is not coded * 00136800
*                  depends on whether or not MSGLEN is coded.  If     * 00136900
*                  MSGLEN is coded, the Message-Out service assumes   * 00137000
*                  that there are enough elements to describe all the * 00137100
*                  parts needed to allow a message of the indicated   * 00137200
*                  length to be sent.  If MSGLEN is not coded, the    * 00137300
*                  default value used for #MSGPARTS depends on the    * 00137400
*                  element form.  For a table of elements, the        * 00137500
*                  Message-Out service processes only one part.  For  * 00137600
*                  a queue of elements, the Message-Out service       * 00137700
*                  processes parts until the end of the queue is      * 00137800
*                  reached.                                           * 00137900
*                                                                     * 00138000
*                  If #MSGPARTS is not coded and more than 65,536     * 00138100
*                  zero length parts are processed consecutively, the * 00138200
*                  Message-Out service does not send the message and  * 00138300
*                  returns to the caller with a failure indicating    * 00138400
*                  that progress could not be made.  This lack of     * 00138500
*                  progress could be caused by a circular queue of    * 00138600
*                  elements.                                          * 00138700
*                                                                     * 00138800
*                  DEFAULT: ATLEASTONE - at least one, more as needed * 00138900
*                  to send MSGLEN bytes                               * 00139000
*                                                                     * 00139100
*                                                                     * 00139200
*                                                                     * 00139300
*                                                                     * 00139400
*              ELEMENT=xelement                                       * 00139500
*                  is the name (RS-type), or address in register      * 00139600
*                  (2)-(12), of a required character input of the     * 00139700
*                  area which is the first element containing the     * 00139800
*                  data that describes the parts of the message.  The * 00139900
*                  Message-Out service gathers the various parts of   * 00140000
*                  the message together based on information provided * 00140100
*                  in the elements and delivers the message parts to  * 00140200
*                  the target member as a single contiguous message.  * 00140300
*                  The target member can receive the data as one      * 00140400
*                  contiguous message or can receive it into          * 00140500
*                  discontiguous buffer areas.                        * 00140600
*                                                                     * 00140700
*                  The elements can be structured either as a table   * 00140800
*                  or as a queue.  The elements must either reside in * 00140900
*                  the caller's primary address space, or in a space  * 00141000
*                  that is accessible via a public entry on the       * 00141100
*                  caller's Dispatchable Unit Access List (DU-AL), or * 00141200
*                  in a common area data space.  For MSGACCESS of     * 00141300
*                  ASYNC, additional restrictions may apply to the    * 00141400
*                  space that contains the elements:                  * 00141500
*                                                                     * 00141600
*                   - If the elements reside in the caller's primary  * 00141700
*                  address space and this space is not the same space * 00141800
*                  that was primary when the sending member joined    * 00141900
*                  its XCF group (ie, the joiner's space) the         * 00142000
*                  caller's primary address space must be             * 00142100
*                  non-swappable.                                     * 00142200
*                   - If the elements reside in a data space          * 00142300
*                  accessible via a public entry on the caller's      * 00142400
*                  DU-AL, the data space must either be owned by the  * 00142500
*                  joiner's address space, or be owned by a           * 00142600
*                  non-swappable address space, or be a common area   * 00142700
*                  data space.                                        * 00142800
*                   - If the elements reside in an address space      * 00142900
*                  accessible via a public entry on the caller's      * 00143000
*                  DU-AL, the address space must either be the        * 00143100
*                  joiner's address space or be a non-swappable       * 00143200
*                  address space.                                     * 00143300
*                                                                     * 00143400
*                  All the elements must reside in the same space so  * 00143500
*                  that a single ALET can be used to access them.     * 00143600
*                  The keyword ELEMENT identifies the first element   * 00143700
*                  to be processed.  The i'th element describes the   * 00143800
*                  i'th message part.  The location of the next       * 00143900
*                  element is indicated by the keyword NEXTOFF (for   * 00144000
*                  tables) or NEXTPTROFF (for queues).                * 00144100
*                                                                     * 00144200
*                  For MSGACCESS of SYNC and SYNCSUSPEND, the caller  * 00144300
*                  is responsible for maintaining the integrity of    * 00144400
*                  the element structure until the Message-Out        * 00144500
*                  service returns.  For MSGACCESS of ASYNC, the      * 00144600
*                  caller is responsible for maintaining the          * 00144700
*                  integrity of the element structure until the       * 00144800
*                  message is completed.  If the elements or their    * 00144900
*                  structure change while being processed by the      * 00145000
*                  Message-Out service, the message data actually     * 00145100
*                  sent may differ from the message data that the     * 00145200
*                  invoker intended to send.                          * 00145300
*                                                                     * 00145400
*                  Each element describes how to locate the contents  * 00145500
*                  of one part of the message.  The keyword PARTOFF   * 00145600
*                  or PARTPTROFF is used to indicate whether the      * 00145700
*                  element contains the text of the message part or   * 00145800
*                  the address of the text of the message part.       * 00145900
*                                                                     * 00146000
*                  The length in bytes of each part is indicated by   * 00146100
*                  the keyword PARTLENTBL, PARTLEN, or PARTLENOFF.    * 00146200
*                  PARTLENTBL is used when the part lengths are       * 00146300
*                  contained in a separately addressable table.       * 00146400
*                  PARTLEN is used when each part has the same        * 00146500
*                  length.  PARTLENOFF is used when the element       * 00146600
*                  itself contains the length of the part that it     * 00146700
*                  describes.                                         * 00146800
*                                                                     * 00146900
*                  The PARTALETTBL, PARTALET, or PARTALETOFF keyword  * 00147000
*                  can further qualify the address of each part when  * 00147100
*                  the elements contain a pointer to the text of the  * 00147200
*                  message part (PARTPTROFF).  PARTALETTBL is used    * 00147300
*                  when the part ALETs are contained in a separately  * 00147400
*                  addressable table.  PARTALET is used when each     * 00147500
*                  part has the same ALET.  PARTALETOFF is used when  * 00147600
*                  the element itself contains the ALET of the part   * 00147700
*                  that it describes.                                 * 00147800
*                                                                     * 00147900
*                  If the text of the message part is contained       * 00148000
*                  within the element (PARTOFF), the ALET used to     * 00148100
*                  qualify the address of the text of the message     * 00148200
*                  part is the same as the ALET used to qualify the   * 00148300
*                  address of the element.                            * 00148400
*                                                                     * 00148500
*                  The storage key of the storage area containing     * 00148600
*                  each message part must match the storage protect   * 00148700
*                  key indicated by the MSGSTGKEY keyword.            * 00148800
*                                                                     * 00148900
*                                                                     * 00149000
*                  ÝELEMADDRMODE=»31!64º¨                             * 00149100
*                      is an optional keyword input that tells the    * 00149200
*                      XCF Message-Out service whether the addresses  * 00149300
*                      located within a message data element at the   * 00149400
*                      offsets specified by the PARTPTROFF and        * 00149500
*                      NEXTPTROFF keywords are in a 31-bit (single    * 00149600
*                      word) or 64-bit (double word) precision        * 00149700
*                      format.                                        * 00149800
*                      DEFAULT: 31                                    * 00149900
*                                                                     * 00150000
*                                                                     * 00150100
*                      ELEMADDRMODE=31                                * 00150200
*                          All the addresses in message data elements * 00150300
*                          are of 31-bit addressing precision (single * 00150400
*                          word - 4 bytes) and reference only virtual * 00150500
*                          storage below the 2-gigabyte virtual       * 00150600
*                          storage bar                                * 00150700
*                                                                     * 00150800
*                      ELEMADDRMODE=64                                * 00150900
*                          All the addresses in message data elements * 00151000
*                          are of 64-bit addressing precision (double * 00151100
*                          word - 8 bytes) and can reference storage  * 00151200
*                          below or above the 2-gigabyte virtual      * 00151300
*                          storage bar.                               * 00151400
*                                                                     * 00151500
*                                                                     * 00151600
*                                                                     * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*                                                                     * 00152000
*                                                                     * 00152100
*                                                                     * 00152200
*              ELEMFORM=»TABLE!QUEUEº¨                                * 00152300
*                  is a required keyword input indicating whether the * 00152400
*                  elements describing the message parts are          * 00152500
*                  structured as a table or as a queue.               * 00152600
*                                                                     * 00152700
*                                                                     * 00152800
*                  ELEMFORM=TABLE                                     * 00152900
*                      indicates that the elements describing the     * 00153000
*                      message parts are structured as a table.       * 00153100
*                                                                     * 00153200
*                                                                     * 00153300
*                      NEXTOFF=xnextoff                               * 00153400
*                          is the name (RS-type), or address in       * 00153500
*                          register (2)-(12), of a required fullword  * 00153600
*                          input that indicates, in bytes, the        * 00153700
*                          relative location of the next element in   * 00153800
*                          the table.  The next element is located by * 00153900
*                          adding the indicated value to the location * 00154000
*                          of the current element.  Typically this    * 00154100
*                          value equals the number of bytes in one    * 00154200
*                          table entry.                               * 00154300
*                                                                     * 00154400
*                                                                     * 00154500
*                                                                     * 00154600
*                  ELEMFORM=QUEUE                                     * 00154700
*                      indicates that the elements describing the     * 00154800
*                      message parts are structured as a queue.       * 00154900
*                                                                     * 00155000
*                                                                     * 00155100
*                      NEXTPTROFF=xnextptroff                         * 00155200
*                          is the name (RS-type), or address in       * 00155300
*                          register (2)-(12), of a required fullword  * 00155400
*                          input containing the number of bytes to    * 00155500
*                          offset within an element in order to       * 00155600
*                          locate either a 31- or 64-bit precision    * 00155700
*                          pointer that contains the address of the   * 00155800
*                          next element.  This keyword is used when   * 00155900
*                          the elements are structured as a queue, in * 00156000
*                          which case it provides the location of the * 00156100
*                          pointer to the next element.               * 00156200
*                                                                     * 00156300
*                                                                     * 00156400
*                                                                     * 00156500
*                                                                     * 00156600
*                      ÝENDOFQUEUE=»xendofqueue!ZEROº¨                * 00156700
*                          is the name (RS-type), or address in       * 00156800
*                          register (2)-(12), of an optional 8 byte   * 00156900
*                          input that contains the address which      * 00157000
*                          denotes the end of the queue.  When the    * 00157100
*                          next element pointer located at offset     * 00157200
*                          NEXTPTROFF equals this value, no more      * 00157300
*                          elements remain.  Note there must be at    * 00157400
*                          least one element on the queue.            * 00157500
*                                                                     * 00157600
*                          DEFAULT: ZERO - the end of the queue is    * 00157700
*                          indicated by a zero nextptr                * 00157800
*                                                                     * 00157900
*                                                                     * 00158000
*                                                                     * 00158100
*                                                                     * 00158200
*                                                                     * 00158300
*                                                                     * 00158400
*                                                                     * 00158500
*                                                                     * 00158600
*              The following is a set of mutually exclusive keys.     * 00158700
*              This set is required; only one key must be specified.  * 00158800
*                                                                     * 00158900
*                                                                     * 00159000
*              PARTOFF=xpartoff                                       * 00159100
*                  belongs to a set of mutually exclusive keys. It is * 00159200
*                  the name (RS-type), or address in register         * 00159300
*                  (2)-(12), of a fullword input containing the       * 00159400
*                  number of bytes to offset within an element in     * 00159500
*                  order to locate the text of the message part.      * 00159600
*                  This keyword is used when the elements contain the * 00159700
*                  text of the message part.  The ALET used to access * 00159800
*                  the element is used to access the text of the      * 00159900
*                  message part.                                      * 00160000
*                                                                     * 00160100
*              PARTPTROFF=xpartptroff                                 * 00160200
*                  belongs to a set of mutually exclusive keys. It is * 00160300
*                  the name (RS-type), or address in register         * 00160400
*                  (2)-(12), of a fullword input containing the       * 00160500
*                  number of bytes to offset within a part element in * 00160600
*                  order to locate either a 31- or 64-bit precision   * 00160700
*                  pointer that contains the address of the text of   * 00160800
*                  the message part.  One of the keywords             * 00160900
*                  PARTALETTBL, PARTALET, or PARTALETOFF is coded to  * 00161000
*                  indicate the ALET that qualifies the address of    * 00161100
*                  the text of the message part.                      * 00161200
*                                                                     * 00161300
*                                                                     * 00161400
*                  The following is a set of mutually exclusive keys. * 00161500
*                  This set is optional; only one key may be          * 00161600
*                  specified.                                         * 00161700
*                                                                     * 00161800
*                                                                     * 00161900
*                  ÝPARTALET=»xpartalet!ZEROº                         * 00162000
*                      belongs to a set of mutually exclusive keys.   * 00162100
*                      It is the name (RS-type), or address in        * 00162200
*                      register (2)-(12), of an optional fullword     * 00162300
*                      input that contains the one ALET that          * 00162400
*                      qualifies the address of every part of the     * 00162500
*                      message.  The ALET must be zero or a valid     * 00162600
*                      public entry on the caller's Dispatchable Unit * 00162700
*                      Access List (DU-AL), or a valid entry for a    * 00162800
*                      common area data space.                        * 00162900
*                      DEFAULT: ZERO - the message data resides in    * 00163000
*                      the caller's primary address space.            * 00163100
*                                                                     * 00163200
*                  PARTALETOFF=»xpartaletoffº                         * 00163300
*                      belongs to a set of mutually exclusive keys.   * 00163400
*                      It is the name (RS-type), or address in        * 00163500
*                      register (2)-(12), of an optional fullword     * 00163600
*                      input containing the number of bytes to offset * 00163700
*                      within a part element in order to locate a     * 00163800
*                      FIXED(32) field that contains an ALET that     * 00163900
*                      qualifies the address of an individual message * 00164000
*                      part.  The ALET must be zero or a valid public * 00164100
*                      entry on the caller's Dispatchable Unit Access * 00164200
*                      List (DU-AL), or a valid entry for a common    * 00164300
*                      area data space.                               * 00164400
*                                                                     * 00164500
*                  PARTALETTBL=»xpartalettblº¨                        * 00164600
*                      belongs to a set of mutually exclusive keys.   * 00164700
*                      It is the name (RS-type), or address in        * 00164800
*                      register (2)-(12), of an optional character    * 00164900
*                      input of the area containing a table of        * 00165000
*                      FIXED(32) ALETs.  There must be an entry in    * 00165100
*                      the table for each element processed.  The     * 00165200
*                      table must be aligned on a word boundary.      * 00165300
*                      Each entry in the table indicates the ALET     * 00165400
*                      that qualifies the address of one part of the  * 00165500
*                      message.  The i'th entry in the table provides * 00165600
*                      the ALET of the i'th message part.  Each ALET  * 00165700
*                      must be zero or a valid public entry on the    * 00165800
*                      caller's Dispatchable Unit Access List         * 00165900
*                      (DU-AL), or a valid entry for a common area    * 00166000
*                      data space.                                    * 00166100
*                                                                     * 00166200
*                                                                     * 00166300
*                                                                     * 00166400
*                  End of a set of mutually exclusive optional keys.  * 00166500
*                  DEFAULT: PARTALET                                  * 00166600
*                                                                     * 00166700
*                                                                     * 00166800
*                                                                     * 00166900
*                                                                     * 00167000
*              End of a set of mutually exclusive required keys.      * 00167100
*                                                                     * 00167200
*                                                                     * 00167300
*                                                                     * 00167400
*              The following is a set of mutually exclusive keys.     * 00167500
*              This set is required; only one key must be specified.  * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*              PARTLEN=xpartlen                                       * 00167900
*                  belongs to a set of mutually exclusive keys. It is * 00168000
*                  the name (RS-type), or address in register         * 00168100
*                  (2)-(12), of a fullword input containing the       * 00168200
*                  length in bytes of an individual message part      * 00168300
*                  PARTLEN is coded when all the message parts have   * 00168400
*                  the same length.  The length of the entire message * 00168500
*                  is equal to PARTLEN times the number of elements   * 00168600
*                  processed.                                         * 00168700
*                                                                     * 00168800
*                  For MSGACCESS of SYNC, PARTLEN must be in the      * 00168900
*                  decimal range of 0-62464 bytes.  The length of the * 00169000
*                  entire message must be in the decimal range of     * 00169100
*                  0-62464 bytes.                                     * 00169200
*                                                                     * 00169300
*                  For MSGACCESS of ASYNC or SYNCSUSPEND, PARTLEN can * 00169400
*                  be in the decimal range of 0 to 134,217,728 (128M) * 00169500
*                  bytes.  The length of the entire message must be   * 00169600
*                  in the decimal range of 0 to 134,217,728 (128M)    * 00169700
*                  bytes.  If the length of the entire message        * 00169800
*                  exceeds 62464 (61K) bytes, both the sending member * 00169900
*                  and target member must have specified YES for the  * 00170000
*                  GT61KMSG keyword when the IXCJOIN macro was        * 00170100
*                  invoked to join the group.  Use the IXCQUERY       * 00170200
*                  service to determine whether the large message     * 00170300
*                  delivery protocol is supported for a particular    * 00170400
*                  target member.                                     * 00170500
*                                                                     * 00170600
*              PARTLENOFF=xpartlenoff                                 * 00170700
*                  belongs to a set of mutually exclusive keys. It is * 00170800
*                  the name (RS-type), or address in register         * 00170900
*                  (2)-(12), of a fullword input containing the       * 00171000
*                  number of bytes to offset within a part element in * 00171100
*                  order to locate a FIXED(32) field that contains    * 00171200
*                  the length in bytes of an individual message part. * 00171300
*                  (decimal 0-62464 bytes).  If the length of the     * 00171400
*                  part is zero, the address and ALET of the message  * 00171500
*                  part are ignored.  Gathering of the message text   * 00171600
*                  continues with the next element.  The length of    * 00171700
*                  the entire message equals the sum of the lengths   * 00171800
*                  found at offset PARTLENOFF within the elements     * 00171900
*                  processed.                                         * 00172000
*                                                                     * 00172100
*                  For MSGACCESS of SYNC, the length of an individual * 00172200
*                  message part must be in the decimal range of       * 00172300
*                  0-62464 bytes.  The length of the entire message   * 00172400
*                  must be decimal 0-62464 bytes.                     * 00172500
*                                                                     * 00172600
*                  For MSGACCESS of ASYNC or SYNCSUSPEND, the length  * 00172700
*                  of an individual part must be in the decimal range * 00172800
*                  of 0 to 134,217,728 (128M) bytes.  The length of   * 00172900
*                  the entire message must be in the decimal range of * 00173000
*                  0 to 134,217,728 (128M) bytes.  If the length of   * 00173100
*                  the entire message exceeds 62464 (61K) bytes, both * 00173200
*                  the sending member and target member must have     * 00173300
*                  specified YES for the GT61KMSG keyword when the    * 00173400
*                  IXCJOIN macro was invoked to join the group.  Use  * 00173500
*                  the IXCQUERY service to determine whether the      * 00173600
*                  large message delivery protocol is supported for a * 00173700
*                  particular target member.                          * 00173800
*                                                                     * 00173900
*                  If the target member requires the lengths of the   * 00174000
*                  individual parts, the source member and target     * 00174100
*                  member must provide their own protocol to make     * 00174200
*                  this information known.  One could, for example,   * 00174300
*                  send the part lengths as part of the message data  * 00174400
*                  or the message control data.                       * 00174500
*                                                                     * 00174600
*              PARTLENTBL=xpartlentbl¨                                * 00174700
*                  belongs to a set of mutually exclusive keys. It is * 00174800
*                  the name (RS-type), or address in register         * 00174900
*                  (2)-(12), of a character input of the area         * 00175000
*                  containing a table of FIXED(32) lengths.  There    * 00175100
*                  must be an entry in the table for each element     * 00175200
*                  processed.  The table must be aligned on a word    * 00175300
*                  boundary.  Each entry in the table indicates the   * 00175400
*                  length in bytes of one part of the message.  The   * 00175500
*                  i'th entry in the table provides the length of the * 00175600
*                  i'th message part.  If the i'th entry in           * 00175700
*                  PARTLENTBL is zero, the address and ALET of the    * 00175800
*                  i'th message part are ignored.  The length of the  * 00175900
*                  entire message equals the sum of the entries in    * 00176000
*                  PARTLENTBL.                                        * 00176100
*                                                                     * 00176200
*                  For MSGACCESS of SYNC, the length of an individual * 00176300
*                  message part must be in the decimal range of       * 00176400
*                  0-62464 bytes.  The length of the entire message   * 00176500
*                  must be decimal 0-62464 bytes.                     * 00176600
*                                                                     * 00176700
*                  For MSGACCESS of ASYNC or SYNCSUSPEND, the length  * 00176800
*                  of an individual part must be in the decimal range * 00176900
*                  of 0 to 134,217,728 (128M) bytes.  The length of   * 00177000
*                  the entire message must be in the decimal range of * 00177100
*                  0 to 134,217,728 (128M) bytes.  If the length of   * 00177200
*                  the entire message exceeds 62464 (61K) bytes, both * 00177300
*                  the sending member and target member must have     * 00177400
*                  specified YES for the GT61KMSG keyword when the    * 00177500
*                  IXCJOIN macro was invoked to join the group.  Use  * 00177600
*                  the IXCQUERY service to determine whether the      * 00177700
*                  large message delivery protocol is supported for a * 00177800
*                  particular target member.                          * 00177900
*                                                                     * 00178000
*                  If the target member requires the lengths of the   * 00178100
*                  individual parts, the source member and target     * 00178200
*                  member must provide their own protocol to make     * 00178300
*                  this information known.  One could, for example,   * 00178400
*                  send the part lengths as part of the message data  * 00178500
*                  or the message control data.                       * 00178600
*                                                                     * 00178700
*                                                                     * 00178800
*                                                                     * 00178900
*              End of a set of mutually exclusive required keys.      * 00179000
*                                                                     * 00179100
*                                                                     * 00179200
*                                                                     * 00179300
*                                                                     * 00179400
*                                                                     * 00179500
*                                                                     * 00179600
*                                                                     * 00179700
*      ÝMSGSTGKEY=»xmsgstgkey!ANYº¨                                   * 00179800
*          is the name (RS-type), or address in register (2)-(12), of * 00179900
*          an optional 8 bit input containing the storage key to be   * 00180000
*          used when fetching the message data.  The message data is  * 00180100
*          fetched from either the storage area indicated by the      * 00180200
*          MSGBUF keyword, or the storage area at offset PARTOFF      * 00180300
*          within the i'th element, or from the storage area pointed  * 00180400
*          to by the pointer at offset PARTPTROFF within the i'th     * 00180500
*          element.  The high order nibble contains the storage key,  * 00180600
*          the low order nibble is ignored.  For example, set 'kkkk'  * 00180700
*          in the binary bit string 'kkkkxxxx'B to correspond to the  * 00180800
*          desired storage key.                                       * 00180900
*                                                                     * 00181000
*          If MSGSTGKEY is not specified or a MSGSTGKEY of 0 is       * 00181100
*          specified, then the message data can reside in any storage * 00181200
*          key.                                                       * 00181300
*                                                                     * 00181400
*          Note that key-controlled protection will permit the        * 00181500
*          message data to be moved successfully if either the access * 00181600
*          key specified by MSGSTGKEY matches the storage protect key * 00181700
*          of the indicated storage areas, or if the indicated        * 00181800
*          storage areas are not fetch protected.                     * 00181900
*                                                                     * 00182000
*          DEFAULT: ANY - the message can reside in any storage key.  * 00182100
*                                                                     * 00182200
*                                                                     * 00182300
*                                                                     * 00182400
*                                                                     * 00182500
*      ÝMSGACCESS=»SYNC!SYNCSUSPEND!ASYNCº¨                           * 00182600
*          is an optional keyword input that indicates how XCF can    * 00182700
*          access the storage containing the text of the message.     * 00182800
*          DEFAULT: SYNC                                              * 00182900
*                                                                     * 00183000
*                                                                     * 00183100
*          ÝMSGACCESS=SYNC¨                                           * 00183200
*              The storage containing the text of the message must be * 00183300
*              accessed synchronously with the Message-Out request.   * 00183400
*              After the Message-Out service returns, the sender is   * 00183500
*              free to dispose of the storage containing the message. * 00183600
*              For multipart messages, the sender can dispose of the  * 00183700
*              storage containing the elements and/or tables that     * 00183800
*              define the parts of the message as well.               * 00183900
*                                                                     * 00184000
*              For MSGACCESS of SYNC, MSGLEN must be in the decimal   * 00184100
*              range of 0-62464 bytes.                                * 00184200
*                                                                     * 00184300
*          ÝMSGACCESS=SYNCSUSPEND                                     * 00184400
*              The storage containing the text of the message must be * 00184500
*              accessed synchronously with the Message-Out request.   * 00184600
*              As needed, XCF can pause the current unit of work for  * 00184700
*              a specified amount of time in order to complete        * 00184800
*              accessing storage areas associated with message text.  * 00184900
*              After the Message-Out service returns, the sender is   * 00185000
*              free to dispose of the storage containing the message. * 00185100
*              For multipart messages, the sender can dispose of the  * 00185200
*              storage containing the elements and/or tables that     * 00185300
*              define the parts of the message as well.               * 00185400
*                                                                     * 00185500
*              For MSGACCESS of SYNCSUSPEND, MSGLEN can be in the     * 00185600
*              decimal range of 0 to 134,217,728 (128M) bytes.        * 00185700
*                                                                     * 00185800
*              If the sending member becomes inactive while the unit  * 00185900
*              of work is paused, the unit of work will be released   * 00186000
*              and control will be returned to the caller. The        * 00186100
*              Message-Out Service may terminate processing for the   * 00186200
*              message. In particular, the message may not be         * 00186300
*              delivered to the target member(s) once the sender      * 00186400
*              becomes inactive.                                      * 00186500
*                                                                     * 00186600
*              The following environmental restrictions exist when    * 00186700
*              using MSGACCESS=SYNCSUSPEND on an IXCMSGOX Message-Out * 00186800
*              request:                                               * 00186900
*                                                                     * 00187000
*                                                                     * 00187100
*              o   The XCF Message-Out request can not be issued from * 00187200
*                  a SUSPEND exit routine or from an SRB routine that * 00187300
*                  the system abended with a 47B system completion    * 00187400
*                  code.                                              * 00187500
*                                                                     * 00187600
*              o   An XCF Message-Out request using                   * 00187700
*                  MSGACCESS=SYNCSUSPEND can not be issued from an    * 00187800
*                  address space resource manager.                    * 00187900
*                                                                     * 00188000
*                                                                     * 00188100
*                                                                     * 00188200
*                                                                     * 00188300
*              SENDTIME=xsendtime¨                                    * 00188400
*                  is the name (RS-type), or address in register      * 00188500
*                  (2)-(12), of a required halfword input that        * 00188600
*                  indicates the maximum number of seconds XCF may    * 00188700
*                  pause the work unit to allow XCF to synchronously  * 00188800
*                  complete accessing caller's storage areas.         * 00188900
*                                                                     * 00189000
*                  If the SENDTIME expires before the processing that * 00189100
*                  XCF paused for is complete, XCF will cancel        * 00189200
*                  incomplete send processing which may result in not * 00189300
*                  all desired targets receiving the send request.    * 00189400
*                                                                     * 00189500
*                  The SENDTIME value must be between 1 and 32767     * 00189600
*                  ('7FFF'X), inclusive. If TIMEOUT is explictly      * 00189700
*                  specified on the Message-Out request, the SENDTIME * 00189800
*                  value must be less than or equal to the TIMEOUT    * 00189900
*                  keyword value.                                     * 00190000
*                                                                     * 00190100
*                                                                     * 00190200
*                                                                     * 00190300
*          ÝMSGACCESS=ASYNC¨                                          * 00190400
*              The Message-Out Service is allowed to access the       * 00190500
*              storage containing the text of the message after the   * 00190600
*              Message-Out request returns to the sender.  Note that  * 00190700
*              specifying MSGACCESS of ASYNC does not necessarily     * 00190800
*              imply that XCF will access the storage asynchronously. * 00190900
*              When possible, XCF will attempt to use synchronous     * 00191000
*              access.                                                * 00191100
*                                                                     * 00191200
*              If the Message-Out service returns with RETCODE=4 and  * 00191300
*              RSNCODE='410'x, the sender must preserve the storage   * 00191400
*              containing the message text until the message is       * 00191500
*              completed.  For multipart messages, the elements       * 00191600
*              and/or tables that define the parts of the message     * 00191700
*              must be preserved as well.  For any other              * 00191800
*              return/reason code, the sender is free to dispose of   * 00191900
*              the storage as if MSGACCESS of SYNC or SYNCSUSPEND was * 00192000
*              specified.                                             * 00192100
*                                                                     * 00192200
*              XCF notifies the sender that a message is complete by  * 00192300
*              calling the message notify user exit routine.  The XCF * 00192400
*              Message Control Query Service (IXCMSGC) also indicates * 00192500
*              when a message is complete (in IXCYMQAA,               * 00192600
*              MqaMosCompleted='1'B for summary query and             * 00192700
*              MqaModCompleted='1'B for detail query).                * 00192800
*                                                                     * 00192900
*              If the sending member becomes inactive before an ASYNC * 00193000
*              message is completed, the Message-Out Service may      * 00193100
*              terminate processing for the message.  In particular,  * 00193200
*              the message may not be delivered to the target         * 00193300
*              member(s) once the sender becomes inactive.  In        * 00193400
*              contrast, for MSGACCESS of SYNC, delivery of messages  * 00193500
*              that were accepted by the Message-Out Service          * 00193600
*              continues even after the sender becomes inactive.      * 00193700
*                                                                     * 00193800
*              Note that if the sending member's associated task      * 00193900
*              and/or address space (see keyword MEMASSOC on the      * 00194000
*              IXCJOIN service) is undergoing termination, XCF will   * 00194100
*              not be able to asynchronously access the sender's data * 00194200
*              areas.  Thus a message-out request issued from the     * 00194300
*              sender's task and/or address space resource manager    * 00194400
*              termination routine that completes with RETCODE=4      * 00194500
*              RSNCODE='410'x will not be able to successfully        * 00194600
*              complete the send of the message.                      * 00194700
*                                                                     * 00194800
*              To send messages longer than 62464 bytes, MSGACCESS of * 00194900
*              ASYNC or SYNCSUSPEND must be specified.  Note however, * 00195000
*              that RETCODE=4 RSNCODE='410'x indicating that the      * 00195100
*              sender must preserve the message until the message is  * 00195200
*              completed is not restricted to such messages.          * 00195300
*                                                                     * 00195400
*              A nonzero TIMEOUT value is required if MSGACCESS of    * 00195500
*              ASYNC is specified.                                    * 00195600
*                                                                     * 00195700
*              When MSGACCESS of ASYNC is specified, the Dispatchable * 00195800
*              Unit Access List (DUAL) under which the caller is      * 00195900
*              running must adhere to certain restrictions.  It must  * 00196000
*              never have had access to a subspace, it must never     * 00196100
*              have had access to more than 255 spaces of any kind at * 00196200
*              one time, and it must not be full.  If the Message-out * 00196300
*              service is unable to process the request because the   * 00196400
*              DUAL is unsuitable, the request is rejected with       * 00196500
*              RETCODE 'C'x and an appropriate RSNCODE.               * 00196600
*                                                                     * 00196700
*                                                                     * 00196800
*                                                                     * 00196900
*                                                                     * 00197000
*                                                                     * 00197100
*                                                                     * 00197200
*      ÝNOTIFY=»NO!YESº                                               * 00197300
*          is an optional keyword input that indicates whether the    * 00197400
*          member is to be notified of message completion.            * 00197500
*                                                                     * 00197600
*          A message without response is considered complete as soon  * 00197700
*          as XCF has initiated the send of the message.  If the      * 00197800
*          message is broadcast to multiple targets, the message is   * 00197900
*          considered complete when XCF has initiated the send of the * 00198000
*          message to each valid target member.  Note that the        * 00198100
*          message is still considered complete even if it takes more * 00198200
*          than one attempt for XCF to successfully send the message  * 00198300
*          to an intended target member (multiple attempts might be   * 00198400
*          needed to resolve things like I/O errors).  In particular, * 00198500
*          the fact that a send without response is completed implies * 00198600
*          nothing about whether the message has been delivered to    * 00198700
*          the target member or even whether the message data has     * 00198800
*          been transferred to the system on which the target member  * 00198900
*          resides.                                                   * 00199000
*                                                                     * 00199100
*          A message with response is considered complete when the    * 00199200
*          expected response(s) arrive.                               * 00199300
*                                                                     * 00199400
*          Any message whose timeout value expires is considered      * 00199500
*          complete.  The Message Control COMPLETION Service can also * 00199600
*          be used to FORCE a message to be considered complete.      * 00199700
*          DEFAULT: NO                                                * 00199800
*                                                                     * 00199900
*                                                                     * 00200000
*          ÝNOTIFY=NO¨                                                * 00200100
*              No notification capability is required.  This option   * 00200200
*              is provided to maintain compatibility with previous    * 00200300
*              versions of the message-out service.                   * 00200400
*                                                                     * 00200500
*              At its discretion, XCF may maintain status information * 00200600
*              related to the message up until the time the message   * 00200700
*              is completed.  If such status information is           * 00200800
*              maintained, the message can be manipulated with the    * 00200900
*              Message Control Service until the message is           * 00201000
*              completed.  Upon completion of the message, XCF will   * 00201100
*              discard any such status information.                   * 00201200
*                                                                     * 00201300
*          ÝNOTIFY=YES                                                * 00201400
*              A notification capability is required.  XCF will       * 00201500
*              maintain status information related to the message up  * 00201600
*              until the time the message is completed.  Upon         * 00201700
*              completion of the message, the state of the message    * 00201800
*              and the NOTIFYIF keyword determines how XCF is to      * 00201900
*              proceed.  If notification is warranted, XCF preserves  * 00202000
*              status information for the message.  The NOTIFYBY      * 00202100
*              keyword then determines the method by which XCF        * 00202200
*              performs the notification of message completion.       * 00202300
*                                                                     * 00202400
*              Note that notification is applicable only if the       * 00202500
*              message-out service accepts the message for delivery   * 00202600
*              (return code 0 or 4).                                  * 00202700
*                                                                     * 00202800
*                                                                     * 00202900
*              ÝUSERDATA=»xuserdata!ALLZEROº¨                         * 00203000
*                  is the name (RS-type), or address in register      * 00203100
*                  (2)-(12), of an optional 8 character input         * 00203200
*                  containing user data that is to be associated with * 00203300
*                  the message.  This data will be presented in the   * 00203400
*                  Message Notification Parameter List (mapped by     * 00203500
*                  IXCYMNPL) with the message if the message must be  * 00203600
*                  presented to the notification exit.                * 00203700
*                                                                     * 00203800
*                  This data is not delivered to the targets of the   * 00203900
*                  message.                                           * 00204000
*                  DEFAULT: ALLZERO - the user data associated with   * 00204100
*                  the message will consist of hexadecimal zeros.     * 00204200
*                                                                     * 00204300
*                                                                     * 00204400
*                                                                     * 00204500
*                                                                     * 00204600
*              ÝNOTIFYIF=»COMPLETED!FAILEDº¨                          * 00204700
*                  is an optional keyword input that identifies the   * 00204800
*                  conditions under which notification is to be       * 00204900
*                  provided.                                          * 00205000
*                  DEFAULT: COMPLETED                                 * 00205100
*                                                                     * 00205200
*                                                                     * 00205300
*                  ÝNOTIFYIF=COMPLETED¨                               * 00205400
*                      Provide notification when the message is       * 00205500
*                      completed.  Thus notification occurs           * 00205600
*                      regardless of whether the message succeeded or * 00205700
*                      failed.                                        * 00205800
*                                                                     * 00205900
*                  ÝNOTIFYIF=FAILED¨                                  * 00206000
*                      Provide notification only if the message       * 00206100
*                      failed.  For the purpose of completion         * 00206200
*                      notification, a message without response is    * 00206300
*                      considered to have failed if the message was   * 00206400
*                      not sent to one of the possible target         * 00206500
*                      members.  A message with response is           * 00206600
*                      considered to have failed if XCF did not       * 00206700
*                      receive a response from every possible target  * 00206800
*                      member.  Note that skipped targets are ignored * 00206900
*                      for the purpose of determining whether the     * 00207000
*                      message failed.  A skipped target is one whose * 00207100
*                      member token from the TARGETS array was zero.  * 00207200
*                                                                     * 00207300
*                                                                     * 00207400
*                                                                     * 00207500
*                                                                     * 00207600
*                                                                     * 00207700
*                                                                     * 00207800
*              ÝNOTIFYBY=»EXIT¨¨                                      * 00207900
*                  is an optional keyword input that indicates how    * 00208000
*                  the member is to be notified of message            * 00208100
*                  completion.                                        * 00208200
*                  DEFAULT: EXIT                                      * 00208300
*                                                                     * 00208400
*                                                                     * 00208500
*                  ÝNOTIFYBY=EXIT                                     * 00208600
*                      XCF will schedule a notify exit routine to     * 00208700
*                      process the message.                           * 00208800
*                                                                     * 00208900
*                                                                     * 00209000
*                      ÝNOTIFYEXIT=»xnotifyexit!FROMJOINº¨¨           * 00209100
*                          is an optional input.  It is the name      * 00209200
*                          (RS-type), or address in register          * 00209300
*                          (2)-(12), of a 31 bit notify exit routine  * 00209400
*                          receive control when the message is        * 00209500
*                          complete.  This routine receives control   * 00209600
*                          running as an SRB scheduled to the address * 00209700
*                          space that was primary when the sending    * 00209800
*                          member joined the group.                   * 00209900
*                          DEFAULT: FROMJOIN - use NOTIFYEXIT         * 00210000
*                          specified on IXCJOIN                       * 00210100
*                                                                     * 00210200
*                                                                     * 00210300
*                                                                     * 00210400
*                                                                     * 00210500
*                                                                     * 00210600
*                                                                     * 00210700
*                                                                     * 00210800
*                                                                     * 00210900
*              ÝRETMSGOTOKEN=xretmsgotoken¨¨                          * 00211000
*                  is the name (RS-type), or address in register      * 00211100
*                  (2)-(12), of an optional 16 character output of    * 00211200
*                  the area that is to contain a token that can be    * 00211300
*                  used to identify this message to the XCF Message   * 00211400
*                  Control Service (IXCMSGC).                         * 00211500
*                                                                     * 00211600
*                  The storage area indicated by RETMSGOTOKEN must    * 00211700
*                  either be in the caller's primary address space or * 00211800
*                  in an address/data space that is addressable       * 00211900
*                  through a public entry on the caller's             * 00212000
*                  dispatchable unit access list (DU-AL), or in a     * 00212100
*                  common area data space.                            * 00212200
*                                                                     * 00212300
*                                                                     * 00212400
*                                                                     * 00212500
*                                                                     * 00212600
*                                                                     * 00212700
*                                                                     * 00212800
*                                                                     * 00212900
*                                                                     * 00213000
*      ÝATTRIBUTES=NONE!RECOVERY!CRITICAL¨                            * 00213100
*          is an optional group of keyword input(s) used to specify   * 00213200
*          special attributes to be associated with the message being * 00213300
*          sent.                                                      * 00213400
*          DEFAULT: NONE                                              * 00213500
*                                                                     * 00213600
*                                                                     * 00213700
*          ATTRIBUTES=NONE                                            * 00213800
*              indicates that no special attributes will be           * 00213900
*              associated with the message.  The message will be      * 00214000
*              delivered in accordance with normal message delivery   * 00214100
*              practices.                                             * 00214200
*                                                                     * 00214300
*          ATTRIBUTES=RECOVERY                                        * 00214400
*              indicates that the message is a "recovery signal"      * 00214500
*              being sent as part of a sysplex recovery protocol.     * 00214600
*              The RECOVERY attribute indicates that it is important  * 00214700
*              for the signal to be delivered in a timely manner so   * 00214800
*              as to ensure that the sysplex recovery protocol can    * 00214900
*              finish as soon as possible, and thereby enable the     * 00215000
*              sysplex to resume normal operation.                    * 00215100
*                                                                     * 00215200
*          ATTRIBUTES=CRITICAL                                        * 00215300
*              indicates that this message is to be treated as        * 00215400
*              critical to the functionality of the XCF Group by the  * 00215500
*              target member.                                         * 00215600
*                                                                     * 00215700
*                                                                     * 00215800
*                                                                     * 00215900
*                                                                     * 00216000
*                                                                     * 00216100
*                                                                     * 00216200
*      ÝRETCODE=xretcode¨                                             * 00216300
*          is the name (RS-type) of an optional fullword output       * 00216400
*          variable, or register (2)-(12) or (15), into which the     * 00216500
*          return code is to be copied from GPR 15.  If you specify   * 00216600
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00216700
*          the value will be left in GPR 15.                          * 00216800
*                                                                     * 00216900
*                                                                     * 00217000
*                                                                     * 00217100
*                                                                     * 00217200
*      ÝRSNCODE=xrsncode¨                                             * 00217300
*          is the name (RS-type) of an optional fullword output       * 00217400
*          variable into which the reason code is to be copied from   * 00217500
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00217600
*          R0 (within or without parentheses), the value will be left * 00217700
*          in GPR 0.                                                  * 00217800
*                                                                     * 00217900
*                                                                     * 00218000
*                                                                     * 00218100
*                                                                     * 00218200
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00218300
*          is an optional byte input decimal value in the "4-6" range * 00218400
*          that specifies the macro version.  PLISTVER is the only    * 00218500
*          key allowed on the list form of MF and determines which    * 00218600
*          parameter list is generated.  The macro keys associated    * 00218700
*          with each supported version of the macro are listed in     * 00218800
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00218900
*          instead of a number, and the parameter list will be of the * 00219000
*          largest size currently supported. This size may grow from  * 00219100
*          release to release (thus possibly affecting the amount of  * 00219200
*          storage needed by your program).  If your program can      * 00219300
*          tolerate this, IBM recommends that you always specify MAX  * 00219400
*          when creating the list form parameter list as that will    * 00219500
*          ensure that the list form parameter list is always long    * 00219600
*          enough to hold whatever parameters might be specified on   * 00219700
*          the execute form.                                          * 00219800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00219900
*          default is the lowest version which allows all of the      * 00220000
*          parameters specified on the invocation to be processed.    * 00220100
*                                                                     * 00220200
*                                                                     * 00220300
*                                                                     * 00220400
*                                                                     * 00220500
*      ÝMF=»S!L!Eº¨                                                   * 00220600
*          is an optional keyword input which specifies the macro     * 00220700
*          form.                                                      * 00220800
*          DEFAULT: S                                                 * 00220900
*                                                                     * 00221000
*                                                                     * 00221100
*          ÝMF=S¨                                                     * 00221200
*              specifies the standard form of the macro.  The "S"     * 00221300
*              form generates code to put the parameters into an      * 00221400
*              in-line parameter list and invoke the desired service. * 00221500
*              Full checking for required macro keys is done along    * 00221600
*              with supplying defaults for omitted optional           * 00221700
*              parameters.                                            * 00221800
*                                                                     * 00221900
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00222000
*              specifies the list form of the macro.  The "L" form    * 00222100
*              defines an area to be used for the parameter list.     * 00222200
*              Only the PLISTVER key may be specified on the          * 00222300
*              invocation.  All other macro parameters are flagged as * 00222400
*              errors.  If PLISTVER is not specified, the original    * 00222500
*              parameter list definition is used.                     * 00222600
*                                                                     * 00222700
*            ,xmfctrl                                                 * 00222800
*              is a required input.  It is the name of a storage area * 00222900
*              for the parameter list.                                * 00223000
*                                                                     * 00223100
*            »,xmfattr!0Dº                                            * 00223200
*              is an optional 60 character input string that varies   * 00223300
*              from 1 to 60 characters. Use it to force boundary      * 00223400
*              alignment of the parameter list. Use only 0F or 0D.    * 00223500
*              DEFAULT: 0D which forces the parameter list to a       * 00223600
*              doubleword boundary.                                   * 00223700
*                                                                     * 00223800
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00223900
*              specifies the execute form of the macro.  The "E" form * 00224000
*              generates code to put the parameters into the          * 00224100
*              parameter list specified by xmfctrl and provides full  * 00224200
*              syntax checking with default setting.                  * 00224300
*                                                                     * 00224400
*            ,xmfctrl                                                 * 00224500
*              is a required input.  It is the name (RS-type), or     * 00224600
*              address in register (1)-(12), of a storage area for    * 00224700
*              the parameter list.                                    * 00224800
*                                                                     * 00224900
*            »,COMPLETEº                                              * 00225000
*              is an optional keyword input which specifies the       * 00225100
*              degree of macro parameter syntax checking.             * 00225200
*              DEFAULT: COMPLETE                                      * 00225300
*                                                                     * 00225400
*                                                                     * 00225500
*              COMPLETE                                               * 00225600
*                  Checking for required macro keys is done and       * 00225700
*                  defaults are supplied for omitted optional         * 00225800
*                  parameters.                                        * 00225900
*                                                                     * 00226000
*                                                                     * 00226100
*                                                                     * 00226200
*                                                                     * 00226300
*                                                                     * 00226400
*                                                                     * 00226500
*                                                                     * 00226600
*01* RETURN CODES:                                                    * 00226700
*                                                                     * 00226800
*                                                                     * 00226900
*       0         IxcRetCodeOk:  Successful completion.  Message has  * 00227000
*                 been accepted for delivery.  For a send to GROUP,   * 00227100
*                 the message was accepted for delivery to each       * 00227200
*                 target member.                                      * 00227300
*                                                                     * 00227400
*       4         IxcRetCodeWarning:  Message accepted for delivery,  * 00227500
*                 but with exceptional circumstances.                 * 00227600
*                                                                     * 00227700
*                 HEX REASON       MEANING                            * 00227800
*                 CODE                                                * 00227900
*                                                                     * 00228000
*                                                                     * 00228100
*                 401         ixcMsgoRsnSendPending:  Send message    * 00228200
*                             pending.  The send to the requested     * 00228300
*                             target member could not be initiated    * 00228400
*                             immediately and is pending.  XCF will   * 00228500
*                             continue trying to send the message     * 00228600
*                             until the specified TIMEOUT value       * 00228700
*                             expires.                                * 00228800
*                                                                     * 00228900
*                 402         ixcMsgoRsnBcPendingNoRejects:           * 00229000
*                             Broadcast pending, no rejections.  The  * 00229100
*                             send to one or more target members      * 00229200
*                             could not be initiated immediately and  * 00229300
*                             is pending.  No send was rejected.  XCF * 00229400
*                             will continue trying to send the        * 00229500
*                             pending message(s) until the specified  * 00229600
*                             TIMEOUT value expires.                  * 00229700
*                                                                     * 00229800
*                 403         ixcMsgoRsnBcPendingWithRejects:         * 00229900
*                             Broadcast pending, some send(s)         * 00230000
*                             rejected.  The send to one or more      * 00230100
*                             target members could not be initiated   * 00230200
*                             immediately and is pending.  The send   * 00230300
*                             for at least one target member was      * 00230400
*                             rejected.  XCF will continue trying to  * 00230500
*                             send the pending message(s) until the   * 00230600
*                             specified TIMEOUT value expires.        * 00230700
*                                                                     * 00230800
*                 404         ixcMsgoRsnBcCompleteWithRejects:        * 00230900
*                             Broadcast completed, some send(s)       * 00231000
*                             rejected.  No sends are pending.  The   * 00231100
*                             send for at least one target member was * 00231200
*                             rejected.                               * 00231300
*                                                                     * 00231400
*                 0405xxxx    ixcMsgoRsnRetMsgoTokenNoAccess:         * 00231500
*                             RETMSGOTOKEN not accessible.  The       * 00231600
*                             Message-Out service was not able to     * 00231700
*                             store a message token in the area       * 00231800
*                             indicated by RETMSGOTOKEN. The low      * 00231900
*                             order halfword (xxxx) of the reason     * 00232000
*                             code has a value of zero if the return  * 00232100
*                             code was X'00' or indicates the reason  * 00232200
*                             code associated with return code X'04'  * 00232300
*                             that the system would have returned if  * 00232400
*                             the storage area indicated by           * 00232500
*                             RETMSGOTOKEN had been accessible. Note  * 00232600
*                             that even though the system was unable  * 00232700
*                             to store the RETMSGOTOKEN token, if the * 00232800
*                             return code is X'00', the system has    * 00232900
*                             initiated the send of the message, or   * 00233000
*                             if the return code is X'04', the system * 00233100
*                             has accepted the message for delivery.  * 00233200
*                                                                     * 00233300
*                 410         ixcMsgoRsnAsyncSendPending:  Send       * 00233400
*                             message pending.  The send to a         * 00233500
*                             requested target member could not be    * 00233600
*                             initiated immediately and is pending.   * 00233700
*                             XCF will continue trying to send the    * 00233800
*                             message until the specified TIMEOUT     * 00233900
*                             value expires.  This reason code is     * 00234000
*                             applicable only when MSGACCESS of ASYNC * 00234100
*                             is specified.                           * 00234200
*                                                                     * 00234300
*                             The sender must preserve the storage    * 00234400
*                             containing the text of the message      * 00234500
*                             until the message is completed.  For    * 00234600
*                             multipart messages, the storage         * 00234700
*                             containing the elements that describe   * 00234800
*                             the parts of the message must be        * 00234900
*                             preserved as well.                      * 00235000
*                                                                     * 00235100
*                                                                     * 00235200
*                                                                     * 00235300
*       8         IxcRetCodeParmError:  Parameters are not valid.     * 00235400
*                                                                     * 00235500
*                 If the error was detected while gathering message   * 00235600
*                 data from more than one buffer area (MULTIPART is   * 00235700
*                 YES) and the error can be associated with a         * 00235800
*                 particular part, the index of the part and the      * 00235900
*                 address of the element that describes the part are  * 00236000
*                 placed in the parameter list.                       * 00236100
*                                                                     * 00236200
*                 HEX REASON       MEANING                            * 00236300
*                 CODE                                                * 00236400
*                                                                     * 00236500
*                                                                     * 00236600
*                 4           ixcMsgoRsnSenderNotValid:  Sending      * 00236700
*                             member not valid.  Either the sending   * 00236800
*                             member MEMTOKEN value is not valid, or  * 00236900
*                             the sender member token no longer       * 00237000
*                             identifies an active member of a group, * 00237100
*                             or the primary address space current    * 00237200
*                             when the Message-Out service was        * 00237300
*                             invoked is not appropriate for the      * 00237400
*                             indicated member.  If the IXCJOIN       * 00237500
*                             request that caused the sending member  * 00237600
*                             to become active specified (or          * 00237700
*                             defaulted) to MSGOUTASID=MEMBER, then   * 00237800
*                             the primary address space current when  * 00237900
*                             the Message-Out service is invoked must * 00238000
*                             either be the primary address space     * 00238100
*                             current when the IXCJOIN was invoked or * 00238200
*                             the MASTER address space.               * 00238300
*                                                                     * 00238400
*                 8           ixcMsgoRsnTargetNotValid:  TARGET not   * 00238500
*                             valid.  Either the target member token  * 00238600
*                             is not valid, or the target member is   * 00238700
*                             not in the same group as the sending    * 00238800
*                             member, or the target member is no      * 00238900
*                             longer active in the group.             * 00239000
*                                                                     * 00239100
*                 C           ixcMsgoRsnMsgLenNotValid:  Message      * 00239200
*                             length not valid.  For MSGACCESS of     * 00239300
*                             SYNC, total message length is not in    * 00239400
*                             the range 0-62464 (decimal).  For       * 00239500
*                             MSGACCESS of ASYNC or SYNCSUSPEND,      * 00239600
*                             total message length is not in the      * 00239700
*                             range 0 to 134,217,728 (decimal) and/or * 00239800
*                             the sending member did not specify YES  * 00239900
*                             for the GT61KMSG keyword when it        * 00240000
*                             invoked IXCJOIN to join the group.      * 00240100
*                                                                     * 00240200
*                 10          ixcMsgoRsnMsgbufBadStg:  Message data   * 00240300
*                             not accessible.  The storage named by   * 00240400
*                             MSGBUF is not accessible.               * 00240500
*                                                                     * 00240600
*                 14          ixcMsgoRsnMsgCntlBadAlet:  The ALET     * 00240700
*                             that qualifies the address of the       * 00240800
*                             message control data (MSGCNTL) is       * 00240900
*                             neither zero nor a valid entry on the   * 00241000
*                             caller's Dispatchable Unit Access List  * 00241100
*                             (DU-AL), nor a valid entry for a common * 00241200
*                             area data space.                        * 00241300
*                                                                     * 00241400
*                 18          ixcMsgoRsnMsgCntlBadStg:  Message       * 00241500
*                             control data (MSGCNTL) is not           * 00241600
*                             accessible.                             * 00241700
*                                                                     * 00241800
*                 1C          ixcMsgoRsnTargetNoMsgExit:  Target      * 00241900
*                             member does not have a message exit     * 00242000
*                                                                     * 00242100
*                 40          ixcMsgoRsnPlistRsvdNotValid:  Reserved  * 00242200
*                             field is not 0, contains an unexpected  * 00242300
*                             value.  The parameter list has been     * 00242400
*                             corrupted or the release level of XCF   * 00242500
*                             on which the caller is running does not * 00242600
*                             support the provided XCF Message-Out    * 00242700
*                             service parameter list.                 * 00242800
*                                                                     * 00242900
*                 100         ixcMsgoRsnPlistBadAlet:  The ALET that  * 00243000
*                             qualifies the address of the parameter  * 00243100
*                             list is not zero.                       * 00243200
*                                                                     * 00243300
*                 104         ixcMsgoRsnPlistVersionNotValid:         * 00243400
*                             Version number in parameter list is not * 00243500
*                             valid.  The release level of XCF on     * 00243600
*                             which the caller is running does not    * 00243700
*                             support this version of the XCF         * 00243800
*                             Message-Out service.                    * 00243900
*                                                                     * 00244000
*                 10C         ixcMsgoRsnPlistBadStg:  Parameter list  * 00244100
*                             is not accessible.                      * 00244200
*                                                                     * 00244300
*                 11C         ixcMsgoRsnNotEnabled:  Program error.   * 00244400
*                             Caller must be enabled.                 * 00244500
*                                                                     * 00244600
*                 12C         ixcMsgoRsnLockHeld:  Program error.     * 00244700
*                             Caller must not hold locks.             * 00244800
*                                                                     * 00244900
*                 208         ixcMsgoRsnMsgbufBadAlet:  Message data  * 00245000
*                             ALET is not valid.  The ALET that       * 00245100
*                             qualifies the address of MSGBUF is      * 00245200
*                             neither zero nor a valid entry on the   * 00245300
*                             caller's Dispatchable Unit Access List  * 00245400
*                             (DU-AL), nor a valid entry for a common * 00245500
*                             area data space.                        * 00245600
*                                                                     * 00245700
*                 20C         ixcMsgoRsnMsgbufKeyMismatch:  Message   * 00245800
*                             data key mismatch.  The storage area    * 00245900
*                             named by MSGBUF can not be fetched      * 00246000
*                             using the storage key indicated by      * 00246100
*                             MSGSTGKEY.                              * 00246200
*                                                                     * 00246300
*                 210         ixcMsgoRsnPartPtrOffBadStg:  Element    * 00246400
*                             not accessible.  The part pointer at    * 00246500
*                             offset PARTPTROFF within an element     * 00246600
*                             (ELEMENT) is not accessible.  The       * 00246700
*                             fields PART# and ELEMENTPTR in the      * 00246800
*                             parameter list identify the index of    * 00246900
*                             the part and the address of the element * 00247000
*                             that describes the erroneous part.      * 00247100
*                                                                     * 00247200
*                 212         ixcMsgoRsnElementBadAlet:  The ALET     * 00247300
*                             that qualifies the address of an        * 00247400
*                             element (ELEMENT) is neither zero nor a * 00247500
*                             valid entry on the caller's             * 00247600
*                             Dispatchable Unit Access List (DU-AL),  * 00247700
*                             nor a valid entry for a common area     * 00247800
*                             data space.                             * 00247900
*                                                                     * 00248000
*                 213         ixcMsgoRsnNextPtrOffBadStg:  Element    * 00248100
*                             not accessible.  The next element       * 00248200
*                             pointer at offset NEXTPTROFF within an  * 00248300
*                             element (ELEMENT) is not accessible.    * 00248400
*                             The fields PART# and ELEMENTPTR in the  * 00248500
*                             parameter list identify the index of    * 00248600
*                             the part and the address of the element * 00248700
*                             that describes the erroneous part.      * 00248800
*                                                                     * 00248900
*                 214         ixcMsgoRsn#MsgPartsZero:  Number of     * 00249000
*                             message parts (#MSGPARTS) is zero.      * 00249100
*                                                                     * 00249200
*                 215         ixcMsgoRsnTooManyZeroLenParts:  Not     * 00249300
*                             making progress.  The number of message * 00249400
*                             parts (#MSGPARTS) was not specified and * 00249500
*                             more than 65,536 consecutive zero       * 00249600
*                             length parts were processed.  The       * 00249700
*                             elements are assumed to be damaged.     * 00249800
*                                                                     * 00249900
*                 218         ixcMsgoRsnPartPtrOff@BadStg:  Message   * 00250000
*                             data not accessible.  The storage area  * 00250100
*                             pointed to by the pointer field at      * 00250200
*                             offset PARTPTROFF within an element     * 00250300
*                             (ELEMENT) is not accessible.  The       * 00250400
*                             fields PART# and ELEMENTPTR in the      * 00250500
*                             parameter list identify the index of    * 00250600
*                             the part and the address of the element * 00250700
*                             that describes the erroneous part.      * 00250800
*                                                                     * 00250900
*                 219         ixcMsgoRsnPartOffBadStg:  Message data  * 00251000
*                             not accessible.  The storage area at    * 00251100
*                             offset PARTOFF within an element        * 00251200
*                             (ELEMENT) is not accessible.  The       * 00251300
*                             fields PART# and ELEMENTPTR in the      * 00251400
*                             parameter list identify the index of    * 00251500
*                             the part and the address of the element * 00251600
*                             that describes the erroneous part.      * 00251700
*                                                                     * 00251800
*                 21C         ixcMsgoRsnPartPtrOff@KeyMismatch:       * 00251900
*                             Message data key mismatch.  The storage * 00252000
*                             area pointed to by the pointer field at * 00252100
*                             offset PARTPTROFF within an element     * 00252200
*                             (ELEMENT) can not be fetched using the  * 00252300
*                             storage key indicated by MSGSTGKEY.     * 00252400
*                             The fields PART# and ELEMENTPTR in the  * 00252500
*                             parameter list identify the index of    * 00252600
*                             the part and the address of the element * 00252700
*                             that describes the erroneous part.      * 00252800
*                                                                     * 00252900
*                 21D         ixcMsgoRsnPartOffKeyMismatch:  Message  * 00253000
*                             data key mismatch.  The storage area at * 00253100
*                             offset PARTOFF within an element        * 00253200
*                             (ELEMENT) can not be fetched using the  * 00253300
*                             storage key indicated by MSGSTGKEY.     * 00253400
*                             The fields PART# and ELEMENTPTR in the  * 00253500
*                             parameter list identify the index of    * 00253600
*                             the part and the address of the element * 00253700
*                             that describes the erroneous part.      * 00253800
*                                                                     * 00253900
*                 220         ixcMsgoRsnPartLenTblBadStg:  Table of   * 00254000
*                             message part lengths (PARTLENTBL) is    * 00254100
*                             not accessible.                         * 00254200
*                                                                     * 00254300
*                 221         ixcMsgoRsnPartLenTblNotWordBdy:  Table  * 00254400
*                             of message part lengths (PARTLENTBL) is * 00254500
*                             not aligned on a word boundary.         * 00254600
*                                                                     * 00254700
*                 222         ixcMsgoRsnPartLenTblBadAlet:  The ALET  * 00254800
*                             that qualifies the address of the       * 00254900
*                             message parts lengths table             * 00255000
*                             (PARTLENTBL) is neither zero nor a      * 00255100
*                             valid entry on the caller's             * 00255200
*                             Dispatchable Unit Access List (DU-AL),  * 00255300
*                             nor a valid entry for a common area     * 00255400
*                             data space.                             * 00255500
*                                                                     * 00255600
*                 223         ixcMsgoRsnPartLenOffBadStg:  Element    * 00255700
*                             not accessible.  The part length at     * 00255800
*                             offset PARTLENOFF within an element     * 00255900
*                             (ELEMENT) is not accessible.  The       * 00256000
*                             fields PART# and ELEMENTPTR in the      * 00256100
*                             parameter list identify the index of    * 00256200
*                             the part and the address of the element * 00256300
*                             that describes the erroneous part.      * 00256400
*                                                                     * 00256500
*                 224         ixcMsgoRsnMsglenGtSumPartLen:  Message  * 00256600
*                             length not valid.  The total message    * 00256700
*                             length exceeds the sum of the lengths   * 00256800
*                             of the parts.                           * 00256900
*                                                                     * 00257000
*                 225         ixcMsgoRsnPartLenBadLen:  Message       * 00257100
*                             length not valid.  For MSGACCESS of     * 00257200
*                             SYNC, PARTLEN exceeds 62464 (decimal).  * 00257300
*                             For MSGACCESS of ASYNC or SYNCSUSPEND,  * 00257400
*                             PARTLEN exceeds 134,217,728 (decimal).  * 00257500
*                             The fields PART# and ELEMENTPTR in the  * 00257600
*                             parameter list identify the index of    * 00257700
*                             the part and the address of the element * 00257800
*                             that describes the erroneous part.      * 00257900
*                                                                     * 00258000
*                 226         ixcMsgoRsnPartLenTblBadLen:  Message    * 00258100
*                             length not valid.  For MSGACCESS of     * 00258200
*                             SYNC, an entry in PARTLENTBL exceeds    * 00258300
*                             62464 (decimal).  For MSGACCESS of      * 00258400
*                             ASYNC or SYNCSUSPEND, an entry in       * 00258500
*                             PARTLENTBL exceeds 134,217,728          * 00258600
*                             (decimal).  The fields PART# and        * 00258700
*                             ELEMENTPTR in the parameter list        * 00258800
*                             identify the index of the part and the  * 00258900
*                             address of the element that describes   * 00259000
*                             the erroneous part.                     * 00259100
*                                                                     * 00259200
*                 227         ixcMsgoRsnPartLenOffBadLen:  Message    * 00259300
*                             length not valid.  For MSGACCESS of     * 00259400
*                             SYNC, the part length at offset         * 00259500
*                             PARTLENOFF within an element (ELEMENT)  * 00259600
*                             exceeds 62464 (decimal).  For MSGACCESS * 00259700
*                             of ASYNC or SYNCSUSPEND, the part       * 00259800
*                             length at offset PARTLENOFF within an   * 00259900
*                             element (ELEMENT) exceeds 134,217,728   * 00260000
*                             (decimal).  The fields PART# and        * 00260100
*                             ELEMENTPTR in the parameter list        * 00260200
*                             identify the index of the part and the  * 00260300
*                             address of the element that describes   * 00260400
*                             the erroneous part.                     * 00260500
*                                                                     * 00260600
*                 230         ixcMsgoRsnPartAletTblBadStg:  Table of  * 00260700
*                             message part ALETs (PARTALETTBL) is not * 00260800
*                             accessible.                             * 00260900
*                                                                     * 00261000
*                 231         ixcMsgoRsnPartAletTblNotWordBdy:  Table * 00261100
*                             of message part ALETs (PARTALETTBL) is  * 00261200
*                             not aligned on a word boundary.         * 00261300
*                                                                     * 00261400
*                 232         ixcMsgoRsnPartAletTblBadAlet:  The ALET * 00261500
*                             that qualifies the address of the       * 00261600
*                             message parts ALET table (PARTALETTBL)  * 00261700
*                             is neither zero nor a valid entry on    * 00261800
*                             the caller's Dispatchable Unit Access   * 00261900
*                             List (DU-AL), nor a valid entry for a   * 00262000
*                             common area data space.                 * 00262100
*                                                                     * 00262200
*                 233         ixcMsgoRsnPartAletOffBadStg:  Element   * 00262300
*                             not accessible.  The part ALET at       * 00262400
*                             offset PARTALETOFF within an element    * 00262500
*                             (ELEMENT) is not accessible.  The       * 00262600
*                             fields PART# and ELEMENTPTR in the      * 00262700
*                             parameter list identify the index of    * 00262800
*                             the part and the address of the element * 00262900
*                             that describes the erroneous part.      * 00263000
*                                                                     * 00263100
*                 234         ixcMsgoRsnPartAlet@BadAlet:  Message    * 00263200
*                             data ALET is not valid.  The ALET       * 00263300
*                             indicated by PARTALET is neither zero   * 00263400
*                             nor a valid entry on the caller's       * 00263500
*                             Dispatchable Unit Access List (DU-AL),  * 00263600
*                             nor a valid entry for a common area     * 00263700
*                             data space.                             * 00263800
*                                                                     * 00263900
*                 235         ixcMsgoRsnPartAletTbl@BadAlet:  Message * 00264000
*                             data ALET is not valid.  The ALET       * 00264100
*                             indicated by an entry in PARTALETTBL is * 00264200
*                             neither zero nor a valid entry on the   * 00264300
*                             caller's Dispatchable Unit Access List  * 00264400
*                             (DU-AL), nor a valid entry for a common * 00264500
*                             area data space.  The fields PART# and  * 00264600
*                             ELEMENTPTR in the parameter list        * 00264700
*                             identify the index of the part and the  * 00264800
*                             address of the element that describes   * 00264900
*                             the erroneous part.                     * 00265000
*                                                                     * 00265100
*                 236         ixcMsgoRsnPartAletOff@BadAlet:  Message * 00265200
*                             data ALET is not valid.  The ALET at    * 00265300
*                             offset PARTALETOFF within an element    * 00265400
*                             (ELEMENT) is neither zero nor a valid   * 00265500
*                             entry on the caller's Dispatchable Unit * 00265600
*                             Access List (DU-AL), nor a valid entry  * 00265700
*                             for a common area data space.  The      * 00265800
*                             fields PART# and ELEMENTPTR in the      * 00265900
*                             parameter list identify the index of    * 00266000
*                             the part and the address of the element * 00266100
*                             that describes the erroneous part.      * 00266200
*                                                                     * 00266300
*                 300         ixcMsgoRsnSenderNoNotifyExit:           * 00266400
*                             NOTIFYEXIT not defined.  NOTIFYEXIT     * 00266500
*                             defaulted to the address of the exit    * 00266600
*                             routine defined when the member joined  * 00266700
*                             the group, but no NOTIFYEXIT was        * 00266800
*                             specified when the IXCJOIN service was  * 00266900
*                             invoked.  Code the NOTIFYEXIT           * 00267000
*                             explicitly.                             * 00267100
*                                                                     * 00267200
*                 304         ixcMsgoRsnTargetsBadAlet:  The ALET     * 00267300
*                             that qualifies the address of the       * 00267400
*                             TARGETS table is neither zero nor a     * 00267500
*                             valid entry on the caller's             * 00267600
*                             Dispatchable Unit Access List (DU-AL),  * 00267700
*                             nor a valid entry for a common area     * 00267800
*                             data space.                             * 00267900
*                                                                     * 00268000
*                 308         ixcMsgoRsnRetMsgoTokenBadAlet:  The     * 00268100
*                             ALET that qualifies the address of the  * 00268200
*                             RETMSGOTOKEN is neither zero nor a      * 00268300
*                             valid entry on the caller's             * 00268400
*                             Dispatchable Unit Access List (DU-AL),  * 00268500
*                             nor a valid entry for a common area     * 00268600
*                             data space.                             * 00268700
*                                                                     * 00268800
*                 30C         ixcMsgoRsnBadResponseID:  The           * 00268900
*                             RESPONSEID is not valid.  The           * 00269000
*                             RESPONSEID token has been corrupted.    * 00269100
*                                                                     * 00269200
*                 310         ixcMsgoRsnBadStreamID:  The value       * 00269300
*                             specified for STREAMID not valid.  The  * 00269400
*                             Stream ID must be in the range of       * 00269500
*                             0-65535 (decimal).                      * 00269600
*                                                                     * 00269700
*                 314         ixcMsgoRsnTargetsBadStg:  The TARGETS   * 00269800
*                             table is not accessible.                * 00269900
*                                                                     * 00270000
*                 320         ixcMsgoRsnBad#Targets:  For a           * 00270100
*                             SENDTO=GROUP request with               * 00270200
*                             MEMBERS=TABLE, the value specified for  * 00270300
*                             #TARGETS is not valid.  The number of   * 00270400
*                             targets must be a nonzero value less    * 00270500
*                             than or equal to the maximum number of  * 00270600
*                             members per group supported by the      * 00270700
*                             sending system.                         * 00270800
*                                                                     * 00270900
*                             The maximum number of members per XCF   * 00271000
*                             group is determined by the system       * 00271100
*                             programmer when the XCF format utility  * 00271200
*                             (IXCL1DSU) is used to create the        * 00271300
*                             sysplex couple data set that is being   * 00271400
*                             used by the sysplex.  In practical      * 00271500
*                             terms, #TARGETS will either be the      * 00271600
*                             number of active members in the group,  * 00271700
*                             or the maximum number of members that   * 00271800
*                             were simultaneously active in the       * 00271900
*                             group.  In any event, #TARGETS cannot   * 00272000
*                             be larger than the maximum number of    * 00272100
*                             members permitted to join the group.    * 00272200
*                                                                     * 00272300
*                 324         ixcMsgoRsnBadTimeout:  The timeout      * 00272400
*                             value specified is invalid.  The        * 00272500
*                             timeout value must be between one and   * 00272600
*                             '7FFF'X, inclusive.  If MSGACCESS of    * 00272700
*                             ASYNC is coded, a nonzero timeout value * 00272800
*                             must be provided.                       * 00272900
*                                                                     * 00273000
*                 340         ixcMsgoRsnTargetMaxMsglen61K:  Message  * 00273100
*                             length not valid for target.            * 00273200
*                                                                     * 00273300
*                             Either the target member or the system  * 00273400
*                             on which the target member resides does * 00273500
*                             not support messages larger than 62462  * 00273600
*                             bytes (decimal).  The message was not   * 00273700
*                             sent.                                   * 00273800
*                                                                     * 00273900
*                             Use the IXCQUERY service to determine   * 00274000
*                             which members reside on systems capable * 00274100
*                             of sending/receiving messages larger    * 00274200
*                             than 62462 bytes.  For XCF to deliver a * 00274300
*                             message greater than 62462 bytes in     * 00274400
*                             length, the target member must reside   * 00274500
*                             on a system that supports 128MB message * 00274600
*                             delivery, and the target member must    * 00274700
*                             specify YES for the GT61KMSG keyword    * 00274800
*                             when it invokes the IXCJOIN macro to    * 00274900
*                             join its group.                         * 00275000
*                                                                     * 00275100
*                 344         ixcMsgoRsnSenderBecameInactive:         * 00275200
*                             Sending member became inactive while    * 00275300
*                             message-out was in progress.            * 00275400
*                                                                     * 00275500
*                             The sending member became inactive      * 00275600
*                             during the message-out request.  The    * 00275700
*                             message-out request is terminated.      * 00275800
*                             Some, none, or all the targets may      * 00275900
*                             receive the message.                    * 00276000
*                                                                     * 00276100
*                 348         ixcMsgoxRsnBadSendTime:  The SENDTIME   * 00276200
*                             value specified is invalid. The         * 00276300
*                             SENDTIME value must be between 1 and    * 00276400
*                             32767 ('7FFF'x) inclusive.  If TIMEOUT  * 00276500
*                             is coded, the SENDTIME value must be    * 00276600
*                             less than or equal to the TIMEOUT value * 00276700
*                             specified for the request.              * 00276800
*                                                                     * 00276900
*                 34C         ixcMsgoxRsnSendTimeExpired:  The amount * 00277000
*                             of time that XCF was allowed to pause   * 00277100
*                             the unit of work to synchronously       * 00277200
*                             complete its access of caller supplied  * 00277300
*                             storage areas expired.  XCF canceled    * 00277400
*                             the incomplete send processing and the  * 00277500
*                             message was not sent to the target      * 00277600
*                             member.                                 * 00277700
*                                                                     * 00277800
*                             Increase the SENDTIME value to allow    * 00277900
*                             XCF more time to complete accessing     * 00278000
*                             user storage that contains the message  * 00278100
*                             text.                                   * 00278200
*                                                                     * 00278300
*                 350         ixcMsgoxRsnPauseEnvError:  An XCF       * 00278400
*                             Message-Out request using               * 00278500
*                             MSGACCESS=SYNCSUSPEND can not be issued * 00278600
*                             from a SUSPEND exit routine or from an  * 00278700
*                             SRB routine that the system abended     * 00278800
*                             with a 47B system completion code.      * 00278900
*                                                                     * 00279000
*                 354         ixcMsgoxRsnResourceMgrCalling:  An XCF  * 00279100
*                             Message-Out request using               * 00279200
*                             MSGACCESS=SYNCSUSPEND can not be issued * 00279300
*                             from an address space resource manager. * 00279400
*                                                                     * 00279500
*                 358         ixcMsgoxRsnBadFilterGroup:  The group   * 00279600
*                             name specified via the FILTERGROUP      * 00279700
*                             keyword is not valid.  The group name   * 00279800
*                             must be left justified and as needed,   * 00279900
*                             padded on the right with blanks to 8    * 00280000
*                             characters.  The valid characters are   * 00280100
*                             A-Z, 0-9, $, @, and #.                  * 00280200
*                                                                     * 00280300
*                 876         ixcRsnCodeLocked:  User Error. Unable   * 00280400
*                             to allocate system resources to pause   * 00280500
*                             the unit of work.  Caller holds a lock. * 00280600
*                                                                     * 00280700
*                 010Cxxxx    ixcMsgoRsnPlistNoPartInfoBadStg:        * 00280800
*                             Parameter list not accessible.  A       * 00280900
*                             parameter associated with one of the    * 00281000
*                             parts of a multipart message is not     * 00281100
*                             valid, but the Message-Out service was  * 00281200
*                             not able to store the index of the part * 00281300
*                             and the address of the element that     * 00281400
*                             describes the part in the parameter     * 00281500
*                             list.  The low order halfword of the    * 00281600
*                             reason code (xxxx) indicates the reason * 00281700
*                             code that would have been returned if   * 00281800
*                             the part information could have been    * 00281900
*                             placed in the parameter list.           * 00282000
*                                                                     * 00282100
*                                                                     * 00282200
*                                                                     * 00282300
*                                                                     * 00282400
*       C         IxcRetCodeEnvError:  Environmental error.  This     * 00282500
*                 currently includes the case where all resources     * 00282600
*                 associated with a destination system have been      * 00282700
*                 exhausted.                                          * 00282800
*                                                                     * 00282900
*                 Hex Reason       Meaning                            * 00283000
*                 Code                                                * 00283100
*                                                                     * 00283200
*                                                                     * 00283300
*                 4           ixcMsgoRsnNoBuffer:  No message buffer  * 00283400
*                             available.                              * 00283500
*                                                                     * 00283600
*                             XCF signalling resources (message       * 00283700
*                             buffers) are temporarily unavailable.   * 00283800
*                             Retry the request after allowing some   * 00283900
*                             time for the condition to clear.  If    * 00284000
*                             TIMEOUT was not specified, consider     * 00284100
*                             retrying the request with a nonzero     * 00284200
*                             TIMEOUT value to have XCF try to handle * 00284300
*                             the condition.  If this condition       * 00284400
*                             reoccurs when a nonzero TIMEOUT value   * 00284500
*                             is specified, the message-out service   * 00284600
*                             will either accept the message with     * 00284700
*                             return code 4 or will reject the        * 00284800
*                             message with return code 'C'x reason    * 00284900
*                             'C'x.                                   * 00285000
*                                                                     * 00285100
*                             If the sending member specified (or     * 00285200
*                             defaulted to) MSGISO=NONE when the      * 00285300
*                             IXCJOIN macro was invoked to become an  * 00285400
*                             active member of its group, this reason * 00285500
*                             code is also returned for the case      * 00285600
*                             where the target member is "message     * 00285700
*                             isolated".  In effect, the sending      * 00285800
*                             system refuses to provide a message     * 00285900
*                             buffer for a target member that is      * 00286000
*                             "message isolated".                     * 00286100
*                                                                     * 00286200
*                             The sending member can specify          * 00286300
*                             MSGISO=MSGORSN on the IXCJOIN if there  * 00286400
*                             is a need to distinguish the case where * 00286500
*                             there is no buffer for a target member  * 00286600
*                             due to message isolation                * 00286700
*                             (ixcMsgoRsnTargetIsolated) from the     * 00286800
*                             case where XCF has no message buffer    * 00286900
*                             due to MAXMSG constraints imposed by    * 00287000
*                             the installation (ixcMsgoRsnNoBuffer).  * 00287100
*                                                                     * 00287200
*                                                                     * 00287300
*                 8           ixcMsgoRsnNoPath:  No signalling path   * 00287400
*                             available.                              * 00287500
*                                                                     * 00287600
*                             XCF signalling resources (signalling    * 00287700
*                             paths) are temporarily unavailable.     * 00287800
*                             Retry the request after allowing some   * 00287900
*                             time for the condition to clear.  If    * 00288000
*                             TIMEOUT was not specified, consider     * 00288100
*                             retrying the request with a nonzero     * 00288200
*                             TIMEOUT value to have XCF try to handle * 00288300
*                             the condition.  If this condition       * 00288400
*                             occurs and a nonzero TIMEOUT value is   * 00288500
*                             specified, the message-out service will * 00288600
*                             either accept the message with return   * 00288700
*                             code 4 or will reject the message with  * 00288800
*                             return code 'C'x reason '18'x.          * 00288900
*                                                                     * 00289000
*                                                                     * 00289100
*                 C           ixcMsgoRsnNoMsgSpace:  No member        * 00289200
*                             message space available.                * 00289300
*                                                                     * 00289400
*                             The message space managed by XCF on     * 00289500
*                             behalf of the member has no more        * 00289600
*                             capacity.  Generally this condition     * 00289700
*                             suggests that the volume of message     * 00289800
*                             traffic has exceeded processing         * 00289900
*                             capacity of the member or its group.    * 00290000
*                             Depending on how the member is using    * 00290100
*                             the signalling service, member message  * 00290200
*                             space may become available as the       * 00290300
*                             system continues to process work.  The  * 00290400
*                             member may need to use the Message      * 00290500
*                             Control Request(COMPLETION) Type(FORCE) * 00290600
*                             Service to Force the completion of one  * 00290700
*                             or more messages in order to make more  * 00290800
*                             member message space storage available. * 00290900
*                             The member may need to take steps to    * 00291000
*                             reduce its message traffic volume.      * 00291100
*                                                                     * 00291200
*                             If the member specified a notify exit   * 00291300
*                             when it invoked the IXCJOIN service to  * 00291400
*                             join its XCF group, retry the request   * 00291500
*                             when XCF indicates that resources are   * 00291600
*                             once again available.  Otherwise, retry * 00291700
*                             the request after allowing some time    * 00291800
*                             for the condition to clear, or after    * 00291900
*                             taking appropriate actions to release   * 00292000
*                             member message space.                   * 00292100
*                                                                     * 00292200
*                 10          ixcMsgoRsnSystemNoStorage:  System      * 00292300
*                             storage shortage.                       * 00292400
*                                                                     * 00292500
*                             A shortage of system resources          * 00292600
*                             (storage) has occurred. The request is  * 00292700
*                             rejected. Retry the request after       * 00292800
*                             allowing some time for the condition to * 00292900
*                             clear. Subsequent requests may also be  * 00293000
*                             rejected until the shortage is          * 00293100
*                             relieved.  The member may need to use   * 00293200
*                             the Message Control Request(COMPLETION) * 00293300
*                             Type(FORCE) Service to Force the        * 00293400
*                             completion of one or more messages in   * 00293500
*                             order to make more system storage       * 00293600
*                             available.                              * 00293700
*                                                                     * 00293800
*                 14          ixcMsgoRsnNoBufferNotQueued:  No        * 00293900
*                             message buffer available, timeout was   * 00294000
*                             specified.                              * 00294100
*                                                                     * 00294200
*                             XCF signalling resources (message       * 00294300
*                             buffers) are unavailable.  Message      * 00294400
*                             delivery is not making progress.  Retry * 00294500
*                             the request after allowing some time    * 00294600
*                             for the condition to clear.  Until the  * 00294700
*                             condition is resolved, XCF will reject  * 00294800
*                             this message.                           * 00294900
*                                                                     * 00295000
*                 18          ixcMsgoRsnNoPathNotQueued:  No          * 00295100
*                             signalling path available, timeout was  * 00295200
*                             specified.                              * 00295300
*                                                                     * 00295400
*                             XCF signalling resources (signalling    * 00295500
*                             paths) are unavailable.  Attempts to    * 00295600
*                             reestablish signalling connectivity are * 00295700
*                             not making progress.  Retry the request * 00295800
*                             after allowing some time for the        * 00295900
*                             condition to clear.  Until the          * 00296000
*                             condition is resolved,  XCF rejects all * 00296100
*                             message-out requests to the system on   * 00296200
*                             which the target member resides.        * 00296300
*                                                                     * 00296400
*                 1C          ixcMsgoRsnMsgPendingMustQueue:          * 00296500
*                             Messages pending.                       * 00296600
*                                                                     * 00296700
*                             The send for this message could not be  * 00296800
*                             initiated immediately because there are * 00296900
*                             other message-out requests already      * 00297000
*                             pending that must be initiated first.   * 00297100
*                             Retry the request after allowing some   * 00297200
*                             time for the condition to clear.  If    * 00297300
*                             TIMEOUT was not specified, consider     * 00297400
*                             retrying the request with a nonzero     * 00297500
*                             TIMEOUT value to have XCF try to handle * 00297600
*                             the condition.  If this condition       * 00297700
*                             reoccurs when a nonzero TIMEOUT value   * 00297800
*                             is specified, the message-out service   * 00297900
*                             will either accept the message with     * 00298000
*                             return code 4 or will reject the        * 00298100
*                             message with some other return code     * 00298200
*                             'C'x reason.                            * 00298300
*                                                                     * 00298400
*                 20          ixcMsgoRsnDualFull:  DU-AL is full.     * 00298500
*                                                                     * 00298600
*                             The Dispatchable Unit Access List       * 00298700
*                             (DU-AL) is full.  Retry the request     * 00298800
*                             after removing at least one space from  * 00298900
*                             the DU-AL.  Applies only when MSGACCESS * 00299000
*                             of ASYNC or SYNCSUSPEND is specified.   * 00299100
*                                                                     * 00299200
*                 24          ixcMsgoRsnDualNoStorage:  Unable to     * 00299300
*                             obtain DU-AL storage.                   * 00299400
*                                                                     * 00299500
*                             XCF could not obtain storage to create  * 00299600
*                             the Dispatchable Unit Access List       * 00299700
*                             needed to process the request.  Retry   * 00299800
*                             the request after allowing some time    * 00299900
*                             for the condition to clear.  Applies    * 00300000
*                             only when MSGACCESS of ASYNC or         * 00300100
*                             SYNCSUSPEND is specified.               * 00300200
*                                                                     * 00300300
*                 28          ixcMsgoRsnDualNotSuitable:  DU-AL is    * 00300400
*                             unsuitable.                             * 00300500
*                                                                     * 00300600
*                             The Dispatchable Unit Access List       * 00300700
*                             (DU-AL) is unsuitable.  The DU-AL is    * 00300800
*                             too large or provided access to a       * 00300900
*                             subspace at some point during its       * 00301000
*                             existence.  Retry the request under     * 00301100
*                             some other work unit.  Applies only     * 00301200
*                             when MSGACCESS of ASYNC or SYNCSUSPEND  * 00301300
*                             is specified.                           * 00301400
*                                                                     * 00301500
*                 2C          ixcMsgoxRsnAllocPauseElemError:         * 00301600
*                             Allocate Pause Element Error            * 00301700
*                                                                     * 00301800
*                             The system was unable to obtain         * 00301900
*                             resources required to allow XCF to      * 00302000
*                             pause the unit of work while accessing  * 00302100
*                             storage containing message text. The    * 00302200
*                             send request is not attempted.  Retry   * 00302300
*                             the request after allowing some time    * 00302400
*                             for the condition to clear.  Applies    * 00302500
*                             only when MSGACCESS of SYNCSUSPEND is   * 00302600
*                             specified.                              * 00302700
*                                                                     * 00302800
*                 30          ixcMsgoxRsnForceCompletion:  Message    * 00302900
*                             forced to completion                    * 00303000
*                                                                     * 00303100
*                             An IXCMSGC REQUEST=COMPLETION,          * 00303200
*                             TYPE=FORCE service call was issued for  * 00303300
*                             the message while the message-out unit  * 00303400
*                             of work was paused while XCF            * 00303500
*                             synchronously accessed caller supplied  * 00303600
*                             storage areas.  XCF canceled the send   * 00303700
*                             processing. The message may not have    * 00303800
*                             been sent to all target members.        * 00303900
*                             Applies only when MSGACCESS of          * 00304000
*                             SYNCSUSPEND is specified.               * 00304100
*                                                                     * 00304200
*                 34          ixcMsgoxRsnReleaseMsg:  Message         * 00304300
*                             released                                * 00304400
*                                                                     * 00304500
*                             An IXCMSGC REQUEST=RELEASEMSG service   * 00304600
*                             call was issued for the message while   * 00304700
*                             the message-out unit of work was paused * 00304800
*                             while XCF synchronously accessed caller * 00304900
*                             supplied storage areas.  XCF canceled   * 00305000
*                             the send processing. The message may    * 00305100
*                             not have been sent to all target        * 00305200
*                             members.  Applies only when MSGACCESS   * 00305300
*                             of SYNCSUSPEND is specified.            * 00305400
*                                                                     * 00305500
*                 36          ixcMsgoxRsnDiscardMsg:  Message         * 00305600
*                             discarded                               * 00305700
*                                                                     * 00305800
*                             An IXCMSGC REQUEST=DISCARDMSG service   * 00305900
*                             call was issued for the message while   * 00306000
*                             the message-out unit of work was paused * 00306100
*                             while XCF synchronously accessed caller * 00306200
*                             supplied storage areas.  XCF canceled   * 00306300
*                             the send processing. The message may    * 00306400
*                             not have been sent to all target        * 00306500
*                             members.  Applies only when MSGACCESS   * 00306600
*                             of SYNCSUSPEND is specified.            * 00306700
*                                                                     * 00306800
*                 38          ixcMsgoxRsnAsyncSyncSuspendAbend:       * 00306900
*                             Asynchronous abend while suspended      * 00307000
*                                                                     * 00307100
*                             An XCF Message-Out request using        * 00307200
*                             MSGACCESS=SYNCSUSPEND was cancelled due * 00307300
*                             to an asynchronous abend in the system  * 00307400
*                             that affected the suspended unit of     * 00307500
*                             work. XCF could not complete sending    * 00307600
*                             the message to all targets.  Applies    * 00307700
*                             only when MSGACCESS of SYNCSUSPEND is   * 00307800
*                             specified.                              * 00307900
*                                                                     * 00308000
*                 3C          ixcMsgoRsnTargetIsolated:  Target       * 00308100
*                             member is "message isolated".           * 00308200
*                                                                     * 00308300
*                             The target member is not processing     * 00308400
*                             messages in a timely manner and is      * 00308500
*                             currently "message isolated".  Messages * 00308600
*                             targeted to such a member will either   * 00308700
*                             be rejected or delayed by the sending   * 00308800
*                             system.  If and when the target member  * 00308900
*                             makes sufficient progress, normal       * 00309000
*                             message flow will resume.  Retry the    * 00309100
*                             request after allowing time for the     * 00309200
*                             condition to clear.  If TIMEOUT was not * 00309300
*                             specified, consider retrying the        * 00309400
*                             request with a nonzero TIMEOUT value to * 00309500
*                             have XCF try to handle the condition.   * 00309600
*                                                                     * 00309700
*                             This reason code only applies if the    * 00309800
*                             sending member specified MSGISO=MSGORSN * 00309900
*                             when the IXCJOIN macro was invoked to   * 00310000
*                             become an active group member.  If      * 00310100
*                             MSGISO=NONE is specified (or taken as   * 00310200
*                             the default), a request to send a       * 00310300
*                             message to target member that is        * 00310400
*                             "message isolated" is rejected with a   * 00310500
*                             "no buffer" reason code                 * 00310600
*                             (ixcMsgoRsnNoBuffer).                   * 00310700
*                                                                     * 00310800
*                                                                     * 00310900
*                                                                     * 00311000
*                                                                     * 00311100
*       10        IxcRetCodeCompError:  Failure in XCF processing.    * 00311200
*                 Reason codes are not documented.                    * 00311300
*                                                                     * 00311400
*                                                                     * 00311500
*                                                                     * 00311600
*01* REASON CODES:                                                    * 00311700
*                                                                     * 00311800
*       A unique reason code will be returned whenever the return     * 00311900
*       code is non-zero.                                             * 00312000
*                                                                     * 00312100
*       Return code and reason code constants are defined in the      * 00312200
*       IXCYCON macro.                                                * 00312300
*                                                                     * 00312400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00312500
*                                                                     * 00312600
*02*   PROCESSOR:  ASSEM                                              * 00312700
*                                                                     * 00312800
*01* COMPONENT:  SCXCF                                                * 00312900
*                                                                     * 00313000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00313100
*                                                                     * 00313200
*01* ABEND CODES:                                                     * 00313300
*                                                                     * 00313400
*                                                                     * 00313500
*       073       Environment not valid.  The caller held a lock.     * 00313600
*                                                                     * 00313700
*       C78       XCF could not obtain storage to process the         * 00313800
*                 request.  Try again later.                          * 00313900
*                                                                     * 00314000
*                                                                     * 00314100
*                                                                     * 00314200
*01* MACRO USAGE NOTES:                                               * 00314300
*                                                                     * 00314400
*                                                                     * 00314500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00314600
*        global macro variable.  Any value other than 'NO' will       * 00314700
*        result in the macro expansion being printed.  The default is * 00314800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00314900
*        variable should be set.                                      * 00315000
*                                                                     * 00315100
*                    GBLC &ZPRINT                                     * 00315200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00315300
*                                                                     * 00315400
*                                                                     * 00315500
*    2.  The IXCMSGOX macro supports multiple versions. The macro key * 00315600
*        list  below  contains the version level in which the key was * 00315700
*        first  introduced.  Positionals  are  identified by the word * 00315800
*        'Positional'  followed by the numeric value of its position. * 00315900
*        Nested  positionals  are  preceded  by their outer key.  The * 00316000
*        lowest value represents the original version and the highest * 00316100
*        value  represents  the  most  recent version of the IXCMSGOX * 00316200
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00316300
*        least  as high as the highest version number of all the keys * 00316400
*        being used.                                                  * 00316500
*                                                                     * 00316600
*        VERSION   KEY                                                * 00316700
*                                                                     * 00316800
*              4      MEMTOKEN                                        * 00316900
*                     MSGBUF                                          * 00317000
*                     MSGCNTL                                         * 00317100
*                     MSGLEN                                          * 00317200
*                     MSGSTGKEY                                       * 00317300
*                     TARGET                                          * 00317400
*              5      #TARGETS                                        * 00317500
*                     ATTRIBUTES                                      * 00317600
*                     DELIVERMSG                                      * 00317700
*                     FILTERGROUP                                     * 00317800
*                     GETRESPONSE                                     * 00317900
*                     MEMBERS                                         * 00318000
*                     MSGACCESS                                       * 00318100
*                     NEXTTARGETOFF                                   * 00318200
*                     NOTIFY                                          * 00318300
*                     NOTIFYBY                                        * 00318400
*                     NOTIFYEXIT                                      * 00318500
*                     NOTIFYIF                                        * 00318600
*                     RESPONSEID                                      * 00318700
*                     RETMSGOTOKEN                                    * 00318800
*                     SENDTO                                          * 00318900
*                     STREAMID                                        * 00319000
*                     TARGETS                                         * 00319100
*                     TIMEOUT                                         * 00319200
*                     USERDATA                                        * 00319300
*              6      #MSGPARTS                                       * 00319400
*                     ELEMADDRMODE                                    * 00319500
*                     ELEMENT                                         * 00319600
*                     ELEMFORM                                        * 00319700
*                     ENDOFQUEUE                                      * 00319800
*                     MULTIPART                                       * 00319900
*                     NEXTOFF                                         * 00320000
*                     NEXTPTROFF                                      * 00320100
*                     PARTALET                                        * 00320200
*                     PARTALETOFF                                     * 00320300
*                     PARTALETTBL                                     * 00320400
*                     PARTLEN                                         * 00320500
*                     PARTLENOFF                                      * 00320600
*                     PARTLENTBL                                      * 00320700
*                     PARTOFF                                         * 00320800
*                     PARTPTROFF                                      * 00320900
*                     SENDTIME                                        * 00321000
*                                                                     * 00321100
*    3.  When  invoked  from someplace other than the primary address * 00321200
*        space  from  which  the sending member joined its XCF group, * 00321300
*        some  message-out  functions  may  not  be  available.   Any * 00321400
*        request  that  requires use of one of the member data spaces * 00321500
*        that is managed by XCF on behalf of the member is subject to * 00321600
*        rejection.    XCF  will  attempt  to  perform  the requested * 00321700
*        function without use of these data spaces.  If a member data * 00321800
*        space  is required, the request is rejected.  Do not use the * 00321900
*        following  keywords  if  such rejection cannot be tolerated: * 00322000
*        SENDTO(GROUP),  GETRESPONSE(YES),  NOTIFY(YES),  TIMEOUT, or * 00322100
*        MSGACCESS(ASYNC).                                            * 00322200
*                                                                     * 00322300
*                                                                     * 00322400
*                                                                     * 00322500
*01* CHANGE ACTIVITY:                                                 * 00322600
*                                                                     * 00322700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00322800
*                                                                     * 00322900
*    $L0=MSG64B   HBB7770 081031 PD00C9:  64-bit Message Buffer       * 00323000
*                                         Support for XCF IXCMSGOX    * 00323100
*                                         Service                     * 00323200
*    $L1=HSIBBUF  HBB7770 090107 PD00C9:  XCF Signaling Buffer        * 00323300
*                                         Dedication for Hyperswap    * 00323400
*    $P1=ME16385  HBB7770 090622 PD00C9:  MSGSTGKEY and other         * 00323500
*                                         miscellaneous prolog        * 00323600
*                                         updates                     * 00323700
*    $P2=ME17246  HBB7770 090924 PD00C9:  CRITICAL attribute prolog   * 00323800
*                                         updates                     * 00323900
*    $L2=XCFSRVR  HBB7780 100201 PD00C9:  XCF Client/Server Support   * 00324000
*                                         for SDSF                    * 00324100
*    $L3=XCFSRVR  HBB7780 100531 PD00C9:  Remove XCFDATA and LINKAGE  * 00324200
*                                         keywords                    * 00324300
*    $01=ME26552  HBB7780 130522 PD00C9:  Add FilterGroup             * 00324400
*    $L4=TCSIMP   HBB77A0 141201 PD00BJ:  Message isolation           * 00324500
*    $P3=ME28450  HBB77A0 150212 PD00BJ:  Clarify documentation       * 00324600
****** END OF SPECIFICATIONS *****************************************/ 00324700
*/********************************************************************* 00324800
         MACRO                                                          00324900
&XLABEL  IXCMSGOX &MEMTOKEN=,&SENDTO=,&TARGET=,&DELIVERMSG=,&STREAMID=,*00325000
               &GETRESPONSE=,&TIMEOUT=,&MEMBERS=,&TARGETS=,&#TARGETS=, *00325100
               &NEXTTARGETOFF=,&FILTERGROUP=,&RESPONSEID=,&MULTIPART=, *00325200
               &MSGCNTL=,&MSGBUF=,&MSGLEN=,&#MSGPARTS=,&ELEMENT=,      *00325300
               &ELEMADDRMODE=,&ELEMFORM=,&NEXTOFF=,&NEXTPTROFF=,       *00325400
               &ENDOFQUEUE=,&PARTOFF=,&PARTPTROFF=,&PARTALET=,         *00325500
               &PARTALETOFF=,&PARTALETTBL=,&PARTLEN=,&PARTLENOFF=,     *00325600
               &PARTLENTBL=,&MSGSTGKEY=,&MSGACCESS=,&SENDTIME=,        *00325700
               &NOTIFY=,&USERDATA=,&NOTIFYIF=,&NOTIFYBY=,&NOTIFYEXIT=, *00325800
               &RETMSGOTOKEN=,&ATTRIBUTES=,&RETCODE=,&RSNCODE=,        *00325900
               &PLISTVER=,&MF=                                          00326000
.*                                                                      00326100
*                   MACDATE -01/13/18-<6>                               00326200
.*                                                                      00326300
.*******************************************************************    00326400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00326500
.*******************************************************************    00326600
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00326700
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00326800
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00326900
.*                                                                      00327000
                   GBLC  &ZIXCMSGOX  YES=MACRO USED AT LEAST ONCE       00327100
.*******************************************************************    00327200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00327300
.*******************************************************************    00327400
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00327500
                   LCLC  &ZCNDX      SYSNDX CHARACTERS                  00327600
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00327700
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00327800
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00327900
                   LCLA  &ZAWRK      USED AS A WORK AREA                00328000
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00328100
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00328200
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00328300
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00328400
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00328500
                   LCLC  &ZMAC_G     "G" or null                        00328600
&ZMAC_G            SETC  ''                                             00328700
                   LCLC  &ZMAC_LR                                       00328800
&ZMAC_LR           SETC  'LR'                                           00328900
                   LCLC  &ZMAC_L                                        00329000
&ZMAC_L            SETC  'L'                                            00329100
                   LCLC  &ZMAC_ST                                       00329200
&ZMAC_ST           SETC  'ST'                                           00329300
                   LCLC  &ZMAC_LLGT                                     00329400
&ZMAC_LLGT         SETC  'L'                                            00329500
                   LCLC  &ZMAC_LGR                                      00329600
&ZMAC_LGR          SETC  'LR'                                           00329700
                   LCLC  &ZMAC_LG                                       00329800
&ZMAC_LG           SETC  'L'                                            00329900
                   LCLC  &ZMAC_STG                                      00330000
&ZMAC_STG          SETC  'ST'                                           00330100
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00330200
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00330300
.*                                                                      00330400
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00330500
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00330600
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00330700
                   LCLC  &ZENDBASEPL            End of base PL          00330800
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00330900
.*******************************************************************    00331000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00331100
.*******************************************************************    00331200
                   LCLA  &ZI         INDEX FOR ARRAY                    00331300
                   LCLA  &ZJ         INDEX FOR PARMS                    00331400
                   LCLA  &ZK         INDEX FOR PARSE                    00331500
                   LCLA  &ZLO        LOW RANGE VALUE                    00331600
                   LCLA  &ZHI        HIGH RANGE VALUE                   00331700
                   LCLC  &ZW         WORK AREA FOR PARM                 00331800
.********************************************************************   00331900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00332000
.********************************************************************   00332100
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00332200
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00332300
                   GBLA  &SYSALVL    SYSSTATE ARCHLVL                   00332400
                   GBLC  &SYSAM64    SYSSTATE AMODE64                   00332500
.*                                                                      00332600
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00332700
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00332800
                   SPLEVEL  TEST                                        00332900
.ZSYS2             ANOP  ,                                              00333000
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00333100
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00333200
                   SYSSTATE TEST                                        00333300
                   AGO   .ZSYS4                                         00333400
.ZSYS3             ANOP  ,                                              00333500
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00333600
.ZSYS4             ANOP  ,                                              00333700
                   AIF   ('&SYSAM64' NE 'YES').ZSYSN64                  00333800
&ZMAC_LLGT         SETC 'LLGT'                                          00333900
&ZMAC_LGR          SETC 'LGR'                                           00334000
&ZMAC_LG           SETC 'LG'                                            00334100
&ZMAC_STG          SETC 'STG'                                           00334200
.ZSYSN64           ANOP  ,                                              00334300
                   AIF   (&SYSALVL LE 1).ZSYS4A                         00334400
&ZMAC_G            SETC 'G'                                             00334500
&ZMAC_LR           SETC 'LGR'                                           00334600
&ZMAC_L            SETC 'LG'                                            00334700
&ZMAC_ST           SETC 'STG'                                           00334800
.ZSYS4A            ANOP  ,                                              00334900
.*******************************************************************    00335000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00335100
.*******************************************************************    00335200
                   LCLC  &XMEMTOKEN  ++ NAME                            00335300
                   LCLC  &XSENDTO    ++ VALUE                           00335400
                   LCLC  &XTARGET    ++ NAME                            00335500
                   LCLC  &XDELIVERMSG           ++ VALUE                00335600
                   LCLC  &XSTREAMID  ++ NAME                            00335700
                   LCLC  &XGETRESPONSE          ++ VALUE                00335800
                   LCLC  &XTIMEOUT   ++ NAME                            00335900
                   LCLC  &XMEMBERS   ++ VALUE                           00336000
                   LCLC  &XTARGETS   ++ NAME                            00336100
                   LCLC  &X#TARGETS  ++ NAME                            00336200
                   LCLC  &XNEXTTARGETOFF        ++ NAME                 00336300
                   LCLC  &XFILTERGROUP          ++ NAME                 00336400
                   LCLC  &XRESPONSEID           ++ NAME                 00336500
                   LCLC  &XMULTIPART            ++ VALUE                00336600
                   LCLC  &XMSGCNTL   ++ NAME                            00336700
                   LCLC  &XMSGBUF    ++ NAME                            00336800
                   LCLC  &XMSGLEN    ++ NAME                            00336900
                   LCLC  &X#MSGPARTS            ++ NAME                 00337000
                   LCLC  &XELEMENT   ++ NAME                            00337100
                   LCLC  &XELEMADDRMODE         ++ VALUE                00337200
                   LCLC  &XELEMFORM  ++ VALUE                           00337300
                   LCLC  &XNEXTOFF   ++ NAME                            00337400
                   LCLC  &XNEXTPTROFF           ++ NAME                 00337500
                   LCLC  &XENDOFQUEUE           ++ NAME                 00337600
                   LCLC  &XPARTMODE  ++ NAME                            00337700
                   LCLC  &XPARTOFF   ++ NAME                            00337800
                   LCLC  &XPARTPTROFF           ++ NAME                 00337900
                   LCLC  &XDELLIST3  ++ NAME                            00338000
                   LCLC  &XPARTALET  ++ NAME                            00338100
                   LCLC  &XPARTALETOFF          ++ NAME                 00338200
                   LCLC  &XPARTALETTBL          ++ NAME                 00338300
                   LCLC  &XLENMODE   ++ NAME                            00338400
                   LCLC  &XPARTLEN   ++ NAME                            00338500
                   LCLC  &XPARTLENOFF           ++ NAME                 00338600
                   LCLC  &XPARTLENTBL           ++ NAME                 00338700
                   LCLC  &XMSGSTGKEY            ++ NAME                 00338800
                   LCLC  &XMSGACCESS            ++ VALUE                00338900
                   LCLC  &XSENDTIME  ++ NAME                            00339000
                   LCLC  &XNOTIFY    ++ VALUE                           00339100
                   LCLC  &XUSERDATA  ++ NAME                            00339200
                   LCLC  &XNOTIFYIF  ++ VALUE                           00339300
                   LCLC  &XNOTIFYBY  ++ VALUE                           00339400
                   LCLC  &XNOTIFYEXIT           ++ NAME                 00339500
                   LCLC  &XRETMSGOTOKEN         ++ NAME                 00339600
                   LCLC  &XATTRIBUTES(257)      ++ VALUE                00339700
                   LCLC  &XRETCODE   ++ NAME                            00339800
                   LCLC  &XRSNCODE   ++ NAME                            00339900
                   LCLA  &XPLISTVER  ++ VALUE                           00340000
                   LCLC  &XMF        ++ VALUE                           00340100
                   LCLC  &XMFCTRL    ++ NAME                            00340200
                   LCLC  &XMFATTR    ++ VALUE                           00340300
                   LCLC  &XMFSCK     ++ VALUE                           00340400
.*******************************************************************    00340500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00340600
.*******************************************************************    00340700
                   LCLC  &ZXMEMTOKEN            ++ INPUT NAME           00340800
                   LCLC  &ZXSENDTO   ++ INPUT VALUE                     00340900
                   LCLC  &ZXTARGET   ++ INPUT NAME                      00341000
                   LCLC  &ZXDELIVERMSG          ++ INPUT VALUE          00341100
                   LCLC  &ZXSTREAMID            ++ INPUT NAME           00341200
                   LCLC  &ZXGETRESPONSE         ++ INPUT VALUE          00341300
                   LCLC  &ZXTIMEOUT  ++ INPUT NAME                      00341400
                   LCLC  &ZXMEMBERS  ++ INPUT VALUE                     00341500
                   LCLC  &ZXTARGETS  ++ INPUT NAME                      00341600
                   LCLC  &ZX#TARGETS            ++ INPUT NAME           00341700
                   LCLC  &ZXNEXTTARGETOFF       ++ INPUT NAME           00341800
                   LCLC  &ZXFILTERGROUP         ++ INPUT NAME           00341900
                   LCLC  &ZXRESPONSEID          ++ INPUT NAME           00342000
                   LCLC  &ZXMULTIPART           ++ INPUT VALUE          00342100
                   LCLC  &ZXMSGCNTL  ++ INPUT NAME                      00342200
                   LCLC  &ZXMSGBUF   ++ INPUT NAME                      00342300
                   LCLC  &ZXMSGLEN   ++ INPUT NAME                      00342400
                   LCLC  &ZX#MSGPARTS           ++ INPUT NAME           00342500
                   LCLC  &ZXELEMENT  ++ INPUT NAME                      00342600
                   LCLC  &ZXELEMADDRMODE        ++ INPUT VALUE          00342700
                   LCLC  &ZXELEMFORM            ++ INPUT VALUE          00342800
                   LCLC  &ZXNEXTOFF  ++ INPUT NAME                      00342900
                   LCLC  &ZXNEXTPTROFF          ++ INPUT NAME           00343000
                   LCLC  &ZXENDOFQUEUE          ++ INPUT NAME           00343100
                   LCLC  &ZXPARTMODE            ++ INPUT NAME           00343200
                   LCLC  &ZXPARTOFF  ++ INPUT NAME                      00343300
                   LCLC  &ZXPARTPTROFF          ++ INPUT NAME           00343400
                   LCLC  &ZXDELLIST3            ++ INPUT NAME           00343500
                   LCLC  &ZXPARTALET            ++ INPUT NAME           00343600
                   LCLC  &ZXPARTALETOFF         ++ INPUT NAME           00343700
                   LCLC  &ZXPARTALETTBL         ++ INPUT NAME           00343800
                   LCLC  &ZXLENMODE  ++ INPUT NAME                      00343900
                   LCLC  &ZXPARTLEN  ++ INPUT NAME                      00344000
                   LCLC  &ZXPARTLENOFF          ++ INPUT NAME           00344100
                   LCLC  &ZXPARTLENTBL          ++ INPUT NAME           00344200
                   LCLC  &ZXMSGSTGKEY           ++ INPUT NAME           00344300
                   LCLC  &ZXMSGACCESS           ++ INPUT VALUE          00344400
                   LCLC  &ZXSENDTIME            ++ INPUT NAME           00344500
                   LCLC  &ZXNOTIFY   ++ INPUT VALUE                     00344600
                   LCLC  &ZXUSERDATA            ++ INPUT NAME           00344700
                   LCLC  &ZXNOTIFYIF            ++ INPUT VALUE          00344800
                   LCLC  &ZXNOTIFYBY            ++ INPUT VALUE          00344900
                   LCLC  &ZXNOTIFYEXIT          ++ INPUT NAME           00345000
                   LCLC  &ZXRETMSGOTOKEN        ++ OUTPUT NAME          00345100
                   LCLC  &ZXATTRIBUTES          ++ INPUT VALUE          00345200
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00345300
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00345400
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00345500
                   LCLC  &ZXMF       ++ INPUT VALUE                     00345600
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00345700
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00345800
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00345900
.********************************************************************   00346000
.***AC.PLV01  PROCESS PLISTVER                                      *   00346100
.********************************************************************   00346200
&XPLISTVER      SETA  4                                                 00346300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00346400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00346500
&XPLISTVER      SETA  6                                                 00346600
.ZPLV0          ANOP  ,                                                 00346700
.*                                                                      00346800
                AIF   ('&SENDTO' EQ '').ZPLV1E                          00346900
                AIF   (&XPLISTVER GE 5).ZPLV1E                          00347000
&XPLISTVER      SETA  5                                                 00347100
.ZPLV1E         ANOP  ,                                                 00347200
.*                                                                      00347300
                AIF   ('&DELIVERMSG' EQ '').ZPLV2E                      00347400
                AIF   (&XPLISTVER GE 5).ZPLV2E                          00347500
&XPLISTVER      SETA  5                                                 00347600
.ZPLV2E         ANOP  ,                                                 00347700
.*                                                                      00347800
                AIF   ('&STREAMID' EQ '').ZPLV3E                        00347900
                AIF   (&XPLISTVER GE 5).ZPLV3E                          00348000
&XPLISTVER      SETA  5                                                 00348100
.ZPLV3E         ANOP  ,                                                 00348200
.*                                                                      00348300
                AIF   ('&GETRESPONSE' EQ '').ZPLV4E                     00348400
                AIF   (&XPLISTVER GE 5).ZPLV4E                          00348500
&XPLISTVER      SETA  5                                                 00348600
.ZPLV4E         ANOP  ,                                                 00348700
.*                                                                      00348800
                AIF   ('&TIMEOUT' EQ '').ZPLV5E                         00348900
                AIF   (&XPLISTVER GE 5).ZPLV5E                          00349000
&XPLISTVER      SETA  5                                                 00349100
.ZPLV5E         ANOP  ,                                                 00349200
.*                                                                      00349300
                AIF   ('&TIMEOUT' EQ '').ZPLV6E                         00349400
                AIF   (&XPLISTVER GE 5).ZPLV6E                          00349500
&XPLISTVER      SETA  5                                                 00349600
.ZPLV6E         ANOP  ,                                                 00349700
.*                                                                      00349800
                AIF   ('&MEMBERS' EQ '').ZPLV7E                         00349900
                AIF   (&XPLISTVER GE 5).ZPLV7E                          00350000
&XPLISTVER      SETA  5                                                 00350100
.ZPLV7E         ANOP  ,                                                 00350200
.*                                                                      00350300
                AIF   ('&TARGETS' EQ '').ZPLV8E                         00350400
                AIF   (&XPLISTVER GE 5).ZPLV8E                          00350500
&XPLISTVER      SETA  5                                                 00350600
.ZPLV8E         ANOP  ,                                                 00350700
.*                                                                      00350800
                AIF   ('&#TARGETS' EQ '').ZPLV9E                        00350900
                AIF   (&XPLISTVER GE 5).ZPLV9E                          00351000
&XPLISTVER      SETA  5                                                 00351100
.ZPLV9E         ANOP  ,                                                 00351200
.*                                                                      00351300
                AIF   ('&NEXTTARGETOFF' EQ '').ZPLV10E                  00351400
                AIF   (&XPLISTVER GE 5).ZPLV10E                         00351500
&XPLISTVER      SETA  5                                                 00351600
.ZPLV10E        ANOP  ,                                                 00351700
.*                                                                      00351800
                AIF   ('&FILTERGROUP' EQ '').ZPLV11E                    00351900
                AIF   (&XPLISTVER GE 5).ZPLV11E                         00352000
&XPLISTVER      SETA  5                                                 00352100
.ZPLV11E        ANOP  ,                                                 00352200
.*                                                                      00352300
                AIF   ('&DELIVERMSG' EQ '').ZPLV12E                     00352400
                AIF   (&XPLISTVER GE 5).ZPLV12E                         00352500
&XPLISTVER      SETA  5                                                 00352600
.ZPLV12E        ANOP  ,                                                 00352700
.*                                                                      00352800
                AIF   ('&STREAMID' EQ '').ZPLV13E                       00352900
                AIF   (&XPLISTVER GE 5).ZPLV13E                         00353000
&XPLISTVER      SETA  5                                                 00353100
.ZPLV13E        ANOP  ,                                                 00353200
.*                                                                      00353300
                AIF   ('&GETRESPONSE' EQ '').ZPLV14E                    00353400
                AIF   (&XPLISTVER GE 5).ZPLV14E                         00353500
&XPLISTVER      SETA  5                                                 00353600
.ZPLV14E        ANOP  ,                                                 00353700
.*                                                                      00353800
                AIF   ('&TIMEOUT' EQ '').ZPLV15E                        00353900
                AIF   (&XPLISTVER GE 5).ZPLV15E                         00354000
&XPLISTVER      SETA  5                                                 00354100
.ZPLV15E        ANOP  ,                                                 00354200
.*                                                                      00354300
                AIF   ('&TIMEOUT' EQ '').ZPLV16E                        00354400
                AIF   (&XPLISTVER GE 5).ZPLV16E                         00354500
&XPLISTVER      SETA  5                                                 00354600
.ZPLV16E        ANOP  ,                                                 00354700
.*                                                                      00354800
                AIF   ('&RESPONSEID' EQ '').ZPLV17E                     00354900
                AIF   (&XPLISTVER GE 5).ZPLV17E                         00355000
&XPLISTVER      SETA  5                                                 00355100
.ZPLV17E        ANOP  ,                                                 00355200
.*                                                                      00355300
                AIF   ('&TIMEOUT' EQ '').ZPLV18E                        00355400
                AIF   (&XPLISTVER GE 5).ZPLV18E                         00355500
&XPLISTVER      SETA  5                                                 00355600
.ZPLV18E        ANOP  ,                                                 00355700
.*                                                                      00355800
                AIF   ('&MULTIPART' EQ '').ZPLV19E                      00355900
                AIF   (&XPLISTVER GE 6).ZPLV19E                         00356000
&XPLISTVER      SETA  6                                                 00356100
.ZPLV19E        ANOP  ,                                                 00356200
.*                                                                      00356300
                AIF   ('&#MSGPARTS' EQ '').ZPLV20E                      00356400
                AIF   (&XPLISTVER GE 6).ZPLV20E                         00356500
&XPLISTVER      SETA  6                                                 00356600
.ZPLV20E        ANOP  ,                                                 00356700
.*                                                                      00356800
                AIF   ('&ELEMENT' EQ '').ZPLV21E                        00356900
                AIF   (&XPLISTVER GE 6).ZPLV21E                         00357000
&XPLISTVER      SETA  6                                                 00357100
.ZPLV21E        ANOP  ,                                                 00357200
.*                                                                      00357300
                AIF   ('&ELEMADDRMODE' EQ '').ZPLV22E                   00357400
                AIF   (&XPLISTVER GE 6).ZPLV22E                         00357500
&XPLISTVER      SETA  6                                                 00357600
.ZPLV22E        ANOP  ,                                                 00357700
.*                                                                      00357800
                AIF   ('&ELEMFORM' EQ '').ZPLV23E                       00357900
                AIF   (&XPLISTVER GE 6).ZPLV23E                         00358000
&XPLISTVER      SETA  6                                                 00358100
.ZPLV23E        ANOP  ,                                                 00358200
.*                                                                      00358300
                AIF   ('&NEXTOFF' EQ '').ZPLV24E                        00358400
                AIF   (&XPLISTVER GE 6).ZPLV24E                         00358500
&XPLISTVER      SETA  6                                                 00358600
.ZPLV24E        ANOP  ,                                                 00358700
.*                                                                      00358800
                AIF   ('&NEXTPTROFF' EQ '').ZPLV25E                     00358900
                AIF   (&XPLISTVER GE 6).ZPLV25E                         00359000
&XPLISTVER      SETA  6                                                 00359100
.ZPLV25E        ANOP  ,                                                 00359200
.*                                                                      00359300
                AIF   ('&ENDOFQUEUE' EQ '').ZPLV26E                     00359400
                AIF   (&XPLISTVER GE 6).ZPLV26E                         00359500
&XPLISTVER      SETA  6                                                 00359600
.ZPLV26E        ANOP  ,                                                 00359700
.*                                                                      00359800
                AIF   ('&PARTOFF' EQ '').ZPLV27E                        00359900
                AIF   (&XPLISTVER GE 6).ZPLV27E                         00360000
&XPLISTVER      SETA  6                                                 00360100
.ZPLV27E        ANOP  ,                                                 00360200
.*                                                                      00360300
                AIF   ('&PARTPTROFF' EQ '').ZPLV28E                     00360400
                AIF   (&XPLISTVER GE 6).ZPLV28E                         00360500
&XPLISTVER      SETA  6                                                 00360600
.ZPLV28E        ANOP  ,                                                 00360700
.*                                                                      00360800
                AIF   ('&PARTALET' EQ '').ZPLV29E                       00360900
                AIF   (&XPLISTVER GE 6).ZPLV29E                         00361000
&XPLISTVER      SETA  6                                                 00361100
.ZPLV29E        ANOP  ,                                                 00361200
.*                                                                      00361300
                AIF   ('&PARTALETOFF' EQ '').ZPLV30E                    00361400
                AIF   (&XPLISTVER GE 6).ZPLV30E                         00361500
&XPLISTVER      SETA  6                                                 00361600
.ZPLV30E        ANOP  ,                                                 00361700
.*                                                                      00361800
                AIF   ('&PARTALETTBL' EQ '').ZPLV31E                    00361900
                AIF   (&XPLISTVER GE 6).ZPLV31E                         00362000
&XPLISTVER      SETA  6                                                 00362100
.ZPLV31E        ANOP  ,                                                 00362200
.*                                                                      00362300
                AIF   ('&PARTLEN' EQ '').ZPLV32E                        00362400
                AIF   (&XPLISTVER GE 6).ZPLV32E                         00362500
&XPLISTVER      SETA  6                                                 00362600
.ZPLV32E        ANOP  ,                                                 00362700
.*                                                                      00362800
                AIF   ('&PARTLENOFF' EQ '').ZPLV33E                     00362900
                AIF   (&XPLISTVER GE 6).ZPLV33E                         00363000
&XPLISTVER      SETA  6                                                 00363100
.ZPLV33E        ANOP  ,                                                 00363200
.*                                                                      00363300
                AIF   ('&PARTLENTBL' EQ '').ZPLV34E                     00363400
                AIF   (&XPLISTVER GE 6).ZPLV34E                         00363500
&XPLISTVER      SETA  6                                                 00363600
.ZPLV34E        ANOP  ,                                                 00363700
.*                                                                      00363800
                AIF   ('&MSGACCESS' EQ '').ZPLV35E                      00363900
                AIF   (&XPLISTVER GE 5).ZPLV35E                         00364000
&XPLISTVER      SETA  5                                                 00364100
.ZPLV35E        ANOP  ,                                                 00364200
.*                                                                      00364300
                AIF   ('&SENDTIME' EQ '').ZPLV36E                       00364400
                AIF   (&XPLISTVER GE 6).ZPLV36E                         00364500
&XPLISTVER      SETA  6                                                 00364600
.ZPLV36E        ANOP  ,                                                 00364700
.*                                                                      00364800
                AIF   ('&NOTIFY' EQ '').ZPLV37E                         00364900
                AIF   (&XPLISTVER GE 5).ZPLV37E                         00365000
&XPLISTVER      SETA  5                                                 00365100
.ZPLV37E        ANOP  ,                                                 00365200
.*                                                                      00365300
                AIF   ('&USERDATA' EQ '').ZPLV38E                       00365400
                AIF   (&XPLISTVER GE 5).ZPLV38E                         00365500
&XPLISTVER      SETA  5                                                 00365600
.ZPLV38E        ANOP  ,                                                 00365700
.*                                                                      00365800
                AIF   ('&NOTIFYIF' EQ '').ZPLV39E                       00365900
                AIF   (&XPLISTVER GE 5).ZPLV39E                         00366000
&XPLISTVER      SETA  5                                                 00366100
.ZPLV39E        ANOP  ,                                                 00366200
.*                                                                      00366300
                AIF   ('&NOTIFYBY' EQ '').ZPLV40E                       00366400
                AIF   (&XPLISTVER GE 5).ZPLV40E                         00366500
&XPLISTVER      SETA  5                                                 00366600
.ZPLV40E        ANOP  ,                                                 00366700
.*                                                                      00366800
                AIF   ('&NOTIFYEXIT' EQ '').ZPLV41E                     00366900
                AIF   (&XPLISTVER GE 5).ZPLV41E                         00367000
&XPLISTVER      SETA  5                                                 00367100
.ZPLV41E        ANOP  ,                                                 00367200
.*                                                                      00367300
                AIF   ('&RETMSGOTOKEN' EQ '').ZPLV42E                   00367400
                AIF   (&XPLISTVER GE 5).ZPLV42E                         00367500
&XPLISTVER      SETA  5                                                 00367600
.ZPLV42E        ANOP  ,                                                 00367700
.*                                                                      00367800
                AIF   ('&ATTRIBUTES' EQ '').ZPLV43E                     00367900
                AIF   (&XPLISTVER GE 5).ZPLV43E                         00368000
&XPLISTVER      SETA  5                                                 00368100
.ZPLV43E        ANOP  ,                                                 00368200
.*                                                                      00368300
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00368400
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00368500
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00368600
.*-------------------------------------------------------------------   00368700
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00368800
&ZMS            SETC  '"PLISTVER='                                      00368900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00369000
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00369100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00369200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00369300
                AGO   .ZPVCK2                                           00369400
.ZPVCK3         ANOP  ,                                                 00369500
.*-------------------------------------------------------------------   00369600
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00369700
&ZMS            SETC  '"PLISTVER='                                      00369800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00369900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00370000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00370100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00370200
                AGO   .ZPVCKE                                           00370300
.ZPVCK2         ANOP  ,                                                 00370400
.*-------------------------------------------------------------------   00370500
&ZCVAL          SETC  '&PLISTVER(1)'                                    00370600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00370700
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00370800
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00370900
                AIF   (&ZN LT 4).ZPVCK6    TOO LOW                      00371000
                AIF   (&ZN LE 6).ZPVCK4A   NOT HIGH                     00371100
.ZPVCK6         ANOP  ,                                                 00371200
&ZMS            SETC  '"PLISTVER='                                      00371300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00371400
&ZMS            SETC  '&ZMS THE RANGE IS "4-6"'                         00371500
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00371600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00371700
&XPLISTVER      SETA  6                                                 00371800
                AGO   .ZPVCKE                                           00371900
.*-------------------------------------------------------------------   00372000
.ZPVCK4A        ANOP  ,                                                 00372100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00372200
&ZMS            SETC  'PLISTVER='                                       00372300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00372400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00372500
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00372600
                MNOTE 8,' &ZMS IS REQUIRED.'                            00372700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00372800
                AGO   .ZPVCK5                                           00372900
.ZPVCK4         ANOP  ,                                                 00373000
&XPLISTVER      SETA  &PLISTVER(1)                                      00373100
.ZPVCK5         ANOP  ,                                                 00373200
.ZPVCKE         ANOP  ,                                                 00373300
.********************************************************************   00373400
.***AG.MF01 PROCESS MF MACRO FORMS                                      00373500
.********************************************************************   00373600
                   ACTR  10000                                          00373700
.*------------------------------------------------------------------    00373800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00373900
&XMF               SETC  ''          INITIALIZE XVARIABLE               00374000
.*-------------------------------------------------------------------   00374100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00374200
.ZG186             ANOP  ,                                              00374300
&ZTLC              SETC 'S'                                             00374400
                   AIF   ('&MF(1)' NE '&ZTLC').ZG187                    00374500
&XMF               SETC  'S'         SET KEYWORD                        00374600
                   AIF   (N'&MF LE 1).ZG186A    CK NUM                  00374700
&ZMS               SETC  '"MF='                                         00374800
&ZMS               SETC  '&ZMS.&MF"'                                    00374900
&ZMS               SETC  '&ZMS "MF"'                                    00375000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00375100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00375200
.ZG186A            ANOP  ,                                              00375300
.*-------------------------------------------------------------------   00375400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00375500
.ZG187             ANOP  ,                                              00375600
&ZTLC              SETC 'L'                                             00375700
                   AIF   ('&MF(1)' NE '&ZTLC').ZG194                    00375800
&XMF               SETC  'L'         SET KEYWORD                        00375900
                   AIF   (N'&MF LE 3).ZG187A    CK NUM                  00376000
&ZMS               SETC  '"MF='                                         00376100
&ZMS               SETC  '&ZMS.&MF"'                                    00376200
&ZMS               SETC  '&ZMS "MF"'                                    00376300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00376400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00376500
.ZG187A            ANOP  ,                                              00376600
.*-------------------------------------------------------------------   00376700
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00376800
                   AIF   (N'&SYSLIST NE 0).ZG187B  POSITIONALS?         00376900
                   AIF   ('&MEMTOKEN' NE '').ZG187B  KEYS?              00377000
                   AIF   ('&SENDTO' NE '').ZG187B  KEYS?                00377100
                   AIF   ('&TARGET' NE '').ZG187B  KEYS?                00377200
                   AIF   ('&DELIVERMSG' NE '').ZG187B  KEYS?            00377300
                   AIF   ('&STREAMID' NE '').ZG187B  KEYS?              00377400
                   AIF   ('&GETRESPONSE' NE '').ZG187B  KEYS?           00377500
                   AIF   ('&TIMEOUT' NE '').ZG187B  KEYS?               00377600
                   AIF   ('&MEMBERS' NE '').ZG187B  KEYS?               00377700
                   AIF   ('&TARGETS' NE '').ZG187B  KEYS?               00377800
                   AIF   ('&#TARGETS' NE '').ZG187B  KEYS?              00377900
                   AIF   ('&NEXTTARGETOFF' NE '').ZG187B  KEYS?         00378000
                   AIF   ('&FILTERGROUP' NE '').ZG187B  KEYS?           00378100
                   AIF   ('&RESPONSEID' NE '').ZG187B  KEYS?            00378200
                   AIF   ('&MULTIPART' NE '').ZG187B  KEYS?             00378300
                   AIF   ('&MSGCNTL' NE '').ZG187B  KEYS?               00378400
                   AIF   ('&MSGBUF' NE '').ZG187B  KEYS?                00378500
                   AIF   ('&MSGLEN' NE '').ZG187B  KEYS?                00378600
                   AIF   ('&#MSGPARTS' NE '').ZG187B  KEYS?             00378700
                   AIF   ('&ELEMENT' NE '').ZG187B  KEYS?               00378800
                   AIF   ('&ELEMADDRMODE' NE '').ZG187B  KEYS?          00378900
                   AIF   ('&ELEMFORM' NE '').ZG187B  KEYS?              00379000
                   AIF   ('&NEXTOFF' NE '').ZG187B  KEYS?               00379100
                   AIF   ('&NEXTPTROFF' NE '').ZG187B  KEYS?            00379200
                   AIF   ('&ENDOFQUEUE' NE '').ZG187B  KEYS?            00379300
                   AIF   ('&PARTOFF' NE '').ZG187B  KEYS?               00379400
                   AIF   ('&PARTPTROFF' NE '').ZG187B  KEYS?            00379500
                   AIF   ('&PARTALET' NE '').ZG187B  KEYS?              00379600
                   AIF   ('&PARTALETOFF' NE '').ZG187B  KEYS?           00379700
                   AIF   ('&PARTALETTBL' NE '').ZG187B  KEYS?           00379800
                   AIF   ('&PARTLEN' NE '').ZG187B  KEYS?               00379900
                   AIF   ('&PARTLENOFF' NE '').ZG187B  KEYS?            00380000
                   AIF   ('&PARTLENTBL' NE '').ZG187B  KEYS?            00380100
                   AIF   ('&MSGSTGKEY' NE '').ZG187B  KEYS?             00380200
                   AIF   ('&MSGACCESS' NE '').ZG187B  KEYS?             00380300
                   AIF   ('&SENDTIME' NE '').ZG187B  KEYS?              00380400
                   AIF   ('&NOTIFY' NE '').ZG187B  KEYS?                00380500
                   AIF   ('&USERDATA' NE '').ZG187B  KEYS?              00380600
                   AIF   ('&NOTIFYIF' NE '').ZG187B  KEYS?              00380700
                   AIF   ('&NOTIFYBY' NE '').ZG187B  KEYS?              00380800
                   AIF   ('&NOTIFYEXIT' NE '').ZG187B  KEYS?            00380900
                   AIF   ('&RETMSGOTOKEN' NE '').ZG187B  KEYS?          00381000
                   AIF   ('&ATTRIBUTES' NE '').ZG187B  KEYS?            00381100
                   AIF   ('&RETCODE' NE '').ZG187B  KEYS?               00381200
                   AIF   ('&RSNCODE' NE '').ZG187B  KEYS?               00381300
                   AGO    .ZG187C    INVOCATION OKAY                    00381400
.ZG187B            ANOP  ,                                              00381500
&ZMS               SETC  'THE "L" FORM OF "MF"'                         00381600
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00381700
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00381800
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00381900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00382000
.ZG187C            ANOP  ,                                              00382100
.*-------------------------------------------------------------------   00382200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00382300
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00382400
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00382500
                   AIF   (N'&MF(2) GT 1).ZG189B  MULTI                  00382600
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00382700
.ZG189B            AIF   (K'&MF(2) GT 0).ZG189C                         00382800
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00382900
&ZMS               SETC  'WHEN "L" IS SPECIFIED'                        00383000
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00383100
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00383200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00383300
.ZG189C            ANOP  ,                                              00383400
.*-------------------------------------------------------------------   00383500
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00383600
                   AIF   (K'&ZXMFCTRL LE 0).ZG189P  NOT I/O             00383700
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG189P                00383800
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00383900
&ZMS               SETC  '"MF='                                         00384000
&ZMS               SETC  '&ZMS.&MF"'                                    00384100
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00384200
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00384300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00384400
.ZG189P            ANOP  ,                                              00384500
.*-------------------------------------------------------------------   00384600
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00384700
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00384800
&XMFATTR           SETC  '0D'                                           00384900
                   AIF   (K'&MF(3) LE 0).ZG192B  PARM                   00385000
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00385100
                   AIF   (N'&MF(3) GT 1).ZG192B  MULTI                  00385200
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00385300
.ZG192B            ANOP  ,                                              00385400
.*-------------------------------------------------------------------   00385500
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00385600
                   AIF   (K'&ZXMFATTR LE 0).ZG192P  NOT I/O             00385700
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG192P                00385800
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00385900
&ZMS               SETC  '"MF='                                         00386000
&ZMS               SETC  '&ZMS.&MF"'                                    00386100
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00386200
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00386300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00386400
.ZG192P            ANOP  ,                                              00386500
.*-------------------------------------------------------------------   00386600
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00386700
                   AIF   (K'&ZXMFATTR LE 0).ZG192S  NOT I/O             00386800
                   AIF   (K'&XMFATTR LE 60).ZG192S  LNG OK              00386900
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00387000
&ZMS               SETC  '"MF='                                         00387100
&ZMS               SETC  '&ZMS.&MF"'                                    00387200
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00387300
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00387400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00387500
.ZG192S            ANOP  ,                                              00387600
.*-------------------------------------------------------------------   00387700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00387800
.ZG194             ANOP  ,                                              00387900
&ZTLC              SETC 'E'                                             00388000
                   AIF   ('&MF(1)' NE '&ZTLC').ZG202                    00388100
&XMF               SETC  'E'         SET KEYWORD                        00388200
                   AIF   (N'&MF LE 3).ZG194A    CK NUM                  00388300
&ZMS               SETC  '"MF='                                         00388400
&ZMS               SETC  '&ZMS.&MF"'                                    00388500
&ZMS               SETC  '&ZMS "MF"'                                    00388600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00388700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00388800
.ZG194A            ANOP  ,                                              00388900
.*-------------------------------------------------------------------   00389000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00389100
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00389200
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00389300
                   AIF   (N'&MF(2) GT 1).ZG196B  MULTI                  00389400
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00389500
.ZG196B            AIF   (K'&MF(2) GT 0).ZG196C                         00389600
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00389700
&ZMS               SETC  'WHEN "E" IS SPECIFIED'                        00389800
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00389900
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00390000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00390100
.ZG196C            ANOP  ,                                              00390200
.*-------------------------------------------------------------------   00390300
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00390400
                   AIF   (K'&ZXMFCTRL LE 0).ZG196R  NOT I/O             00390500
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG196R                00390600
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00390700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG196P                  00390800
                   AIF   (K'&ZCGPR GT 2).ZG196Q                         00390900
                   AIF   ('&ZCGPR' EQ '0').ZG196Q                       00391000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00391100
                   AIF   (T'&ZCGPR NE 'N').ZG196Q  INVALID REG NAME     00391200
.ZG196P            ANOP  ,                                              00391300
                   AIF   (T'&ZCGPR NE 'N').ZG196R  NON NUMERIC          00391400
                   AIF   ('&ZCGPR' LT '1').ZG196Q                       00391500
                   AIF   ('&ZCGPR' LE '12').ZG196R                      00391600
.ZG196Q            ANOP  ,                                              00391700
&ZMS               SETC  '"MF='                                         00391800
&ZMS               SETC  '&ZMS.&MF"'                                    00391900
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00392000
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00392100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00392200
.ZG196R            ANOP  ,                                              00392300
.*-------------------------------------------------------------------   00392400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00392500
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00392600
.ZG200A   AIF   ('&MF(3)' NE 'COMPLETE').ZG201A                         00392700
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00392800
.*-------------------------------------------------------------------   00392900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00393000
.ZG201A            AIF   (K'&XMFSCK GT 0).ZG201C  KEYWORD               00393100
                   AIF   (K'&MF(3) LE 0).ZG201B                         00393200
&ZMS               SETC  '"MF='                                         00393300
&ZMS               SETC  '&ZMS.&MF"'                                    00393400
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00393500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00393600
&ZMS               SETC  '&ZMS "COMPLETE".'                             00393700
                   MNOTE 8,' &ZMS '                                     00393800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00393900
.ZG201B            ANOP  ,                                              00394000
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00394100
.ZG201C            ANOP  ,                                              00394200
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00394300
.*------------------------------------------------------------------    00394400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00394500
.ZG202             ANOP  ,                                              00394600
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00394700
                   AIF   (K'&XMF GT 0).ZG202E   VALID ARG               00394800
                   AIF   (T'&MF EQ 'O').ZG202D  OMITTED                 00394900
&ZASYSLNDX         SETA  0                                              00395000
.ZG202A            ANOP  ,           POSITIONAL MACRO KEY               00395100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00395200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG202C              00395300
&ZTLC              SETC 'MF'                                            00395400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG202A     00395500
.ZG202B            ANOP  ,                                              00395600
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00395700
&ZMS               SETC  'THE "MF" KEY'                                 00395800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00395900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00396000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00396100
                   AGO   .ZG202E                                        00396200
.ZG202C            ANOP  ,                                              00396300
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00396400
&ZMS               SETC  '"MF='                                         00396500
&ZMS               SETC  '&ZMS.&MF"'                                    00396600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00396700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00396800
&ZMS               SETC  '&ZMS "S",'                                    00396900
&ZMS               SETC  '&ZMS "L",'                                    00397000
&ZMS               SETC  '&ZMS OR "E".'                                 00397100
                   MNOTE 8,' &ZMS '                                     00397200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00397300
                   AGO   .ZG202E                                        00397400
.ZG202D            ANOP  ,                                              00397500
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00397600
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00397700
.ZG202E            ANOP  ,                                              00397800
.********************************************************************   00397900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00398000
.********************************************************************   00398100
                   ACTR  10000                                          00398200
.*-------------------------------------------------------------------   00398300
.***AG.MF03 MF=(SLE)                                                    00398400
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00398500
.*----------------------------------------------------------------***   00398600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00398700
                   AIF   (N'&MEMTOKEN LE 1).ZG2A  CK NUM                00398800
&ZMS               SETC  '"MEMTOKEN='                                   00398900
&ZMS               SETC  '&ZMS.&MEMTOKEN"'                              00399000
&ZMS               SETC  '&ZMS "MEMTOKEN"'                              00399100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00399200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00399300
.ZG2A              ANOP  ,                                              00399400
.*-------------------------------------------------------------------   00399500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00399600
&ZXMEMTOKEN        SETC  'INPUT'     SET IN/OUTPUT                      00399700
&XMEMTOKEN         SETC  '&MEMTOKEN(1)'         SET XVARIABLE           00399800
                   AIF   (N'&MEMTOKEN GT 1).ZG2B  MULTI                 00399900
&XMEMTOKEN         SETC  '&MEMTOKEN'            SET XVARIABLE           00400000
.ZG2B              AIF   (K'&MEMTOKEN(1) GT 0).ZG2C                     00400100
&ZXMEMTOKEN        SETC  ''          RESET IN/OUTPUT                    00400200
&ZMS               SETC  ' '                                            00400300
&ZMS               SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                  00400400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00400500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00400600
.ZG2C              ANOP  ,                                              00400700
.*-------------------------------------------------------------------   00400800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00400900
                   AIF   (K'&ZXMEMTOKEN LE 0).ZG2R  NOT I/O             00401000
                   AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG2R                00401100
&ZCGPR             SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                 00401200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    00401300
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           00401400
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         00401500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00401600
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       00401700
.ZG2P              ANOP  ,                                              00401800
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            00401900
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         00402000
                   AIF   ('&ZCGPR' LE '12').ZG2R                        00402100
.ZG2Q              ANOP  ,                                              00402200
&ZMS               SETC  '"MEMTOKEN='                                   00402300
&ZMS               SETC  '&ZMS.&MEMTOKEN"'                              00402400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00402500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00402600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00402700
.ZG2R              ANOP  ,                                              00402800
.*------------------------------------------------------------------    00402900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00403000
&XSENDTO           SETC  ''          INITIALIZE XVARIABLE               00403100
.*-------------------------------------------------------------------   00403200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00403300
.ZG6               ANOP  ,                                              00403400
                   AIF   (K'&SENDTO(1) LE 0).ZG6A                       00403500
&ZTLC              SETC 'MEMBER'                                        00403600
                   AIF   ('&SENDTO(1)' NE '&ZTLC').ZG30                 00403700
&XSENDTO           SETC  'MEMBER'    SET KEYWORD                        00403800
                   AIF   (N'&SENDTO LE 1).ZG6A  CK NUM                  00403900
&ZMS               SETC  '"SENDTO='                                     00404000
&ZMS               SETC  '&ZMS.&SENDTO"'                                00404100
&ZMS               SETC  '&ZMS "SENDTO"'                                00404200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00404300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00404400
.ZG6A              ANOP  ,                                              00404500
.*------------------------------------------------------------------    00404600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00404700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00404800
.ZG6A0             AIF   (K'&MEMBERS LE 0).ZG6A1  OK                    00404900
&ZCVAL             SETC '&ZCVAL MEMBERS'        INCORRECT KEY USED      00405000
.ZG6A1             AIF   (K'&TARGETS LE 0).ZG6A2  OK                    00405100
&ZCVAL             SETC '&ZCVAL TARGETS'        INCORRECT KEY USED      00405200
.ZG6A2             AIF   (K'&#TARGETS LE 0).ZG6A3  OK                   00405300
&ZCVAL             SETC '&ZCVAL #TARGETS'       INCORRECT KEY USED      00405400
.ZG6A3             AIF   (K'&NEXTTARGETOFF LE 0).ZG6A4  OK              00405500
&ZCVAL             SETC '&ZCVAL NEXTTARGETOFF'  INCORRECT KEY USED      00405600
.ZG6A4             AIF   (K'&FILTERGROUP LE 0).ZG6A5  OK                00405700
&ZCVAL             SETC '&ZCVAL FILTERGROUP'    INCORRECT KEY USED      00405800
.ZG6A5             AIF   (K'&RESPONSEID LE 0).ZG6A6  OK                 00405900
&ZCVAL             SETC '&ZCVAL RESPONSEID'     INCORRECT KEY USED      00406000
.ZG6A6             AIF   (K'&ZCVAL LE 0).ZG6A7  OK                      00406100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00406200
&ZMS               SETC  '"SENDTO'                                      00406300
&ZMS               SETC  '&ZMS.=&SENDTO"'                               00406400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00406500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00406600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00406700
.ZG6A7             ANOP  ,                                              00406800
.*----------------------------------------------------------------***   00406900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00407000
                   AIF   (N'&TARGET LE 1).ZG8A  CK NUM                  00407100
&ZMS               SETC  '"TARGET='                                     00407200
&ZMS               SETC  '&ZMS.&TARGET"'                                00407300
&ZMS               SETC  '&ZMS "TARGET"'                                00407400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00407500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00407600
.ZG8A              ANOP  ,                                              00407700
.*-------------------------------------------------------------------   00407800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00407900
&ZXTARGET          SETC  'INPUT'     SET IN/OUTPUT                      00408000
&XTARGET           SETC  '&TARGET(1)'           SET XVARIABLE           00408100
                   AIF   (N'&TARGET GT 1).ZG8B  MULTI                   00408200
&XTARGET           SETC  '&TARGET'   SET XVARIABLE                      00408300
.ZG8B              AIF   (K'&TARGET(1) GT 0).ZG8C                       00408400
&ZXTARGET          SETC  ''          RESET IN/OUTPUT                    00408500
&ZMS               SETC  ' '                                            00408600
&ZMS               SETC  '&ZMS "TARGET" KEY AND ITS'                    00408700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00408800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00408900
.ZG8C              ANOP  ,                                              00409000
.*-------------------------------------------------------------------   00409100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00409200
                   AIF   (K'&ZXTARGET LE 0).ZG8R  NOT I/O               00409300
                   AIF   ('&XTARGET'(1,1) NE '(').ZG8R                  00409400
&ZCGPR             SETC  '&XTARGET'(2,K'&XTARGET-2)                     00409500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                    00409600
                   AIF   (K'&ZCGPR GT 2).ZG8Q                           00409700
                   AIF   ('&ZCGPR' EQ '0').ZG8Q                         00409800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00409900
                   AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME       00410000
.ZG8P              ANOP  ,                                              00410100
                   AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC            00410200
                   AIF   ('&ZCGPR' LT '2').ZG8Q                         00410300
                   AIF   ('&ZCGPR' LE '12').ZG8R                        00410400
.ZG8Q              ANOP  ,                                              00410500
&ZMS               SETC  '"TARGET='                                     00410600
&ZMS               SETC  '&ZMS.&TARGET"'                                00410700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00410800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00410900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00411000
.ZG8R              ANOP  ,                                              00411100
.*------------------------------------------------------------------    00411200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00411300
&XDELIVERMSG       SETC  ''          INITIALIZE XVARIABLE               00411400
.*-------------------------------------------------------------------   00411500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00411600
.ZG12              ANOP  ,                                              00411700
                   AIF   (K'&DELIVERMSG(1) LE 0).ZG12A                  00411800
&ZTLC              SETC 'UNORDERED'                                     00411900
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG13             00412000
&XDELIVERMSG       SETC  'UNORDERED'            SET KEYWORD             00412100
                   AIF   (N'&DELIVERMSG LE 1).ZG12A  CK NUM             00412200
&ZMS               SETC  '"DELIVERMSG='                                 00412300
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00412400
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00412500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00412600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00412700
.ZG12A             ANOP  ,                                              00412800
.*------------------------------------------------------------------    00412900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00413000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00413100
.ZG12A0            AIF   (K'&STREAMID LE 0).ZG12A1  OK                  00413200
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00413300
.ZG12A1            AIF   (K'&ZCVAL LE 0).ZG12A2  OK                     00413400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00413500
&ZMS               SETC  '"DELIVERMSG'                                  00413600
&ZMS               SETC  '&ZMS.=&DELIVERMSG"'                           00413700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00413800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00413900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00414000
.ZG12A2            ANOP  ,                                              00414100
.*-------------------------------------------------------------------   00414200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00414300
.ZG13              ANOP  ,                                              00414400
&ZTLC              SETC 'ORDERED'                                       00414500
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG17             00414600
&XDELIVERMSG       SETC  'ORDERED'   SET KEYWORD                        00414700
                   AIF   (N'&DELIVERMSG LE 1).ZG13A  CK NUM             00414800
&ZMS               SETC  '"DELIVERMSG='                                 00414900
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00415000
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00415100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00415200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00415300
.ZG13A             ANOP  ,                                              00415400
.*----------------------------------------------------------------***   00415500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00415600
                   AIF   (N'&STREAMID LE 1).ZG15A  CK NUM               00415700
&ZMS               SETC  '"STREAMID='                                   00415800
&ZMS               SETC  '&ZMS.&STREAMID"'                              00415900
&ZMS               SETC  '&ZMS "STREAMID"'                              00416000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00416100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00416200
.ZG15A             ANOP  ,                                              00416300
.*-------------------------------------------------------------------   00416400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00416500
&ZXSTREAMID        SETC  'INPUT'     SET IN/OUTPUT                      00416600
&XSTREAMID         SETC  '1'                                            00416700
                   AIF   (K'&STREAMID(1) LE 0).ZG15B  PARM              00416800
&XSTREAMID         SETC  '&STREAMID(1)'         SET XVARIABLE           00416900
                   AIF   (N'&STREAMID GT 1).ZG15B  MULTI                00417000
&XSTREAMID         SETC  '&STREAMID'            SET XVARIABLE           00417100
.ZG15B             ANOP  ,                                              00417200
.*-------------------------------------------------------------------   00417300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00417400
                   AIF   (K'&ZXSTREAMID LE 0).ZG15R  NOT I/O            00417500
                   AIF   ('&XSTREAMID'(1,1) NE '(').ZG15R               00417600
&ZCGPR             SETC  '&XSTREAMID'(2,K'&XSTREAMID-2)                 00417700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                   00417800
                   AIF   (K'&ZCGPR GT 2).ZG15Q                          00417900
                   AIF   ('&ZCGPR' EQ '0').ZG15Q                        00418000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00418100
                   AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME      00418200
.ZG15P             ANOP  ,                                              00418300
                   AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC           00418400
                   AIF   ('&ZCGPR' LT '2').ZG15Q                        00418500
                   AIF   ('&ZCGPR' LE '12').ZG15R                       00418600
.ZG15Q             ANOP  ,                                              00418700
&ZMS               SETC  '"STREAMID='                                   00418800
&ZMS               SETC  '&ZMS.&STREAMID"'                              00418900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00419000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00419100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00419200
.ZG15R             ANOP  ,                                              00419300
.*-------------------------------------------------------------------   00419400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00419500
.ZG17              ANOP  ,                                              00419600
&ZTLC              SETC 'DUPLICATES'                                    00419700
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG18             00419800
&XDELIVERMSG       SETC  'DUPLICATES'           SET KEYWORD             00419900
                   AIF   (N'&DELIVERMSG LE 1).ZG17A  CK NUM             00420000
&ZMS               SETC  '"DELIVERMSG='                                 00420100
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00420200
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00420300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00420400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00420500
.ZG17A             ANOP  ,                                              00420600
.*------------------------------------------------------------------    00420700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00420800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00420900
.ZG17A0            AIF   (K'&STREAMID LE 0).ZG17A1  OK                  00421000
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00421100
.ZG17A1            AIF   (K'&ZCVAL LE 0).ZG17A2  OK                     00421200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00421300
&ZMS               SETC  '"DELIVERMSG'                                  00421400
&ZMS               SETC  '&ZMS.=&DELIVERMSG"'                           00421500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00421600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00421700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00421800
.ZG17A2            ANOP  ,                                              00421900
.*------------------------------------------------------------------    00422000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00422100
.ZG18              ANOP  ,                                              00422200
&ZXDELIVERMSG      SETC  'INPUT'     SET IN/OUTPUT                      00422300
                   AIF   (K'&XDELIVERMSG GT 0).ZG18E  VALID ARG         00422400
                   AIF   (T'&DELIVERMSG EQ 'O').ZG18D  OMITTED          00422500
&ZASYSLNDX         SETA  0                                              00422600
.ZG18A             ANOP  ,           POSITIONAL MACRO KEY               00422700
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00422800
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG18C               00422900
&ZTLC              SETC 'DELIVERMSG'                                    00423000
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG18A      00423100
.ZG18B             ANOP  ,                                              00423200
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00423300
&ZMS               SETC  'THE "DELIVERMSG" KEY'                         00423400
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00423500
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00423600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00423700
                   AGO   .ZG18E                                         00423800
.ZG18C             ANOP  ,                                              00423900
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00424000
&ZMS               SETC  '"DELIVERMSG='                                 00424100
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00424200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00424300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00424400
&ZMS               SETC  '&ZMS "UNORDERED",'                            00424500
&ZMS               SETC  '&ZMS "ORDERED",'                              00424600
&ZMS               SETC  '&ZMS OR "DUPLICATES".'                        00424700
                   MNOTE 8,' &ZMS '                                     00424800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00424900
                   AGO   .ZG18E                                         00425000
.ZG18D             ANOP  ,                                              00425100
&XDELIVERMSG       SETC  'UNORDERED'            SET DEFAULT KEYWORD     00425200
.ZG18E             ANOP  ,                                              00425300
.*------------------------------------------------------------------    00425400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00425500
&XGETRESPONSE      SETC  ''          INITIALIZE XVARIABLE               00425600
.*-------------------------------------------------------------------   00425700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00425800
.ZG21              ANOP  ,                                              00425900
                   AIF   (K'&GETRESPONSE(1) LE 0).ZG21A                 00426000
&ZTLC              SETC 'NO'                                            00426100
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG25            00426200
&XGETRESPONSE      SETC  'NO'        SET KEYWORD                        00426300
                   AIF   (N'&GETRESPONSE LE 1).ZG21A  CK NUM            00426400
&ZMS               SETC  '"GETRESPONSE='                                00426500
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00426600
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00426700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00426800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00426900
.ZG21A             ANOP  ,                                              00427000
.*----------------------------------------------------------------***   00427100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00427200
                   AIF   (N'&TIMEOUT LE 1).ZG23A  CK NUM                00427300
&ZMS               SETC  '"TIMEOUT='                                    00427400
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00427500
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00427600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00427700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00427800
.ZG23A             ANOP  ,                                              00427900
.*-------------------------------------------------------------------   00428000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00428100
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00428200
&XTIMEOUT          SETC  'ZERO'                                         00428300
                   AIF   (K'&TIMEOUT(1) LE 0).ZG23B  PARM               00428400
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00428500
                   AIF   (N'&TIMEOUT GT 1).ZG23B  MULTI                 00428600
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00428700
.ZG23B             ANOP  ,                                              00428800
.*-------------------------------------------------------------------   00428900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00429000
                   AIF   (K'&ZXTIMEOUT LE 0).ZG23R  NOT I/O             00429100
         AIF   ('&XTIMEOUT' EQ 'ZERO').ZG23R                            00429200
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG23R                00429300
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00429400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                   00429500
                   AIF   (K'&ZCGPR GT 2).ZG23Q                          00429600
                   AIF   ('&ZCGPR' EQ '0').ZG23Q                        00429700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00429800
                   AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME      00429900
.ZG23P             ANOP  ,                                              00430000
                   AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC           00430100
                   AIF   ('&ZCGPR' LT '2').ZG23Q                        00430200
                   AIF   ('&ZCGPR' LE '12').ZG23R                       00430300
.ZG23Q             ANOP  ,                                              00430400
&ZMS               SETC  '"TIMEOUT='                                    00430500
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00430600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00430700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00430800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00430900
.ZG23R             ANOP  ,                                              00431000
.*-------------------------------------------------------------------   00431100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00431200
.ZG25              ANOP  ,                                              00431300
&ZTLC              SETC 'YES'                                           00431400
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG29            00431500
&XGETRESPONSE      SETC  'YES'       SET KEYWORD                        00431600
                   AIF   (N'&GETRESPONSE LE 1).ZG25A  CK NUM            00431700
&ZMS               SETC  '"GETRESPONSE='                                00431800
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00431900
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00432000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00432100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00432200
.ZG25A             ANOP  ,                                              00432300
.*----------------------------------------------------------------***   00432400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00432500
                   AIF   (N'&TIMEOUT LE 1).ZG27A  CK NUM                00432600
&ZMS               SETC  '"TIMEOUT='                                    00432700
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00432800
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00432900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00433000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00433100
.ZG27A             ANOP  ,                                              00433200
.*-------------------------------------------------------------------   00433300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00433400
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00433500
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00433600
                   AIF   (N'&TIMEOUT GT 1).ZG27B  MULTI                 00433700
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00433800
.ZG27B             AIF   (K'&TIMEOUT(1) GT 0).ZG27C                     00433900
&ZXTIMEOUT         SETC  ''          RESET IN/OUTPUT                    00434000
&ZMS               SETC  ' '                                            00434100
&ZMS               SETC  '&ZMS "TIMEOUT" KEY AND ITS'                   00434200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00434300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00434400
.ZG27C             ANOP  ,                                              00434500
.*-------------------------------------------------------------------   00434600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00434700
                   AIF   (K'&ZXTIMEOUT LE 0).ZG27R  NOT I/O             00434800
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG27R                00434900
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00435000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                   00435100
                   AIF   (K'&ZCGPR GT 2).ZG27Q                          00435200
                   AIF   ('&ZCGPR' EQ '0').ZG27Q                        00435300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00435400
                   AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME      00435500
.ZG27P             ANOP  ,                                              00435600
                   AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC           00435700
                   AIF   ('&ZCGPR' LT '2').ZG27Q                        00435800
                   AIF   ('&ZCGPR' LE '12').ZG27R                       00435900
.ZG27Q             ANOP  ,                                              00436000
&ZMS               SETC  '"TIMEOUT='                                    00436100
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00436200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00436300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00436400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00436500
.ZG27R             ANOP  ,                                              00436600
.*------------------------------------------------------------------    00436700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00436800
.ZG29              ANOP  ,                                              00436900
&ZXGETRESPONSE     SETC  'INPUT'     SET IN/OUTPUT                      00437000
                   AIF   (K'&XGETRESPONSE GT 0).ZG29E  VALID ARG        00437100
                   AIF   (T'&GETRESPONSE EQ 'O').ZG29D  OMITTED         00437200
&ZASYSLNDX         SETA  0                                              00437300
.ZG29A             ANOP  ,           POSITIONAL MACRO KEY               00437400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00437500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG29C               00437600
&ZTLC              SETC 'GETRESPONSE'                                   00437700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG29A      00437800
.ZG29B             ANOP  ,                                              00437900
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00438000
&ZMS               SETC  'THE "GETRESPONSE" KEY'                        00438100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00438200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00438300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00438400
                   AGO   .ZG29E                                         00438500
.ZG29C             ANOP  ,                                              00438600
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00438700
&ZMS               SETC  '"GETRESPONSE='                                00438800
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00438900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00439000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00439100
&ZMS               SETC  '&ZMS "NO"'                                    00439200
&ZMS               SETC  '&ZMS OR "YES".'                               00439300
                   MNOTE 8,' &ZMS '                                     00439400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00439500
                   AGO   .ZG29E                                         00439600
.ZG29D             ANOP  ,                                              00439700
&XGETRESPONSE      SETC  'NO'        SET DEFAULT KEYWORD                00439800
.ZG29E             ANOP  ,                                              00439900
.*-------------------------------------------------------------------   00440000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00440100
.ZG30              ANOP  ,                                              00440200
&ZTLC              SETC 'GROUP'                                         00440300
                   AIF   ('&SENDTO(1)' NE '&ZTLC').ZG69                 00440400
&XSENDTO           SETC  'GROUP'     SET KEYWORD                        00440500
                   AIF   (N'&SENDTO LE 1).ZG30A  CK NUM                 00440600
&ZMS               SETC  '"SENDTO='                                     00440700
&ZMS               SETC  '&ZMS.&SENDTO"'                                00440800
&ZMS               SETC  '&ZMS "SENDTO"'                                00440900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00441000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00441100
.ZG30A             ANOP  ,                                              00441200
.*------------------------------------------------------------------    00441300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00441400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00441500
.ZG30A0            AIF   (K'&TARGET LE 0).ZG30A1  OK                    00441600
&ZCVAL             SETC '&ZCVAL TARGET'         INCORRECT KEY USED      00441700
.ZG30A1            AIF   (K'&RESPONSEID LE 0).ZG30A2  OK                00441800
&ZCVAL             SETC '&ZCVAL RESPONSEID'     INCORRECT KEY USED      00441900
.ZG30A2            AIF   (K'&ZCVAL LE 0).ZG30A3  OK                     00442000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00442100
&ZMS               SETC  '"SENDTO'                                      00442200
&ZMS               SETC  '&ZMS.=&SENDTO"'                               00442300
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00442400
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00442500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00442600
.ZG30A3            ANOP  ,                                              00442700
.*------------------------------------------------------------------    00442800
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00442900
&XMEMBERS          SETC  ''          INITIALIZE XVARIABLE               00443000
.*-------------------------------------------------------------------   00443100
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00443200
.ZG33              ANOP  ,                                              00443300
                   AIF   (K'&MEMBERS(1) LE 0).ZG33A                     00443400
&ZTLC              SETC 'TABLE'                                         00443500
                   AIF   ('&MEMBERS(1)' NE '&ZTLC').ZG43                00443600
&XMEMBERS          SETC  'TABLE'     SET KEYWORD                        00443700
                   AIF   (N'&MEMBERS LE 1).ZG33A  CK NUM                00443800
&ZMS               SETC  '"MEMBERS='                                    00443900
&ZMS               SETC  '&ZMS.&MEMBERS"'                               00444000
&ZMS               SETC  '&ZMS "MEMBERS"'                               00444100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00444200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00444300
.ZG33A             ANOP  ,                                              00444400
.*----------------------------------------------------------------***   00444500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00444600
                   AIF   (N'&TARGETS LE 1).ZG35A  CK NUM                00444700
&ZMS               SETC  '"TARGETS='                                    00444800
&ZMS               SETC  '&ZMS.&TARGETS"'                               00444900
&ZMS               SETC  '&ZMS "TARGETS"'                               00445000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00445100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00445200
.ZG35A             ANOP  ,                                              00445300
.*-------------------------------------------------------------------   00445400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00445500
&ZXTARGETS         SETC  'INPUT'     SET IN/OUTPUT                      00445600
&XTARGETS          SETC  '&TARGETS(1)'          SET XVARIABLE           00445700
                   AIF   (N'&TARGETS GT 1).ZG35B  MULTI                 00445800
&XTARGETS          SETC  '&TARGETS'  SET XVARIABLE                      00445900
.ZG35B             AIF   (K'&TARGETS(1) GT 0).ZG35C                     00446000
&ZXTARGETS         SETC  ''          RESET IN/OUTPUT                    00446100
&ZMS               SETC  ' '                                            00446200
&ZMS               SETC  '&ZMS "TARGETS" KEY AND ITS'                   00446300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00446400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00446500
.ZG35C             ANOP  ,                                              00446600
.*-------------------------------------------------------------------   00446700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00446800
                   AIF   (K'&ZXTARGETS LE 0).ZG35R  NOT I/O             00446900
                   AIF   ('&XTARGETS'(1,1) NE '(').ZG35R                00447000
&ZCGPR             SETC  '&XTARGETS'(2,K'&XTARGETS-2)                   00447100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                   00447200
                   AIF   (K'&ZCGPR GT 2).ZG35Q                          00447300
                   AIF   ('&ZCGPR' EQ '0').ZG35Q                        00447400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00447500
                   AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME      00447600
.ZG35P             ANOP  ,                                              00447700
                   AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC           00447800
                   AIF   ('&ZCGPR' LT '2').ZG35Q                        00447900
                   AIF   ('&ZCGPR' LE '12').ZG35R                       00448000
.ZG35Q             ANOP  ,                                              00448100
&ZMS               SETC  '"TARGETS='                                    00448200
&ZMS               SETC  '&ZMS.&TARGETS"'                               00448300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00448400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00448500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00448600
.ZG35R             ANOP  ,                                              00448700
.*----------------------------------------------------------------***   00448800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00448900
                   AIF   (N'&#TARGETS LE 1).ZG38A  CK NUM               00449000
&ZMS               SETC  '"#TARGETS='                                   00449100
&ZMS               SETC  '&ZMS.&#TARGETS"'                              00449200
&ZMS               SETC  '&ZMS "#TARGETS"'                              00449300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00449400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00449500
.ZG38A             ANOP  ,                                              00449600
.*-------------------------------------------------------------------   00449700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00449800
&ZX#TARGETS        SETC  'INPUT'     SET IN/OUTPUT                      00449900
&X#TARGETS         SETC  '&#TARGETS(1)'         SET XVARIABLE           00450000
                   AIF   (N'&#TARGETS GT 1).ZG38B  MULTI                00450100
&X#TARGETS         SETC  '&#TARGETS'            SET XVARIABLE           00450200
.ZG38B             AIF   (K'&#TARGETS(1) GT 0).ZG38C                    00450300
&ZX#TARGETS        SETC  ''          RESET IN/OUTPUT                    00450400
&ZMS               SETC  ' '                                            00450500
&ZMS               SETC  '&ZMS "#TARGETS" KEY AND ITS'                  00450600
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00450700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00450800
.ZG38C             ANOP  ,                                              00450900
.*-------------------------------------------------------------------   00451000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00451100
                   AIF   (K'&ZX#TARGETS LE 0).ZG38R  NOT I/O            00451200
                   AIF   ('&X#TARGETS'(1,1) NE '(').ZG38R               00451300
&ZCGPR             SETC  '&X#TARGETS'(2,K'&X#TARGETS-2)                 00451400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                   00451500
                   AIF   (K'&ZCGPR GT 2).ZG38Q                          00451600
                   AIF   ('&ZCGPR' EQ '0').ZG38Q                        00451700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00451800
                   AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME      00451900
.ZG38P             ANOP  ,                                              00452000
                   AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC           00452100
                   AIF   ('&ZCGPR' LT '2').ZG38Q                        00452200
                   AIF   ('&ZCGPR' LE '12').ZG38R                       00452300
.ZG38Q             ANOP  ,                                              00452400
&ZMS               SETC  '"#TARGETS='                                   00452500
&ZMS               SETC  '&ZMS.&#TARGETS"'                              00452600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00452700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00452800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00452900
.ZG38R             ANOP  ,                                              00453000
.*----------------------------------------------------------------***   00453100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00453200
                   AIF   (N'&NEXTTARGETOFF LE 1).ZG41A  CK NUM          00453300
&ZMS               SETC  '"NEXTTARGETOFF='                              00453400
&ZMS               SETC  '&ZMS.&NEXTTARGETOFF"'                         00453500
&ZMS               SETC  '&ZMS "NEXTTARGETOFF"'                         00453600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00453700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00453800
.ZG41A             ANOP  ,                                              00453900
.*-------------------------------------------------------------------   00454000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00454100
&ZXNEXTTARGETOFF   SETC  'INPUT'     SET IN/OUTPUT                      00454200
&XNEXTTARGETOFF    SETC  '8'                                            00454300
                   AIF   (K'&NEXTTARGETOFF(1) LE 0).ZG41B  PARM         00454400
&XNEXTTARGETOFF    SETC  '&NEXTTARGETOFF(1)'    SET XVARIABLE           00454500
                   AIF   (N'&NEXTTARGETOFF GT 1).ZG41B  MULTI           00454600
&XNEXTTARGETOFF    SETC  '&NEXTTARGETOFF'       SET XVARIABLE           00454700
.ZG41B             ANOP  ,                                              00454800
.*-------------------------------------------------------------------   00454900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00455000
                   AIF   (K'&ZXNEXTTARGETOFF LE 0).ZG41R  NOT I/O       00455100
                   AIF   ('&XNEXTTARGETOFF'(1,1) NE '(').ZG41R          00455200
&ZCGPR             SETC  '&XNEXTTARGETOFF'(2,K'&XNEXTTARGETOFF-2)       00455300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                   00455400
                   AIF   (K'&ZCGPR GT 2).ZG41Q                          00455500
                   AIF   ('&ZCGPR' EQ '0').ZG41Q                        00455600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00455700
                   AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME      00455800
.ZG41P             ANOP  ,                                              00455900
                   AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC           00456000
                   AIF   ('&ZCGPR' LT '2').ZG41Q                        00456100
                   AIF   ('&ZCGPR' LE '12').ZG41R                       00456200
.ZG41Q             ANOP  ,                                              00456300
&ZMS               SETC  '"NEXTTARGETOFF='                              00456400
&ZMS               SETC  '&ZMS.&NEXTTARGETOFF"'                         00456500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00456600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00456700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00456800
.ZG41R             ANOP  ,                                              00456900
.*-------------------------------------------------------------------   00457000
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00457100
.ZG43              ANOP  ,                                              00457200
&ZTLC              SETC 'ALL'                                           00457300
                   AIF   ('&MEMBERS(1)' NE '&ZTLC').ZG44                00457400
&XMEMBERS          SETC  'ALL'       SET KEYWORD                        00457500
                   AIF   (N'&MEMBERS LE 1).ZG43A  CK NUM                00457600
&ZMS               SETC  '"MEMBERS='                                    00457700
&ZMS               SETC  '&ZMS.&MEMBERS"'                               00457800
&ZMS               SETC  '&ZMS "MEMBERS"'                               00457900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00458000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00458100
.ZG43A             ANOP  ,                                              00458200
.*------------------------------------------------------------------    00458300
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00458400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00458500
.ZG43A0            AIF   (K'&TARGETS LE 0).ZG43A1  OK                   00458600
&ZCVAL             SETC '&ZCVAL TARGETS'        INCORRECT KEY USED      00458700
.ZG43A1            AIF   (K'&#TARGETS LE 0).ZG43A2  OK                  00458800
&ZCVAL             SETC '&ZCVAL #TARGETS'       INCORRECT KEY USED      00458900
.ZG43A2            AIF   (K'&NEXTTARGETOFF LE 0).ZG43A3  OK             00459000
&ZCVAL             SETC '&ZCVAL NEXTTARGETOFF'  INCORRECT KEY USED      00459100
.ZG43A3            AIF   (K'&ZCVAL LE 0).ZG43A4  OK                     00459200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00459300
&ZMS               SETC  '"MEMBERS'                                     00459400
&ZMS               SETC  '&ZMS.=&MEMBERS"'                              00459500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00459600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00459700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00459800
.ZG43A4            ANOP  ,                                              00459900
.*-------------------------------------------------------------------   00460000
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00460100
.ZG44              ANOP  ,                                              00460200
&ZTLC              SETC 'OTHER'                                         00460300
                   AIF   ('&MEMBERS(1)' NE '&ZTLC').ZG45                00460400
&XMEMBERS          SETC  'OTHER'     SET KEYWORD                        00460500
                   AIF   (N'&MEMBERS LE 1).ZG44A  CK NUM                00460600
&ZMS               SETC  '"MEMBERS='                                    00460700
&ZMS               SETC  '&ZMS.&MEMBERS"'                               00460800
&ZMS               SETC  '&ZMS "MEMBERS"'                               00460900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00461000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00461100
.ZG44A             ANOP  ,                                              00461200
.*------------------------------------------------------------------    00461300
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00461400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00461500
.ZG44A0            AIF   (K'&TARGETS LE 0).ZG44A1  OK                   00461600
&ZCVAL             SETC '&ZCVAL TARGETS'        INCORRECT KEY USED      00461700
.ZG44A1            AIF   (K'&#TARGETS LE 0).ZG44A2  OK                  00461800
&ZCVAL             SETC '&ZCVAL #TARGETS'       INCORRECT KEY USED      00461900
.ZG44A2            AIF   (K'&NEXTTARGETOFF LE 0).ZG44A3  OK             00462000
&ZCVAL             SETC '&ZCVAL NEXTTARGETOFF'  INCORRECT KEY USED      00462100
.ZG44A3            AIF   (K'&ZCVAL LE 0).ZG44A4  OK                     00462200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00462300
&ZMS               SETC  '"MEMBERS'                                     00462400
&ZMS               SETC  '&ZMS.=&MEMBERS"'                              00462500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00462600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00462700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00462800
.ZG44A4            ANOP  ,                                              00462900
.*------------------------------------------------------------------    00463000
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00463100
.ZG45              ANOP  ,                                              00463200
&ZXMEMBERS         SETC  'INPUT'     SET IN/OUTPUT                      00463300
                   AIF   (K'&XMEMBERS GT 0).ZG45E  VALID ARG            00463400
                   AIF   (T'&MEMBERS EQ 'O').ZG45D  OMITTED             00463500
&ZASYSLNDX         SETA  0                                              00463600
.ZG45A             ANOP  ,           POSITIONAL MACRO KEY               00463700
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00463800
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG45C               00463900
&ZTLC              SETC 'MEMBERS'                                       00464000
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG45A      00464100
.ZG45B             ANOP  ,                                              00464200
&ZXMEMBERS         SETC  ''          RESET IN/OUTPUT                    00464300
&ZMS               SETC  'THE "MEMBERS" KEY'                            00464400
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00464500
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00464600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00464700
                   AGO   .ZG45E                                         00464800
.ZG45C             ANOP  ,                                              00464900
&ZXMEMBERS         SETC  ''          RESET IN/OUTPUT                    00465000
&ZMS               SETC  '"MEMBERS='                                    00465100
&ZMS               SETC  '&ZMS.&MEMBERS"'                               00465200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00465300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00465400
&ZMS               SETC  '&ZMS "TABLE",'                                00465500
&ZMS               SETC  '&ZMS "ALL",'                                  00465600
&ZMS               SETC  '&ZMS OR "OTHER".'                             00465700
                   MNOTE 8,' &ZMS '                                     00465800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00465900
                   AGO   .ZG45E                                         00466000
.ZG45D             ANOP  ,                                              00466100
&XMEMBERS          SETC  'TABLE'     SET DEFAULT KEYWORD                00466200
.ZG45E             ANOP  ,                                              00466300
.*------------------------------------------------------------------    00466400
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00466500
                   AIF   (K'&MEMBERS(1) GT 0).ZG45F  PARM               00466600
&XMEMBERS          SETC  ''          ENSURE NULL KEYWORD                00466700
&ZXMEMBERS         SETC  ''          RESET IN/OUTPUT                    00466800
&ZMS               SETC  'THE'                                          00466900
&ZMS               SETC  '&ZMS "MEMBERS" KEY AND ITS'                   00467000
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00467100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00467200
&ZMS               SETC  '&ZMS "TABLE",'                                00467300
&ZMS               SETC  '&ZMS "ALL",'                                  00467400
&ZMS               SETC  '&ZMS OR "OTHER".'                             00467500
                   MNOTE 8,' &ZMS '                                     00467600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00467700
.ZG45F             ANOP  ,                                              00467800
.*----------------------------------------------------------------***   00467900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00468000
                   AIF   (N'&FILTERGROUP LE 1).ZG47A  CK NUM            00468100
&ZMS               SETC  '"FILTERGROUP='                                00468200
&ZMS               SETC  '&ZMS.&FILTERGROUP"'                           00468300
&ZMS               SETC  '&ZMS "FILTERGROUP"'                           00468400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00468500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00468600
.ZG47A             ANOP  ,                                              00468700
.*-------------------------------------------------------------------   00468800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00468900
&ZXFILTERGROUP     SETC  'INPUT'     SET IN/OUTPUT                      00469000
&XFILTERGROUP      SETC  'SENDERSGROUP'                                 00469100
                   AIF   (K'&FILTERGROUP(1) LE 0).ZG47B  PARM           00469200
&XFILTERGROUP      SETC  '&FILTERGROUP(1)'      SET XVARIABLE           00469300
                   AIF   (N'&FILTERGROUP GT 1).ZG47B  MULTI             00469400
&XFILTERGROUP      SETC  '&FILTERGROUP'         SET XVARIABLE           00469500
.ZG47B             ANOP  ,                                              00469600
.*-------------------------------------------------------------------   00469700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00469800
                   AIF   (K'&ZXFILTERGROUP LE 0).ZG47R  NOT I/O         00469900
         AIF   ('&XFILTERGROUP' EQ 'SENDERSGROUP').ZG47R                00470000
                   AIF   ('&XFILTERGROUP'(1,1) NE '(').ZG47R            00470100
&ZCGPR             SETC  '&XFILTERGROUP'(2,K'&XFILTERGROUP-2)           00470200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                   00470300
                   AIF   (K'&ZCGPR GT 2).ZG47Q                          00470400
                   AIF   ('&ZCGPR' EQ '0').ZG47Q                        00470500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00470600
                   AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME      00470700
.ZG47P             ANOP  ,                                              00470800
                   AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC           00470900
                   AIF   ('&ZCGPR' LT '2').ZG47Q                        00471000
                   AIF   ('&ZCGPR' LE '12').ZG47R                       00471100
.ZG47Q             ANOP  ,                                              00471200
&ZMS               SETC  '"FILTERGROUP='                                00471300
&ZMS               SETC  '&ZMS.&FILTERGROUP"'                           00471400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00471500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00471600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00471700
.ZG47R             ANOP  ,                                              00471800
.*------------------------------------------------------------------    00471900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00472000
&XDELIVERMSG       SETC  ''          INITIALIZE XVARIABLE               00472100
.*-------------------------------------------------------------------   00472200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00472300
.ZG51              ANOP  ,                                              00472400
                   AIF   (K'&DELIVERMSG(1) LE 0).ZG51A                  00472500
&ZTLC              SETC 'UNORDERED'                                     00472600
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG52             00472700
&XDELIVERMSG       SETC  'UNORDERED'            SET KEYWORD             00472800
                   AIF   (N'&DELIVERMSG LE 1).ZG51A  CK NUM             00472900
&ZMS               SETC  '"DELIVERMSG='                                 00473000
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00473100
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00473200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00473300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00473400
.ZG51A             ANOP  ,                                              00473500
.*------------------------------------------------------------------    00473600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00473700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00473800
.ZG51A0            AIF   (K'&STREAMID LE 0).ZG51A1  OK                  00473900
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00474000
.ZG51A1            AIF   (K'&ZCVAL LE 0).ZG51A2  OK                     00474100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00474200
&ZMS               SETC  '"DELIVERMSG'                                  00474300
&ZMS               SETC  '&ZMS.=&DELIVERMSG"'                           00474400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00474500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00474600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00474700
.ZG51A2            ANOP  ,                                              00474800
.*-------------------------------------------------------------------   00474900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00475000
.ZG52              ANOP  ,                                              00475100
&ZTLC              SETC 'ORDERED'                                       00475200
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG56             00475300
&XDELIVERMSG       SETC  'ORDERED'   SET KEYWORD                        00475400
                   AIF   (N'&DELIVERMSG LE 1).ZG52A  CK NUM             00475500
&ZMS               SETC  '"DELIVERMSG='                                 00475600
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00475700
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00475800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00475900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00476000
.ZG52A             ANOP  ,                                              00476100
.*----------------------------------------------------------------***   00476200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00476300
                   AIF   (N'&STREAMID LE 1).ZG54A  CK NUM               00476400
&ZMS               SETC  '"STREAMID='                                   00476500
&ZMS               SETC  '&ZMS.&STREAMID"'                              00476600
&ZMS               SETC  '&ZMS "STREAMID"'                              00476700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00476800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00476900
.ZG54A             ANOP  ,                                              00477000
.*-------------------------------------------------------------------   00477100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00477200
&ZXSTREAMID        SETC  'INPUT'     SET IN/OUTPUT                      00477300
&XSTREAMID         SETC  '1'                                            00477400
                   AIF   (K'&STREAMID(1) LE 0).ZG54B  PARM              00477500
&XSTREAMID         SETC  '&STREAMID(1)'         SET XVARIABLE           00477600
                   AIF   (N'&STREAMID GT 1).ZG54B  MULTI                00477700
&XSTREAMID         SETC  '&STREAMID'            SET XVARIABLE           00477800
.ZG54B             ANOP  ,                                              00477900
.*-------------------------------------------------------------------   00478000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00478100
                   AIF   (K'&ZXSTREAMID LE 0).ZG54R  NOT I/O            00478200
                   AIF   ('&XSTREAMID'(1,1) NE '(').ZG54R               00478300
&ZCGPR             SETC  '&XSTREAMID'(2,K'&XSTREAMID-2)                 00478400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                   00478500
                   AIF   (K'&ZCGPR GT 2).ZG54Q                          00478600
                   AIF   ('&ZCGPR' EQ '0').ZG54Q                        00478700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00478800
                   AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME      00478900
.ZG54P             ANOP  ,                                              00479000
                   AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC           00479100
                   AIF   ('&ZCGPR' LT '2').ZG54Q                        00479200
                   AIF   ('&ZCGPR' LE '12').ZG54R                       00479300
.ZG54Q             ANOP  ,                                              00479400
&ZMS               SETC  '"STREAMID='                                   00479500
&ZMS               SETC  '&ZMS.&STREAMID"'                              00479600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00479700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00479800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00479900
.ZG54R             ANOP  ,                                              00480000
.*-------------------------------------------------------------------   00480100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00480200
.ZG56              ANOP  ,                                              00480300
&ZTLC              SETC 'DUPLICATES'                                    00480400
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG57             00480500
&XDELIVERMSG       SETC  'DUPLICATES'           SET KEYWORD             00480600
                   AIF   (N'&DELIVERMSG LE 1).ZG56A  CK NUM             00480700
&ZMS               SETC  '"DELIVERMSG='                                 00480800
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00480900
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00481000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00481100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00481200
.ZG56A             ANOP  ,                                              00481300
.*------------------------------------------------------------------    00481400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00481500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00481600
.ZG56A0            AIF   (K'&STREAMID LE 0).ZG56A1  OK                  00481700
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00481800
.ZG56A1            AIF   (K'&ZCVAL LE 0).ZG56A2  OK                     00481900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00482000
&ZMS               SETC  '"DELIVERMSG'                                  00482100
&ZMS               SETC  '&ZMS.=&DELIVERMSG"'                           00482200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00482300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00482400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00482500
.ZG56A2            ANOP  ,                                              00482600
.*------------------------------------------------------------------    00482700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00482800
.ZG57              ANOP  ,                                              00482900
&ZXDELIVERMSG      SETC  'INPUT'     SET IN/OUTPUT                      00483000
                   AIF   (K'&XDELIVERMSG GT 0).ZG57E  VALID ARG         00483100
                   AIF   (T'&DELIVERMSG EQ 'O').ZG57D  OMITTED          00483200
&ZASYSLNDX         SETA  0                                              00483300
.ZG57A             ANOP  ,           POSITIONAL MACRO KEY               00483400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00483500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG57C               00483600
&ZTLC              SETC 'DELIVERMSG'                                    00483700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG57A      00483800
.ZG57B             ANOP  ,                                              00483900
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00484000
&ZMS               SETC  'THE "DELIVERMSG" KEY'                         00484100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00484200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00484300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00484400
                   AGO   .ZG57E                                         00484500
.ZG57C             ANOP  ,                                              00484600
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00484700
&ZMS               SETC  '"DELIVERMSG='                                 00484800
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00484900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00485000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00485100
&ZMS               SETC  '&ZMS "UNORDERED",'                            00485200
&ZMS               SETC  '&ZMS "ORDERED",'                              00485300
&ZMS               SETC  '&ZMS OR "DUPLICATES".'                        00485400
                   MNOTE 8,' &ZMS '                                     00485500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00485600
                   AGO   .ZG57E                                         00485700
.ZG57D             ANOP  ,                                              00485800
&XDELIVERMSG       SETC  'UNORDERED'            SET DEFAULT KEYWORD     00485900
.ZG57E             ANOP  ,                                              00486000
.*------------------------------------------------------------------    00486100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00486200
&XGETRESPONSE      SETC  ''          INITIALIZE XVARIABLE               00486300
.*-------------------------------------------------------------------   00486400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00486500
.ZG60              ANOP  ,                                              00486600
                   AIF   (K'&GETRESPONSE(1) LE 0).ZG60A                 00486700
&ZTLC              SETC 'NO'                                            00486800
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG64            00486900
&XGETRESPONSE      SETC  'NO'        SET KEYWORD                        00487000
                   AIF   (N'&GETRESPONSE LE 1).ZG60A  CK NUM            00487100
&ZMS               SETC  '"GETRESPONSE='                                00487200
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00487300
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00487400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00487500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00487600
.ZG60A             ANOP  ,                                              00487700
.*----------------------------------------------------------------***   00487800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00487900
                   AIF   (N'&TIMEOUT LE 1).ZG62A  CK NUM                00488000
&ZMS               SETC  '"TIMEOUT='                                    00488100
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00488200
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00488300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00488400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00488500
.ZG62A             ANOP  ,                                              00488600
.*-------------------------------------------------------------------   00488700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00488800
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00488900
&XTIMEOUT          SETC  'ZERO'                                         00489000
                   AIF   (K'&TIMEOUT(1) LE 0).ZG62B  PARM               00489100
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00489200
                   AIF   (N'&TIMEOUT GT 1).ZG62B  MULTI                 00489300
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00489400
.ZG62B             ANOP  ,                                              00489500
.*-------------------------------------------------------------------   00489600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00489700
                   AIF   (K'&ZXTIMEOUT LE 0).ZG62R  NOT I/O             00489800
         AIF   ('&XTIMEOUT' EQ 'ZERO').ZG62R                            00489900
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG62R                00490000
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00490100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                   00490200
                   AIF   (K'&ZCGPR GT 2).ZG62Q                          00490300
                   AIF   ('&ZCGPR' EQ '0').ZG62Q                        00490400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00490500
                   AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME      00490600
.ZG62P             ANOP  ,                                              00490700
                   AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC           00490800
                   AIF   ('&ZCGPR' LT '2').ZG62Q                        00490900
                   AIF   ('&ZCGPR' LE '12').ZG62R                       00491000
.ZG62Q             ANOP  ,                                              00491100
&ZMS               SETC  '"TIMEOUT='                                    00491200
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00491300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00491400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00491500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00491600
.ZG62R             ANOP  ,                                              00491700
.*-------------------------------------------------------------------   00491800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00491900
.ZG64              ANOP  ,                                              00492000
&ZTLC              SETC 'YES'                                           00492100
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG68            00492200
&XGETRESPONSE      SETC  'YES'       SET KEYWORD                        00492300
                   AIF   (N'&GETRESPONSE LE 1).ZG64A  CK NUM            00492400
&ZMS               SETC  '"GETRESPONSE='                                00492500
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00492600
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00492700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00492800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00492900
.ZG64A             ANOP  ,                                              00493000
.*----------------------------------------------------------------***   00493100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00493200
                   AIF   (N'&TIMEOUT LE 1).ZG66A  CK NUM                00493300
&ZMS               SETC  '"TIMEOUT='                                    00493400
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00493500
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00493600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00493700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00493800
.ZG66A             ANOP  ,                                              00493900
.*-------------------------------------------------------------------   00494000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00494100
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00494200
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00494300
                   AIF   (N'&TIMEOUT GT 1).ZG66B  MULTI                 00494400
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00494500
.ZG66B             AIF   (K'&TIMEOUT(1) GT 0).ZG66C                     00494600
&ZXTIMEOUT         SETC  ''          RESET IN/OUTPUT                    00494700
&ZMS               SETC  ' '                                            00494800
&ZMS               SETC  '&ZMS "TIMEOUT" KEY AND ITS'                   00494900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00495000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00495100
.ZG66C             ANOP  ,                                              00495200
.*-------------------------------------------------------------------   00495300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00495400
                   AIF   (K'&ZXTIMEOUT LE 0).ZG66R  NOT I/O             00495500
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG66R                00495600
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00495700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG66P                   00495800
                   AIF   (K'&ZCGPR GT 2).ZG66Q                          00495900
                   AIF   ('&ZCGPR' EQ '0').ZG66Q                        00496000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00496100
                   AIF   (T'&ZCGPR NE 'N').ZG66Q  INVALID REG NAME      00496200
.ZG66P             ANOP  ,                                              00496300
                   AIF   (T'&ZCGPR NE 'N').ZG66R  NON NUMERIC           00496400
                   AIF   ('&ZCGPR' LT '2').ZG66Q                        00496500
                   AIF   ('&ZCGPR' LE '12').ZG66R                       00496600
.ZG66Q             ANOP  ,                                              00496700
&ZMS               SETC  '"TIMEOUT='                                    00496800
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00496900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00497000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00497100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00497200
.ZG66R             ANOP  ,                                              00497300
.*------------------------------------------------------------------    00497400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00497500
.ZG68              ANOP  ,                                              00497600
&ZXGETRESPONSE     SETC  'INPUT'     SET IN/OUTPUT                      00497700
                   AIF   (K'&XGETRESPONSE GT 0).ZG68E  VALID ARG        00497800
                   AIF   (T'&GETRESPONSE EQ 'O').ZG68D  OMITTED         00497900
&ZASYSLNDX         SETA  0                                              00498000
.ZG68A             ANOP  ,           POSITIONAL MACRO KEY               00498100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00498200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG68C               00498300
&ZTLC              SETC 'GETRESPONSE'                                   00498400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG68A      00498500
.ZG68B             ANOP  ,                                              00498600
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00498700
&ZMS               SETC  'THE "GETRESPONSE" KEY'                        00498800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00498900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00499000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00499100
                   AGO   .ZG68E                                         00499200
.ZG68C             ANOP  ,                                              00499300
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00499400
&ZMS               SETC  '"GETRESPONSE='                                00499500
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00499600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00499700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00499800
&ZMS               SETC  '&ZMS "NO"'                                    00499900
&ZMS               SETC  '&ZMS OR "YES".'                               00500000
                   MNOTE 8,' &ZMS '                                     00500100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00500200
                   AGO   .ZG68E                                         00500300
.ZG68D             ANOP  ,                                              00500400
&XGETRESPONSE      SETC  'NO'        SET DEFAULT KEYWORD                00500500
.ZG68E             ANOP  ,                                              00500600
.*-------------------------------------------------------------------   00500700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00500800
.ZG69              ANOP  ,                                              00500900
&ZTLC              SETC 'ORIGINATOR'                                    00501000
                   AIF   ('&SENDTO(1)' NE '&ZTLC').ZG76                 00501100
&XSENDTO           SETC  'ORIGINATOR'           SET KEYWORD             00501200
                   AIF   (N'&SENDTO LE 1).ZG69A  CK NUM                 00501300
&ZMS               SETC  '"SENDTO='                                     00501400
&ZMS               SETC  '&ZMS.&SENDTO"'                                00501500
&ZMS               SETC  '&ZMS "SENDTO"'                                00501600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00501700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00501800
.ZG69A             ANOP  ,                                              00501900
.*------------------------------------------------------------------    00502000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00502100
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00502200
.ZG69A0            AIF   (K'&TARGET LE 0).ZG69A1  OK                    00502300
&ZCVAL             SETC '&ZCVAL TARGET'         INCORRECT KEY USED      00502400
.ZG69A1            AIF   (K'&DELIVERMSG LE 0).ZG69A2  OK                00502500
&ZCVAL             SETC '&ZCVAL DELIVERMSG'     INCORRECT KEY USED      00502600
.ZG69A2            AIF   (K'&STREAMID LE 0).ZG69A3  OK                  00502700
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00502800
.ZG69A3            AIF   (K'&GETRESPONSE LE 0).ZG69A4  OK               00502900
&ZCVAL             SETC '&ZCVAL GETRESPONSE'    INCORRECT KEY USED      00503000
.ZG69A4            AIF   (K'&MEMBERS LE 0).ZG69A5  OK                   00503100
&ZCVAL             SETC '&ZCVAL MEMBERS'        INCORRECT KEY USED      00503200
.ZG69A5            AIF   (K'&TARGETS LE 0).ZG69A6  OK                   00503300
&ZCVAL             SETC '&ZCVAL TARGETS'        INCORRECT KEY USED      00503400
.ZG69A6            AIF   (K'&#TARGETS LE 0).ZG69A7  OK                  00503500
&ZCVAL             SETC '&ZCVAL #TARGETS'       INCORRECT KEY USED      00503600
.ZG69A7            AIF   (K'&NEXTTARGETOFF LE 0).ZG69A8  OK             00503700
&ZCVAL             SETC '&ZCVAL NEXTTARGETOFF'  INCORRECT KEY USED      00503800
.ZG69A8            AIF   (K'&FILTERGROUP LE 0).ZG69A9  OK               00503900
&ZCVAL             SETC '&ZCVAL FILTERGROUP'    INCORRECT KEY USED      00504000
.ZG69A9            AIF   (K'&ZCVAL LE 0).ZG69A10  OK                    00504100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00504200
&ZMS               SETC  '"SENDTO'                                      00504300
&ZMS               SETC  '&ZMS.=&SENDTO"'                               00504400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00504500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00504600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00504700
.ZG69A10           ANOP  ,                                              00504800
.*----------------------------------------------------------------***   00504900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00505000
                   AIF   (N'&RESPONSEID LE 1).ZG71A  CK NUM             00505100
&ZMS               SETC  '"RESPONSEID='                                 00505200
&ZMS               SETC  '&ZMS.&RESPONSEID"'                            00505300
&ZMS               SETC  '&ZMS "RESPONSEID"'                            00505400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00505500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00505600
.ZG71A             ANOP  ,                                              00505700
.*-------------------------------------------------------------------   00505800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00505900
&ZXRESPONSEID      SETC  'INPUT'     SET IN/OUTPUT                      00506000
&XRESPONSEID       SETC  '&RESPONSEID(1)'       SET XVARIABLE           00506100
                   AIF   (N'&RESPONSEID GT 1).ZG71B  MULTI              00506200
&XRESPONSEID       SETC  '&RESPONSEID'          SET XVARIABLE           00506300
.ZG71B             AIF   (K'&RESPONSEID(1) GT 0).ZG71C                  00506400
&ZXRESPONSEID      SETC  ''          RESET IN/OUTPUT                    00506500
&ZMS               SETC  ' '                                            00506600
&ZMS               SETC  '&ZMS "RESPONSEID" KEY AND ITS'                00506700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00506800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00506900
.ZG71C             ANOP  ,                                              00507000
.*-------------------------------------------------------------------   00507100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00507200
                   AIF   (K'&ZXRESPONSEID LE 0).ZG71R  NOT I/O          00507300
                   AIF   ('&XRESPONSEID'(1,1) NE '(').ZG71R             00507400
&ZCGPR             SETC  '&XRESPONSEID'(2,K'&XRESPONSEID-2)             00507500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                   00507600
                   AIF   (K'&ZCGPR GT 2).ZG71Q                          00507700
                   AIF   ('&ZCGPR' EQ '0').ZG71Q                        00507800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00507900
                   AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME      00508000
.ZG71P             ANOP  ,                                              00508100
                   AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC           00508200
                   AIF   ('&ZCGPR' LT '2').ZG71Q                        00508300
                   AIF   ('&ZCGPR' LE '12').ZG71R                       00508400
.ZG71Q             ANOP  ,                                              00508500
&ZMS               SETC  '"RESPONSEID='                                 00508600
&ZMS               SETC  '&ZMS.&RESPONSEID"'                            00508700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00508800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00508900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00509000
.ZG71R             ANOP  ,                                              00509100
.*----------------------------------------------------------------***   00509200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00509300
                   AIF   (N'&TIMEOUT LE 1).ZG74A  CK NUM                00509400
&ZMS               SETC  '"TIMEOUT='                                    00509500
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00509600
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00509700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00509800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00509900
.ZG74A             ANOP  ,                                              00510000
.*-------------------------------------------------------------------   00510100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00510200
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00510300
&XTIMEOUT          SETC  'ZERO'                                         00510400
                   AIF   (K'&TIMEOUT(1) LE 0).ZG74B  PARM               00510500
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00510600
                   AIF   (N'&TIMEOUT GT 1).ZG74B  MULTI                 00510700
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00510800
.ZG74B             ANOP  ,                                              00510900
.*-------------------------------------------------------------------   00511000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00511100
                   AIF   (K'&ZXTIMEOUT LE 0).ZG74R  NOT I/O             00511200
         AIF   ('&XTIMEOUT' EQ 'ZERO').ZG74R                            00511300
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG74R                00511400
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00511500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                   00511600
                   AIF   (K'&ZCGPR GT 2).ZG74Q                          00511700
                   AIF   ('&ZCGPR' EQ '0').ZG74Q                        00511800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00511900
                   AIF   (T'&ZCGPR NE 'N').ZG74Q  INVALID REG NAME      00512000
.ZG74P             ANOP  ,                                              00512100
                   AIF   (T'&ZCGPR NE 'N').ZG74R  NON NUMERIC           00512200
                   AIF   ('&ZCGPR' LT '2').ZG74Q                        00512300
                   AIF   ('&ZCGPR' LE '12').ZG74R                       00512400
.ZG74Q             ANOP  ,                                              00512500
&ZMS               SETC  '"TIMEOUT='                                    00512600
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00512700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00512800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00512900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00513000
.ZG74R             ANOP  ,                                              00513100
.*------------------------------------------------------------------    00513200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00513300
.ZG76              ANOP  ,                                              00513400
&ZXSENDTO          SETC  'INPUT'     SET IN/OUTPUT                      00513500
                   AIF   (K'&XSENDTO GT 0).ZG76E  VALID ARG             00513600
                   AIF   (T'&SENDTO EQ 'O').ZG76D  OMITTED              00513700
&ZASYSLNDX         SETA  0                                              00513800
.ZG76A             ANOP  ,           POSITIONAL MACRO KEY               00513900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00514000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG76C               00514100
&ZTLC              SETC 'SENDTO'                                        00514200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG76A      00514300
.ZG76B             ANOP  ,                                              00514400
&ZXSENDTO          SETC  ''          RESET IN/OUTPUT                    00514500
&ZMS               SETC  'THE "SENDTO" KEY'                             00514600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00514700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00514800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00514900
                   AGO   .ZG76E                                         00515000
.ZG76C             ANOP  ,                                              00515100
&ZXSENDTO          SETC  ''          RESET IN/OUTPUT                    00515200
&ZMS               SETC  '"SENDTO='                                     00515300
&ZMS               SETC  '&ZMS.&SENDTO"'                                00515400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00515500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00515600
&ZMS               SETC  '&ZMS "MEMBER",'                               00515700
&ZMS               SETC  '&ZMS "GROUP",'                                00515800
&ZMS               SETC  '&ZMS OR "ORIGINATOR".'                        00515900
                   MNOTE 8,' &ZMS '                                     00516000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00516100
                   AGO   .ZG76E                                         00516200
.ZG76D             ANOP  ,                                              00516300
&XSENDTO           SETC  'MEMBER'    SET DEFAULT KEYWORD                00516400
.ZG76E             ANOP  ,                                              00516500
.*------------------------------------------------------------------    00516600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00516700
&XMULTIPART        SETC  ''          INITIALIZE XVARIABLE               00516800
.*-------------------------------------------------------------------   00516900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00517000
.ZG79              ANOP  ,                                              00517100
                   AIF   (K'&MULTIPART(1) LE 0).ZG79A                   00517200
&ZTLC              SETC 'NO'                                            00517300
                   AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG87              00517400
&XMULTIPART        SETC  'NO'        SET KEYWORD                        00517500
                   AIF   (N'&MULTIPART LE 1).ZG79A  CK NUM              00517600
&ZMS               SETC  '"MULTIPART='                                  00517700
&ZMS               SETC  '&ZMS.&MULTIPART"'                             00517800
&ZMS               SETC  '&ZMS "MULTIPART"'                             00517900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00518000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00518100
.ZG79A             ANOP  ,                                              00518200
.*------------------------------------------------------------------    00518300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00518400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00518500
.ZG79A0            AIF   (K'&#MSGPARTS LE 0).ZG79A1  OK                 00518600
&ZCVAL             SETC '&ZCVAL #MSGPARTS'      INCORRECT KEY USED      00518700
.ZG79A1            AIF   (K'&ELEMENT LE 0).ZG79A2  OK                   00518800
&ZCVAL             SETC '&ZCVAL ELEMENT'        INCORRECT KEY USED      00518900
.ZG79A2            AIF   (K'&ELEMADDRMODE LE 0).ZG79A3  OK              00519000
&ZCVAL             SETC '&ZCVAL ELEMADDRMODE'   INCORRECT KEY USED      00519100
.ZG79A3            AIF   (K'&ELEMFORM LE 0).ZG79A4  OK                  00519200
&ZCVAL             SETC '&ZCVAL ELEMFORM'       INCORRECT KEY USED      00519300
.ZG79A4            AIF   (K'&NEXTOFF LE 0).ZG79A5  OK                   00519400
&ZCVAL             SETC '&ZCVAL NEXTOFF'        INCORRECT KEY USED      00519500
.ZG79A5            AIF   (K'&NEXTPTROFF LE 0).ZG79A6  OK                00519600
&ZCVAL             SETC '&ZCVAL NEXTPTROFF'     INCORRECT KEY USED      00519700
.ZG79A6            AIF   (K'&ENDOFQUEUE LE 0).ZG79A7  OK                00519800
&ZCVAL             SETC '&ZCVAL ENDOFQUEUE'     INCORRECT KEY USED      00519900
.ZG79A7            AIF   (K'&PARTOFF LE 0).ZG79A8  OK                   00520000
&ZCVAL             SETC '&ZCVAL PARTOFF'        INCORRECT KEY USED      00520100
.ZG79A8            AIF   (K'&PARTPTROFF LE 0).ZG79A9  OK                00520200
&ZCVAL             SETC '&ZCVAL PARTPTROFF'     INCORRECT KEY USED      00520300
.ZG79A9            AIF   (K'&PARTALET LE 0).ZG79A10  OK                 00520400
&ZCVAL             SETC '&ZCVAL PARTALET'       INCORRECT KEY USED      00520500
.ZG79A10           AIF   (K'&PARTALETOFF LE 0).ZG79A11  OK              00520600
&ZCVAL             SETC '&ZCVAL PARTALETOFF'    INCORRECT KEY USED      00520700
.ZG79A11           AIF   (K'&PARTALETTBL LE 0).ZG79A12  OK              00520800
&ZCVAL             SETC '&ZCVAL PARTALETTBL'    INCORRECT KEY USED      00520900
.ZG79A12           AIF   (K'&PARTLEN LE 0).ZG79A13  OK                  00521000
&ZCVAL             SETC '&ZCVAL PARTLEN'        INCORRECT KEY USED      00521100
.ZG79A13           AIF   (K'&PARTLENOFF LE 0).ZG79A14  OK               00521200
&ZCVAL             SETC '&ZCVAL PARTLENOFF'     INCORRECT KEY USED      00521300
.ZG79A14           AIF   (K'&PARTLENTBL LE 0).ZG79A15  OK               00521400
&ZCVAL             SETC '&ZCVAL PARTLENTBL'     INCORRECT KEY USED      00521500
.ZG79A15           AIF   (K'&ZCVAL LE 0).ZG79A16  OK                    00521600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00521700
&ZMS               SETC  '"MULTIPART'                                   00521800
&ZMS               SETC  '&ZMS.=&MULTIPART"'                            00521900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00522000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00522100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00522200
.ZG79A16           ANOP  ,                                              00522300
.*----------------------------------------------------------------***   00522400
.***AG.KMGRP05 NAME,  INPUT, ME GROUP -XVARIABLE KEY                    00522500
                   AIF   (N'&MSGCNTL LE 1).ZG81A  CK NUM                00522600
&ZMS               SETC  '"MSGCNTL='                                    00522700
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00522800
&ZMS               SETC  '&ZMS "MSGCNTL"'                               00522900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00523000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00523100
.ZG81A             ANOP  ,                                              00523200
.*-------------------------------------------------------------------   00523300
.***AG.KMGRP06 NAME,  INPUT, ME GROUP -XVARIABLE                        00523400
&ZXMSGCNTL         SETC  'INPUT'     SET IN/OUTPUT                      00523500
&XMSGCNTL          SETC  '&MSGCNTL(1)'          SET XVARIABLE           00523600
                   AIF   (N'&MSGCNTL GT 1).ZG81B                        00523700
&XMSGCNTL          SETC  '&MSGCNTL'  SET XVARIABLE                      00523800
.ZG81B             AIF   (K'&MSGCNTL(1) GT 0).ZG81C                     00523900
&ZXMSGCNTL         SETC  ''          RESET IN/OUTPUT                    00524000
.ZG81C             ANOP  ,                                              00524100
.*-------------------------------------------------------------------   00524200
.***AG.KCK02 NAME,  INPUT, ME GROUP -GPR OUT OF RANGE                   00524300
                   AIF   (K'&ZXMSGCNTL LE 0).ZG81R  NOT I/O             00524400
         AIF   ('&XMSGCNTL' EQ 'ALLZERO').ZG81R                         00524500
                   AIF   ('&XMSGCNTL'(1,1) NE '(').ZG81R                00524600
&ZCGPR             SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                   00524700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG81P                   00524800
                   AIF   (K'&ZCGPR GT 2).ZG81Q                          00524900
                   AIF   ('&ZCGPR' EQ '0').ZG81Q                        00525000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00525100
                   AIF   (T'&ZCGPR NE 'N').ZG81Q  INVALID REG NAME      00525200
.ZG81P             ANOP  ,                                              00525300
                   AIF   (T'&ZCGPR NE 'N').ZG81R  NON NUMERIC           00525400
                   AIF   ('&ZCGPR' LT '2').ZG81Q                        00525500
                   AIF   ('&ZCGPR' LE '12').ZG81R                       00525600
.ZG81Q             ANOP  ,                                              00525700
&ZMS               SETC  '"MSGCNTL='                                    00525800
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00525900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00526000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00526100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00526200
.ZG81R             ANOP  ,                                              00526300
.*----------------------------------------------------------------***   00526400
.***AG.KMGRP05 NAME,  INPUT, ME GROUP -XVARIABLE KEY                    00526500
                   AIF   (N'&MSGBUF LE 1).ZG82A  CK NUM                 00526600
&ZMS               SETC  '"MSGBUF='                                     00526700
&ZMS               SETC  '&ZMS.&MSGBUF"'                                00526800
&ZMS               SETC  '&ZMS "MSGBUF"'                                00526900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00527000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00527100
.ZG82A             ANOP  ,                                              00527200
.*-------------------------------------------------------------------   00527300
.***AG.KMGRP06 NAME,  INPUT, ME GROUP -XVARIABLE                        00527400
&ZXMSGBUF          SETC  'INPUT'     SET IN/OUTPUT                      00527500
&XMSGBUF           SETC  '&MSGBUF(1)'           SET XVARIABLE           00527600
                   AIF   (N'&MSGBUF GT 1).ZG82B                         00527700
&XMSGBUF           SETC  '&MSGBUF'   SET XVARIABLE                      00527800
.ZG82B             AIF   (K'&MSGBUF(1) GT 0).ZG82C                      00527900
&ZXMSGBUF          SETC  ''          RESET IN/OUTPUT                    00528000
.ZG82C             ANOP  ,                                              00528100
.*-------------------------------------------------------------------   00528200
.***AG.KCK02 NAME,  INPUT, ME GROUP -GPR OUT OF RANGE                   00528300
                   AIF   (K'&ZXMSGBUF LE 0).ZG82R  NOT I/O              00528400
                   AIF   ('&XMSGBUF'(1,1) NE '(').ZG82R                 00528500
&ZCGPR             SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                     00528600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                   00528700
                   AIF   (K'&ZCGPR GT 2).ZG82Q                          00528800
                   AIF   ('&ZCGPR' EQ '0').ZG82Q                        00528900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00529000
                   AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME      00529100
.ZG82P             ANOP  ,                                              00529200
                   AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC           00529300
                   AIF   ('&ZCGPR' LT '2').ZG82Q                        00529400
                   AIF   ('&ZCGPR' LE '12').ZG82R                       00529500
.ZG82Q             ANOP  ,                                              00529600
&ZMS               SETC  '"MSGBUF='                                     00529700
&ZMS               SETC  '&ZMS.&MSGBUF"'                                00529800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00529900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00530000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00530100
.ZG82R             ANOP  ,                                              00530200
.*----------------------------------------------------------------***   00530300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00530400
                   AIF   (N'&MSGLEN LE 1).ZG84A  CK NUM                 00530500
&ZMS               SETC  '"MSGLEN='                                     00530600
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00530700
&ZMS               SETC  '&ZMS "MSGLEN"'                                00530800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00530900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00531000
.ZG84A             ANOP  ,                                              00531100
.*-------------------------------------------------------------------   00531200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00531300
&ZXMSGLEN          SETC  'INPUT'     SET IN/OUTPUT                      00531400
&XMSGLEN           SETC  '&MSGLEN(1)'           SET XVARIABLE           00531500
                   AIF   (N'&MSGLEN GT 1).ZG84B  MULTI                  00531600
&XMSGLEN           SETC  '&MSGLEN'   SET XVARIABLE                      00531700
.ZG84B             AIF   (K'&MSGBUF(1) GT 0).ZG84C  KEY                 00531800
                   AIF   (K'&MSGLEN(1) LE 0).ZG84D  PARM                00531900
&ZMS               SETC  '"MSGLEN'                                      00532000
&ZMS               SETC  '&ZMS.=&MSGLEN"'                               00532100
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00532200
&ZMS               SETC  '&ZMS '                                        00532300
&ZMS               SETC  '&ZMS "MSGBUF"'                                00532400
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00532500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00532600
                   AGO   .ZG84E                                         00532700
.*                                                                      00532800
.ZG84C             AIF   (K'&MSGLEN(1) GT 0).ZG84E  PARM                00532900
                   AIF   (T'&XMSGBUF EQ 'O').ZG84E  OMITTED             00533000
&ZXMSGLEN          SETC  ''          RESET IN/OUTPUT                    00533100
&ZMS               SETC  ' '                                            00533200
&ZMS               SETC  '&ZMS "MSGLEN" KEY AND ITS'                    00533300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00533400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00533500
.ZG84D             ANOP  ,                                              00533600
&XMSGLEN           SETC  '0'         SET DEFAULT                        00533700
.ZG84E             ANOP  ,                                              00533800
                   AIF   (K'&MSGLEN(1) GT 0).ZG84F  SPECIFIED           00533900
&ZXMSGLEN          SETC  ''          RESET IN/OUTPUT                    00534000
.ZG84F             ANOP  ,                                              00534100
.*-------------------------------------------------------------------   00534200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00534300
                   AIF   (K'&ZXMSGLEN LE 0).ZG84R  NOT I/O              00534400
                   AIF   ('&XMSGLEN'(1,1) NE '(').ZG84R                 00534500
&ZCGPR             SETC  '&XMSGLEN'(2,K'&XMSGLEN-2)                     00534600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG84P                   00534700
                   AIF   (K'&ZCGPR GT 2).ZG84Q                          00534800
                   AIF   ('&ZCGPR' EQ '0').ZG84Q                        00534900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00535000
                   AIF   (T'&ZCGPR NE 'N').ZG84Q  INVALID REG NAME      00535100
.ZG84P             ANOP  ,                                              00535200
                   AIF   (T'&ZCGPR NE 'N').ZG84R  NON NUMERIC           00535300
                   AIF   ('&ZCGPR' LT '2').ZG84Q                        00535400
                   AIF   ('&ZCGPR' LE '12').ZG84R                       00535500
.ZG84Q             ANOP  ,                                              00535600
&ZMS               SETC  '"MSGLEN='                                     00535700
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00535800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00535900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00536000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00536100
.ZG84R             ANOP  ,                                              00536200
.*-------------------------------------------------------------------   00536300
.***AG.KMGRP11 NAME,  INPUT, ME GROUP -AT LEAST ONE SPECIFIED           00536400
&ZCVAL             SETC ''           ERROR KEY FIELD                    00536500
                   AIF   (K'&XMSGCNTL GT 0).ZG86J                       00536600
&ZCVAL             SETC '&ZCVAL,MSGCNTL'        NOT USED KEY            00536700
                   AIF   (K'&XMSGBUF GT 0).ZG86J                        00536800
&ZCVAL             SETC '&ZCVAL,MSGBUF'         NOT USED KEY            00536900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00537000
&ZMS               SETC  'ONE OR MORE OF THE'                           00537100
&ZMS               SETC  '&ZMS FOLLOWING KEY(S) IS REQUIRED: '          00537200
&ZMS               SETC  '&ZMS "MSGCNTL",'                              00537300
                   MNOTE 8,' &ZMS " MSGBUF".'                           00537400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00537500
.ZG86J             ANOP  ,                                              00537600
.ZG86K             ANOP  ,                                              00537700
.*-------------------------------------------------------------------   00537800
.***AG.KCK02 NAME,  INPUT, ME GROUP -GPR OUT OF RANGE                   00537900
                   AIF   (K'&ZXMSGLEN LE 0).ZG86R  NOT I/O              00538000
                   AIF   ('&XMSGLEN'(1,1) NE '(').ZG86R                 00538100
&ZCGPR             SETC  '&XMSGLEN'(2,K'&XMSGLEN-2)                     00538200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                   00538300
                   AIF   (K'&ZCGPR GT 2).ZG86Q                          00538400
                   AIF   ('&ZCGPR' EQ '0').ZG86Q                        00538500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00538600
                   AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME      00538700
.ZG86P             ANOP  ,                                              00538800
                   AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC           00538900
                   AIF   ('&ZCGPR' LT '2').ZG86Q                        00539000
                   AIF   ('&ZCGPR' LE '12').ZG86R                       00539100
.ZG86Q             ANOP  ,                                              00539200
&ZMS               SETC  '"MSGLEN='                                     00539300
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00539400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00539500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00539600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00539700
.ZG86R             ANOP  ,                                              00539800
.*-------------------------------------------------------------------   00539900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00540000
.ZG87              ANOP  ,                                              00540100
&ZTLC              SETC 'YES'                                           00540200
                   AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG133             00540300
&XMULTIPART        SETC  'YES'       SET KEYWORD                        00540400
                   AIF   (N'&MULTIPART LE 1).ZG87A  CK NUM              00540500
&ZMS               SETC  '"MULTIPART='                                  00540600
&ZMS               SETC  '&ZMS.&MULTIPART"'                             00540700
&ZMS               SETC  '&ZMS "MULTIPART"'                             00540800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00540900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00541000
.ZG87A             ANOP  ,                                              00541100
.*------------------------------------------------------------------    00541200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00541300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00541400
.ZG87A0            AIF   (K'&MSGBUF LE 0).ZG87A1  OK                    00541500
&ZCVAL             SETC '&ZCVAL MSGBUF'         INCORRECT KEY USED      00541600
.ZG87A1            AIF   (K'&ZCVAL LE 0).ZG87A2  OK                     00541700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00541800
&ZMS               SETC  '"MULTIPART'                                   00541900
&ZMS               SETC  '&ZMS.=&MULTIPART"'                            00542000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00542100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00542200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00542300
.ZG87A2            ANOP  ,                                              00542400
.*----------------------------------------------------------------***   00542500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00542600
                   AIF   (N'&MSGCNTL LE 1).ZG89A  CK NUM                00542700
&ZMS               SETC  '"MSGCNTL='                                    00542800
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00542900
&ZMS               SETC  '&ZMS "MSGCNTL"'                               00543000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00543100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00543200
.ZG89A             ANOP  ,                                              00543300
.*-------------------------------------------------------------------   00543400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00543500
&ZXMSGCNTL         SETC  'INPUT'     SET IN/OUTPUT                      00543600
&XMSGCNTL          SETC  'ALLZERO'                                      00543700
                   AIF   (K'&MSGCNTL(1) LE 0).ZG89B  PARM               00543800
&XMSGCNTL          SETC  '&MSGCNTL(1)'          SET XVARIABLE           00543900
                   AIF   (N'&MSGCNTL GT 1).ZG89B  MULTI                 00544000
&XMSGCNTL          SETC  '&MSGCNTL'  SET XVARIABLE                      00544100
.ZG89B             ANOP  ,                                              00544200
.*-------------------------------------------------------------------   00544300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00544400
                   AIF   (K'&ZXMSGCNTL LE 0).ZG89R  NOT I/O             00544500
         AIF   ('&XMSGCNTL' EQ 'ALLZERO').ZG89R                         00544600
                   AIF   ('&XMSGCNTL'(1,1) NE '(').ZG89R                00544700
&ZCGPR             SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                   00544800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                   00544900
                   AIF   (K'&ZCGPR GT 2).ZG89Q                          00545000
                   AIF   ('&ZCGPR' EQ '0').ZG89Q                        00545100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00545200
                   AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME      00545300
.ZG89P             ANOP  ,                                              00545400
                   AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC           00545500
                   AIF   ('&ZCGPR' LT '2').ZG89Q                        00545600
                   AIF   ('&ZCGPR' LE '12').ZG89R                       00545700
.ZG89Q             ANOP  ,                                              00545800
&ZMS               SETC  '"MSGCNTL='                                    00545900
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00546000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00546100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00546200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00546300
.ZG89R             ANOP  ,                                              00546400
.*----------------------------------------------------------------***   00546500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00546600
                   AIF   (N'&MSGLEN LE 1).ZG92A  CK NUM                 00546700
&ZMS               SETC  '"MSGLEN='                                     00546800
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00546900
&ZMS               SETC  '&ZMS "MSGLEN"'                                00547000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00547100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00547200
.ZG92A             ANOP  ,                                              00547300
.*-------------------------------------------------------------------   00547400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00547500
&ZXMSGLEN          SETC  'INPUT'     SET IN/OUTPUT                      00547600
&XMSGLEN           SETC  'SUMPARTLENS'                                  00547700
                   AIF   (K'&MSGLEN(1) LE 0).ZG92B  PARM                00547800
&XMSGLEN           SETC  '&MSGLEN(1)'           SET XVARIABLE           00547900
                   AIF   (N'&MSGLEN GT 1).ZG92B  MULTI                  00548000
&XMSGLEN           SETC  '&MSGLEN'   SET XVARIABLE                      00548100
.ZG92B             ANOP  ,                                              00548200
.*-------------------------------------------------------------------   00548300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00548400
                   AIF   (K'&ZXMSGLEN LE 0).ZG92R  NOT I/O              00548500
         AIF   ('&XMSGLEN' EQ 'SUMPARTLENS').ZG92R                      00548600
                   AIF   ('&XMSGLEN'(1,1) NE '(').ZG92R                 00548700
&ZCGPR             SETC  '&XMSGLEN'(2,K'&XMSGLEN-2)                     00548800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG92P                   00548900
                   AIF   (K'&ZCGPR GT 2).ZG92Q                          00549000
                   AIF   ('&ZCGPR' EQ '0').ZG92Q                        00549100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00549200
                   AIF   (T'&ZCGPR NE 'N').ZG92Q  INVALID REG NAME      00549300
.ZG92P             ANOP  ,                                              00549400
                   AIF   (T'&ZCGPR NE 'N').ZG92R  NON NUMERIC           00549500
                   AIF   ('&ZCGPR' LT '2').ZG92Q                        00549600
                   AIF   ('&ZCGPR' LE '12').ZG92R                       00549700
.ZG92Q             ANOP  ,                                              00549800
&ZMS               SETC  '"MSGLEN='                                     00549900
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00550000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00550100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00550200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00550300
.ZG92R             ANOP  ,                                              00550400
.*----------------------------------------------------------------***   00550500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00550600
                   AIF   (N'&#MSGPARTS LE 1).ZG95A  CK NUM              00550700
&ZMS               SETC  '"#MSGPARTS='                                  00550800
&ZMS               SETC  '&ZMS.&#MSGPARTS"'                             00550900
&ZMS               SETC  '&ZMS "#MSGPARTS"'                             00551000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00551100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00551200
.ZG95A             ANOP  ,                                              00551300
.*-------------------------------------------------------------------   00551400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00551500
&ZX#MSGPARTS       SETC  'INPUT'     SET IN/OUTPUT                      00551600
&X#MSGPARTS        SETC  'ATLEASTONE'                                   00551700
                   AIF   (K'&#MSGPARTS(1) LE 0).ZG95B  PARM             00551800
&X#MSGPARTS        SETC  '&#MSGPARTS(1)'        SET XVARIABLE           00551900
                   AIF   (N'&#MSGPARTS GT 1).ZG95B  MULTI               00552000
&X#MSGPARTS        SETC  '&#MSGPARTS'           SET XVARIABLE           00552100
.ZG95B             ANOP  ,                                              00552200
.*-------------------------------------------------------------------   00552300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00552400
                   AIF   (K'&ZX#MSGPARTS LE 0).ZG95R  NOT I/O           00552500
         AIF   ('&X#MSGPARTS' EQ 'ATLEASTONE').ZG95R                    00552600
                   AIF   ('&X#MSGPARTS'(1,1) NE '(').ZG95R              00552700
&ZCGPR             SETC  '&X#MSGPARTS'(2,K'&X#MSGPARTS-2)               00552800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG95P                   00552900
                   AIF   (K'&ZCGPR GT 2).ZG95Q                          00553000
                   AIF   ('&ZCGPR' EQ '0').ZG95Q                        00553100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00553200
                   AIF   (T'&ZCGPR NE 'N').ZG95Q  INVALID REG NAME      00553300
.ZG95P             ANOP  ,                                              00553400
                   AIF   (T'&ZCGPR NE 'N').ZG95R  NON NUMERIC           00553500
                   AIF   ('&ZCGPR' LT '2').ZG95Q                        00553600
                   AIF   ('&ZCGPR' LE '12').ZG95R                       00553700
.ZG95Q             ANOP  ,                                              00553800
&ZMS               SETC  '"#MSGPARTS='                                  00553900
&ZMS               SETC  '&ZMS.&#MSGPARTS"'                             00554000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00554100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00554200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00554300
.ZG95R             ANOP  ,                                              00554400
.*----------------------------------------------------------------***   00554500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00554600
                   AIF   (N'&ELEMENT LE 1).ZG98A  CK NUM                00554700
&ZMS               SETC  '"ELEMENT='                                    00554800
&ZMS               SETC  '&ZMS.&ELEMENT"'                               00554900
&ZMS               SETC  '&ZMS "ELEMENT"'                               00555000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00555100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00555200
.ZG98A             ANOP  ,                                              00555300
.*-------------------------------------------------------------------   00555400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00555500
&ZXELEMENT         SETC  'INPUT'     SET IN/OUTPUT                      00555600
&XELEMENT          SETC  '&ELEMENT(1)'          SET XVARIABLE           00555700
                   AIF   (N'&ELEMENT GT 1).ZG98B  MULTI                 00555800
&XELEMENT          SETC  '&ELEMENT'  SET XVARIABLE                      00555900
.ZG98B             AIF   (K'&ELEMENT(1) GT 0).ZG98C                     00556000
&ZXELEMENT         SETC  ''          RESET IN/OUTPUT                    00556100
&ZMS               SETC  ' '                                            00556200
&ZMS               SETC  '&ZMS "ELEMENT" KEY AND ITS'                   00556300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00556400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00556500
.ZG98C             ANOP  ,                                              00556600
.*-------------------------------------------------------------------   00556700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00556800
                   AIF   (K'&ZXELEMENT LE 0).ZG98R  NOT I/O             00556900
                   AIF   ('&XELEMENT'(1,1) NE '(').ZG98R                00557000
&ZCGPR             SETC  '&XELEMENT'(2,K'&XELEMENT-2)                   00557100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                   00557200
                   AIF   (K'&ZCGPR GT 2).ZG98Q                          00557300
                   AIF   ('&ZCGPR' EQ '0').ZG98Q                        00557400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00557500
                   AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME      00557600
.ZG98P             ANOP  ,                                              00557700
                   AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC           00557800
                   AIF   ('&ZCGPR' LT '2').ZG98Q                        00557900
                   AIF   ('&ZCGPR' LE '12').ZG98R                       00558000
.ZG98Q             ANOP  ,                                              00558100
&ZMS               SETC  '"ELEMENT='                                    00558200
&ZMS               SETC  '&ZMS.&ELEMENT"'                               00558300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00558400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00558500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00558600
.ZG98R             ANOP  ,                                              00558700
.*----------------------------------------------------------------***   00558800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00558900
                   AIF   (N'&ELEMADDRMODE LE 1).ZG100A  CK NUM          00559000
&ZMS               SETC  '"ELEMADDRMODE='                               00559100
&ZMS               SETC  '&ZMS.&ELEMADDRMODE"'                          00559200
&ZMS               SETC  '&ZMS "ELEMADDRMODE"'                          00559300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00559400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00559500
.ZG100A            ANOP  ,                                              00559600
.*-------------------------------------------------------------------   00559700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00559800
&XELEMADDRMODE     SETC  ''          INITIALIZE XVARIABLE               00559900
.ZG101A   AIF   ('&ELEMADDRMODE(1)' NE '31').ZG102A                     00560000
&XELEMADDRMODE     SETC  '31'        SET KEYWORD                        00560100
.*-------------------------------------------------------------------   00560200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00560300
.ZG102A   AIF   ('&ELEMADDRMODE(1)' NE '64').ZG103A                     00560400
&XELEMADDRMODE     SETC  '64'        SET KEYWORD                        00560500
.*-------------------------------------------------------------------   00560600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00560700
.ZG103A            AIF   (K'&XELEMADDRMODE GT 0).ZG103C  KEYWORD        00560800
                   AIF   (K'&ELEMADDRMODE(1) LE 0).ZG103B               00560900
&ZMS               SETC  '"ELEMADDRMODE='                               00561000
&ZMS               SETC  '&ZMS.&ELEMADDRMODE"'                          00561100
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00561200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00561300
&ZMS               SETC  '&ZMS "31"'                                    00561400
&ZMS               SETC  '&ZMS OR "64".'                                00561500
                   MNOTE 8,' &ZMS '                                     00561600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00561700
.ZG103B            ANOP  ,                                              00561800
&XELEMADDRMODE     SETC  '31'        SET DEFAULT KEYWORD                00561900
.ZG103C            ANOP  ,                                              00562000
&ZXELEMADDRMODE    SETC  'INPUT'     SET IN/OUTPUT                      00562100
.*-------------------------------------------------------------------   00562200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00562300
                   AIF   (K'&ELEMENT(1) GT 0).ZG103D  KEY               00562400
                   AIF   (K'&ELEMADDRMODE(1) LE 0).ZG103D  PARM         00562500
&ZMS               SETC  '"ELEMADDRMODE'                                00562600
&ZMS               SETC  '&ZMS.=&ELEMADDRMODE"'                         00562700
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00562800
&ZMS               SETC  '&ZMS '                                        00562900
&ZMS               SETC  '&ZMS "ELEMENT"'                               00563000
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00563100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00563200
.ZG103D            ANOP  ,                                              00563300
.*------------------------------------------------------------------    00563400
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00563500
&XELEMFORM         SETC  ''          INITIALIZE XVARIABLE               00563600
.*-------------------------------------------------------------------   00563700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00563800
.ZG107             ANOP  ,                                              00563900
                   AIF   (K'&ELEMFORM(1) LE 0).ZG107A                   00564000
&ZTLC              SETC 'TABLE'                                         00564100
                   AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG111              00564200
&XELEMFORM         SETC  'TABLE'     SET KEYWORD                        00564300
                   AIF   (N'&ELEMFORM LE 1).ZG107A  CK NUM              00564400
&ZMS               SETC  '"ELEMFORM='                                   00564500
&ZMS               SETC  '&ZMS.&ELEMFORM"'                              00564600
&ZMS               SETC  '&ZMS "ELEMFORM"'                              00564700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00564800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00564900
.ZG107A            ANOP  ,                                              00565000
.*------------------------------------------------------------------    00565100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00565200
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00565300
.ZG107A0           AIF   (K'&NEXTPTROFF LE 0).ZG107A1  OK               00565400
&ZCVAL             SETC '&ZCVAL NEXTPTROFF'     INCORRECT KEY USED      00565500
.ZG107A1           AIF   (K'&ENDOFQUEUE LE 0).ZG107A2  OK               00565600
&ZCVAL             SETC '&ZCVAL ENDOFQUEUE'     INCORRECT KEY USED      00565700
.ZG107A2           AIF   (K'&ZCVAL LE 0).ZG107A3  OK                    00565800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00565900
&ZMS               SETC  '"ELEMFORM'                                    00566000
&ZMS               SETC  '&ZMS.=&ELEMFORM"'                             00566100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00566200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00566300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00566400
.ZG107A3           ANOP  ,                                              00566500
.*----------------------------------------------------------------***   00566600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00566700
                   AIF   (N'&NEXTOFF LE 1).ZG109A  CK NUM               00566800
&ZMS               SETC  '"NEXTOFF='                                    00566900
&ZMS               SETC  '&ZMS.&NEXTOFF"'                               00567000
&ZMS               SETC  '&ZMS "NEXTOFF"'                               00567100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00567200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00567300
.ZG109A            ANOP  ,                                              00567400
.*-------------------------------------------------------------------   00567500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00567600
&ZXNEXTOFF         SETC  'INPUT'     SET IN/OUTPUT                      00567700
&XNEXTOFF          SETC  '&NEXTOFF(1)'          SET XVARIABLE           00567800
                   AIF   (N'&NEXTOFF GT 1).ZG109B  MULTI                00567900
&XNEXTOFF          SETC  '&NEXTOFF'  SET XVARIABLE                      00568000
.ZG109B            AIF   (K'&NEXTOFF(1) GT 0).ZG109C                    00568100
&ZXNEXTOFF         SETC  ''          RESET IN/OUTPUT                    00568200
&ZMS               SETC  'WHEN "TABLE" IS SPECIFIED'                    00568300
&ZMS               SETC  '&ZMS , "NEXTOFF" KEY AND ITS'                 00568400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00568500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00568600
.ZG109C            ANOP  ,                                              00568700
.*-------------------------------------------------------------------   00568800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00568900
                   AIF   (K'&ZXNEXTOFF LE 0).ZG109R  NOT I/O            00569000
                   AIF   ('&XNEXTOFF'(1,1) NE '(').ZG109R               00569100
&ZCGPR             SETC  '&XNEXTOFF'(2,K'&XNEXTOFF-2)                   00569200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG109P                  00569300
                   AIF   (K'&ZCGPR GT 2).ZG109Q                         00569400
                   AIF   ('&ZCGPR' EQ '0').ZG109Q                       00569500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00569600
                   AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME     00569700
.ZG109P            ANOP  ,                                              00569800
                   AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC          00569900
                   AIF   ('&ZCGPR' LT '2').ZG109Q                       00570000
                   AIF   ('&ZCGPR' LE '12').ZG109R                      00570100
.ZG109Q            ANOP  ,                                              00570200
&ZMS               SETC  '"NEXTOFF='                                    00570300
&ZMS               SETC  '&ZMS.&NEXTOFF"'                               00570400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00570500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00570600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00570700
.ZG109R            ANOP  ,                                              00570800
.*-------------------------------------------------------------------   00570900
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00571000
.ZG111             ANOP  ,                                              00571100
&ZTLC              SETC 'QUEUE'                                         00571200
                   AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG118              00571300
&XELEMFORM         SETC  'QUEUE'     SET KEYWORD                        00571400
                   AIF   (N'&ELEMFORM LE 1).ZG111A  CK NUM              00571500
&ZMS               SETC  '"ELEMFORM='                                   00571600
&ZMS               SETC  '&ZMS.&ELEMFORM"'                              00571700
&ZMS               SETC  '&ZMS "ELEMFORM"'                              00571800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00571900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00572000
.ZG111A            ANOP  ,                                              00572100
.*------------------------------------------------------------------    00572200
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00572300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00572400
.ZG111A0           AIF   (K'&NEXTOFF LE 0).ZG111A1  OK                  00572500
&ZCVAL             SETC '&ZCVAL NEXTOFF'        INCORRECT KEY USED      00572600
.ZG111A1           AIF   (K'&ZCVAL LE 0).ZG111A2  OK                    00572700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00572800
&ZMS               SETC  '"ELEMFORM'                                    00572900
&ZMS               SETC  '&ZMS.=&ELEMFORM"'                             00573000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00573100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00573200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00573300
.ZG111A2           ANOP  ,                                              00573400
.*----------------------------------------------------------------***   00573500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00573600
                   AIF   (N'&NEXTPTROFF LE 1).ZG113A  CK NUM            00573700
&ZMS               SETC  '"NEXTPTROFF='                                 00573800
&ZMS               SETC  '&ZMS.&NEXTPTROFF"'                            00573900
&ZMS               SETC  '&ZMS "NEXTPTROFF"'                            00574000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00574100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00574200
.ZG113A            ANOP  ,                                              00574300
.*-------------------------------------------------------------------   00574400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00574500
&ZXNEXTPTROFF      SETC  'INPUT'     SET IN/OUTPUT                      00574600
&XNEXTPTROFF       SETC  '&NEXTPTROFF(1)'       SET XVARIABLE           00574700
                   AIF   (N'&NEXTPTROFF GT 1).ZG113B  MULTI             00574800
&XNEXTPTROFF       SETC  '&NEXTPTROFF'          SET XVARIABLE           00574900
.ZG113B            AIF   (K'&NEXTPTROFF(1) GT 0).ZG113C                 00575000
&ZXNEXTPTROFF      SETC  ''          RESET IN/OUTPUT                    00575100
&ZMS               SETC  'WHEN "QUEUE" IS SPECIFIED'                    00575200
&ZMS               SETC  '&ZMS , "NEXTPTROFF" KEY AND ITS'              00575300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00575400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00575500
.ZG113C            ANOP  ,                                              00575600
.*-------------------------------------------------------------------   00575700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00575800
                   AIF   (K'&ZXNEXTPTROFF LE 0).ZG113R  NOT I/O         00575900
                   AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZG113R            00576000
&ZCGPR             SETC  '&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2)             00576100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG113P                  00576200
                   AIF   (K'&ZCGPR GT 2).ZG113Q                         00576300
                   AIF   ('&ZCGPR' EQ '0').ZG113Q                       00576400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00576500
                   AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME     00576600
.ZG113P            ANOP  ,                                              00576700
                   AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC          00576800
                   AIF   ('&ZCGPR' LT '2').ZG113Q                       00576900
                   AIF   ('&ZCGPR' LE '12').ZG113R                      00577000
.ZG113Q            ANOP  ,                                              00577100
&ZMS               SETC  '"NEXTPTROFF='                                 00577200
&ZMS               SETC  '&ZMS.&NEXTPTROFF"'                            00577300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00577400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00577500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00577600
.ZG113R            ANOP  ,                                              00577700
.*----------------------------------------------------------------***   00577800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00577900
                   AIF   (N'&ENDOFQUEUE LE 1).ZG116A  CK NUM            00578000
&ZMS               SETC  '"ENDOFQUEUE='                                 00578100
&ZMS               SETC  '&ZMS.&ENDOFQUEUE"'                            00578200
&ZMS               SETC  '&ZMS "ENDOFQUEUE"'                            00578300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00578400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00578500
.ZG116A            ANOP  ,                                              00578600
.*-------------------------------------------------------------------   00578700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00578800
&ZXENDOFQUEUE      SETC  'INPUT'     SET IN/OUTPUT                      00578900
&XENDOFQUEUE       SETC  'ZERO'                                         00579000
                   AIF   (K'&ENDOFQUEUE(1) LE 0).ZG116B  PARM           00579100
&XENDOFQUEUE       SETC  '&ENDOFQUEUE(1)'       SET XVARIABLE           00579200
                   AIF   (N'&ENDOFQUEUE GT 1).ZG116B  MULTI             00579300
&XENDOFQUEUE       SETC  '&ENDOFQUEUE'          SET XVARIABLE           00579400
.ZG116B            ANOP  ,                                              00579500
.*-------------------------------------------------------------------   00579600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00579700
                   AIF   (K'&ZXENDOFQUEUE LE 0).ZG116R  NOT I/O         00579800
         AIF   ('&XENDOFQUEUE' EQ 'ZERO').ZG116R                        00579900
                   AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZG116R            00580000
&ZCGPR             SETC  '&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2)             00580100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG116P                  00580200
                   AIF   (K'&ZCGPR GT 2).ZG116Q                         00580300
                   AIF   ('&ZCGPR' EQ '0').ZG116Q                       00580400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00580500
                   AIF   (T'&ZCGPR NE 'N').ZG116Q  INVALID REG NAME     00580600
.ZG116P            ANOP  ,                                              00580700
                   AIF   (T'&ZCGPR NE 'N').ZG116R  NON NUMERIC          00580800
                   AIF   ('&ZCGPR' LT '2').ZG116Q                       00580900
                   AIF   ('&ZCGPR' LE '12').ZG116R                      00581000
.ZG116Q            ANOP  ,                                              00581100
&ZMS               SETC  '"ENDOFQUEUE='                                 00581200
&ZMS               SETC  '&ZMS.&ENDOFQUEUE"'                            00581300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00581400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00581500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00581600
.ZG116R            ANOP  ,                                              00581700
.*------------------------------------------------------------------    00581800
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00581900
.ZG118             ANOP  ,                                              00582000
&ZXELEMFORM        SETC  'INPUT'     SET IN/OUTPUT                      00582100
                   AIF   (K'&XELEMFORM GT 0).ZG118E  VALID ARG          00582200
                   AIF   (T'&ELEMFORM EQ 'O').ZG118D  OMITTED           00582300
&ZASYSLNDX         SETA  0                                              00582400
.ZG118A            ANOP  ,           POSITIONAL MACRO KEY               00582500
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00582600
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG118C              00582700
&ZTLC              SETC 'ELEMFORM'                                      00582800
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG118A     00582900
.ZG118B            ANOP  ,                                              00583000
&ZXELEMFORM        SETC  ''          RESET IN/OUTPUT                    00583100
&ZMS               SETC  'THE "ELEMFORM" KEY'                           00583200
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00583300
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00583400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00583500
                   AGO   .ZG118E                                        00583600
.ZG118C            ANOP  ,                                              00583700
&ZXELEMFORM        SETC  ''          RESET IN/OUTPUT                    00583800
&ZMS               SETC  '"ELEMFORM='                                   00583900
&ZMS               SETC  '&ZMS.&ELEMFORM"'                              00584000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00584100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00584200
&ZMS               SETC  '&ZMS "TABLE"'                                 00584300
&ZMS               SETC  '&ZMS OR "QUEUE".'                             00584400
                   MNOTE 8,' &ZMS '                                     00584500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00584600
                   AGO   .ZG118E                                        00584700
.ZG118D            ANOP  ,                                              00584800
&XELEMFORM         SETC  'TABLE'     SET DEFAULT KEYWORD                00584900
.ZG118E            ANOP  ,                                              00585000
.*------------------------------------------------------------------    00585100
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00585200
                   AIF   (K'&ELEMFORM(1) GT 0).ZG118F  PARM             00585300
&XELEMFORM         SETC  ''          ENSURE NULL KEYWORD                00585400
&ZXELEMFORM        SETC  ''          RESET IN/OUTPUT                    00585500
&ZMS               SETC  'THE'                                          00585600
&ZMS               SETC  '&ZMS "ELEMFORM" KEY AND ITS'                  00585700
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00585800
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00585900
&ZMS               SETC  '&ZMS "TABLE"'                                 00586000
&ZMS               SETC  '&ZMS OR "QUEUE".'                             00586100
                   MNOTE 8,' &ZMS '                                     00586200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00586300
.ZG118F            ANOP  ,                                              00586400
.*----------------------------------------------------------------***   00586500
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00586600
&XPARTMODE         SETC  ''          INITIALIZE XVARIABLE               00586700
                   AIF   (K'&PARTOFF LE 0).ZG120C                       00586800
&ZXPARTMODE        SETC  'INPUT'     SET IN/OUTPUT                      00586900
&XPARTMODE         SETC  'PARTOFF'   SET XVARIABLE                      00587000
&ZXPARTOFF         SETC  'INPUT'     SET IN/OUTPUT                      00587100
&XPARTOFF          SETC  '&PARTOFF(1)'          SET XVARIABLE PARM      00587200
                   AIF   (N'&PARTOFF GT 1).ZG120A                       00587300
&XPARTOFF          SETC  '&PARTOFF'  SET XVARIABLE PARM                 00587400
.ZG120A            AIF   (N'&PARTOFF LE 1).ZG120B  CK NUM               00587500
&ZMS               SETC  '"PARTOFF='                                    00587600
&ZMS               SETC  '&ZMS.&PARTOFF"'                               00587700
&ZMS               SETC  '&ZMS "PARTOFF"'                               00587800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00587900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00588000
.ZG120B            AIF   (K'&XPARTOFF GT 0).ZG120C  ONE PARM            00588100
&ZXPARTMODE        SETC  ''          RESET IN/OUTPUT                    00588200
&ZXPARTOFF         SETC  ''          RESET IN/OUTPUT                    00588300
&ZMS               SETC  ' '                                            00588400
&ZMS               SETC  '&ZMS "PARTOFF" KEY AND ITS'                   00588500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00588600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00588700
.ZG120C            ANOP  ,                                              00588800
.*----------------------------------------------------------------***   00588900
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00589000
                   AIF   (K'&PARTPTROFF LE 0).ZG121D  NO ME KEY         00589100
                   AIF   (N'&PARTPTROFF LE 1).ZG121A  CK NUM            00589200
&ZMS               SETC  '"PARTPTROFF='                                 00589300
&ZMS               SETC  '&ZMS.&PARTPTROFF"'                            00589400
&ZMS               SETC  '&ZMS "PARTPTROFF"'                            00589500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00589600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00589700
.ZG121A            AIF   (K'&XPARTMODE LE 0).ZG121B                     00589800
&ZMS               SETC  '"PARTPTROFF'                                  00589900
&ZMS               SETC  '&ZMS.=&PARTPTROFF"'                           00590000
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00590100
&ZMS               SETC  '&ZMS "&XPARTMODE"'                            00590200
                   MNOTE 8,' &ZMS KEY.'                                 00590300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00590400
                   AGO   .ZG121D                                        00590500
.*                                                                      00590600
.ZG121B            ANOP  ,                                              00590700
&ZXPARTMODE        SETC  'INPUT'     SET IN/OUTPUT                      00590800
&XPARTMODE         SETC  'PARTPTROFF'           SET XVARIABLE           00590900
&ZXPARTPTROFF      SETC  'INPUT'     SET IN/OUTPUT                      00591000
&XPARTPTROFF       SETC  '&PARTPTROFF(1)'       SET XVARIABLE PARM      00591100
                   AIF   (N'&PARTPTROFF GT 1).ZG121C                    00591200
&XPARTPTROFF       SETC  '&PARTPTROFF'          SET XVARIABLE PARM      00591300
.ZG121C            AIF   (K'&XPARTPTROFF GT 0).ZG121D  ONE PARM         00591400
&ZXPARTMODE        SETC  ''          RESET IN/OUTPUT                    00591500
&ZXPARTPTROFF      SETC  ''          RESET IN/OUTPUT                    00591600
&ZMS               SETC  ' '                                            00591700
&ZMS               SETC  '&ZMS "PARTPTROFF" KEY AND ITS'                00591800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00591900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00592000
.ZG121D            ANOP  ,                                              00592100
.*------------------------------------------------------------------    00592200
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00592300
                   AIF   (K'&XPARTMODE GT 0).ZG127B                     00592400
&ZXPARTMODE        SETC  ''          RESET IN/OUTPUT                    00592500
&ZXPARTOFF         SETC  ''          RESET IN/OUTPUT                    00592600
&XPARTMODE         SETC  ''          ENSURE NULL                        00592700
&XPARTOFF          SETC  ''          ENSURE NULL                        00592800
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00592900
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00593000
&ZMS               SETC  '&ZMS REQUIRED:'                               00593100
&ZMS               SETC  '&ZMS "PARTOFF"'       VALID ME KEY            00593200
&ZMS               SETC  '&ZMS OR "PARTPTROFF".'  VALID ME KEY          00593300
                   MNOTE 8,' &ZMS '                                     00593400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00593500
.ZG127B            ANOP  ,                                              00593600
.*-------------------------------------------------------------------   00593700
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00593800
.ZG120ZY  AIF    ('&XPARTMODE' NE 'PARTOFF').ZG121ZY                    00593900
.*-------------------------------------------------------------------   00594000
.***AG.KMEKY14 NAME, OPT RQD INPUT, ME KEYS -DISALLOWED KEYS            00594100
&ZCVAL             SETC ''           ERROR KEY FIELD                    00594200
.ZG120I0           AIF   (K'&PARTALET LE 0).ZG120I1                     00594300
&ZCVAL             SETC '&ZCVAL PARTALET'       DISALLOWED KEY          00594400
.ZG120I1           AIF   (K'&PARTALETOFF LE 0).ZG120I2                  00594500
&ZCVAL             SETC '&ZCVAL PARTALETOFF'    DISALLOWED KEY          00594600
.ZG120I2           AIF   (K'&PARTALETTBL LE 0).ZG120I3                  00594700
&ZCVAL             SETC '&ZCVAL PARTALETTBL'    DISALLOWED KEY          00594800
.ZG120I3           AIF   (K'&ZCVAL LE 0).ZG120J  KEY                    00594900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00595000
&ZMS               SETC  '"PARTOFF'                                     00595100
&ZMS               SETC  '&ZMS.=&PARTOFF"'                              00595200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00595300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00595400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00595500
.ZG120J            ANOP  ,                                              00595600
.*-------------------------------------------------------------------   00595700
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00595800
                   AIF   (K'&ZXPARTOFF LE 0).ZG120R  NOT I/O            00595900
                   AIF   ('&XPARTOFF'(1,1) NE '(').ZG120R               00596000
&ZCGPR             SETC  '&XPARTOFF'(2,K'&XPARTOFF-2)                   00596100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG120P                  00596200
                   AIF   (K'&ZCGPR GT 2).ZG120Q                         00596300
                   AIF   ('&ZCGPR' EQ '0').ZG120Q                       00596400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00596500
                   AIF   (T'&ZCGPR NE 'N').ZG120Q  INVALID REG NAME     00596600
.ZG120P            ANOP  ,                                              00596700
                   AIF   (T'&ZCGPR NE 'N').ZG120R  NON NUMERIC          00596800
                   AIF   ('&ZCGPR' LT '2').ZG120Q                       00596900
                   AIF   ('&ZCGPR' LE '12').ZG120R                      00597000
.ZG120Q            ANOP  ,                                              00597100
&ZMS               SETC  '"PARTOFF='                                    00597200
&ZMS               SETC  '&ZMS.&PARTOFF"'                               00597300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00597400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00597500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00597600
.ZG120R            ANOP  ,                                              00597700
.*-------------------------------------------------------------------   00597800
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00597900
.ZG121ZY  AIF    ('&XPARTMODE' NE 'PARTPTROFF').ZG127ZY                 00598000
.*-------------------------------------------------------------------   00598100
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00598200
                   AIF   (K'&ZXPARTPTROFF LE 0).ZG121R  NOT I/O         00598300
                   AIF   ('&XPARTPTROFF'(1,1) NE '(').ZG121R            00598400
&ZCGPR             SETC  '&XPARTPTROFF'(2,K'&XPARTPTROFF-2)             00598500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG121P                  00598600
                   AIF   (K'&ZCGPR GT 2).ZG121Q                         00598700
                   AIF   ('&ZCGPR' EQ '0').ZG121Q                       00598800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00598900
                   AIF   (T'&ZCGPR NE 'N').ZG121Q  INVALID REG NAME     00599000
.ZG121P            ANOP  ,                                              00599100
                   AIF   (T'&ZCGPR NE 'N').ZG121R  NON NUMERIC          00599200
                   AIF   ('&ZCGPR' LT '2').ZG121Q                       00599300
                   AIF   ('&ZCGPR' LE '12').ZG121R                      00599400
.ZG121Q            ANOP  ,                                              00599500
&ZMS               SETC  '"PARTPTROFF='                                 00599600
&ZMS               SETC  '&ZMS.&PARTPTROFF"'                            00599700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00599800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00599900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00600000
.ZG121R            ANOP  ,                                              00600100
.*----------------------------------------------------------------***   00600200
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00600300
&XDELLIST3         SETC  ''          INITIALIZE XVARIABLE               00600400
                   AIF   (K'&PARTALET LE 0).ZG123C                      00600500
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00600600
&XDELLIST3         SETC  'PARTALET'  SET XVARIABLE                      00600700
&ZXPARTALET        SETC  'INPUT'     SET IN/OUTPUT                      00600800
&XPARTALET         SETC  '&PARTALET(1)'         SET XVARIABLE PARM      00600900
                   AIF   (N'&PARTALET GT 1).ZG123A                      00601000
&XPARTALET         SETC  '&PARTALET'            SET XVARIABLE PARM      00601100
.ZG123A            AIF   (N'&PARTALET LE 1).ZG123B  CK NUM              00601200
&ZMS               SETC  '"PARTALET='                                   00601300
&ZMS               SETC  '&ZMS.&PARTALET"'                              00601400
&ZMS               SETC  '&ZMS "PARTALET"'                              00601500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00601600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00601700
.ZG123B            AIF   (K'&XPARTALET GT 0).ZG123C  ONE PARM           00601800
&ZXDELLIST3        SETC  ''          RESET IN/OUTPUT                    00601900
&ZXPARTALET        SETC  ''          RESET IN/OUTPUT                    00602000
&ZMS               SETC  'WHEN "PARTPTROFF" IS SPECIFIED'               00602100
&ZMS               SETC  '&ZMS , "PARTALET" KEY AND ITS'                00602200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00602300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00602400
.ZG123C            ANOP  ,                                              00602500
.*----------------------------------------------------------------***   00602600
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00602700
                   AIF   (K'&PARTALETOFF LE 0).ZG124D  NO ME KEY        00602800
                   AIF   (N'&PARTALETOFF LE 1).ZG124A  CK NUM           00602900
&ZMS               SETC  '"PARTALETOFF='                                00603000
&ZMS               SETC  '&ZMS.&PARTALETOFF"'                           00603100
&ZMS               SETC  '&ZMS "PARTALETOFF"'                           00603200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00603300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00603400
.ZG124A            AIF   (K'&XDELLIST3 LE 0).ZG124B                     00603500
&ZMS               SETC  '"PARTALETOFF'                                 00603600
&ZMS               SETC  '&ZMS.=&PARTALETOFF"'                          00603700
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00603800
&ZMS               SETC  '&ZMS "&XDELLIST3"'                            00603900
                   MNOTE 8,' &ZMS KEY.'                                 00604000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00604100
                   AGO   .ZG124D                                        00604200
.*                                                                      00604300
.ZG124B            ANOP  ,                                              00604400
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00604500
&XDELLIST3         SETC  'PARTALETOFF'          SET XVARIABLE           00604600
&ZXPARTALETOFF     SETC  'INPUT'     SET IN/OUTPUT                      00604700
&XPARTALETOFF      SETC  '&PARTALETOFF(1)'      SET XVARIABLE PARM      00604800
                   AIF   (N'&PARTALETOFF GT 1).ZG124C                   00604900
&XPARTALETOFF      SETC  '&PARTALETOFF'         SET XVARIABLE PARM      00605000
.ZG124C            AIF   (K'&XPARTALETOFF GT 0).ZG124D  ONE PARM        00605100
&ZXDELLIST3        SETC  ''          RESET IN/OUTPUT                    00605200
&ZXPARTALETOFF     SETC  ''          RESET IN/OUTPUT                    00605300
&ZMS               SETC  'WHEN "PARTPTROFF" IS SPECIFIED'               00605400
&ZMS               SETC  '&ZMS , "PARTALETOFF" KEY AND ITS'             00605500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00605600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00605700
.ZG124D            ANOP  ,                                              00605800
.*----------------------------------------------------------------***   00605900
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00606000
                   AIF   (K'&PARTALETTBL LE 0).ZG125D  NO ME KEY        00606100
                   AIF   (N'&PARTALETTBL LE 1).ZG125A  CK NUM           00606200
&ZMS               SETC  '"PARTALETTBL='                                00606300
&ZMS               SETC  '&ZMS.&PARTALETTBL"'                           00606400
&ZMS               SETC  '&ZMS "PARTALETTBL"'                           00606500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00606600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00606700
.ZG125A            AIF   (K'&XDELLIST3 LE 0).ZG125B                     00606800
&ZMS               SETC  '"PARTALETTBL'                                 00606900
&ZMS               SETC  '&ZMS.=&PARTALETTBL"'                          00607000
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00607100
&ZMS               SETC  '&ZMS "&XDELLIST3"'                            00607200
                   MNOTE 8,' &ZMS KEY.'                                 00607300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00607400
                   AGO   .ZG125D                                        00607500
.*                                                                      00607600
.ZG125B            ANOP  ,                                              00607700
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00607800
&XDELLIST3         SETC  'PARTALETTBL'          SET XVARIABLE           00607900
&ZXPARTALETTBL     SETC  'INPUT'     SET IN/OUTPUT                      00608000
&XPARTALETTBL      SETC  '&PARTALETTBL(1)'      SET XVARIABLE PARM      00608100
                   AIF   (N'&PARTALETTBL GT 1).ZG125C                   00608200
&XPARTALETTBL      SETC  '&PARTALETTBL'         SET XVARIABLE PARM      00608300
.ZG125C            AIF   (K'&XPARTALETTBL GT 0).ZG125D  ONE PARM        00608400
&ZXDELLIST3        SETC  ''          RESET IN/OUTPUT                    00608500
&ZXPARTALETTBL     SETC  ''          RESET IN/OUTPUT                    00608600
&ZMS               SETC  'WHEN "PARTPTROFF" IS SPECIFIED'               00608700
&ZMS               SETC  '&ZMS , "PARTALETTBL" KEY AND ITS'             00608800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00608900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00609000
.ZG125D            ANOP  ,                                              00609100
.*------------------------------------------------------------------    00609200
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00609300
                   AIF   (K'&XDELLIST3 GT 0).ZG126B                     00609400
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00609500
&XDELLIST3         SETC  'PARTALET'  SET DEFAULT                        00609600
&ZXPARTALET        SETC  'INPUT'     SET IN/OUTPUT                      00609700
&XPARTALET         SETC  'ZERO'      SET DEFAULT PARM                   00609800
.ZG126B            ANOP  ,                                              00609900
.*-------------------------------------------------------------------   00610000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00610100
                   AIF   (K'&ZXPARTALETTBL LE 0).ZG126R  NOT I/O        00610200
         AIF   ('&XPARTALETTBL' EQ 'ZERO').ZG126R                       00610300
                   AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG126R           00610400
&ZCGPR             SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)           00610500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG126P                  00610600
                   AIF   (K'&ZCGPR GT 2).ZG126Q                         00610700
                   AIF   ('&ZCGPR' EQ '0').ZG126Q                       00610800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00610900
                   AIF   (T'&ZCGPR NE 'N').ZG126Q  INVALID REG NAME     00611000
.ZG126P            ANOP  ,                                              00611100
                   AIF   (T'&ZCGPR NE 'N').ZG126R  NON NUMERIC          00611200
                   AIF   ('&ZCGPR' LT '2').ZG126Q                       00611300
                   AIF   ('&ZCGPR' LE '12').ZG126R                      00611400
.ZG126Q            ANOP  ,                                              00611500
&ZMS               SETC  '"PARTALETTBL='                                00611600
&ZMS               SETC  '&ZMS.&PARTALETTBL"'                           00611700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00611800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00611900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00612000
.ZG126R            ANOP  ,                                              00612100
.*-------------------------------------------------------------------   00612200
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00612300
.ZG123ZY  AIF    ('&XDELLIST3' NE 'PARTALET').ZG124ZY                   00612400
.*-------------------------------------------------------------------   00612500
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00612600
                   AIF   (K'&ZXPARTALET LE 0).ZG123R  NOT I/O           00612700
         AIF   ('&XPARTALET' EQ 'ZERO').ZG123R                          00612800
                   AIF   ('&XPARTALET'(1,1) NE '(').ZG123R              00612900
&ZCGPR             SETC  '&XPARTALET'(2,K'&XPARTALET-2)                 00613000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG123P                  00613100
                   AIF   (K'&ZCGPR GT 2).ZG123Q                         00613200
                   AIF   ('&ZCGPR' EQ '0').ZG123Q                       00613300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00613400
                   AIF   (T'&ZCGPR NE 'N').ZG123Q  INVALID REG NAME     00613500
.ZG123P            ANOP  ,                                              00613600
                   AIF   (T'&ZCGPR NE 'N').ZG123R  NON NUMERIC          00613700
                   AIF   ('&ZCGPR' LT '2').ZG123Q                       00613800
                   AIF   ('&ZCGPR' LE '12').ZG123R                      00613900
.ZG123Q            ANOP  ,                                              00614000
&ZMS               SETC  '"PARTALET='                                   00614100
&ZMS               SETC  '&ZMS.&PARTALET"'                              00614200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00614300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00614400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00614500
.ZG123R            ANOP  ,                                              00614600
.*-------------------------------------------------------------------   00614700
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00614800
.ZG124ZY  AIF    ('&XDELLIST3' NE 'PARTALETOFF').ZG125ZY                00614900
.*-------------------------------------------------------------------   00615000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00615100
                   AIF   (K'&ZXPARTALETOFF LE 0).ZG124R  NOT I/O        00615200
                   AIF   ('&XPARTALETOFF'(1,1) NE '(').ZG124R           00615300
&ZCGPR             SETC  '&XPARTALETOFF'(2,K'&XPARTALETOFF-2)           00615400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG124P                  00615500
                   AIF   (K'&ZCGPR GT 2).ZG124Q                         00615600
                   AIF   ('&ZCGPR' EQ '0').ZG124Q                       00615700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00615800
                   AIF   (T'&ZCGPR NE 'N').ZG124Q  INVALID REG NAME     00615900
.ZG124P            ANOP  ,                                              00616000
                   AIF   (T'&ZCGPR NE 'N').ZG124R  NON NUMERIC          00616100
                   AIF   ('&ZCGPR' LT '2').ZG124Q                       00616200
                   AIF   ('&ZCGPR' LE '12').ZG124R                      00616300
.ZG124Q            ANOP  ,                                              00616400
&ZMS               SETC  '"PARTALETOFF='                                00616500
&ZMS               SETC  '&ZMS.&PARTALETOFF"'                           00616600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00616700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00616800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00616900
.ZG124R            ANOP  ,                                              00617000
.*-------------------------------------------------------------------   00617100
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00617200
.ZG125ZY  AIF    ('&XDELLIST3' NE 'PARTALETTBL').ZG126ZY                00617300
.*-------------------------------------------------------------------   00617400
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00617500
                   AIF   (K'&ZXPARTALETTBL LE 0).ZG125R  NOT I/O        00617600
                   AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG125R           00617700
&ZCGPR             SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)           00617800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG125P                  00617900
                   AIF   (K'&ZCGPR GT 2).ZG125Q                         00618000
                   AIF   ('&ZCGPR' EQ '0').ZG125Q                       00618100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00618200
                   AIF   (T'&ZCGPR NE 'N').ZG125Q  INVALID REG NAME     00618300
.ZG125P            ANOP  ,                                              00618400
                   AIF   (T'&ZCGPR NE 'N').ZG125R  NON NUMERIC          00618500
                   AIF   ('&ZCGPR' LT '2').ZG125Q                       00618600
                   AIF   ('&ZCGPR' LE '12').ZG125R                      00618700
.ZG125Q            ANOP  ,                                              00618800
&ZMS               SETC  '"PARTALETTBL='                                00618900
&ZMS               SETC  '&ZMS.&PARTALETTBL"'                           00619000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00619100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00619200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00619300
.ZG125R            ANOP  ,                                              00619400
.*-------------------------------------------------------------------   00619500
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00619600
.ZG126ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00619700
.*-------------------------------------------------------------------   00619800
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00619900
.ZG127ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00620000
.*----------------------------------------------------------------***   00620100
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00620200
&XLENMODE          SETC  ''          INITIALIZE XVARIABLE               00620300
                   AIF   (K'&PARTLEN LE 0).ZG129C                       00620400
&ZXLENMODE         SETC  'INPUT'     SET IN/OUTPUT                      00620500
&XLENMODE          SETC  'PARTLEN'   SET XVARIABLE                      00620600
&ZXPARTLEN         SETC  'INPUT'     SET IN/OUTPUT                      00620700
&XPARTLEN          SETC  '&PARTLEN(1)'          SET XVARIABLE PARM      00620800
                   AIF   (N'&PARTLEN GT 1).ZG129A                       00620900
&XPARTLEN          SETC  '&PARTLEN'  SET XVARIABLE PARM                 00621000
.ZG129A            AIF   (N'&PARTLEN LE 1).ZG129B  CK NUM               00621100
&ZMS               SETC  '"PARTLEN='                                    00621200
&ZMS               SETC  '&ZMS.&PARTLEN"'                               00621300
&ZMS               SETC  '&ZMS "PARTLEN"'                               00621400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00621500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00621600
.ZG129B            AIF   (K'&XPARTLEN GT 0).ZG129C  ONE PARM            00621700
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00621800
&ZXPARTLEN         SETC  ''          RESET IN/OUTPUT                    00621900
&ZMS               SETC  ' '                                            00622000
&ZMS               SETC  '&ZMS "PARTLEN" KEY AND ITS'                   00622100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00622200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00622300
.ZG129C            ANOP  ,                                              00622400
.*----------------------------------------------------------------***   00622500
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00622600
                   AIF   (K'&PARTLENOFF LE 0).ZG130D  NO ME KEY         00622700
                   AIF   (N'&PARTLENOFF LE 1).ZG130A  CK NUM            00622800
&ZMS               SETC  '"PARTLENOFF='                                 00622900
&ZMS               SETC  '&ZMS.&PARTLENOFF"'                            00623000
&ZMS               SETC  '&ZMS "PARTLENOFF"'                            00623100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00623200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00623300
.ZG130A            AIF   (K'&XLENMODE LE 0).ZG130B                      00623400
&ZMS               SETC  '"PARTLENOFF'                                  00623500
&ZMS               SETC  '&ZMS.=&PARTLENOFF"'                           00623600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00623700
&ZMS               SETC  '&ZMS "&XLENMODE"'                             00623800
                   MNOTE 8,' &ZMS KEY.'                                 00623900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00624000
                   AGO   .ZG130D                                        00624100
.*                                                                      00624200
.ZG130B            ANOP  ,                                              00624300
&ZXLENMODE         SETC  'INPUT'     SET IN/OUTPUT                      00624400
&XLENMODE          SETC  'PARTLENOFF'           SET XVARIABLE           00624500
&ZXPARTLENOFF      SETC  'INPUT'     SET IN/OUTPUT                      00624600
&XPARTLENOFF       SETC  '&PARTLENOFF(1)'       SET XVARIABLE PARM      00624700
                   AIF   (N'&PARTLENOFF GT 1).ZG130C                    00624800
&XPARTLENOFF       SETC  '&PARTLENOFF'          SET XVARIABLE PARM      00624900
.ZG130C            AIF   (K'&XPARTLENOFF GT 0).ZG130D  ONE PARM         00625000
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00625100
&ZXPARTLENOFF      SETC  ''          RESET IN/OUTPUT                    00625200
&ZMS               SETC  ' '                                            00625300
&ZMS               SETC  '&ZMS "PARTLENOFF" KEY AND ITS'                00625400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00625500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00625600
.ZG130D            ANOP  ,                                              00625700
.*----------------------------------------------------------------***   00625800
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00625900
                   AIF   (K'&PARTLENTBL LE 0).ZG131D  NO ME KEY         00626000
                   AIF   (N'&PARTLENTBL LE 1).ZG131A  CK NUM            00626100
&ZMS               SETC  '"PARTLENTBL='                                 00626200
&ZMS               SETC  '&ZMS.&PARTLENTBL"'                            00626300
&ZMS               SETC  '&ZMS "PARTLENTBL"'                            00626400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00626500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00626600
.ZG131A            AIF   (K'&XLENMODE LE 0).ZG131B                      00626700
&ZMS               SETC  '"PARTLENTBL'                                  00626800
&ZMS               SETC  '&ZMS.=&PARTLENTBL"'                           00626900
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00627000
&ZMS               SETC  '&ZMS "&XLENMODE"'                             00627100
                   MNOTE 8,' &ZMS KEY.'                                 00627200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00627300
                   AGO   .ZG131D                                        00627400
.*                                                                      00627500
.ZG131B            ANOP  ,                                              00627600
&ZXLENMODE         SETC  'INPUT'     SET IN/OUTPUT                      00627700
&XLENMODE          SETC  'PARTLENTBL'           SET XVARIABLE           00627800
&ZXPARTLENTBL      SETC  'INPUT'     SET IN/OUTPUT                      00627900
&XPARTLENTBL       SETC  '&PARTLENTBL(1)'       SET XVARIABLE PARM      00628000
                   AIF   (N'&PARTLENTBL GT 1).ZG131C                    00628100
&XPARTLENTBL       SETC  '&PARTLENTBL'          SET XVARIABLE PARM      00628200
.ZG131C            AIF   (K'&XPARTLENTBL GT 0).ZG131D  ONE PARM         00628300
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00628400
&ZXPARTLENTBL      SETC  ''          RESET IN/OUTPUT                    00628500
&ZMS               SETC  ' '                                            00628600
&ZMS               SETC  '&ZMS "PARTLENTBL" KEY AND ITS'                00628700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00628800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00628900
.ZG131D            ANOP  ,                                              00629000
.*------------------------------------------------------------------    00629100
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00629200
                   AIF   (K'&XLENMODE GT 0).ZG132B                      00629300
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00629400
&ZXPARTLEN         SETC  ''          RESET IN/OUTPUT                    00629500
&XLENMODE          SETC  ''          ENSURE NULL                        00629600
&XPARTLEN          SETC  ''          ENSURE NULL                        00629700
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00629800
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00629900
&ZMS               SETC  '&ZMS REQUIRED:'                               00630000
&ZMS               SETC  '&ZMS "PARTLEN",'      VALID ME KEY            00630100
&ZMS               SETC  '&ZMS "PARTLENOFF",'   VALID ME KEY            00630200
&ZMS               SETC  '&ZMS OR "PARTLENTBL".'  VALID ME KEY          00630300
                   MNOTE 8,' &ZMS '                                     00630400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00630500
.ZG132B            ANOP  ,                                              00630600
.*-------------------------------------------------------------------   00630700
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00630800
.ZG129ZY  AIF    ('&XLENMODE' NE 'PARTLEN').ZG130ZY                     00630900
.*-------------------------------------------------------------------   00631000
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00631100
                   AIF   (K'&ZXPARTLEN LE 0).ZG129R  NOT I/O            00631200
                   AIF   ('&XPARTLEN'(1,1) NE '(').ZG129R               00631300
&ZCGPR             SETC  '&XPARTLEN'(2,K'&XPARTLEN-2)                   00631400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG129P                  00631500
                   AIF   (K'&ZCGPR GT 2).ZG129Q                         00631600
                   AIF   ('&ZCGPR' EQ '0').ZG129Q                       00631700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00631800
                   AIF   (T'&ZCGPR NE 'N').ZG129Q  INVALID REG NAME     00631900
.ZG129P            ANOP  ,                                              00632000
                   AIF   (T'&ZCGPR NE 'N').ZG129R  NON NUMERIC          00632100
                   AIF   ('&ZCGPR' LT '2').ZG129Q                       00632200
                   AIF   ('&ZCGPR' LE '12').ZG129R                      00632300
.ZG129Q            ANOP  ,                                              00632400
&ZMS               SETC  '"PARTLEN='                                    00632500
&ZMS               SETC  '&ZMS.&PARTLEN"'                               00632600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00632700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00632800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00632900
.ZG129R            ANOP  ,                                              00633000
.*-------------------------------------------------------------------   00633100
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00633200
.ZG130ZY  AIF    ('&XLENMODE' NE 'PARTLENOFF').ZG131ZY                  00633300
.*-------------------------------------------------------------------   00633400
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00633500
                   AIF   (K'&ZXPARTLENOFF LE 0).ZG130R  NOT I/O         00633600
                   AIF   ('&XPARTLENOFF'(1,1) NE '(').ZG130R            00633700
&ZCGPR             SETC  '&XPARTLENOFF'(2,K'&XPARTLENOFF-2)             00633800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG130P                  00633900
                   AIF   (K'&ZCGPR GT 2).ZG130Q                         00634000
                   AIF   ('&ZCGPR' EQ '0').ZG130Q                       00634100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00634200
                   AIF   (T'&ZCGPR NE 'N').ZG130Q  INVALID REG NAME     00634300
.ZG130P            ANOP  ,                                              00634400
                   AIF   (T'&ZCGPR NE 'N').ZG130R  NON NUMERIC          00634500
                   AIF   ('&ZCGPR' LT '2').ZG130Q                       00634600
                   AIF   ('&ZCGPR' LE '12').ZG130R                      00634700
.ZG130Q            ANOP  ,                                              00634800
&ZMS               SETC  '"PARTLENOFF='                                 00634900
&ZMS               SETC  '&ZMS.&PARTLENOFF"'                            00635000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00635100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00635200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00635300
.ZG130R            ANOP  ,                                              00635400
.*-------------------------------------------------------------------   00635500
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00635600
.ZG131ZY  AIF    ('&XLENMODE' NE 'PARTLENTBL').ZG132ZY                  00635700
.*-------------------------------------------------------------------   00635800
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00635900
                   AIF   (K'&ZXPARTLENTBL LE 0).ZG131R  NOT I/O         00636000
                   AIF   ('&XPARTLENTBL'(1,1) NE '(').ZG131R            00636100
&ZCGPR             SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)             00636200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG131P                  00636300
                   AIF   (K'&ZCGPR GT 2).ZG131Q                         00636400
                   AIF   ('&ZCGPR' EQ '0').ZG131Q                       00636500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00636600
                   AIF   (T'&ZCGPR NE 'N').ZG131Q  INVALID REG NAME     00636700
.ZG131P            ANOP  ,                                              00636800
                   AIF   (T'&ZCGPR NE 'N').ZG131R  NON NUMERIC          00636900
                   AIF   ('&ZCGPR' LT '2').ZG131Q                       00637000
                   AIF   ('&ZCGPR' LE '12').ZG131R                      00637100
.ZG131Q            ANOP  ,                                              00637200
&ZMS               SETC  '"PARTLENTBL='                                 00637300
&ZMS               SETC  '&ZMS.&PARTLENTBL"'                            00637400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00637500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00637600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00637700
.ZG131R            ANOP  ,                                              00637800
.*-------------------------------------------------------------------   00637900
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00638000
.ZG132ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00638100
.*------------------------------------------------------------------    00638200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00638300
.ZG133             ANOP  ,                                              00638400
&ZXMULTIPART       SETC  'INPUT'     SET IN/OUTPUT                      00638500
                   AIF   (K'&XMULTIPART GT 0).ZG133E  VALID ARG         00638600
                   AIF   (T'&MULTIPART EQ 'O').ZG133D  OMITTED          00638700
&ZASYSLNDX         SETA  0                                              00638800
.ZG133A            ANOP  ,           POSITIONAL MACRO KEY               00638900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00639000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG133C              00639100
&ZTLC              SETC 'MULTIPART'                                     00639200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG133A     00639300
.ZG133B            ANOP  ,                                              00639400
&ZXMULTIPART       SETC  ''          RESET IN/OUTPUT                    00639500
&ZMS               SETC  'THE "MULTIPART" KEY'                          00639600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00639700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00639800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00639900
                   AGO   .ZG133E                                        00640000
.ZG133C            ANOP  ,                                              00640100
&ZXMULTIPART       SETC  ''          RESET IN/OUTPUT                    00640200
&ZMS               SETC  '"MULTIPART='                                  00640300
&ZMS               SETC  '&ZMS.&MULTIPART"'                             00640400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00640500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00640600
&ZMS               SETC  '&ZMS "NO"'                                    00640700
&ZMS               SETC  '&ZMS OR "YES".'                               00640800
                   MNOTE 8,' &ZMS '                                     00640900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00641000
                   AGO   .ZG133E                                        00641100
.ZG133D            ANOP  ,                                              00641200
&XMULTIPART        SETC  'NO'        SET DEFAULT KEYWORD                00641300
.ZG133E            ANOP  ,                                              00641400
.*----------------------------------------------------------------***   00641500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00641600
                   AIF   (N'&MSGSTGKEY LE 1).ZG135A  CK NUM             00641700
&ZMS               SETC  '"MSGSTGKEY='                                  00641800
&ZMS               SETC  '&ZMS.&MSGSTGKEY"'                             00641900
&ZMS               SETC  '&ZMS "MSGSTGKEY"'                             00642000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00642100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00642200
.ZG135A            ANOP  ,                                              00642300
.*-------------------------------------------------------------------   00642400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00642500
&ZXMSGSTGKEY       SETC  'INPUT'     SET IN/OUTPUT                      00642600
&XMSGSTGKEY        SETC  'ANY'                                          00642700
                   AIF   (K'&MSGSTGKEY(1) LE 0).ZG135B  PARM            00642800
&XMSGSTGKEY        SETC  '&MSGSTGKEY(1)'        SET XVARIABLE           00642900
                   AIF   (N'&MSGSTGKEY GT 1).ZG135B  MULTI              00643000
&XMSGSTGKEY        SETC  '&MSGSTGKEY'           SET XVARIABLE           00643100
.ZG135B            ANOP  ,                                              00643200
.*-------------------------------------------------------------------   00643300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00643400
                   AIF   (K'&ZXMSGSTGKEY LE 0).ZG135R  NOT I/O          00643500
         AIF   ('&XMSGSTGKEY' EQ 'ANY').ZG135R                          00643600
                   AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZG135R             00643700
&ZCGPR             SETC  '&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2)               00643800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                  00643900
                   AIF   (K'&ZCGPR GT 2).ZG135Q                         00644000
                   AIF   ('&ZCGPR' EQ '0').ZG135Q                       00644100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00644200
                   AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME     00644300
.ZG135P            ANOP  ,                                              00644400
                   AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC          00644500
                   AIF   ('&ZCGPR' LT '2').ZG135Q                       00644600
                   AIF   ('&ZCGPR' LE '12').ZG135R                      00644700
.ZG135Q            ANOP  ,                                              00644800
&ZMS               SETC  '"MSGSTGKEY='                                  00644900
&ZMS               SETC  '&ZMS.&MSGSTGKEY"'                             00645000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00645100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00645200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00645300
.ZG135R            ANOP  ,                                              00645400
.*------------------------------------------------------------------    00645500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00645600
&XMSGACCESS        SETC  ''          INITIALIZE XVARIABLE               00645700
.*-------------------------------------------------------------------   00645800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00645900
.ZG139             ANOP  ,                                              00646000
                   AIF   (K'&MSGACCESS(1) LE 0).ZG139A                  00646100
&ZTLC              SETC 'SYNC'                                          00646200
                   AIF   ('&MSGACCESS(1)' NE '&ZTLC').ZG140             00646300
&XMSGACCESS        SETC  'SYNC'      SET KEYWORD                        00646400
                   AIF   (N'&MSGACCESS LE 1).ZG139A  CK NUM             00646500
&ZMS               SETC  '"MSGACCESS='                                  00646600
&ZMS               SETC  '&ZMS.&MSGACCESS"'                             00646700
&ZMS               SETC  '&ZMS "MSGACCESS"'                             00646800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00646900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00647000
.ZG139A            ANOP  ,                                              00647100
.*------------------------------------------------------------------    00647200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00647300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00647400
.ZG139A0           AIF   (K'&SENDTIME LE 0).ZG139A1  OK                 00647500
&ZCVAL             SETC '&ZCVAL SENDTIME'       INCORRECT KEY USED      00647600
.ZG139A1           AIF   (K'&ZCVAL LE 0).ZG139A2  OK                    00647700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00647800
&ZMS               SETC  '"MSGACCESS'                                   00647900
&ZMS               SETC  '&ZMS.=&MSGACCESS"'                            00648000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00648100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00648200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00648300
.ZG139A2           ANOP  ,                                              00648400
.*-------------------------------------------------------------------   00648500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00648600
.ZG140             ANOP  ,                                              00648700
&ZTLC              SETC 'SYNCSUSPEND'                                   00648800
                   AIF   ('&MSGACCESS(1)' NE '&ZTLC').ZG144             00648900
&XMSGACCESS        SETC  'SYNCSUSPEND'          SET KEYWORD             00649000
                   AIF   (N'&MSGACCESS LE 1).ZG140A  CK NUM             00649100
&ZMS               SETC  '"MSGACCESS='                                  00649200
&ZMS               SETC  '&ZMS.&MSGACCESS"'                             00649300
&ZMS               SETC  '&ZMS "MSGACCESS"'                             00649400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00649500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00649600
.ZG140A            ANOP  ,                                              00649700
.*----------------------------------------------------------------***   00649800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00649900
                   AIF   (N'&SENDTIME LE 1).ZG142A  CK NUM              00650000
&ZMS               SETC  '"SENDTIME='                                   00650100
&ZMS               SETC  '&ZMS.&SENDTIME"'                              00650200
&ZMS               SETC  '&ZMS "SENDTIME"'                              00650300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00650400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00650500
.ZG142A            ANOP  ,                                              00650600
.*-------------------------------------------------------------------   00650700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00650800
&ZXSENDTIME        SETC  'INPUT'     SET IN/OUTPUT                      00650900
&XSENDTIME         SETC  '&SENDTIME(1)'         SET XVARIABLE           00651000
                   AIF   (N'&SENDTIME GT 1).ZG142B  MULTI               00651100
&XSENDTIME         SETC  '&SENDTIME'            SET XVARIABLE           00651200
.ZG142B            AIF   (K'&SENDTIME(1) GT 0).ZG142C                   00651300
&ZXSENDTIME        SETC  ''          RESET IN/OUTPUT                    00651400
&ZMS               SETC  'WHEN "SYNCSUSPEND" IS SPECIFIED'              00651500
&ZMS               SETC  '&ZMS , "SENDTIME" KEY AND ITS'                00651600
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00651700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00651800
.ZG142C            ANOP  ,                                              00651900
.*-------------------------------------------------------------------   00652000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00652100
                   AIF   (K'&ZXSENDTIME LE 0).ZG142R  NOT I/O           00652200
                   AIF   ('&XSENDTIME'(1,1) NE '(').ZG142R              00652300
&ZCGPR             SETC  '&XSENDTIME'(2,K'&XSENDTIME-2)                 00652400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG142P                  00652500
                   AIF   (K'&ZCGPR GT 2).ZG142Q                         00652600
                   AIF   ('&ZCGPR' EQ '0').ZG142Q                       00652700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00652800
                   AIF   (T'&ZCGPR NE 'N').ZG142Q  INVALID REG NAME     00652900
.ZG142P            ANOP  ,                                              00653000
                   AIF   (T'&ZCGPR NE 'N').ZG142R  NON NUMERIC          00653100
                   AIF   ('&ZCGPR' LT '2').ZG142Q                       00653200
                   AIF   ('&ZCGPR' LE '12').ZG142R                      00653300
.ZG142Q            ANOP  ,                                              00653400
&ZMS               SETC  '"SENDTIME='                                   00653500
&ZMS               SETC  '&ZMS.&SENDTIME"'                              00653600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00653700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00653800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00653900
.ZG142R            ANOP  ,                                              00654000
.*-------------------------------------------------------------------   00654100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00654200
.ZG144             ANOP  ,                                              00654300
&ZTLC              SETC 'ASYNC'                                         00654400
                   AIF   ('&MSGACCESS(1)' NE '&ZTLC').ZG145             00654500
&XMSGACCESS        SETC  'ASYNC'     SET KEYWORD                        00654600
                   AIF   (N'&MSGACCESS LE 1).ZG144A  CK NUM             00654700
&ZMS               SETC  '"MSGACCESS='                                  00654800
&ZMS               SETC  '&ZMS.&MSGACCESS"'                             00654900
&ZMS               SETC  '&ZMS "MSGACCESS"'                             00655000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00655100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00655200
.ZG144A            ANOP  ,                                              00655300
.*------------------------------------------------------------------    00655400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00655500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00655600
.ZG144A0           AIF   (K'&SENDTIME LE 0).ZG144A1  OK                 00655700
&ZCVAL             SETC '&ZCVAL SENDTIME'       INCORRECT KEY USED      00655800
.ZG144A1           AIF   (K'&ZCVAL LE 0).ZG144A2  OK                    00655900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00656000
&ZMS               SETC  '"MSGACCESS'                                   00656100
&ZMS               SETC  '&ZMS.=&MSGACCESS"'                            00656200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00656300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00656400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00656500
.ZG144A2           ANOP  ,                                              00656600
.*------------------------------------------------------------------    00656700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00656800
.ZG145             ANOP  ,                                              00656900
&ZXMSGACCESS       SETC  'INPUT'     SET IN/OUTPUT                      00657000
                   AIF   (K'&XMSGACCESS GT 0).ZG145E  VALID ARG         00657100
                   AIF   (T'&MSGACCESS EQ 'O').ZG145D  OMITTED          00657200
&ZASYSLNDX         SETA  0                                              00657300
.ZG145A            ANOP  ,           POSITIONAL MACRO KEY               00657400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00657500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG145C              00657600
&ZTLC              SETC 'MSGACCESS'                                     00657700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG145A     00657800
.ZG145B            ANOP  ,                                              00657900
&ZXMSGACCESS       SETC  ''          RESET IN/OUTPUT                    00658000
&ZMS               SETC  'THE "MSGACCESS" KEY'                          00658100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00658200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00658300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00658400
                   AGO   .ZG145E                                        00658500
.ZG145C            ANOP  ,                                              00658600
&ZXMSGACCESS       SETC  ''          RESET IN/OUTPUT                    00658700
&ZMS               SETC  '"MSGACCESS='                                  00658800
&ZMS               SETC  '&ZMS.&MSGACCESS"'                             00658900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00659000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00659100
&ZMS               SETC  '&ZMS "SYNC",'                                 00659200
&ZMS               SETC  '&ZMS "SYNCSUSPEND",'                          00659300
&ZMS               SETC  '&ZMS OR "ASYNC".'                             00659400
                   MNOTE 8,' &ZMS '                                     00659500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00659600
                   AGO   .ZG145E                                        00659700
.ZG145D            ANOP  ,                                              00659800
&XMSGACCESS        SETC  'SYNC'      SET DEFAULT KEYWORD                00659900
.ZG145E            ANOP  ,                                              00660000
.*------------------------------------------------------------------    00660100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00660200
&XNOTIFY           SETC  ''          INITIALIZE XVARIABLE               00660300
.*-------------------------------------------------------------------   00660400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00660500
.ZG148             ANOP  ,                                              00660600
                   AIF   (K'&NOTIFY(1) LE 0).ZG148A                     00660700
&ZTLC              SETC 'NO'                                            00660800
                   AIF   ('&NOTIFY(1)' NE '&ZTLC').ZG149                00660900
&XNOTIFY           SETC  'NO'        SET KEYWORD                        00661000
                   AIF   (N'&NOTIFY LE 1).ZG148A  CK NUM                00661100
&ZMS               SETC  '"NOTIFY='                                     00661200
&ZMS               SETC  '&ZMS.&NOTIFY"'                                00661300
&ZMS               SETC  '&ZMS "NOTIFY"'                                00661400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00661500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00661600
.ZG148A            ANOP  ,                                              00661700
.*------------------------------------------------------------------    00661800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00661900
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00662000
.ZG148A0           AIF   (K'&USERDATA LE 0).ZG148A1  OK                 00662100
&ZCVAL             SETC '&ZCVAL USERDATA'       INCORRECT KEY USED      00662200
.ZG148A1           AIF   (K'&NOTIFYIF LE 0).ZG148A2  OK                 00662300
&ZCVAL             SETC '&ZCVAL NOTIFYIF'       INCORRECT KEY USED      00662400
.ZG148A2           AIF   (K'&NOTIFYBY LE 0).ZG148A3  OK                 00662500
&ZCVAL             SETC '&ZCVAL NOTIFYBY'       INCORRECT KEY USED      00662600
.ZG148A3           AIF   (K'&NOTIFYEXIT LE 0).ZG148A4  OK               00662700
&ZCVAL             SETC '&ZCVAL NOTIFYEXIT'     INCORRECT KEY USED      00662800
.ZG148A4           AIF   (K'&RETMSGOTOKEN LE 0).ZG148A5  OK             00662900
&ZCVAL             SETC '&ZCVAL RETMSGOTOKEN'   INCORRECT KEY USED      00663000
.ZG148A5           AIF   (K'&ZCVAL LE 0).ZG148A6  OK                    00663100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00663200
&ZMS               SETC  '"NOTIFY'                                      00663300
&ZMS               SETC  '&ZMS.=&NOTIFY"'                               00663400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00663500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00663600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00663700
.ZG148A6           ANOP  ,                                              00663800
.*-------------------------------------------------------------------   00663900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00664000
.ZG149             ANOP  ,                                              00664100
&ZTLC              SETC 'YES'                                           00664200
                   AIF   ('&NOTIFY(1)' NE '&ZTLC').ZG168                00664300
&XNOTIFY           SETC  'YES'       SET KEYWORD                        00664400
                   AIF   (N'&NOTIFY LE 1).ZG149A  CK NUM                00664500
&ZMS               SETC  '"NOTIFY='                                     00664600
&ZMS               SETC  '&ZMS.&NOTIFY"'                                00664700
&ZMS               SETC  '&ZMS "NOTIFY"'                                00664800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00664900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00665000
.ZG149A            ANOP  ,                                              00665100
.*----------------------------------------------------------------***   00665200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00665300
                   AIF   (N'&USERDATA LE 1).ZG151A  CK NUM              00665400
&ZMS               SETC  '"USERDATA='                                   00665500
&ZMS               SETC  '&ZMS.&USERDATA"'                              00665600
&ZMS               SETC  '&ZMS "USERDATA"'                              00665700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00665800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00665900
.ZG151A            ANOP  ,                                              00666000
.*-------------------------------------------------------------------   00666100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00666200
&ZXUSERDATA        SETC  'INPUT'     SET IN/OUTPUT                      00666300
&XUSERDATA         SETC  'ALLZERO'                                      00666400
                   AIF   (K'&USERDATA(1) LE 0).ZG151B  PARM             00666500
&XUSERDATA         SETC  '&USERDATA(1)'         SET XVARIABLE           00666600
                   AIF   (N'&USERDATA GT 1).ZG151B  MULTI               00666700
&XUSERDATA         SETC  '&USERDATA'            SET XVARIABLE           00666800
.ZG151B            ANOP  ,                                              00666900
.*-------------------------------------------------------------------   00667000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00667100
                   AIF   (K'&ZXUSERDATA LE 0).ZG151R  NOT I/O           00667200
         AIF   ('&XUSERDATA' EQ 'ALLZERO').ZG151R                       00667300
                   AIF   ('&XUSERDATA'(1,1) NE '(').ZG151R              00667400
&ZCGPR             SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                 00667500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG151P                  00667600
                   AIF   (K'&ZCGPR GT 2).ZG151Q                         00667700
                   AIF   ('&ZCGPR' EQ '0').ZG151Q                       00667800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00667900
                   AIF   (T'&ZCGPR NE 'N').ZG151Q  INVALID REG NAME     00668000
.ZG151P            ANOP  ,                                              00668100
                   AIF   (T'&ZCGPR NE 'N').ZG151R  NON NUMERIC          00668200
                   AIF   ('&ZCGPR' LT '2').ZG151Q                       00668300
                   AIF   ('&ZCGPR' LE '12').ZG151R                      00668400
.ZG151Q            ANOP  ,                                              00668500
&ZMS               SETC  '"USERDATA='                                   00668600
&ZMS               SETC  '&ZMS.&USERDATA"'                              00668700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00668800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00668900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00669000
.ZG151R            ANOP  ,                                              00669100
.*------------------------------------------------------------------    00669200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00669300
&XNOTIFYIF         SETC  ''          INITIALIZE XVARIABLE               00669400
.*-------------------------------------------------------------------   00669500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00669600
.ZG155             ANOP  ,                                              00669700
                   AIF   (K'&NOTIFYIF(1) LE 0).ZG155A                   00669800
&ZTLC              SETC 'COMPLETED'                                     00669900
                   AIF   ('&NOTIFYIF(1)' NE '&ZTLC').ZG156              00670000
&XNOTIFYIF         SETC  'COMPLETED'            SET KEYWORD             00670100
                   AIF   (N'&NOTIFYIF LE 1).ZG155A  CK NUM              00670200
&ZMS               SETC  '"NOTIFYIF='                                   00670300
&ZMS               SETC  '&ZMS.&NOTIFYIF"'                              00670400
&ZMS               SETC  '&ZMS "NOTIFYIF"'                              00670500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00670600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00670700
.ZG155A            ANOP  ,                                              00670800
.*-------------------------------------------------------------------   00670900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00671000
.ZG156             ANOP  ,                                              00671100
&ZTLC              SETC 'FAILED'                                        00671200
                   AIF   ('&NOTIFYIF(1)' NE '&ZTLC').ZG157              00671300
&XNOTIFYIF         SETC  'FAILED'    SET KEYWORD                        00671400
                   AIF   (N'&NOTIFYIF LE 1).ZG156A  CK NUM              00671500
&ZMS               SETC  '"NOTIFYIF='                                   00671600
&ZMS               SETC  '&ZMS.&NOTIFYIF"'                              00671700
&ZMS               SETC  '&ZMS "NOTIFYIF"'                              00671800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00671900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00672000
.ZG156A            ANOP  ,                                              00672100
.*------------------------------------------------------------------    00672200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00672300
.ZG157             ANOP  ,                                              00672400
&ZXNOTIFYIF        SETC  'INPUT'     SET IN/OUTPUT                      00672500
                   AIF   (K'&XNOTIFYIF GT 0).ZG157E  VALID ARG          00672600
                   AIF   (T'&NOTIFYIF EQ 'O').ZG157D  OMITTED           00672700
&ZASYSLNDX         SETA  0                                              00672800
.ZG157A            ANOP  ,           POSITIONAL MACRO KEY               00672900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00673000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG157C              00673100
&ZTLC              SETC 'NOTIFYIF'                                      00673200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG157A     00673300
.ZG157B            ANOP  ,                                              00673400
&ZXNOTIFYIF        SETC  ''          RESET IN/OUTPUT                    00673500
&ZMS               SETC  'THE "NOTIFYIF" KEY'                           00673600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00673700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00673800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00673900
                   AGO   .ZG157E                                        00674000
.ZG157C            ANOP  ,                                              00674100
&ZXNOTIFYIF        SETC  ''          RESET IN/OUTPUT                    00674200
&ZMS               SETC  '"NOTIFYIF='                                   00674300
&ZMS               SETC  '&ZMS.&NOTIFYIF"'                              00674400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00674500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00674600
&ZMS               SETC  '&ZMS "COMPLETED"'                             00674700
&ZMS               SETC  '&ZMS OR "FAILED".'                            00674800
                   MNOTE 8,' &ZMS '                                     00674900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00675000
                   AGO   .ZG157E                                        00675100
.ZG157D            ANOP  ,                                              00675200
&XNOTIFYIF         SETC  'COMPLETED'            SET DEFAULT KEYWORD     00675300
.ZG157E            ANOP  ,                                              00675400
.*------------------------------------------------------------------    00675500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00675600
&XNOTIFYBY         SETC  ''          INITIALIZE XVARIABLE               00675700
.*-------------------------------------------------------------------   00675800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00675900
.ZG160             ANOP  ,                                              00676000
                   AIF   (K'&NOTIFYBY(1) LE 0).ZG160A                   00676100
&ZTLC              SETC 'EXIT'                                          00676200
                   AIF   ('&NOTIFYBY(1)' NE '&ZTLC').ZG164              00676300
&XNOTIFYBY         SETC  'EXIT'      SET KEYWORD                        00676400
                   AIF   (N'&NOTIFYBY LE 1).ZG160A  CK NUM              00676500
&ZMS               SETC  '"NOTIFYBY='                                   00676600
&ZMS               SETC  '&ZMS.&NOTIFYBY"'                              00676700
&ZMS               SETC  '&ZMS "NOTIFYBY"'                              00676800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00676900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00677000
.ZG160A            ANOP  ,                                              00677100
.*----------------------------------------------------------------***   00677200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00677300
                   AIF   (N'&NOTIFYEXIT LE 1).ZG162A  CK NUM            00677400
&ZMS               SETC  '"NOTIFYEXIT='                                 00677500
&ZMS               SETC  '&ZMS.&NOTIFYEXIT"'                            00677600
&ZMS               SETC  '&ZMS "NOTIFYEXIT"'                            00677700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00677800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00677900
.ZG162A            ANOP  ,                                              00678000
.*-------------------------------------------------------------------   00678100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00678200
&ZXNOTIFYEXIT      SETC  'INPUT'     SET IN/OUTPUT                      00678300
&XNOTIFYEXIT       SETC  'FROMJOIN'                                     00678400
                   AIF   (K'&NOTIFYEXIT(1) LE 0).ZG162B  PARM           00678500
&XNOTIFYEXIT       SETC  '&NOTIFYEXIT(1)'       SET XVARIABLE           00678600
                   AIF   (N'&NOTIFYEXIT GT 1).ZG162B  MULTI             00678700
&XNOTIFYEXIT       SETC  '&NOTIFYEXIT'          SET XVARIABLE           00678800
.ZG162B            ANOP  ,                                              00678900
.*-------------------------------------------------------------------   00679000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00679100
                   AIF   (K'&ZXNOTIFYEXIT LE 0).ZG162R  NOT I/O         00679200
         AIF   ('&XNOTIFYEXIT' EQ 'FROMJOIN').ZG162R                    00679300
                   AIF   ('&XNOTIFYEXIT'(1,1) NE '(').ZG162R            00679400
&ZCGPR             SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)             00679500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG162P                  00679600
                   AIF   (K'&ZCGPR GT 2).ZG162Q                         00679700
                   AIF   ('&ZCGPR' EQ '0').ZG162Q                       00679800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00679900
                   AIF   (T'&ZCGPR NE 'N').ZG162Q  INVALID REG NAME     00680000
.ZG162P            ANOP  ,                                              00680100
                   AIF   (T'&ZCGPR NE 'N').ZG162R  NON NUMERIC          00680200
                   AIF   ('&ZCGPR' LT '2').ZG162Q                       00680300
                   AIF   ('&ZCGPR' LE '12').ZG162R                      00680400
.ZG162Q            ANOP  ,                                              00680500
&ZMS               SETC  '"NOTIFYEXIT='                                 00680600
&ZMS               SETC  '&ZMS.&NOTIFYEXIT"'                            00680700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00680800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00680900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00681000
.ZG162R            ANOP  ,                                              00681100
.*------------------------------------------------------------------    00681200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00681300
.ZG164             ANOP  ,                                              00681400
&ZXNOTIFYBY        SETC  'INPUT'     SET IN/OUTPUT                      00681500
                   AIF   (K'&XNOTIFYBY GT 0).ZG164E  VALID ARG          00681600
                   AIF   (T'&NOTIFYBY EQ 'O').ZG164D  OMITTED           00681700
&ZASYSLNDX         SETA  0                                              00681800
.ZG164A            ANOP  ,           POSITIONAL MACRO KEY               00681900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00682000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG164C              00682100
&ZTLC              SETC 'NOTIFYBY'                                      00682200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG164A     00682300
.ZG164B            ANOP  ,                                              00682400
&ZXNOTIFYBY        SETC  ''          RESET IN/OUTPUT                    00682500
&ZMS               SETC  'THE "NOTIFYBY" KEY'                           00682600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00682700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00682800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00682900
                   AGO   .ZG164E                                        00683000
.ZG164C            ANOP  ,                                              00683100
&ZXNOTIFYBY        SETC  ''          RESET IN/OUTPUT                    00683200
&ZMS               SETC  '"NOTIFYBY='                                   00683300
&ZMS               SETC  '&ZMS.&NOTIFYBY"'                              00683400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00683500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00683600
&ZMS               SETC  '&ZMS "EXIT".'                                 00683700
                   MNOTE 8,' &ZMS '                                     00683800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00683900
                   AGO   .ZG164E                                        00684000
.ZG164D            ANOP  ,                                              00684100
&XNOTIFYBY         SETC  'EXIT'      SET DEFAULT KEYWORD                00684200
.ZG164E            ANOP  ,                                              00684300
.*----------------------------------------------------------------***   00684400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00684500
                   AIF   (N'&RETMSGOTOKEN LE 1).ZG166A  CK NUM          00684600
&ZMS               SETC  '"RETMSGOTOKEN='                               00684700
&ZMS               SETC  '&ZMS.&RETMSGOTOKEN"'                          00684800
&ZMS               SETC  '&ZMS "RETMSGOTOKEN"'                          00684900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00685000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00685100
.ZG166A            ANOP  ,                                              00685200
.*-------------------------------------------------------------------   00685300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00685400
                   AIF   (K'&RETMSGOTOKEN(1) LE 0).ZG166C  NO PARM      00685500
&ZXRETMSGOTOKEN    SETC  'OUTPUT'    SET OUTPUT                         00685600
&XRETMSGOTOKEN     SETC  '&RETMSGOTOKEN(1)'     SET XVARIABLE           00685700
                   AIF   (N'&RETMSGOTOKEN GT 1).ZG166C                  00685800
&XRETMSGOTOKEN     SETC  '&RETMSGOTOKEN'        SET XVARIABLE           00685900
.ZG166C            ANOP  ,                                              00686000
.*-------------------------------------------------------------------   00686100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00686200
                   AIF   (K'&ZXRETMSGOTOKEN LE 0).ZG166R  NOT I/O       00686300
                   AIF   ('&XRETMSGOTOKEN'(1,1) NE '(').ZG166R          00686400
&ZCGPR             SETC  '&XRETMSGOTOKEN'(2,K'&XRETMSGOTOKEN-2)         00686500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG166P                  00686600
                   AIF   (K'&ZCGPR GT 2).ZG166Q                         00686700
                   AIF   ('&ZCGPR' EQ '0').ZG166Q                       00686800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00686900
                   AIF   (T'&ZCGPR NE 'N').ZG166Q  INVALID REG NAME     00687000
.ZG166P            ANOP  ,                                              00687100
                   AIF   (T'&ZCGPR NE 'N').ZG166R  NON NUMERIC          00687200
                   AIF   ('&ZCGPR' LT '2').ZG166Q                       00687300
                   AIF   ('&ZCGPR' LE '12').ZG166R                      00687400
.ZG166Q            ANOP  ,                                              00687500
&ZMS               SETC  '"RETMSGOTOKEN='                               00687600
&ZMS               SETC  '&ZMS.&RETMSGOTOKEN"'                          00687700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00687800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00687900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00688000
.ZG166R            ANOP  ,                                              00688100
.*------------------------------------------------------------------    00688200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00688300
.ZG168             ANOP  ,                                              00688400
&ZXNOTIFY          SETC  'INPUT'     SET IN/OUTPUT                      00688500
                   AIF   (K'&XNOTIFY GT 0).ZG168E  VALID ARG            00688600
                   AIF   (T'&NOTIFY EQ 'O').ZG168D  OMITTED             00688700
&ZASYSLNDX         SETA  0                                              00688800
.ZG168A            ANOP  ,           POSITIONAL MACRO KEY               00688900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00689000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG168C              00689100
&ZTLC              SETC 'NOTIFY'                                        00689200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG168A     00689300
.ZG168B            ANOP  ,                                              00689400
&ZXNOTIFY          SETC  ''          RESET IN/OUTPUT                    00689500
&ZMS               SETC  'THE "NOTIFY" KEY'                             00689600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00689700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00689800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00689900
                   AGO   .ZG168E                                        00690000
.ZG168C            ANOP  ,                                              00690100
&ZXNOTIFY          SETC  ''          RESET IN/OUTPUT                    00690200
&ZMS               SETC  '"NOTIFY='                                     00690300
&ZMS               SETC  '&ZMS.&NOTIFY"'                                00690400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00690500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00690600
&ZMS               SETC  '&ZMS "NO"'                                    00690700
&ZMS               SETC  '&ZMS OR "YES".'                               00690800
                   MNOTE 8,' &ZMS '                                     00690900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00691000
                   AGO   .ZG168E                                        00691100
.ZG168D            ANOP  ,                                              00691200
&XNOTIFY           SETC  'NO'        SET DEFAULT KEYWORD                00691300
.ZG168E            ANOP  ,                                              00691400
.*-------------------------------------------------------------------   00691500
.***AG.KKWRD07 VALUE, OPT INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00691600
&ZI                SETA  0           XVARIABLE ARRAY INDEX              00691700
&ZJ                SETA  0           SUBLIST INDEX                      00691800
.ZG170A            ANOP  ,                                              00691900
&ZJ                SETA  &ZJ+1       NEXT SUBLIST                       00692000
                   AIF   (&ZJ GT N'&ATTRIBUTES).ZG170C  DONE            00692100
                   AIF   (K'&ATTRIBUTES(&ZJ) LE 0).ZG170A  NULL         00692200
&ZI                SETA  &ZI+1       NEXT ARRAY ENTRY                   00692300
&XATTRIBUTES(&ZI)   SETC  ''         NULL ENTRY                         00692400
&XATTRIBUTES(&ZI+1) SETC  ''         NULL AT ARRAY END                  00692500
.ZG171B  AIF   ('&ATTRIBUTES(&ZJ)' NE 'NONE').ZG172B                    00692600
&XATTRIBUTES(&ZI)   SETC  'NONE'     SET KEYWORD                        00692700
.ZG172B  AIF   ('&ATTRIBUTES(&ZJ)' NE 'RECOVERY').ZG173B                00692800
&XATTRIBUTES(&ZI)   SETC  'RECOVERY'            SET KEYWORD             00692900
.ZG173B  AIF   ('&ATTRIBUTES(&ZJ)' NE 'CRITICAL').ZG174B                00693000
&XATTRIBUTES(&ZI)   SETC  'CRITICAL'            SET KEYWORD             00693100
.ZG174B            AIF   ('&XATTRIBUTES(&ZI)' NE '').ZG170A             00693200
&ZI                SETA  &ZI-1       BACKUP ARRAY                       00693300
&ZMS               SETC  '"ATTRIBUTES='                                 00693400
&ZMS               SETC  '&ZMS.&ATTRIBUTES"'                            00693500
&ZMS               SETC  '&ZMS ARGUMENT &ZJ'                            00693600
&ZMS               SETC  '&ZMS IS AN UNKNOWN KEYWORD. '                 00693700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00693800
&ZMS               SETC  '&ZMS "NONE",'                                 00693900
&ZMS               SETC  '&ZMS "RECOVERY",'                             00694000
&ZMS               SETC  '&ZMS OR "CRITICAL".'                          00694100
                   MNOTE 8,' &ZMS '                                     00694200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00694300
                   AGO   .ZG170A                                        00694400
.*-------------------------------------------------------------------   00694500
.***AG.KKWRD08 VALUE, OPT INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00694600
.ZG170C            ANOP  ,                                              00694700
&ZXATTRIBUTES      SETC  'INPUT'     SET IN/OUTPUT                      00694800
                   AIF   (&ZI GT 0).ZG170D      VALID KEYWORD           00694900
&XATTRIBUTES(1)  SETC  'NONE'        SET DEFAULT KEYWORD                00695000
&XATTRIBUTES(2)  SETC  ''            NULL AT ARRAY END                  00695100
.ZG170D            ANOP  ,                                              00695200
.*----------------------------------------------------------------***   00695300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00695400
                   AIF   (N'&RETCODE LE 1).ZG176A  CK NUM               00695500
&ZMS               SETC  '"RETCODE='                                    00695600
&ZMS               SETC  '&ZMS.&RETCODE"'                               00695700
&ZMS               SETC  '&ZMS "RETCODE"'                               00695800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00695900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00696000
.ZG176A            ANOP  ,                                              00696100
.*-------------------------------------------------------------------   00696200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00696300
                   AIF   (K'&RETCODE(1) LE 0).ZG176C  NO PARM           00696400
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00696500
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00696600
                   AIF   (N'&RETCODE GT 1).ZG176C                       00696700
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00696800
.ZG176C            ANOP  ,                                              00696900
.*-------------------------------------------------------------------   00697000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00697100
                   AIF   (K'&ZXRETCODE LE 0).ZG176R  NOT I/O            00697200
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG176R               00697300
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00697400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG176P                  00697500
                   AIF   (K'&ZCGPR GT 2).ZG176Q                         00697600
                   AIF   ('&ZCGPR' EQ '0').ZG176Q                       00697700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00697800
                   AIF   (T'&ZCGPR NE 'N').ZG176Q  INVALID REG NAME     00697900
.ZG176P            ANOP  ,                                              00698000
                   AIF   (T'&ZCGPR NE 'N').ZG176R  NON NUMERIC          00698100
                   AIF   ('&ZCGPR' EQ '15').ZG176R                      00698200
                   AIF   ('&ZCGPR' LT '2').ZG176Q                       00698300
                   AIF   ('&ZCGPR' LE '12').ZG176R                      00698400
.ZG176Q            ANOP  ,                                              00698500
&ZMS               SETC  '"RETCODE='                                    00698600
&ZMS               SETC  '&ZMS.&RETCODE"'                               00698700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00698800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'       00698900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00699000
.ZG176R            ANOP  ,                                              00699100
.*----------------------------------------------------------------***   00699200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00699300
                   AIF   (N'&RSNCODE LE 1).ZG179A  CK NUM               00699400
&ZMS               SETC  '"RSNCODE='                                    00699500
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00699600
&ZMS               SETC  '&ZMS "RSNCODE"'                               00699700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00699800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00699900
.ZG179A            ANOP  ,                                              00700000
.*-------------------------------------------------------------------   00700100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00700200
                   AIF   (K'&RSNCODE(1) LE 0).ZG179C  NO PARM           00700300
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00700400
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00700500
                   AIF   (N'&RSNCODE GT 1).ZG179C                       00700600
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00700700
.ZG179C            ANOP  ,                                              00700800
.*-------------------------------------------------------------------   00700900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00701000
                   AIF   (K'&ZXRSNCODE LE 0).ZG179R  NOT I/O            00701100
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG179R               00701200
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00701300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG179P                  00701400
                   AIF   (K'&ZCGPR GT 2).ZG179Q                         00701500
                   AIF   ('&ZCGPR' EQ '0').ZG179R                       00701600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00701700
                   AIF   (T'&ZCGPR NE 'N').ZG179Q  INVALID REG NAME     00701800
.ZG179P            ANOP  ,                                              00701900
                   AIF   (T'&ZCGPR NE 'N').ZG179R  NON NUMERIC          00702000
                   AIF   ('&ZCGPR' EQ '0').ZG179R                       00702100
                   AIF   ('&ZCGPR' LT '2').ZG179Q                       00702200
                   AIF   ('&ZCGPR' LE '12').ZG179R                      00702300
.ZG179Q            ANOP  ,                                              00702400
&ZMS               SETC  '"RSNCODE='                                    00702500
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00702600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00702700
                   MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'        00702800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00702900
.ZG179R            ANOP  ,                                              00703000
.******************************************************************     00703100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00703200
.******************************************************************     00703300
                   ACTR  10000                                          00703400
.*----------------------------------------------------------------***   00703500
.***AH.P02 EXTRA POSITIONALS                                            00703600
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00703700
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00703800
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00703900
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00704000
.ZGLISTX1          ANOP  ,                                              00704100
&ZCVAL             SETC  ''          ERROR FIELD                        00704200
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00704300
.ZGLIST2           ANOP  ,                                              00704400
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00704500
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00704600
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00704700
                   AGO   .ZGLIST2                                       00704800
.*                                                                      00704900
.ZGLIST3           ANOP  ,                                              00705000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00705100
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'                      00705200
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00705300
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00705400
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00705500
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00705600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00705700
.ZGLISTX           ANOP  ,                                              00705800
&ZASYSLNDX         SETA  0                                              00705900
.*-------------------------------------------------------------------   00706000
.***AG.MF04 MF=(SLE)                                                    00706100
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00706200
.*******************************************************************    00706300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00706400
.*******************************************************************    00706500
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00706600
.*******************************************************************    00706700
.***AE.01  START OF IXCMSGOX MACRO CODE                                 00706800
.*******************************************************************    00706900
                   LCLC  &M0M0001                 NAME                  00707000
&M0M0001           SETC  '&XLABEL'                SET NAME              00707100
                   AIF   (K'&XLABEL NE 0).XLAB2                         00707200
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00707300
.*                                                                      00707400
.XLAB2             ANOP  ,                                              00707500
                   AIF   ('&XMF' EQ 'L').XLAB3                          00707600
&M0M0001 DS    0H                             IXCMSGOX-6                00707700
.XLAB3             ANOP  ,                                              00707800
.*******************************************************************    00707900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00708000
.*******************************************************************    00708100
              PUSH  PRINT                                               00708200
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00708300
                   PRINT OFF         ++ PR01                            00708400
                   AGO   .ZPRNTXX                                       00708500
.ZPRINTX           PRINT ON                                             00708600
.ZPRNTXX           ANOP  ,                                              00708700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00708800
                                                                        00708900
.*                                                                      00709000
.* deleted &LINKAGE. Using LINKAGE keyword will cause the         @L3C  00709100
.* assemble to fail with a ASMA017W Undefined keyword             @L3C  00709200
.* parameter message                                              @L3C  00709300
.*                                                                      00709400
                                                                        00709500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00709600
.********************************************************************   00709700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00709800
.********************************************************************   00709900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00710000
                      LCLA  &ZOPN1         INVOCATION INDEX             00710100
                      LCLC  &ZOPL(4095)    LABEL                        00710200
                      LCLC  &ZOPO(4095)    OPERATION                    00710300
                      LCLC  &ZOPV(4095)    VALUE                        00710400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00710500
.*                                                                      00710600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00710700
.******************************************************************     00710800
.***AL.L10 IXCMSGOX FMT=LIST MF=S!L PARAMETERS                          00710900
.******************************************************************     00711000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00711100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00711200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00711300
&XMFATTR              SETC  '0D'                                        00711400
.*                                                                      00711500
&ZOPN                 SETA  &ZOPN+1                                     00711600
&ZOPL(&ZOPN)          SETC  ' '                                         00711700
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00711800
&ZOPV(&ZOPN)          SETC  '4,8'                                       00711900
&ZOPN                 SETA  &ZOPN+1                                     00712000
&ZOPL(&ZOPN)          SETC  ' '                                         00712100
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00712200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00712300
&ZOPD(&ZOPN)          SETC  '++ IXCMSGOX ARG PARMS'                     00712400
.*                                                                      00712500
&ZOPN                 SETA  &ZOPN+1                                     00712600
&ZOPL(&ZOPN)          SETC  ' '                                         00712700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00712800
&ZOPV(&ZOPN)          SETC  '1'                                         00712900
&ZOPD(&ZOPN)          SETC  ' '                                         00713000
.*                                                                      00713100
.ZLMFSL2              ANOP  ,                                           00713200
.*-------------------------------------------------------------------   00713300
.***AM.L00  IXCMSGOX FMT=LIST name                                      00713400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00713500
&ZOPN                 SETA &ZOPN+1                                      00713600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00713700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00713800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00713900
&ZOPD(&ZOPN)          SETC '++ IXCMSGOX NAME'                           00714000
.ZLMFSL2M             ANOP  ,                                           00714100
.*-------------------------------------------------------------------   00714200
.***AM.L01  IXCMSGOX FMT=LIST PARAMETERS                                00714300
&ZOPN                 SETA &ZOPN+1                                      00714400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00714500
&ZOPO(&ZOPN)          SETC 'DS'                                         00714600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00714700
&ZOPD(&ZOPN)          SETC '++ IXCMSGOX PARM LIST'                      00714800
.*-------------------------------------------------------------------   00714900
.***AM.L02 XVERSION XL1                                                 00715000
&ZOPN                 SETA &ZOPN+1                                      00715100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00715200
&ZOPO(&ZOPN)          SETC 'DS'                                         00715300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00715400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00715500
.*-------------------------------------------------------------------   00715600
.***AM.L09  XRSV0001 CL1                                                00715700
&ZOPN                 SETA &ZOPN+1                                      00715800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00715900
&ZOPO(&ZOPN)          SETC 'DS'                                         00716000
&ZOPV(&ZOPN)          SETC 'CL1'                                        00716100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00716200
.*-------------------------------------------------------------------   00716300
.***AM.L03 XKEYUSED4 BL.8                                               00716400
&ZOPN                 SETA &ZOPN+1                                      00716500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED4'                        00716600
&ZOPO(&ZOPN)          SETC 'DS'                                         00716700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00716800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00716900
.*                                                                      00717000
&ZOPN                 SETA  &ZOPN+1                                     00717100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGSTGKEY'               00717200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00717300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00717400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00717500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGSTGKEY'                    00717600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00717700
.*                                                                      00717800
&ZOPN                 SETA  &ZOPN+1                                     00717900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGCNTL'                 00718000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00718100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00718200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00718300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGCNTL'                      00718400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00718500
.*                                                                      00718600
&ZOPN                 SETA  &ZOPN+1                                     00718700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SUMPARTLENS'                     00718800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00718900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00719000
&ZOPD(&ZOPN)          SETC  '++ XMSGLEN.'                               00719100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMPARTLENS'                  00719200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00719300
.*-------------------------------------------------------------------   00719400
.***AM.L09  XMSGSTGKEY BL.8                                             00719500
&ZOPN                 SETA &ZOPN+1                                      00719600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGSTGKEY'                       00719700
&ZOPO(&ZOPN)          SETC 'DS'                                         00719800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00719900
&ZOPD(&ZOPN)          SETC '++ &ZXMSGSTGKEY '                           00720000
.*-------------------------------------------------------------------   00720100
.***AM.L09  XTARGET BL.64                                               00720200
&ZOPN                 SETA &ZOPN+1                                      00720300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGET'                          00720400
&ZOPO(&ZOPN)          SETC 'DS'                                         00720500
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00720600
&ZOPD(&ZOPN)          SETC '++ &ZXTARGET '                              00720700
.*-------------------------------------------------------------------   00720800
.***AM.L09 ALET XMSGBUF F                                               00720900
&ZOPN                 SETA &ZOPN+1                                      00721000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ALET'                     00721100
&ZOPO(&ZOPN)          SETC 'DS'                                         00721200
&ZOPV(&ZOPN)          SETC 'F'                                          00721300
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ALET'                          00721400
.*-------------------------------------------------------------------   00721500
.***AM.L09 ALET XMSGCNTL F                                              00721600
&ZOPN                 SETA &ZOPN+1                                      00721700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGCNTL_ALET'                    00721800
&ZOPO(&ZOPN)          SETC 'DS'                                         00721900
&ZOPV(&ZOPN)          SETC 'F'                                          00722000
&ZOPD(&ZOPN)          SETC '++ &ZXMSGCNTL ALET'                         00722100
.*-------------------------------------------------------------------   00722200
.***AM.L09  XMSGLEN F                                                   00722300
&ZOPN                 SETA &ZOPN+1                                      00722400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGLEN'                          00722500
&ZOPO(&ZOPN)          SETC 'DS'                                         00722600
&ZOPV(&ZOPN)          SETC 'F'                                          00722700
&ZOPD(&ZOPN)          SETC '++ &ZXMSGLEN '                              00722800
.*-------------------------------------------------------------------   00722900
.***AM.L09 ADDR64 XMSGBUF AD                                            00723000
&ZOPN                 SETA &ZOPN+1                                      00723100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ADDR64'                   00723200
&ZOPO(&ZOPN)          SETC 'DS'                                         00723300
&ZOPV(&ZOPN)          SETC 'AD'                                         00723400
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ADDR64'                        00723500
.*-------------------------------------------------------------------   00723600
.***AM.L09 ADDR64 XMSGCNTL AD                                           00723700
&ZOPN                 SETA &ZOPN+1                                      00723800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGCNTL_ADDR64'                  00723900
&ZOPO(&ZOPN)          SETC 'DS'                                         00724000
&ZOPV(&ZOPN)          SETC 'AD'                                         00724100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGCNTL ADDR64'                       00724200
.*-------------------------------------------------------------------   00724300
.***AM.L09  XMEMTOKEN BL.64                                             00724400
&ZOPN                 SETA &ZOPN+1                                      00724500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMTOKEN'                        00724600
&ZOPO(&ZOPN)          SETC 'DS'                                         00724700
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00724800
&ZOPD(&ZOPN)          SETC '++ &ZXMEMTOKEN '                            00724900
.*-------------------------------------------------------------------   00725000
.***AM.MLM2 SAVED LOCATION COUNTER                                      00725100
                      AIF  (&XPLISTVER GE 5).ZL15LA                     00725200
                      AIF  ('&ZENDBASEPL' NE '').ZL15LA                 00725300
&ZENDBASEPL           SETC 'YES'                                        00725400
&ZOPN                 SETA &ZOPN+1                                      00725500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00725600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00725700
&ZOPV(&ZOPN)          SETC '*'                                          00725800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00725900
.ZL15LA               ANOP  ,                                           00726000
.*-------------------------------------------------------------------   00726100
.***AM.LVER1                                                            00726200
                      AIF  (&XPLISTVER LT 5).ZL15L                      00726300
.*-------------------------------------------------------------------   00726400
.*-------------------------------------------------------------------   00726500
.***AM.L03 XKEYUSED5 BL.8                                               00726600
&ZOPN                 SETA &ZOPN+1                                      00726700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED5'                        00726800
&ZOPO(&ZOPN)          SETC 'DS'                                         00726900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00727000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00727100
.*-------------------------------------------------------------------   00727200
.***AM.LVER2                                                            00727300
.ZL15L                ANOP  ,                                           00727400
.*-------------------------------------------------------------------   00727500
.*-------------------------------------------------------------------   00727600
.***AM.LVER1                                                            00727700
                      AIF  (&XPLISTVER LT 5).ZL16L                      00727800
.*-------------------------------------------------------------------   00727900
.*                                                                      00728000
&ZOPN                 SETA  &ZOPN+1                                     00728100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSENDTO_GROUP'                   00728200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00728300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00728400
&ZOPD(&ZOPN)          SETC  '++ XSENDTO.'                               00728500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GROUP'                        00728600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00728700
.*-------------------------------------------------------------------   00728800
.***AM.LVER2                                                            00728900
.ZL16L                ANOP  ,                                           00729000
.*-------------------------------------------------------------------   00729100
.*-------------------------------------------------------------------   00729200
.***AM.LVER1                                                            00729300
                      AIF  (&XPLISTVER LT 5).ZL17L                      00729400
.*-------------------------------------------------------------------   00729500
.*                                                                      00729600
&ZOPN                 SETA  &ZOPN+1                                     00729700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSENDTO_ORIGINATOR'              00729800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00729900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00730000
&ZOPD(&ZOPN)          SETC  '++ XSENDTO.'                               00730100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ORIGINATOR'                   00730200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00730300
.*-------------------------------------------------------------------   00730400
.***AM.LVER2                                                            00730500
.ZL17L                ANOP  ,                                           00730600
.*-------------------------------------------------------------------   00730700
.*-------------------------------------------------------------------   00730800
.***AM.LVER1                                                            00730900
                      AIF  (&XPLISTVER LT 5).ZL18L                      00731000
.*-------------------------------------------------------------------   00731100
.*                                                                      00731200
&ZOPN                 SETA  &ZOPN+1                                     00731300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMEMBERS_TABLE'                  00731400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00731500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00731600
&ZOPD(&ZOPN)          SETC  '++ XMEMBERS.'                              00731700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TABLE'                        00731800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00731900
.*-------------------------------------------------------------------   00732000
.***AM.LVER2                                                            00732100
.ZL18L                ANOP  ,                                           00732200
.*-------------------------------------------------------------------   00732300
.*-------------------------------------------------------------------   00732400
.***AM.LVER1                                                            00732500
                      AIF  (&XPLISTVER LT 5).ZL19L                      00732600
.*-------------------------------------------------------------------   00732700
.*                                                                      00732800
&ZOPN                 SETA  &ZOPN+1                                     00732900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMEMBERS_ALL'                    00733000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00733100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00733200
&ZOPD(&ZOPN)          SETC  '++ XMEMBERS.'                              00733300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00733400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00733500
.*-------------------------------------------------------------------   00733600
.***AM.LVER2                                                            00733700
.ZL19L                ANOP  ,                                           00733800
.*-------------------------------------------------------------------   00733900
.*-------------------------------------------------------------------   00734000
.***AM.LVER1                                                            00734100
                      AIF  (&XPLISTVER LT 5).ZL20L                      00734200
.*-------------------------------------------------------------------   00734300
.*                                                                      00734400
&ZOPN                 SETA  &ZOPN+1                                     00734500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMEMBERS_OTHER'                  00734600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00734700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00734800
&ZOPD(&ZOPN)          SETC  '++ XMEMBERS.'                              00734900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OTHER'                        00735000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00735100
.*-------------------------------------------------------------------   00735200
.***AM.LVER2                                                            00735300
.ZL20L                ANOP  ,                                           00735400
.*-------------------------------------------------------------------   00735500
.*-------------------------------------------------------------------   00735600
.***AM.LVER1                                                            00735700
                      AIF  (&XPLISTVER LT 5).ZL21L                      00735800
.*-------------------------------------------------------------------   00735900
.*                                                                      00736000
&ZOPN                 SETA  &ZOPN+1                                     00736100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._NOTIFY_ONLYFAIL'                 00736200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00736300
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00736400
&ZOPD(&ZOPN)          SETC  '++ XNOTIFYIF.'                             00736500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FAILED'                       00736600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00736700
.*-------------------------------------------------------------------   00736800
.***AM.LVER2                                                            00736900
.ZL21L                ANOP  ,                                           00737000
.*-------------------------------------------------------------------   00737100
.*-------------------------------------------------------------------   00737200
.***AM.LVER1                                                            00737300
                      AIF  (&XPLISTVER LT 5).ZL22L                      00737400
.*-------------------------------------------------------------------   00737500
.*                                                                      00737600
&ZOPN                 SETA  &ZOPN+1                                     00737700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDELIVERMSG_ORDERED'             00737800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00737900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00738000
&ZOPD(&ZOPN)          SETC  '++ XDELIVERMSG.'                           00738100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ORDERED'                      00738200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00738300
.*-------------------------------------------------------------------   00738400
.***AM.LVER2                                                            00738500
.ZL22L                ANOP  ,                                           00738600
.*-------------------------------------------------------------------   00738700
.*-------------------------------------------------------------------   00738800
.***AM.LVER1                                                            00738900
                      AIF  (&XPLISTVER LT 5).ZL23L                      00739000
.*-------------------------------------------------------------------   00739100
.*                                                                      00739200
&ZOPN                 SETA  &ZOPN+1                                     00739300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDELIVERMSG_DUPLICATES'          00739400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00739500
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00739600
&ZOPD(&ZOPN)          SETC  '++ XDELIVERMSG.'                           00739700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DUPLICATES'                   00739800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00739900
.*-------------------------------------------------------------------   00740000
.***AM.LVER2                                                            00740100
.ZL23L                ANOP  ,                                           00740200
.*-------------------------------------------------------------------   00740300
.*-------------------------------------------------------------------   00740400
.***AM.LVER1                                                            00740500
                      AIF  (&XPLISTVER LT 5).ZL24L                      00740600
.*-------------------------------------------------------------------   00740700
.*-------------------------------------------------------------------   00740800
.***AM.L03 XKEYUSED5A BL.8                                              00740900
&ZOPN                 SETA &ZOPN+1                                      00741000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED5A'                       00741100
&ZOPO(&ZOPN)          SETC 'DS'                                         00741200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00741300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00741400
.*-------------------------------------------------------------------   00741500
.***AM.LVER2                                                            00741600
.ZL24L                ANOP  ,                                           00741700
.*-------------------------------------------------------------------   00741800
.*-------------------------------------------------------------------   00741900
.***AM.LVER1                                                            00742000
                      AIF  (&XPLISTVER LT 5).ZL25L                      00742100
.*-------------------------------------------------------------------   00742200
.*                                                                      00742300
&ZOPN                 SETA  &ZOPN+1                                     00742400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TIMEOUT'                 00742500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00742600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00742700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00742800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TIMEOUT'                      00742900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00743000
.*-------------------------------------------------------------------   00743100
.***AM.LVER2                                                            00743200
.ZL25L                ANOP  ,                                           00743300
.*-------------------------------------------------------------------   00743400
.*-------------------------------------------------------------------   00743500
.***AM.LVER1                                                            00743600
                      AIF  (&XPLISTVER LT 5).ZL26L                      00743700
.*-------------------------------------------------------------------   00743800
.*                                                                      00743900
&ZOPN                 SETA  &ZOPN+1                                     00744000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XGETRESPONSE_YES'                00744100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00744200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00744300
&ZOPD(&ZOPN)          SETC  '++ XGETRESPONSE.'                          00744400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00744500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00744600
.*-------------------------------------------------------------------   00744700
.***AM.LVER2                                                            00744800
.ZL26L                ANOP  ,                                           00744900
.*-------------------------------------------------------------------   00745000
.*-------------------------------------------------------------------   00745100
.***AM.LVER1                                                            00745200
                      AIF  (&XPLISTVER LT 5).ZL27L                      00745300
.*-------------------------------------------------------------------   00745400
.*                                                                      00745500
&ZOPN                 SETA  &ZOPN+1                                     00745600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RETMSGOTOKEN'            00745700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00745800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00745900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00746000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RETMSGOTOKEN'                 00746100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00746200
.*-------------------------------------------------------------------   00746300
.***AM.LVER2                                                            00746400
.ZL27L                ANOP  ,                                           00746500
.*-------------------------------------------------------------------   00746600
.*-------------------------------------------------------------------   00746700
.***AM.LVER1                                                            00746800
                      AIF  (&XPLISTVER LT 5).ZL28L                      00746900
.*-------------------------------------------------------------------   00747000
.*                                                                      00747100
&ZOPN                 SETA  &ZOPN+1                                     00747200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ASYNCMSGACCESS'                  00747300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00747400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00747500
&ZOPD(&ZOPN)          SETC  '++ XMSGACCESS.'                            00747600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNC'                        00747700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00747800
.*-------------------------------------------------------------------   00747900
.***AM.LVER2                                                            00748000
.ZL28L                ANOP  ,                                           00748100
.*-------------------------------------------------------------------   00748200
.*-------------------------------------------------------------------   00748300
.***AM.LVER1                                                            00748400
                      AIF  (&XPLISTVER LT 5).ZL29L                      00748500
.*-------------------------------------------------------------------   00748600
.*                                                                      00748700
&ZOPN                 SETA  &ZOPN+1                                     00748800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XNOTIFYBY_EXIT'                  00748900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00749000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00749100
&ZOPD(&ZOPN)          SETC  '++ XNOTIFYBY.'                             00749200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXIT'                         00749300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00749400
.*-------------------------------------------------------------------   00749500
.***AM.LVER2                                                            00749600
.ZL29L                ANOP  ,                                           00749700
.*-------------------------------------------------------------------   00749800
.*-------------------------------------------------------------------   00749900
.***AM.LVER1                                                            00750000
                      AIF  (&XPLISTVER LT 5).ZL30L                      00750100
.*-------------------------------------------------------------------   00750200
.*                                                                      00750300
&ZOPN                 SETA  &ZOPN+1                                     00750400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGACCESS_SYNCSUSPEND'          00750500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00750600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00750700
&ZOPD(&ZOPN)          SETC  '++ XMSGACCESS.'                            00750800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCSUSPEND'                  00750900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00751000
.*-------------------------------------------------------------------   00751100
.***AM.LVER2                                                            00751200
.ZL30L                ANOP  ,                                           00751300
.*-------------------------------------------------------------------   00751400
.*-------------------------------------------------------------------   00751500
.***AM.LVER1                                                            00751600
                      AIF  (&XPLISTVER LT 5).ZL31L                      00751700
.*-------------------------------------------------------------------   00751800
.*                                                                      00751900
&ZOPN                 SETA  &ZOPN+1                                     00752000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_FILTERGROUP'             00752100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00752200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00752300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00752400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FILTERGROUP'                  00752500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00752600
.*-------------------------------------------------------------------   00752700
.***AM.LVER2                                                            00752800
.ZL31L                ANOP  ,                                           00752900
.*-------------------------------------------------------------------   00753000
.*-------------------------------------------------------------------   00753100
.***AM.LVER1                                                            00753200
                      AIF  (&XPLISTVER LT 5).ZL32L                      00753300
.*-------------------------------------------------------------------   00753400
.*-------------------------------------------------------------------   00753500
.***AM.L09  XTIMEOUT XL2                                                00753600
&ZOPN                 SETA &ZOPN+1                                      00753700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTIMEOUT'                         00753800
&ZOPO(&ZOPN)          SETC 'DS'                                         00753900
&ZOPV(&ZOPN)          SETC 'XL2'                                        00754000
&ZOPD(&ZOPN)          SETC '++ &ZXTIMEOUT '                             00754100
.*-------------------------------------------------------------------   00754200
.***AM.LVER2                                                            00754300
.ZL32L                ANOP  ,                                           00754400
.*-------------------------------------------------------------------   00754500
.*-------------------------------------------------------------------   00754600
.***AM.LVER1                                                            00754700
                      AIF  (&XPLISTVER LT 5).ZL33L                      00754800
.*-------------------------------------------------------------------   00754900
.*-------------------------------------------------------------------   00755000
.***AM.L09  XNOTIFYEXIT A                                               00755100
&ZOPN                 SETA &ZOPN+1                                      00755200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNOTIFYEXIT'                      00755300
&ZOPO(&ZOPN)          SETC 'DS'                                         00755400
&ZOPV(&ZOPN)          SETC 'A'                                          00755500
&ZOPD(&ZOPN)          SETC '++ &ZXNOTIFYEXIT '                          00755600
.*-------------------------------------------------------------------   00755700
.***AM.LVER2                                                            00755800
.ZL33L                ANOP  ,                                           00755900
.*-------------------------------------------------------------------   00756000
.*-------------------------------------------------------------------   00756100
.***AM.LVER1                                                            00756200
                      AIF  (&XPLISTVER LT 5).ZL34L                      00756300
.*-------------------------------------------------------------------   00756400
.*-------------------------------------------------------------------   00756500
.***AM.L09 ADDR64 XTARGETS AD                                           00756600
&ZOPN                 SETA &ZOPN+1                                      00756700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGETS_ADDR64'                  00756800
&ZOPO(&ZOPN)          SETC 'DS'                                         00756900
&ZOPV(&ZOPN)          SETC 'AD'                                         00757000
&ZOPD(&ZOPN)          SETC '++ &ZXTARGETS ADDR64'                       00757100
.*-------------------------------------------------------------------   00757200
.***AM.LVER2                                                            00757300
.ZL34L                ANOP  ,                                           00757400
.*-------------------------------------------------------------------   00757500
.*-------------------------------------------------------------------   00757600
.***AM.LVER1                                                            00757700
                      AIF  (&XPLISTVER LT 5).ZL35L                      00757800
.*-------------------------------------------------------------------   00757900
.*-------------------------------------------------------------------   00758000
.***AM.L09 ADDR64 XRETMSGOTOKEN AD                                      00758100
&ZOPN                 SETA &ZOPN+1                                      00758200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGOTOKEN_ADDR64'             00758300
&ZOPO(&ZOPN)          SETC 'DS'                                         00758400
&ZOPV(&ZOPN)          SETC 'AD'                                         00758500
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGOTOKEN ADDR64'                  00758600
.*-------------------------------------------------------------------   00758700
.***AM.LVER2                                                            00758800
.ZL35L                ANOP  ,                                           00758900
.*-------------------------------------------------------------------   00759000
.*-------------------------------------------------------------------   00759100
.***AM.LVER1                                                            00759200
                      AIF  (&XPLISTVER LT 5).ZL36L                      00759300
.*-------------------------------------------------------------------   00759400
.*-------------------------------------------------------------------   00759500
.***AM.L09  XRESPONSEID CL24                                            00759600
&ZOPN                 SETA &ZOPN+1                                      00759700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESPONSEID'                      00759800
&ZOPO(&ZOPN)          SETC 'DS'                                         00759900
&ZOPV(&ZOPN)          SETC 'CL24'                                       00760000
&ZOPD(&ZOPN)          SETC '++ &ZXRESPONSEID '                          00760100
.*-------------------------------------------------------------------   00760200
.***AM.LVER2                                                            00760300
.ZL36L                ANOP  ,                                           00760400
.*-------------------------------------------------------------------   00760500
.*-------------------------------------------------------------------   00760600
.***AM.LVER1                                                            00760700
                      AIF  (&XPLISTVER LT 5).ZL37L                      00760800
.*-------------------------------------------------------------------   00760900
.*-------------------------------------------------------------------   00761000
.***AM.L09  XUSERDATA CL8                                               00761100
&ZOPN                 SETA &ZOPN+1                                      00761200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00761300
&ZOPO(&ZOPN)          SETC 'DS'                                         00761400
&ZOPV(&ZOPN)          SETC 'CL8'                                        00761500
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA '                            00761600
.*-------------------------------------------------------------------   00761700
.***AM.LVER2                                                            00761800
.ZL37L                ANOP  ,                                           00761900
.*-------------------------------------------------------------------   00762000
.*-------------------------------------------------------------------   00762100
.***AM.LVER1                                                            00762200
                      AIF  (&XPLISTVER LT 5).ZL38L                      00762300
.*-------------------------------------------------------------------   00762400
.*-------------------------------------------------------------------   00762500
.***AM.L09  XSTREAMID F                                                 00762600
&ZOPN                 SETA &ZOPN+1                                      00762700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTREAMID'                        00762800
&ZOPO(&ZOPN)          SETC 'DS'                                         00762900
&ZOPV(&ZOPN)          SETC 'F'                                          00763000
&ZOPD(&ZOPN)          SETC '++ &ZXSTREAMID '                            00763100
.*-------------------------------------------------------------------   00763200
.***AM.LVER2                                                            00763300
.ZL38L                ANOP  ,                                           00763400
.*-------------------------------------------------------------------   00763500
.*-------------------------------------------------------------------   00763600
.***AM.LVER1                                                            00763700
                      AIF  (&XPLISTVER LT 5).ZL39L                      00763800
.*-------------------------------------------------------------------   00763900
.*-------------------------------------------------------------------   00764000
.***AM.L09  X#TARGETS F                                                 00764100
&ZOPN                 SETA &ZOPN+1                                      00764200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#TARGETS'                        00764300
&ZOPO(&ZOPN)          SETC 'DS'                                         00764400
&ZOPV(&ZOPN)          SETC 'F'                                          00764500
&ZOPD(&ZOPN)          SETC '++ &ZX#TARGETS '                            00764600
.*-------------------------------------------------------------------   00764700
.***AM.LVER2                                                            00764800
.ZL39L                ANOP  ,                                           00764900
.*-------------------------------------------------------------------   00765000
.*-------------------------------------------------------------------   00765100
.***AM.LVER1                                                            00765200
                      AIF  (&XPLISTVER LT 5).ZL40L                      00765300
.*-------------------------------------------------------------------   00765400
.*-------------------------------------------------------------------   00765500
.***AM.L09  XNEXTTARGETOFF F                                            00765600
&ZOPN                 SETA &ZOPN+1                                      00765700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTTARGETOFF'                   00765800
&ZOPO(&ZOPN)          SETC 'DS'                                         00765900
&ZOPV(&ZOPN)          SETC 'F'                                          00766000
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTTARGETOFF '                       00766100
.*-------------------------------------------------------------------   00766200
.***AM.LVER2                                                            00766300
.ZL40L                ANOP  ,                                           00766400
.*-------------------------------------------------------------------   00766500
.*-------------------------------------------------------------------   00766600
.***AM.LVER1                                                            00766700
                      AIF  (&XPLISTVER LT 5).ZL41L                      00766800
.*-------------------------------------------------------------------   00766900
.*-------------------------------------------------------------------   00767000
.***AM.L09 ALET XTARGETS F                                              00767100
&ZOPN                 SETA &ZOPN+1                                      00767200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGETS_ALET'                    00767300
&ZOPO(&ZOPN)          SETC 'DS'                                         00767400
&ZOPV(&ZOPN)          SETC 'F'                                          00767500
&ZOPD(&ZOPN)          SETC '++ &ZXTARGETS ALET'                         00767600
.*-------------------------------------------------------------------   00767700
.***AM.LVER2                                                            00767800
.ZL41L                ANOP  ,                                           00767900
.*-------------------------------------------------------------------   00768000
.*-------------------------------------------------------------------   00768100
.***AM.LVER1                                                            00768200
                      AIF  (&XPLISTVER LT 5).ZL42L                      00768300
.*-------------------------------------------------------------------   00768400
.*-------------------------------------------------------------------   00768500
.***AM.L09 ALET XRETMSGOTOKEN F                                         00768600
&ZOPN                 SETA &ZOPN+1                                      00768700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGOTOKEN_ALET'               00768800
&ZOPO(&ZOPN)          SETC 'DS'                                         00768900
&ZOPV(&ZOPN)          SETC 'F'                                          00769000
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGOTOKEN ALET'                    00769100
.*-------------------------------------------------------------------   00769200
.***AM.LVER2                                                            00769300
.ZL42L                ANOP  ,                                           00769400
.*-------------------------------------------------------------------   00769500
.*-------------------------------------------------------------------   00769600
.***AM.LVER1                                                            00769700
                      AIF  (&XPLISTVER LT 5).ZL43L                      00769800
.*-------------------------------------------------------------------   00769900
.*-------------------------------------------------------------------   00770000
.***AM.L03 XATTRIBUTEFLAGS BL.32                                        00770100
&ZOPN                 SETA &ZOPN+1                                      00770200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XATTRIBUTEFLAGS'                  00770300
&ZOPO(&ZOPN)          SETC 'DS'                                         00770400
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00770500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00770600
.*-------------------------------------------------------------------   00770700
.***AM.LVER2                                                            00770800
.ZL43L                ANOP  ,                                           00770900
.*-------------------------------------------------------------------   00771000
.*-------------------------------------------------------------------   00771100
.***AM.LVER1                                                            00771200
                      AIF  (&XPLISTVER LT 5).ZL44L                      00771300
.*-------------------------------------------------------------------   00771400
.*                                                                      00771500
&ZOPN                 SETA  &ZOPN+1                                     00771600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XATTRIBUTES_RECOVERY'            00771700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00771800
&ZOPV(&ZOPN)          SETC  'B''10000000000000000000000000000000'''     00771900
&ZOPD(&ZOPN)          SETC  '++ XATTRIBUTES.'                           00772000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RECOVERY'                     00772100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00772200
.*-------------------------------------------------------------------   00772300
.***AM.LVER2                                                            00772400
.ZL44L                ANOP  ,                                           00772500
.*-------------------------------------------------------------------   00772600
.*-------------------------------------------------------------------   00772700
.***AM.LVER1                                                            00772800
                      AIF  (&XPLISTVER LT 5).ZL45L                      00772900
.*-------------------------------------------------------------------   00773000
.*                                                                      00773100
&ZOPN                 SETA  &ZOPN+1                                     00773200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XATTRIBUTES_CRITICAL'            00773300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00773400
&ZOPV(&ZOPN)          SETC  'B''01000000000000000000000000000000'''     00773500
&ZOPD(&ZOPN)          SETC  '++ XATTRIBUTES.'                           00773600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CRITICAL'                     00773700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00773800
.*-------------------------------------------------------------------   00773900
.***AM.LVER2                                                            00774000
.ZL45L                ANOP  ,                                           00774100
.*-------------------------------------------------------------------   00774200
.*-------------------------------------------------------------------   00774300
.***AM.MLM2 SAVED LOCATION COUNTER                                      00774400
                      AIF  (&XPLISTVER GE 6).ZL46LA                     00774500
                      AIF  ('&ZENDBASEPL' NE '').ZL46LA                 00774600
&ZENDBASEPL           SETC 'YES'                                        00774700
&ZOPN                 SETA &ZOPN+1                                      00774800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00774900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00775000
&ZOPV(&ZOPN)          SETC '*'                                          00775100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00775200
.ZL46LA               ANOP  ,                                           00775300
.*-------------------------------------------------------------------   00775400
.***AM.LVER1                                                            00775500
                      AIF  (&XPLISTVER LT 6).ZL46L                      00775600
.*-------------------------------------------------------------------   00775700
.*-------------------------------------------------------------------   00775800
.***AM.L03 XKEYUSED6 BL.8                                               00775900
&ZOPN                 SETA &ZOPN+1                                      00776000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED6'                        00776100
&ZOPO(&ZOPN)          SETC 'DS'                                         00776200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00776300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00776400
.*-------------------------------------------------------------------   00776500
.***AM.LVER2                                                            00776600
.ZL46L                ANOP  ,                                           00776700
.*-------------------------------------------------------------------   00776800
.*-------------------------------------------------------------------   00776900
.***AM.LVER1                                                            00777000
                      AIF  (&XPLISTVER LT 6).ZL47L                      00777100
.*-------------------------------------------------------------------   00777200
.*                                                                      00777300
&ZOPN                 SETA  &ZOPN+1                                     00777400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MULTIPART_MSG'                   00777500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00777600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00777700
&ZOPD(&ZOPN)          SETC  '++ XMULTIPART.'                            00777800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00777900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00778000
.*-------------------------------------------------------------------   00778100
.***AM.LVER2                                                            00778200
.ZL47L                ANOP  ,                                           00778300
.*-------------------------------------------------------------------   00778400
.*-------------------------------------------------------------------   00778500
.***AM.LVER1                                                            00778600
                      AIF  (&XPLISTVER LT 6).ZL48L                      00778700
.*-------------------------------------------------------------------   00778800
.*                                                                      00778900
&ZOPN                 SETA  &ZOPN+1                                     00779000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ELEMENTS_QUEUED'                 00779100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00779200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00779300
&ZOPD(&ZOPN)          SETC  '++ XELEMFORM.'                             00779400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUEUE'                        00779500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00779600
.*-------------------------------------------------------------------   00779700
.***AM.LVER2                                                            00779800
.ZL48L                ANOP  ,                                           00779900
.*-------------------------------------------------------------------   00780000
.*-------------------------------------------------------------------   00780100
.***AM.LVER1                                                            00780200
                      AIF  (&XPLISTVER LT 6).ZL49L                      00780300
.*-------------------------------------------------------------------   00780400
.*                                                                      00780500
&ZOPN                 SETA  &ZOPN+1                                     00780600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTPTROFF'              00780700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00780800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00780900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00781000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTPTROFF'                   00781100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00781200
.*-------------------------------------------------------------------   00781300
.***AM.LVER2                                                            00781400
.ZL49L                ANOP  ,                                           00781500
.*-------------------------------------------------------------------   00781600
.*-------------------------------------------------------------------   00781700
.***AM.LVER1                                                            00781800
                      AIF  (&XPLISTVER LT 6).ZL50L                      00781900
.*-------------------------------------------------------------------   00782000
.*                                                                      00782100
&ZOPN                 SETA  &ZOPN+1                                     00782200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETTBL'             00782300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00782400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00782500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00782600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETTBL'                  00782700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00782800
.*-------------------------------------------------------------------   00782900
.***AM.LVER2                                                            00783000
.ZL50L                ANOP  ,                                           00783100
.*-------------------------------------------------------------------   00783200
.*-------------------------------------------------------------------   00783300
.***AM.LVER1                                                            00783400
                      AIF  (&XPLISTVER LT 6).ZL51L                      00783500
.*-------------------------------------------------------------------   00783600
.*                                                                      00783700
&ZOPN                 SETA  &ZOPN+1                                     00783800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETOFF'             00783900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00784000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00784100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00784200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETOFF'                  00784300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00784400
.*-------------------------------------------------------------------   00784500
.***AM.LVER2                                                            00784600
.ZL51L                ANOP  ,                                           00784700
.*-------------------------------------------------------------------   00784800
.*-------------------------------------------------------------------   00784900
.***AM.LVER1                                                            00785000
                      AIF  (&XPLISTVER LT 6).ZL52L                      00785100
.*-------------------------------------------------------------------   00785200
.*                                                                      00785300
&ZOPN                 SETA  &ZOPN+1                                     00785400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENTBL'              00785500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00785600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00785700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00785800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENTBL'                   00785900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00786000
.*-------------------------------------------------------------------   00786100
.***AM.LVER2                                                            00786200
.ZL52L                ANOP  ,                                           00786300
.*-------------------------------------------------------------------   00786400
.*-------------------------------------------------------------------   00786500
.***AM.LVER1                                                            00786600
                      AIF  (&XPLISTVER LT 6).ZL53L                      00786700
.*-------------------------------------------------------------------   00786800
.*                                                                      00786900
&ZOPN                 SETA  &ZOPN+1                                     00787000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENOFF'              00787100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00787200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00787300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00787400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENOFF'                   00787500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00787600
.*-------------------------------------------------------------------   00787700
.***AM.LVER2                                                            00787800
.ZL53L                ANOP  ,                                           00787900
.*-------------------------------------------------------------------   00788000
.*-------------------------------------------------------------------   00788100
.***AM.LVER1                                                            00788200
                      AIF  (&XPLISTVER LT 6).ZL54L                      00788300
.*-------------------------------------------------------------------   00788400
.*                                                                      00788500
&ZOPN                 SETA  &ZOPN+1                                     00788600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_#MSGPARTS'               00788700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00788800
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00788900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00789000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).#MSGPARTS'                    00789100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00789200
.*-------------------------------------------------------------------   00789300
.***AM.LVER2                                                            00789400
.ZL54L                ANOP  ,                                           00789500
.*-------------------------------------------------------------------   00789600
.*-------------------------------------------------------------------   00789700
.***AM.LVER1                                                            00789800
                      AIF  (&XPLISTVER LT 6).ZL55L                      00789900
.*-------------------------------------------------------------------   00790000
.*-------------------------------------------------------------------   00790100
.***AM.L03 XKEYUSED6A BL.8                                              00790200
&ZOPN                 SETA &ZOPN+1                                      00790300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED6A'                       00790400
&ZOPO(&ZOPN)          SETC 'DS'                                         00790500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00790600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00790700
.*-------------------------------------------------------------------   00790800
.***AM.LVER2                                                            00790900
.ZL55L                ANOP  ,                                           00791000
.*-------------------------------------------------------------------   00791100
.*-------------------------------------------------------------------   00791200
.***AM.LVER1                                                            00791300
                      AIF  (&XPLISTVER LT 6).ZL56L                      00791400
.*-------------------------------------------------------------------   00791500
.*                                                                      00791600
&ZOPN                 SETA  &ZOPN+1                                     00791700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XELEMADDRMODE_31'                00791800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00791900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00792000
&ZOPD(&ZOPN)          SETC  '++ XELEMADDRMODE.'                         00792100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).31'                           00792200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00792300
.*-------------------------------------------------------------------   00792400
.***AM.LVER2                                                            00792500
.ZL56L                ANOP  ,                                           00792600
.*-------------------------------------------------------------------   00792700
.*-------------------------------------------------------------------   00792800
.***AM.LVER1                                                            00792900
                      AIF  (&XPLISTVER LT 6).ZL57L                      00793000
.*-------------------------------------------------------------------   00793100
.*-------------------------------------------------------------------   00793200
.***AM.L09  XSENDTIME XL2                                               00793300
&ZOPN                 SETA &ZOPN+1                                      00793400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSENDTIME'                        00793500
&ZOPO(&ZOPN)          SETC 'DS'                                         00793600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00793700
&ZOPD(&ZOPN)          SETC '++ &ZXSENDTIME '                            00793800
.*-------------------------------------------------------------------   00793900
.***AM.LVER2                                                            00794000
.ZL57L                ANOP  ,                                           00794100
.*-------------------------------------------------------------------   00794200
.*-------------------------------------------------------------------   00794300
.***AM.LVER1                                                            00794400
                      AIF  (&XPLISTVER LT 6).ZL58L                      00794500
.*-------------------------------------------------------------------   00794600
.*-------------------------------------------------------------------   00794700
.***AM.L09 ALET XELEMENT F                                              00794800
&ZOPN                 SETA &ZOPN+1                                      00794900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ALET'                    00795000
&ZOPO(&ZOPN)          SETC 'DS'                                         00795100
&ZOPV(&ZOPN)          SETC 'F'                                          00795200
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ALET'                         00795300
.*-------------------------------------------------------------------   00795400
.***AM.LVER2                                                            00795500
.ZL58L                ANOP  ,                                           00795600
.*-------------------------------------------------------------------   00795700
.*-------------------------------------------------------------------   00795800
.***AM.LVER1                                                            00795900
                      AIF  (&XPLISTVER LT 6).ZL59L                      00796000
.*-------------------------------------------------------------------   00796100
.*-------------------------------------------------------------------   00796200
.***AM.L09 ALET XPARTLENTBL F                                           00796300
&ZOPN                 SETA &ZOPN+1                                      00796400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ALET'                 00796500
&ZOPO(&ZOPN)          SETC 'DS'                                         00796600
&ZOPV(&ZOPN)          SETC 'F'                                          00796700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ALET'                      00796800
.*-------------------------------------------------------------------   00796900
.***AM.LVER2                                                            00797000
.ZL59L                ANOP  ,                                           00797100
.*-------------------------------------------------------------------   00797200
.*-------------------------------------------------------------------   00797300
.***AM.LVER1                                                            00797400
                      AIF  (&XPLISTVER LT 6).ZL60L                      00797500
.*-------------------------------------------------------------------   00797600
.*-------------------------------------------------------------------   00797700
.***AM.L09 ALET XPARTALETTBL F                                          00797800
&ZOPN                 SETA &ZOPN+1                                      00797900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ALET'                00798000
&ZOPO(&ZOPN)          SETC 'DS'                                         00798100
&ZOPV(&ZOPN)          SETC 'F'                                          00798200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ALET'                     00798300
.*-------------------------------------------------------------------   00798400
.***AM.LVER2                                                            00798500
.ZL60L                ANOP  ,                                           00798600
.*-------------------------------------------------------------------   00798700
.*-------------------------------------------------------------------   00798800
.***AM.LVER1                                                            00798900
                      AIF  (&XPLISTVER LT 6).ZL61L                      00799000
.*-------------------------------------------------------------------   00799100
.*-------------------------------------------------------------------   00799200
.***AM.L09  XPARTALET F                                                 00799300
&ZOPN                 SETA &ZOPN+1                                      00799400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALET'                        00799500
&ZOPO(&ZOPN)          SETC 'DS'                                         00799600
&ZOPV(&ZOPN)          SETC 'F'                                          00799700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALET '                            00799800
.*-------------------------------------------------------------------   00799900
.***AM.LVER2                                                            00800000
.ZL61L                ANOP  ,                                           00800100
.*-------------------------------------------------------------------   00800200
.*-------------------------------------------------------------------   00800300
.***AM.LVER1                                                            00800400
                      AIF  (&XPLISTVER LT 6).ZL62L                      00800500
.*-------------------------------------------------------------------   00800600
.*-------------------------------------------------------------------   00800700
.***AM.L09  XPARTALETOFF F                                              00800800
&ZOPN                 SETA &ZOPN+1                                      00800900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETOFF'                     00801000
&ZOPO(&ZOPN)          SETC 'DS'                                         00801100
&ZOPV(&ZOPN)          SETC 'F'                                          00801200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETOFF '                         00801300
.*-------------------------------------------------------------------   00801400
.***AM.LVER2                                                            00801500
.ZL62L                ANOP  ,                                           00801600
.*-------------------------------------------------------------------   00801700
.*-------------------------------------------------------------------   00801800
.***AM.LVER1                                                            00801900
                      AIF  (&XPLISTVER LT 6).ZL63L                      00802000
.*-------------------------------------------------------------------   00802100
.*-------------------------------------------------------------------   00802200
.***AM.L09 ADDR64 XELEMENT AD                                           00802300
&ZOPN                 SETA &ZOPN+1                                      00802400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ADDR64'                  00802500
&ZOPO(&ZOPN)          SETC 'DS'                                         00802600
&ZOPV(&ZOPN)          SETC 'AD'                                         00802700
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ADDR64'                       00802800
.*-------------------------------------------------------------------   00802900
.***AM.LVER2                                                            00803000
.ZL63L                ANOP  ,                                           00803100
.*-------------------------------------------------------------------   00803200
.*-------------------------------------------------------------------   00803300
.***AM.LVER1                                                            00803400
                      AIF  (&XPLISTVER LT 6).ZL64L                      00803500
.*-------------------------------------------------------------------   00803600
.*-------------------------------------------------------------------   00803700
.***AM.L09 ADDR64 XPARTLENTBL AD                                        00803800
&ZOPN                 SETA &ZOPN+1                                      00803900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ADDR64'               00804000
&ZOPO(&ZOPN)          SETC 'DS'                                         00804100
&ZOPV(&ZOPN)          SETC 'AD'                                         00804200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ADDR64'                    00804300
.*-------------------------------------------------------------------   00804400
.***AM.LVER2                                                            00804500
.ZL64L                ANOP  ,                                           00804600
.*-------------------------------------------------------------------   00804700
.*-------------------------------------------------------------------   00804800
.***AM.LVER1                                                            00804900
                      AIF  (&XPLISTVER LT 6).ZL65L                      00805000
.*-------------------------------------------------------------------   00805100
.*-------------------------------------------------------------------   00805200
.***AM.L09 ADDR64 XPARTALETTBL AD                                       00805300
&ZOPN                 SETA &ZOPN+1                                      00805400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ADDR64'              00805500
&ZOPO(&ZOPN)          SETC 'DS'                                         00805600
&ZOPV(&ZOPN)          SETC 'AD'                                         00805700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ADDR64'                   00805800
.*-------------------------------------------------------------------   00805900
.***AM.LVER2                                                            00806000
.ZL65L                ANOP  ,                                           00806100
.*-------------------------------------------------------------------   00806200
.*-------------------------------------------------------------------   00806300
.***AM.LVER1                                                            00806400
                      AIF  (&XPLISTVER LT 6).ZL66L                      00806500
.*-------------------------------------------------------------------   00806600
.*-------------------------------------------------------------------   00806700
.***AM.L09  XPARTOFF F                                                  00806800
&ZOPN                 SETA &ZOPN+1                                      00806900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTOFF'                         00807000
&ZOPO(&ZOPN)          SETC 'DS'                                         00807100
&ZOPV(&ZOPN)          SETC 'F'                                          00807200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTOFF '                             00807300
.*-------------------------------------------------------------------   00807400
.***AM.LVER2                                                            00807500
.ZL66L                ANOP  ,                                           00807600
.*-------------------------------------------------------------------   00807700
.*-------------------------------------------------------------------   00807800
.***AM.LVER1                                                            00807900
                      AIF  (&XPLISTVER LT 6).ZL67L                      00808000
.*-------------------------------------------------------------------   00808100
.*-------------------------------------------------------------------   00808200
.***AM.L09  XCOPYOFTIMEOUT XL2                                          00808300
&ZOPN                 SETA &ZOPN+1                                      00808400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOPYOFTIMEOUT'                   00808500
&ZOPO(&ZOPN)          SETC 'DS'                                         00808600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00808700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00808800
.*-------------------------------------------------------------------   00808900
.***AM.LVER2                                                            00809000
.ZL67L                ANOP  ,                                           00809100
.*-------------------------------------------------------------------   00809200
.*-------------------------------------------------------------------   00809300
.***AM.LVER1                                                            00809400
                      AIF  (&XPLISTVER LT 6).ZL68L                      00809500
.*-------------------------------------------------------------------   00809600
.*-------------------------------------------------------------------   00809700
.***AM.L09  XRSV0003 CL2                                                00809800
&ZOPN                 SETA &ZOPN+1                                      00809900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0003'                         00810000
&ZOPO(&ZOPN)          SETC 'DS'                                         00810100
&ZOPV(&ZOPN)          SETC 'CL2'                                        00810200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00810300
.*-------------------------------------------------------------------   00810400
.***AM.LVER2                                                            00810500
.ZL68L                ANOP  ,                                           00810600
.*-------------------------------------------------------------------   00810700
.*-------------------------------------------------------------------   00810800
.***AM.LVER1                                                            00810900
                      AIF  (&XPLISTVER LT 6).ZL69L                      00811000
.*-------------------------------------------------------------------   00811100
.*-------------------------------------------------------------------   00811200
.***AM.L09  XENDOFQUEUE AD                                              00811300
&ZOPN                 SETA &ZOPN+1                                      00811400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDOFQUEUE'                      00811500
&ZOPO(&ZOPN)          SETC 'DS'                                         00811600
&ZOPV(&ZOPN)          SETC 'AD'                                         00811700
&ZOPD(&ZOPN)          SETC '++ &ZXENDOFQUEUE '                          00811800
.*-------------------------------------------------------------------   00811900
.***AM.LVER2                                                            00812000
.ZL69L                ANOP  ,                                           00812100
.*-------------------------------------------------------------------   00812200
.*-------------------------------------------------------------------   00812300
.***AM.LVER1                                                            00812400
                      AIF  (&XPLISTVER LT 6).ZL70L                      00812500
.*-------------------------------------------------------------------   00812600
.*-------------------------------------------------------------------   00812700
.***AM.L09  XPARTPTROFF F                                               00812800
&ZOPN                 SETA &ZOPN+1                                      00812900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTPTROFF'                      00813000
&ZOPO(&ZOPN)          SETC 'DS'                                         00813100
&ZOPV(&ZOPN)          SETC 'F'                                          00813200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTPTROFF '                          00813300
.*-------------------------------------------------------------------   00813400
.***AM.LVER2                                                            00813500
.ZL70L                ANOP  ,                                           00813600
.*-------------------------------------------------------------------   00813700
.*-------------------------------------------------------------------   00813800
.***AM.LVER1                                                            00813900
                      AIF  (&XPLISTVER LT 6).ZL71L                      00814000
.*-------------------------------------------------------------------   00814100
.*-------------------------------------------------------------------   00814200
.***AM.L09  XPARTLEN F                                                  00814300
&ZOPN                 SETA &ZOPN+1                                      00814400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLEN'                         00814500
&ZOPO(&ZOPN)          SETC 'DS'                                         00814600
&ZOPV(&ZOPN)          SETC 'F'                                          00814700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLEN '                             00814800
.*-------------------------------------------------------------------   00814900
.***AM.LVER2                                                            00815000
.ZL71L                ANOP  ,                                           00815100
.*-------------------------------------------------------------------   00815200
.*-------------------------------------------------------------------   00815300
.***AM.LVER1                                                            00815400
                      AIF  (&XPLISTVER LT 6).ZL72L                      00815500
.*-------------------------------------------------------------------   00815600
.*-------------------------------------------------------------------   00815700
.***AM.L09  XPARTLENOFF F                                               00815800
&ZOPN                 SETA &ZOPN+1                                      00815900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENOFF'                      00816000
&ZOPO(&ZOPN)          SETC 'DS'                                         00816100
&ZOPV(&ZOPN)          SETC 'F'                                          00816200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENOFF '                          00816300
.*-------------------------------------------------------------------   00816400
.***AM.LVER2                                                            00816500
.ZL72L                ANOP  ,                                           00816600
.*-------------------------------------------------------------------   00816700
.*-------------------------------------------------------------------   00816800
.***AM.LVER1                                                            00816900
                      AIF  (&XPLISTVER LT 6).ZL73L                      00817000
.*-------------------------------------------------------------------   00817100
.*-------------------------------------------------------------------   00817200
.***AM.L09  X#MSGPARTS F                                                00817300
&ZOPN                 SETA &ZOPN+1                                      00817400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#MSGPARTS'                       00817500
&ZOPO(&ZOPN)          SETC 'DS'                                         00817600
&ZOPV(&ZOPN)          SETC 'F'                                          00817700
&ZOPD(&ZOPN)          SETC '++ &ZX#MSGPARTS '                           00817800
.*-------------------------------------------------------------------   00817900
.***AM.LVER2                                                            00818000
.ZL73L                ANOP  ,                                           00818100
.*-------------------------------------------------------------------   00818200
.*-------------------------------------------------------------------   00818300
.***AM.LVER1                                                            00818400
                      AIF  (&XPLISTVER LT 6).ZL74L                      00818500
.*-------------------------------------------------------------------   00818600
.*-------------------------------------------------------------------   00818700
.***AM.L09  XNEXTOFF F                                                  00818800
&ZOPN                 SETA &ZOPN+1                                      00818900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTOFF'                         00819000
&ZOPO(&ZOPN)          SETC 'DS'                                         00819100
&ZOPV(&ZOPN)          SETC 'F'                                          00819200
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTOFF '                             00819300
.*-------------------------------------------------------------------   00819400
.***AM.LVER2                                                            00819500
.ZL74L                ANOP  ,                                           00819600
.*-------------------------------------------------------------------   00819700
.*-------------------------------------------------------------------   00819800
.***AM.LVER1                                                            00819900
                      AIF  (&XPLISTVER LT 6).ZL75L                      00820000
.*-------------------------------------------------------------------   00820100
.*-------------------------------------------------------------------   00820200
.***AM.L09  XNEXTPTROFF F                                               00820300
&ZOPN                 SETA &ZOPN+1                                      00820400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTPTROFF'                      00820500
&ZOPO(&ZOPN)          SETC 'DS'                                         00820600
&ZOPV(&ZOPN)          SETC 'F'                                          00820700
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTPTROFF '                          00820800
.*-------------------------------------------------------------------   00820900
.***AM.LVER2                                                            00821000
.ZL75L                ANOP  ,                                           00821100
.*-------------------------------------------------------------------   00821200
.*-------------------------------------------------------------------   00821300
.***AM.LVER1                                                            00821400
                      AIF  (&XPLISTVER LT 6).ZL76L                      00821500
.*-------------------------------------------------------------------   00821600
.*-------------------------------------------------------------------   00821700
.***AM.L09  XELEMENTPTR AD                                              00821800
&ZOPN                 SETA &ZOPN+1                                      00821900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENTPTR'                      00822000
&ZOPO(&ZOPN)          SETC 'DS'                                         00822100
&ZOPV(&ZOPN)          SETC 'AD'                                         00822200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00822300
.*-------------------------------------------------------------------   00822400
.***AM.LVER2                                                            00822500
.ZL76L                ANOP  ,                                           00822600
.*-------------------------------------------------------------------   00822700
.*-------------------------------------------------------------------   00822800
.***AM.LVER1                                                            00822900
                      AIF  (&XPLISTVER LT 6).ZL77L                      00823000
.*-------------------------------------------------------------------   00823100
.*-------------------------------------------------------------------   00823200
.***AM.L09  XPART# F                                                    00823300
&ZOPN                 SETA &ZOPN+1                                      00823400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPART#'                           00823500
&ZOPO(&ZOPN)          SETC 'DS'                                         00823600
&ZOPV(&ZOPN)          SETC 'F'                                          00823700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00823800
.*-------------------------------------------------------------------   00823900
.***AM.LVER2                                                            00824000
.ZL77L                ANOP  ,                                           00824100
.*-------------------------------------------------------------------   00824200
.*-------------------------------------------------------------------   00824300
.***AM.LVER1                                                            00824400
                      AIF  (&XPLISTVER LT 6).ZL78L                      00824500
.*-------------------------------------------------------------------   00824600
.*-------------------------------------------------------------------   00824700
.***AM.L09  XCFDATA F                                                   00824800
&ZOPN                 SETA &ZOPN+1                                      00824900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCFDATA'                          00825000
&ZOPO(&ZOPN)          SETC 'DS'                                         00825100
&ZOPV(&ZOPN)          SETC 'F'                                          00825200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00825300
.*-------------------------------------------------------------------   00825400
.***AM.LVER2                                                            00825500
.ZL78L                ANOP  ,                                           00825600
.*-------------------------------------------------------------------   00825700
.*-------------------------------------------------------------------   00825800
.***AM.LVER1                                                            00825900
                      AIF  (&XPLISTVER LT 5).ZL79L                      00826000
.*-------------------------------------------------------------------   00826100
.*-------------------------------------------------------------------   00826200
.***AM.MLM1 SAVED LOCATION COUNTER                                      00826300
                      AIF  ('&ZENDBASEPL' NE '').ZL79LB                 00826400
&ZENDBASEPL           SETC 'YES'                                        00826500
&ZOPN                 SETA &ZOPN+1                                      00826600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00826700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00826800
&ZOPV(&ZOPN)          SETC '*'                                          00826900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00827000
.ZL79LB               ANOP  ,                                           00827100
.*-------------------------------------------------------------------   00827200
.***AM.PJR1 DEFINED ON XRESPONSEID                                      00827300
&ZOPN                 SETA &ZOPN+1                                      00827400
&ZOPL(&ZOPN)          SETC ' '                                          00827500
&ZOPO(&ZOPN)          SETC 'ORG'                                        00827600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               00827700
&ZOPD(&ZOPN)          SETC ' '                                          00827800
.*-------------------------------------------------------------------   00827900
.***AM.LVER2                                                            00828000
.ZL79L                ANOP  ,                                           00828100
.*-------------------------------------------------------------------   00828200
.*-------------------------------------------------------------------   00828300
.***AM.LVER1                                                            00828400
                      AIF  (&XPLISTVER LT 5).ZL80L                      00828500
.*-------------------------------------------------------------------   00828600
.*-------------------------------------------------------------------   00828700
.***AM.L09  XFILTERGROUP CL8                                            00828800
&ZOPN                 SETA &ZOPN+1                                      00828900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFILTERGROUP'                     00829000
&ZOPO(&ZOPN)          SETC 'DS'                                         00829100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00829200
&ZOPD(&ZOPN)          SETC '++ &ZXFILTERGROUP '                         00829300
.*-------------------------------------------------------------------   00829400
.***AM.LVER2                                                            00829500
.ZL80L                ANOP  ,                                           00829600
.*-------------------------------------------------------------------   00829700
&ZOPN                 SETA &ZOPN+1                                      00829800
&ZOPL(&ZOPN)          SETC ' '                                          00829900
&ZOPO(&ZOPN)          SETC 'ORG'                                        00830000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00830100
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00830200
.*-------------------------------------------------------------------   00830300
.***AM.L10 END OF IXCMSGOX LIST PARAMETERS                              00830400
&ZOPN                 SETA &ZOPN+1                                      00830500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00830600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00830700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00830800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00830900
.*                                                                      00831000
&ZOPN                 SETA &ZOPN+1                                      00831100
&ZOPL(&ZOPN)          SETC ' '                                          00831200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00831300
&ZOPV(&ZOPN)          SETC '1'                                          00831400
&ZOPD(&ZOPN)          SETC ' '                                          00831500
.*-------------------------------------------------------------------   00831600
.***AL.L12 IXCMSGOX FMT=LIST MF=S!L PARAMETERS                          00831700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00831800
.*                                                                      00831900
&ZOPN                 SETA  &ZOPN+1                                     00832000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00832100
&ZOPO(&ZOPN)          SETC  'DC'                                        00832200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00832300
&ZOPD(&ZOPN)          SETC  '++ IXCMSGOX ARG PARMS'                     00832400
.*                                                                      00832500
.ZLMFSLX              ANOP  ,                                           00832600
.*-------------------------------------------------------------------   00832700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00832800
&ZPLLEN               SETA 48                                           00832900
.*                                                                      00833000
                      AIF  (&XPLISTVER LT 5).ZLLEN2Z                    00833100
&ZPLLEN               SETA 128                                          00833200
.ZLLEN2Z              ANOP  ,                                           00833300
.*                                                                      00833400
                      AIF  (&XPLISTVER LT 6).ZLLEN3Z                    00833500
&ZPLLEN               SETA 232                                          00833600
.ZLLEN3Z              ANOP  ,                                           00833700
.*                                                                      00833800
.******************************************************************     00833900
.***AI.L01 IXCMSGOX FMT=LIST FILL IN PARAMETER AREA                     00834000
.******************************************************************     00834100
                      ACTR  10000                                       00834200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00834300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00834400
&ZCVAL                SETC  'LAE'          XAX MODE                     00834500
.ZIMFXA               ANOP ,                                            00834600
.*                                                                      00834700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00834800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00834900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00835000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00835100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00835200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00835300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00835400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00835500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00835600
&ZOPN                 SETA  &ZOPN+1                                     00835700
&ZOPL(&ZOPN)          SETC  ' '                                         00835800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00835900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00836000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00836100
                      AGO   .ZIMFNX                                     00836200
.*                                                                      00836300
.ZIMFN2               ANOP ,                                            00836400
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00836500
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00836600
&ZOPN                 SETA  &ZOPN+1                                     00836700
&ZOPL(&ZOPN)          SETC  ' '                                         00836800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00836900
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00837000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00837100
                      AGO   .ZIMFNX                                     00837200
.ZIMFNX1              ANOP ,                                            00837300
&ZOPN                 SETA  &ZOPN+1                                     00837400
&ZOPL(&ZOPN)          SETC  ' '                                         00837500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00837600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00837700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00837800
.ZIMFNX               ANOP ,                                            00837900
.********************************************************************   00838000
.***AI.L02 IXCMSGOX FMT=LIST INITIALIZE PARAMETER AREA                  00838100
.********************************************************************   00838200
.***AI.L03 MF=(SLE)                                                     00838300
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00838400
.*                                                                      00838500
&ZOPN                 SETA  &ZOPN+1                                     00838600
&ZOPL(&ZOPN)          SETC  ' '                                         00838700
&ZOPO(&ZOPN)          SETC  'XC'                                        00838800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00838900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00839000
.ZIMFLX               ANOP  ,                                           00839100
.*-------------------------------------------------------------------   00839200
.***AI.L04B XVERSION XL1                                                00839300
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00839400
&ZOPN                 SETA  &ZOPN+1                                     00839500
&ZOPL(&ZOPN)          SETC  ' '                                         00839600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00839700
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00839800
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00839900
.ZIMFVZ               ANOP  ,                                           00840000
.*-------------------------------------------------------------------   00840100
.***AI.L05 XKEYUSED4 BL1                                                00840200
&ZW                   SETC  ''                                          00840300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00840400
.*-------------------------------------------------------------------   00840500
.***AI.L08 XKEYUSED4 "MSGSTGKEY"                                        00840600
.***      BL1'1XXXXXXX'                                                 00840700
         AIF   ('&MSGSTGKEY' EQ '').ZI4A                                00840800
&ZW                   SETC  '&ZW.1'                                     00840900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00841000
                      AGO   .ZI4C                                       00841100
.*                                                                      00841200
.ZI4A                 ANOP  ,                                           00841300
&ZW                   SETC  '&ZW.0'                                     00841400
.ZI4C                 ANOP  ,                                           00841500
.*-------------------------------------------------------------------   00841600
.***AI.L08 XKEYUSED4 "MSGCNTL"                                          00841700
.***      BL1'X1XXXXXX'                                                 00841800
         AIF   ('&MSGCNTL' EQ '').ZI5A                                  00841900
&ZW                   SETC  '&ZW.1'                                     00842000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00842100
                      AGO   .ZI5C                                       00842200
.*                                                                      00842300
.ZI5A                 ANOP  ,                                           00842400
&ZW                   SETC  '&ZW.0'                                     00842500
.ZI5C                 ANOP  ,                                           00842600
.*-------------------------------------------------------------------   00842700
.***AI.L08 XKEYUSED4 "SUMPARTLENS"                                      00842800
.***      BL1'XX1XXXXX'                                                 00842900
         AIF   ('&XMSGLEN' NE 'SUMPARTLENS').ZI6A                       00843000
&ZW                   SETC  '&ZW.100000'                                00843100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00843200
                      AGO   .ZI6C                                       00843300
.*                                                                      00843400
.ZI6A                 ANOP  ,                                           00843500
&ZW                   SETC  '&ZW.000000'                                00843600
.ZI6C                 ANOP  ,                                           00843700
.*-------------------------------------------------------------------   00843800
.***AI.L11 XKEYUSED4 BL1                                                00843900
                      AIF   ('&ZCLNG' NE 'YES').ZI6E  ALL ZERO BITS     00844000
&ZOPN                 SETA  &ZOPN+1                                     00844100
&ZOPL(&ZOPN)          SETC  ' '                                         00844200
&ZOPO(&ZOPN)          SETC  'OI'                                        00844300
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00844400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00844500
.ZI6E                 ANOP  ,                                           00844600
.*-------------------------------------------------------------------   00844700
.***AI.L18  XMSGSTGKEY XL1                                              00844800
         AIF   ('&XMSGSTGKEY' NE 'ANY').ZI7                             00844900
&ZXMSGSTGKEY          SETC  ''             RESET INPUT/OUTPUT           00845000
.ZI7                  ANOP  ,                                           00845100
.*-------------------------------------------------------------------   00845200
.***AI.L25  XMSGSTGKEY XL1                                              00845300
                      AIF   ('&ZXMSGSTGKEY' EQ '').ZI7E                 00845400
                      AIF   ('&ZXMSGSTGKEY' EQ 'OUTPUT').ZI7E           00845500
&ZCGPR                SETC  '&XMSGSTGKEY'                               00845600
.*                                                                      00845700
                      AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZI7B            00845800
&ZCGPR   SETC  '0('.'&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2).')'                00845900
                      AGO   .ZI7D                                       00846000
.ZI7B                 ANOP  ,                                           00846100
.*                                                                      00846200
&ZC                   SETC  '&XMSGSTGKEY'(1,1)                          00846300
                      AIF   (T'&ZC NE 'N').ZI7D                         00846400
&ZC                   SETC  '&XMSGSTGKEY'                               00846500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00846600
&ZCGPR                SETC  '=BL1''&XMSGSTGKEY'''                       00846700
.*                                                                      00846800
.ZI7D                 ANOP  ,                                           00846900
.*                                                                      00847000
&ZOPN                 SETA  &ZOPN+1                                     00847100
&ZOPL(&ZOPN)          SETC  ' '                                         00847200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00847300
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00847400
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGSTGKEY XMSGSTGKEY'                00847500
.*                                                                      00847600
.ZI7E                 ANOP  ,                                           00847700
.*-------------------------------------------------------------------   00847800
.***AI.L25  XTARGET XL8                                                 00847900
                      AIF   ('&ZXTARGET' EQ '').ZI8E                    00848000
                      AIF   ('&ZXTARGET' EQ 'OUTPUT').ZI8E              00848100
&ZCGPR                SETC  '&XTARGET'                                  00848200
.*                                                                      00848300
                      AIF   ('&XTARGET'(1,1) NE '(').ZI8B               00848400
&ZCGPR   SETC  '0('.'&XTARGET'(2,K'&XTARGET-2).')'                      00848500
                      AGO   .ZI8D                                       00848600
.ZI8B                 ANOP  ,                                           00848700
.*                                                                      00848800
&ZC                   SETC  '&XTARGET'(1,1)                             00848900
                      AIF   (T'&ZC NE 'N').ZI8D                         00849000
&ZC                   SETC  '&XTARGET'                                  00849100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00849200
&ZCGPR                SETC  '=BL8''&XTARGET'''                          00849300
.*                                                                      00849400
.ZI8D                 ANOP  ,                                           00849500
.*                                                                      00849600
&ZOPN                 SETA  &ZOPN+1                                     00849700
&ZOPL(&ZOPN)          SETC  ' '                                         00849800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00849900
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00850000
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGET XTARGET'                      00850100
.*                                                                      00850200
.ZI8E                 ANOP  ,                                           00850300
.*-------------------------------------------------------------------   00850400
.***AI.L23 ALET XMSGBUF F                                               00850500
         AIF   ('&ZXMSGBUF' EQ '').ZI9G                                 00850600
         AIF   ('&SYSASCE' EQ 'P').ZI9G    SYSSTATE PRIMARY             00850700
&ZCLNG                SETC  '&XMSGBUF'                                  00850800
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI9E  IN AR                     00850900
.*                                                                      00851000
&ZCGPR                SETC  '14'                                        00851100
&ZOPN                 SETA  &ZOPN+1                                     00851200
&ZOPL(&ZOPN)          SETC  ' '                                         00851300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00851400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00851500
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00851600
                      AGO   .ZI9F                                       00851700
.*                                                                      00851800
.ZI9E                 ANOP  ,                                           00851900
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00852000
.*                                                                      00852100
.ZI9F                 ANOP  ,                                           00852200
.*                                                                      00852300
&ZOPN                 SETA  &ZOPN+1                                     00852400
&ZOPL(&ZOPN)          SETC  ' '                                         00852500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00852600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,12(1)'                       00852700
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00852800
.*                                                                      00852900
.ZI9G                 ANOP  ,                                           00853000
.*-------------------------------------------------------------------   00853100
.***AI.L18 ALET XMSGCNTL F                                              00853200
         AIF   ('&XMSGCNTL' NE 'ALLZERO').ZI10                          00853300
&ZXMSGCNTL            SETC  ''             RESET INPUT/OUTPUT           00853400
.ZI10                 ANOP  ,                                           00853500
.*-------------------------------------------------------------------   00853600
.***AI.L23 ALET XMSGCNTL F                                              00853700
         AIF   ('&ZXMSGCNTL' EQ '').ZI10G                               00853800
         AIF   ('&SYSASCE' EQ 'P').ZI10G   SYSSTATE PRIMARY             00853900
&ZCLNG                SETC  '&XMSGCNTL'                                 00854000
         AIF   ('&XMSGCNTL'(1,1) EQ '(').ZI10E  IN AR                   00854100
.*                                                                      00854200
&ZCGPR                SETC  '14'                                        00854300
&ZOPN                 SETA  &ZOPN+1                                     00854400
&ZOPL(&ZOPN)          SETC  ' '                                         00854500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00854600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00854700
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00854800
                      AGO   .ZI10F                                      00854900
.*                                                                      00855000
.ZI10E                ANOP  ,                                           00855100
&ZCGPR   SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                             00855200
.*                                                                      00855300
.ZI10F                ANOP  ,                                           00855400
.*                                                                      00855500
&ZOPN                 SETA  &ZOPN+1                                     00855600
&ZOPL(&ZOPN)          SETC  ' '                                         00855700
&ZOPO(&ZOPN)          SETC  'STAM'                                      00855800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,16(1)'                       00855900
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00856000
.*                                                                      00856100
.ZI10G                ANOP  ,                                           00856200
.*-------------------------------------------------------------------   00856300
.***AI.L18  XMSGLEN F                                                   00856400
         AIF   ('&XMSGLEN' NE 'SUMPARTLENS').ZI11                       00856500
&ZXMSGLEN             SETC  ''             RESET INPUT/OUTPUT           00856600
.ZI11                 ANOP  ,                                           00856700
.*-------------------------------------------------------------------   00856800
.***AI.L25  XMSGLEN F                                                   00856900
                      AIF   ('&ZXMSGLEN' EQ '').ZI11E                   00857000
                      AIF   ('&ZXMSGLEN' EQ 'OUTPUT').ZI11E             00857100
&ZCGPR                SETC  '&XMSGLEN'                                  00857200
.*                                                                      00857300
                      AIF   ('&XMSGLEN'(1,1) NE '(').ZI11B              00857400
&ZCGPR   SETC  '0('.'&XMSGLEN'(2,K'&XMSGLEN-2).')'                      00857500
                      AGO   .ZI11D                                      00857600
.ZI11B                ANOP  ,                                           00857700
.*                                                                      00857800
&ZC                   SETC  '&XMSGLEN'(1,1)                             00857900
                      AIF   (T'&ZC NE 'N').ZI11D                        00858000
&ZC                   SETC  '&XMSGLEN'                                  00858100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI11D               00858200
&ZCGPR                SETC  '=AL4(&XMSGLEN)'                            00858300
.*                                                                      00858400
.ZI11D                ANOP  ,                                           00858500
.*                                                                      00858600
&ZOPN                 SETA  &ZOPN+1                                     00858700
&ZOPL(&ZOPN)          SETC  ' '                                         00858800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00858900
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00859000
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGLEN XMSGLEN'                      00859100
.*                                                                      00859200
.ZI11E                ANOP  ,                                           00859300
.*-------------------------------------------------------------------   00859400
.***AI.L19 ADDR64 XMSGBUF AD                                            00859500
                      AIF   ('&ZXMSGBUF' EQ '').ZI12H                   00859600
&ZCLNG                SETC  '&XMSGBUF'                                  00859700
&ZCGPR                SETC  '14'                                        00859800
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI12F  IN GPR                   00859900
.*                                                                      00860000
&ZOPN                 SETA  &ZOPN+1                                     00860100
&ZOPL(&ZOPN)          SETC  ' '                                         00860200
&ZOPO(&ZOPN)          SETC  'LA'                                        00860300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00860400
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00860500
.*                                                                      00860600
                      AGO   .ZI12G                                      00860700
.*                                                                      00860800
.ZI12F                ANOP  ,                                           00860900
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00861000
.*                                                                      00861100
.ZI12G                ANOP  ,                                           00861200
                      AIF   ('&SYSAM64' EQ 'YES').ZI12H1A               00861300
.*                                                                      00861400
&ZOPN                 SETA  &ZOPN+1                                     00861500
&ZOPL(&ZOPN)          SETC  ' '                                         00861600
&ZOPO(&ZOPN)          SETC  'ST'                                        00861700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+24(,1)'                           00861800
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00861900
.*                                                                      00862000
                      AGO   .ZI12H                                      00862100
.ZI12H1A              ANOP  ,                                           00862200
.*                                                                      00862300
&ZOPN                 SETA  &ZOPN+1                                     00862400
&ZOPL(&ZOPN)          SETC  ' '                                         00862500
&ZOPO(&ZOPN)          SETC  'STG'                                       00862600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00862700
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00862800
.*                                                                      00862900
.ZI12H                ANOP  ,                                           00863000
.*-------------------------------------------------------------------   00863100
.***AI.L18 ADDR64 XMSGCNTL AD                                           00863200
         AIF   ('&XMSGCNTL' NE 'ALLZERO').ZI13                          00863300
&ZXMSGCNTL            SETC  ''             RESET INPUT/OUTPUT           00863400
.ZI13                 ANOP  ,                                           00863500
.*-------------------------------------------------------------------   00863600
.***AI.L19 ADDR64 XMSGCNTL AD                                           00863700
                      AIF   ('&ZXMSGCNTL' EQ '').ZI13H                  00863800
&ZCLNG                SETC  '&XMSGCNTL'                                 00863900
&ZCGPR                SETC  '14'                                        00864000
         AIF   ('&XMSGCNTL'(1,1) EQ '(').ZI13F  IN GPR                  00864100
.*                                                                      00864200
&ZOPN                 SETA  &ZOPN+1                                     00864300
&ZOPL(&ZOPN)          SETC  ' '                                         00864400
&ZOPO(&ZOPN)          SETC  'LA'                                        00864500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00864600
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00864700
.*                                                                      00864800
                      AGO   .ZI13G                                      00864900
.*                                                                      00865000
.ZI13F                ANOP  ,                                           00865100
&ZCGPR   SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                             00865200
.*                                                                      00865300
.ZI13G                ANOP  ,                                           00865400
                      AIF   ('&SYSAM64' EQ 'YES').ZI13H1A               00865500
.*                                                                      00865600
&ZOPN                 SETA  &ZOPN+1                                     00865700
&ZOPL(&ZOPN)          SETC  ' '                                         00865800
&ZOPO(&ZOPN)          SETC  'ST'                                        00865900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+32(,1)'                           00866000
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00866100
.*                                                                      00866200
                      AGO   .ZI13H                                      00866300
.ZI13H1A              ANOP  ,                                           00866400
.*                                                                      00866500
&ZOPN                 SETA  &ZOPN+1                                     00866600
&ZOPL(&ZOPN)          SETC  ' '                                         00866700
&ZOPO(&ZOPN)          SETC  'STG'                                       00866800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00866900
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00867000
.*                                                                      00867100
.ZI13H                ANOP  ,                                           00867200
.*-------------------------------------------------------------------   00867300
.***AI.L25  XMEMTOKEN XL8                                               00867400
                      AIF   ('&ZXMEMTOKEN' EQ '').ZI14E                 00867500
                      AIF   ('&ZXMEMTOKEN' EQ 'OUTPUT').ZI14E           00867600
&ZCGPR                SETC  '&XMEMTOKEN'                                00867700
.*                                                                      00867800
                      AIF   ('&XMEMTOKEN'(1,1) NE '(').ZI14B            00867900
&ZCGPR   SETC  '0('.'&XMEMTOKEN'(2,K'&XMEMTOKEN-2).')'                  00868000
                      AGO   .ZI14D                                      00868100
.ZI14B                ANOP  ,                                           00868200
.*                                                                      00868300
&ZC                   SETC  '&XMEMTOKEN'(1,1)                           00868400
                      AIF   (T'&ZC NE 'N').ZI14D                        00868500
&ZC                   SETC  '&XMEMTOKEN'                                00868600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00868700
&ZCGPR                SETC  '=BL8''&XMEMTOKEN'''                        00868800
.*                                                                      00868900
.ZI14D                ANOP  ,                                           00869000
.*                                                                      00869100
&ZOPN                 SETA  &ZOPN+1                                     00869200
&ZOPL(&ZOPN)          SETC  ' '                                         00869300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00869400
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00869500
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMTOKEN XMEMTOKEN'                  00869600
.*                                                                      00869700
.ZI14E                ANOP  ,                                           00869800
.*-------------------------------------------------------------------   00869900
.***AI.LVER01                                                           00870000
                      AIF  (&XPLISTVER LT 5).ZI15Z                      00870100
.*-------------------------------------------------------------------   00870200
.***AI.L05 XKEYUSED5 BL1                                                00870300
&ZW                   SETC  ''                                          00870400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00870500
.*-------------------------------------------------------------------   00870600
.***AI.LVER02                                                           00870700
.ZI15Z                ANOP  ,                                           00870800
.*-------------------------------------------------------------------   00870900
.***AI.LVER01                                                           00871000
                      AIF  (&XPLISTVER LT 5).ZI16Z                      00871100
.*-------------------------------------------------------------------   00871200
.***AI.L08 XKEYUSED5 "GROUP"                                            00871300
.***      BL1'1XXXXXXX'                                                 00871400
         AIF   ('&XSENDTO' NE 'GROUP').ZI16A                            00871500
&ZW                   SETC  '&ZW.1'                                     00871600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00871700
                      AGO   .ZI16C                                      00871800
.*                                                                      00871900
.ZI16A                ANOP  ,                                           00872000
&ZW                   SETC  '&ZW.0'                                     00872100
.ZI16C                ANOP  ,                                           00872200
.*-------------------------------------------------------------------   00872300
.***AI.LVER02                                                           00872400
.ZI16Z                ANOP  ,                                           00872500
.*-------------------------------------------------------------------   00872600
.***AI.LVER01                                                           00872700
                      AIF  (&XPLISTVER LT 5).ZI17Z                      00872800
.*-------------------------------------------------------------------   00872900
.***AI.L08 XKEYUSED5 "ORIGINATOR"                                       00873000
.***      BL1'X1XXXXXX'                                                 00873100
         AIF   ('&XSENDTO' NE 'ORIGINATOR').ZI17A                       00873200
&ZW                   SETC  '&ZW.1'                                     00873300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00873400
                      AGO   .ZI17C                                      00873500
.*                                                                      00873600
.ZI17A                ANOP  ,                                           00873700
&ZW                   SETC  '&ZW.0'                                     00873800
.ZI17C                ANOP  ,                                           00873900
.*-------------------------------------------------------------------   00874000
.***AI.LVER02                                                           00874100
.ZI17Z                ANOP  ,                                           00874200
.*-------------------------------------------------------------------   00874300
.***AI.LVER01                                                           00874400
                      AIF  (&XPLISTVER LT 5).ZI18Z                      00874500
.*-------------------------------------------------------------------   00874600
.***AI.L08 XKEYUSED5 "TABLE"                                            00874700
.***      BL1'XX1XXXXX'                                                 00874800
         AIF   ('&XMEMBERS' NE 'TABLE').ZI18A                           00874900
&ZW                   SETC  '&ZW.1'                                     00875000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00875100
                      AGO   .ZI18C                                      00875200
.*                                                                      00875300
.ZI18A                ANOP  ,                                           00875400
&ZW                   SETC  '&ZW.0'                                     00875500
.ZI18C                ANOP  ,                                           00875600
.*-------------------------------------------------------------------   00875700
.***AI.LVER02                                                           00875800
.ZI18Z                ANOP  ,                                           00875900
.*-------------------------------------------------------------------   00876000
.***AI.LVER01                                                           00876100
                      AIF  (&XPLISTVER LT 5).ZI19Z                      00876200
.*-------------------------------------------------------------------   00876300
.***AI.L08 XKEYUSED5 "ALL"                                              00876400
.***      BL1'XXX1XXXX'                                                 00876500
         AIF   ('&XMEMBERS' NE 'ALL').ZI19A                             00876600
&ZW                   SETC  '&ZW.1'                                     00876700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00876800
                      AGO   .ZI19C                                      00876900
.*                                                                      00877000
.ZI19A                ANOP  ,                                           00877100
&ZW                   SETC  '&ZW.0'                                     00877200
.ZI19C                ANOP  ,                                           00877300
.*-------------------------------------------------------------------   00877400
.***AI.LVER02                                                           00877500
.ZI19Z                ANOP  ,                                           00877600
.*-------------------------------------------------------------------   00877700
.***AI.LVER01                                                           00877800
                      AIF  (&XPLISTVER LT 5).ZI20Z                      00877900
.*-------------------------------------------------------------------   00878000
.***AI.L08 XKEYUSED5 "OTHER"                                            00878100
.***      BL1'XXXX1XXX'                                                 00878200
         AIF   ('&XMEMBERS' NE 'OTHER').ZI20A                           00878300
&ZW                   SETC  '&ZW.1'                                     00878400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00878500
                      AGO   .ZI20C                                      00878600
.*                                                                      00878700
.ZI20A                ANOP  ,                                           00878800
&ZW                   SETC  '&ZW.0'                                     00878900
.ZI20C                ANOP  ,                                           00879000
.*-------------------------------------------------------------------   00879100
.***AI.LVER02                                                           00879200
.ZI20Z                ANOP  ,                                           00879300
.*-------------------------------------------------------------------   00879400
.***AI.LVER01                                                           00879500
                      AIF  (&XPLISTVER LT 5).ZI21Z                      00879600
.*-------------------------------------------------------------------   00879700
.***AI.L08 XKEYUSED5 "FAILED"                                           00879800
.***      BL1'XXXXX1XX'                                                 00879900
         AIF   ('&XNOTIFYIF' NE 'FAILED').ZI21A                         00880000
&ZW                   SETC  '&ZW.1'                                     00880100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00880200
                      AGO   .ZI21C                                      00880300
.*                                                                      00880400
.ZI21A                ANOP  ,                                           00880500
&ZW                   SETC  '&ZW.0'                                     00880600
.ZI21C                ANOP  ,                                           00880700
.*-------------------------------------------------------------------   00880800
.***AI.LVER02                                                           00880900
.ZI21Z                ANOP  ,                                           00881000
.*-------------------------------------------------------------------   00881100
.***AI.LVER01                                                           00881200
                      AIF  (&XPLISTVER LT 5).ZI22Z                      00881300
.*-------------------------------------------------------------------   00881400
.***AI.L08 XKEYUSED5 "ORDERED"                                          00881500
.***      BL1'XXXXXX1X'                                                 00881600
         AIF   ('&XDELIVERMSG' NE 'ORDERED').ZI22A                      00881700
&ZW                   SETC  '&ZW.1'                                     00881800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00881900
                      AGO   .ZI22C                                      00882000
.*                                                                      00882100
.ZI22A                ANOP  ,                                           00882200
&ZW                   SETC  '&ZW.0'                                     00882300
.ZI22C                ANOP  ,                                           00882400
.*-------------------------------------------------------------------   00882500
.***AI.LVER02                                                           00882600
.ZI22Z                ANOP  ,                                           00882700
.*-------------------------------------------------------------------   00882800
.***AI.LVER01                                                           00882900
                      AIF  (&XPLISTVER LT 5).ZI23Z                      00883000
.*-------------------------------------------------------------------   00883100
.***AI.L08 XKEYUSED5 "DUPLICATES"                                       00883200
.***      BL1'XXXXXXX1'                                                 00883300
         AIF   ('&XDELIVERMSG' NE 'DUPLICATES').ZI23A                   00883400
&ZW                   SETC  '&ZW.1'                                     00883500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00883600
                      AGO   .ZI23C                                      00883700
.*                                                                      00883800
.ZI23A                ANOP  ,                                           00883900
&ZW                   SETC  '&ZW.0'                                     00884000
.ZI23C                ANOP  ,                                           00884100
.*-------------------------------------------------------------------   00884200
.***AI.L11 XKEYUSED5 BL1                                                00884300
                      AIF   ('&ZCLNG' NE 'YES').ZI23E  ALL ZERO BITS    00884400
&ZOPN                 SETA  &ZOPN+1                                     00884500
&ZOPL(&ZOPN)          SETC  ' '                                         00884600
&ZOPO(&ZOPN)          SETC  'OI'                                        00884700
&ZOPV(&ZOPN)          SETC  '48(1),B''&ZW'''                            00884800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00884900
.ZI23E                ANOP  ,                                           00885000
.*-------------------------------------------------------------------   00885100
.***AI.LVER02                                                           00885200
.ZI23Z                ANOP  ,                                           00885300
.*-------------------------------------------------------------------   00885400
.***AI.LVER01                                                           00885500
                      AIF  (&XPLISTVER LT 5).ZI24Z                      00885600
.*-------------------------------------------------------------------   00885700
.***AI.L05 XKEYUSED5A BL1                                               00885800
&ZW                   SETC  ''                                          00885900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00886000
.*-------------------------------------------------------------------   00886100
.***AI.LVER02                                                           00886200
.ZI24Z                ANOP  ,                                           00886300
.*-------------------------------------------------------------------   00886400
.***AI.LVER01                                                           00886500
                      AIF  (&XPLISTVER LT 5).ZI25Z                      00886600
.*-------------------------------------------------------------------   00886700
.***AI.L08 XKEYUSED5A "TIMEOUT"                                         00886800
.***      BL1'1XXXXXXX'                                                 00886900
         AIF   ('&TIMEOUT' EQ '').ZI25A                                 00887000
         AIF   ('&TIMEOUT' EQ 'ZERO').ZI25A                             00887100
         AIF   ('&TIMEOUT' EQ 'ZERO').ZI25A                             00887200
         AIF   ('&TIMEOUT' EQ 'ZERO').ZI25A                             00887300
&ZW                   SETC  '&ZW.1'                                     00887400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00887500
                      AGO   .ZI25C                                      00887600
.*                                                                      00887700
.ZI25A                ANOP  ,                                           00887800
&ZW                   SETC  '&ZW.0'                                     00887900
.ZI25C                ANOP  ,                                           00888000
.*-------------------------------------------------------------------   00888100
.***AI.LVER02                                                           00888200
.ZI25Z                ANOP  ,                                           00888300
.*-------------------------------------------------------------------   00888400
.***AI.LVER01                                                           00888500
                      AIF  (&XPLISTVER LT 5).ZI26Z                      00888600
.*-------------------------------------------------------------------   00888700
.***AI.L08 XKEYUSED5A "YES"                                             00888800
.***      BL1'X1XXXXXX'                                                 00888900
         AIF   ('&XGETRESPONSE' NE 'YES').ZI26A                         00889000
&ZW                   SETC  '&ZW.1'                                     00889100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00889200
                      AGO   .ZI26C                                      00889300
.*                                                                      00889400
.ZI26A                ANOP  ,                                           00889500
&ZW                   SETC  '&ZW.0'                                     00889600
.ZI26C                ANOP  ,                                           00889700
.*-------------------------------------------------------------------   00889800
.***AI.LVER02                                                           00889900
.ZI26Z                ANOP  ,                                           00890000
.*-------------------------------------------------------------------   00890100
.***AI.LVER01                                                           00890200
                      AIF  (&XPLISTVER LT 5).ZI27Z                      00890300
.*-------------------------------------------------------------------   00890400
.***AI.L08 XKEYUSED5A "RETMSGOTOKEN"                                    00890500
.***      BL1'XX1XXXXX'                                                 00890600
         AIF   ('&RETMSGOTOKEN' EQ '').ZI27A                            00890700
&ZW                   SETC  '&ZW.1'                                     00890800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00890900
                      AGO   .ZI27C                                      00891000
.*                                                                      00891100
.ZI27A                ANOP  ,                                           00891200
&ZW                   SETC  '&ZW.0'                                     00891300
.ZI27C                ANOP  ,                                           00891400
.*-------------------------------------------------------------------   00891500
.***AI.LVER02                                                           00891600
.ZI27Z                ANOP  ,                                           00891700
.*-------------------------------------------------------------------   00891800
.***AI.LVER01                                                           00891900
                      AIF  (&XPLISTVER LT 5).ZI28Z                      00892000
.*-------------------------------------------------------------------   00892100
.***AI.L08 XKEYUSED5A "ASYNC"                                           00892200
.***      BL1'XXX1XXXX'                                                 00892300
         AIF   ('&XMSGACCESS' NE 'ASYNC').ZI28A                         00892400
&ZW                   SETC  '&ZW.1'                                     00892500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00892600
                      AGO   .ZI28C                                      00892700
.*                                                                      00892800
.ZI28A                ANOP  ,                                           00892900
&ZW                   SETC  '&ZW.0'                                     00893000
.ZI28C                ANOP  ,                                           00893100
.*-------------------------------------------------------------------   00893200
.***AI.LVER02                                                           00893300
.ZI28Z                ANOP  ,                                           00893400
.*-------------------------------------------------------------------   00893500
.***AI.LVER01                                                           00893600
                      AIF  (&XPLISTVER LT 5).ZI29Z                      00893700
.*-------------------------------------------------------------------   00893800
.***AI.L08 XKEYUSED5A "EXIT"                                            00893900
.***      BL1'XXXX1XXX'                                                 00894000
         AIF   ('&XNOTIFYBY' NE 'EXIT').ZI29A                           00894100
&ZW                   SETC  '&ZW.1'                                     00894200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00894300
                      AGO   .ZI29C                                      00894400
.*                                                                      00894500
.ZI29A                ANOP  ,                                           00894600
&ZW                   SETC  '&ZW.0'                                     00894700
.ZI29C                ANOP  ,                                           00894800
.*-------------------------------------------------------------------   00894900
.***AI.LVER02                                                           00895000
.ZI29Z                ANOP  ,                                           00895100
.*-------------------------------------------------------------------   00895200
.***AI.LVER01                                                           00895300
                      AIF  (&XPLISTVER LT 5).ZI30Z                      00895400
.*-------------------------------------------------------------------   00895500
.***AI.L08 XKEYUSED5A "SYNCSUSPEND"                                     00895600
.***      BL1'XXXXX1XX'                                                 00895700
         AIF   ('&XMSGACCESS' NE 'SYNCSUSPEND').ZI30A                   00895800
&ZW                   SETC  '&ZW.1'                                     00895900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00896000
                      AGO   .ZI30C                                      00896100
.*                                                                      00896200
.ZI30A                ANOP  ,                                           00896300
&ZW                   SETC  '&ZW.0'                                     00896400
.ZI30C                ANOP  ,                                           00896500
.*-------------------------------------------------------------------   00896600
.***AI.LVER02                                                           00896700
.ZI30Z                ANOP  ,                                           00896800
.*-------------------------------------------------------------------   00896900
.***AI.LVER01                                                           00897000
                      AIF  (&XPLISTVER LT 5).ZI31Z                      00897100
.*-------------------------------------------------------------------   00897200
.***AI.L08 XKEYUSED5A "FILTERGROUP"                                     00897300
.***      BL1'XXXXXX1X'                                                 00897400
         AIF   ('&FILTERGROUP' EQ '').ZI31A                             00897500
         AIF   ('&FILTERGROUP' EQ 'SENDERSGROUP').ZI31A                 00897600
&ZW                   SETC  '&ZW.10'                                    00897700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00897800
                      AGO   .ZI31C                                      00897900
.*                                                                      00898000
.ZI31A                ANOP  ,                                           00898100
&ZW                   SETC  '&ZW.00'                                    00898200
.ZI31C                ANOP  ,                                           00898300
.*-------------------------------------------------------------------   00898400
.***AI.L11 XKEYUSED5A BL1                                               00898500
                      AIF   ('&ZCLNG' NE 'YES').ZI31E  ALL ZERO BITS    00898600
&ZOPN                 SETA  &ZOPN+1                                     00898700
&ZOPL(&ZOPN)          SETC  ' '                                         00898800
&ZOPO(&ZOPN)          SETC  'OI'                                        00898900
&ZOPV(&ZOPN)          SETC  '49(1),B''&ZW'''                            00899000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00899100
.ZI31E                ANOP  ,                                           00899200
.*-------------------------------------------------------------------   00899300
.***AI.LVER02                                                           00899400
.ZI31Z                ANOP  ,                                           00899500
.*-------------------------------------------------------------------   00899600
.***AI.LVER01                                                           00899700
                      AIF  (&XPLISTVER LT 5).ZI32Z                      00899800
.*-------------------------------------------------------------------   00899900
.***AI.L18  XTIMEOUT XL2                                                00900000
         AIF   ('&XTIMEOUT' NE 'ZERO').ZI32                             00900100
&ZXTIMEOUT            SETC  ''             RESET INPUT/OUTPUT           00900200
.ZI32                 ANOP  ,                                           00900300
.*-------------------------------------------------------------------   00900400
.***AI.L25  XTIMEOUT XL2                                                00900500
                      AIF   ('&ZXTIMEOUT' EQ '').ZI32E                  00900600
                      AIF   ('&ZXTIMEOUT' EQ 'OUTPUT').ZI32E            00900700
&ZCGPR                SETC  '&XTIMEOUT'                                 00900800
.*                                                                      00900900
                      AIF   ('&XTIMEOUT'(1,1) NE '(').ZI32B             00901000
&ZCGPR   SETC  '0('.'&XTIMEOUT'(2,K'&XTIMEOUT-2).')'                    00901100
                      AGO   .ZI32D                                      00901200
.ZI32B                ANOP  ,                                           00901300
.*                                                                      00901400
&ZC                   SETC  '&XTIMEOUT'(1,1)                            00901500
                      AIF   (T'&ZC NE 'N').ZI32D                        00901600
&ZC                   SETC  '&XTIMEOUT'                                 00901700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00901800
&ZCGPR                SETC  '=FL2''&XTIMEOUT'''                         00901900
.*                                                                      00902000
.ZI32D                ANOP  ,                                           00902100
.*                                                                      00902200
&ZOPN                 SETA  &ZOPN+1                                     00902300
&ZOPL(&ZOPN)          SETC  ' '                                         00902400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00902500
&ZOPV(&ZOPN)          SETC  '50(2,1),&ZCGPR'                            00902600
&ZOPD(&ZOPN)          SETC  '++ &ZXTIMEOUT XTIMEOUT'                    00902700
.*                                                                      00902800
.ZI32E                ANOP  ,                                           00902900
.*-------------------------------------------------------------------   00903000
.***AI.LVER02                                                           00903100
.ZI32Z                ANOP  ,                                           00903200
.*-------------------------------------------------------------------   00903300
.***AI.LVER01                                                           00903400
                      AIF  (&XPLISTVER LT 5).ZI33Z                      00903500
.*-------------------------------------------------------------------   00903600
.***AI.L18  XNOTIFYEXIT A                                               00903700
         AIF   ('&XNOTIFYEXIT' NE 'FROMJOIN').ZI33                      00903800
&ZXNOTIFYEXIT         SETC  ''             RESET INPUT/OUTPUT           00903900
.ZI33                 ANOP  ,                                           00904000
.*-------------------------------------------------------------------   00904100
.***AI.L19  XNOTIFYEXIT A                                               00904200
                      AIF   ('&ZXNOTIFYEXIT' EQ '').ZI33H               00904300
&ZCLNG                SETC  '&XNOTIFYEXIT'                              00904400
&ZCGPR                SETC  '14'                                        00904500
         AIF   ('&XNOTIFYEXIT'(1,1) EQ '(').ZI33F  IN GPR               00904600
.*                                                                      00904700
&ZOPN                 SETA  &ZOPN+1                                     00904800
&ZOPL(&ZOPN)          SETC  ' '                                         00904900
&ZOPO(&ZOPN)          SETC  'LA'                                        00905000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00905100
&ZOPD(&ZOPN)          SETC  '++ &ZXNOTIFYEXIT XNOTIFYEXIT'              00905200
.*                                                                      00905300
                      AGO   .ZI33G                                      00905400
.*                                                                      00905500
.ZI33F                ANOP  ,                                           00905600
&ZCGPR   SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)                       00905700
.*                                                                      00905800
.ZI33G                ANOP  ,                                           00905900
.*                                                                      00906000
&ZOPN                 SETA  &ZOPN+1                                     00906100
&ZOPL(&ZOPN)          SETC  ' '                                         00906200
&ZOPO(&ZOPN)          SETC  'ST'                                        00906300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             00906400
&ZOPD(&ZOPN)          SETC  '++ &ZXNOTIFYEXIT XNOTIFYEXIT'              00906500
.*                                                                      00906600
.ZI33H                ANOP  ,                                           00906700
.*-------------------------------------------------------------------   00906800
.***AI.LVER02                                                           00906900
.ZI33Z                ANOP  ,                                           00907000
.*-------------------------------------------------------------------   00907100
.***AI.LVER01                                                           00907200
                      AIF  (&XPLISTVER LT 5).ZI34Z                      00907300
.*-------------------------------------------------------------------   00907400
.***AI.L19 ADDR64 XTARGETS AD                                           00907500
                      AIF   ('&ZXTARGETS' EQ '').ZI34H                  00907600
&ZCLNG                SETC  '&XTARGETS'                                 00907700
&ZCGPR                SETC  '14'                                        00907800
         AIF   ('&XTARGETS'(1,1) EQ '(').ZI34F  IN GPR                  00907900
.*                                                                      00908000
&ZOPN                 SETA  &ZOPN+1                                     00908100
&ZOPL(&ZOPN)          SETC  ' '                                         00908200
&ZOPO(&ZOPN)          SETC  'LA'                                        00908300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00908400
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00908500
.*                                                                      00908600
                      AGO   .ZI34G                                      00908700
.*                                                                      00908800
.ZI34F                ANOP  ,                                           00908900
&ZCGPR   SETC  '&XTARGETS'(2,K'&XTARGETS-2)                             00909000
.*                                                                      00909100
.ZI34G                ANOP  ,                                           00909200
                      AIF   ('&SYSAM64' EQ 'YES').ZI34H1A               00909300
.*                                                                      00909400
&ZOPN                 SETA  &ZOPN+1                                     00909500
&ZOPL(&ZOPN)          SETC  ' '                                         00909600
&ZOPO(&ZOPN)          SETC  'ST'                                        00909700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+56(,1)'                           00909800
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00909900
.*                                                                      00910000
                      AGO   .ZI34H                                      00910100
.ZI34H1A              ANOP  ,                                           00910200
.*                                                                      00910300
&ZOPN                 SETA  &ZOPN+1                                     00910400
&ZOPL(&ZOPN)          SETC  ' '                                         00910500
&ZOPO(&ZOPN)          SETC  'STG'                                       00910600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00910700
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00910800
.*                                                                      00910900
.ZI34H                ANOP  ,                                           00911000
.*-------------------------------------------------------------------   00911100
.***AI.LVER02                                                           00911200
.ZI34Z                ANOP  ,                                           00911300
.*-------------------------------------------------------------------   00911400
.***AI.LVER01                                                           00911500
                      AIF  (&XPLISTVER LT 5).ZI35Z                      00911600
.*-------------------------------------------------------------------   00911700
.***AI.L19 ADDR64 XRETMSGOTOKEN AD                                      00911800
                      AIF   ('&ZXRETMSGOTOKEN' EQ '').ZI35H             00911900
&ZCLNG                SETC  '&XRETMSGOTOKEN'                            00912000
&ZCGPR                SETC  '14'                                        00912100
         AIF   ('&XRETMSGOTOKEN'(1,1) EQ '(').ZI35F  IN GPR             00912200
.*                                                                      00912300
&ZOPN                 SETA  &ZOPN+1                                     00912400
&ZOPL(&ZOPN)          SETC  ' '                                         00912500
&ZOPO(&ZOPN)          SETC  'LA'                                        00912600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00912700
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00912800
.*                                                                      00912900
                      AGO   .ZI35G                                      00913000
.*                                                                      00913100
.ZI35F                ANOP  ,                                           00913200
&ZCGPR   SETC  '&XRETMSGOTOKEN'(2,K'&XRETMSGOTOKEN-2)                   00913300
.*                                                                      00913400
.ZI35G                ANOP  ,                                           00913500
                      AIF   ('&SYSAM64' EQ 'YES').ZI35H1A               00913600
.*                                                                      00913700
&ZOPN                 SETA  &ZOPN+1                                     00913800
&ZOPL(&ZOPN)          SETC  ' '                                         00913900
&ZOPO(&ZOPN)          SETC  'ST'                                        00914000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+64(,1)'                           00914100
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00914200
.*                                                                      00914300
                      AGO   .ZI35H                                      00914400
.ZI35H1A              ANOP  ,                                           00914500
.*                                                                      00914600
&ZOPN                 SETA  &ZOPN+1                                     00914700
&ZOPL(&ZOPN)          SETC  ' '                                         00914800
&ZOPO(&ZOPN)          SETC  'STG'                                       00914900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,64(,1)'                             00915000
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00915100
.*                                                                      00915200
.ZI35H                ANOP  ,                                           00915300
.*-------------------------------------------------------------------   00915400
.***AI.LVER02                                                           00915500
.ZI35Z                ANOP  ,                                           00915600
.*-------------------------------------------------------------------   00915700
.***AI.LVER01                                                           00915800
                      AIF  (&XPLISTVER LT 5).ZI36Z                      00915900
.*-------------------------------------------------------------------   00916000
.***AI.L25  XRESPONSEID CL24                                            00916100
                      AIF   ('&ZXRESPONSEID' EQ '').ZI36E               00916200
                      AIF   ('&ZXRESPONSEID' EQ 'OUTPUT').ZI36E         00916300
&ZCGPR                SETC  '&XRESPONSEID'                              00916400
.*                                                                      00916500
                      AIF   ('&XRESPONSEID'(1,1) NE '(').ZI36B          00916600
&ZCGPR   SETC  '0('.'&XRESPONSEID'(2,K'&XRESPONSEID-2).')'              00916700
.ZI36B                ANOP  ,                                           00916800
.*                                                                      00916900
&ZOPN                 SETA  &ZOPN+1                                     00917000
&ZOPL(&ZOPN)          SETC  ' '                                         00917100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00917200
&ZOPV(&ZOPN)          SETC  '72(24,1),&ZCGPR'                           00917300
&ZOPD(&ZOPN)          SETC  '++ &ZXRESPONSEID XRESPONSEID'              00917400
.*                                                                      00917500
.ZI36E                ANOP  ,                                           00917600
.*-------------------------------------------------------------------   00917700
.***AI.LVER02                                                           00917800
.ZI36Z                ANOP  ,                                           00917900
.*-------------------------------------------------------------------   00918000
.***AI.LVER01                                                           00918100
                      AIF  (&XPLISTVER LT 5).ZI37Z                      00918200
.*-------------------------------------------------------------------   00918300
.***AI.L18  XUSERDATA CL8                                               00918400
         AIF   ('&XUSERDATA' NE 'ALLZERO').ZI37                         00918500
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00918600
.ZI37                 ANOP  ,                                           00918700
.*-------------------------------------------------------------------   00918800
.***AI.L25  XUSERDATA CL8                                               00918900
                      AIF   ('&ZXUSERDATA' EQ '').ZI37E                 00919000
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI37E           00919100
&ZCGPR                SETC  '&XUSERDATA'                                00919200
.*                                                                      00919300
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI37B            00919400
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00919500
.ZI37B                ANOP  ,                                           00919600
.*                                                                      00919700
&ZOPN                 SETA  &ZOPN+1                                     00919800
&ZOPL(&ZOPN)          SETC  ' '                                         00919900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00920000
&ZOPV(&ZOPN)          SETC  '96(8,1),&ZCGPR'                            00920100
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00920200
.*                                                                      00920300
.ZI37E                ANOP  ,                                           00920400
.*-------------------------------------------------------------------   00920500
.***AI.LVER02                                                           00920600
.ZI37Z                ANOP  ,                                           00920700
.*-------------------------------------------------------------------   00920800
.***AI.LVER01                                                           00920900
                      AIF  (&XPLISTVER LT 5).ZI38Z                      00921000
.*-------------------------------------------------------------------   00921100
.***AI.L25  XSTREAMID F                                                 00921200
                      AIF   ('&ZXSTREAMID' EQ '').ZI38E                 00921300
                      AIF   ('&ZXSTREAMID' EQ 'OUTPUT').ZI38E           00921400
&ZCGPR                SETC  '&XSTREAMID'                                00921500
.*                                                                      00921600
                      AIF   ('&XSTREAMID'(1,1) NE '(').ZI38B            00921700
&ZCGPR   SETC  '0('.'&XSTREAMID'(2,K'&XSTREAMID-2).')'                  00921800
                      AGO   .ZI38D                                      00921900
.ZI38B                ANOP  ,                                           00922000
.*                                                                      00922100
&ZC                   SETC  '&XSTREAMID'(1,1)                           00922200
                      AIF   (T'&ZC NE 'N').ZI38D                        00922300
&ZC                   SETC  '&XSTREAMID'                                00922400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI38D               00922500
&ZCGPR                SETC  '=AL4(&XSTREAMID)'                          00922600
.*                                                                      00922700
.ZI38D                ANOP  ,                                           00922800
.*                                                                      00922900
&ZOPN                 SETA  &ZOPN+1                                     00923000
&ZOPL(&ZOPN)          SETC  ' '                                         00923100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00923200
&ZOPV(&ZOPN)          SETC  '104(4,1),&ZCGPR'                           00923300
&ZOPD(&ZOPN)          SETC  '++ &ZXSTREAMID XSTREAMID'                  00923400
.*                                                                      00923500
.ZI38E                ANOP  ,                                           00923600
.*-------------------------------------------------------------------   00923700
.***AI.LVER02                                                           00923800
.ZI38Z                ANOP  ,                                           00923900
.*-------------------------------------------------------------------   00924000
.***AI.LVER01                                                           00924100
                      AIF  (&XPLISTVER LT 5).ZI39Z                      00924200
.*-------------------------------------------------------------------   00924300
.***AI.L25  X#TARGETS F                                                 00924400
                      AIF   ('&ZX#TARGETS' EQ '').ZI39E                 00924500
                      AIF   ('&ZX#TARGETS' EQ 'OUTPUT').ZI39E           00924600
&ZCGPR                SETC  '&X#TARGETS'                                00924700
.*                                                                      00924800
                      AIF   ('&X#TARGETS'(1,1) NE '(').ZI39B            00924900
&ZCGPR   SETC  '0('.'&X#TARGETS'(2,K'&X#TARGETS-2).')'                  00925000
                      AGO   .ZI39D                                      00925100
.ZI39B                ANOP  ,                                           00925200
.*                                                                      00925300
&ZC                   SETC  '&X#TARGETS'(1,1)                           00925400
                      AIF   (T'&ZC NE 'N').ZI39D                        00925500
&ZC                   SETC  '&X#TARGETS'                                00925600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI39D               00925700
&ZCGPR                SETC  '=AL4(&X#TARGETS)'                          00925800
.*                                                                      00925900
.ZI39D                ANOP  ,                                           00926000
.*                                                                      00926100
&ZOPN                 SETA  &ZOPN+1                                     00926200
&ZOPL(&ZOPN)          SETC  ' '                                         00926300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00926400
&ZOPV(&ZOPN)          SETC  '108(4,1),&ZCGPR'                           00926500
&ZOPD(&ZOPN)          SETC  '++ &ZX#TARGETS X#TARGETS'                  00926600
.*                                                                      00926700
.ZI39E                ANOP  ,                                           00926800
.*-------------------------------------------------------------------   00926900
.***AI.LVER02                                                           00927000
.ZI39Z                ANOP  ,                                           00927100
.*-------------------------------------------------------------------   00927200
.***AI.LVER01                                                           00927300
                      AIF  (&XPLISTVER LT 5).ZI40Z                      00927400
.*-------------------------------------------------------------------   00927500
.***AI.L25  XNEXTTARGETOFF F                                            00927600
                      AIF   ('&ZXNEXTTARGETOFF' EQ '').ZI40E            00927700
                      AIF   ('&ZXNEXTTARGETOFF' EQ 'OUTPUT').ZI40E      00927800
&ZCGPR                SETC  '&XNEXTTARGETOFF'                           00927900
.*                                                                      00928000
                      AIF   ('&XNEXTTARGETOFF'(1,1) NE '(').ZI40B       00928100
&ZCGPR   SETC  '0('.'&XNEXTTARGETOFF'(2,K'&XNEXTTARGETOFF-2).')'        00928200
                      AGO   .ZI40D                                      00928300
.ZI40B                ANOP  ,                                           00928400
.*                                                                      00928500
&ZC                   SETC  '&XNEXTTARGETOFF'(1,1)                      00928600
                      AIF   (T'&ZC NE 'N').ZI40D                        00928700
&ZC                   SETC  '&XNEXTTARGETOFF'                           00928800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI40D               00928900
&ZCGPR                SETC  '=FL4''&XNEXTTARGETOFF'''                   00929000
.*                                                                      00929100
.ZI40D                ANOP  ,                                           00929200
.*                                                                      00929300
&ZOPN                 SETA  &ZOPN+1                                     00929400
&ZOPL(&ZOPN)          SETC  ' '                                         00929500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00929600
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           00929700
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTTARGETOFF XNEXTTARGETOFF'        00929800
.*                                                                      00929900
.ZI40E                ANOP  ,                                           00930000
.*-------------------------------------------------------------------   00930100
.***AI.LVER02                                                           00930200
.ZI40Z                ANOP  ,                                           00930300
.*-------------------------------------------------------------------   00930400
.***AI.LVER01                                                           00930500
                      AIF  (&XPLISTVER LT 5).ZI41Z                      00930600
.*-------------------------------------------------------------------   00930700
.***AI.L23 ALET XTARGETS F                                              00930800
         AIF   ('&ZXTARGETS' EQ '').ZI41G                               00930900
         AIF   ('&SYSASCE' EQ 'P').ZI41G   SYSSTATE PRIMARY             00931000
&ZCLNG                SETC  '&XTARGETS'                                 00931100
         AIF   ('&XTARGETS'(1,1) EQ '(').ZI41E  IN AR                   00931200
.*                                                                      00931300
&ZCGPR                SETC  '14'                                        00931400
&ZOPN                 SETA  &ZOPN+1                                     00931500
&ZOPL(&ZOPN)          SETC  ' '                                         00931600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00931700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00931800
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00931900
                      AGO   .ZI41F                                      00932000
.*                                                                      00932100
.ZI41E                ANOP  ,                                           00932200
&ZCGPR   SETC  '&XTARGETS'(2,K'&XTARGETS-2)                             00932300
.*                                                                      00932400
.ZI41F                ANOP  ,                                           00932500
.*                                                                      00932600
&ZOPN                 SETA  &ZOPN+1                                     00932700
&ZOPL(&ZOPN)          SETC  ' '                                         00932800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00932900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,116(1)'                      00933000
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00933100
.*                                                                      00933200
.ZI41G                ANOP  ,                                           00933300
.*-------------------------------------------------------------------   00933400
.***AI.LVER02                                                           00933500
.ZI41Z                ANOP  ,                                           00933600
.*-------------------------------------------------------------------   00933700
.***AI.LVER01                                                           00933800
                      AIF  (&XPLISTVER LT 5).ZI42Z                      00933900
.*-------------------------------------------------------------------   00934000
.***AI.L23 ALET XRETMSGOTOKEN F                                         00934100
         AIF   ('&ZXRETMSGOTOKEN' EQ '').ZI42G                          00934200
         AIF   ('&SYSASCE' EQ 'P').ZI42G   SYSSTATE PRIMARY             00934300
&ZCLNG                SETC  '&XRETMSGOTOKEN'                            00934400
         AIF   ('&XRETMSGOTOKEN'(1,1) EQ '(').ZI42E  IN AR              00934500
.*                                                                      00934600
&ZCGPR                SETC  '14'                                        00934700
&ZOPN                 SETA  &ZOPN+1                                     00934800
&ZOPL(&ZOPN)          SETC  ' '                                         00934900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00935000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00935100
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00935200
                      AGO   .ZI42F                                      00935300
.*                                                                      00935400
.ZI42E                ANOP  ,                                           00935500
&ZCGPR   SETC  '&XRETMSGOTOKEN'(2,K'&XRETMSGOTOKEN-2)                   00935600
.*                                                                      00935700
.ZI42F                ANOP  ,                                           00935800
.*                                                                      00935900
&ZOPN                 SETA  &ZOPN+1                                     00936000
&ZOPL(&ZOPN)          SETC  ' '                                         00936100
&ZOPO(&ZOPN)          SETC  'STAM'                                      00936200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,120(1)'                      00936300
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00936400
.*                                                                      00936500
.ZI42G                ANOP  ,                                           00936600
.*-------------------------------------------------------------------   00936700
.***AI.LVER02                                                           00936800
.ZI42Z                ANOP  ,                                           00936900
.*-------------------------------------------------------------------   00937000
.***AI.LVER01                                                           00937100
                      AIF  (&XPLISTVER LT 5).ZI43Z                      00937200
.*-------------------------------------------------------------------   00937300
.***AI.L05 XATTRIBUTEFLAGS BL4                                          00937400
&ZW                   SETC  ''                                          00937500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00937600
.*-------------------------------------------------------------------   00937700
.***AI.LVER02                                                           00937800
.ZI43Z                ANOP  ,                                           00937900
.*-------------------------------------------------------------------   00938000
.***AI.LVER01                                                           00938100
                      AIF  (&XPLISTVER LT 5).ZI44Z                      00938200
.*-------------------------------------------------------------------   00938300
.***AI.L09 XATTRIBUTEFLAGS "RECOVERY"                                   00938400
.***      BL4'1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'                         00938500
&ZI                   SETA  0              RESET ARRAY INDEX            00938600
.ZI44A                ANOP  ,                                           00938700
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00938800
                      AIF   (K'&XATTRIBUTES(&ZI) LE 0).ZI44B            00938900
         AIF   ('&XATTRIBUTES(&ZI)' NE 'RECOVERY').ZI44A                00939000
&ZW                   SETC  '&ZW.1'                                     00939100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00939200
                      AGO   .ZI44C                                      00939300
.*                                                                      00939400
.ZI44B                ANOP  ,                                           00939500
&ZW                   SETC  '&ZW.0'                                     00939600
.ZI44C                ANOP  ,                                           00939700
.*-------------------------------------------------------------------   00939800
.***AI.LVER02                                                           00939900
.ZI44Z                ANOP  ,                                           00940000
.*-------------------------------------------------------------------   00940100
.***AI.LVER01                                                           00940200
                      AIF  (&XPLISTVER LT 5).ZI45Z                      00940300
.*-------------------------------------------------------------------   00940400
.***AI.L09 XATTRIBUTEFLAGS "CRITICAL"                                   00940500
.***      BL4'X1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'                         00940600
&ZI                   SETA  0              RESET ARRAY INDEX            00940700
.ZI45A                ANOP  ,                                           00940800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00940900
                      AIF   (K'&XATTRIBUTES(&ZI) LE 0).ZI45B            00941000
         AIF   ('&XATTRIBUTES(&ZI)' NE 'CRITICAL').ZI45A                00941100
&ZW                   SETC  '&ZW.1000000000000000000000000000000'       00941200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00941300
                      AGO   .ZI45C                                      00941400
.*                                                                      00941500
.ZI45B                ANOP  ,                                           00941600
&ZW                   SETC  '&ZW.0000000000000000000000000000000'       00941700
.ZI45C                ANOP  ,                                           00941800
.*-------------------------------------------------------------------   00941900
.***AI.L10 XATTRIBUTEFLAGS BL4                                          00942000
                      AIF   ('&ZCLNG' NE 'YES').ZI45E  ALL ZERO BITS    00942100
&ZOPN                 SETA  &ZOPN+1                                     00942200
&ZOPL(&ZOPN)          SETC  ' '                                         00942300
&ZOPO(&ZOPN)          SETC  'OC'                                        00942400
&ZOPV(&ZOPN)          SETC  '124(4,1),=BL4''&ZW'''                      00942500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL4'                              00942600
.ZI45E                ANOP  ,                                           00942700
.*-------------------------------------------------------------------   00942800
.***AI.LVER02                                                           00942900
.ZI45Z                ANOP  ,                                           00943000
.*-------------------------------------------------------------------   00943100
.***AI.LVER01                                                           00943200
                      AIF  (&XPLISTVER LT 6).ZI46Z                      00943300
.*-------------------------------------------------------------------   00943400
.***AI.L05 XKEYUSED6 BL1                                                00943500
&ZW                   SETC  ''                                          00943600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00943700
.*-------------------------------------------------------------------   00943800
.***AI.LVER02                                                           00943900
.ZI46Z                ANOP  ,                                           00944000
.*-------------------------------------------------------------------   00944100
.***AI.LVER01                                                           00944200
                      AIF  (&XPLISTVER LT 6).ZI47Z                      00944300
.*-------------------------------------------------------------------   00944400
.***AI.L08 XKEYUSED6 "YES"                                              00944500
.***      BL1'1XXXXXXX'                                                 00944600
         AIF   ('&XMULTIPART' NE 'YES').ZI47A                           00944700
&ZW                   SETC  '&ZW.1'                                     00944800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00944900
                      AGO   .ZI47C                                      00945000
.*                                                                      00945100
.ZI47A                ANOP  ,                                           00945200
&ZW                   SETC  '&ZW.0'                                     00945300
.ZI47C                ANOP  ,                                           00945400
.*-------------------------------------------------------------------   00945500
.***AI.LVER02                                                           00945600
.ZI47Z                ANOP  ,                                           00945700
.*-------------------------------------------------------------------   00945800
.***AI.LVER01                                                           00945900
                      AIF  (&XPLISTVER LT 6).ZI48Z                      00946000
.*-------------------------------------------------------------------   00946100
.***AI.L08 XKEYUSED6 "QUEUE"                                            00946200
.***      BL1'X1XXXXXX'                                                 00946300
         AIF   ('&XELEMFORM' NE 'QUEUE').ZI48A                          00946400
&ZW                   SETC  '&ZW.1'                                     00946500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00946600
                      AGO   .ZI48C                                      00946700
.*                                                                      00946800
.ZI48A                ANOP  ,                                           00946900
&ZW                   SETC  '&ZW.0'                                     00947000
.ZI48C                ANOP  ,                                           00947100
.*-------------------------------------------------------------------   00947200
.***AI.LVER02                                                           00947300
.ZI48Z                ANOP  ,                                           00947400
.*-------------------------------------------------------------------   00947500
.***AI.LVER01                                                           00947600
                      AIF  (&XPLISTVER LT 6).ZI49Z                      00947700
.*-------------------------------------------------------------------   00947800
.***AI.L08 XKEYUSED6 "PARTPTROFF"                                       00947900
.***      BL1'XX1XXXXX'                                                 00948000
         AIF   ('&PARTPTROFF' EQ '').ZI49A                              00948100
&ZW                   SETC  '&ZW.1'                                     00948200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00948300
                      AGO   .ZI49C                                      00948400
.*                                                                      00948500
.ZI49A                ANOP  ,                                           00948600
&ZW                   SETC  '&ZW.0'                                     00948700
.ZI49C                ANOP  ,                                           00948800
.*-------------------------------------------------------------------   00948900
.***AI.LVER02                                                           00949000
.ZI49Z                ANOP  ,                                           00949100
.*-------------------------------------------------------------------   00949200
.***AI.LVER01                                                           00949300
                      AIF  (&XPLISTVER LT 6).ZI50Z                      00949400
.*-------------------------------------------------------------------   00949500
.***AI.L08 XKEYUSED6 "PARTALETTBL"                                      00949600
.***      BL1'XXX1XXXX'                                                 00949700
         AIF   ('&PARTALETTBL' EQ '').ZI50A                             00949800
&ZW                   SETC  '&ZW.1'                                     00949900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00950000
                      AGO   .ZI50C                                      00950100
.*                                                                      00950200
.ZI50A                ANOP  ,                                           00950300
&ZW                   SETC  '&ZW.0'                                     00950400
.ZI50C                ANOP  ,                                           00950500
.*-------------------------------------------------------------------   00950600
.***AI.LVER02                                                           00950700
.ZI50Z                ANOP  ,                                           00950800
.*-------------------------------------------------------------------   00950900
.***AI.LVER01                                                           00951000
                      AIF  (&XPLISTVER LT 6).ZI51Z                      00951100
.*-------------------------------------------------------------------   00951200
.***AI.L08 XKEYUSED6 "PARTALETOFF"                                      00951300
.***      BL1'XXXX1XXX'                                                 00951400
         AIF   ('&PARTALETOFF' EQ '').ZI51A                             00951500
&ZW                   SETC  '&ZW.1'                                     00951600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00951700
                      AGO   .ZI51C                                      00951800
.*                                                                      00951900
.ZI51A                ANOP  ,                                           00952000
&ZW                   SETC  '&ZW.0'                                     00952100
.ZI51C                ANOP  ,                                           00952200
.*-------------------------------------------------------------------   00952300
.***AI.LVER02                                                           00952400
.ZI51Z                ANOP  ,                                           00952500
.*-------------------------------------------------------------------   00952600
.***AI.LVER01                                                           00952700
                      AIF  (&XPLISTVER LT 6).ZI52Z                      00952800
.*-------------------------------------------------------------------   00952900
.***AI.L08 XKEYUSED6 "PARTLENTBL"                                       00953000
.***      BL1'XXXXX1XX'                                                 00953100
         AIF   ('&PARTLENTBL' EQ '').ZI52A                              00953200
&ZW                   SETC  '&ZW.1'                                     00953300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00953400
                      AGO   .ZI52C                                      00953500
.*                                                                      00953600
.ZI52A                ANOP  ,                                           00953700
&ZW                   SETC  '&ZW.0'                                     00953800
.ZI52C                ANOP  ,                                           00953900
.*-------------------------------------------------------------------   00954000
.***AI.LVER02                                                           00954100
.ZI52Z                ANOP  ,                                           00954200
.*-------------------------------------------------------------------   00954300
.***AI.LVER01                                                           00954400
                      AIF  (&XPLISTVER LT 6).ZI53Z                      00954500
.*-------------------------------------------------------------------   00954600
.***AI.L08 XKEYUSED6 "PARTLENOFF"                                       00954700
.***      BL1'XXXXXX1X'                                                 00954800
         AIF   ('&PARTLENOFF' EQ '').ZI53A                              00954900
&ZW                   SETC  '&ZW.1'                                     00955000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00955100
                      AGO   .ZI53C                                      00955200
.*                                                                      00955300
.ZI53A                ANOP  ,                                           00955400
&ZW                   SETC  '&ZW.0'                                     00955500
.ZI53C                ANOP  ,                                           00955600
.*-------------------------------------------------------------------   00955700
.***AI.LVER02                                                           00955800
.ZI53Z                ANOP  ,                                           00955900
.*-------------------------------------------------------------------   00956000
.***AI.LVER01                                                           00956100
                      AIF  (&XPLISTVER LT 6).ZI54Z                      00956200
.*-------------------------------------------------------------------   00956300
.***AI.L08 XKEYUSED6 "#MSGPARTS"                                        00956400
.***      BL1'XXXXXXX1'                                                 00956500
         AIF   ('&#MSGPARTS' EQ '').ZI54A                               00956600
&ZW                   SETC  '&ZW.1'                                     00956700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00956800
                      AGO   .ZI54C                                      00956900
.*                                                                      00957000
.ZI54A                ANOP  ,                                           00957100
&ZW                   SETC  '&ZW.0'                                     00957200
.ZI54C                ANOP  ,                                           00957300
.*-------------------------------------------------------------------   00957400
.***AI.L11 XKEYUSED6 BL1                                                00957500
                      AIF   ('&ZCLNG' NE 'YES').ZI54E  ALL ZERO BITS    00957600
&ZOPN                 SETA  &ZOPN+1                                     00957700
&ZOPL(&ZOPN)          SETC  ' '                                         00957800
&ZOPO(&ZOPN)          SETC  'OI'                                        00957900
&ZOPV(&ZOPN)          SETC  '128(1),B''&ZW'''                           00958000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00958100
.ZI54E                ANOP  ,                                           00958200
.*-------------------------------------------------------------------   00958300
.***AI.LVER02                                                           00958400
.ZI54Z                ANOP  ,                                           00958500
.*-------------------------------------------------------------------   00958600
.***AI.LVER01                                                           00958700
                      AIF  (&XPLISTVER LT 6).ZI55Z                      00958800
.*-------------------------------------------------------------------   00958900
.***AI.L05 XKEYUSED6A BL1                                               00959000
&ZW                   SETC  ''                                          00959100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00959200
.*-------------------------------------------------------------------   00959300
.***AI.LVER02                                                           00959400
.ZI55Z                ANOP  ,                                           00959500
.*-------------------------------------------------------------------   00959600
.***AI.LVER01                                                           00959700
                      AIF  (&XPLISTVER LT 6).ZI56Z                      00959800
.*-------------------------------------------------------------------   00959900
.***AI.L08 XKEYUSED6A "31"                                              00960000
.***      BL1'1XXXXXXX'                                                 00960100
         AIF   ('&XELEMADDRMODE' NE '31').ZI56A                         00960200
&ZW                   SETC  '&ZW.10000000'                              00960300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00960400
                      AGO   .ZI56C                                      00960500
.*                                                                      00960600
.ZI56A                ANOP  ,                                           00960700
&ZW                   SETC  '&ZW.00000000'                              00960800
.ZI56C                ANOP  ,                                           00960900
.*-------------------------------------------------------------------   00961000
.***AI.L11 XKEYUSED6A BL1                                               00961100
                      AIF   ('&ZCLNG' NE 'YES').ZI56E  ALL ZERO BITS    00961200
&ZOPN                 SETA  &ZOPN+1                                     00961300
&ZOPL(&ZOPN)          SETC  ' '                                         00961400
&ZOPO(&ZOPN)          SETC  'OI'                                        00961500
&ZOPV(&ZOPN)          SETC  '129(1),B''&ZW'''                           00961600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00961700
.ZI56E                ANOP  ,                                           00961800
.*-------------------------------------------------------------------   00961900
.***AI.LVER02                                                           00962000
.ZI56Z                ANOP  ,                                           00962100
.*-------------------------------------------------------------------   00962200
.***AI.LVER01                                                           00962300
                      AIF  (&XPLISTVER LT 6).ZI57Z                      00962400
.*-------------------------------------------------------------------   00962500
.***AI.L25  XSENDTIME XL2                                               00962600
                      AIF   ('&ZXSENDTIME' EQ '').ZI57E                 00962700
                      AIF   ('&ZXSENDTIME' EQ 'OUTPUT').ZI57E           00962800
&ZCGPR                SETC  '&XSENDTIME'                                00962900
.*                                                                      00963000
                      AIF   ('&XSENDTIME'(1,1) NE '(').ZI57B            00963100
&ZCGPR   SETC  '0('.'&XSENDTIME'(2,K'&XSENDTIME-2).')'                  00963200
                      AGO   .ZI57D                                      00963300
.ZI57B                ANOP  ,                                           00963400
.*                                                                      00963500
&ZC                   SETC  '&XSENDTIME'(1,1)                           00963600
                      AIF   (T'&ZC NE 'N').ZI57D                        00963700
&ZC                   SETC  '&XSENDTIME'                                00963800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI57D               00963900
&ZCGPR                SETC  '=FL2''&XSENDTIME'''                        00964000
.*                                                                      00964100
.ZI57D                ANOP  ,                                           00964200
.*                                                                      00964300
&ZOPN                 SETA  &ZOPN+1                                     00964400
&ZOPL(&ZOPN)          SETC  ' '                                         00964500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00964600
&ZOPV(&ZOPN)          SETC  '130(2,1),&ZCGPR'                           00964700
&ZOPD(&ZOPN)          SETC  '++ &ZXSENDTIME XSENDTIME'                  00964800
.*                                                                      00964900
.ZI57E                ANOP  ,                                           00965000
.*-------------------------------------------------------------------   00965100
.***AI.LVER02                                                           00965200
.ZI57Z                ANOP  ,                                           00965300
.*-------------------------------------------------------------------   00965400
.***AI.LVER01                                                           00965500
                      AIF  (&XPLISTVER LT 6).ZI58Z                      00965600
.*-------------------------------------------------------------------   00965700
.***AI.L23 ALET XELEMENT F                                              00965800
         AIF   ('&ZXELEMENT' EQ '').ZI58G                               00965900
         AIF   ('&SYSASCE' EQ 'P').ZI58G   SYSSTATE PRIMARY             00966000
&ZCLNG                SETC  '&XELEMENT'                                 00966100
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI58E  IN AR                   00966200
.*                                                                      00966300
&ZCGPR                SETC  '14'                                        00966400
&ZOPN                 SETA  &ZOPN+1                                     00966500
&ZOPL(&ZOPN)          SETC  ' '                                         00966600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00966700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00966800
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00966900
                      AGO   .ZI58F                                      00967000
.*                                                                      00967100
.ZI58E                ANOP  ,                                           00967200
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00967300
.*                                                                      00967400
.ZI58F                ANOP  ,                                           00967500
.*                                                                      00967600
&ZOPN                 SETA  &ZOPN+1                                     00967700
&ZOPL(&ZOPN)          SETC  ' '                                         00967800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00967900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,132(1)'                      00968000
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00968100
.*                                                                      00968200
.ZI58G                ANOP  ,                                           00968300
.*-------------------------------------------------------------------   00968400
.***AI.LVER02                                                           00968500
.ZI58Z                ANOP  ,                                           00968600
.*-------------------------------------------------------------------   00968700
.***AI.LVER01                                                           00968800
                      AIF  (&XPLISTVER LT 6).ZI59Z                      00968900
.*-------------------------------------------------------------------   00969000
.***AI.L23 ALET XPARTLENTBL F                                           00969100
         AIF   ('&ZXPARTLENTBL' EQ '').ZI59G                            00969200
         AIF   ('&SYSASCE' EQ 'P').ZI59G   SYSSTATE PRIMARY             00969300
&ZCLNG                SETC  '&XPARTLENTBL'                              00969400
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI59E  IN AR                00969500
.*                                                                      00969600
&ZCGPR                SETC  '14'                                        00969700
&ZOPN                 SETA  &ZOPN+1                                     00969800
&ZOPL(&ZOPN)          SETC  ' '                                         00969900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00970000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00970100
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00970200
                      AGO   .ZI59F                                      00970300
.*                                                                      00970400
.ZI59E                ANOP  ,                                           00970500
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00970600
.*                                                                      00970700
.ZI59F                ANOP  ,                                           00970800
.*                                                                      00970900
&ZOPN                 SETA  &ZOPN+1                                     00971000
&ZOPL(&ZOPN)          SETC  ' '                                         00971100
&ZOPO(&ZOPN)          SETC  'STAM'                                      00971200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,136(1)'                      00971300
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00971400
.*                                                                      00971500
.ZI59G                ANOP  ,                                           00971600
.*-------------------------------------------------------------------   00971700
.***AI.LVER02                                                           00971800
.ZI59Z                ANOP  ,                                           00971900
.*-------------------------------------------------------------------   00972000
.***AI.LVER01                                                           00972100
                      AIF  (&XPLISTVER LT 6).ZI60Z                      00972200
.*-------------------------------------------------------------------   00972300
.***AI.L23 ALET XPARTALETTBL F                                          00972400
         AIF   ('&ZXPARTALETTBL' EQ '').ZI60G                           00972500
         AIF   ('&SYSASCE' EQ 'P').ZI60G   SYSSTATE PRIMARY             00972600
&ZCLNG                SETC  '&XPARTALETTBL'                             00972700
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI60E  IN AR               00972800
.*                                                                      00972900
&ZCGPR                SETC  '14'                                        00973000
&ZOPN                 SETA  &ZOPN+1                                     00973100
&ZOPL(&ZOPN)          SETC  ' '                                         00973200
&ZOPO(&ZOPN)          SETC  'LAE'                                       00973300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00973400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00973500
                      AGO   .ZI60F                                      00973600
.*                                                                      00973700
.ZI60E                ANOP  ,                                           00973800
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00973900
.*                                                                      00974000
.ZI60F                ANOP  ,                                           00974100
.*                                                                      00974200
&ZOPN                 SETA  &ZOPN+1                                     00974300
&ZOPL(&ZOPN)          SETC  ' '                                         00974400
&ZOPO(&ZOPN)          SETC  'STAM'                                      00974500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,140(1)'                      00974600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00974700
.*                                                                      00974800
.ZI60G                ANOP  ,                                           00974900
.*-------------------------------------------------------------------   00975000
.***AI.LVER02                                                           00975100
.ZI60Z                ANOP  ,                                           00975200
.*-------------------------------------------------------------------   00975300
.***AI.LVER01                                                           00975400
                      AIF  (&XPLISTVER LT 6).ZI61Z                      00975500
.*-------------------------------------------------------------------   00975600
.***AI.L18  XPARTALET F                                                 00975700
         AIF   ('&XPARTALET' NE 'ZERO').ZI61                            00975800
&ZXPARTALET           SETC  ''             RESET INPUT/OUTPUT           00975900
.ZI61                 ANOP  ,                                           00976000
.*-------------------------------------------------------------------   00976100
.***AI.L25  XPARTALET F                                                 00976200
                      AIF   ('&ZXPARTALET' EQ '').ZI61E                 00976300
                      AIF   ('&ZXPARTALET' EQ 'OUTPUT').ZI61E           00976400
&ZCGPR                SETC  '&XPARTALET'                                00976500
.*                                                                      00976600
                      AIF   ('&XPARTALET'(1,1) NE '(').ZI61B            00976700
&ZCGPR   SETC  '0('.'&XPARTALET'(2,K'&XPARTALET-2).')'                  00976800
.ZI61B                ANOP  ,                                           00976900
.*                                                                      00977000
&ZC                   SETC  '&XPARTALET'(1,1)                           00977100
                      AIF   (T'&ZC NE 'N').ZI61D                        00977200
&ZC                   SETC  '&XPARTALET'                                00977300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI61D               00977400
&ZCGPR                SETC  '=AL4(&XPARTALET)'                          00977500
.*                                                                      00977600
.ZI61D                ANOP  ,                                           00977700
.*                                                                      00977800
&ZOPN                 SETA  &ZOPN+1                                     00977900
&ZOPL(&ZOPN)          SETC  ' '                                         00978000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00978100
&ZOPV(&ZOPN)          SETC  '144(4,1),&ZCGPR'                           00978200
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALET XPARTALET'                  00978300
.*                                                                      00978400
.ZI61E                ANOP  ,                                           00978500
.*-------------------------------------------------------------------   00978600
.***AI.LVER02                                                           00978700
.ZI61Z                ANOP  ,                                           00978800
.*-------------------------------------------------------------------   00978900
.***AI.LVER01                                                           00979000
                      AIF  (&XPLISTVER LT 6).ZI62Z                      00979100
.*-------------------------------------------------------------------   00979200
.***AI.L25  XPARTALETOFF F                                              00979300
                      AIF   ('&ZXPARTALETOFF' EQ '').ZI62E              00979400
                      AIF   ('&ZXPARTALETOFF' EQ 'OUTPUT').ZI62E        00979500
&ZCGPR                SETC  '&XPARTALETOFF'                             00979600
.*                                                                      00979700
                      AIF   ('&XPARTALETOFF'(1,1) NE '(').ZI62B         00979800
&ZCGPR   SETC  '0('.'&XPARTALETOFF'(2,K'&XPARTALETOFF-2).')'            00979900
                      AGO   .ZI62D                                      00980000
.ZI62B                ANOP  ,                                           00980100
.*                                                                      00980200
&ZC                   SETC  '&XPARTALETOFF'(1,1)                        00980300
                      AIF   (T'&ZC NE 'N').ZI62D                        00980400
&ZC                   SETC  '&XPARTALETOFF'                             00980500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI62D               00980600
&ZCGPR                SETC  '=FL4''&XPARTALETOFF'''                     00980700
.*                                                                      00980800
.ZI62D                ANOP  ,                                           00980900
.*                                                                      00981000
&ZOPN                 SETA  &ZOPN+1                                     00981100
&ZOPL(&ZOPN)          SETC  ' '                                         00981200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00981300
&ZOPV(&ZOPN)          SETC  '148(4,1),&ZCGPR'                           00981400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETOFF XPARTALETOFF'            00981500
.*                                                                      00981600
.ZI62E                ANOP  ,                                           00981700
.*-------------------------------------------------------------------   00981800
.***AI.LVER02                                                           00981900
.ZI62Z                ANOP  ,                                           00982000
.*-------------------------------------------------------------------   00982100
.***AI.LVER01                                                           00982200
                      AIF  (&XPLISTVER LT 6).ZI63Z                      00982300
.*-------------------------------------------------------------------   00982400
.***AI.L19 ADDR64 XELEMENT AD                                           00982500
                      AIF   ('&ZXELEMENT' EQ '').ZI63H                  00982600
&ZCLNG                SETC  '&XELEMENT'                                 00982700
&ZCGPR                SETC  '14'                                        00982800
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI63F  IN GPR                  00982900
.*                                                                      00983000
&ZOPN                 SETA  &ZOPN+1                                     00983100
&ZOPL(&ZOPN)          SETC  ' '                                         00983200
&ZOPO(&ZOPN)          SETC  'LA'                                        00983300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00983400
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00983500
.*                                                                      00983600
                      AGO   .ZI63G                                      00983700
.*                                                                      00983800
.ZI63F                ANOP  ,                                           00983900
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00984000
.*                                                                      00984100
.ZI63G                ANOP  ,                                           00984200
                      AIF   ('&SYSAM64' EQ 'YES').ZI63H1A               00984300
.*                                                                      00984400
&ZOPN                 SETA  &ZOPN+1                                     00984500
&ZOPL(&ZOPN)          SETC  ' '                                         00984600
&ZOPO(&ZOPN)          SETC  'ST'                                        00984700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+152(,1)'                          00984800
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00984900
.*                                                                      00985000
                      AGO   .ZI63H                                      00985100
.ZI63H1A              ANOP  ,                                           00985200
.*                                                                      00985300
&ZOPN                 SETA  &ZOPN+1                                     00985400
&ZOPL(&ZOPN)          SETC  ' '                                         00985500
&ZOPO(&ZOPN)          SETC  'STG'                                       00985600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,152(,1)'                            00985700
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00985800
.*                                                                      00985900
.ZI63H                ANOP  ,                                           00986000
.*-------------------------------------------------------------------   00986100
.***AI.LVER02                                                           00986200
.ZI63Z                ANOP  ,                                           00986300
.*-------------------------------------------------------------------   00986400
.***AI.LVER01                                                           00986500
                      AIF  (&XPLISTVER LT 6).ZI64Z                      00986600
.*-------------------------------------------------------------------   00986700
.***AI.L19 ADDR64 XPARTLENTBL AD                                        00986800
                      AIF   ('&ZXPARTLENTBL' EQ '').ZI64H               00986900
&ZCLNG                SETC  '&XPARTLENTBL'                              00987000
&ZCGPR                SETC  '14'                                        00987100
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI64F  IN GPR               00987200
.*                                                                      00987300
&ZOPN                 SETA  &ZOPN+1                                     00987400
&ZOPL(&ZOPN)          SETC  ' '                                         00987500
&ZOPO(&ZOPN)          SETC  'LA'                                        00987600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00987700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00987800
.*                                                                      00987900
                      AGO   .ZI64G                                      00988000
.*                                                                      00988100
.ZI64F                ANOP  ,                                           00988200
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00988300
.*                                                                      00988400
.ZI64G                ANOP  ,                                           00988500
                      AIF   ('&SYSAM64' EQ 'YES').ZI64H1A               00988600
.*                                                                      00988700
&ZOPN                 SETA  &ZOPN+1                                     00988800
&ZOPL(&ZOPN)          SETC  ' '                                         00988900
&ZOPO(&ZOPN)          SETC  'ST'                                        00989000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+160(,1)'                          00989100
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00989200
.*                                                                      00989300
                      AGO   .ZI64H                                      00989400
.ZI64H1A              ANOP  ,                                           00989500
.*                                                                      00989600
&ZOPN                 SETA  &ZOPN+1                                     00989700
&ZOPL(&ZOPN)          SETC  ' '                                         00989800
&ZOPO(&ZOPN)          SETC  'STG'                                       00989900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,160(,1)'                            00990000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00990100
.*                                                                      00990200
.ZI64H                ANOP  ,                                           00990300
.*-------------------------------------------------------------------   00990400
.***AI.LVER02                                                           00990500
.ZI64Z                ANOP  ,                                           00990600
.*-------------------------------------------------------------------   00990700
.***AI.LVER01                                                           00990800
                      AIF  (&XPLISTVER LT 6).ZI65Z                      00990900
.*-------------------------------------------------------------------   00991000
.***AI.L19 ADDR64 XPARTALETTBL AD                                       00991100
                      AIF   ('&ZXPARTALETTBL' EQ '').ZI65H              00991200
&ZCLNG                SETC  '&XPARTALETTBL'                             00991300
&ZCGPR                SETC  '14'                                        00991400
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI65F  IN GPR              00991500
.*                                                                      00991600
&ZOPN                 SETA  &ZOPN+1                                     00991700
&ZOPL(&ZOPN)          SETC  ' '                                         00991800
&ZOPO(&ZOPN)          SETC  'LA'                                        00991900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00992000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00992100
.*                                                                      00992200
                      AGO   .ZI65G                                      00992300
.*                                                                      00992400
.ZI65F                ANOP  ,                                           00992500
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00992600
.*                                                                      00992700
.ZI65G                ANOP  ,                                           00992800
                      AIF   ('&SYSAM64' EQ 'YES').ZI65H1A               00992900
.*                                                                      00993000
&ZOPN                 SETA  &ZOPN+1                                     00993100
&ZOPL(&ZOPN)          SETC  ' '                                         00993200
&ZOPO(&ZOPN)          SETC  'ST'                                        00993300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+168(,1)'                          00993400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00993500
.*                                                                      00993600
                      AGO   .ZI65H                                      00993700
.ZI65H1A              ANOP  ,                                           00993800
.*                                                                      00993900
&ZOPN                 SETA  &ZOPN+1                                     00994000
&ZOPL(&ZOPN)          SETC  ' '                                         00994100
&ZOPO(&ZOPN)          SETC  'STG'                                       00994200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,168(,1)'                            00994300
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00994400
.*                                                                      00994500
.ZI65H                ANOP  ,                                           00994600
.*-------------------------------------------------------------------   00994700
.***AI.LVER02                                                           00994800
.ZI65Z                ANOP  ,                                           00994900
.*-------------------------------------------------------------------   00995000
.***AI.LVER01                                                           00995100
                      AIF  (&XPLISTVER LT 6).ZI66Z                      00995200
.*-------------------------------------------------------------------   00995300
.***AI.L25  XPARTOFF F                                                  00995400
                      AIF   ('&ZXPARTOFF' EQ '').ZI66E                  00995500
                      AIF   ('&ZXPARTOFF' EQ 'OUTPUT').ZI66E            00995600
&ZCGPR                SETC  '&XPARTOFF'                                 00995700
.*                                                                      00995800
                      AIF   ('&XPARTOFF'(1,1) NE '(').ZI66B             00995900
&ZCGPR   SETC  '0('.'&XPARTOFF'(2,K'&XPARTOFF-2).')'                    00996000
                      AGO   .ZI66D                                      00996100
.ZI66B                ANOP  ,                                           00996200
.*                                                                      00996300
&ZC                   SETC  '&XPARTOFF'(1,1)                            00996400
                      AIF   (T'&ZC NE 'N').ZI66D                        00996500
&ZC                   SETC  '&XPARTOFF'                                 00996600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI66D               00996700
&ZCGPR                SETC  '=FL4''&XPARTOFF'''                         00996800
.*                                                                      00996900
.ZI66D                ANOP  ,                                           00997000
.*                                                                      00997100
&ZOPN                 SETA  &ZOPN+1                                     00997200
&ZOPL(&ZOPN)          SETC  ' '                                         00997300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00997400
&ZOPV(&ZOPN)          SETC  '176(4,1),&ZCGPR'                           00997500
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTOFF XPARTOFF'                    00997600
.*                                                                      00997700
.ZI66E                ANOP  ,                                           00997800
.*-------------------------------------------------------------------   00997900
.***AI.LVER02                                                           00998000
.ZI66Z                ANOP  ,                                           00998100
.*-------------------------------------------------------------------   00998200
.***AI.LVER01                                                           00998300
                      AIF  (&XPLISTVER LT 6).ZI67Z                      00998400
.*-------------------------------------------------------------------   00998500
.***AI.LVER02                                                           00998600
.ZI67Z                ANOP  ,                                           00998700
.*-------------------------------------------------------------------   00998800
.***AI.LVER01                                                           00998900
                      AIF  (&XPLISTVER LT 6).ZI68Z                      00999000
.*-------------------------------------------------------------------   00999100
.***AI.LVER02                                                           00999200
.ZI68Z                ANOP  ,                                           00999300
.*-------------------------------------------------------------------   00999400
.***AI.LVER01                                                           00999500
                      AIF  (&XPLISTVER LT 6).ZI69Z                      00999600
.*-------------------------------------------------------------------   00999700
.***AI.L18  XENDOFQUEUE AL8                                             00999800
         AIF   ('&XENDOFQUEUE' NE 'ZERO').ZI69                          00999900
&ZXENDOFQUEUE         SETC  ''             RESET INPUT/OUTPUT           01000000
.ZI69                 ANOP  ,                                           01000100
.*-------------------------------------------------------------------   01000200
.***AI.L25  XENDOFQUEUE AL8                                             01000300
                      AIF   ('&ZXENDOFQUEUE' EQ '').ZI69E               01000400
                      AIF   ('&ZXENDOFQUEUE' EQ 'OUTPUT').ZI69E         01000500
&ZCGPR                SETC  '&XENDOFQUEUE'                              01000600
.*                                                                      01000700
                      AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZI69B          01000800
&ZCGPR   SETC  '0('.'&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2).')'              01000900
                      AGO   .ZI69D                                      01001000
.ZI69B                ANOP  ,                                           01001100
.*                                                                      01001200
&ZC                   SETC  '&XENDOFQUEUE'(1,1)                         01001300
                      AIF   (T'&ZC NE 'N').ZI69D                        01001400
&ZC                   SETC  '&XENDOFQUEUE'                              01001500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI69D               01001600
&ZCGPR                SETC  '=AD(&XENDOFQUEUE)'                         01001700
.*                                                                      01001800
.ZI69D                ANOP  ,                                           01001900
.*                                                                      01002000
&ZOPN                 SETA  &ZOPN+1                                     01002100
&ZOPL(&ZOPN)          SETC  ' '                                         01002200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01002300
&ZOPV(&ZOPN)          SETC  '184(8,1),&ZCGPR'                           01002400
&ZOPD(&ZOPN)          SETC  '++ &ZXENDOFQUEUE XENDOFQUEUE'              01002500
.*                                                                      01002600
.ZI69E                ANOP  ,                                           01002700
.*-------------------------------------------------------------------   01002800
.***AI.LVER02                                                           01002900
.ZI69Z                ANOP  ,                                           01003000
.*-------------------------------------------------------------------   01003100
.***AI.LVER01                                                           01003200
                      AIF  (&XPLISTVER LT 6).ZI70Z                      01003300
.*-------------------------------------------------------------------   01003400
.***AI.L25  XPARTPTROFF F                                               01003500
                      AIF   ('&ZXPARTPTROFF' EQ '').ZI70E               01003600
                      AIF   ('&ZXPARTPTROFF' EQ 'OUTPUT').ZI70E         01003700
&ZCGPR                SETC  '&XPARTPTROFF'                              01003800
.*                                                                      01003900
                      AIF   ('&XPARTPTROFF'(1,1) NE '(').ZI70B          01004000
&ZCGPR   SETC  '0('.'&XPARTPTROFF'(2,K'&XPARTPTROFF-2).')'              01004100
                      AGO   .ZI70D                                      01004200
.ZI70B                ANOP  ,                                           01004300
.*                                                                      01004400
&ZC                   SETC  '&XPARTPTROFF'(1,1)                         01004500
                      AIF   (T'&ZC NE 'N').ZI70D                        01004600
&ZC                   SETC  '&XPARTPTROFF'                              01004700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI70D               01004800
&ZCGPR                SETC  '=FL4''&XPARTPTROFF'''                      01004900
.*                                                                      01005000
.ZI70D                ANOP  ,                                           01005100
.*                                                                      01005200
&ZOPN                 SETA  &ZOPN+1                                     01005300
&ZOPL(&ZOPN)          SETC  ' '                                         01005400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01005500
&ZOPV(&ZOPN)          SETC  '192(4,1),&ZCGPR'                           01005600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTPTROFF XPARTPTROFF'              01005700
.*                                                                      01005800
.ZI70E                ANOP  ,                                           01005900
.*-------------------------------------------------------------------   01006000
.***AI.LVER02                                                           01006100
.ZI70Z                ANOP  ,                                           01006200
.*-------------------------------------------------------------------   01006300
.***AI.LVER01                                                           01006400
                      AIF  (&XPLISTVER LT 6).ZI71Z                      01006500
.*-------------------------------------------------------------------   01006600
.***AI.L25  XPARTLEN F                                                  01006700
                      AIF   ('&ZXPARTLEN' EQ '').ZI71E                  01006800
                      AIF   ('&ZXPARTLEN' EQ 'OUTPUT').ZI71E            01006900
&ZCGPR                SETC  '&XPARTLEN'                                 01007000
.*                                                                      01007100
                      AIF   ('&XPARTLEN'(1,1) NE '(').ZI71B             01007200
&ZCGPR   SETC  '0('.'&XPARTLEN'(2,K'&XPARTLEN-2).')'                    01007300
.ZI71B                ANOP  ,                                           01007400
.*                                                                      01007500
&ZC                   SETC  '&XPARTLEN'(1,1)                            01007600
                      AIF   (T'&ZC NE 'N').ZI71D                        01007700
&ZC                   SETC  '&XPARTLEN'                                 01007800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI71D               01007900
&ZCGPR                SETC  '=AL4(&XPARTLEN)'                           01008000
.*                                                                      01008100
.ZI71D                ANOP  ,                                           01008200
.*                                                                      01008300
&ZOPN                 SETA  &ZOPN+1                                     01008400
&ZOPL(&ZOPN)          SETC  ' '                                         01008500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01008600
&ZOPV(&ZOPN)          SETC  '196(4,1),&ZCGPR'                           01008700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLEN XPARTLEN'                    01008800
.*                                                                      01008900
.ZI71E                ANOP  ,                                           01009000
.*-------------------------------------------------------------------   01009100
.***AI.LVER02                                                           01009200
.ZI71Z                ANOP  ,                                           01009300
.*-------------------------------------------------------------------   01009400
.***AI.LVER01                                                           01009500
                      AIF  (&XPLISTVER LT 6).ZI72Z                      01009600
.*-------------------------------------------------------------------   01009700
.***AI.L25  XPARTLENOFF F                                               01009800
                      AIF   ('&ZXPARTLENOFF' EQ '').ZI72E               01009900
                      AIF   ('&ZXPARTLENOFF' EQ 'OUTPUT').ZI72E         01010000
&ZCGPR                SETC  '&XPARTLENOFF'                              01010100
.*                                                                      01010200
                      AIF   ('&XPARTLENOFF'(1,1) NE '(').ZI72B          01010300
&ZCGPR   SETC  '0('.'&XPARTLENOFF'(2,K'&XPARTLENOFF-2).')'              01010400
                      AGO   .ZI72D                                      01010500
.ZI72B                ANOP  ,                                           01010600
.*                                                                      01010700
&ZC                   SETC  '&XPARTLENOFF'(1,1)                         01010800
                      AIF   (T'&ZC NE 'N').ZI72D                        01010900
&ZC                   SETC  '&XPARTLENOFF'                              01011000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI72D               01011100
&ZCGPR                SETC  '=FL4''&XPARTLENOFF'''                      01011200
.*                                                                      01011300
.ZI72D                ANOP  ,                                           01011400
.*                                                                      01011500
&ZOPN                 SETA  &ZOPN+1                                     01011600
&ZOPL(&ZOPN)          SETC  ' '                                         01011700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01011800
&ZOPV(&ZOPN)          SETC  '200(4,1),&ZCGPR'                           01011900
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENOFF XPARTLENOFF'              01012000
.*                                                                      01012100
.ZI72E                ANOP  ,                                           01012200
.*-------------------------------------------------------------------   01012300
.***AI.LVER02                                                           01012400
.ZI72Z                ANOP  ,                                           01012500
.*-------------------------------------------------------------------   01012600
.***AI.LVER01                                                           01012700
                      AIF  (&XPLISTVER LT 6).ZI73Z                      01012800
.*-------------------------------------------------------------------   01012900
.***AI.L18  X#MSGPARTS F                                                01013000
         AIF   ('&X#MSGPARTS' NE 'ATLEASTONE').ZI73                     01013100
&ZX#MSGPARTS          SETC  ''             RESET INPUT/OUTPUT           01013200
.ZI73                 ANOP  ,                                           01013300
.*-------------------------------------------------------------------   01013400
.***AI.L25  X#MSGPARTS F                                                01013500
                      AIF   ('&ZX#MSGPARTS' EQ '').ZI73E                01013600
                      AIF   ('&ZX#MSGPARTS' EQ 'OUTPUT').ZI73E          01013700
&ZCGPR                SETC  '&X#MSGPARTS'                               01013800
.*                                                                      01013900
                      AIF   ('&X#MSGPARTS'(1,1) NE '(').ZI73B           01014000
&ZCGPR   SETC  '0('.'&X#MSGPARTS'(2,K'&X#MSGPARTS-2).')'                01014100
                      AGO   .ZI73D                                      01014200
.ZI73B                ANOP  ,                                           01014300
.*                                                                      01014400
&ZC                   SETC  '&X#MSGPARTS'(1,1)                          01014500
                      AIF   (T'&ZC NE 'N').ZI73D                        01014600
&ZC                   SETC  '&X#MSGPARTS'                               01014700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI73D               01014800
&ZCGPR                SETC  '=AL4(&X#MSGPARTS)'                         01014900
.*                                                                      01015000
.ZI73D                ANOP  ,                                           01015100
.*                                                                      01015200
&ZOPN                 SETA  &ZOPN+1                                     01015300
&ZOPL(&ZOPN)          SETC  ' '                                         01015400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01015500
&ZOPV(&ZOPN)          SETC  '204(4,1),&ZCGPR'                           01015600
&ZOPD(&ZOPN)          SETC  '++ &ZX#MSGPARTS X#MSGPARTS'                01015700
.*                                                                      01015800
.ZI73E                ANOP  ,                                           01015900
.*-------------------------------------------------------------------   01016000
.***AI.LVER02                                                           01016100
.ZI73Z                ANOP  ,                                           01016200
.*-------------------------------------------------------------------   01016300
.***AI.LVER01                                                           01016400
                      AIF  (&XPLISTVER LT 6).ZI74Z                      01016500
.*-------------------------------------------------------------------   01016600
.***AI.L25  XNEXTOFF F                                                  01016700
                      AIF   ('&ZXNEXTOFF' EQ '').ZI74E                  01016800
                      AIF   ('&ZXNEXTOFF' EQ 'OUTPUT').ZI74E            01016900
&ZCGPR                SETC  '&XNEXTOFF'                                 01017000
.*                                                                      01017100
                      AIF   ('&XNEXTOFF'(1,1) NE '(').ZI74B             01017200
&ZCGPR   SETC  '0('.'&XNEXTOFF'(2,K'&XNEXTOFF-2).')'                    01017300
                      AGO   .ZI74D                                      01017400
.ZI74B                ANOP  ,                                           01017500
.*                                                                      01017600
&ZC                   SETC  '&XNEXTOFF'(1,1)                            01017700
                      AIF   (T'&ZC NE 'N').ZI74D                        01017800
&ZC                   SETC  '&XNEXTOFF'                                 01017900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI74D               01018000
&ZCGPR                SETC  '=FL4''&XNEXTOFF'''                         01018100
.*                                                                      01018200
.ZI74D                ANOP  ,                                           01018300
.*                                                                      01018400
&ZOPN                 SETA  &ZOPN+1                                     01018500
&ZOPL(&ZOPN)          SETC  ' '                                         01018600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01018700
&ZOPV(&ZOPN)          SETC  '208(4,1),&ZCGPR'                           01018800
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTOFF XNEXTOFF'                    01018900
.*                                                                      01019000
.ZI74E                ANOP  ,                                           01019100
.*-------------------------------------------------------------------   01019200
.***AI.LVER02                                                           01019300
.ZI74Z                ANOP  ,                                           01019400
.*-------------------------------------------------------------------   01019500
.***AI.LVER01                                                           01019600
                      AIF  (&XPLISTVER LT 6).ZI75Z                      01019700
.*-------------------------------------------------------------------   01019800
.***AI.L25  XNEXTPTROFF F                                               01019900
                      AIF   ('&ZXNEXTPTROFF' EQ '').ZI75E               01020000
                      AIF   ('&ZXNEXTPTROFF' EQ 'OUTPUT').ZI75E         01020100
&ZCGPR                SETC  '&XNEXTPTROFF'                              01020200
.*                                                                      01020300
                      AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZI75B          01020400
&ZCGPR   SETC  '0('.'&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2).')'              01020500
                      AGO   .ZI75D                                      01020600
.ZI75B                ANOP  ,                                           01020700
.*                                                                      01020800
&ZC                   SETC  '&XNEXTPTROFF'(1,1)                         01020900
                      AIF   (T'&ZC NE 'N').ZI75D                        01021000
&ZC                   SETC  '&XNEXTPTROFF'                              01021100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI75D               01021200
&ZCGPR                SETC  '=FL4''&XNEXTPTROFF'''                      01021300
.*                                                                      01021400
.ZI75D                ANOP  ,                                           01021500
.*                                                                      01021600
&ZOPN                 SETA  &ZOPN+1                                     01021700
&ZOPL(&ZOPN)          SETC  ' '                                         01021800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01021900
&ZOPV(&ZOPN)          SETC  '212(4,1),&ZCGPR'                           01022000
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTPTROFF XNEXTPTROFF'              01022100
.*                                                                      01022200
.ZI75E                ANOP  ,                                           01022300
.*-------------------------------------------------------------------   01022400
.***AI.LVER02                                                           01022500
.ZI75Z                ANOP  ,                                           01022600
.*-------------------------------------------------------------------   01022700
.***AI.LVER01                                                           01022800
                      AIF  (&XPLISTVER LT 6).ZI76Z                      01022900
.*-------------------------------------------------------------------   01023000
.***AI.LVER02                                                           01023100
.ZI76Z                ANOP  ,                                           01023200
.*-------------------------------------------------------------------   01023300
.***AI.LVER01                                                           01023400
                      AIF  (&XPLISTVER LT 6).ZI77Z                      01023500
.*-------------------------------------------------------------------   01023600
.***AI.LVER02                                                           01023700
.ZI77Z                ANOP  ,                                           01023800
.*-------------------------------------------------------------------   01023900
.***AI.LVER01                                                           01024000
                      AIF  (&XPLISTVER LT 6).ZI78Z                      01024100
.*-------------------------------------------------------------------   01024200
.***AI.LVER02                                                           01024300
.ZI78Z                ANOP  ,                                           01024400
.*-------------------------------------------------------------------   01024500
.***AI.LVER01                                                           01024600
                      AIF  (&XPLISTVER LT 5).ZI80Z                      01024700
.*-------------------------------------------------------------------   01024800
.***AI.L18  XFILTERGROUP CL8                                            01024900
         AIF   ('&XFILTERGROUP' NE 'SENDERSGROUP').ZI80                 01025000
&ZXFILTERGROUP        SETC  ''             RESET INPUT/OUTPUT           01025100
.ZI80                 ANOP  ,                                           01025200
.*-------------------------------------------------------------------   01025300
.***AI.L25  XFILTERGROUP CL8                                            01025400
                      AIF   ('&ZXFILTERGROUP' EQ '').ZI80E              01025500
                      AIF   ('&ZXFILTERGROUP' EQ 'OUTPUT').ZI80E        01025600
&ZCGPR                SETC  '&XFILTERGROUP'                             01025700
.*                                                                      01025800
                      AIF   ('&XFILTERGROUP'(1,1) NE '(').ZI80B         01025900
&ZCGPR   SETC  '0('.'&XFILTERGROUP'(2,K'&XFILTERGROUP-2).')'            01026000
.ZI80B                ANOP  ,                                           01026100
.*                                                                      01026200
&ZOPN                 SETA  &ZOPN+1                                     01026300
&ZOPL(&ZOPN)          SETC  ' '                                         01026400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01026500
&ZOPV(&ZOPN)          SETC  '72(8,1),&ZCGPR'                            01026600
&ZOPD(&ZOPN)          SETC  '++ &ZXFILTERGROUP XFILTERGROUP'            01026700
.*                                                                      01026800
.ZI80E                ANOP  ,                                           01026900
.*-------------------------------------------------------------------   01027000
.***AI.LVER02                                                           01027100
.ZI80Z                ANOP  ,                                           01027200
.*-------------------------------------------------------------------   01027300
&ZOPN1                SETA &ZOPN                                        01027400
.*******************************************************************    01027500
.***  PROCESS IXCMSGOX OUTPUT PARAMETERS                                01027600
.*******************************************************************    01027700
                      ACTR  10000                                       01027800
.*******************************************************************    01027900
.***AO.X02  RETURN CODE PROCESSING                                      01028000
.*******************************************************************    01028100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01028200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01028300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01028400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01028500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01028600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01028700
&ZOPN                 SETA  &ZOPN+1                                     01028800
&ZOPL(&ZOPN)          SETC  ' '                                         01028900
&ZOPO(&ZOPN)          SETC  'ST'                                        01029000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01029100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01029200
                      AGO   .ZMRETX                                     01029300
.*                                                                      01029400
.ZMRET2               ANOP  ,                                           01029500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01029600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01029700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01029800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01029900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01030000
&ZOPN                 SETA  &ZOPN+1                                     01030100
&ZOPL(&ZOPN)          SETC  ' '                                         01030200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01030300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01030400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01030500
.ZMRETX               ANOP  ,                                           01030600
.*******************************************************************    01030700
.***AO.X03  REASON CODE PROCESSING                                      01030800
.*******************************************************************    01030900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    01031000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            01031100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              01031200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             01031300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              01031400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             01031500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                01031600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 01031700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                01031800
&ZOPN                 SETA  &ZOPN+1                                     01031900
&ZOPL(&ZOPN)          SETC  ' '                                         01032000
&ZOPO(&ZOPN)          SETC  'ST'                                        01032100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               01032200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01032300
                      AGO   .ZMRSNX                                     01032400
.*                                                                      01032500
.ZMRSN2               ANOP  ,                                           01032600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01032700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 01032800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                01032900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 01033000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                01033100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   01033200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    01033300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   01033400
&ZOPN                 SETA  &ZOPN+1                                     01033500
&ZOPL(&ZOPN)          SETC  ' '                                         01033600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01033700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  01033800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01033900
.ZMRSNX               ANOP  ,                                           01034000
.*******************************************************************    01034100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01034200
.*******************************************************************    01034300
.ZMFLX                ANOP  ,              MF=L PROCESSING              01034400
.*******************************************************************    01034500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01034600
.*******************************************************************    01034700
                      ACTR  10000                                       01034800
.*                                                                      01034900
                      LCLA  &ZLC           COLUMN POSITION              01035000
                      LCLA  &ZOPX          LIST TABLE INDEX             01035100
                      LCLC  &ZLL           LABEL                        01035200
                      LCLC  &ZLOP          OPERATION                    01035300
                      LCLC  &ZLV           VALUE                        01035400
                      LCLC  &ZLD           DESCRIPTION                  01035500
.*                                                                      01035600
&ZOPX                 SETA  1                                           01035700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01035800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01035900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01036000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01036100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01036200
                      AIF   (K'&ZLD LE 0).ZL5                           01036300
&ZLC                  SETA  35             COMMENT COLUMN               01036400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01036500
&ZLC                  SETA  33             COMMMENT COLUMN              01036600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01036700
&ZLV                  SETC  '&ZLV'.' '                                  01036800
                      AGO   .ZL3                                        01036900
.*                                                                      01037000
.ZL4                  ANOP  ,                                           01037100
&ZLV                  SETC  '&ZLV'.' '                                  01037200
.ZL5                  ANOP  ,                                           01037300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01037400
.*                                                                      01037500
&ZLL     &ZLOP &ZLV                                                     01037600
.*                                                                      01037700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01037800
                      AGO   .ZL2           CONTINUE LOOPING             01037900
.*                                                                      01038000
.ZLX                  ANOP  ,                                           01038100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01038200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01038300
         AIF   ('&SYSAM64' NE 'YES').NOTAM64                            01038400
         LLGTR 14,14                   CLEAR HIGH HALF                  01038500
.NOTAM64 L     14,16(0,0)              GET CVT ADDRESS                  01038600
         L     14,772(14,0)            GET SFT ADDRESS                  01038700
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       01038800
         LA    15,51                   GET EX FOR SERVICE ROUTINE       01038900
         OR    14,15                   GET PC NUMBER                    01039000
         PC    0(14)                                                    01039100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01039200
.ZLINKX               ANOP  ,                                           01039300
.*******************************************************************    01039400
.***AP.X01  FORMAT GENERATED CODE                                       01039500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01039600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01039700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01039800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01039900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01040000
                      AIF   (K'&ZLD LE 0).ZL51                          01040100
&ZLC                  SETA  35             COMMENT COLUMN               01040200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01040300
&ZLC                  SETA  33             COMMENT COLUMN               01040400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01040500
&ZLV                  SETC  '&ZLV'.' '                                  01040600
                      AGO   .ZL31                                       01040700
.*                                                                      01040800
.ZL41                 ANOP  ,                                           01040900
&ZLV                  SETC  '&ZLV'.' '                                  01041000
.ZL51                 ANOP  ,                                           01041100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01041200
.*                                                                      01041300
&ZLL     &ZLOP &ZLV                                                     01041400
.*                                                                      01041500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01041600
                      AGO   .ZL21          CONTINUE LOOPING             01041700
.*                                                                      01041800
.ZLX1                 ANOP  ,                                           01041900
.*******************************************************************    01042000
.***AP.X02  END OF IXCMSGOX MACRO                                       01042100
&ZIXCMSGOX            SETC  'YES'          SET IXCMSGOX USED            01042200
         POP   PRINT                                                    01042300
*                                            IXCMSGOX-6                 01042400
         SPACE 1                                                        01042500
.ZLX2                 ANOP  ,                                           01042600
         MEND                                                           01042700
**********************************************************************/ 01042800
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  01042900
*%IXCMSGOX: MACRO KEYS(MEMTOKEN,SENDTO,TARGET,DELIVERMSG,STREAMID,      01043000
*                 GETRESPONSE,TIMEOUT,MEMBERS,TARGETS,#TARGETS,         01043100
*                 NEXTTARGETOFF,FILTERGROUP,RESPONSEID,MULTIPART,       01043200
*                 MSGCNTL,MSGBUF,MSGLEN,#MSGPARTS,ELEMENT,              01043300
*                 ELEMADDRMODE,ELEMFORM,NEXTOFF,NEXTPTROFF,ENDOFQUEUE,  01043400
*                 PARTOFF,PARTPTROFF,PARTALET,PARTALETOFF,PARTALETTBL,  01043500
*                 PARTLEN,PARTLENOFF,PARTLENTBL,MSGSTGKEY,MSGACCESS,    01043600
*                 SENDTIME,NOTIFY,USERDATA,NOTIFYIF,NOTIFYBY,           01043700
*                 NOTIFYEXIT,RETMSGOTOKEN,ATTRIBUTES,RETCODE,RSNCODE,   01043800
*                 PLISTVER,MF);                                         01043900
*  ANS('?'!!MACLABEL!!' '!!'IXCMSGOZ '!!MACLIST!!                       01044000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              01044100
*%END IXCMSGOX;                                                         01044200
