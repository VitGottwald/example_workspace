*                                                                       00001000
* %DCL IHAENF84_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IHAENF84_INCLUDED;                                        00003000
* %IF IHAENF84_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 22120. CBGEN compile date 21138         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IHAENF84 &DSECT=YES,&LIST=YES,&TITLE=YES,&ENF84=YES            00009000
                      GBLC  &IHAENF84_INCLUDED                          00010000
                      GBLC  &ZCBPRINT                                   00011000
&IHAENF84_INCLUDED    SETC  'YES'                                       00012000
                      AIF   ('&LIST' EQ 'NONE').P0                      00013000
                      AIF   ('&TITLE' EQ 'NO').P5                       00014000
 TITLE                'IHAENF84  - Boost Event ENF mapping (event code *00015000
               84)        '                                             00016000
.P5                   ANOP                                              00017000
**/ ;                                                                   00018000
*/* START OF SPECIFICATIONS ******************************************* 00019000
*                                                                       00020000
*  **PROPRIETARY_STATEMENT********************************************  00021000
***01* PROPRIETARY STATEMENT=                                        *  00022000
*                                                                    *  00023000
*                                                                    *  00024000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00025000
*   5650-ZOS COPYRIGHT IBM CORP. 2019                                *  00026000
*                                                                    *  00027000
*   STATUS= HBB77B0                                                  *  00028000
*                                                                    *  00029000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00030000
*                                                                       00031000
*01* DESCRIPTIVE NAME:  Boost Event ENF mapping (event code 84)         00032000
*02*  ACRONYM:  ENF84                                                   00033000
*                                                                       00034000
*01* MACRO NAME:  IHAENF84                                              00035000
*                                                                       00036000
*01* EXTERNAL CLASSIFICATION: PI                                        00037000
*01* END OF EXTERNAL CLASSIFICATION:                                    00038000
*                                                                       00039000
*01* DSECT NAME:                                                        00040000
*     ENF84                                                             00041000
*                                                                       00042000
*01* COMPONENT:  Supervisor (SC1C5)                                     00043000
*                                                                       00044000
*01* EYE-CATCHER:  None                                                 00045000
*02*   OFFSET: n/a                                                      00046000
*02*   LENGTH: n/a                                                      00047000
*                                                                       00048000
*01* STORAGE ATTRIBUTES:                                                00049000
*02*  SUBPOOL:  247 for ENF signal                                      00050000
*02*  KEY:  0                                                           00051000
*02*  RESIDENCY:  Above 16M                                             00052000
*                                                                       00053000
*01* SIZE:                                                              00054000
*                ENF84 -- X'0008' bytes                                 00055000
*                                                                       00056000
*01* CREATED BY:                                                        00057000
*     Boost processing, provided to ENF listeners                       00058000
*      for event 084.                                                   00059000
*                                                                       00060000
*01* POINTED TO BY:                                                     00061000
*     R1 on entry to ENF listening routine                              00062000
*                                                                       00063000
*01* SERIALIZATION:                                                     00064000
*     None required                                                     00065000
*                                                                       00066000
*01* FUNCTION:                                                          00067000
*02* Maps the data provided for ENF event 084.                          00068000
*                                                                       00069000
*                                                                       00070000
*                                                                       00071000
*01* METHOD OF ACCESS:                                                  00072000
*02*  ASM:                                                              00073000
*      IHAENF84                                                         00074000
*           DSECT=YES!NO  -- Request DSECT definition                   00075000
*           ENF84=YES!NO!COND -- Request mapping                        00076000
*                            USING on ENF84                             00077000
*     Default: DSECT=YES,ENF84=YES                                      00078000
*     Notes: name=YES  => expand                                        00079000
*            name=NO   => do not expand                                 00080000
*            name=COND => expand only if DSECT=YES                      00081000
*                                                                       00082000
*02*  PL/AS:                                                            00083000
*      %INCLUDE SYSLIB(IHAENF84)                                        00084000
*                                                                       00085000
*01* DELETED BY:  ENF processing                                        00086000
*                                                                       00087000
*01* FREQUENCY:  Created for Boost event                                00088000
*                                                                       00089000
*01* DEPENDENCIES:  None                                                00090000
*                                                                       00091000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00092000
*                                                                       00093000
*01* CHANGE ACTIVITY:                                                   00094000
*   $L0=FBCBG     HBB77B0 190131 PD00XB: New                            00095000
*   $01=FB        HBB77B0 190131 PD00XB: New                            00096000
*   $02=FB2       HBB77B0 200131 PD00XB: FB2                            00097000
*   $03=OA60659   HBB77C0 210105 PD00XB: FB3                            00098000
*                                                                       00099000
* END OF SPECIFICATIONS *********************************************/  00100000
*% /*                                                                   00101000
.P0                   ANOP                                              00102000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00103000
                      AIF   ('&LIST' EQ 'YES').P2                       00104000
.P1                   ANOP                                              00105000
                      PUSH  PRINT                                       00106000
                      PRINT OFF                                         00107000
.P2                   ANOP                                              00108000
                      AIF   ('&ENF84' EQ 'NO').L0002                    00109000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00110000
                      AIF   ('&ENF84' NE 'YES').L0002                   00111000
ENF84                 DS    0D     Boost event ENF signal parameter    *00112000
                                   list                                 00113000
                      AGO   .L0004                                      00114000
.L0003                ANOP                                              00115000
ENF84                 DSECT        Boost event ENF signal parameter    *00116000
                                   list                                 00117000
.L0004                ANOP                                              00118000
ENF84_Version         DS    X      Initial version=0                    00119000
ENF84_Flags           DS    B      Flags                                00120000
*  Bit definitions:                                                     00121000
ENF84_zIIPBoostActive EQU   X'80'  For the "boosts end" events, the    *00122000
                                   boost was active. For the           *00123000
                                   "boost start" events, the boost was *00124000
                                   activated. For the                  *00125000
                                   "RP boost extend" event, the boost  *00126000
                                   is active.                           00127000
ENF84_SpeedBoostActive EQU  X'40'  For the "boosts end" events, the    *00128000
                                   boost was active. For the           *00129000
                                   "boost start" events, the boost was *00130000
                                   activated. For the                  *00131000
                                   "RP boost extend" event, the boost  *00132000
                                   is active.                           00133000
ENF84_BoostEnd_SDBoostsRequested EQU X'10' For the "boosts end" events *00134000
                                   other than "shutdown boost end",    *00135000
                                   shutdown boost has been requested.   00136000
ENF84_RPB_Disabled    EQU   X'08'  When 1, RP boosts are disabled.     *00137000
                                   When 0, RP boosts are enabled        00138000
ENF84_BoostClass      EQU   X'07'  See ENF84_BoostClass_xxx. Not valid *00139000
                                   for the RPBoosts_EnabDisab event.    00140000
ENF84_RPBoosts_Requestor_ID DS X   For the "RPBoosts Start" and        *00141000
                                   "RPBoosts Extend" events only. See  *00142000
                                   equates ENF84_RPBReq_xxx.            00143000
                      DS    CL1    Reserved                             00144000
ENF84_Event           DS    F      The boost event. See equates        *00145000
                                   beginning ENF84_Event                00146000
ENF84_Event_IPLBoosts_Start EQU 1  Application code might not be able  *00147000
                                   to be started early enough to       *00148000
                                   listen for, and receive, this       *00149000
                                   event. Such code should examine the *00150000
                                   boost information in the ECVT        00151000
ENF84_Event_IPLBoosts_End EQU 2                                         00152000
ENF84_Event_ShutDownBoosts_Start EQU 3                                  00153000
ENF84_Event_ShutDownBoosts_End EQU 4                                    00154000
ENF84_Event_RPBoosts_Start EQU 5                                        00155000
ENF84_Event_RPBoosts_Extend EQU 6                                       00156000
ENF84_Event_RPBoosts_End EQU 7                                          00157000
ENF84_Event_RPBoosts_EnabDisab EQU 8 Besides the event, the only valid *00158000
                                   field is the bit ENF84_RPB_Disabled  00159000
ENF84_Event_RPBoosts_Info EQU 9    This event is for SMF's usage. The  *00160000
                                   only valid field is ENF84_Event.     00161000
*                                                                       00162000
*    Boost Class equates. "AND" the byte with this mask and compare     00163000
*    the result to the equate if you want to check the class            00164000
*                                                                       00165000
*                                                                       00166000
ENF84_BoostClass_Mask EQU   X'07'                                       00167000
ENF84_BoostClass_IPL  EQU   B'00000001'                                 00168000
ENF84_BoostClass_ShutDown EQU B'00000010'                               00169000
ENF84_BoostClass_RP   EQU   B'00000011'                                 00170000
*                                                                       00171000
* ********************************************************************  00172000
* *                                                                  *  00173000
* * Recovery Process Boost requestor constants                          00174000
* *                                                                  *  00175000
* ********************************************************************  00176000
*                                                                       00177000
*                                                                       00178000
ENF84_RPBReq_Not_Identified EQU 0                                       00179000
ENF84_RPBReq_Sysplex_Partitioning EQU 1                                 00180000
ENF84_RPBReq_CF_Structure_Recov EQU 2                                   00181000
ENF84_RPBReq_CF_Datasharing_Member_Recov EQU 3                          00182000
ENF84_RPBReq_Hyperswap EQU  4                                           00183000
ENF84_RPBReq_SVCDump  EQU   5                                           00184000
ENF84_RPBReq_Middleware_Region_Startup EQU 6                            00185000
ENF84_RPBReq_Hyperswap_Config_Load EQU 7                                00186000
ENF84_Len             EQU   *-ENF84                                     00187000
.L0002                ANOP                                              00188000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00189000
                      AIF   ('&LIST' EQ 'YES').P4                       00190000
.P3                   ANOP                                              00191000
                      POP   PRINT                                       00192000
.P4                   ANOP                                              00193000
.P_EXIT               ANOP                                              00194000
                      MEND                                              00195000
**/ ;                                                                   00196000
* %IHAENF84_INCLUDED = 'YES';                                           00197000
* %DCL ZCBPRINT CHAR EXT;                                               00198000
* %DEACTIVATE ZCBPRINT;                                                 00199000
* %DCL IHAENF84_LIST CHAR EXT;                                          00200000
* %DEACTIVATE IHAENF84_LIST;                                            00201000
* %IF IHAENF84_LIST = 'NO' !                                            00202000
*    ZCBPRINT = 'NO' %THEN                                              00203000
* %DO;                                                                  00204000
*   @LIST PUSH NOECHO;                                                  00205000
*   @LIST NOASSEMBLE NOECHO;                                            00206000
*   @LIST OFF C NOECHO;                                                 00207000
* %END;                                                                 00208000
*/* Start of PL/X Source                                             */ 00209000
*   DECLARE                                                             00210000
*     1 ENF84 TYPE                    /* Boost event ENF signal         00211000
*                                   parameter list               @01A*/ 00212000
*      ,3 ENF84_Version Fixed(8)      /* Initial version=0       @01A*/ 00213000
*      ,3 ENF84_Flags Bit(8)          /* Flags                   @01A*/ 00214000
*        ,5 ENF84_zIIPBoostActive Bit(1) /* For the "boosts end"        00215000
*                         events, the boost was active.                 00216000
*                         For the "boost start" events,                 00217000
*                         the boost was activated. For the "RP boost    00218000
*                         extend" event, the boost is active.    @01A*/ 00219000
*        ,5 ENF84_SpeedBoostActive Bit(1) /* For the "boosts end"       00220000
*                         events, the boost was active.                 00221000
*                         For the "boost start" events,                 00222000
*                         the boost was activated. For the "RP boost    00223000
*                         extend" event, the boost is active.    @01A*/ 00224000
*        ,5 * Bit(1)                                          /* @03C*/ 00225000
*        ,5 ENF84_BoostEnd_SDBoostsRequested Bit(1) /* For the "boosts  00226000
*                         end" events other than "shutdown boost end",  00227000
*                         shutdown boost has been requested.     @03A*/ 00228000
*        ,5 ENF84_RPB_Disabled Bit(1) /* When 1, RP boosts are          00229000
*                         disabled. When 0, RP boosts are enabled       00230000
*                                                                @03A*/ 00231000
*        ,5 ENF84_BoostClass Bit(3)   /* See ENF84_BoostClass_xxx.      00232000
*                         Not valid for the RPBoosts_EnabDisab          00233000
*                         event.                                 @01A*/ 00234000
*      ,3 ENF84_RPBoosts_Requestor_ID Fixed(8)  /* For the "RPBoosts    00235000
*                         Start" and "RPBoosts Extend" events only.     00236000
*                         See equates ENF84_RPBReq_xxx.          @02A*/ 00237000
*      ,3 * CHAR(1)                   /* Reserved                @01A*/ 00238000
*      ,3 ENF84_Event Fixed(31)       /* The boost event. See equates   00239000
*                         beginning ENF84_Event                  @01A*/ 00240000
*      ,3 * CHAR(0) Bdy(DWORD);       /* End of ENF area         @01A*/ 00241000
* Dcl ENF84_Event_IPLBoosts_Start Constant(1);  /* Application code     00242000
*                         might not be able to be started early enough  00243000
*                         to listen for, and receive, this event.       00244000
*                         Such code should examine the boost            00245000
*                         information in the ECVT                @01A*/ 00246000
* Dcl ENF84_Event_IPLBoosts_End Constant(2);                  /* @01A*/ 00247000
* Dcl ENF84_Event_ShutDownBoosts_Start Constant(3);           /* @01A*/ 00248000
* Dcl ENF84_Event_ShutDownBoosts_End Constant(4);             /* @01A*/ 00249000
* Dcl ENF84_Event_RPBoosts_Start Constant(5);                 /* @02A*/ 00250000
* Dcl ENF84_Event_RPBoosts_Extend Constant(6);                /* @02A*/ 00251000
* Dcl ENF84_Event_RPBoosts_End Constant(7);                   /* @02A*/ 00252000
* Dcl ENF84_Event_RPBoosts_EnabDisab Constant(8);  /* Besides the       00253000
*                         event, the only valid field is the bit        00254000
*                         ENF84_RPB_Disabled                     @03A*/ 00255000
* Dcl ENF84_Event_RPBoosts_Info Constant(9);  /* This event is          00256000
*                         for SMF's usage. The only valid field is      00257000
*                         ENF84_Event.                           @03A*/ 00258000
* /* Boost Class equates. "AND" the byte with this mask and compare     00259000
*    the result to the equate if you want to check the class     @01A*/ 00260000
* Dcl ENF84_BoostClass_Mask Bit(8) Constant('07'x);           /* @01A*/ 00261000
* Dcl ENF84_BoostClass_IPL Bit(3) Constant('001'b);           /* @01A*/ 00262000
* Dcl ENF84_BoostClass_ShutDown Bit(3) Constant('010'b);      /* @01A*/ 00263000
* Dcl ENF84_BoostClass_RP Bit(3) Constant('011'b);            /* @02A*/ 00264000
*/********************************************************************/ 00265000
*/*                                                                  */ 00266000
*/* Recovery Process Boost requestor constants                   @02A*/ 00267000
*/*                                                                  */ 00268000
*/********************************************************************/ 00269000
* Dcl ENF84_RPBReq_Not_Identified                constant(0); /* @02A*/ 00270000
* Dcl ENF84_RPBReq_Sysplex_Partitioning          constant(1); /* @02A*/ 00271000
* Dcl ENF84_RPBReq_CF_Structure_Recov            constant(2); /* @02A*/ 00272000
* Dcl ENF84_RPBReq_CF_Datasharing_Member_Recov   constant(3); /* @02A*/ 00273000
* Dcl ENF84_RPBReq_Hyperswap                     constant(4); /* @02A*/ 00274000
* Dcl ENF84_RPBReq_SVCDump                       constant(5); /* @03A*/ 00275000
* Dcl ENF84_RPBReq_Middleware_Region_Startup     constant(6); /* @03A*/ 00276000
* Dcl ENF84_RPBReq_Hyperswap_Config_Load         constant(7); /* @03A*/ 00277000
*                                                                       00278000
* @LOGIC;                                                               00279000
* #PRAGMA TOOL=CBGEN.                                                   00280000
* #USEORG.                                                              00281000
* #AlignOp.                                                             00282000
* #NotUpper.                                                            00283000
* #EPRAGMA.                                                             00284000
* @ENDLOGIC;                                                            00285000
*/* End of PL/X Source                                               */ 00286000
* %IF IHAENF84_LIST = 'NO' !                                            00287000
*    ZCBPRINT = 'NO' %THEN                                              00288000
* %DO;                                                                  00289000
*   @LIST POP NOECHO;                                                   00290000
* %END;                                                                 00291000
* %END;                                                                 00292000
