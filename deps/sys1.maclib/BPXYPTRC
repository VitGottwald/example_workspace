*                                                                       00001000
* %DCL BPXYPTRC_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE BPXYPTRC_INCLUDED;                                        00003000
* %IF BPXYPTRC_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 18247. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         BPXYPTRC &DSECT=YES,&LIST=YES,&TITLE=YES,&PtLDInfo=YES,       *00009000
               &PtLD64Info=YES,&PtLDInfoExt=YES,&PtLD64InfoExt=YES,    *00010000
               &PtPTINFO=YES,&PtPhINFO=YES,&PtPxINFO=YES,              *00011000
               &PtExInfo=YES,&PtPICParms=YES,&PtBRInfo=YES,            *00012000
               &PtBR_GPR=YES,&PtBR_GPR_EXT=YES,&PtBR_FPR=YES,          *00013000
               &PtBR_GPRH=YES,&PtBR_Block=YES,&PtBR_Block64=YES,       *00014000
               &PtBR_D=YES,&PtBR_D64=YES,&PtBR_I=YES,&PtBR_I64=YES,    *00015001
               &PtBR_U=YES                                              00016000
                      GBLC  &BPXYPTRC_INCLUDED                          00017000
                      GBLC  &ZCBPRINT                                   00018000
&BPXYPTRC_INCLUDED    SETC  'YES'                                       00019000
                      AIF   ('&LIST' EQ 'NONE').P0                      00020000
                      AIF   ('&TITLE' EQ 'NO').P5                       00021000
 TITLE                'BPXYPTRC  - Ptrace System Call Parameters       *00022000
                           '                                            00023000
.P5                   ANOP                                              00024000
**/ BPXYPTRC_1:;                                                        00025000
*/****START OF SPECIFICATIONS****************************************** 00026000
*                                                                       00027000
*    $MAC (BPXYPTRC) COMP(SCPX1) PROD(BPX):                             00028000
*                                                                       00029000
*01* MACRO NAME: BPXYPTRC                                               00030000
*                                                                       00031000
*01* DSECT NAME: PTRC                                                   00032000
*                                                                       00033000
*01* DESCRIPTIVE NAME: Ptrace System Call Parameters                    00034000
*                                                                       00035000
*02*   ACRONYM: PTRC                                                    00036000
**/                                                                     00037000
*/*01* PROPRIETARY STATEMENT=                                        */ 00038000
*/***PROPRIETARY_STATEMENT********************************************/ 00039000
*/*                                                                  */ 00040000
*/*                                                                  */ 00041000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00042000
*/* 5650-ZOS COPYRIGHT IBM CORP. 1993, 2017                          */ 00043000
*/*                                                                  */ 00044000
*/* STATUS= HBB77B0                                                  */ 00045000
*/*                                                                  */ 00046000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00047000
*/*                                                                     00048000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00049000
*01* END OF EXTERNAL CLASSIFICATION:                                    00050000
*                                                                       00051000
*01* FUNCTION:                                                          00052000
*                                                                       00053000
*      This macro contains definitions and structures for use by the    00054000
*      callers of the ptrace system call, BPX1PTR.                      00055000
*                                                                       00056000
*01* METHOD OF ACCESS:                                                  00057000
*                                                                       00058000
*02*   PL/X:                                                            00059000
*                                                                       00060000
*        %INCLUDE SYSLIB(BPXYPTRC)                                      00061000
*                                                                       00062000
*        Several structures are defined, as well as assorted constants. 00063000
*        The structures are PtLDInfo (loader info), PtptInfo (thread    00064000
*        info), PtExInfo (explain info), and PtPICParms (program        00065000
*        recovery parameters).                                          00066000
*                                                                       00067000
*        By default, PtLDInfo is defined as BASED.  Normal use will     00068000
*        place this upon another variable -                             00069000
*            (for example,  "RFY PtLDInfo BASED(ADDR(LoaderInfo))").    00070000
*        If a local variable is desired, use %PTLDBASE='LOCAL'.         00071000
*                                                                       00072000
*        By default, PtptInfo is defined as BASED.  Normal use will     00073000
*        place this upon another variable -                             00074000
*            (for example,  "RFY PtptInfo BASED(ADDR(ThreadInfo))").    00075000
*        If a local variable is desired, use %PTPTBASE='LOCAL'.         00076000
*                                                                       00077000
*        By default, PtExInfo is defined as BASED.  Normal use will     00078000
*        place this upon another variable -                             00079000
*            (for example,  "RFY PtExInfo BASED(ADDR(ExplainInfo))").   00080000
*        If a local variable is desired, use %PTEXBASE='LOCAL'.         00081000
*                                                                       00082000
*        By default, PtPICParms is defined as BASED.  Normal use will   00083000
*        place this upon another variable -                             00084000
*            (for example,  "RFY PtPICParms BASED(ADDR(PgmIntParms))"). 00085000
*        If a local variable is desired, use %PTPIBASE='LOCAL'.         00086000
*                                                                       00087000
*02*   ASM:                                                             00088000
*        With DSECT=NO, storage is allocated in line                    00089000
*        and addressability is provided thru that DSECT or CSECT.       00090000
*        With DSECT=YES, a DSECT is produced and                        00091000
*        "USING PTLDINFO,reg1", "USING PTPTINFO,reg2",                  00092000
*        "USING PTEXINFO,,reg3" and "USING PTPICPARMS,reg4" are         00093000
*        required for addessability.                                    00094000
*        Here "reg1" contains the address of PTLD#LENGTH bytes          00095000
*        (PTLD#FIXLEN + VARLEN= operand), "reg2" contains the           00096000
*        address of PTPT#LENGTH bytes, "reg3" contains the              00097000
*        address of PTEX#LENGTH bytes, and "reg4" contains              00098000
*        the address of PTPIC#LENGTH bytes of storage.                  00099000
*        Maximum pathname is 1023 (+null), so default VARLEN=1024.      00100000
*        The default is DSECT=YES.                                      00101000
*                                                                       00102000
**********************************************************************  00102103
**********************************************************************  00102203
*                                                                       00102303
*        This macro is not CBGENed automatically (does not use the      00102403
*        the CBG build process). When it is manually CBGENed you        00102503
*        must edit the assembler macro variables that control which     00102603
*        sections are included. Change the default include logic from   00102703
*        (&name=COND) to always be included (&name=YES). This will      00102803
*        ensure compatiblily with earlier releases that may depend on   00102903
*        all sections and constants being defined.                @P9A  00103003
*                                                                       00103103
**********************************************************************  00103203
**********************************************************************  00103303
*                                                                       00103403
*                                                                       00103503
*01* SIZE: PTLD#LENGTH = PTLD#FIXED + VARLEN                            00103603
*            PtBR_GPR_EXT  -- X'00A8' bytes                             00104000
*            PtLD64Info    -- X'0020' bytes                             00105000
*            PtLD64InfoExt -- X'00F8' bytes                             00106000
*            PtLDInfo      -- X'0020' bytes                             00107000
*            PtLDInfoExt   -- X'007C' bytes                             00108000
*            PtPTINFO      -- X'0038' bytes                             00109000
*            PtPhINFO      -- X'0038' bytes                             00110000
*            PtPxINFO      -- X'0040' bytes                             00111000
*            PtExInfo      -- X'0028' bytes                             00112000
*            PtPICParms    -- X'0040' bytes                             00113000
*            PtBRInfo      -- X'0020' bytes                             00114000
*            PtBR_GPR      -- X'0098' bytes                             00115000
*            PtBR_FPR      -- X'0094' bytes                             00116000
*            PtBR_GPRH     -- X'0058' bytes                             00117000
*            PtBR_Block    -- X'0010' bytes                             00118000
*            PtBR_Block64  -- X'0010' bytes                             00119000
*            PtBR_D        -- X'0008' bytes                             00120000
*            PtBR_D64      -- X'000C' bytes                             00121000
*            PtBR_I        -- X'0008' bytes                             00122000
*            PtBR_I64      -- X'000C' bytes                             00123000
*            PtBR_U        -- X'0010' bytes                             00124000
*            PTBR_BLOCK64 -- X'0010' bytes                              00125000
*            PTBR_D64     -- X'000C' bytes                              00126000
*            PTBR_I64     -- X'000C' bytes                              00127000
*            PTLDINFO    -- X'0020' bytes                               00128000
*            PTLDINFOEXT -- X'007C' bytes                               00129000
*            PTPTINFO     -- X'0038' bytes                              00130000
*            PTPHINFO     -- X'0034' bytes                              00131000
*            PTPXINFO     -- X'0040' bytes                              00132000
*            PTEXINFO     -- X'0028' bytes                              00133000
*            PTPICPARMS  -- X'0040' bytes                               00134000
*            PTBRINFO    -- X'0020' bytes                               00135000
*            PTBR_GPR    -- X'0098' bytes                               00136000
*            PTBR_FPR    -- X'0094' bytes                               00137000
*            PTBR_GPRH   -- X'0058' bytes                               00138000
*            PTBR_BLOCK  -- X'0010' bytes                               00139000
*            PTBR_D      -- X'0008' bytes                               00140000
*            PTBR_I      -- X'0008' bytes                               00141000
*            PTBR_U      -- X'0010' bytes                               00142000
*          PTPT#LENGTH                                                  00143000
*          PTEX#LENGTH                                                  00144000
*          PTPIC#LENGTH                                                 00145000
*                                                                       00146000
*01* POINTED TO BY: Local variable, RFY or USING.                       00147000
*                                                                       00148000
*01* CREATED BY: Caller of syscall                                      00149000
*                                                                       00150000
*01* DELETED BY: Caller of syscall                                      00151000
*                                                                       00152000
*01* STORAGE ATTRIBUTES:                                                00153000
*                                                                       00154000
*02*   SUBPOOL/DATASPACE:  N/A                                          00155000
*                                                                       00156000
*02*   KEY:                N/A                                          00157000
*                                                                       00158000
*02*   RESIDENCY:          N/A                                          00159000
*                                                                       00160000
*01* FREQUENCY: 1 per call to PTRACE                                    00161000
*                                                                       00162000
*01* SERIALIZATION: N/A                                                 00163000
*                                                                       00164000
*01* DEPENDENCIES: None                                                 00165000
*                                                                       00166000
*01* NOTES:                                                             00167000
*                                                                       00168000
*01* COMPONENT: OpenMVS (SCPX1)                                         00169000
*                                                                       00170000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00171000
*                                                                       00172000
*01* EYE-CATCHER: None                                                  00173000
*                                                                       00174000
*01* CHANGE-ACTIVITY:                                                   00175000
*                                                                       00176000
* $L0=POSIXXNP HOM1110 931201 PDPE: OpenMVS Initial Release             00177000
* $D1=DL70019  HOM1110 921201 PDJM: Assembler macro fixup               00178000
* $P1=PL70597  HOM1110 930104 PDJM: Use "OpenMVS"                       00179000
* $D2=DOAA003  HOM1120 930406 PDJG: Ptrace Thread Support               00180000
* $D3=DOAA003  HOM1120 930909 PDPE: DCR A003.02 Generic Debugger        00181000
*                                   Interface                           00182000
* $D4=DPFA065  HOM1130 940218 PDPE: DCR A065.08 BSD Signals             00183000
* $P2=POA0419  HOM1120 940408 PDPE: Identify MVS load modules           00184000
* $D5=DPFA094  HOM1130 940922 PDPE: DCR A094.02 Add ILC to PIC parms    00185000
* $D6=DPFA100  HOM1130 941109 PDPE: DCR A100.01 Captured storage        00186000
* $P3=PSY0557  JBB6604 970331 PDPY: Load module greater than 16 extents 00187000
* $D7=DVT0238  JBB6606 971006 PDPY: A238.00 IEEE support                00188000
* $01=OW31970  HBB6603 980216 PDI6: Ptrace Support for Sticky Pgms      00189000
*                                   (Merge up PTM PWA0085)              00190000
* $D8=DXDA367  HBB7703 990610 PDJI: 64-bit register support A367.02     00191000
* $P4=PXD1144  HBB7703 000112 PDJI: Fix assembler comment in col 72     00192000
* $02=OW44571  HBB7703 000601 PDZJ: A408.03 POST MORTEM DEBUG           00193000
* $D9=DYNA519  HBB7708 010227 PDJC: A519.09 64 bit support              00194000
* $DA=DYNA519  HBB7708 051001 PDKG: A519.01 64 bit Pthread exit status  00195000
* $P5=PYN0220  HBB7708 020301 PDFO: Bilingual fixup                     00196000
* $DB=DYNA519  HBB7709 010417 PDJJ: A519.09 alet capture support        00197000
* $DC=DYNA519  HBB7709 030214 PDZJ: moved exit info to end of ptpx      00198000
* $P6=PJK1183  HBB7709 031111 PDJC: 64 bit support inspection rework    00199000
* $DD=ME26284  HBB77A0 130701 PDJQ: Ptrace vector support               00200000
* $P7=WI167229 HBB77C0 180820 PDDD: Ptrace 16 byte psw support          00201000
* $P8=304691   HBB77C0 190305 PDJQ: Prolog propchk, not restricted      00202000
* $P9=358368   HBB77D0 200301 PDJQ: Include all mappings for assembler, 00202102
*                                   &name=COND to YES (OA58998 UR1)     00202202
****END OF SPECIFICATIONS*********************************************/ 00203000
*% /*                                                                   00204000
.P0                   ANOP                                              00205000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00206000
                      AIF   ('&LIST' EQ 'YES').P2                       00207000
.P1                   ANOP                                              00208000
                      PUSH  PRINT                                       00209000
                      PRINT OFF                                         00210000
.P2                   ANOP                                              00211000
                      AIF   ('&PtLDInfo' EQ 'NO').L0002                 00212000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00213000
                      AIF   ('&PtLDInfo' NE 'YES').L0002                00214000
.L0003                ANOP                                              00215000
*                                                                       00216000
* ********************************************************************  00217000
* *                                                                  *  00218000
* * Ptrace PT_LDINFO return structure.  Note that this maps one      *  00219000
* * element, corresponding to one load module.  Each element         *  00220000
* * consists of a fixed portion, and a variable portion (the path    *  00221000
* * name and member name character strings).  The character strings  *  00222000
* * are terminated with a null value (X'00').  Each loader info      *  00223000
* * element immediately follows the last null terminator for the     *  00224000
* * previous element.  The first full word of each element is an     *  00225000
* * offset to the next element.  Thus, the start of the next element *  00226000
* * can be specified as follows:                                     *  00227000
* *                                                                  *  00228000
* *     NextLDInfo = Addr(PtLDInfo)+PtLDInfoNext                     *  00229000
* *                                                                  *  00230000
* ********************************************************************  00231000
*                                                                       00232000
*                                                                       00233000
                      AIF   ('&DSECT' EQ 'YES').L0004                   00234000
PtLDInfo              DS    0F                                          00235000
                      AGO   .L0005                                      00236000
.L0004                ANOP                                              00237000
PtLDInfo              DSECT                                             00238000
.L0005                ANOP                                              00239000
PtLDFixedArea         DS    CL32                                        00240000
                      ORG   PtLDFixedArea                               00241000
PtLDInfoNext          DS    F      Offset to next element               00242000
PtLDInfoFD            DS    F      File descriptor for this load       *00243000
                                   module (not used)                    00244000
PtLDTextOrg           DS    A      Program text origin address (i.e.   *00245000
                                   load point address)                  00246000
PtLDTextSize          DS    F      Length of text                       00247000
PtLDTextSubpool       DS    CL1    Subpool where text is loaded         00248000
PtLDTextFlags         DS    B      Text related flags                   00249000
*  Bit definitions:                                                     00250000
PtLDTextWrite         EQU   X'80'  0 = text can be read but not        *00251000
                                   written into 1 = text can be read   *00252000
                                   and written into                     00253000
PtLDTextMVS           EQU   X'40'  0 = File system load module 1 = MVS *00254000
                                   load module                          00255000
PtLDTextExt           EQU   X'20'  0 = Only 1 text extent 1 = More     *00256000
                                   than one text extent. First extent  *00257000
                                   is in this element, extent 2 - n    *00258000
                                   are in the PtLDInfoExt area          00259000
PtLDOffExt            DS    H      Offset from this element to element *00260000
                                   extension. 0 if there is no         *00261000
                                   extension for this element           00262000
PtLDDataOrg           DS    A      Program data origin address (not    *00263000
                                   used)                                00264000
PtLDDataSize          DS    F      Length of data (not used)            00265000
PtLDDataSubpool       DS    X      Subpool where data is loaded (not   *00266000
                                   used)                                00267000
PtLDDataFlags         DS    B      Data related flags (not used)        00268000
                      DS    H      Reserved                             00269000
PtLDVarArea           DS    0C                                          00270000
PtLDPathName          DS    0C     Fully qualified path name of load   *00271000
                                   module                               00272000
PtLDMemberName        DS    0C     Member name of load module (not     *00273000
                                   used)                                00274000
PtLDInfo_Len          EQU   *-PtLDInfo                                  00275000
.L0002                ANOP                                              00276000
                      AIF   ('&PtLD64Info' EQ 'NO').L0006               00277000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00278000
                      AIF   ('&PtLD64Info' NE 'YES').L0006              00279000
.L0007                ANOP                                              00280000
*                                                                       00281000
*     PT_LD64Info area, to succeed the one above                        00282000
*                                                                       00283000
*                                                                       00284000
                      AIF   ('&DSECT' EQ 'YES').L0008                   00285000
PtLD64Info            DS    0D                                          00286000
                      AGO   .L0009                                      00287000
.L0008                ANOP                                              00288000
PtLD64Info            DSECT                                             00289000
.L0009                ANOP                                              00290000
PtLD64FixedArea       DS    CL32                                        00291000
                      ORG   PtLD64FixedArea                             00292000
PtLD64InfoNext        DS    F      Offset to next element               00293000
                      DS    F      Reserved                             00294000
PtLD64TextOrg         DS    AD     Program text origin address (i.e.   *00295000
                                   load point address)                  00296000
PtLD64TextSize        DS    FL8    Length of text                       00297000
PtLD64TextSubpool     DS    CL1    Subpool where text is loaded         00298000
PtLD64TextFlags       DS    B      Text related flags                   00299000
*  Bit definitions:                                                     00300000
PtLD64TextWrite       EQU   X'80'  0 = text can be read but not        *00301000
                                   written into 1 = text can be read   *00302000
                                   and written into                     00303000
PtLD64TextMVS         EQU   X'40'  0 = File system load module 1 = MVS *00304000
                                   load module                          00305000
PtLD64TextExt         EQU   X'20'  0 = Only 1 text extent 1 = More     *00306000
                                   than one text extent. First extent  *00307000
                                   is in this element, extent 2 - n    *00308000
                                   are in the PtLDInfoExt area          00309000
PtLD64OffExt          DS    H      Offset from this element to element *00310000
                                   extension. 0 if there is no         *00311000
                                   extension for this element           00312000
                      DS    F      Reserved                             00313000
PtLD64VarArea         DS    0C                                          00314000
PtLD64PathName        DS    0C     Fully qualified path name of load   *00315000
                                   module                               00316000
PtLD64Info_Len        EQU   *-PtLD64Info                                00317000
.L0006                ANOP                                              00318000
                      AIF   ('&PtLDInfoExt' EQ 'NO').L000A              00319000
                      AIF   ('&DSECT' EQ 'YES').L000B                   00320000
                      AIF   ('&PtLDInfoExt' NE 'YES').L000A             00321000
PtLDInfoExt           DS    0F                                          00322000
                      AGO   .L000C                                      00323000
.L000B                ANOP                                              00324000
PtLDInfoExt           DSECT                                             00325000
.L000C                ANOP                                              00326000
PtLDInfoNumTextExt    DS    H      Number of additional text extents   *00327000
                                   in the following arrays that are    *00328000
                                   meaningful, up to 15 in this area,  *00329000
                                   for a total of 16                    00330000
                      DS    H      reserved                             00331000
PtLDTextOrgExt        DS    A      Program text origin address (i.e.   *00332000
                                   load point address)                  00333000
                      ORG   PtLDTextOrgExt+60                           00334000
PtLDTextSizeExt       DS    F      Length of text                       00335000
                      ORG   PtLDInfoExt+124                             00336000
PtLDInfoExt_Len       EQU   *-PtLDInfoExt                               00337000
.L000A                ANOP                                              00338000
                      AIF   ('&PtLD64InfoExt' EQ 'NO').L000D            00339000
                      AIF   ('&DSECT' EQ 'YES').L000E                   00340000
                      AIF   ('&PtLD64InfoExt' NE 'YES').L000D           00341000
PtLD64InfoExt         DS    0D                                          00342000
                      AGO   .L000F                                      00343000
.L000E                ANOP                                              00344000
PtLD64InfoExt         DSECT                                             00345000
.L000F                ANOP                                              00346000
PtLD64InfoNumTextExt  DS    F      Number of additional text extents   *00347000
                                   in the following arrays that are    *00348000
                                   meaningful, up to 15 in this area,  *00349000
                                   for a total of 16                    00350000
                      DS    F      reserved                             00351000
PtLD64TextOrgExt      DS    AD     Program text origin address (i.e.   *00352000
                                   load point address)                  00353000
                      ORG   PtLD64TextOrgExt+120                        00354000
PtLD64TextSizeExt     DS    FL8    Length of text                       00355000
PtLDNullTerm          EQU   0      Null terminator for character       *00356000
                                   strings                              00357000
                      ORG   PtLD64InfoExt+248                           00358000
PtLD64InfoExt_Len     EQU   *-PtLD64InfoExt                             00359000
.L000D                ANOP                                              00360000
                      AIF   ('&PtPTINFO' EQ 'NO').L0010                 00361000
                      AIF   ('&DSECT' EQ 'YES').L0011                   00362000
                      AIF   ('&PtPTINFO' NE 'YES').L0010                00363000
.L0011                ANOP                                              00364000
*                                                                       00365000
* ********************************************************************  00366000
* *                                                                  *  00367000
* * Ptrace thread information return structure.  Note that this      *  00368000
* * maps one element, corresponding to one thread.                   *  00369000
* *                                                                  *  00370000
* * Note: the only valid information for a dead thread is:           *  00371000
* *                                                                  *  00372000
* *   PTPTNEXT, PTPTTHID, PTPTSTATEACTIVE=0, PTPTKERNELPTHREAD,      *  00373000
* *   PTPTEXITSTATUS                                                 *  00374000
* ********************************************************************  00375000
*                                                                       00376000
*                                                                       00377000
                      AIF   ('&DSECT' EQ 'YES').L0012                   00378000
PtPTINFO              DS    0F                                          00379000
                      AGO   .L0013                                      00380000
.L0012                ANOP                                              00381000
PtPTINFO              DSECT                                             00382000
.L0013                ANOP                                              00383000
PtptNext              DS    A      Offset to next element               00384000
PtptTHID              DS    CL8    Thread ID                            00385000
PtptReserved          DS    CL16   Reserved                             00386000
PtptState             DS    BL4    Thread state flags                   00387000
                      ORG   PtptState                                   00388000
PtptState1            DS    B      Thread state flag byte               00389000
*  Bit definitions:                                                     00390000
PtptStateActive       EQU   X'80'                                       00391000
*                                                                       00392000
*      ***************************************************************  00393000
*      *                                                             *  00394000
*      * 0 = thread is dead                                             00395000
*      * 1 = thread is active                                           00396000
*      *                                                             *  00397000
*      ***************************************************************  00398000
*                                                                       00399000
*                                                                       00400000
PtptStateAsync        EQU   X'40'                                       00401000
*                                                                       00402000
*      ***************************************************************  00403000
*      *                                                             *  00404000
*      * 1 = thread is asynchronous                                     00405000
*      * (is also active but not                                        00406000
*      * yet running)                                                   00407000
*      *                                                             *  00408000
*      ***************************************************************  00409000
*                                                                       00410000
*                                                                       00411000
PtptStateCancelPend   EQU   X'20'                                       00412000
*                                                                       00413000
*      ***************************************************************  00414000
*      *                                                             *  00415000
*      * 1 = cancel is pending                                          00416000
*      *                                                             *  00417000
*      ***************************************************************  00418000
*                                                                       00419000
*                                                                       00420000
PtptState2            DS    B      Thread state flag byte               00421000
PtptState3            DS    B      Thread state flag byte               00422000
PtptState4            DS    B      Thread state flag byte               00423000
PtptKernelAttr        DS    BL4    Thread kernel attributes             00424000
                      ORG   PtptKernelAttr                              00425000
PtptKernel1           DS    B      Thread kernel attribute byte         00426000
*  Bit definitions:                                                     00427000
PtptKernelDetach      EQU   X'80'                                       00428000
*                                                                       00429000
*      ***************************************************************  00430000
*      *                                                             *  00431000
*      * 0 = thread is not detached                                     00432000
*      * 1 = thread is detached                                         00433000
*      *                                                             *  00434000
*      ***************************************************************  00435000
*                                                                       00436000
*                                                                       00437000
PtptKernelMedium      EQU   X'40'                                       00438000
*                                                                       00439000
*      ***************************************************************  00440000
*      *                                                             *  00441000
*      * 0 = thread is heavyweight                                      00442000
*      * 1 = thread is mediumweight                                     00443000
*      *                                                             *  00444000
*      ***************************************************************  00445000
*                                                                       00446000
*                                                                       00447000
PtptKernelAsync       EQU   X'20'                                       00448000
*                                                                       00449000
*      ***************************************************************  00450000
*      *                                                             *  00451000
*      * 0 = thread is synchronous                                      00452000
*      * 1 = thread is asynchronous                                     00453000
*      *                                                             *  00454000
*      ***************************************************************  00455000
*                                                                       00456000
*                                                                       00457000
PtptKernelPthread     EQU   X'10'                                       00458000
*                                                                       00459000
*      ***************************************************************  00460000
*      *                                                             *  00461000
*      * 1 = thread is created via                                      00462000
*      * pthread create                                                 00463000
*      *                                                             *  00464000
*      ***************************************************************  00465000
*                                                                       00466000
*                                                                       00467000
PtptKernel2           DS    B      Thread kernel attribute byte         00468000
*  Bit definitions:                                                     00469000
PtptKernelHold        EQU   X'80'                                       00470000
*                                                                       00471000
*      ***************************************************************  00472000
*      *                                                             *  00473000
*      * 1 = thread is held                                             00474000
*      *                                                             *  00475000
*      ***************************************************************  00476000
*                                                                       00477000
*                                                                       00478000
PtptKernel3           DS    B      Reserved                             00479000
PtptKernel4           DS    B      Reserved                             00480000
PtptExitStatus        DS    CL4                                         00481000
*                                                                       00482000
*      ***************************************************************  00483000
*      *                                                             *  00484000
*      * Thread exit status if dead                                     00485000
*      * for amode 31 pthread or                                        00486000
*      * Low part of thread exit                                        00487000
*      * status                                                         00488000
*      * for amode 64 pthread                                           00489000
*      * (PtptStateActive = 0)                                          00490000
*      *                                                             *  00491000
*      ***************************************************************  00492000
*                                                                       00493000
*                                                                       00494000
PtptPendingSigmask    DS    BL8                                         00495000
*                                                                       00496000
*      ***************************************************************  00497000
*      *                                                             *  00498000
*      * Mask of pending signals                                        00499000
*      * (bit 0 represents signal 1)                                    00500000
*      * (bit 63 represents signal 64)                                  00501000
*      *                                                             *  00502000
*      ***************************************************************  00503000
*                                                                       00504000
*                                                                       00505000
PtptExitStatusHigh    DS    CL4                                         00506000
*                                                                       00507000
*      ***************************************************************  00508000
*      *                                                             *  00509000
*      * Thread exit status if dead                                     00510000
*      * High part of thread exit                                       00511000
*      * status                                                         00512000
*      * for amode 64 pthread                                           00513000
*      * (PtptStateActive = 0)                                          00514000
*      *                                                             *  00515000
*      ***************************************************************  00516000
*                                                                       00517000
*                                                                       00518000
                      DS    CL4    reserved                             00519000
PtPTINFO_Len          EQU   *-PtPTINFO                                  00520000
.L0010                ANOP                                              00521000
                      AIF   ('&PtPhINFO' EQ 'NO').L0014                 00522000
                      AIF   ('&DSECT' EQ 'YES').L0015                   00523000
                      AIF   ('&PtPhINFO' NE 'YES').L0014                00524000
.L0015                ANOP                                              00525000
*                                                                       00526000
* ********************************************************************  00527000
* *                                                                  *  00528000
* * Ptrace thread information extended structure. Note that this     *  00529000
* * maps one element, corresponding to one thread. PtpxInfo maps     *  00530000
* * exactly to PtPtInfo                                              *  00531000
* *                                                                  *  00532000
* *                                                                  *  00533000
* *                                                                  *  00534000
* * Note: the only valid information for a dead thread is:           *  00535000
* *                                                                  *  00536000
* *   PTPXNEXT, PTPXTHID, PTPXSTATEACTIVE=0, PTPXKERNELPTHREAD,      *  00537000
* *   PTPXEXITSTATUS                                                 *  00538000
* ********************************************************************  00539000
*                                                                       00540000
*                                                                       00541000
                      AIF   ('&DSECT' EQ 'YES').L0016                   00542000
PtPhINFO              DS    0F     PT_THREAD_INFO_EXTENDED header      *00543000
                                   information                          00544000
                      AGO   .L0017                                      00545000
.L0016                ANOP                                              00546000
PtPhINFO              DSECT        PT_THREAD_INFO_EXTENDED header      *00547000
                                   information                          00548000
.L0017                ANOP                                              00549000
PtPhInfoBase          DS    CL56                                        00550000
*                                                                       00551000
*      ***************************************************************  00552000
*      *                                                             *  00553000
*      * PtphInfoBase contains information about the process and     *  00554000
*      * pointers to the next array of thread info                      00555000
*      *                                                             *  00556000
*      ***************************************************************  00557000
*                                                                       00558000
*                                                                       00559000
                      ORG   PtPhInfoBase                                00560000
PtPhId                DS    CL4    Acronym                              00561000
PTPhNext              DS    A      Address of the next PtPhInfo         00562000
PtPhPtpxOff           DS    A      Offset of first Ptpx in this chunk  *00563000
                                   of storage                           00564000
PTPhPid               DS    F      Process id of the threads            00565000
PTPhPendingSigmask    DS    BL8    Signals pending at the process       00566000
PTPhBlockedSigmask    DS    BL8    blocked signals at process           00567000
PtPhThreadNum         DS    F      Total number of threads reported in *00568000
                                   chain                                00569000
PtPhTnum              DS    CL4    Threads in the Current buffer        00570000
PtPhPtPxLen           DS    F      Length of the PtPx in this buffer    00571000
                      DS    CL4    Reserved                             00572000
                      ORG   PtPhINFO+56                                 00573000
PtPhINFO_Len          EQU   *-PtPhINFO                                  00574000
.L0014                ANOP                                              00575000
                      AIF   ('&PtPxINFO' EQ 'NO').L0018                 00576000
                      AIF   ('&DSECT' EQ 'YES').L0019                   00577000
                      AIF   ('&PtPxINFO' NE 'YES').L0018                00578000
PtPxINFO              DS    0F     PT_THREAD_INFO_EXTENDED maps a      *00579000
                                   single entry                         00580000
                      AGO   .L001A                                      00581000
.L0019                ANOP                                              00582000
PtPxINFO              DSECT        PT_THREAD_INFO_EXTENDED maps a      *00583000
                                   single entry                         00584000
.L001A                ANOP                                              00585000
PtPxInfoBase          DS    CL64                                        00586000
                      ORG   PtPxInfoBase                                00587000
PTPXNext              DS    A      Offset to next element               00588000
PTPXTHID              DS    CL8    Thread ID                            00589000
PTPXTcb               DS    A      Tcb address for this process         00590000
PTPXOtcb              DS    A      Otcb address for this process        00591000
PTPXBlockedSigmask    DS    BL8    blocked signals                      00592000
PTPXState             DS    BL4    Thread state flags                   00593000
                      ORG   PTPXState                                   00594000
PTPXState1            DS    B      Thread state flag byte               00595000
*  Bit definitions:                                                     00596000
PTPXStateActive       EQU   X'80'  0 = thread is dead                   00597000
*                                                                       00598000
*      ***************************************************************  00599000
*      *                                                             *  00600000
*      * 1 = thread is active                                           00601000
*      *                                                             *  00602000
*      ***************************************************************  00603000
*                                                                       00604000
*                                                                       00605000
PTPXStateAsync        EQU   X'40'  1 = N/A                              00606000
*                                                                       00607000
*      ***************************************************************  00608000
*      *                                                             *  00609000
*      * (is also active but not                                        00610000
*      * yet running)                                                   00611000
*      *                                                             *  00612000
*      ***************************************************************  00613000
*                                                                       00614000
*                                                                       00615000
PTPXStateCancelPend   EQU   X'20'                                       00616000
*                                                                       00617000
*      ***************************************************************  00618000
*      *                                                             *  00619000
*      * 1 = cancel is pending                                          00620000
*      *                                                             *  00621000
*      ***************************************************************  00622000
*                                                                       00623000
*                                                                       00624000
PTPXState2            DS    B      Thread state flag byte               00625000
PTPXState3            DS    B      Thread state flag byte               00626000
PTPXState4            DS    B      Thread state flag byte               00627000
PTPXKernelAttr        DS    BL4    Thread kernel attrtes                00628000
                      ORG   PTPXKernelAttr                              00629000
PTPXKernel1           DS    B      Thread kernel attribute byte         00630000
*  Bit definitions:                                                     00631000
PTPXKernelDetach      EQU   X'80'                                       00632000
*                                                                       00633000
*      ***************************************************************  00634000
*      *                                                             *  00635000
*      * 0 = thread is not detached                                     00636000
*      * 1 = thread is detached                                         00637000
*      *                                                             *  00638000
*      ***************************************************************  00639000
*                                                                       00640000
*                                                                       00641000
PTPXKernelMedium      EQU   X'40'                                       00642000
*                                                                       00643000
*      ***************************************************************  00644000
*      *                                                             *  00645000
*      * 0 = thread is heavyweight                                      00646000
*      * 1 = thread is mediumweight                                     00647000
*      *                                                             *  00648000
*      ***************************************************************  00649000
*                                                                       00650000
*                                                                       00651000
PTPXKernelAsync       EQU   X'20'                                       00652000
*                                                                       00653000
*      ***************************************************************  00654000
*      *                                                             *  00655000
*      * 0 = thread is synchronous                                      00656000
*      * 1 = thread is asynchronous                                     00657000
*      *                                                             *  00658000
*      ***************************************************************  00659000
*                                                                       00660000
*                                                                       00661000
PTPXKernelPthread     EQU   X'10'                                       00662000
*                                                                       00663000
*      ***************************************************************  00664000
*      *                                                             *  00665000
*      * 1 = thread is created via                                      00666000
*      * pthread create                                                 00667000
*      *                                                             *  00668000
*      ***************************************************************  00669000
*                                                                       00670000
*                                                                       00671000
PTPXKernel2           DS    B      Thread kernel attribute byte         00672000
*  Bit definitions:                                                     00673000
PTPXKernelHold        EQU   X'80'                                       00674000
*                                                                       00675000
*      ***************************************************************  00676000
*      *                                                             *  00677000
*      * 1 = thread is held                                             00678000
*      *                                                             *  00679000
*      ***************************************************************  00680000
*                                                                       00681000
*                                                                       00682000
PTPXKernel3           DS    B      Reserved                             00683000
PTPXKernel4           DS    B      Reserved                             00684000
PTPXExitStatus        DS    CL4                                         00685000
*                                                                       00686000
*      ***************************************************************  00687000
*      *                                                             *  00688000
*      * Thread exit status if dead                                     00689000
*      * for amode 31 pthread or                                        00690000
*      * Low part of thread exit                                        00691000
*      * status                                                         00692000
*      * for amode 64 pthread                                           00693000
*      * (PTPXStateActive = 0)                                          00694000
*      *                                                             *  00695000
*      ***************************************************************  00696000
*                                                                       00697000
*                                                                       00698000
PTPXPendingSigmask    DS    BL8    Mask of pending signals is set)     *00699000
                                   (bit 0 represents signal 1)          00700000
PTPXPid               DS    F      Process id for this Thid             00701000
PTPXAsid              DS    H                                           00702000
PTPXFlags             DS    BL2    Thread related flags                 00703000
*  Bit definitions:                                                     00704000
PtPxIpt               EQU   X'80'  Ipt Thread                           00705000
PtPxInComplete        EQU   X'40'  The reported thread information is  *00706000
                                   incomplete                           00707000
PTPXOapb              DS    A      Pointer to the Oapb                  00708000
PTPXExitStatusHigh    DS    CL4                                         00709000
PtPxINFO_Len          EQU   *-PtPxINFO                                  00710000
.L0018                ANOP                                              00711000
                      AIF   ('&PtExInfo' EQ 'NO').L001B                 00712000
                      AIF   ('&DSECT' EQ 'YES').L001C                   00713000
                      AIF   ('&PtExInfo' NE 'YES').L001B                00714000
.L001C                ANOP                                              00715000
*                                                                       00716000
*    *****************************************************************  00717000
*    *                                                               *  00718000
*    * For a dead thread                                                00719000
*    * (PTPXStateActive = 0)                                            00720000
*    * if AMODE 64 pthread this is                                      00721000
*    * the high half of the thread                                      00722000
*    * exit status. If an AMODE 31                                      00723000
*    * pthread this field is unused                                     00724000
*    *                                                               *  00725000
*    *****************************************************************  00726000
*                                                                       00727000
* ********************************************************************  00728000
* *                                                                  *  00729000
* * Ptrace explain information return structure.                     *  00730000
* *                                                                  *  00731000
* ********************************************************************  00732000
*                                                                       00733000
*                                                                       00734000
                      AIF   ('&DSECT' EQ 'YES').L001D                   00735000
PtExInfo              DS    0D                                          00736000
                      AGO   .L001E                                      00737000
.L001D                ANOP                                              00738000
PtExInfo              DSECT                                             00739000
.L001E                ANOP                                              00740000
PtExInfo31            DS    CL12                                        00741000
                      ORG   PtExInfo31                                  00742000
PtExReg1              DS    F      Register 1 at CEEEVDBG entry         00743000
PtExReg12             DS    F      Register 12 at CEEEVDBG entry        00744000
PtExReg13             DS    F      Register 13 at CEEEVDBG entry        00745000
                      DS    F      reserved                             00746000
PtExInfo64            DS    CL24                                        00747000
                      ORG   PtExInfo64                                  00748000
PtExG64R1             DS    FL8    Register 1 at CEEEVDBG entry         00749000
PtExG64R12            DS    FL8    Register 12 at CEEEVDBG entry        00750000
PtExG64R13            DS    FL8    Register 13 at CEEEVDBG entry        00751000
PtExInfo_Len          EQU   *-PtExInfo                                  00752000
.L001B                ANOP                                              00753000
                      AIF   ('&PtPICParms' EQ 'NO').L001F               00754000
                      AIF   ('&DSECT' EQ 'YES').L0020                   00755000
                      AIF   ('&PtPICParms' NE 'YES').L001F              00756000
.L0020                ANOP                                              00757000
*                                                                       00758000
* ********************************************************************  00759000
* *                                                                  *  00760000
* * Ptrace program recovery parameters structure.                    *  00761000
* * (This area is provided by the caller)                            *  00762000
* *                                                                  *  00763000
* ********************************************************************  00764000
*                                                                       00765000
*                                                                       00766000
                      AIF   ('&DSECT' EQ 'YES').L0021                   00767000
PtPICParms            DS    0D                                          00768000
                      AGO   .L0022                                      00769000
.L0021                ANOP                                              00770000
PtPICParms            DSECT                                             00771000
.L0022                ANOP                                              00772000
PtPICRegisters        DS    A      Address of GPRs at time of          *00773000
                                   interrupt                            00774000
PtPICPSW              DS    A      Address of PSW at time of interrupt  00775000
PtPICIntCode          DS    H      Program interrupt code               00776000
PtPICSigNumber        DS    H      Return value indicating signal      *00777000
                                   number that should be raised by the *00778000
                                   caller if the PtPICUseSigNum flag   *00779000
                                   is set                               00780000
PtPICFlags            DS    BL4    Flags                                00781000
*  Bit definitions:                                                     00782000
PtPICICModified       EQU   X'80'  0 = The instruction counter portion *00783000
                                   of the PSW pointed to by the        *00784000
                                   PtPICPSW field has not been         *00785000
                                   modified 1 = The instruction        *00786000
                                   counter portion of the PSW pointed  *00787000
                                   to by the PtPICPSW field has been   *00788000
                                   modified - continue execution at    *00789000
                                   this modified address                00790000
PtPICRegsModified     EQU   X'40'  0 = The registers pointed to by the *00791000
                                   PtPICRegisters field have not been  *00792000
                                   modified 1 = The registers pointed  *00793000
                                   to by the PtPICRegisters field have *00794000
                                   been modified                        00795000
PtPICUseSigNum        EQU   X'20'  1 = Raise the signal number         *00796000
                                   returned in the PtPICSigNumber      *00797000
                                   field upon return                    00798000
PtPICBypassSig        EQU   X'10'  1 = Do not raise any signal upon    *00799000
                                   return                               00800000
PtPICILCExists        EQU   X'08'  1 = PtPICILC field is present        00801000
PtPICHiRegsExists     EQU   X'04'  1 = The PtPICHiRegisters field is   *00802000
                                   present                              00803000
PtPICHiRegsModified   EQU   X'02'  0 = The registers pointed to by the *00804000
                                   PtPICHiRegisters field have not     *00805000
                                   been modified 1 = The registers     *00806000
                                   pointed to by the PtPICHiRegisters  *00807000
                                   field have been modified             00808000
PtPICAmode64          EQU   X'01'  Use 64 bit addresses for PSW and    *00809000
                                   registers                            00810000
                      DS    BL3    Reserved                             00811000
                      ORG   PtPICFlags+4                                00812000
PtPICAbendCode        DS    BL4    Abend code or zero                   00813000
                      ORG   PtPICAbendCode                              00814000
PtPICAbendFlags       DS    B      Abend code flags                     00815000
PtPICAbendCC          DS    BL3    System completion code (first 12    *00816000
                                   bits) and user completion code      *00817000
                                   (second 12 bits)                     00818000
PtPICAbendReason      DS    F      Abend reason code or zero            00819000
PtPICILC              DS    X      Instruction length code (only       *00820000
                                   present if PtPICILCExists flag is   *00821000
                                   set)                                 00822000
PtPICReserved         DS    CL3    Reserved                             00823000
PtPICHiRegisters      DS    A      Address of high GPRs at time of     *00824000
                                   interrupt                            00825000
PtPICRegisters64      DS    AD     Address of GPRs at time of          *00826000
                                   interrupt - Amode 64                 00827000
PtPICPSW64            DS    AD     Address of PSW at time of interrupt *00828000
                                   - Amode 64                           00829000
PtPICHiRegisters64    DS    AD     Address of high GPRs at time of     *00830000
                                   interrupt - Amode 64                 00831000
PtPICRsvd             DS    CL8    Reserved. This area is provided by  *00832000
                                   the caller and may not be present   *00833000
                                   in old releases of code              00834000
*                                                                       00835000
* ********************************************************************  00836000
* *                                                                  *  00837000
* * Ptrace request parameter definitions.                            *  00838000
* *                                                                  *  00839000
* ********************************************************************  00840000
*                                                                       00841000
*                                                                       00842000
PT_TRACE_ME           EQU   0      Debug this process                   00843000
PT_READ_I             EQU   1      Read a full word                     00844000
PT_READ_D             EQU   2      Read a full word                     00845000
PT_READ_U             EQU   3      Read control info                    00846000
PT_WRITE_I            EQU   4      Write a full word                    00847000
PT_WRITE_D            EQU   5      Write a full word                    00848000
PT_CONTINUE           EQU   7      Continue the process                 00849000
PT_KILL               EQU   8      Terminate the process                00850000
PT_READ_GPR           EQU   11     Read GPR, CR, PSW                    00851000
PT_READ_FPR           EQU   12     Read FPR                             00852000
PT_READ_VR            EQU   13     Read VR                              00853000
PT_WRITE_GPR          EQU   14     Write GPR, CR, PSW                   00854000
PT_WRITE_FPR          EQU   15     Write FPR                            00855000
PT_WRITE_VR           EQU   16     Write VR                             00856000
PT_READ_BLOCK         EQU   17     Read storage                         00857000
PT_WRITE_BLOCK        EQU   19     Write storage                        00858000
PT_READ_GPRH          EQU   20     Read GPRH                            00859000
PT_WRITE_GPRH         EQU   21     Write GPRH                           00860000
PT_REGHSET            EQU   22     Read all GPRHs                       00861000
PT_ATTACH             EQU   30     Attach to a process                  00862000
PT_DETACH             EQU   31     Detach from a process                00863000
PT_REGSET             EQU   32     Read all GPRs                        00864000
PT_REATTACH           EQU   33     Reattach to a process                00865000
PT_LDINFO             EQU   34     Read loader info                     00866000
PT_MULTI              EQU   35     Multi process mode                   00867000
PT_LD64INFO           EQU   36     RMODE64 Info Area                    00868000
PT_BLOCKREQ           EQU   40     Block request                        00869000
PT_THREAD_INFO        EQU   60     Read thread info                     00870000
PT_THREAD_MODIFY      EQU   61     *************************************00871000
                                   ************************* Modify    *00872000
                                   thread kernel information ***********00873000
                                   *************************************00874000
                                   ***************                      00875000
PT_THREAD_READ_FOCUS  EQU   62     *************************************00876000
                                   ************************* Read      *00877000
                                   current focus thread ID *************00878000
                                   *************************************00879000
                                   *************                        00880000
PT_THREAD_WRITE_FOCUS EQU   63     *************************************00881000
                                   ************************* Modify    *00882000
                                   current focus thread ID *************00883000
                                   *************************************00884000
                                   *************                        00885000
PT_THREAD_HOLD        EQU   64     *************************************00886000
                                   ************************* Modify    *00887000
                                   thread hold state *******************00888000
                                   *************************************00889000
                                   *******                              00890000
PT_THREAD_SIGNAL      EQU   65     *************************************00891000
                                   ************************* Queue a   *00892000
                                   signal for a thread *****************00893000
                                   *************************************00894000
                                   *********                            00895000
PT_EXPLAIN            EQU   66     *************************************00896000
                                   ************************* Return    *00897000
                                   extended event info *****************00898000
                                   *************************************00899000
                                   *********                            00900000
PT_EVENTS             EQU   67     *************************************00901000
                                   ************************* Modify    *00902000
                                   extended events list ****************00903000
                                   *************************************00904000
                                   **********                           00905000
PT_THREAD_INFO_EXTENDED EQU 68     *************************************00906000
                                   ************************* Read      *00907000
                                   extended thread info ****************00908000
                                   *************************************00909000
                                   **********                           00910000
PT_REATTACH2          EQU   71     *************************************00911000
                                   ************************* Reattach  *00912000
                                   to a process (extended) *************00913000
                                   *************************************00914000
                                   *************                        00915000
PT_CAPTURE            EQU   72     *************************************00916000
                                   ************************* Capture   *00917000
                                   debugged storage ********************00918000
                                   *************************************00919000
                                   ******                               00920000
PT_UNCAPTURE          EQU   73     *************************************00921000
                                   ************************* Uncapture *00922000
                                   debugged storage ********************00923000
                                   *************************************00924000
                                   ******                               00925000
PT_GET_THREAD_TCB     EQU   74     *************************************00926000
                                   ************************* Get TCB   *00927000
                                   address of a thread *****************00928000
                                   *************************************00929000
                                   *********                            00930000
PT_GET_ALET           EQU   75     *************************************00931000
                                   ************************* Get Alet  *00932000
                                   of target PID ***********************00933000
                                   *************************************00934000
                                   ***                                  00935000
PT_SWAPIN             EQU   76     *************************************00936000
                                   ************************* SWAPIN    *00937000
                                   target PID's A.S. *******************00938000
                                   *************************************00939000
                                   *******                              00940000
PT_EXTENDED_EVENT     EQU   98     *************************************00941000
                                   ************************* Debug an  *00942000
                                   extended event **********************00943000
                                   *************************************00944000
                                   ****                                 00945000
PT_RECOVER            EQU   99     Debug a program check                00946000
*                                                                       00947000
* ********************************************************************  00948000
* *                                                                  *  00949000
* * Ptrace register definitions.  The following are defined:         *  00950000
* *                                                                  *  00951000
* * - General purpose registers                                      *  00952000
* * - Floating point registers                                       *  00953000
* * - PSW registers                                                  *  00954000
* * - Control registers                                              *  00955000
* * - General Purpose High Registers                                    00956000
* *                                                                  *  00957000
* ********************************************************************  00958000
*                                                                       00959000
*                                                                       00960000
PT_GPR0               EQU   0      General purpose register 0           00961000
PT_GPR1               EQU   1      General purpose register 1           00962000
PT_GPR2               EQU   2      General purpose register 2           00963000
PT_GPR3               EQU   3      General purpose register 3           00964000
PT_GPR4               EQU   4      General purpose register 4           00965000
PT_GPR5               EQU   5      General purpose register 5           00966000
PT_GPR6               EQU   6      General purpose register 6           00967000
PT_GPR7               EQU   7      General purpose register 7           00968000
PT_GPR8               EQU   8      General purpose register 8           00969000
PT_GPR9               EQU   9      General purpose register 9           00970000
PT_GPR10              EQU   10     General purpose register 10          00971000
PT_GPR11              EQU   11     General purpose register 11          00972000
PT_GPR12              EQU   12     General purpose register 12          00973000
PT_GPR13              EQU   13     General purpose register 13          00974000
PT_GPR14              EQU   14     General purpose register 14          00975000
PT_GPR15              EQU   15     General purpose register 15          00976000
PT_FPR0               EQU   16     Floating point register 0            00977000
PT_FPR1               EQU   17     Floating point register 1            00978000
PT_FPR2               EQU   18     Floating point register 2            00979000
PT_FPR3               EQU   19     Floating point register 3            00980000
PT_FPR4               EQU   20     Floating point register 4            00981000
PT_FPR5               EQU   21     Floating point register 5            00982000
PT_FPR6               EQU   22     Floating point register 6            00983000
PT_FPR7               EQU   23     Floating point register 7            00984000
PT_FPR8               EQU   24     Floating point register 8            00985000
PT_FPR9               EQU   25     Floating point register 9            00986000
PT_FPR10              EQU   26     Floating point register 10           00987000
PT_FPR11              EQU   27     Floating point register 11           00988000
PT_FPR12              EQU   28     Floating point register 12           00989000
PT_FPR13              EQU   29     Floating point register 13           00990000
PT_FPR14              EQU   30     Floating point register 14           00991000
PT_FPR15              EQU   31     Floating point register 15           00992000
PT_FPC                EQU   32     Floating point control register      00993000
PT_PSW                EQU   40     PSW                                  00994000
PT_PSW0               EQU   40     Left half of the PSW                 00995000
PT_PSW1               EQU   41     Right half of the PSW                00996000
PT_CR0                EQU   42     Control register 0                   00997000
PT_CR1                EQU   43     Control register 1                   00998000
PT_CR2                EQU   44     Control register 2                   00999000
PT_CR3                EQU   45     Control register 3                   01000000
PT_CR4                EQU   46     Control register 4                   01001000
PT_CR5                EQU   47     Control register 5                   01002000
PT_CR6                EQU   48     Control register 6                   01003000
PT_CR7                EQU   49     Control register 7                   01004000
PT_CR8                EQU   50     Control register 8                   01005000
PT_CR9                EQU   51     Control register 9                   01006000
PT_CR10               EQU   52     Control register 10                  01007000
PT_CR11               EQU   53     Control register 11                  01008000
PT_CR12               EQU   54     Control register 12                  01009000
PT_CR13               EQU   55     Control register 13                  01010000
PT_CR14               EQU   56     Control register 14                  01011000
PT_CR15               EQU   57     Control register 15                  01012000
PT_GPRH0              EQU   58     GP High register 0                   01013000
PT_GPRH1              EQU   59     GP High register 1                   01014000
PT_GPRH2              EQU   60     GP High register 2                   01015000
PT_GPRH3              EQU   61     GP High register 3                   01016000
PT_GPRH4              EQU   62     GP High register 4                   01017000
PT_GPRH5              EQU   63     GP High register 5                   01018000
PT_GPRH6              EQU   64     GP High register 6                   01019000
PT_GPRH7              EQU   65     GP High register 7                   01020000
PT_GPRH8              EQU   66     GP High register 8                   01021000
PT_GPRH9              EQU   67     GP High register 9                   01022000
PT_GPRH10             EQU   68     GP High register 10                  01023000
PT_GPRH11             EQU   69     GP High register 11                  01024000
PT_GPRH12             EQU   70     GP High register 12                  01025000
PT_GPRH13             EQU   71     GP High register 13                  01026000
PT_GPRH14             EQU   72     GP High register 14                  01027000
PT_GPRH15             EQU   73     GP High register 15                  01028000
PT_VR0                EQU   74     Vector register 0                    01029000
PT_VR1                EQU   75     Vector register 1                    01030000
PT_VR2                EQU   76     Vector register 2                    01031000
PT_VR3                EQU   77     Vector register 3                    01032000
PT_VR4                EQU   78     Vector register 4                    01033000
PT_VR5                EQU   79     Vector register 5                    01034000
PT_VR6                EQU   80     Vector register 6                    01035000
PT_VR7                EQU   81     Vector register 7                    01036000
PT_VR8                EQU   82     Vector register 8                    01037000
PT_VR9                EQU   83     Vector register 9                    01038000
PT_VR10               EQU   84     Vector register 10                   01039000
PT_VR11               EQU   85     Vector register 11                   01040000
PT_VR12               EQU   86     Vector register 12                   01041000
PT_VR13               EQU   87     Vector register 13                   01042000
PT_VR14               EQU   88     Vector register 14                   01043000
PT_VR15               EQU   89     Vector register 15                   01044000
PT_VR16               EQU   90     Vector register 16                   01045000
PT_VR17               EQU   91     Vector register 17                   01046000
PT_VR18               EQU   92     Vector register 18                   01047000
PT_VR19               EQU   93     Vector register 19                   01048000
PT_VR20               EQU   94     Vector register 20                   01049000
PT_VR21               EQU   95     Vector register 21                   01050000
PT_VR22               EQU   96     Vector register 22                   01051000
PT_VR23               EQU   97     Vector register 23                   01052000
PT_VR24               EQU   98     Vector register 24                   01053000
PT_VR25               EQU   99     Vector register 25                   01054000
PT_VR26               EQU   100    Vector register 26                   01055000
PT_VR27               EQU   101    Vector register 27                   01056000
PT_VR28               EQU   102    Vector register 28                   01057000
PT_VR29               EQU   103    Vector register 29                   01058000
PT_VR30               EQU   104    Vector register 30                   01059000
PT_VR31               EQU   105    Vector register 31                   01060000
PT_PSWG               EQU   106    PSWG                                 01061000
PT_PSWG0              EQU   106    Bytes 0-3                            01062000
PT_PSWG1              EQU   107    Bytes 4-7                            01063000
PT_PSWG2              EQU   108    Bytes 8-11 (IA high word)            01064000
PT_PSWG3              EQU   109    Bytes 12-15 (IA low word)            01065000
*                                                                       01066000
* ********************************************************************  01067000
* *                                                                  *  01068000
* * Ptrace User Area offset definitions.  Offsets for signal catcher *  01069000
* * information are defined by the limits below.  Any offset between *  01070000
* * the minimum and maximum signal numbers is a request for signal   *  01071000
* * catcher information for that signal number (i.e. offset 3 means  *  01072000
* * signal catcher information for signal number 3).                 *  01073000
* *                                                                  *  01074000
* ********************************************************************  01075000
*                                                                       01076000
*                                                                       01077000
PtUArea#MinSig        EQU   1      Lowest signal number                 01078000
PtUArea#MaxSig        EQU   1024   Highest signal number                01079000
PtUArea#IntCode       EQU   1025   Request for program interrupt code   01080000
PtUArea#AbendCC       EQU   1026   Request for abend completion code    01081000
PtUArea#AbendRC       EQU   1027   Request for abend reason code        01082000
PtUArea#SigCode       EQU   1028   Request for signal code              01083000
PtUArea#ILC           EQU   1029   Request for instruction length code  01084000
PtUArea#PrFlags       EQU   1030   Request for process flags            01085000
*                                                                       01086000
* ********************************************************************  01087000
* *                                                                  *  01088000
* * Ptrace miscellaneous definitions.                                *  01089000
* *                                                                  *  01090000
* ********************************************************************  01091000
*                                                                       01092000
*                                                                       01093000
PtContNorm            EQU   1      Continue normally (continue address *01094000
                                   not changed) for a PT_CONTINUE      *01095000
                                   request                              01096000
PtNoStickyPgm         EQU   1      Main program of process is not      *01097000
                                   sticky bit program. Returned on     *01098000
                                   PTUAREA#PRFLAGS request              01099000
PtMaximumLength       EQU   64000  Maximum storage length               01100000
PtLD#FixedLen         EQU   32     Length of PtLDInfo fixed area        01101000
PtLD64#FixedLen       EQU   32     Length of PtLD64Info fixed area      01102000
PtPT#Length           EQU   56     Length of PtptInfo fixed area        01103000
PtPh#Length           EQU   56     Length of PtPhInfo fixed area on    *01104000
                                   double word boundary                 01105000
PtPx#Length           EQU   64     Length of PtpxInfo fixed area on    *01106000
                                   double word boundary                 01107000
PtEx#Length           EQU   40     Length of PtExInfo                   01108000
PtEx31#Length         EQU   12     Length of PtExInfo 31 bit            01109000
PtPIC#Length1         EQU   28     Length of PtPicParms if             *01110000
                                   PtPicHiRegsExists = OFF              01111000
PtPIC#Length2         EQU   32     Length of PtPicParms if             *01112000
                                   PtPicHiRegsExists = ON               01113000
PtPIC#Length          EQU   64     Length of PtPICParms                 01114000
PtPICParms_Len        EQU   *-PtPICParms                                01115000
.L001F                ANOP                                              01116000
                      AIF   ('&PtBRInfo' EQ 'NO').L0023                 01117000
                      AIF   ('&DSECT' EQ 'YES').L0024                   01118000
                      AIF   ('&PtBRInfo' NE 'YES').L0023                01119000
.L0024                ANOP                                              01120000
*                                                                       01121000
* ********************************************************************  01122000
* *                                                                  *  01123000
* * Ptrace PT_BlockReq structure.  This request allows the user to   *  01124000
* * block several different Ptrace requests into a single call to    *  01125000
* * Ptrace.  The block request structures mapped below must be       *  01126000
* * contained in a single large area.  This area is pointed to by    *  01127000
* * the Ptrace Address parameter and its length is contained in the  *  01128000
* * Ptrace Data parameter.  The PtBRInfo structure must be at offset *  01129000
* * zero into the provided area.                                     *  01130000
* *                                                                  *  01131000
* * Offsets are used to locate all relevant areas so that the Ptrace *  01132000
* * block request input may be relocated.  All offsets are relative  *  01133000
* * to the main input, the PtBRInfo area.  A given request block,    *  01134000
* * such as the PtBR_GPR structure, may be found using the           *  01135000
* * PtBRInfo address + PtBRReqBlkOff(x).                             *  01136000
* *                                                                  *  01137000
* * Only certain requests may be blocked into a single call to       *  01138000
* * Ptrace.  The requests that may be blocked are --                 *  01139000
* *   PT_READ_GPR                                                    *  01140000
* *   PT_WRITE_GPR                                                   *  01141000
* *   PT_READ_FPR                                                    *  01142000
* *   PT_WRITE_FPR                                                   *  01143000
* *   PT_READ_GPRH                                                   *  01144000
* *   PT_WRITE_GPRH                                                  *  01145000
* *   PT_READ_U                                                      *  01146000
* *   PT_READ_D                                                      *  01147000
* *   PT_READ_I                                                      *  01148000
* *   PT_WRITE_D                                                     *  01149000
* *   PT_WRITE_I                                                     *  01150000
* *   PT_READ_BLOCK                                                  *  01151000
* *   PT_WRITE_BLOCK.                                                *  01152000
* *                                                                     01153000
* ********************************************************************  01154000
*                                                                       01155000
*                                                                       01156000
                      AIF   ('&DSECT' EQ 'YES').L0025                   01157000
PtBRInfo              DS    0F                                          01158000
                      AGO   .L0026                                      01159000
.L0025                ANOP                                              01160000
PtBRInfo              DSECT                                             01161000
.L0026                ANOP                                              01162000
PtBRFixedArea         DS    CL16                                        01163000
                      ORG   PtBRFixedArea                               01164000
PtBRNumReqs           DS    F      Number of requests in PtBRReqs       01165000
                      DS    CL12   Reserved                             01166000
PtBRReqs              DS    CL16   requests                             01167000
                      ORG   PtBRReqs                                    01168000
PtBRType              DS    F      Type of request. For example,       *01169000
                                   PT_READ_BLOCK. This entry is        *01170000
                                   ignored if this field is zero        01171000
PtBRStatus            DS    F      Status from request. Same as        *01172000
                                   reasoncode on individual call of    *01173000
                                   same type                            01174000
PtBRReqBlkOff         DS    F      Offset to request block further     *01175000
                                   defining request and whose format   *01176000
                                   is dependant on the request type     01177000
                      DS    CL4    reserved                             01178000
PtBRInfo_Len          EQU   *-PtBRInfo                                  01179000
.L0023                ANOP                                              01180000
                      AIF   ('&PtBR_GPR' EQ 'NO').L0027                 01181000
                      AIF   ('&DSECT' EQ 'YES').L0028                   01182000
                      AIF   ('&PtBR_GPR' NE 'YES').L0027                01183000
.L0028                ANOP                                              01184000
*                                                                       01185000
* ********************************************************************  01186000
* * Structure for PT_Read_GPR and PT_Write_GPR.                      *  01187000
* ********************************************************************  01188000
*                                                                       01189000
*                                                                       01190000
                      AIF   ('&DSECT' EQ 'YES').L0029                   01191000
PtBR_GPR              DS    0F                                          01192000
                      AGO   .L002A                                      01193000
.L0029                ANOP                                              01194000
PtBR_GPR              DSECT                                             01195000
.L002A                ANOP                                              01196000
PtBR_GPR_CntlGPR      DS    BL2    Only used on write request           01197000
                      ORG   PtBR_GPR_CntlGPR                            01198000
PtBR_GPR_CntlGPR1     DS    B                                           01199000
*  Bit definitions:                                                     01200000
PtBR_GPR_WGPR0        EQU   X'80'  Write content of GPR 0               01201000
PtBR_GPR_WGPR1        EQU   X'40'  Write content of GPR 1               01202000
PtBR_GPR_WGPR2        EQU   X'20'  Write content of GPR 2               01203000
PtBR_GPR_WGPR3        EQU   X'10'  Write content of GPR 3               01204000
PtBR_GPR_WGPR4        EQU   X'08'  Write content of GPR 4               01205000
PtBR_GPR_WGPR5        EQU   X'04'  Write content of GPR 5               01206000
PtBR_GPR_WGPR6        EQU   X'02'  Write content of GPR 6               01207000
PtBR_GPR_WGPR7        EQU   X'01'  Write content of GPR 7               01208000
PtBR_GPR_CntlGPR2     DS    B                                           01209000
*  Bit definitions:                                                     01210000
PtBR_GPR_WGPR8        EQU   X'80'  Write content of GPR 8               01211000
PtBR_GPR_WGPR9        EQU   X'40'  Write content of GPR 9               01212000
PtBR_GPR_WGPR10       EQU   X'20'  Write content of GPR 10              01213000
PtBR_GPR_WGPR11       EQU   X'10'  Write content of GPR 11              01214000
PtBR_GPR_WGPR12       EQU   X'08'  Write content of GPR 12              01215000
PtBR_GPR_WGPR13       EQU   X'04'  Write content of GPR 13              01216000
PtBR_GPR_WGPR14       EQU   X'02'  Write content of GPR 14              01217000
PtBR_GPR_WGPR15       EQU   X'01'  Write content of GPR 15              01218000
                      ORG   PtBR_GPR_CntlGPR+2                          01219000
PtBR_GPR_CntlMisc     DS    BL2    Only used on write request           01220000
*  Bit definitions:                                                     01221000
PtBR_GPR_WPSW         EQU   X'80'  Write content of PSW, word 2         01222000
PtBR_GPR_WPSWG        EQU   X'40'  Write content of PSWG                01223000
PtBR_GPR_PSWG_Req     EQU   X'20'  request large psw                    01224000
                      DS    CL12   Reserved                             01225000
PtBR_GPR_GPRs         DS    CL64   General purpose registers            01226000
                      ORG   PtBR_GPR_GPRs                               01227000
PtBR_GPR_GPR00        DS    F      GPR 00                               01228000
PtBR_GPR_GPR01        DS    F      GPR 01                               01229000
PtBR_GPR_GPR02        DS    F      GPR 02                               01230000
PtBR_GPR_GPR03        DS    F      GPR 03                               01231000
PtBR_GPR_GPR04        DS    F      GPR 04                               01232000
PtBR_GPR_GPR05        DS    F      GPR 05                               01233000
PtBR_GPR_GPR06        DS    F      GPR 06                               01234000
PtBR_GPR_GPR07        DS    F      GPR 07                               01235000
PtBR_GPR_GPR08        DS    F      GPR 08                               01236000
PtBR_GPR_GPR09        DS    F      GPR 09                               01237000
PtBR_GPR_GPR10        DS    F      GPR 10                               01238000
PtBR_GPR_GPR11        DS    F      GPR 11                               01239000
PtBR_GPR_GPR12        DS    F      GPR 12                               01240000
PtBR_GPR_GPR13        DS    F      GPR 13                               01241000
PtBR_GPR_GPR14        DS    F      GPR 14                               01242000
PtBR_GPR_GPR15        DS    F      GPR 15                               01243000
PtBR_GPR_CRs          DS    CL64   Control registers. May be read but  *01244000
                                   will not be written                  01245000
                      ORG   PtBR_GPR_CRs                                01246000
PtBR_GPR_CR00         DS    F      CR 00                                01247000
PtBR_GPR_CR01         DS    F      CR 01                                01248000
PtBR_GPR_CR02         DS    F      CR 02                                01249000
PtBR_GPR_CR03         DS    F      CR 03                                01250000
PtBR_GPR_CR04         DS    F      CR 04                                01251000
PtBR_GPR_CR05         DS    F      CR 05                                01252000
PtBR_GPR_CR06         DS    F      CR 06                                01253000
PtBR_GPR_CR07         DS    F      CR 07                                01254000
PtBR_GPR_CR08         DS    F      CR 08                                01255000
PtBR_GPR_CR09         DS    F      CR 09                                01256000
PtBR_GPR_CR10         DS    F      CR 10                                01257000
PtBR_GPR_CR11         DS    F      CR 11                                01258000
PtBR_GPR_CR12         DS    F      CR 12                                01259000
PtBR_GPR_CR13         DS    F      CR 13                                01260000
PtBR_GPR_CR14         DS    F      CR 14                                01261000
PtBR_GPR_CR15         DS    F      CR 15                                01262000
PtBR_GPR_PSW          DS    CL8    PSW. May be read but only the       *01263000
                                   rightmost 4 bytes (word 2) will be  *01264000
                                   written                              01265000
                      ORG   PtBR_GPR_PSW                                01266000
PtBR_GPR_PSW_W1       DS    CL4    PSW word 1.                          01267000
PtBR_GPR_PSW_W2       DS    CL4    PSW word 2                           01268000
PtBR_GPR_Len          EQU   *-PtBR_GPR                                  01269000
.L0027                ANOP                                              01270000
                      AIF   ('&PtBR_GPR_EXT' EQ 'NO').L002B             01271000
                      AIF   ('&DSECT' EQ 'YES').L002C                   01272000
                      AIF   ('&PtBR_GPR_EXT' NE 'YES').L002B            01273000
PtBR_GPR_EXT          DS    0X                                          01274000
                      AGO   .L002D                                      01275000
.L002C                ANOP                                              01276000
PtBR_GPR_EXT          DSECT                                             01277000
.L002D                ANOP                                              01278000
                      DS    CL152  The first part of the union, the    *01279000
                                   old struct                           01280000
PtBR_GPR_PSWG         DS    CL16                                        01281000
                      ORG   PtBR_GPR_PSWG                               01282000
PtBR_GPR_PSWG_W1      DS    CL4                                         01283000
PtBR_GPR_PSWG_W2      DS    CL4                                         01284000
PtBR_GPR_PSWG_W3      DS    CL4                                         01285000
PtBR_GPR_PSWG_W4      DS    CL4                                         01286000
PtBR_GPR_EXT_Len      EQU   *-PtBR_GPR_EXT                              01287000
.L002B                ANOP                                              01288000
                      AIF   ('&PtBR_FPR' EQ 'NO').L002E                 01289000
                      AIF   ('&DSECT' EQ 'YES').L002F                   01290000
                      AIF   ('&PtBR_FPR' NE 'YES').L002E                01291000
.L002F                ANOP                                              01292000
*                                                                       01293000
* ********************************************************************  01294000
* * Structure for PT_Read_FPR and PT_Write_FPR.                      *  01295000
* ********************************************************************  01296000
*                                                                       01297000
*                                                                       01298000
                      AIF   ('&DSECT' EQ 'YES').L0030                   01299000
PtBR_FPR              DS    0F                                          01300000
                      AGO   .L0031                                      01301000
.L0030                ANOP                                              01302000
PtBR_FPR              DSECT                                             01303000
.L0031                ANOP                                              01304000
PtBR_FPR_CntlFPR      DS    BL2    Only used on write request           01305000
                      ORG   PtBR_FPR_CntlFPR                            01306000
PtBR_FPR_CntlFPR1     DS    B                                           01307000
*  Bit definitions:                                                     01308000
PtBR_FPR_WFPR0        EQU   X'80'  Write content of FPR 0               01309000
PtBR_FPR_WFPR1        EQU   X'40'  Write content of FPR 1               01310000
PtBR_FPR_WFPR2        EQU   X'20'  Write content of FPR 2               01311000
PtBR_FPR_WFPR3        EQU   X'10'  Write content of FPR 3               01312000
PtBR_FPR_WFPR4        EQU   X'08'  Write content of FPR 4               01313000
PtBR_FPR_WFPR5        EQU   X'04'  Write content of FPR 5               01314000
PtBR_FPR_WFPR6        EQU   X'02'  Write content of FPR 6               01315000
PtBR_FPR_WFPR7        EQU   X'01'  Write content of FPR 7               01316000
PtBR_FPR_CntlFPR2     DS    B                                           01317000
*  Bit definitions:                                                     01318000
PtBR_FPR_WFPR8        EQU   X'80'  Write content of FPR 8               01319000
PtBR_FPR_WFPR9        EQU   X'40'  Write content of FPR 9               01320000
PtBR_FPR_WFPR10       EQU   X'20'  Write content of FPR 10              01321000
PtBR_FPR_WFPR11       EQU   X'10'  Write content of FPR 11              01322000
PtBR_FPR_WFPR12       EQU   X'08'  Write content of FPR 12              01323000
PtBR_FPR_WFPR13       EQU   X'04'  Write content of FPR 13              01324000
PtBR_FPR_WFPR14       EQU   X'02'  Write content of FPR 14              01325000
PtBR_FPR_WFPR15       EQU   X'01'  Write content of FPR 15              01326000
                      ORG   PtBR_FPR_CntlFPR+2                          01327000
PtBR_FPR_CntlMisc     DS    BL2    Only used on write request           01328000
*  Bit definitions:                                                     01329000
PtBR_FPR_WFPC         EQU   X'80'  Write content of FPC                 01330000
                      DS    CL12   Reserved                             01331000
PtBR_FPR_FPRs         DS    CL128  Floating point registers             01332000
                      ORG   PtBR_FPR_FPRs                               01333000
PtBR_FPR_FPR00        DS    CL8    FPR 00                               01334000
PtBR_FPR_FPR01        DS    CL8    FPR 01                               01335000
PtBR_FPR_FPR02        DS    CL8    FPR 02                               01336000
PtBR_FPR_FPR03        DS    CL8    FPR 03                               01337000
PtBR_FPR_FPR04        DS    CL8    FPR 04                               01338000
PtBR_FPR_FPR05        DS    CL8    FPR 05                               01339000
PtBR_FPR_FPR06        DS    CL8    FPR 06                               01340000
PtBR_FPR_FPR07        DS    CL8    FPR 07                               01341000
PtBR_FPR_FPR08        DS    CL8    FPR 08                               01342000
PtBR_FPR_FPR09        DS    CL8    FPR 09                               01343000
PtBR_FPR_FPR10        DS    CL8    FPR 10                               01344000
PtBR_FPR_FPR11        DS    CL8    FPR 11                               01345000
PtBR_FPR_FPR12        DS    CL8    FPR 12                               01346000
PtBR_FPR_FPR13        DS    CL8    FPR 13                               01347000
PtBR_FPR_FPR14        DS    CL8    FPR 14                               01348000
PtBR_FPR_FPR15        DS    CL8    FPR 15                               01349000
PtBR_FPR_FPC          DS    CL4    Floating Point Control Register      01350000
PtBR_FPR_Len          EQU   *-PtBR_FPR                                  01351000
.L002E                ANOP                                              01352000
                      AIF   ('&PtBR_GPRH' EQ 'NO').L0032                01353000
                      AIF   ('&DSECT' EQ 'YES').L0033                   01354000
                      AIF   ('&PtBR_GPRH' NE 'YES').L0032               01355000
.L0033                ANOP                                              01356000
*                                                                       01357000
* ********************************************************************  01358000
* * Structure for PT_Read_GPRH PT_Write_GPRH.                           01359000
* ********************************************************************  01360000
*                                                                       01361000
*                                                                       01362000
                      AIF   ('&DSECT' EQ 'YES').L0034                   01363000
PtBR_GPRH             DS    0F                                          01364000
                      AGO   .L0035                                      01365000
.L0034                ANOP                                              01366000
PtBR_GPRH             DSECT                                             01367000
.L0035                ANOP                                              01368000
PtBR_GPRH_CntlGPRH    DS    BL2    Only used on write request           01369000
                      ORG   PtBR_GPRH_CntlGPRH                          01370000
PtBR_GPRH_CntlGPRH1   DS    B                                           01371000
*  Bit definitions:                                                     01372000
PtBR_GPRH_WGPRH0      EQU   X'80'  Write content of GPRH 0              01373000
PtBR_GPRH_WGPRH1      EQU   X'40'  Write content of GPRH 1              01374000
PtBR_GPRH_WGPRH2      EQU   X'20'  Write content of GPRH 2              01375000
PtBR_GPRH_WGPRH3      EQU   X'10'  Write content of GPRH 3              01376000
PtBR_GPRH_WGPRH4      EQU   X'08'  Write content of GPRH 4              01377000
PtBR_GPRH_WGPRH5      EQU   X'04'  Write content of GPRH 5              01378000
PtBR_GPRH_WGPRH6      EQU   X'02'  Write content of GPRH 6              01379000
PtBR_GPRH_WGPRH7      EQU   X'01'  Write content of GPRH 7              01380000
PtBR_GPRH_CntlGPRH2   DS    B                                           01381000
*  Bit definitions:                                                     01382000
PtBR_GPRH_WGPRH8      EQU   X'80'  Write content of GPRH 8              01383000
PtBR_GPRH_WGPRH9      EQU   X'40'  Write content of GPRH 9              01384000
PtBR_GPRH_WGPRH10     EQU   X'20'  Write content of GPRH10              01385000
PtBR_GPRH_WGPRH11     EQU   X'10'  Write content of GPRH11              01386000
PtBR_GPRH_WGPRH12     EQU   X'08'  Write content of GPRH12              01387000
PtBR_GPRH_WGPRH13     EQU   X'04'  Write content of GPRH13              01388000
PtBR_GPRH_WGPRH14     EQU   X'02'  Write content of GPRH14              01389000
PtBR_GPRH_WGPRH15     EQU   X'01'  Write content of GPRH15              01390000
                      ORG   PtBR_GPRH_CntlGPRH+2                        01391000
PtBR_GPRH_CntlMisc    DS    BL2    Only used on write request           01392000
                      DS    CL12   Reserved                             01393000
PtBR_GPRH_GPRHs       DS    CL64   GP High registers.                   01394000
                      ORG   PtBR_GPRH_GPRHs                             01395000
PtBR_GPRH_GPRH00      DS    F      GPRH 00                              01396000
PtBR_GPRH_GPRH01      DS    F      GPRH 01                              01397000
PtBR_GPRH_GPRH02      DS    F      GPRH 02                              01398000
PtBR_GPRH_GPRH03      DS    F      GPRH 03                              01399000
PtBR_GPRH_GPRH04      DS    F      GPRH 04                              01400000
PtBR_GPRH_GPRH05      DS    F      GPRH 05                              01401000
PtBR_GPRH_GPRH06      DS    F      GPRH 06                              01402000
PtBR_GPRH_GPRH07      DS    F      GPRH 07                              01403000
PtBR_GPRH_GPRH08      DS    F      GPRH 08                              01404000
PtBR_GPRH_GPRH09      DS    F      GPRH 09                              01405000
PtBR_GPRH_GPRH10      DS    F      GPRH 10                              01406000
PtBR_GPRH_GPRH11      DS    F      GPRH 11                              01407000
PtBR_GPRH_GPRH12      DS    F      GPRH 12                              01408000
PtBR_GPRH_GPRH13      DS    F      GPRH 13                              01409000
PtBR_GPRH_GPRH14      DS    F      GPRH 14                              01410000
PtBR_GPRH_GPRH15      DS    F      GPRH 15                              01411000
                      DS    CL8    Reserved                             01412000
PtBR_GPRH_Len         EQU   *-PtBR_GPRH                                 01413000
.L0032                ANOP                                              01414000
                      AIF   ('&PtBR_Block' EQ 'NO').L0036               01415000
                      AIF   ('&DSECT' EQ 'YES').L0037                   01416000
                      AIF   ('&PtBR_Block' NE 'YES').L0036              01417000
.L0037                ANOP                                              01418000
*                                                                       01419000
* ********************************************************************  01420000
* * Structure for PT_Read_Block and PT_Write_Block.                  *  01421000
* ********************************************************************  01422000
*                                                                       01423000
*                                                                       01424000
                      AIF   ('&DSECT' EQ 'YES').L0038                   01425000
PtBR_Block            DS    0F                                          01426000
                      AGO   .L0039                                      01427000
.L0038                ANOP                                              01428000
PtBR_Block            DSECT                                             01429000
.L0039                ANOP                                              01430000
PtBR_Block_AAddr      DS    A      address of area to read              01431000
PtBR_Block_ALen       DS    F      length of area to read               01432000
                      DS    CL8    Reserved                             01433000
PtBR_Block_Buf        DS    0C     area to read into or write from.    *01434000
                                   Must be at least PtBR_Block_ALen    *01435000
                                   bytes large                          01436000
PtBR_Block_Len        EQU   *-PtBR_Block                                01437000
.L0036                ANOP                                              01438000
                      AIF   ('&PtBR_Block64' EQ 'NO').L003A             01439000
                      AIF   ('&DSECT' EQ 'YES').L003B                   01440000
                      AIF   ('&PtBR_Block64' NE 'YES').L003A            01441000
PtBR_Block64          DS    0D                                          01442000
                      AGO   .L003C                                      01443000
.L003B                ANOP                                              01444000
PtBR_Block64          DSECT                                             01445000
.L003C                ANOP                                              01446000
PtBR_Block_AAddr64    DS    AD     address of area to read              01447000
PtBR_Block_ALen64     DS    F      length of area to read               01448000
                      DS    CL4    Reserved                             01449000
PtBR_Block_Buf64      DS    0C     area to read into or write from.    *01450000
                                   Must be at least PtBR_Block_ALen    *01451000
                                   bytes large                          01452000
PtBR_Block64_Len      EQU   *-PtBR_Block64                              01453000
.L003A                ANOP                                              01454000
                      AIF   ('&PtBR_D' EQ 'NO').L003D                   01455000
                      AIF   ('&DSECT' EQ 'YES').L003E                   01456000
                      AIF   ('&PtBR_D' NE 'YES').L003D                  01457000
.L003E                ANOP                                              01458000
*                                                                       01459000
* ********************************************************************  01460000
* * Structure for PT_Read_D and PT_Write_D.                          *  01461000
* ********************************************************************  01462000
*                                                                       01463000
*                                                                       01464000
                      AIF   ('&DSECT' EQ 'YES').L003F                   01465000
PtBR_D                DS    0F                                          01466000
                      AGO   .L0040                                      01467000
.L003F                ANOP                                              01468000
PtBR_D                DSECT                                             01469000
.L0040                ANOP                                              01470000
PtBR_D_Wordptr        DS    A      Address of fullword of data          01471000
PtBR_D_Word           DS    F      fullword of data at specified       *01472000
                                   address for a read request or the   *01473000
                                   data to be written to the specified *01474000
                                   address for a write request          01475000
PtBR_D_Len            EQU   *-PtBR_D                                    01476000
.L003D                ANOP                                              01477000
                      AIF   ('&PtBR_D64' EQ 'NO').L0041                 01478000
                      AIF   ('&DSECT' EQ 'YES').L0042                   01479000
                      AIF   ('&PtBR_D64' NE 'YES').L0041                01480000
PtBR_D64              DS    0D                                          01481000
                      AGO   .L0043                                      01482000
.L0042                ANOP                                              01483000
PtBR_D64              DSECT                                             01484000
.L0043                ANOP                                              01485000
PtBR_D_Wordptr64      DS    AD     Address of fullword of data          01486000
PtBR_D_Word64         DS    F      fullword of data at specified       *01487000
                                   address for a read request or the   *01488000
                                   data to be written to the specified *01489000
                                   address for a write request          01490000
PtBR_D64_Len          EQU   *-PtBR_D64                                  01491000
.L0041                ANOP                                              01492000
                      AIF   ('&PtBR_I' EQ 'NO').L0044                   01493000
                      AIF   ('&DSECT' EQ 'YES').L0045                   01494000
                      AIF   ('&PtBR_I' NE 'YES').L0044                  01495000
.L0045                ANOP                                              01496000
*                                                                       01497000
* ********************************************************************  01498000
* * Structure for PT_Read_I and PT_Write_I.                          *  01499000
* ********************************************************************  01500000
*                                                                       01501000
*                                                                       01502000
                      AIF   ('&DSECT' EQ 'YES').L0046                   01503000
PtBR_I                DS    0F                                          01504000
                      AGO   .L0047                                      01505000
.L0046                ANOP                                              01506000
PtBR_I                DSECT                                             01507000
.L0047                ANOP                                              01508000
PtBR_I_Wordptr        DS    A      Address of fullword of program data  01509000
PtBR_I_Word           DS    F      fullword of program data at         *01510000
                                   specified address for a read        *01511000
                                   request or the program data to be   *01512000
                                   written to the specified address    *01513000
                                   for a write request                  01514000
PtBR_I_Len            EQU   *-PtBR_I                                    01515000
.L0044                ANOP                                              01516000
                      AIF   ('&PtBR_I64' EQ 'NO').L0048                 01517000
                      AIF   ('&DSECT' EQ 'YES').L0049                   01518000
                      AIF   ('&PtBR_I64' NE 'YES').L0048                01519000
PtBR_I64              DS    0D                                          01520000
                      AGO   .L004A                                      01521000
.L0049                ANOP                                              01522000
PtBR_I64              DSECT                                             01523000
.L004A                ANOP                                              01524000
PtBR_I_Wordptr64      DS    AD     Address of fullword of program data  01525000
PtBR_I_Word64         DS    F      fullword of program data at         *01526000
                                   specified address for a read        *01527000
                                   request or the program data to be   *01528000
                                   written to the specified address    *01529000
                                   for a write request                  01530000
PtBR_I64_Len          EQU   *-PtBR_I64                                  01531000
.L0048                ANOP                                              01532000
                      AIF   ('&PtBR_U' EQ 'NO').L004B                   01533000
                      AIF   ('&DSECT' EQ 'YES').L004C                   01534000
                      AIF   ('&PtBR_U' NE 'YES').L004B                  01535000
.L004C                ANOP                                              01536000
*                                                                       01537000
* ********************************************************************  01538000
* * Structure for PT_Read_U.                                         *  01539000
* ********************************************************************  01540000
*                                                                       01541000
*                                                                       01542000
                      AIF   ('&DSECT' EQ 'YES').L004D                   01543000
PtBR_U                DS    0F                                          01544000
                      AGO   .L004E                                      01545000
.L004D                ANOP                                              01546000
PtBR_U                DSECT                                             01547000
.L004E                ANOP                                              01548000
PtBR_U_NumOffsets     DS    F      Number of entries in offset/control *01549000
                                   word array                           01550000
                      DS    CL4    Reserved                             01551000
PtBR_U_OWArray        DS    CL8    Array of offsets and control words   01552000
                      ORG   PtBR_U_OWArray                              01553000
PtBR_U_Offset         DS    F      Offset of fullword of control       *01554000
                                   information                          01555000
PtBR_U_Word           DS    F      fullword of control information     *01556000
                                   from user area in the debugged      *01557000
                                   process                              01558000
PtBR_U_Len            EQU   *-PtBR_U                                    01559000
.L004B                ANOP                                              01560000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    01561000
                      AIF   ('&LIST' EQ 'YES').P4                       01562000
.P3                   ANOP                                              01563000
                      POP   PRINT                                       01564000
.P4                   ANOP                                              01565000
.P_EXIT               ANOP                                              01566000
                      MEND                                              01567000
**/ BPXYPTRC_2:;                                                        01568000
* %BPXYPTRC_INCLUDED = 'YES';                                           01569000
* %DCL ZCBPRINT CHAR EXT;                                               01570000
* %DEACTIVATE ZCBPRINT;                                                 01571000
* %DCL BPXYPTRC_LIST CHAR EXT;                                          01572000
* %DEACTIVATE BPXYPTRC_LIST;                                            01573000
* %IF BPXYPTRC_LIST ^= 'NO' &                                           01574000
*    ZCBPRINT ^= 'NO' %THEN                                             01575000
*   %GOTO BPXYPTRC_3;                                                   01576000
*   @LIST PUSH NOECHO;                                                  01577000
*   @LIST NOASSEMBLE NOECHO;                                            01578000
*   @LIST OFF C NOECHO;                                                 01579000
* %BPXYPTRC_3:;                                                         01580000
*/* Start of PL/X Source                                             */ 01581000
*%IF PTLDBASE='' %THEN                                                  01582000
*  %DO;                                                                 01583000
*    %PTLDBASE='Based' ;                                                01584000
*  %END;                                                                01585000
* %IF PTLDBASE='LOCAL' %THEN                                            01586000
*   %DO;                                                                01587000
*    %PTLDBASE='FIXED(32) Bdy(Word)' ;                                  01588000
*   %END;                                                               01589000
*                                                                       01590000
*%IF PTPTBASE='' %THEN                                                  01591000
*  %DO;                                                                 01592000
*    %PTPTBASE='Based' ;                                                01593000
*  %END;                                                                01594000
* %IF PTPTBASE='LOCAL' %THEN                                            01595000
*   %DO;                                                                01596000
*    %PTPTBASE='FIXED(32) Bdy(Word)' ;                                  01597000
*   %END;                                                               01598000
*                                                                       01599000
*%IF PTPXBASE='' %THEN                                                  01600000
*  %DO;                                                      /* @02A*/  01601000
*    %PTPXBASE='Based' ;                                     /* @02A*/  01602000
*  %END;                                                     /* @02A*/  01603000
* %IF PTPXBASE='LOCAL' %THEN                                            01604000
*   %DO;                                                     /* @02A*/  01605000
*    %PTPXBASE='FIXED(32) Bdy(DWord)' ;                      /* @02A*/  01606000
*   %END;                                                    /* @02A*/  01607000
*                                                                       01608000
*%IF PTPhHEAD='' %THEN                                                  01609000
*  %DO;                                                      /* @02A*/  01610000
*    %PTPHHEAD='Based' ;                                     /* @02A*/  01611000
*  %END;                                                     /* @02A*/  01612000
* %IF PTPHHEAD='LOCAL' %THEN                                            01613000
*   %DO;                                                     /* @02A*/  01614000
*    %PTPHHEAD='FIXED(32) Bdy(DWord)' ;                      /* @02A*/  01615000
*   %END;                                                    /* @02A*/  01616000
*                                                                       01617000
*%IF PTEXBASE='' %THEN                                                  01618000
*  %DO;                                                                 01619000
*    %PTEXBASE='Based' ;                                                01620000
*  %END;                                                                01621000
* %IF PTEXBASE='LOCAL' %THEN                                            01622000
*   %DO;                                                                01623000
*    %PTEXBASE='FIXED(32) Bdy(DWord)' ;                      /* @D9C*/  01624000
*   %END;                                                               01625000
*                                                                       01626000
*%IF PTPIBASE='' %THEN                                                  01627000
*  %DO;                                                                 01628000
*    %PTPIBASE='Based' ;                                                01629000
*  %END;                                                                01630000
* %IF PTPIBASE='LOCAL' %THEN                                            01631000
*   %DO;                                                                01632000
*    %PTPIBASE='FIXED(32) Bdy(DWord)' ;                      /* @D9C*/  01633000
*   %END;                                                               01634000
*                                                                       01635000
*%IF PTBRBASE='' %THEN                                        /* @D7A*/ 01636000
*  %DO;                                                       /* @D7A*/ 01637000
*    %PTBRBASE='Based' ;                                      /* @D7A*/ 01638000
*  %END;                                                      /* @D7A*/ 01639000
*                                                                       01640000
*/********************************************************************/ 01641000
*/*                                                                  */ 01642000
*/* Ptrace PT_LDINFO return structure.  Note that this maps one      */ 01643000
*/* element, corresponding to one load module.  Each element         */ 01644000
*/* consists of a fixed portion, and a variable portion (the path    */ 01645000
*/* name and member name character strings).  The character strings  */ 01646000
*/* are terminated with a null value (X'00').  Each loader info      */ 01647000
*/* element immediately follows the last null terminator for the     */ 01648000
*/* previous element.  The first full word of each element is an     */ 01649000
*/* offset to the next element.  Thus, the start of the next element */ 01650000
*/* can be specified as follows:                                     */ 01651000
*/*                                                                  */ 01652000
*/*     NextLDInfo = Addr(PtLDInfo)+PtLDInfoNext                     */ 01653000
*/*                                                                  */ 01654000
*/********************************************************************/ 01655000
*DCL                             /* PT_LDINFO return structure       */ 01656000
* 1 PtLDInfo          PTLDBASE,                                         01657000
*  3 PtLDFixedArea,                                                     01658000
*   5 PtLDInfoNext    Fixed(32), /* Offset to next element           */ 01659000
*   5 PtLDInfoFD      Fixed(32), /* File descriptor for this load       01660000
*                                   module (not used)                */ 01661000
*   5 PtLDTextOrg       Ptr(31), /* Program text origin address         01662000
*                                   (i.e. load point address)        */ 01663000
*   5 PtLDTextSize    Fixed(32), /* Length of text                   */ 01664000
*   5 PtLDTextSubpool   Char(1), /* Subpool where text is loaded     */ 01665000
*   5 PtLDTextFlags      Bit(8), /* Text related flags               */ 01666000
*    7 PtLDTextWrite     Bit(1), /* 0 = text can be read but not        01667000
*                                   written into                        01668000
*                                   1 = text can be read and written    01669000
*                                   into                             */ 01670000
*    7 PtLDTextMVS       Bit(1), /* 0 = File system load module         01671000
*                                   1 = MVS load module          @P2A*/ 01672000
*    7 PtLDTextExt       Bit(1), /* 0 = Only 1 text extent              01673000
*                                   1 = More than one text extent.      01674000
*                                   First extent is in this element,    01675000
*                                   extent 2 - n are in the PtLDInfoExt 01676000
*                                   area                         @P3A*/ 01677000
*    7 *                 Bit(5), /* Reserved                     @P3C*/ 01678000
*   5 PtLDOffExt      Fixed(16), /* Offset from this element to element 01679000
*                                   extension. 0 if there is no         01680000
*                                   extension for this element   @P3C*/ 01681000
*   5 PtLDDataOrg       Ptr(31), /* Program data origin address         01682000
*                                   (not used)                       */ 01683000
*   5 PtLDDataSize    Fixed(32), /* Length of data (not used)        */ 01684000
*   5 PtLDDataSubpool  Fixed(8), /* Subpool where data is loaded        01685000
*                                   (not used)                       */ 01686000
*   5 PtLDDataFlags      Bit(8), /* Data related flags (not used)    */ 01687000
*   5 *               Fixed(16), /* Reserved                         */ 01688000
*  3 PtLDVarArea,                                                       01689000
*   5 PtLDPathName      Char(*), /* Fully qualified path name of        01690000
*                                   load module                      */ 01691000
*    7 PtLDMemberName   Char(*); /* Member name of load module          01692000
*                                   (not used)                       */ 01693000
*                                                                       01694000
*  /* PT_LD64Info area, to succeed the one above */                     01695000
*DCL                             /* PT_LD64INFO return structure @DEA*/ 01696000
* 1 PtLD64Info          PTLDBASE,                                       01697000
*  3 PtLD64FixedArea,                                                   01698000
*   5 PtLD64InfoNext   Fixed(32),  /* Offset to next element         */ 01699000
*   5 *                Fixed(32),  /* Reserved */                       01700000
*   5 PtLD64TextOrg      Ptr(64), /* Program text origin address        01701000
*                                   (i.e. load point address)        */ 01702000
*   5 PtLD64TextSize    Fixed(64), /* Length of text                 */ 01703000
*   5 PtLD64TextSubpool   Char(1), /* Subpool where text is loaded   */ 01704000
*   5 PtLD64TextFlags      Bit(8), /* Text related flags             */ 01705000
*    7 PtLD64TextWrite     Bit(1), /* 0 = text can be read but not      01706000
*                                   written into                        01707000
*                                   1 = text can be read and written    01708000
*                                   into                           */   01709000
*    7 PtLD64TextMVS       Bit(1), /* 0 = File system load module       01710000
*                                   1 = MVS load module              */ 01711000
*    7 PtLD64TextExt       Bit(1), /* 0 = Only 1 text extent            01712000
*                                   1 = More than one text extent.      01713000
*                                   First extent is in this element,    01714000
*                                   extent 2 - n are in the PtLDInfoExt 01715000
*                                   area                             */ 01716000
*    7 *                 Bit(5), /* Reserved                         */ 01717000
*   5 PtLD64OffExt    Fixed(16), /* Offset from this element to element 01718000
*                                   extension. 0 if there is no         01719000
*                                   extension for this element       */ 01720000
*   5 *               Fixed(32), /* Reserved                         */ 01721000
*  3 PtLD64VarArea,                                                     01722000
*   5 PtLD64PathName      Char(*); /* Fully qualified path name of      01723000
*                                   load module                      */ 01724000
*                                                                       01725000
*                                                                       01726000
*DCL                             /* PT_LDINFO extension          @P3A*/ 01727000
* 1 PtLDInfoExt       Based(Addr(PtLDInfo)+PtLDOffExt), /*       @P3A*/ 01728000
*  3 PtLDInfoNumTextExt Fixed(15), /* Number of additional text extents 01729000
*                                   in the following arrays that are    01730000
*                                   meaningful, up to 15 in this area,  01731000
*                                   for a total of 16            @P3A*/ 01732000
*  3 *                  Fixed(15), /* reserved                   @P3A*/ 01733000
*  3 PtLDTextOrgExt(15) Ptr(31), /* Program text origin address         01734000
*                                   (i.e. load point address)    @P3A*/ 01735000
*  3 PtLDTextSizeExt(15) Fixed(32); /* Length of text            @P3A*/ 01736000
*                                                                       01737000
*DCL                             /* PT_LD64INFO extension        @DEA*/ 01738000
* 1 PtLD64InfoExt       Based(Addr(PtLD64Info)+PtLD64OffExt),           01739000
*  3 PtLD64InfoNumTextExt Fixed(32),/*Number of additional text extents 01740000
*                                   in the following arrays that are    01741000
*                                   meaningful, up to 15 in this area,  01742000
*                                   for a total of 16                */ 01743000
*  3 *                  Fixed(32), /* reserved                       */ 01744000
*  3 PtLD64TextOrgExt(15) Ptr(64), /* Program text origin address       01745000
*                                   (i.e. load point address)        */ 01746000
*  3 PtLD64TextSizeExt(15) Fixed(64); /* Length of text              */ 01747000
*                                                                       01748000
*                                                                       01749000
*DCL                                                                    01750000
*  PtLDNullTerm     Fixed(8)  Constant(0);  /* Null terminator for      01751000
*                                              character strings     */ 01752000
*/********************************************************************/ 01753000
*/*                                                                  */ 01754000
*/* Ptrace thread information return structure.  Note that this      */ 01755000
*/* maps one element, corresponding to one thread.                   */ 01756000
*/*                                                                  */ 01757000
*/* Note: the only valid information for a dead thread is:           */ 01758000
*/*                                                                  */ 01759000
*/*   PTPTNEXT, PTPTTHID, PTPTSTATEACTIVE=0, PTPTKERNELPTHREAD,      */ 01760000
*/*   PTPTEXITSTATUS                                                 */ 01761000
*/********************************************************************/ 01762000
*DCL                         /* PT_THREAD_INFO return structure  @D2A*/ 01763000
* 1 PtptInfo    PTPTBASE,                                     /* @D2A*/ 01764000
*   3 PtptNext   Ptr(31),    /* Offset to next element           @D2A*/ 01765000
*   3 PtptTHID   Char(8),    /* Thread ID                        @D2A*/ 01766000
*   3 PtptReserved Char(16), /* Reserved                         @D2A*/ 01767000
*   3 PtptState  Bit(32),    /* Thread state flags               @D2A*/ 01768000
*     5 PtptState1 Bit(8),   /* Thread state flag byte           @D2A*/ 01769000
*       7 PtptStateActive Bit(1),                             /* @D2A*/ 01770000
*                                 /* 0 = thread is dead          @D2A*/ 01771000
*                                 /* 1 = thread is active        @D2A*/ 01772000
*       7 PtptStateAsync  Bit(1),                             /* @D2A*/ 01773000
*                                 /* 1 = thread is asynchronous  @D2A*/ 01774000
*                                 /*  (is also active but not    @D2A*/ 01775000
*                                 /*  yet running)               @D2A*/ 01776000
*       7 PtptStateCancelPend Bit(1),                         /* @D2A*/ 01777000
*                                  /* 1 = cancel is pending      @D2A*/ 01778000
*     5 PtptState2 Bit(8),   /* Thread state flag byte           @D2A*/ 01779000
*     5 PtptState3 Bit(8),   /* Thread state flag byte           @D2A*/ 01780000
*     5 PtptState4 Bit(8),   /* Thread state flag byte           @D2A*/ 01781000
*   3 PtptKernelAttr Bit(32),   /* Thread kernel attributes      @D2A*/ 01782000
*     5 PtptKernel1 Bit(8),   /* Thread kernel attribute byte    @D2A*/ 01783000
*       7 PtptKernelDetach Bit(1),                                      01784000
*                               /* 0 = thread is not detached    @D2A*/ 01785000
*                               /* 1 = thread is detached        @D2A*/ 01786000
*       7 PtptKernelMedium Bit(1),                                      01787000
*                               /* 0 = thread is heavyweight     @D2A*/ 01788000
*                               /* 1 = thread is mediumweight    @D2A*/ 01789000
*       7 PtptKernelAsync  Bit(1),                                      01790000
*                               /* 0 = thread is synchronous     @D2A*/ 01791000
*                               /* 1 = thread is asynchronous    @D2A*/ 01792000
*       7 PtptKernelPthread Bit(1),                                     01793000
*                               /* 1 = thread is created via     @D2A*/ 01794000
*                               /*     pthread create            @D2A*/ 01795000
*     5 PtptKernel2 Bit(8),   /* Thread kernel attribute byte    @D2A*/ 01796000
*       7 PtptKernelHold   Bit(1),                                      01797000
*                               /* 1 = thread is held            @D2A*/ 01798000
*     5 PtptKernel3 Bit(8),   /* Reserved                        @D2A*/ 01799000
*     5 PtptKernel4 Bit(8),   /* Reserved                        @D2A*/ 01800000
*   3 PtptExitStatus Char(4),                                 /* @D2A*/ 01801000
*                               /* Thread exit status if dead    @D2A*/ 01802000
*                               /* for amode 31 pthread or       @P6A*/ 01803000
*                               /* Low part of thread exit       @P6A*/ 01804000
*                               /* status                        @P6A*/ 01805000
*                               /* for amode 64 pthread          @P6A*/ 01806000
*                               /* (PtptStateActive = 0)         @D2A*/ 01807000
*   3 PtptPendingSigmask Bit(64),                             /* @D2A*/ 01808000
*                             /* Mask of pending signals         @D2A*/ 01809000
*                             /* (bit 0 represents signal 1)     @D2A*/ 01810000
*                             /* (bit 63 represents signal 64)   @D2A*/ 01811000
*   3 PtptExitStatusHigh Char(4),                             /* @P6A*/ 01812000
*                               /* Thread exit status if dead    @P6A*/ 01813000
*                               /* High part of thread exit      @P6A*/ 01814000
*                               /* status                        @P6A*/ 01815000
*                               /* for amode 64 pthread          @P6A*/ 01816000
*                               /* (PtptStateActive = 0)         @P6A*/ 01817000
*   3 *                  Char(4); /* reserved                    @P6A*/ 01818000
*/********************************************************************/ 01819000
*/*                                                                  */ 01820000
*/* Ptrace thread information extended structure. Note that this     */ 01821000
*/* maps one element, corresponding to one thread. PtpxInfo maps     */ 01822000
*/* exactly to PtPtInfo                                              */ 01823000
*/*                                                                  */ 01824000
*/*                                                                  */ 01825000
*/*                                                                  */ 01826000
*/* Note: the only valid information for a dead thread is:           */ 01827000
*/*                                                                  */ 01828000
*/*   PTPXNEXT, PTPXTHID, PTPXSTATEACTIVE=0, PTPXKERNELPTHREAD,      */ 01829000
*/*   PTPXEXITSTATUS                                                 */ 01830000
*/********************************************************************/ 01831000
*DCL 1 PTphInfo    PTPhHEAD, /* PT_THREAD_INFO_EXTENDED header          01832000
*                               information                      @02C*/ 01833000
* 3 PtPhInfoBase Char(PtPT#Length) BDY(WORD),                 /* @DCC*/ 01834000
*                                  /* PtphInfoBase contains information 01835000
*                                      about the process and pointers   01836000
*                                      to the next array of thread      01837000
*                                      info                      @02A*/ 01838000
*   5 PtPhId     Char(4),    /* Acronym                          @02A*/ 01839000
*   5 PTPhNext   Ptr(31),    /* Address of the next PtPhInfo     @02A*/ 01840000
*   5 PtPhPtpxOff Ptr(31),   /* Offset of first Ptpx in this chunk      01841000
*                               of storage                       @02A*/ 01842000
*   5 PTPhPid    Fixed(32),  /* Process id of the threads        @02A*/ 01843000
*   5 PTPhPendingSigmask Bit(64), /* Signals pending at the process     01844000
*                                                                @02A*/ 01845000
*   5 PTPhBlockedSigmask Bit(64), /* blocked signals at process  @02A*/ 01846000
*   5 PtPhThreadNum Fixed(32), /* Total number of threads reported      01847000
*                                in chain                        @02A*/ 01848000
*   5 PtPhTnum      char(4),   /* Threads in the Current buffer  @02A*/ 01849000
*   5 PtPhPtPxLen   Fixed(32), /* Length of the PtPx in this buffer     01850000
*                                                                @02A*/ 01851000
*   5 *             Char(4)  ; /* Reserved                       @02A*/ 01852000
*DCL 1 PTPXInfo    PTPXBASE, /* PT_THREAD_INFO_EXTENDED maps a          01853000
*                               single entry                     @02A*/ 01854000
* 3 PtPxInfoBase,                                                       01855000
*   5 PTPXNext   Ptr(31),    /* Offset to next element           @02A*/ 01856000
*   5 PTPXTHID   Char(8),    /* Thread ID                        @02A*/ 01857000
*   5 PTPXTcb    Ptr(31),    /* Tcb address for this process     @02A*/ 01858000
*   5 PTPXOtcb   Ptr(31),    /* Otcb address for this process    @02A*/ 01859000
*   5 PTPXBlockedSigmask Bit(64), /* blocked signals             @02A*/ 01860000
*   5 PTPXState  Bit(32),    /* Thread state flags               @02A*/ 01861000
*     7 PTPXState1 Bit(8),   /* Thread state flag byte           @02A*/ 01862000
*       9 PTPXStateActive Bit(1), /* 0 = thread is dead          @02A*/ 01863000
*                                 /* 1 = thread is active        @02A*/ 01864000
*       9 PTPXStateAsync  Bit(1), /* 1 = N/A                     @02A*/ 01865000
*                                 /*  (is also active but not    @02A*/ 01866000
*                                 /*  yet running)               @02A*/ 01867000
*       9 PTPXStateCancelPend Bit(1),                         /* @02A*/ 01868000
*                                  /* 1 = cancel is pending      @02A*/ 01869000
*     7 PTPXState2 Bit(8),      /* Thread state flag byte        @02A*/ 01870000
*     7 PTPXState3 Bit(8),      /* Thread state flag byte        @02A*/ 01871000
*     7 PTPXState4 Bit(8),      /* Thread state flag byte        @02A*/ 01872000
*   5 PTPXKernelAttr Bit(32),   /* Thread kernel attrtes         @02A*/ 01873000
*     7 PTPXKernel1 Bit(8),     /* Thread kernel attribute byte  @02A*/ 01874000
*       9 PTPXKernelDetach Bit(1),                                      01875000
*                               /* 0 = thread is not detached    @02A*/ 01876000
*                               /* 1 = thread is detached        @02A*/ 01877000
*       9 PTPXKernelMedium Bit(1),                                      01878000
*                               /* 0 = thread is heavyweight     @02A*/ 01879000
*                               /* 1 = thread is mediumweight    @02A*/ 01880000
*       9 PTPXKernelAsync  Bit(1),                                      01881000
*                               /* 0 = thread is synchronous     @02A*/ 01882000
*                               /* 1 = thread is asynchronous    @02A*/ 01883000
*       9 PTPXKernelPthread Bit(1),                                     01884000
*                               /* 1 = thread is created via     @02A*/ 01885000
*                               /*     pthread create            @02A*/ 01886000
*     7 PTPXKernel2 Bit(8),      /* Thread kernel attribute byte @02A*/ 01887000
*       9 PTPXKernelHold   Bit(1),                                      01888000
*                               /* 1 = thread is held            @02A*/ 01889000
*     7 PTPXKernel3 Bit(8),     /* Reserved                      @02A*/ 01890000
*     7 PTPXKernel4 Bit(8),     /* Reserved                      @02A*/ 01891000
*   5 PTPXExitStatus Char(4),                                 /* @02A*/ 01892000
*                               /* Thread exit status if dead    @02A*/ 01893000
*                               /* for amode 31 pthread or       @P6A*/ 01894000
*                               /* Low part of thread exit       @P6A*/ 01895000
*                               /* status                        @P6A*/ 01896000
*                               /* for amode 64 pthread          @P6A*/ 01897000
*                               /* (PTPXStateActive = 0)         @02A*/ 01898000
*   5 PTPXPendingSigmask Bit(64), /* Mask of pending signals is set)    01899000
*                                    (bit 0 represents signal 1) @02A*/ 01900000
*   5 PTPXPid      Fixed(32),   /* Process id for this Thid      @02A*/ 01901000
*   5 PTPXAsid     Fixed(16),                                 /* @02A*/ 01902000
*   5 PTPXFlags      Bit(16),   /* Thread related flags          @02A*/ 01903000
*     7 PtPxIpt      Bit(1),    /* Ipt Thread                    @02A*/ 01904000
*     7 PtPxInComplete Bit(1),  /* The reported thread information is   01905000
*                                  incomplete                    @02A*/ 01906000
*   5 PTPXOapb     Ptr(31),     /* Pointer to the Oapb           @02A*/ 01907000
*   5 PTPXExitStatusHigh Char(4);                             /* @P6A*/ 01908000
*                               /* For a dead thread             @P6A*/ 01909000
*                               /* (PTPXStateActive = 0)         @P6A*/ 01910000
*                               /* if AMODE 64 pthread this is   @P6A*/ 01911000
*                               /* the high half of the thread   @P6A*/ 01912000
*                               /* exit status. If an AMODE 31   @P6A*/ 01913000
*                               /* pthread this field is unused  @P6A*/ 01914000
*/********************************************************************/ 01915000
*/*                                                                  */ 01916000
*/* Ptrace explain information return structure.                     */ 01917000
*/*                                                                  */ 01918000
*/********************************************************************/ 01919000
*DCL                         /* PT_EXPLAIN return structure      @D3A*/ 01920000
* 1 PtExInfo    PTEXBASE,                                     /* @D3A*/ 01921000
*   3 PtExInfo31,                                             /* @D3A*/ 01922000
*    5 PtExReg1   Fixed(32), /* Register  1 at CEEEVDBG entry    @D3A*/ 01923000
*    5 PtExReg12  Fixed(32), /* Register 12 at CEEEVDBG entry    @D3A*/ 01924000
*    5 PtExReg13  Fixed(32), /* Register 13 at CEEEVDBG entry    @D3A*/ 01925000
*   3 *           Fixed(32), /* reserved                         @D9A*/ 01926000
*   3 PtExInfo64,                                             /* @D3A*/ 01927000
*    5 PtExG64R1  Fixed(64), /* Register  1 at CEEEVDBG entry    @D9A*/ 01928000
*    5 PtExG64R12 Fixed(64), /* Register 12 at CEEEVDBG entry    @D9A*/ 01929000
*    5 PtExG64R13 Fixed(64); /* Register 13 at CEEEVDBG entry    @D9A*/ 01930000
*/********************************************************************/ 01931000
*/*                                                                  */ 01932000
*/* Ptrace program recovery parameters structure.                    */ 01933000
*/* (This area is provided by the caller)                            */ 01934000
*/*                                                                  */ 01935000
*/********************************************************************/ 01936000
*DCL                             /* Program recovery parameters      */ 01937000
* 1 PtPICParms        PTPIBASE,                                         01938000
*  3 PtPICRegisters     Ptr(31), /* Address of GPRs at time of          01939000
*                                   interrupt                        */ 01940000
*  3 PtPICPSW           Ptr(31), /* Address of PSW at time of           01941000
*                                   interrupt                        */ 01942000
*  3 PtPICIntCode     Fixed(16), /* Program interrupt code           */ 01943000
*  3 PtPICSigNumber   Fixed(16), /* Return value indicating signal      01944000
*                                   number that should be raised        01945000
*                                   by the caller if the                01946000
*                                   PtPICUseSigNum flag is set       */ 01947000
*  3 PtPICFlags         Bit(32), /* Flags                        @D5C*/ 01948000
*   5 PtPICICModified   Bit(1),  /* 0 = The instruction counter         01949000
*                                   portion of the PSW pointed to by    01950000
*                                   the PtPICPSW field has not been     01951000
*                                   modified                            01952000
*                                   1 = The instruction counter         01953000
*                                   portion of the PSW pointed to by    01954000
*                                   the PtPICPSW field has been         01955000
*                                   modified - continue execution       01956000
*                                   at this modified address         */ 01957000
*   5 PtPICRegsModified Bit(1),  /* 0 = The registers pointed to        01958000
*                                   by the PtPICRegisters field have    01959000
*                                   not been modified                   01960000
*                                   1 = The registers pointed to        01961000
*                                   by the PtPICRegisters field have    01962000
*                                   been modified                    */ 01963000
*   5 PtPICUseSigNum    Bit(1),  /* 1 = Raise the signal number         01964000
*                                   returned in the PtPICSigNumber      01965000
*                                   field upon return                */ 01966000
*   5 PtPICBypassSig    Bit(1),  /* 1 = Do not raise any signal upon    01967000
*                                   return                           */ 01968000
*   5 PtPICILCExists    Bit(1),  /* 1 = PtPICILC field is present       01969000
*                                                                @D5A*/ 01970000
*   5 PtPICHiRegsExists Bit(1),  /* 1 = The PtPICHiRegisters field      01971000
*                                   is present                   @D8A*/ 01972000
*   5 PtPICHiRegsModified Bit(1),/* 0 = The registers pointed to        01973000
*                                   by the PtPICHiRegisters field have  01974000
*                                   not been modified                   01975000
*                                   1 = The registers pointed to        01976000
*                                   by the PtPICHiRegisters field have  01977000
*                                   been modified                @D8A*/ 01978000
*   5 PtPICAmode64      Bit(1),  /* Use 64 bit addresses for PSW and    01979000
*                                   registers                    @D9A*/ 01980000
*   5 *                 Bit(24), /* Reserved                     @D9C*/ 01981000
*  3 PtPICAbendCode     Bit(32), /* Abend code or zero               */ 01982000
*   5 PtPICAbendFlags   Bit(8),  /* Abend code flags                 */ 01983000
*   5 PtPICAbendCC      Bit(24), /* System completion code (first 12    01984000
*                                   bits) and user completion code      01985000
*                                   (second 12 bits)                 */ 01986000
*  3 PtPICAbendReason Fixed(32), /* Abend reason code or zero        */ 01987000
*  3 PtPICILC         Fixed(8),  /* Instruction length code (only       01988000
*                                   present if PtPICILCExists flag      01989000
*                                   is set)                      @D5A*/ 01990000
*  3 PtPICReserved      Char(3), /* Reserved                     @D8C*/ 01991000
*  3 PtPICHiRegisters   Ptr(31), /* Address of high GPRs at time of     01992000
*                                   interrupt                    @D8A*/ 01993000
*  3 PtPICRegisters64   Ptr(64), /* Address of GPRs at time of          01994000
*                                   interrupt - Amode 64         @D9A*/ 01995000
*  3 PtPICPSW64         Ptr(64), /* Address of PSW at time of           01996000
*                                   interrupt - Amode 64         @D9A*/ 01997000
*  3 PtPICHiRegisters64 Ptr(64), /* Address of high GPRs at time of     01998000
*                                   interrupt - Amode 64         @D9A*/ 01999000
*  3 PtPICRsvd          Char(8); /* Reserved. This area is provided     02000000
*                                   by the caller and may not be        02001000
*                                   present in old releases of code     02002000
*                                                                @D9C*/ 02003000
*/********************************************************************/ 02004000
*/*                                                                  */ 02005000
*/* Ptrace request parameter definitions.                            */ 02006000
*/*                                                                  */ 02007000
*/********************************************************************/ 02008000
*DCL                                                                    02009000
*    PT_TRACE_ME    Fixed(32) Constant(00)  /* Debug this process    */ 02010000
*   ,PT_READ_I      Fixed(32) Constant(01)  /* Read a full word      */ 02011000
*   ,PT_READ_D      Fixed(32) Constant(02)  /* Read a full word      */ 02012000
*   ,PT_READ_U      Fixed(32) Constant(03)  /* Read control info     */ 02013000
*   ,PT_WRITE_I     Fixed(32) Constant(04)  /* Write a full word     */ 02014000
*   ,PT_WRITE_D     Fixed(32) Constant(05)  /* Write a full word     */ 02015000
*   ,PT_CONTINUE    Fixed(32) Constant(07)  /* Continue the process  */ 02016000
*   ,PT_KILL        Fixed(32) Constant(08)  /* Terminate the process */ 02017000
*   ,PT_READ_GPR    Fixed(32) Constant(11)  /* Read GPR, CR, PSW     */ 02018000
*   ,PT_READ_FPR    Fixed(32) Constant(12)  /* Read FPR              */ 02019000
*   ,PT_READ_VR     Fixed(32) Constant(13)  /* Read VR           @DDA*/ 02020000
*   ,PT_WRITE_GPR   Fixed(32) Constant(14)  /* Write GPR, CR, PSW    */ 02021000
*   ,PT_WRITE_FPR   Fixed(32) Constant(15)  /* Write FPR             */ 02022000
*   ,PT_WRITE_VR    Fixed(32) Constant(16)  /* Write VR          @DDA*/ 02023000
*   ,PT_READ_BLOCK  Fixed(32) Constant(17)  /* Read storage          */ 02024000
*   ,PT_WRITE_BLOCK Fixed(32) Constant(19)  /* Write storage         */ 02025000
*   ,PT_READ_GPRH   Fixed(32) Constant(20)  /* Read GPRH         @D8A*/ 02026000
*   ,PT_WRITE_GPRH  Fixed(32) Constant(21)  /* Write GPRH        @D8A*/ 02027000
*   ,PT_REGHSET     Fixed(32) Constant(22)  /* Read all GPRHs    @D8A*/ 02028000
*   ,PT_ATTACH      Fixed(32) Constant(30)  /* Attach to a process   */ 02029000
*   ,PT_DETACH      Fixed(32) Constant(31)  /* Detach from a process */ 02030000
*   ,PT_REGSET      Fixed(32) Constant(32)  /* Read all GPRs         */ 02031000
*   ,PT_REATTACH    Fixed(32) Constant(33)  /* Reattach to a process */ 02032000
*   ,PT_LDINFO      Fixed(32) Constant(34)  /* Read loader info      */ 02033000
*   ,PT_MULTI       Fixed(32) Constant(35)  /* Multi process mode    */ 02034000
*   ,PT_LD64INFO    Fixed(32) Constant(36)  /* RMODE64 Info Area @P3A*/ 02035000
*   ,PT_BLOCKREQ    Fixed(32) Constant(40)  /* Block request     @D7A*/ 02036000
*   ,PT_THREAD_INFO Fixed(32) Constant(60)  /* Read thread info  @D2A*/ 02037000
*   ,PT_THREAD_MODIFY Fixed(32) Constant(61)                            02038000
*                            /* Modify thread kernel information @D2A*/ 02039000
*   ,PT_THREAD_READ_FOCUS Fixed(32) Constant(62)                        02040000
*                            /* Read current focus thread ID     @D2A*/ 02041000
*   ,PT_THREAD_WRITE_FOCUS Fixed(32) Constant(63)                       02042000
*                            /* Modify current focus thread ID   @D2A*/ 02043000
*   ,PT_THREAD_HOLD Fixed(32) Constant(64)                              02044000
*                            /* Modify thread hold state         @D2A*/ 02045000
*   ,PT_THREAD_SIGNAL Fixed(32) Constant(65)                            02046000
*                            /* Queue a signal for a thread      @D2A*/ 02047000
*   ,PT_EXPLAIN     Fixed(32) Constant(66)                              02048000
*                            /* Return extended event info       @D3A*/ 02049000
*   ,PT_EVENTS      Fixed(32) Constant(67)                              02050000
*                            /* Modify extended events list      @D3A*/ 02051000
*   ,PT_THREAD_INFO_EXTENDED Fixed(32) Constant(68)                     02052000
*                            /* Read extended thread info        @02A*/ 02053000
*   ,PT_REATTACH2   Fixed(32) Constant(71)                              02054000
*                        /* Reattach to a process (extended)     @D2A*/ 02055000
*   ,PT_CAPTURE     Fixed(32) Constant(72)                              02056000
*                        /* Capture debugged storage             @D6A*/ 02057000
*   ,PT_UNCAPTURE   Fixed(32) Constant(73)                              02058000
*                        /* Uncapture debugged storage           @D6A*/ 02059000
*   ,PT_GET_THREAD_TCB Fixed(32) Constant(74)                           02060000
*                        /* Get TCB address of a thread          @D9A*/ 02061000
*   ,PT_GET_ALET       Fixed(32) Constant(75)                           02062000
*                        /* Get Alet of target PID               @DBA*/ 02063000
*   ,PT_SWAPIN         Fixed(32) Constant(76)                           02064000
*                        /* SWAPIN target PID's A.S.             @DBA*/ 02065000
*   ,PT_EXTENDED_EVENT Fixed(32) Constant(98)                           02066000
*                        /* Debug an extended event              @D3A*/ 02067000
*   ,PT_RECOVER     Fixed(32) Constant(99)  /* Debug a program check */ 02068000
*   ;                                                                   02069000
*                                                                       02070000
*/********************************************************************/ 02071000
*/*                                                                  */ 02072000
*/* Ptrace register definitions.  The following are defined:         */ 02073000
*/*                                                                  */ 02074000
*/* - General purpose registers                                      */ 02075000
*/* - Floating point registers                                       */ 02076000
*/* - PSW registers                                                  */ 02077000
*/* - Control registers                                              */ 02078000
*/* - General Purpose High Registers                             @D8A*/ 02079000
*/*                                                                  */ 02080000
*/********************************************************************/ 02081000
*DCL                                                                    02082000
*    PT_GPR0  Fixed(32) Constant(00) /* General purpose register 0   */ 02083000
*   ,PT_GPR1  Fixed(32) Constant(01) /* General purpose register 1   */ 02084000
*   ,PT_GPR2  Fixed(32) Constant(02) /* General purpose register 2   */ 02085000
*   ,PT_GPR3  Fixed(32) Constant(03) /* General purpose register 3   */ 02086000
*   ,PT_GPR4  Fixed(32) Constant(04) /* General purpose register 4   */ 02087000
*   ,PT_GPR5  Fixed(32) Constant(05) /* General purpose register 5   */ 02088000
*   ,PT_GPR6  Fixed(32) Constant(06) /* General purpose register 6   */ 02089000
*   ,PT_GPR7  Fixed(32) Constant(07) /* General purpose register 7   */ 02090000
*   ,PT_GPR8  Fixed(32) Constant(08) /* General purpose register 8   */ 02091000
*   ,PT_GPR9  Fixed(32) Constant(09) /* General purpose register 9   */ 02092000
*   ,PT_GPR10 Fixed(32) Constant(10) /* General purpose register 10  */ 02093000
*   ,PT_GPR11 Fixed(32) Constant(11) /* General purpose register 11  */ 02094000
*   ,PT_GPR12 Fixed(32) Constant(12) /* General purpose register 12  */ 02095000
*   ,PT_GPR13 Fixed(32) Constant(13) /* General purpose register 13  */ 02096000
*   ,PT_GPR14 Fixed(32) Constant(14) /* General purpose register 14  */ 02097000
*   ,PT_GPR15 Fixed(32) Constant(15) /* General purpose register 15  */ 02098000
*   ;                                                                   02099000
*                                                                       02100000
*DCL                                                                    02101000
*  PT_FPR0  Fixed(32) Constant(16) /* Floating point register 0      */ 02102000
* ,PT_FPR1  Fixed(32) Constant(17) /* Floating point register 1  @D7A*/ 02103000
* ,PT_FPR2  Fixed(32) Constant(18) /* Floating point register 2      */ 02104000
* ,PT_FPR3  Fixed(32) Constant(19) /* Floating point register 3  @D7A*/ 02105000
* ,PT_FPR4  Fixed(32) Constant(20) /* Floating point register 4      */ 02106000
* ,PT_FPR5  Fixed(32) Constant(21) /* Floating point register 5  @D7A*/ 02107000
* ,PT_FPR6  Fixed(32) Constant(22) /* Floating point register 6      */ 02108000
* ,PT_FPR7  Fixed(32) Constant(23) /* Floating point register 7  @D7A*/ 02109000
* ,PT_FPR8  Fixed(32) Constant(24) /* Floating point register 8  @D7A*/ 02110000
* ,PT_FPR9  Fixed(32) Constant(25) /* Floating point register 9  @D7A*/ 02111000
* ,PT_FPR10 Fixed(32) Constant(26) /* Floating point register 10 @D7A*/ 02112000
* ,PT_FPR11 Fixed(32) Constant(27) /* Floating point register 11 @D7A*/ 02113000
* ,PT_FPR12 Fixed(32) Constant(28) /* Floating point register 12 @D7A*/ 02114000
* ,PT_FPR13 Fixed(32) Constant(29) /* Floating point register 13 @D7A*/ 02115000
* ,PT_FPR14 Fixed(32) Constant(30) /* Floating point register 14 @D7A*/ 02116000
* ,PT_FPR15 Fixed(32) Constant(31) /* Floating point register 15 @D7A*/ 02117000
* ;                                                                     02118000
*                                                                       02119000
*DCL                                                                    02120000
*    PT_FPC   Fixed(32) Constant(32) /* Floating point control register 02121000
*                                                                @D7A*/ 02122000
*   ;                                                                   02123000
*                                                                       02124000
*DCL                                                                    02125000
*    PT_PSW   Fixed(32) Constant(40) /* PSW                          */ 02126000
*   ,PT_PSW0  Fixed(32) Constant(40) /* Left half of the PSW         */ 02127000
*   ,PT_PSW1  Fixed(32) Constant(41) /* Right half of the PSW        */ 02128000
*   ;                                                                   02129000
*                                                                       02130000
*DCL                                                                    02131000
*    PT_CR0   Fixed(32) Constant(42) /* Control register 0           */ 02132000
*   ,PT_CR1   Fixed(32) Constant(43) /* Control register 1           */ 02133000
*   ,PT_CR2   Fixed(32) Constant(44) /* Control register 2           */ 02134000
*   ,PT_CR3   Fixed(32) Constant(45) /* Control register 3           */ 02135000
*   ,PT_CR4   Fixed(32) Constant(46) /* Control register 4           */ 02136000
*   ,PT_CR5   Fixed(32) Constant(47) /* Control register 5           */ 02137000
*   ,PT_CR6   Fixed(32) Constant(48) /* Control register 6           */ 02138000
*   ,PT_CR7   Fixed(32) Constant(49) /* Control register 7           */ 02139000
*   ,PT_CR8   Fixed(32) Constant(50) /* Control register 8           */ 02140000
*   ,PT_CR9   Fixed(32) Constant(51) /* Control register 9           */ 02141000
*   ,PT_CR10  Fixed(32) Constant(52) /* Control register 10          */ 02142000
*   ,PT_CR11  Fixed(32) Constant(53) /* Control register 11          */ 02143000
*   ,PT_CR12  Fixed(32) Constant(54) /* Control register 12          */ 02144000
*   ,PT_CR13  Fixed(32) Constant(55) /* Control register 13          */ 02145000
*   ,PT_CR14  Fixed(32) Constant(56) /* Control register 14          */ 02146000
*   ,PT_CR15  Fixed(32) Constant(57) /* Control register 15          */ 02147000
*   ;                                                                   02148000
*                                                                       02149000
*DCL                                                                    02150000
*    PT_GPRH0 Fixed(32) Constant(58) /* GP High register 0       @D8A*/ 02151000
*   ,PT_GPRH1 Fixed(32) Constant(59) /* GP High register 1       @D8A*/ 02152000
*   ,PT_GPRH2 Fixed(32) Constant(60) /* GP High register 2       @D8A*/ 02153000
*   ,PT_GPRH3 Fixed(32) Constant(61) /* GP High register 3       @D8A*/ 02154000
*   ,PT_GPRH4 Fixed(32) Constant(62) /* GP High register 4       @D8A*/ 02155000
*   ,PT_GPRH5 Fixed(32) Constant(63) /* GP High register 5       @D8A*/ 02156000
*   ,PT_GPRH6 Fixed(32) Constant(64) /* GP High register 6       @D8A*/ 02157000
*   ,PT_GPRH7 Fixed(32) Constant(65) /* GP High register 7       @D8A*/ 02158000
*   ,PT_GPRH8 Fixed(32) Constant(66) /* GP High register 8       @D8A*/ 02159000
*   ,PT_GPRH9 Fixed(32) Constant(67) /* GP High register 9       @D8A*/ 02160000
*   ,PT_GPRH10 Fixed(32) Constant(68) /* GP High register 10     @D8A*/ 02161000
*   ,PT_GPRH11 Fixed(32) Constant(69) /* GP High register 11     @D8A*/ 02162000
*   ,PT_GPRH12 Fixed(32) Constant(70) /* GP High register 12     @D8A*/ 02163000
*   ,PT_GPRH13 Fixed(32) Constant(71) /* GP High register 13     @D8A*/ 02164000
*   ,PT_GPRH14 Fixed(32) Constant(72) /* GP High register 14     @D8A*/ 02165000
*   ,PT_GPRH15 Fixed(32) Constant(73) /* GP High register 15     @D8A*/ 02166000
*   ;                                                                   02167000
*                                                                       02168000
*DCL                                                                    02169000
*    PT_VR0   Fixed(32) Constant(74) /* Vector register 0        @DDA*/ 02170000
*   ,PT_VR1 Fixed(32) Constant(75)   /* Vector register 1        @DDA*/ 02171000
*   ,PT_VR2 Fixed(32) Constant(76)   /* Vector register 2        @DDA*/ 02172000
*   ,PT_VR3 Fixed(32) Constant(77)   /* Vector register 3        @DDA*/ 02173000
*   ,PT_VR4 Fixed(32) Constant(78)   /* Vector register 4        @DDA*/ 02174000
*   ,PT_VR5 Fixed(32) Constant(79)   /* Vector register 5        @DDA*/ 02175000
*   ,PT_VR6 Fixed(32) Constant(80)   /* Vector register 6        @DDA*/ 02176000
*   ,PT_VR7 Fixed(32) Constant(81)   /* Vector register 7        @DDA*/ 02177000
*   ,PT_VR8 Fixed(32) Constant(82)   /* Vector register 8        @DDA*/ 02178000
*   ,PT_VR9 Fixed(32) Constant(83)   /* Vector register 9        @DDA*/ 02179000
*   ,PT_VR10 Fixed(32) Constant(84)  /* Vector register 10      @DDA*/  02180000
*   ,PT_VR11 Fixed(32) Constant(85)  /* Vector register 11      @DDA*/  02181000
*   ,PT_VR12 Fixed(32) Constant(86)  /* Vector register 12      @DDA*/  02182000
*   ,PT_VR13 Fixed(32) Constant(87)  /* Vector register 13      @DDA*/  02183000
*   ,PT_VR14 Fixed(32) Constant(88)  /* Vector register 14      @DDA*/  02184000
*   ,PT_VR15 Fixed(32) Constant(89)  /* Vector register 15      @DDA*/  02185000
*   ,PT_VR16 Fixed(32) Constant(90)  /* Vector register 16      @DDA*/  02186000
*   ,PT_VR17 Fixed(32) Constant(91)  /* Vector register 17      @DDA*/  02187000
*   ,PT_VR18 Fixed(32) Constant(92)  /* Vector register 18      @DDA*/  02188000
*   ,PT_VR19 Fixed(32) Constant(93)  /* Vector register 19      @DDA*/  02189000
*   ,PT_VR20 Fixed(32) Constant(94)  /* Vector register 20      @DDA*/  02190000
*   ,PT_VR21 Fixed(32) Constant(95)  /* Vector register 21      @DDA*/  02191000
*   ,PT_VR22 Fixed(32) Constant(96)  /* Vector register 22      @DDA*/  02192000
*   ,PT_VR23 Fixed(32) Constant(97)  /* Vector register 23      @DDA*/  02193000
*   ,PT_VR24 Fixed(32) Constant(98)  /* Vector register 24      @DDA*/  02194000
*   ,PT_VR25 Fixed(32) Constant(99)  /* Vector register 25      @DDA*/  02195000
*   ,PT_VR26 Fixed(32) Constant(100)  /* Vector register 26     @DDA*/  02196000
*   ,PT_VR27 Fixed(32) Constant(101)  /* Vector register 27     @DDA*/  02197000
*   ,PT_VR28 Fixed(32) Constant(102)  /* Vector register 28     @DDA*/  02198000
*   ,PT_VR29 Fixed(32) Constant(103)  /* Vector register 29     @DDA*/  02199000
*   ,PT_VR30 Fixed(32) Constant(104)  /* Vector register 30     @DDA*/  02200000
*   ,PT_VR31 Fixed(32) Constant(105)  /* Vector register 31     @DDA*/  02201000
*   ;                                                                   02202000
*                                                                       02203000
*DCL                                                                    02204000
*   PT_PSWG  Fixed(32) Constant(106)  /* PSWG                   @P7A*/  02205000
*  ,PT_PSWG0 Fixed(32) Constant(106)  /* Bytes 0-3              @P7A*/  02206000
*  ,PT_PSWG1 Fixed(32) Constant(107)  /* Bytes 4-7              @P7A*/  02207000
*  ,PT_PSWG2 Fixed(32) Constant(108)  /* Bytes 8-11 (IA high word)      02208000
*                                                               @P7A*/  02208100
*  ,PT_PSWG3 Fixed(32) Constant(109); /* Bytes 12-15 (IA low word)      02208200
*                                                               @P7A*/  02208300
*                                                                       02208400
*/********************************************************************/ 02208500
*/*                                                                  */ 02208600
*/* Ptrace User Area offset definitions.  Offsets for signal catcher */ 02208700
*/* information are defined by the limits below.  Any offset between */ 02208800
*/* the minimum and maximum signal numbers is a request for signal   */ 02208900
*/* catcher information for that signal number (i.e. offset 3 means  */ 02209000
*/* signal catcher information for signal number 3).                 */ 02210000
*/*                                                                  */ 02211000
*/********************************************************************/ 02212000
*DCL                                                                    02213000
*    PtUArea#MinSig   Fixed(32) Constant(1), /* Lowest signal number */ 02214000
*    PtUArea#MaxSig   Fixed(32) Constant(1024), /* Highest signal       02215000
*                                   number                           */ 02216000
*    PtUArea#IntCode  Fixed(32) Constant(1025), /* Request for program  02217000
*                                   interrupt code                   */ 02218000
*    PtUArea#AbendCC  Fixed(32) Constant(1026), /* Request for abend    02219000
*                                   completion code                  */ 02220000
*    PtUArea#AbendRC  Fixed(32) Constant(1027), /* Request for abend    02221000
*                                   reason code                      */ 02222000
*    PtUArea#SigCode  Fixed(32) Constant(1028), /* Request for signal   02223000
*                                   code                         @D4A*/ 02224000
*    PtUArea#ILC      Fixed(32) Constant(1029), /* Request for          02225000
*                                   instruction length code      @D5A*/ 02226000
*    PtUArea#PrFlags  Fixed(32) Constant(1030); /* Request for          02227000
*                                   process flags                @01A*/ 02228000
*                                                                       02229000
*/********************************************************************/ 02230000
*/*                                                                  */ 02231000
*/* Ptrace miscellaneous definitions.                                */ 02232000
*/*                                                                  */ 02233000
*/********************************************************************/ 02234000
*DCL                                                                    02235000
*    PtContNorm       Fixed(32) Constant(1),  /* Continue normally      02236000
*                                   (continue address not changed)      02237000
*                                   for a PT_CONTINUE request        */ 02238000
*    PtNoStickyPgm    Fixed(32) Constant(1),  /* Main program of        02239000
*                                   process is not sticky bit program.  02240000
*                                   Returned on PTUAREA#PRFLAGS request 02241000
*                                                                @01A*/ 02242000
*    PtMaximumLength  Fixed(32) Constant(64000), /* Maximum storage     02243000
*                                   length                           */ 02244000
*    PtLD#FixedLen    Fixed(32) Constant(Length(PtLDFixedArea)), /*     02245000
*                                   Length of PtLDInfo fixed area    */ 02246000
*    PtLD64#FixedLen  Fixed(32) Constant(Length(PtLD64FixedArea)), /*   02247000
*                                   Length of PtLD64Info fixed area  */ 02248000
*    PtPT#Length      Fixed(32) Constant(Length(PtPTINFO)),      /*     02249000
*                                   Length of PtptInfo fixed area    */ 02250000
*    PtPh#Length      Fixed(32) Constant(((Length(PtPhINFO)+7)/8)*8),   02251000
*                                   /* Length of PtPhInfo fixed area    02252000
*                                     on double word boundary    @02A*/ 02253000
*    PtPx#Length      Fixed(32) Constant(((Length(PtPxINFO)+7)/8)*8),   02254000
*                                   /* Length of PtpxInfo fixed area    02255000
*                                     on double word boundary    @02A*/ 02256000
*    PtEx#Length      Fixed(32) Constant(Length(PtExInfo)),      /*     02257000
*                                   Length of PtExInfo           @D3A*/ 02258000
*    PtEx31#Length    Fixed(32) Constant(Length(PtExInfo31)),    /*     02259000
*                                   Length of PtExInfo 31 bit    @D9A*/ 02260000
*    PtPIC#Length1    Fixed(32) Constant(28),  /* Length of PtPicParms  02261000
*                                   if PtPicHiRegsExists = OFF   @D9C*/ 02262000
*    PtPIC#Length2    Fixed(32) Constant(32),  /* Length of PtPicParms  02263000
*                                   if PtPicHiRegsExists = ON    @D9A*/ 02264000
*    PtPIC#Length     Fixed(32) Constant(Length(PtPICParms)); /* Length 02265000
*                                   of PtPICParms                    */ 02266000
*/********************************************************************/ 02267000
*/*                                                                  */ 02268000
*/* Ptrace PT_BlockReq structure.  This request allows the user to   */ 02269000
*/* block several different Ptrace requests into a single call to    */ 02270000
*/* Ptrace.  The block request structures mapped below must be       */ 02271000
*/* contained in a single large area.  This area is pointed to by    */ 02272000
*/* the Ptrace Address parameter and its length is contained in the  */ 02273000
*/* Ptrace Data parameter.  The PtBRInfo structure must be at offset */ 02274000
*/* zero into the provided area.                                     */ 02275000
*/*                                                                  */ 02276000
*/* Offsets are used to locate all relevant areas so that the Ptrace */ 02277000
*/* block request input may be relocated.  All offsets are relative  */ 02278000
*/* to the main input, the PtBRInfo area.  A given request block,    */ 02279000
*/* such as the PtBR_GPR structure, may be found using the           */ 02280000
*/* PtBRInfo address + PtBRReqBlkOff(x).                             */ 02281000
*/*                                                                  */ 02282000
*/* Only certain requests may be blocked into a single call to       */ 02283000
*/* Ptrace.  The requests that may be blocked are --                 */ 02284000
*/*   PT_READ_GPR                                                    */ 02285000
*/*   PT_WRITE_GPR                                                   */ 02286000
*/*   PT_READ_FPR                                                    */ 02287000
*/*   PT_WRITE_FPR                                                   */ 02288000
*/*   PT_READ_GPRH                                                   */ 02289000
*/*   PT_WRITE_GPRH                                                  */ 02290000
*/*   PT_READ_U                                                      */ 02291000
*/*   PT_READ_D                                                      */ 02292000
*/*   PT_READ_I                                                      */ 02293000
*/*   PT_WRITE_D                                                     */ 02294000
*/*   PT_WRITE_I                                                     */ 02295000
*/*   PT_READ_BLOCK                                                  */ 02296000
*/*   PT_WRITE_BLOCK.                                                */ 02297000
*/*                                                              @D7A*/ 02298000
*/********************************************************************/ 02299000
*   DECLARE                                                   /* @D7A*/ 02300000
*     1    PtBRInfo PTBRBase,                                 /* @D7A*/ 02301000
*       3    PtBRFixedArea,                                   /* @D7A*/ 02302000
*         5    PtBRNumReqs Fixed(31), /* Number of requests in PtBRReqs 02303000
*                                                                @D7A*/ 02304000
*         5    *        Char(12),   /* Reserved                  @D7A*/ 02305000
*       3    PtBRReqs(*),           /* requests                  @D7A*/ 02306000
*         5    PtBRType Fixed(31),  /* Type of request. For example,    02307000
*                                      PT_READ_BLOCK. This entry is     02308000
*                                      ignored if this field is zero    02309000
*                                                                @D7A*/ 02310000
*         5    PtBRStatus Fixed(31), /* Status from request. Same as    02311000
*                                      reasoncode on individual call    02312000
*                                      of same type              @D7A*/ 02313000
*         5    PtBRReqBlkOff Fixed(32), /* Offset to request block      02314000
*                                      further defining request and     02315000
*                                      whose format is dependant on     02316000
*                                      the request type          @D7A*/ 02317000
*         5    *        char(4);    /* reserved                  @D7A*/ 02318000
*                                                                       02319000
*/********************************************************************/ 02320000
*/* Structure for PT_Read_GPR and PT_Write_GPR.                      */ 02321000
*/********************************************************************/ 02322000
*                                                                       02323000
*   DECLARE                                                   /* @D7A*/ 02324000
*     1    PtBR_GPR Based,          /*                           @D7A*/ 02325000
*       3    PtBR_GPR_CntlGPR Bit(16), /* Only used on write request    02326000
*                                                                @D7A*/ 02327000
*         5  PtBR_GPR_CntlGPR1 Bit(8), /*                        @D7A*/ 02328000
*           7  PtBR_GPR_WGPR0 Bit(1), /* Write content of GPR 0  @D7A*/ 02329000
*           7  PtBR_GPR_WGPR1 Bit(1), /* Write content of GPR 1  @D7A*/ 02330000
*           7  PtBR_GPR_WGPR2 Bit(1), /* Write content of GPR 2  @D7A*/ 02331000
*           7  PtBR_GPR_WGPR3 Bit(1), /* Write content of GPR 3  @D7A*/ 02332000
*           7  PtBR_GPR_WGPR4 Bit(1), /* Write content of GPR 4  @D7A*/ 02333000
*           7  PtBR_GPR_WGPR5 Bit(1), /* Write content of GPR 5  @D7A*/ 02334000
*           7  PtBR_GPR_WGPR6 Bit(1), /* Write content of GPR 6  @D7A*/ 02335000
*           7  PtBR_GPR_WGPR7 Bit(1), /* Write content of GPR 7  @D7A*/ 02336000
*         5  PtBR_GPR_CntlGPR2 Bit(8), /*                        @D7A*/ 02337000
*           7  PtBR_GPR_WGPR8 Bit(1), /* Write content of GPR 8  @D7A*/ 02338000
*           7  PtBR_GPR_WGPR9 Bit(1), /* Write content of GPR 9  @D7A*/ 02339000
*           7  PtBR_GPR_WGPR10 Bit(1),/* Write content of GPR 10 @D7A*/ 02340000
*           7  PtBR_GPR_WGPR11 Bit(1),/* Write content of GPR 11 @D7A*/ 02341000
*           7  PtBR_GPR_WGPR12 Bit(1),/* Write content of GPR 12 @D7A*/ 02342000
*           7  PtBR_GPR_WGPR13 Bit(1),/* Write content of GPR 13 @D7A*/ 02343000
*           7  PtBR_GPR_WGPR14 Bit(1),/* Write content of GPR 14 @D7A*/ 02344000
*           7  PtBR_GPR_WGPR15 Bit(1),/* Write content of GPR 15 @D7A*/ 02345000
*       3    PtBR_GPR_CntlMisc Bit(16), /* Only used on write request   02346000
*                                                                @D7A*/ 02347000
*         5    PtBR_GPR_WPSW Bit(1), /* Write content of PSW, word 2    02348000
*                                                                @D7A*/ 02349000
*         5    PtBR_GPR_WPSWG Bit(1), /* Write content of PSWG   @P7A*/ 02350000
*         5    PtBR_GPR_PSWG_Req Bit(1), /* request large psw    @P7A*/ 02351000
*       3    *        Char(12),     /* Reserved                  @D7A*/ 02352000
*       3    PtBR_GPR_GPRs Char(64) Bdy(word), /* General purpose       02353000
*                                      registers                 @D7A*/ 02354000
*         5    PtBR_GPR_GPR00 Fixed(31), /* GPR 00               @D7A*/ 02355000
*         5    PtBR_GPR_GPR01 Fixed(31), /* GPR 01               @D7A*/ 02356000
*         5    PtBR_GPR_GPR02 Fixed(31), /* GPR 02               @D7A*/ 02357000
*         5    PtBR_GPR_GPR03 Fixed(31), /* GPR 03               @D7A*/ 02358000
*         5    PtBR_GPR_GPR04 Fixed(31), /* GPR 04               @D7A*/ 02359000
*         5    PtBR_GPR_GPR05 Fixed(31), /* GPR 05               @D7A*/ 02360000
*         5    PtBR_GPR_GPR06 Fixed(31), /* GPR 06               @D7A*/ 02361000
*         5    PtBR_GPR_GPR07 Fixed(31), /* GPR 07               @D7A*/ 02362000
*         5    PtBR_GPR_GPR08 Fixed(31), /* GPR 08               @D7A*/ 02363000
*         5    PtBR_GPR_GPR09 Fixed(31), /* GPR 09               @D7A*/ 02364000
*         5    PtBR_GPR_GPR10 Fixed(31), /* GPR 10               @D7A*/ 02365000
*         5    PtBR_GPR_GPR11 Fixed(31), /* GPR 11               @D7A*/ 02366000
*         5    PtBR_GPR_GPR12 Fixed(31), /* GPR 12               @D7A*/ 02367000
*         5    PtBR_GPR_GPR13 Fixed(31), /* GPR 13               @D7A*/ 02368000
*         5    PtBR_GPR_GPR14 Fixed(31), /* GPR 14               @D7A*/ 02369000
*         5    PtBR_GPR_GPR15 Fixed(31), /* GPR 15               @D7A*/ 02370000
*       3    PtBR_GPR_CRs Char(64) Bdy(Word), /* Control registers.     02371000
*                                      May be read but will not be      02372000
*                                      written                   @D7A*/ 02373000
*         5    PtBR_GPR_CR00 Fixed(31), /* CR 00                 @D7A*/ 02374000
*         5    PtBR_GPR_CR01 Fixed(31), /* CR 01                 @D7A*/ 02375000
*         5    PtBR_GPR_CR02 Fixed(31), /* CR 02                 @D7A*/ 02376000
*         5    PtBR_GPR_CR03 Fixed(31), /* CR 03                 @D7A*/ 02377000
*         5    PtBR_GPR_CR04 Fixed(31), /* CR 04                 @D7A*/ 02378000
*         5    PtBR_GPR_CR05 Fixed(31), /* CR 05                 @D7A*/ 02379000
*         5    PtBR_GPR_CR06 Fixed(31), /* CR 06                 @D7A*/ 02380000
*         5    PtBR_GPR_CR07 Fixed(31), /* CR 07                 @D7A*/ 02381000
*         5    PtBR_GPR_CR08 Fixed(31), /* CR 08                 @D7A*/ 02382000
*         5    PtBR_GPR_CR09 Fixed(31), /* CR 09                 @D7A*/ 02383000
*         5    PtBR_GPR_CR10 Fixed(31), /* CR 10                 @D7A*/ 02384000
*         5    PtBR_GPR_CR11 Fixed(31), /* CR 11                 @D7A*/ 02385000
*         5    PtBR_GPR_CR12 Fixed(31), /* CR 12                 @D7A*/ 02386000
*         5    PtBR_GPR_CR13 Fixed(31), /* CR 13                 @D7A*/ 02387000
*         5    PtBR_GPR_CR14 Fixed(31), /* CR 14                 @D7A*/ 02388000
*         5    PtBR_GPR_CR15 Fixed(31), /* CR 15                 @D7A*/ 02389000
*       3    PtBR_GPR_PSW Char(8), /* PSW.   May be read but only the   02390000
*                                      rightmost 4 bytes (word 2) will  02391000
*                                      be written                @D7A*/ 02392000
*         5    PtBR_GPR_PSW_W1 Char(4), /* PSW word 1.           @D7A*/ 02393000
*         5    PtBR_GPR_PSW_W2 Char(4), /* PSW word 2            @D7A*/ 02394000
*                                                                       02395000
*     1 PtBR_GPR_EXT Based,                                   /* @P7A*/ 02396000
*       /* The first part of the union, the old struct*/                02397000
*       3 * Char(152),                                        /* @P7A*/ 02398000
*       3 PtBR_GPR_PSWG Char(16),                             /* @P7A*/ 02399000
*         5 PtBR_GPR_PSWG_W1 Char(4),                         /* @P7A*/ 02400000
*         5 PtBR_GPR_PSWG_W2 Char(4),                         /* @P7A*/ 02401000
*         5 PtBR_GPR_PSWG_W3 Char(4),                         /* @P7A*/ 02402000
*         5 PtBR_GPR_PSWG_W4 Char(4);                         /* @P7A*/ 02403000
*                                                                       02404000
*/********************************************************************/ 02405000
*/* Structure for PT_Read_FPR and PT_Write_FPR.                      */ 02406000
*/********************************************************************/ 02407000
*                                                                       02408000
*   DECLARE                                                             02409000
*     1    PtBR_FPR Based,          /*                           @D7A*/ 02410000
*       3    PtBR_FPR_CntlFPR Bit(16), /* Only used on write request    02411000
*                                                                @D7A*/ 02412000
*         5  PtBR_FPR_CntlFPR1 Bit(8), /*                        @D7A*/ 02413000
*           7  PtBR_FPR_WFPR0 Bit(1), /* Write content of FPR 0  @D7A*/ 02414000
*           7  PtBR_FPR_WFPR1 Bit(1), /* Write content of FPR 1  @D7A*/ 02415000
*           7  PtBR_FPR_WFPR2 Bit(1), /* Write content of FPR 2  @D7A*/ 02416000
*           7  PtBR_FPR_WFPR3 Bit(1), /* Write content of FPR 3  @D7A*/ 02417000
*           7  PtBR_FPR_WFPR4 Bit(1), /* Write content of FPR 4  @D7A*/ 02418000
*           7  PtBR_FPR_WFPR5 Bit(1), /* Write content of FPR 5  @D7A*/ 02419000
*           7  PtBR_FPR_WFPR6 Bit(1), /* Write content of FPR 6  @D7A*/ 02420000
*           7  PtBR_FPR_WFPR7 Bit(1), /* Write content of FPR 7  @D7A*/ 02421000
*         5  PtBR_FPR_CntlFPR2 Bit(8), /*                        @D7A*/ 02422000
*           7  PtBR_FPR_WFPR8 Bit(1), /* Write content of FPR 8  @D7A*/ 02423000
*           7  PtBR_FPR_WFPR9 Bit(1), /* Write content of FPR 9  @D7A*/ 02424000
*           7  PtBR_FPR_WFPR10 Bit(1),/* Write content of FPR 10 @D7A*/ 02425000
*           7  PtBR_FPR_WFPR11 Bit(1),/* Write content of FPR 11 @D7A*/ 02426000
*           7  PtBR_FPR_WFPR12 Bit(1),/* Write content of FPR 12 @D7A*/ 02427000
*           7  PtBR_FPR_WFPR13 Bit(1),/* Write content of FPR 13 @D7A*/ 02428000
*           7  PtBR_FPR_WFPR14 Bit(1),/* Write content of FPR 14 @D7A*/ 02429000
*           7  PtBR_FPR_WFPR15 Bit(1),/* Write content of FPR 15 @D7A*/ 02430000
*       3    PtBR_FPR_CntlMisc Bit(16), /* Only used on write           02431000
*                                      request                   @D7A*/ 02432000
*         5    PtBR_FPR_WFPC Bit(1), /* Write content of FPC     @D7A*/ 02433000
*       3    *        Char(12),     /* Reserved                  @D7A*/ 02434000
*       3    PtBR_FPR_FPRs Char(128) Bdy(word), /* Floating point       02435000
*                                      registers                 @D7A*/ 02436000
*         5    PtBR_FPR_FPR00 Char(8), /* FPR 00                 @D7A*/ 02437000
*         5    PtBR_FPR_FPR01 Char(8), /* FPR 01                 @D7A*/ 02438000
*         5    PtBR_FPR_FPR02 Char(8), /* FPR 02                 @D7A*/ 02439000
*         5    PtBR_FPR_FPR03 Char(8), /* FPR 03                 @D7A*/ 02440000
*         5    PtBR_FPR_FPR04 Char(8), /* FPR 04                 @D7A*/ 02441000
*         5    PtBR_FPR_FPR05 Char(8), /* FPR 05                 @D7A*/ 02442000
*         5    PtBR_FPR_FPR06 Char(8), /* FPR 06                 @D7A*/ 02443000
*         5    PtBR_FPR_FPR07 Char(8), /* FPR 07                 @D7A*/ 02444000
*         5    PtBR_FPR_FPR08 Char(8), /* FPR 08                 @D7A*/ 02445000
*         5    PtBR_FPR_FPR09 Char(8), /* FPR 09                 @D7A*/ 02446000
*         5    PtBR_FPR_FPR10 Char(8), /* FPR 10                 @D7A*/ 02447000
*         5    PtBR_FPR_FPR11 Char(8), /* FPR 11                 @D7A*/ 02448000
*         5    PtBR_FPR_FPR12 Char(8), /* FPR 12                 @D7A*/ 02449000
*         5    PtBR_FPR_FPR13 Char(8), /* FPR 13                 @D7A*/ 02450000
*         5    PtBR_FPR_FPR14 Char(8), /* FPR 14                 @D7A*/ 02451000
*         5    PtBR_FPR_FPR15 Char(8), /* FPR 15                 @D7A*/ 02452000
*       3    PtBR_FPR_FPC Char(4); /* Floating Point Control Register   02453000
*                                                                @D7A*/ 02454000
*                                                                       02455000
*/********************************************************************/ 02456000
*/* Structure for PT_Read_GPRH PT_Write_GPRH.                    @D8A*/ 02457000
*/********************************************************************/ 02458000
*                                                                       02459000
* DECLARE                                                               02460000
*   1    PtBR_GPRH Based,         /*                             @D8A*/ 02461000
*     3    PtBR_GPRH_CntlGPRH Bit(16), /* Only used on write request    02462000
*                                                                @D8A*/ 02463000
*       5  PtBR_GPRH_CntlGPRH1 Bit(8),/*                         @D8A*/ 02464000
*         7  PtBR_GPRH_WGPRH0 Bit(1), /* Write content of GPRH 0 @D8A*/ 02465000
*         7  PtBR_GPRH_WGPRH1 Bit(1), /* Write content of GPRH 1 @D8A*/ 02466000
*         7  PtBR_GPRH_WGPRH2 Bit(1), /* Write content of GPRH 2 @D8A*/ 02467000
*         7  PtBR_GPRH_WGPRH3 Bit(1), /* Write content of GPRH 3 @D8A*/ 02468000
*         7  PtBR_GPRH_WGPRH4 Bit(1), /* Write content of GPRH 4 @D8A*/ 02469000
*         7  PtBR_GPRH_WGPRH5 Bit(1), /* Write content of GPRH 5 @D8A*/ 02470000
*         7  PtBR_GPRH_WGPRH6 Bit(1), /* Write content of GPRH 6 @D8A*/ 02471000
*         7  PtBR_GPRH_WGPRH7 Bit(1), /* Write content of GPRH 7 @D8A*/ 02472000
*       5  PtBR_GPRH_CntlGPRH2 Bit(8),/*                         @D8A*/ 02473000
*         7  PtBR_GPRH_WGPRH8 Bit(1), /* Write content of GPRH 8 @D8A*/ 02474000
*         7  PtBR_GPRH_WGPRH9 Bit(1), /* Write content of GPRH 9 @D8A*/ 02475000
*         7  PtBR_GPRH_WGPRH10 Bit(1),/* Write content of GPRH10 @D8A*/ 02476000
*         7  PtBR_GPRH_WGPRH11 Bit(1),/* Write content of GPRH11 @D8A*/ 02477000
*         7  PtBR_GPRH_WGPRH12 Bit(1),/* Write content of GPRH12 @D8A*/ 02478000
*         7  PtBR_GPRH_WGPRH13 Bit(1),/* Write content of GPRH13 @D8A*/ 02479000
*         7  PtBR_GPRH_WGPRH14 Bit(1),/* Write content of GPRH14 @D8A*/ 02480000
*         7  PtBR_GPRH_WGPRH15 Bit(1),/* Write content of GPRH15 @D8A*/ 02481000
*     3    PtBR_GPRH_CntlMisc Bit(16), /* Only used on write request    02482000
*                                                                @D8A*/ 02483000
*     3    *        Char(12),     /* Reserved                    @D8A*/ 02484000
*     3    PtBR_GPRH_GPRHs Char(64) Bdy(Word), /* GP High registers.    02485000
*                                                                @D8A*/ 02486000
*       5    PtBR_GPRH_GPRH00 Fixed(31), /* GPRH 00              @D8A*/ 02487000
*       5    PtBR_GPRH_GPRH01 Fixed(31), /* GPRH 01              @D8A*/ 02488000
*       5    PtBR_GPRH_GPRH02 Fixed(31), /* GPRH 02              @D8A*/ 02489000
*       5    PtBR_GPRH_GPRH03 Fixed(31), /* GPRH 03              @D8A*/ 02490000
*       5    PtBR_GPRH_GPRH04 Fixed(31), /* GPRH 04              @D8A*/ 02491000
*       5    PtBR_GPRH_GPRH05 Fixed(31), /* GPRH 05              @D8A*/ 02492000
*       5    PtBR_GPRH_GPRH06 Fixed(31), /* GPRH 06              @D8A*/ 02493000
*       5    PtBR_GPRH_GPRH07 Fixed(31), /* GPRH 07              @D8A*/ 02494000
*       5    PtBR_GPRH_GPRH08 Fixed(31), /* GPRH 08              @D8A*/ 02495000
*       5    PtBR_GPRH_GPRH09 Fixed(31), /* GPRH 09              @D8A*/ 02496000
*       5    PtBR_GPRH_GPRH10 Fixed(31), /* GPRH 10              @D8A*/ 02497000
*       5    PtBR_GPRH_GPRH11 Fixed(31), /* GPRH 11              @D8A*/ 02498000
*       5    PtBR_GPRH_GPRH12 Fixed(31), /* GPRH 12              @D8A*/ 02499000
*       5    PtBR_GPRH_GPRH13 Fixed(31), /* GPRH 13              @D8A*/ 02500000
*       5    PtBR_GPRH_GPRH14 Fixed(31), /* GPRH 14              @D8A*/ 02501000
*       5    PtBR_GPRH_GPRH15 Fixed(31), /* GPRH 15              @D8A*/ 02502000
*     3    *             Char(8); /* Reserved                    @D8A*/ 02503000
*                                                                       02504000
*/********************************************************************/ 02505000
*/* Structure for PT_Read_Block and PT_Write_Block.                  */ 02506000
*/********************************************************************/ 02507000
*                                                                       02508000
*   DECLARE                                                             02509000
*     1    PtBR_Block Based,        /*                           @D8A*/ 02510000
*       3    PtBR_Block_AAddr Ptr(31),/* address of area to read @D7A*/ 02511000
*       3    PtBR_Block_ALen Fixed(31),/* length of area to read @D7A*/ 02512000
*       3    *        Char(8),      /* Reserved                  @D7A*/ 02513000
*       3    PtBR_Block_Buf Char(*); /* area to read into or write      02514000
*                                      from. Must be at least           02515000
*                                      PtBR_Block_ALen bytes large      02516000
*                                                                @D7A*/ 02517000
*                                                                       02518000
*   DECLARE                                                             02519000
*     1    PtBR_Block64 Based,      /*                           @D9A*/ 02520000
*       3    PtBR_Block_AAddr64 Ptr(64),/* address of area to read      02521000
*                                                                @D9A*/ 02522000
*       3    PtBR_Block_ALen64 Fixed(31),/* length of area to read      02523000
*                                                                @D9A*/ 02524000
*       3    *        Char(4),      /* Reserved                  @D9A*/ 02525000
*       3    PtBR_Block_Buf64 Char(*); /* area to read into or write    02526000
*                                      from. Must be at least           02527000
*                                      PtBR_Block_ALen bytes large      02528000
*                                                                @D9A*/ 02529000
*                                                                       02530000
*/********************************************************************/ 02531000
*/* Structure for PT_Read_D and PT_Write_D.                          */ 02532000
*/********************************************************************/ 02533000
*                                                                       02534000
*   DECLARE                         /*                           @D7A*/ 02535000
*     1    PtBR_D Based,            /*                           @D7A*/ 02536000
*       3    PtBR_D_Wordptr ptr(31), /* Address of fullword of data     02537000
*                                                                @D7A*/ 02538000
*       3    PtBR_D_Word Fixed(32); /* fullword of data at specified    02539000
*                                      address for a read request or    02540000
*                                      the data to be written to the    02541000
*                                      specified address for a write    02542000
*                                      request                   @D7A*/ 02543000
*                                                                       02544000
*   DECLARE                         /*                           @D9A*/ 02545000
*     1    PtBR_D64 Based,          /*                           @D9A*/ 02546000
*       3    PtBR_D_Wordptr64 ptr(64), /* Address of fullword of data   02547000
*                                                                @D9A*/ 02548000
*       3    PtBR_D_Word64 Fixed(32); /* fullword of data at specified  02549000
*                                      address for a read request or    02550000
*                                      the data to be written to the    02551000
*                                      specified address for a write    02552000
*                                      request                   @D9A*/ 02553000
*                                                                       02554000
*/********************************************************************/ 02555000
*/* Structure for PT_Read_I and PT_Write_I.                          */ 02556000
*/********************************************************************/ 02557000
*                                                                       02558000
*   DECLARE                         /*                           @D7A*/ 02559000
*     1    PtBR_I   Based,          /*                           @D7A*/ 02560000
*       3    PtBR_I_Wordptr ptr(31), /* Address of fullword of          02561000
*                                      program data              @D7A*/ 02562000
*       3    PtBR_I_Word Fixed(32); /* fullword of program data at      02563000
*                                      specified address for a read     02564000
*                                      request or the program data to   02565000
*                                      be written to the specified      02566000
*                                      address for a write request      02567000
*                                                                @D7A*/ 02568000
*                                                                       02569000
*   DECLARE                         /*                           @D9A*/ 02570000
*     1    PtBR_I64   Based,        /*                           @D9A*/ 02571000
*       3    PtBR_I_Wordptr64 ptr(64), /* Address of fullword of        02572000
*                                      program data              @D9A*/ 02573000
*       3    PtBR_I_Word64 Fixed(32); /* fullword of program data at    02574000
*                                      specified address for a read     02575000
*                                      request or the program data to   02576000
*                                      be written to the specified      02577000
*                                      address for a write request      02578000
*                                                                @D9A*/ 02579000
*                                                                       02580000
*/********************************************************************/ 02581000
*/* Structure for PT_Read_U.                                         */ 02582000
*/********************************************************************/ 02583000
*                                                                       02584000
*   DECLARE                         /*                           @D7A*/ 02585000
*     1    PtBR_U   Based,          /*                           @D7A*/ 02586000
*       3    PtBR_U_NumOffsets Fixed(31), /* Number of entries in       02587000
*                                      offset/control word array @D7A*/ 02588000
*       3    *        char(4),      /* Reserved                  @D7A*/ 02589000
*       3    PtBR_U_OWArray(*),     /* Array of offsets and control     02590000
*                                      words                     @D7A*/ 02591000
*         5    PtBR_U_Offset Fixed(31), /* Offset of fullword of        02592000
*                                      control information       @D7A*/ 02593000
*         5    PtBR_U_Word Fixed(32); /* fullword of control            02594000
*                                      information from user area in    02595000
*                                      the debugged process      @D7A*/ 02596000
*@logic;                                                                02597000
*#pragma tool=cbgen.                                                    02598000
*#useorg.                                                               02599000
*#alignop.                                                              02600000
*#NotUpper.                                                             02601000
*#epragma.                                                              02602000
*@endlogic;                                                             02603000
*/* End of PL/X Source                                               */ 02604000
* %IF BPXYPTRC_LIST ^= 'NO' &                                           02605000
*    ZCBPRINT ^= 'NO' %THEN                                             02606000
*   %GOTO BPXYPTRC_4;                                                   02607000
*   @LIST POP NOECHO;                                                   02608000
* %BPXYPTRC_4:;                                                         02609000
* %END;                                                                 02610000
