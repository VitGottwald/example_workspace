*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLFCOMP                              -01/13/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Force Asynchronous Request Completion         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1993, 2010                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7770                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLFCOMP service routine is given control from the         * 00002100
*      IXLFCOMP macro.  This service forces completion of and/or      * 00002200
*      returns status information for a previously initiated IXLLIST  * 00002300
*      or IXLCACHE request.                                           * 00002400
*                                                                     * 00002500
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002600
*                                                                     * 00002700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002800
*                                                                     * 00002900
*01* ENVIRONMENT:                                                     * 00003000
*                                                                     * 00003100
*                                                                     * 00003200
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00003300
*                                                                     * 00003400
*      Dispatchable unit mode: Task or SRB mode.                      * 00003500
*                                                                     * 00003600
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00003700
*                                                                     * 00003800
*                        The current primary address space must be    * 00003900
*                        the same as the primary address space at the * 00004000
*                        time the connection service, IXLCONN, was    * 00004100
*                        issued for the structure.                    * 00004200
*                                                                     * 00004300
*      AMODE:            31-bit.                                      * 00004400
*                                                                     * 00004500
*      ASC mode:         Primary or Access Register.                  * 00004600
*                                                                     * 00004700
*      Interrupt status: Enabled or disabled for I/O and external     * 00004800
*                        interrupts.                                  * 00004900
*                                                                     * 00005000
*      Locks:            Disabled callers must be legally disabled by * 00005100
*                        holding the CPU lock and cannot hold other   * 00005200
*                        disabled locks (invocation by DIE routines   * 00005300
*                        is not supported).  Enabled callers must not * 00005400
*                        hold any locks.  When OPTYPE=COMPLETE is     * 00005500
*                        specified the caller must be enabled.        * 00005600
*                                                                     * 00005700
*      Control parameters:                                            * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*                        1.  The caller's parameter list must be      * 00006100
*                            addressable in the caller's primary      * 00006200
*                            address space.                           * 00006300
*                                                                     * 00006400
*                        2.  If the caller is running in Access       * 00006500
*                            Register ASC mode and specifies a macro  * 00006600
*                            parameter using explicit register        * 00006700
*                            notation the access register             * 00006800
*                            corresponding to the general register    * 00006900
*                            must appropriately qualify the general   * 00007000
*                            register.                                * 00007100
*                                                                     * 00007200
*                        3.  Any virtual storage areas specified on   * 00007300
*                            the IXLFCOMP request may be addressable  * 00007400
*                            in the caller's primary, secondary, or   * 00007500
*                            home address spaces, from the PASN       * 00007600
*                            access list, or from the DU access list. * 00007700
*                                                                     * 00007800
*                        4.  Any virtual storage areas specified on   * 00007900
*                            the corresponding prior IXLLIST or       * 00008000
*                            IXLCACHE request must still be           * 00008100
*                            addressable as they were at the time of  * 00008200
*                            the prior request.  See the IXLLIST or   * 00008300
*                            IXLCACHE macros for the addressability   * 00008400
*                            requirements of the virtual storage      * 00008500
*                            areas associated with those requests.    * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*01* PROGRAMMING REQUIREMENTS:                                        * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*    1.  Access Register mode invokers must specify SYSSTATE          * 00009500
*        ASCENV=AR prior to invoking this macro.                      * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*01* RESTRICTIONS:                                                    * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*    1.  The request represented by REQTOKEN must have been initiated * 00010300
*        by the same connection.                                      * 00010400
*                                                                     * 00010500
*    2.  If the caller is disabled then the parameter list and all    * 00010600
*        storage areas addressed by macro parameters must reside in   * 00010700
*        either fixed or disabled reference storage.  Furthermore,    * 00010800
*        any virtual storage areas which were specified on the        * 00010900
*        corresponding prior IXLLIST or IXLCACHE invocation must also * 00011000
*        reside in fixed or disabled reference storage if the         * 00011100
*        IXLFCOMP caller is disabled.                                 * 00011200
*                                                                     * 00011300
*    3.  The caller may not be running as a Disabled Interrupt Exit   * 00011400
*        (DIE).                                                       * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*01* INPUT REGISTER INFORMATION:                                      * 00011900
*                                                                     * 00012000
*    Before issuing the IXLFCOMP macro, the caller does not have to   * 00012100
*    place any information into any register or AR unless using it in * 00012200
*    register notation for a particular parameter, or using it as a   * 00012300
*    base register.                                                   * 00012400
*                                                                     * 00012500
*01* OUTPUT REGISTER INFORMATION:                                     * 00012600
*                                                                     * 00012700
*    When control returns to the caller, the GPRs contain:            * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*    REGISTER  CONTENTS                                               * 00013100
*                                                                     * 00013200
*    0         Reason code                                            * 00013300
*                                                                     * 00013400
*    1         Used as work registers by the system                   * 00013500
*                                                                     * 00013600
*    2-13      Unchanged                                              * 00013700
*                                                                     * 00013800
*    14        Used as work registers by the system.                  * 00013900
*                                                                     * 00014000
*    15        Return code                                            * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*    When control returns to the caller, the ARs contain:             * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*    REGISTER  CONTENTS                                               * 00014800
*                                                                     * 00014900
*    0-1       Used as work registers by the system                   * 00015000
*                                                                     * 00015100
*    2-13      Unchanged                                              * 00015200
*                                                                     * 00015300
*    14-15     Used as work registers by the system.                  * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*01* PERFORMANCE IMPLICATIONS:                                        * 00015800
*                                                                     * 00015900
*    None.                                                            * 00016000
*                                                                     * 00016100
*01* SYNTAX:                                                          * 00016200
*                                                                     * 00016300
*Ýxlabel¨  IXLFCOMP     CONTOKEN=xcontoken                            * 00016400
*                      ,REQTOKEN=xreqtoken                            * 00016500
*                     Ý,OPTYPE=»COMPLETE!TESTº¨                       * 00016600
*                     Ý,RETCODE=xretcode¨                             * 00016700
*                     Ý,RSNCODE=xrsncode¨                             * 00016800
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00016900
*                    ÐÝ,MF=S¨                                         * 00017000
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00017100
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*      Where:                                                         * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      Ýxlabel¨                                                       * 00017800
*          is an optional symbol, starting in column 1, that is the   * 00017900
*          name on the IXLFCOMP macro invocation.  The name must      * 00018000
*          conform to the rules for an ordinary assembler language    * 00018100
*          symbol.                                                    * 00018200
*          DEFAULT: No name.                                          * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*      CONTOKEN=xcontoken                                             * 00018800
*          is the name (RS-type), or address in register (2)-(12), of * 00018900
*          a required 16 character input field that contains the      * 00019000
*          connect token returned by the IXLCONN service.  The        * 00019100
*          CONTOKEN uniquely identifies the user's connection to the  * 00019200
*          structure.                                                 * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      REQTOKEN=xreqtoken                                             * 00019800
*          is the name (RS-type), or address in register (2)-(12), of * 00019900
*          a required 16 character input field that contains the      * 00020000
*          asynchronous request token returned on a previous          * 00020100
*          invocation of IXLLIST or IXLCACHE.                         * 00020200
*                                                                     * 00020300
*          The asynchronous request token uniquely identifies a prior * 00020400
*          asynchronous request.                                      * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*      ÝOPTYPE=»COMPLETE!TESTº¨                                       * 00021000
*          is an optional keyword input which specifies the type of   * 00021100
*          operation to be performed.  The invoker may either wait    * 00021200
*          for the initiating request to complete or only test        * 00021300
*          whether the request has completed.                         * 00021400
*                                                                     * 00021500
*          When IXLFCOMP detects that the initiating request has      * 00021600
*          completed the virtual and real storage areas for structure * 00021700
*          entry data, adjunct data, and the answer area specified on * 00021800
*          the initiating request will be appropriately updated.      * 00021900
*          DEFAULT: COMPLETE                                          * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*          OPTYPE=COMPLETE                                            * 00022300
*              Specifies that control be returned to the invoker when * 00022400
*              the initiating request has completed.                  * 00022500
*                                                                     * 00022600
*              If the request identified by REQTOKEN has not          * 00022700
*              completed then the invoker will be suspended until it  * 00022800
*              has completed.  The invoker must be executing in an    * 00022900
*              enabled state to use this option.                      * 00023000
*                                                                     * 00023100
*          OPTYPE=TEST                                                * 00023200
*              Specifies that the processing status of the initiating * 00023300
*              request be tested.  The return code indicates whether  * 00023400
*              the request has completed.                             * 00023500
*                                                                     * 00023600
*              This option may be used by invokers that may not be    * 00023700
*              suspended to poll for request completion.              * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*      ÝRETCODE=xretcode¨                                             * 00024500
*          is the name (RS-type) of an optional fullword output       * 00024600
*          variable, or register (2)-(12) or (15), into which the     * 00024700
*          return code is to be copied from GPR 15.  If you specify   * 00024800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00024900
*          the value will be left in GPR 15.                          * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*      ÝRSNCODE=xrsncode¨                                             * 00025500
*          is the name (RS-type) of an optional fullword output       * 00025600
*          variable into which the reason code is to be copied from   * 00025700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00025800
*          R0 (within or without parentheses), the value will be left * 00025900
*          in GPR 0.                                                  * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00026500
*          is an optional byte input decimal value in the "0-0" range * 00026600
*          that specifies the macro version.  PLISTVER is the only    * 00026700
*          key allowed on the list form of MF and determines which    * 00026800
*          parameter list is generated.  Note that MAX may be         * 00026900
*          specified instead of a number, and the parameter list will * 00027000
*          be of the largest size currently supported. This size may  * 00027100
*          grow from release to release (thus possibly affecting the  * 00027200
*          amount of storage needed by your program).  If your        * 00027300
*          program can tolerate this, IBM recommends that you always  * 00027400
*          specify MAX when creating the list form parameter list as  * 00027500
*          that will ensure that the list form parameter list is      * 00027600
*          always long enough to hold whatever parameters might be    * 00027700
*          specified on the execute form.                             * 00027800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00027900
*          default is the lowest version which allows all of the      * 00028000
*          parameters specified on the invocation to be processed.    * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*      ÝMF=»S!L!Eº¨                                                   * 00028600
*          is an optional keyword input which specifies the macro     * 00028700
*          form.                                                      * 00028800
*          DEFAULT: S                                                 * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*          ÝMF=S¨                                                     * 00029200
*              specifies the standard form of the macro.  The "S"     * 00029300
*              form generates code to put the parameters into an      * 00029400
*              in-line parameter list and invoke the desired service. * 00029500
*              Full checking for required macro keys is done along    * 00029600
*              with supplying defaults for omitted optional           * 00029700
*              parameters.                                            * 00029800
*                                                                     * 00029900
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00030000
*              specifies the list form of the macro.  The "L" form    * 00030100
*              defines an area to be used for the parameter list.     * 00030200
*              Only the PLISTVER key may be specified on the          * 00030300
*              invocation.  All other macro parameters are flagged as * 00030400
*              errors.  If PLISTVER is not specified, the original    * 00030500
*              parameter list definition is used.                     * 00030600
*                                                                     * 00030700
*            ,xmfctrl                                                 * 00030800
*              is a required input.  It is the name of a storage area * 00030900
*              for the parameter list.                                * 00031000
*                                                                     * 00031100
*            »,xmfattr!0Dº                                            * 00031200
*              is an optional 60 character input string that varies   * 00031300
*              from 1 to 60 characters. Use it to force boundary      * 00031400
*              alignment of the parameter list. Use only 0F or 0D.    * 00031500
*              DEFAULT: 0D which forces the parameter list to a       * 00031600
*              doubleword boundary.                                   * 00031700
*                                                                     * 00031800
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00031900
*              specifies the execute form of the macro.  The "E" form * 00032000
*              generates code to put the parameters into the          * 00032100
*              parameter list specified by xmfctrl and provides full  * 00032200
*              syntax checking with default setting.                  * 00032300
*                                                                     * 00032400
*            ,xmfctrl                                                 * 00032500
*              is a required input.  It is the name (RS-type), or     * 00032600
*              address in register (1)-(12), of a storage area for    * 00032700
*              the parameter list.                                    * 00032800
*                                                                     * 00032900
*            »,COMPLETEº                                              * 00033000
*              is an optional keyword input which specifies the       * 00033100
*              degree of macro parameter syntax checking.             * 00033200
*              DEFAULT: COMPLETE                                      * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*              COMPLETE                                               * 00033600
*                  Checking for required macro keys is done and       * 00033700
*                  defaults are supplied for omitted optional         * 00033800
*                  parameters.                                        * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*01* RETURN CODES:                                                    * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                 The following return and reason codes may be        * 00035000
*                 returned by the IXLFCOMP service, in addition to    * 00035100
*                 those described for IXLLIST and IXLCACHE.  If the   * 00035200
*                 return and reason code is one of the following,     * 00035300
*                 then they pertain to the IXLFCOMP request itself.   * 00035400
*                 Otherwise,  the return and reason code pertain to   * 00035500
*                 the prior IXLLIST or IXLCACHE request which has     * 00035600
*                 completed.                                          * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*       4         IxlRetCodeWarning:  Warning.  The request           * 00036000
*                 completed, but with exceptional circumstances.      * 00036100
*                                                                     * 00036200
*                 HEX REASON  MEANING                                 * 00036300
*                 CODE                                                * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                 xxxx0413    IxlRsnCodeReqNotComp:  The request      * 00036700
*                             identified by REQTOKEN has not          * 00036800
*                             completed, for an OPTYPE=TEST request.  * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00037400
*                 completed due to a user error.                      * 00037500
*                                                                     * 00037600
*                 HEX REASON  MEANING                                 * 00037700
*                 CODE                                                * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                 xxxx0801    IxlRsnCodeBadParmlist:  Unable to       * 00038100
*                             access the IXLFCOMP parameter list.     * 00038200
*                                                                     * 00038300
*                 xxxx0804    IxlRsnCodeBadVersion#:  The version     * 00038400
*                             number in the parameter list is not     * 00038500
*                             valid.  This usually indicates that the * 00038600
*                             level of the macro is incompatible with * 00038700
*                             the level of the XES service code.      * 00038800
*                                                                     * 00038900
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00039000
*                             contoken specified.  The contoken is    * 00039100
*                             invalid for one of the following        * 00039200
*                             reasons:  disconnect has occurred, EOT  * 00039300
*                             of the connector's task, input contoken * 00039400
*                             is not the contoken returned from       * 00039500
*                             IXLCONN, the request was issued outside * 00039600
*                             the connector's address space, or the   * 00039700
*                             contoken has been invalidated for       * 00039800
*                             rebuild.                                * 00039900
*                                                                     * 00040000
*                 xxxx0831    IxlRsnCodeBadReqToken:  An invalid      * 00040100
*                             asynchronous request token was          * 00040200
*                             specified.  The request cannot be       * 00040300
*                             completed without a valid asynchronous  * 00040400
*                             request token.  Reasons: The request    * 00040500
*                             token does not match the request token  * 00040600
*                             returned on the corresponing IXLLIST or * 00040700
*                             IXLCACHE token request, the request     * 00040800
*                             token is for a corresponding IXLLIST or * 00040900
*                             IXLCACHE SyncToken request and the      * 00041000
*                             request completed synchronously, the    * 00041100
*                             request token was specified on a        * 00041200
*                             previous IXLFCOMP request that observed * 00041300
*                             the completion of the request, or the   * 00041400
*                             same request token was specified by two * 00041500
*                             different IXLFCOMP requests at the same * 00041600
*                             time.                                   * 00041700
*                                                                     * 00041800
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 00041900
*                             specifying OPTYPE=COMPLETE  failed      * 00042000
*                             because the prior IXLLIST or IXLCACHE   * 00042100
*                             request has not completed, and the      * 00042200
*                             caller is disabled and cannot be        * 00042300
*                             suspended.                              * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00042900
*                 state of the involved structure and the disposition * 00043000
*                 of the request are unpredictable.                   * 00043100
*                                                                     * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*01* REASON CODES:                                                    * 00043500
*                                                                     * 00043600
*       Reason codes, as appropriate, are defined under their         * 00043700
*       corresponding return code.  Reason code and return code       * 00043800
*       constants are defined within IXLYCON.                         * 00043900
*                                                                     * 00044000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00044100
*                                                                     * 00044200
*02*   PROCESSOR:  ASSEM                                              * 00044300
*                                                                     * 00044400
*01* COMPONENT:  SCIXL                                                * 00044500
*                                                                     * 00044600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00044700
*                                                                     * 00044800
*01* MACRO USAGE NOTES:                                               * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00045200
*        global macro variable.  Any value other than 'NO' will       * 00045300
*        result in the macro expansion being printed.  The default is * 00045400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00045500
*        variable should be set.                                      * 00045600
*                                                                     * 00045700
*                    GBLC &ZPRINT                                     * 00045800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*    2.  All   keys   currently   contained  in  the  IXLFCOMP  macro * 00046200
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00046300
*        value of 0 or MAX.                                           * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*01* CHANGE ACTIVITY:                                                 * 00046900
*                                                                     * 00047000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00047100
*                                                                     * 00047200
*    $L0=SYSLKSMG HBB5510 900904 PD00K1:  Locking support             * 00047300
*    $D1=DIG0018  HBB5510 921105 PD00AO:  >4K support                 * 00047400
*    $D2=DIG0048  HBB5510 930114 PD00AO:  Miscellaneous changes       * 00047500
*    $P1=PIG5178  HBB5510 940314 PD00AO:  Performance                 * 00047600
*    $P2=PIG5236  HBB5510 940314 PD00FR:  Document DIE mode           * 00047700
*                                         restriction                 * 00047800
*    $01=OW15589  HBB5520 960415 PD00FR:  Documentation updates       * 00047900
*    $P3=PYV0524  HBB5520 020412 PD00MO:  Update                      * 00048000
*                                         IxlRsnCodeBadReqToken       * 00048100
*                                         explanation                 * 00048200
*    $P4=ME15980  HBB7770 090424 PD00BN:  Correct AMG errors          * 00048300
****** END OF SPECIFICATIONS *****************************************/ 00048400
*/********************************************************************* 00048500
         MACRO                                                          00048600
&XLABEL  IXLFCOMP &CONTOKEN=,&REQTOKEN=,&OPTYPE=,&RETCODE=,&RSNCODE=,  *00048700
               &PLISTVER=,&MF=                                          00048800
.*                                                                      00048900
*              MACDATE -01/13/18-<0>                                    00049000
.*                                                                      00049100
.*******************************************************************    00049200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00049300
.*******************************************************************    00049400
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00049500
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00049600
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00049700
.*                                                                      00049800
              GBLC  &ZIXLFCOMP  YES=MACRO USED AT LEAST ONCE            00049900
.*******************************************************************    00050000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00050100
.*******************************************************************    00050200
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00050300
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00050400
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00050500
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00050600
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00050700
              LCLA  &ZAWRK      USED AS A WORK AREA                     00050800
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00050900
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00051000
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00051100
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00051200
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00051300
              LCLC  &ZMAC_G     "G" or null                             00051400
&ZMAC_G       SETC  ''                                                  00051500
              LCLC  &ZMAC_LR                                            00051600
&ZMAC_LR      SETC  'LR'                                                00051700
              LCLC  &ZMAC_L                                             00051800
&ZMAC_L       SETC  'L'                                                 00051900
              LCLC  &ZMAC_ST                                            00052000
&ZMAC_ST      SETC  'ST'                                                00052100
              LCLC  &ZMAC_LLGT                                          00052200
&ZMAC_LLGT    SETC  'L'                                                 00052300
              LCLC  &ZMAC_LGR                                           00052400
&ZMAC_LGR     SETC  'LR'                                                00052500
              LCLC  &ZMAC_LG                                            00052600
&ZMAC_LG      SETC  'L'                                                 00052700
              LCLC  &ZMAC_STG                                           00052800
&ZMAC_STG     SETC  'ST'                                                00052900
              LCLA  &ZMACRET    MACRO RETURN CODE                       00053000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00053100
.*                                                                      00053200
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00053300
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00053400
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00053500
              LCLC  &ZENDBASEPL                 End of base PL          00053600
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00053700
.*******************************************************************    00053800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00053900
.*******************************************************************    00054000
              LCLA  &ZI         INDEX FOR ARRAY                         00054100
              LCLA  &ZJ         INDEX FOR PARMS                         00054200
              LCLA  &ZK         INDEX FOR PARSE                         00054300
              LCLA  &ZLO        LOW RANGE VALUE                         00054400
              LCLA  &ZHI        HIGH RANGE VALUE                        00054500
              LCLC  &ZW         WORK AREA FOR PARM                      00054600
.********************************************************************   00054700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00054800
.********************************************************************   00054900
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00055000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00055100
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        00055200
              GBLC  &SYSAM64    SYSSTATE AMODE64                        00055300
.*                                                                      00055400
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00055500
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00055600
              SPLEVEL  TEST                                             00055700
.ZSYS2        ANOP  ,                                                   00055800
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00055900
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00056000
              SYSSTATE TEST                                             00056100
              AGO   .ZSYS4                                              00056200
.ZSYS3        ANOP  ,                                                   00056300
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00056400
.ZSYS4        ANOP  ,                                                   00056500
              AIF   ('&SYSAM64' NE 'YES').ZSYSN64                       00056600
&ZMAC_LLGT    SETC 'LLGT'                                               00056700
&ZMAC_LGR     SETC 'LGR'                                                00056800
&ZMAC_LG      SETC 'LG'                                                 00056900
&ZMAC_STG     SETC 'STG'                                                00057000
.ZSYSN64      ANOP  ,                                                   00057100
.*******************************************************************    00057200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00057300
.*******************************************************************    00057400
              LCLC  &XCONTOKEN  ++ NAME                                 00057500
              LCLC  &XREQTOKEN  ++ NAME                                 00057600
              LCLC  &XOPTYPE    ++ VALUE                                00057700
              LCLC  &XRETCODE   ++ NAME                                 00057800
              LCLC  &XRSNCODE   ++ NAME                                 00057900
              LCLA  &XPLISTVER  ++ VALUE                                00058000
              LCLC  &XMF        ++ VALUE                                00058100
              LCLC  &XMFCTRL    ++ NAME                                 00058200
              LCLC  &XMFATTR    ++ VALUE                                00058300
              LCLC  &XMFSCK     ++ VALUE                                00058400
.*******************************************************************    00058500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00058600
.*******************************************************************    00058700
              LCLC  &ZXCONTOKEN                 ++ INPUT NAME           00058800
              LCLC  &ZXREQTOKEN                 ++ INPUT NAME           00058900
              LCLC  &ZXOPTYPE   ++ INPUT VALUE                          00059000
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00059100
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00059200
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00059300
              LCLC  &ZXMF       ++ INPUT VALUE                          00059400
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00059500
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00059600
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00059700
.********************************************************************   00059800
.***AC.PLV01  PROCESS PLISTVER                                      *   00059900
.********************************************************************   00060000
&XPLISTVER      SETA  0                                                 00060100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00060200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00060300
&XPLISTVER      SETA  0                                                 00060400
.ZPLV0          ANOP  ,                                                 00060500
.*                                                                      00060600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00060700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00060800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00060900
.*-------------------------------------------------------------------   00061000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00061100
&ZMS            SETC  '"PLISTVER='                                      00061200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00061300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00061400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00061500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00061600
                AGO   .ZPVCK2                                           00061700
.ZPVCK3         ANOP  ,                                                 00061800
.*-------------------------------------------------------------------   00061900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00062000
&ZMS            SETC  '"PLISTVER='                                      00062100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00062200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00062300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00062400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00062500
                AGO   .ZPVCKE                                           00062600
.ZPVCK2         ANOP  ,                                                 00062700
.*-------------------------------------------------------------------   00062800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00062900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00063000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00063100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00063200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00063300
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00063400
.ZPVCK6         ANOP  ,                                                 00063500
&ZMS            SETC  '"PLISTVER='                                      00063600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063700
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00063800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00063900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064000
&XPLISTVER      SETA  0                                                 00064100
                AGO   .ZPVCKE                                           00064200
.*-------------------------------------------------------------------   00064300
.ZPVCK4A        ANOP  ,                                                 00064400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00064500
&ZMS            SETC  'PLISTVER='                                       00064600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00064700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00064800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00064900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00065000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00065100
                AGO   .ZPVCK5                                           00065200
.ZPVCK4         ANOP  ,                                                 00065300
&XPLISTVER      SETA  &PLISTVER(1)                                      00065400
.ZPVCK5         ANOP  ,                                                 00065500
.ZPVCKE         ANOP  ,                                                 00065600
.********************************************************************   00065700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00065800
.********************************************************************   00065900
              ACTR  10000                                               00066000
.*------------------------------------------------------------------    00066100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00066200
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00066300
.*-------------------------------------------------------------------   00066400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00066500
.ZG23         ANOP  ,                                                   00066600
&ZTLC         SETC 'S'                                                  00066700
              AIF   ('&MF(1)' NE '&ZTLC').ZG24                          00066800
&XMF          SETC  'S'         SET KEYWORD                             00066900
              AIF   (N'&MF LE 1).ZG23A          CK NUM                  00067000
&ZMS          SETC  '"MF='                                              00067100
&ZMS          SETC  '&ZMS.&MF"'                                         00067200
&ZMS          SETC  '&ZMS "MF"'                                         00067300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00067400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067500
.ZG23A        ANOP  ,                                                   00067600
.*-------------------------------------------------------------------   00067700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067800
.ZG24         ANOP  ,                                                   00067900
&ZTLC         SETC 'L'                                                  00068000
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00068100
&XMF          SETC  'L'         SET KEYWORD                             00068200
              AIF   (N'&MF LE 3).ZG24A          CK NUM                  00068300
&ZMS          SETC  '"MF='                                              00068400
&ZMS          SETC  '&ZMS.&MF"'                                         00068500
&ZMS          SETC  '&ZMS "MF"'                                         00068600
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00068700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068800
.ZG24A        ANOP  ,                                                   00068900
.*-------------------------------------------------------------------   00069000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00069100
              AIF   (N'&SYSLIST NE 0).ZG24B     POSITIONALS?            00069200
              AIF   ('&CONTOKEN' NE '').ZG24B   KEYS?                   00069300
              AIF   ('&REQTOKEN' NE '').ZG24B   KEYS?                   00069400
              AIF   ('&OPTYPE' NE '').ZG24B     KEYS?                   00069500
              AIF   ('&RETCODE' NE '').ZG24B    KEYS?                   00069600
              AIF   ('&RSNCODE' NE '').ZG24B    KEYS?                   00069700
              AGO    .ZG24C     INVOCATION OKAY                         00069800
.ZG24B        ANOP  ,                                                   00069900
&ZMS          SETC  'THE "L" FORM OF "MF"'                              00070000
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00070100
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00070200
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00070300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070400
.ZG24C        ANOP  ,                                                   00070500
.*-------------------------------------------------------------------   00070600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00070700
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00070800
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00070900
              AIF   (N'&MF(2) GT 1).ZG26B       MULTI                   00071000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00071100
.ZG26B        AIF   (K'&MF(2) GT 0).ZG26C                               00071200
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00071300
&ZMS          SETC  'WHEN "L" IS SPECIFIED'                             00071400
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00071500
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00071600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071700
.ZG26C        ANOP  ,                                                   00071800
.*-------------------------------------------------------------------   00071900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00072000
              AIF   (K'&ZXMFCTRL LE 0).ZG26P    NOT I/O                 00072100
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG26P                      00072200
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00072300
&ZMS          SETC  '"MF='                                              00072400
&ZMS          SETC  '&ZMS.&MF"'                                         00072500
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00072600
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00072700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072800
.ZG26P        ANOP  ,                                                   00072900
.*-------------------------------------------------------------------   00073000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00073100
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00073200
&XMFATTR      SETC  '0D'                                                00073300
              AIF   (K'&MF(3) LE 0).ZG29B       PARM                    00073400
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00073500
              AIF   (N'&MF(3) GT 1).ZG29B       MULTI                   00073600
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00073700
.ZG29B        ANOP  ,                                                   00073800
.*-------------------------------------------------------------------   00073900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00074000
              AIF   (K'&ZXMFATTR LE 0).ZG29P    NOT I/O                 00074100
              AIF   ('&XMFATTR'(1,1) NE '(').ZG29P                      00074200
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00074300
&ZMS          SETC  '"MF='                                              00074400
&ZMS          SETC  '&ZMS.&MF"'                                         00074500
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00074600
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00074700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074800
.ZG29P        ANOP  ,                                                   00074900
.*-------------------------------------------------------------------   00075000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00075100
              AIF   (K'&ZXMFATTR LE 0).ZG29S    NOT I/O                 00075200
              AIF   (K'&XMFATTR LE 60).ZG29S    LNG OK                  00075300
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00075400
&ZMS          SETC  '"MF='                                              00075500
&ZMS          SETC  '&ZMS.&MF"'                                         00075600
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00075700
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00075800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075900
.ZG29S        ANOP  ,                                                   00076000
.*-------------------------------------------------------------------   00076100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076200
.ZG31         ANOP  ,                                                   00076300
&ZTLC         SETC 'E'                                                  00076400
              AIF   ('&MF(1)' NE '&ZTLC').ZG39                          00076500
&XMF          SETC  'E'         SET KEYWORD                             00076600
              AIF   (N'&MF LE 3).ZG31A          CK NUM                  00076700
&ZMS          SETC  '"MF='                                              00076800
&ZMS          SETC  '&ZMS.&MF"'                                         00076900
&ZMS          SETC  '&ZMS "MF"'                                         00077000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00077100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077200
.ZG31A        ANOP  ,                                                   00077300
.*-------------------------------------------------------------------   00077400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00077500
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00077600
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00077700
              AIF   (N'&MF(2) GT 1).ZG33B       MULTI                   00077800
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00077900
.ZG33B        AIF   (K'&MF(2) GT 0).ZG33C                               00078000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00078100
&ZMS          SETC  'WHEN "E" IS SPECIFIED'                             00078200
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00078300
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00078400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078500
.ZG33C        ANOP  ,                                                   00078600
.*-------------------------------------------------------------------   00078700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00078800
              AIF   (K'&ZXMFCTRL LE 0).ZG33R    NOT I/O                 00078900
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG33R                      00079000
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00079100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                        00079200
              AIF   (K'&ZCGPR GT 2).ZG33Q                               00079300
              AIF   ('&ZCGPR' EQ '0').ZG33Q                             00079400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00079500
              AIF   (T'&ZCGPR NE 'N').ZG33Q     INVALID REG NAME        00079600
.ZG33P        ANOP  ,                                                   00079700
              AIF   (T'&ZCGPR NE 'N').ZG33R     NON NUMERIC             00079800
              AIF   ('&ZCGPR' LT '1').ZG33Q                             00079900
              AIF   ('&ZCGPR' LE '12').ZG33R                            00080000
.ZG33Q        ANOP  ,                                                   00080100
&ZMS          SETC  '"MF='                                              00080200
&ZMS          SETC  '&ZMS.&MF"'                                         00080300
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00080400
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00080500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00080600
.ZG33R        ANOP  ,                                                   00080700
.*-------------------------------------------------------------------   00080800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00080900
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00081000
.ZG37A   AIF   ('&MF(3)' NE 'COMPLETE').ZG38A                           00081100
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00081200
.*-------------------------------------------------------------------   00081300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00081400
.ZG38A        AIF   (K'&XMFSCK GT 0).ZG38C      KEYWORD                 00081500
              AIF   (K'&MF(3) LE 0).ZG38B                               00081600
&ZMS          SETC  '"MF='                                              00081700
&ZMS          SETC  '&ZMS.&MF"'                                         00081800
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00081900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00082000
&ZMS          SETC  '&ZMS "COMPLETE".'                                  00082100
              MNOTE 8,' &ZMS '                                          00082200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082300
.ZG38B        ANOP  ,                                                   00082400
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00082500
.ZG38C        ANOP  ,                                                   00082600
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00082700
.*------------------------------------------------------------------    00082800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00082900
.ZG39         ANOP  ,                                                   00083000
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00083100
              AIF   (K'&XMF GT 0).ZG39E         VALID ARG               00083200
              AIF   (T'&MF EQ 'O').ZG39D        OMITTED                 00083300
&ZASYSLNDX    SETA  0                                                   00083400
.ZG39A        ANOP  ,           POSITIONAL MACRO KEY                    00083500
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00083600
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C                    00083700
&ZTLC         SETC 'MF'                                                 00083800
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A           00083900
.ZG39B        ANOP  ,                                                   00084000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00084100
&ZMS          SETC  'THE "MF" KEY'                                      00084200
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00084300
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00084400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00084500
              AGO   .ZG39E                                              00084600
.ZG39C        ANOP  ,                                                   00084700
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00084800
&ZMS          SETC  '"MF='                                              00084900
&ZMS          SETC  '&ZMS.&MF"'                                         00085000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00085100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00085200
&ZMS          SETC  '&ZMS "S",'                                         00085300
&ZMS          SETC  '&ZMS "L",'                                         00085400
&ZMS          SETC  '&ZMS OR "E".'                                      00085500
              MNOTE 8,' &ZMS '                                          00085600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085700
              AGO   .ZG39E                                              00085800
.ZG39D        ANOP  ,                                                   00085900
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00086000
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00086100
.ZG39E        ANOP  ,                                                   00086200
.********************************************************************   00086300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00086400
.********************************************************************   00086500
              ACTR  10000                                               00086600
.*-------------------------------------------------------------------   00086700
.***AG.MF03 MF=(SLE)                                                    00086800
              AIF   ('&XMF' EQ 'L').ZGMFX                               00086900
.*----------------------------------------------------------------***   00087000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00087100
              AIF   (N'&CONTOKEN LE 1).ZG2A     CK NUM                  00087200
&ZMS          SETC  '"CONTOKEN='                                        00087300
&ZMS          SETC  '&ZMS.&CONTOKEN"'                                   00087400
&ZMS          SETC  '&ZMS "CONTOKEN"'                                   00087500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00087600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087700
.ZG2A         ANOP  ,                                                   00087800
.*-------------------------------------------------------------------   00087900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00088000
&ZXCONTOKEN   SETC  'INPUT'     SET IN/OUTPUT                           00088100
&XCONTOKEN    SETC  '&CONTOKEN(1)'              SET XVARIABLE           00088200
              AIF   (N'&CONTOKEN GT 1).ZG2B     MULTI                   00088300
&XCONTOKEN    SETC  '&CONTOKEN'                 SET XVARIABLE           00088400
.ZG2B         AIF   (K'&CONTOKEN(1) GT 0).ZG2C                          00088500
&ZXCONTOKEN   SETC  ''          RESET IN/OUTPUT                         00088600
&ZMS          SETC  ' '                                                 00088700
&ZMS          SETC  '&ZMS "CONTOKEN" KEY AND ITS'                       00088800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00088900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089000
.ZG2C         ANOP  ,                                                   00089100
.*-------------------------------------------------------------------   00089200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00089300
              AIF   (K'&ZXCONTOKEN LE 0).ZG2R   NOT I/O                 00089400
              AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R                     00089500
&ZCGPR        SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)                      00089600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00089700
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00089800
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00089900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00090000
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00090100
.ZG2P         ANOP  ,                                                   00090200
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00090300
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00090400
              AIF   ('&ZCGPR' LE '12').ZG2R                             00090500
.ZG2Q         ANOP  ,                                                   00090600
&ZMS          SETC  '"CONTOKEN='                                        00090700
&ZMS          SETC  '&ZMS.&CONTOKEN"'                                   00090800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00090900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00091000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00091100
.ZG2R         ANOP  ,                                                   00091200
.*----------------------------------------------------------------***   00091300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00091400
              AIF   (N'&REQTOKEN LE 1).ZG5A     CK NUM                  00091500
&ZMS          SETC  '"REQTOKEN='                                        00091600
&ZMS          SETC  '&ZMS.&REQTOKEN"'                                   00091700
&ZMS          SETC  '&ZMS "REQTOKEN"'                                   00091800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00091900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092000
.ZG5A         ANOP  ,                                                   00092100
.*-------------------------------------------------------------------   00092200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00092300
&ZXREQTOKEN   SETC  'INPUT'     SET IN/OUTPUT                           00092400
&XREQTOKEN    SETC  '&REQTOKEN(1)'              SET XVARIABLE           00092500
              AIF   (N'&REQTOKEN GT 1).ZG5B     MULTI                   00092600
&XREQTOKEN    SETC  '&REQTOKEN'                 SET XVARIABLE           00092700
.ZG5B         AIF   (K'&REQTOKEN(1) GT 0).ZG5C                          00092800
&ZXREQTOKEN   SETC  ''          RESET IN/OUTPUT                         00092900
&ZMS          SETC  ' '                                                 00093000
&ZMS          SETC  '&ZMS "REQTOKEN" KEY AND ITS'                       00093100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00093200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093300
.ZG5C         ANOP  ,                                                   00093400
.*-------------------------------------------------------------------   00093500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00093600
              AIF   (K'&ZXREQTOKEN LE 0).ZG5R   NOT I/O                 00093700
              AIF   ('&XREQTOKEN'(1,1) NE '(').ZG5R                     00093800
&ZCGPR        SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                      00093900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00094000
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00094100
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00094200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00094300
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00094400
.ZG5P         ANOP  ,                                                   00094500
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00094600
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00094700
              AIF   ('&ZCGPR' LE '12').ZG5R                             00094800
.ZG5Q         ANOP  ,                                                   00094900
&ZMS          SETC  '"REQTOKEN='                                        00095000
&ZMS          SETC  '&ZMS.&REQTOKEN"'                                   00095100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00095200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00095300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095400
.ZG5R         ANOP  ,                                                   00095500
.*----------------------------------------------------------------***   00095600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00095700
              AIF   (N'&OPTYPE LE 1).ZG8A       CK NUM                  00095800
&ZMS          SETC  '"OPTYPE='                                          00095900
&ZMS          SETC  '&ZMS.&OPTYPE"'                                     00096000
&ZMS          SETC  '&ZMS "OPTYPE"'                                     00096100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00096200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096300
.ZG8A         ANOP  ,                                                   00096400
.*-------------------------------------------------------------------   00096500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00096600
&XOPTYPE      SETC  ''          INITIALIZE XVARIABLE                    00096700
.ZG9A   AIF   ('&OPTYPE(1)' NE 'COMPLETE').ZG10A                        00096800
&XOPTYPE      SETC  'COMPLETE'  SET KEYWORD                             00096900
.*-------------------------------------------------------------------   00097000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00097100
.ZG10A   AIF   ('&OPTYPE(1)' NE 'TEST').ZG11A                           00097200
&XOPTYPE      SETC  'TEST'      SET KEYWORD                             00097300
.*-------------------------------------------------------------------   00097400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00097500
.ZG11A        AIF   (K'&XOPTYPE GT 0).ZG11C     KEYWORD                 00097600
              AIF   (K'&OPTYPE(1) LE 0).ZG11B                           00097700
&ZMS          SETC  '"OPTYPE='                                          00097800
&ZMS          SETC  '&ZMS.&OPTYPE"'                                     00097900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00098000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00098100
&ZMS          SETC  '&ZMS "COMPLETE"'                                   00098200
&ZMS          SETC  '&ZMS OR "TEST".'                                   00098300
              MNOTE 8,' &ZMS '                                          00098400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00098500
.ZG11B        ANOP  ,                                                   00098600
&XOPTYPE      SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00098700
.ZG11C        ANOP  ,                                                   00098800
&ZXOPTYPE     SETC  'INPUT'     SET IN/OUTPUT                           00098900
.*----------------------------------------------------------------***   00099000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00099100
              AIF   (N'&RETCODE LE 1).ZG13A     CK NUM                  00099200
&ZMS          SETC  '"RETCODE='                                         00099300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00099400
&ZMS          SETC  '&ZMS "RETCODE"'                                    00099500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00099600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099700
.ZG13A        ANOP  ,                                                   00099800
.*-------------------------------------------------------------------   00099900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00100000
              AIF   (K'&RETCODE(1) LE 0).ZG13C  NO PARM                 00100100
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00100200
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00100300
              AIF   (N'&RETCODE GT 1).ZG13C                             00100400
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00100500
.ZG13C        ANOP  ,                                                   00100600
.*-------------------------------------------------------------------   00100700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00100800
              AIF   (K'&ZXRETCODE LE 0).ZG13R   NOT I/O                 00100900
              AIF   ('&XRETCODE'(1,1) NE '(').ZG13R                     00101000
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00101100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                        00101200
              AIF   (K'&ZCGPR GT 2).ZG13Q                               00101300
              AIF   ('&ZCGPR' EQ '0').ZG13Q                             00101400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00101500
              AIF   (T'&ZCGPR NE 'N').ZG13Q     INVALID REG NAME        00101600
.ZG13P        ANOP  ,                                                   00101700
              AIF   (T'&ZCGPR NE 'N').ZG13R     NON NUMERIC             00101800
              AIF   ('&ZCGPR' EQ '15').ZG13R                            00101900
              AIF   ('&ZCGPR' LT '2').ZG13Q                             00102000
              AIF   ('&ZCGPR' LE '12').ZG13R                            00102100
.ZG13Q        ANOP  ,                                                   00102200
&ZMS          SETC  '"RETCODE='                                         00102300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00102400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00102500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'            00102600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00102700
.ZG13R        ANOP  ,                                                   00102800
.*----------------------------------------------------------------***   00102900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00103000
              AIF   (N'&RSNCODE LE 1).ZG16A     CK NUM                  00103100
&ZMS          SETC  '"RSNCODE='                                         00103200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00103300
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00103400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00103500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00103600
.ZG16A        ANOP  ,                                                   00103700
.*-------------------------------------------------------------------   00103800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00103900
              AIF   (K'&RSNCODE(1) LE 0).ZG16C  NO PARM                 00104000
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00104100
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00104200
              AIF   (N'&RSNCODE GT 1).ZG16C                             00104300
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00104400
.ZG16C        ANOP  ,                                                   00104500
.*-------------------------------------------------------------------   00104600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00104700
              AIF   (K'&ZXRSNCODE LE 0).ZG16R   NOT I/O                 00104800
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG16R                     00104900
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00105000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                        00105100
              AIF   (K'&ZCGPR GT 2).ZG16Q                               00105200
              AIF   ('&ZCGPR' EQ '0').ZG16R                             00105300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00105400
              AIF   (T'&ZCGPR NE 'N').ZG16Q     INVALID REG NAME        00105500
.ZG16P        ANOP  ,                                                   00105600
              AIF   (T'&ZCGPR NE 'N').ZG16R     NON NUMERIC             00105700
              AIF   ('&ZCGPR' EQ '0').ZG16R                             00105800
              AIF   ('&ZCGPR' LT '2').ZG16Q                             00105900
              AIF   ('&ZCGPR' LE '12').ZG16R                            00106000
.ZG16Q        ANOP  ,                                                   00106100
&ZMS          SETC  '"RSNCODE='                                         00106200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00106300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00106400
              MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'             00106500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00106600
.ZG16R        ANOP  ,                                                   00106700
.******************************************************************     00106800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00106900
.******************************************************************     00107000
              ACTR  10000                                               00107100
.*----------------------------------------------------------------***   00107200
.***AH.P02 EXTRA POSITIONALS                                            00107300
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00107400
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00107500
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00107600
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00107700
.ZGLISTX1     ANOP  ,                                                   00107800
&ZCVAL        SETC  ''          ERROR FIELD                             00107900
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00108000
.ZGLIST2      ANOP  ,                                                   00108100
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00108200
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00108300
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00108400
              AGO   .ZGLIST2                                            00108500
.*                                                                      00108600
.ZGLIST3      ANOP  ,                                                   00108700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00108800
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00108900
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00109000
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00109100
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00109200
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00109300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00109400
.ZGLISTX      ANOP  ,                                                   00109500
&ZASYSLNDX    SETA  0                                                   00109600
.*-------------------------------------------------------------------   00109700
.***AG.MF04 MF=(SLE)                                                    00109800
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00109900
.*******************************************************************    00110000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00110100
.*******************************************************************    00110200
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00110300
.*******************************************************************    00110400
.***AE.01  START OF IXLFCOMP MACRO CODE                                 00110500
.*******************************************************************    00110600
              LCLC  &M0M0001                 NAME                       00110700
&M0M0001      SETC  '&XLABEL'                SET NAME                   00110800
              AIF   (K'&XLABEL NE 0).XLAB2                              00110900
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00111000
.*                                                                      00111100
.XLAB2        ANOP  ,                                                   00111200
              AIF   ('&XMF' EQ 'L').XLAB3                               00111300
&M0M0001 DS    0H                             IXLFCOMP-0                00111400
.XLAB3        ANOP  ,                                                   00111500
.*******************************************************************    00111600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00111700
.*******************************************************************    00111800
              PUSH  PRINT                                               00111900
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00112000
              PRINT OFF         ++ PR01                                 00112100
              AGO   .ZPRNTXX                                            00112200
.ZPRINTX      PRINT ON                                                  00112300
.ZPRNTXX      ANOP  ,                                                   00112400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00112500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00112600
.********************************************************************   00112700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00112800
.********************************************************************   00112900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00113000
                      LCLA  &ZOPN1         INVOCATION INDEX             00113100
                      LCLC  &ZOPL(4095)    LABEL                        00113200
                      LCLC  &ZOPO(4095)    OPERATION                    00113300
                      LCLC  &ZOPV(4095)    VALUE                        00113400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00113500
.*                                                                      00113600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00113700
.******************************************************************     00113800
.***AL.L10 IXLFCOMP FMT=LIST MF=S!L PARAMETERS                          00113900
.******************************************************************     00114000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00114100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00114200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00114300
&XMFATTR              SETC  '0D'                                        00114400
.*                                                                      00114500
&ZOPN                 SETA  &ZOPN+1                                     00114600
&ZOPL(&ZOPN)          SETC  ' '                                         00114700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00114800
&ZOPO(&ZOPN)          SETC  'B'                                         00114900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00115000
                      AGO   .ZALVL6B                                    00115100
.ZALVL6A              ANOP                                              00115200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00115300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00115400
&ZOPN                 SETA  &ZOPN+1                                     00115500
&ZOPL(&ZOPN)          SETC  ' '                                         00115600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00115700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00115800
.ZALVL6B              ANOP                                              00115900
&ZOPD(&ZOPN)          SETC  '++ IXLFCOMP ARG PARMS'                     00116000
.*                                                                      00116100
&ZOPN                 SETA  &ZOPN+1                                     00116200
&ZOPL(&ZOPN)          SETC  ' '                                         00116300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00116400
&ZOPV(&ZOPN)          SETC  '1'                                         00116500
&ZOPD(&ZOPN)          SETC  ' '                                         00116600
.*                                                                      00116700
.ZLMFSL2              ANOP  ,                                           00116800
.*-------------------------------------------------------------------   00116900
.***AM.L00  IXLFCOMP FMT=LIST name                                      00117000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00117100
&ZOPN                 SETA &ZOPN+1                                      00117200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00117300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00117400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00117500
&ZOPD(&ZOPN)          SETC '++ IXLFCOMP NAME'                           00117600
.ZLMFSL2M             ANOP  ,                                           00117700
.*-------------------------------------------------------------------   00117800
.***AM.L01  IXLFCOMP FMT=LIST PARAMETERS                                00117900
&ZOPN                 SETA &ZOPN+1                                      00118000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00118100
&ZOPO(&ZOPN)          SETC 'DS'                                         00118200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00118300
&ZOPD(&ZOPN)          SETC '++ IXLFCOMP PARM LIST'                      00118400
.*-------------------------------------------------------------------   00118500
.***AM.L02 XVERSION XL1                                                 00118600
&ZOPN                 SETA &ZOPN+1                                      00118700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00118800
&ZOPO(&ZOPN)          SETC 'DS'                                         00118900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00119000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00119100
.*-------------------------------------------------------------------   00119200
.***AM.L03 XFLAGS BL.8                                                  00119300
&ZOPN                 SETA &ZOPN+1                                      00119400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00119500
&ZOPO(&ZOPN)          SETC 'DS'                                         00119600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00119700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00119800
.*                                                                      00119900
&ZOPN                 SETA  &ZOPN+1                                     00120000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOPTYPE_TEST'                    00120100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00120200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00120300
&ZOPD(&ZOPN)          SETC  '++ XOPTYPE.'                               00120400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TEST'                         00120500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00120600
.*                                                                      00120700
&ZOPN                 SETA  &ZOPN+1                                     00120800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYRESULTSAVAIL'               00120900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00121000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00121100
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00121200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FCOMP'                        00121300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00121400
.*-------------------------------------------------------------------   00121500
.***AM.L09  XRSV0001 CL2                                                00121600
&ZOPN                 SETA &ZOPN+1                                      00121700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00121800
&ZOPO(&ZOPN)          SETC 'DS'                                         00121900
&ZOPV(&ZOPN)          SETC 'CL2'                                        00122000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00122100
.*-------------------------------------------------------------------   00122200
.***AM.L09  XCONTOKEN CL16                                              00122300
&ZOPN                 SETA &ZOPN+1                                      00122400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        00122500
&ZOPO(&ZOPN)          SETC 'DS'                                         00122600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00122700
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN '                            00122800
.*-------------------------------------------------------------------   00122900
.***AM.L09  XREQTOKEN CL16                                              00123000
&ZOPN                 SETA &ZOPN+1                                      00123100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        00123200
&ZOPO(&ZOPN)          SETC 'DS'                                         00123300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00123400
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN '                            00123500
.*-------------------------------------------------------------------   00123600
.***AM.L10 END OF IXLFCOMP LIST PARAMETERS                              00123700
&ZOPN                 SETA &ZOPN+1                                      00123800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00123900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00124000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00124100
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00124200
.*                                                                      00124300
&ZOPN                 SETA &ZOPN+1                                      00124400
&ZOPL(&ZOPN)          SETC ' '                                          00124500
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00124600
&ZOPV(&ZOPN)          SETC '1'                                          00124700
&ZOPD(&ZOPN)          SETC ' '                                          00124800
.*-------------------------------------------------------------------   00124900
.***AL.L12 IXLFCOMP FMT=LIST MF=S!L PARAMETERS                          00125000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00125100
.*                                                                      00125200
&ZOPN                 SETA  &ZOPN+1                                     00125300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00125400
&ZOPO(&ZOPN)          SETC  'DC'                                        00125500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00125600
&ZOPD(&ZOPN)          SETC  '++ IXLFCOMP ARG PARMS'                     00125700
.*                                                                      00125800
.ZLMFSLX              ANOP  ,                                           00125900
.*-------------------------------------------------------------------   00126000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00126100
&ZPLLEN               SETA 36                                           00126200
.*                                                                      00126300
.******************************************************************     00126400
.***AI.L01 IXLFCOMP FMT=LIST FILL IN PARAMETER AREA                     00126500
.******************************************************************     00126600
                      ACTR  10000                                       00126700
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00126800
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00126900
&ZCVAL                SETC  'LAE'          XAX MODE                     00127000
.ZIMFXA               ANOP ,                                            00127100
.*                                                                      00127200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00127300
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00127400
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00127500
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00127600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00127700
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00127800
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00127900
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00128000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00128100
&ZOPN                 SETA  &ZOPN+1                                     00128200
&ZOPL(&ZOPN)          SETC  ' '                                         00128300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00128400
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00128500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00128600
                      AGO   .ZIMFNX                                     00128700
.*                                                                      00128800
.ZIMFN2               ANOP ,                                            00128900
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00129000
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00129100
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00129200
&ZOPN                 SETA  &ZOPN+1                                     00129300
&ZOPL(&ZOPN)          SETC  ' '                                         00129400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00129500
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00129600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00129700
                      AGO   .ZIMFNX                                     00129800
.ZIMFNX1              ANOP ,                                            00129900
&ZOPN                 SETA  &ZOPN+1                                     00130000
&ZOPL(&ZOPN)          SETC  ' '                                         00130100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00130200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00130300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00130400
.ZIMFNX               ANOP ,                                            00130500
.********************************************************************   00130600
.***AI.L02 IXLFCOMP FMT=LIST INITIALIZE PARAMETER AREA                  00130700
.********************************************************************   00130800
.***AI.L03 MF=(SLE)                                                     00130900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00131000
.*                                                                      00131100
&ZOPN                 SETA  &ZOPN+1                                     00131200
&ZOPL(&ZOPN)          SETC  ' '                                         00131300
&ZOPO(&ZOPN)          SETC  'XC'                                        00131400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00131500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00131600
.ZIMFLX               ANOP  ,                                           00131700
.*-------------------------------------------------------------------   00131800
.***AI.L05 XFLAGS BL1                                                   00131900
&ZW                   SETC  ''                                          00132000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00132100
.*-------------------------------------------------------------------   00132200
.***AI.L08 XFLAGS "TEST"                                                00132300
.***      BL1'1XXXXXXX'                                                 00132400
         AIF   ('&XOPTYPE' NE 'TEST').ZI3A                              00132500
&ZW                   SETC  '&ZW.1'                                     00132600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00132700
                      AGO   .ZI3C                                       00132800
.*                                                                      00132900
.ZI3A                 ANOP  ,                                           00133000
&ZW                   SETC  '&ZW.0'                                     00133100
.ZI3C                 ANOP  ,                                           00133200
.*-------------------------------------------------------------------   00133300
.***AI.L08 XFLAGS "FCOMP"                                               00133400
.***      BL1'XXXXXXX1'                                                 00133500
&ZW                   SETC  '&ZW.0000000'                               00133600
.*-------------------------------------------------------------------   00133700
.***AI.L11 XFLAGS BL1                                                   00133800
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00133900
&ZOPN                 SETA  &ZOPN+1                                     00134000
&ZOPL(&ZOPN)          SETC  ' '                                         00134100
&ZOPO(&ZOPN)          SETC  'OI'                                        00134200
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00134300
&ZOPD(&ZOPN)          SETC  '++ 39 BL1'                                 00134400
.ZI4E                 ANOP  ,                                           00134500
.*-------------------------------------------------------------------   00134600
.***AI.L25  XCONTOKEN CL16                                              00134700
                      AIF   ('&ZXCONTOKEN' EQ '').ZI6E                  00134800
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI6E            00134900
&ZCGPR                SETC  '&XCONTOKEN'                                00135000
.*                                                                      00135100
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI6B             00135200
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  00135300
.ZI6B                 ANOP  ,                                           00135400
.*                                                                      00135500
&ZOPN                 SETA  &ZOPN+1                                     00135600
&ZOPL(&ZOPN)          SETC  ' '                                         00135700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00135800
&ZOPV(&ZOPN)          SETC  '4(16,1),&ZCGPR'                            00135900
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  00136000
.*                                                                      00136100
.ZI6E                 ANOP  ,                                           00136200
.*-------------------------------------------------------------------   00136300
.***AI.L25  XREQTOKEN CL16                                              00136400
                      AIF   ('&ZXREQTOKEN' EQ '').ZI7E                  00136500
                      AIF   ('&ZXREQTOKEN' EQ 'OUTPUT').ZI7E            00136600
&ZCGPR                SETC  '&XREQTOKEN'                                00136700
.*                                                                      00136800
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZI7B             00136900
&ZCGPR   SETC  '0('.'&XREQTOKEN'(2,K'&XREQTOKEN-2).')'                  00137000
.ZI7B                 ANOP  ,                                           00137100
.*                                                                      00137200
&ZOPN                 SETA  &ZOPN+1                                     00137300
&ZOPL(&ZOPN)          SETC  ' '                                         00137400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00137500
&ZOPV(&ZOPN)          SETC  '20(16,1),&ZCGPR'                           00137600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  00137700
.*                                                                      00137800
.ZI7E                 ANOP  ,                                           00137900
.*-------------------------------------------------------------------   00138000
&ZOPN1                SETA &ZOPN                                        00138100
.*******************************************************************    00138200
.***  PROCESS IXLFCOMP OUTPUT PARAMETERS                                00138300
.*******************************************************************    00138400
                      ACTR  10000                                       00138500
.*******************************************************************    00138600
.***AO.X02  RETURN CODE PROCESSING                                      00138700
.*******************************************************************    00138800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00138900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00139000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00139100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00139200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00139300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00139400
&ZOPN                 SETA  &ZOPN+1                                     00139500
&ZOPL(&ZOPN)          SETC  ' '                                         00139600
&ZOPO(&ZOPN)          SETC  'ST'                                        00139700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00139800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00139900
                      AGO   .ZMRETX                                     00140000
.*                                                                      00140100
.ZMRET2               ANOP  ,                                           00140200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00140300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00140400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00140500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00140600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00140700
&ZOPN                 SETA  &ZOPN+1                                     00140800
&ZOPL(&ZOPN)          SETC  ' '                                         00140900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00141000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00141100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00141200
.ZMRETX               ANOP  ,                                           00141300
.*******************************************************************    00141400
.***AO.X03  REASON CODE PROCESSING                                      00141500
.*******************************************************************    00141600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00141700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00141800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00141900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00142000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00142100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00142200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00142300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00142400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00142500
&ZOPN                 SETA  &ZOPN+1                                     00142600
&ZOPL(&ZOPN)          SETC  ' '                                         00142700
&ZOPO(&ZOPN)          SETC  'ST'                                        00142800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00142900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00143000
                      AGO   .ZMRSNX                                     00143100
.*                                                                      00143200
.ZMRSN2               ANOP  ,                                           00143300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00143400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00143500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00143600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00143700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00143800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00143900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00144000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00144100
&ZOPN                 SETA  &ZOPN+1                                     00144200
&ZOPL(&ZOPN)          SETC  ' '                                         00144300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00144400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00144500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00144600
.ZMRSNX               ANOP  ,                                           00144700
.*******************************************************************    00144800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00144900
.*******************************************************************    00145000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00145100
.*******************************************************************    00145200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00145300
.*******************************************************************    00145400
                      ACTR  10000                                       00145500
.*                                                                      00145600
                      LCLA  &ZLC           COLUMN POSITION              00145700
                      LCLA  &ZOPX          LIST TABLE INDEX             00145800
                      LCLC  &ZLL           LABEL                        00145900
                      LCLC  &ZLOP          OPERATION                    00146000
                      LCLC  &ZLV           VALUE                        00146100
                      LCLC  &ZLD           DESCRIPTION                  00146200
.*                                                                      00146300
&ZOPX                 SETA  1                                           00146400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00146500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00146600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00146700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00146800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00146900
                      AIF   (K'&ZLD LE 0).ZL5                           00147000
&ZLC                  SETA  35             COMMENT COLUMN               00147100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00147200
&ZLC                  SETA  33             COMMMENT COLUMN              00147300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00147400
&ZLV                  SETC  '&ZLV'.' '                                  00147500
                      AGO   .ZL3                                        00147600
.*                                                                      00147700
.ZL4                  ANOP  ,                                           00147800
&ZLV                  SETC  '&ZLV'.' '                                  00147900
.ZL5                  ANOP  ,                                           00148000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00148100
.*                                                                      00148200
&ZLL     &ZLOP &ZLV                                                     00148300
.*                                                                      00148400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00148500
                      AGO   .ZL2           CONTINUE LOOPING             00148600
.*                                                                      00148700
.ZLX                  ANOP  ,                                           00148800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00148900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00149000
.**------------------------------------------------------------------** 00149100
.**  Start of user maclasm code                                      ** 00149200
.**------------------------------------------------------------------** 00149300
.*                                                                      00149400
.**------------------------------------------------------------------** 00149500
.**  Ensure AR1 is 0 for primary callers                             ** 00149600
.**------------------------------------------------------------------** 00149700
.*                                                                      00149800
.**  This code is necessary because the entry linkage of the called  ** 00149900
.**  routine needs to reference fields in the parameter list while   ** 00150000
.**  executing in AR mode without knowing the mode of the caller.    ** 00150100
.*                                                                      00150200
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    00150300
         LAE   1,0(1,0)                 Make sure AR1 is cleared        00150400
.CALLSKIPSETAR1 ANOP ,                                                  00150500
.*                                                                      00150600
.*                                                                      00150700
.**------------------------------------------------------------------** 00150800
.**  Generate the linkage to the force completion                    ** 00150900
.**------------------------------------------------------------------** 00151000
.*                                                                      00151100
.**  Note that in the following instructions the index register is   ** 00151200
.**  used instead of the base register so that ALET translation is   ** 00151300
.**  not performed and the code works the same in both primary and   ** 00151400
.**  AR mode.                                                        ** 00151500
.*                                                                      00151600
         L     15,16(0,0)               Get CVT address            @D1C 00151700
         L     15,140(15,0)             Get ECVT address           @D1C 00151800
         L     15,256(15,0)             Get XRAT address           @D1C 00151900
         L     15,48(15,0)              FComp mainline routine     @D1C 00152000
         BALR  14,15                    Branch to routine          @D1C 00152100
.*                                                                      00152200
.*                                                                      00152300
.**------------------------------------------------------------------** 00152400
.**  End of user maclasm code                                        ** 00152500
.**------------------------------------------------------------------** 00152600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00152700
.ZLINKX               ANOP  ,                                           00152800
.*******************************************************************    00152900
.***AP.X01  FORMAT GENERATED CODE                                       00153000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00153100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00153200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00153300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00153400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00153500
                      AIF   (K'&ZLD LE 0).ZL51                          00153600
&ZLC                  SETA  35             COMMENT COLUMN               00153700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00153800
&ZLC                  SETA  33             COMMENT COLUMN               00153900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00154000
&ZLV                  SETC  '&ZLV'.' '                                  00154100
                      AGO   .ZL31                                       00154200
.*                                                                      00154300
.ZL41                 ANOP  ,                                           00154400
&ZLV                  SETC  '&ZLV'.' '                                  00154500
.ZL51                 ANOP  ,                                           00154600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00154700
.*                                                                      00154800
&ZLL     &ZLOP &ZLV                                                     00154900
.*                                                                      00155000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00155100
                      AGO   .ZL21          CONTINUE LOOPING             00155200
.*                                                                      00155300
.ZLX1                 ANOP  ,                                           00155400
.*******************************************************************    00155500
.***AP.X02  END OF IXLFCOMP MACRO                                       00155600
&ZIXLFCOMP            SETC  'YES'          SET IXLFCOMP USED            00155700
         POP   PRINT                                                    00155800
*                                            IXLFCOMP-0                 00155900
         SPACE 1                                                        00156000
.ZLX2                 ANOP  ,                                           00156100
         MEND                                                           00156200
**********************************************************************/ 00156300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00156400
*%IXLFCOMP: MACRO KEYS(CONTOKEN,REQTOKEN,OPTYPE,RETCODE,RSNCODE,        00156500
*                 PLISTVER,MF);                                         00156600
*  ANS('?'!!MACLABEL!!' '!!'IXLFCOMQ '!!MACLIST!!                       00156700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00156800
*%END IXLFCOMP;                                                         00156900
