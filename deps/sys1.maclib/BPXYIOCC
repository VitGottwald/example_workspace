*        %GOTO IOCCPRO  ;         /* Bilingual header                           
         MACRO                                                                  
         BPXYIOCC  &DSECT=YES,&LIST=YES,&MCAST=NO,&RTEV3=YES 8@D1A @PIC         
         GBLB  &IOCC411                                                         
         AIF   (&IOCC411 EQ 1).E411                                             
&IOCC411 SETB  1                                                                
         AIF   ('&LIST' EQ 'YES').A411                                          
         PUSH  PRINT  BPXYIOCC: Ioctl Command Constant Definitions              
         PRINT OFF                                                              
         AGO   .A411                                                            
*                                  */                                           
*%IOCCPRO : ;                                                                   
*/****START OF SPECIFICATIONS******************************************         
*                                                                               
*    $MAC (BPXYIOCC) COMP(SCPX1) PROD(BPX):                                     
*                                                                               
*01* MACRO NAME: BPXYIOCC                                                       
*                                                                               
*01* DSECT NAME: N/A                                                            
*                                                                               
*01* DESCRIPTIVE NAME: OpenMVS Ioctl Command Constant Definitions               
*                                                                               
*02*   ACRONYM: None                                                            
**/                                                                             
*/*01* PROPRIETARY STATEMENT=                                        */         
*/***PROPRIETARY_STATEMENT********************************************/         
*/*                                                                  */         
*/*                                                                  */         
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */         
*/* 5650-ZOS COPYRIGHT IBM CORP. 1993, 2022                          */         
*/*                                                                  */         
*/* STATUS= HBB77D0                                                  */         
*/*                                                                  */         
*/***END_OF_PROPRIETARY_STATEMENT*************************************/         
*/*                                                                             
*                                                                               
*01* EXTERNAL CLASSIFICATION:  PI                                               
*01* END OF EXTERNAL CLASSIFICATION:                                            
*                                                                               
*01* FUNCTION:                                                                  
*                                                                               
*    This file contains definitions of constants that are used                  
*    as commands to the Ioctl syscall by OpenMVS.                               
*                                                                               
*01* METHOD OF ACCESS:                                                          
*                                                                               
*02*   PLAS:                                                                    
*                                                                               
*        %INCLUDE SYSLIB(BPXYIOCC)                                              
*                                                                               
*                                                                               
*02*   ASM:                                                                     
*                                                                               
*       BPXYIOCC                                                                
*                                                                               
*01* SIZE: N/A                                                                  
*                                                                               
*01* POINTED TO BY: N/A                                                         
*                                                                               
*01* CREATED BY: N/A                                                            
*                                                                               
*01* DELETED BY: N/A                                                            
*                                                                               
*01* STORAGE ATTRIBUTES: N/A                                                    
*02*   SUBPOOL:                                                                 
*02*   KEY:                                                                     
*02*   RESIDENCY:                                                               
*                                                                               
*01* FREQUENCY: N/A                                                             
*                                                                               
*01* SERIALIZATION: N/A                                                         
*                                                                               
*01* DEPENDENCIES: None                                                         
*                                                                               
*01* NOTES:                                                                     
*                                                                               
*      1) Constants declared in this macro should start with IocC#              
*                                                                               
*      2) Ioctls are built as follows (see TCP/IP RTP TCSOCKRE for              
*         more details):                                                        
*                                                                               
*            SIOCSETRTTD X'8008C981'                                            
*                                                                               
*              bit 31 - Input value specified      (80)                         
*              bit 30 - Output value specified                                  
*              bit 27-16 Length of value specified (008)                        
*              bit 15-8  Char used to describe     (C9)                         
*                        type of request ('I'= Inet)                            
*              bit 7-0  Unique command descriptor  (81)                         
*                                                                               
*      3) Command range 1-255 is reserved fo OpenMVS.                           
*                                                                               
*      4) To include the Multicast Source Structures you must:    4@DMA         
*         A> For PL/X -                                                         
*               Specify: %BPXY_MULTICAST_STRUCTS = 'Yes'           @DNC         
*            For Assembler =                                       @DNA         
*               Specify: MCAST=YES when including the macro        @DNA         
*         B> Also include the BPXYSOCK macro.                                   
*                                                                               
*                                                                               
*01* COMPONENT: OpenMVS (SCPX1)                                                 
*                                                                               
*01* DISTRIBUTION LIBRARY:  AMACLIB                                             
*                                                                               
*01* EYE-CATCHER: None - this is not a control block definition.                
*02*   OFFSET:  N/A                                                             
*02*   LENGTH:  N/A                                                             
*                                                                               
*01* CHANGE-ACTIVITY:                                                           
*                                                                               
*  $D1=DOAA002,  HOM1120, 931008, PDJZ: DCR A002.03 Inet Sockets                
*  $D2=DOAA002,  HOM1120, 931008, PDJZ: DCR A002.08 Unix Domain Sockets         
*  $P1=POA0100,  HOM1120, 931108, PDJZ: Assembler corrections                   
*  $P2=POA0133,  HOM1120, 931111, PDJV: Add blocking/non-blocking               
*                                       support                                 
*  $P3=POA0226,  HOM1120, 940118, PDHR: Add signalling support                  
*  $P4=POA0331,  HOM1120, 940210, PDJZ: fix constant for SECIGET                
*  $P4=PPF0001,  HOM1130, 940210, PDJZ: fix constant for SECIGET                
*  $D3=DPFA054,  HOM1130, 940503, PDJP: DCR A054.03 - pty packet mode           
*  $D4=DPFA066,  HOM1130, 940621, PDJP: DCR A066.01 - 3270                      
*                                       packet/passthru                         
*  $D5=DPFA053,  HOM1130, 940709, PDHR: Add support for converging              
*                                       sockets changes                         
*  $D6=DPFA065,  HOM1130, 941216, PDXK: DCR A065.36 UU tty functions            
*                                       and A090.03 Code Page Chg Noty          
*  $D7=DPFA090,  HOM1130  950121, PDJP: (DCR A090.02) code page and             
*                                       extended packet                         
*  $D8=DRGA137   HOM1140  951130  PDJT: DCR A137.03 - Update OFTE               
*  $P5=PRG0138   HOM1140  960221  PDJT: EditAcl for DFSC                        
*  $P6=PSP0073,  HOM1150  960421  PDNU: Tcp/Ip Engine Rewrite                   
*  $P7=PQC2560,  HBB6603  960913  PDJP: Secure data ioctl() - OW22634           
*  $D9=DUXA222,  HBB6605  970326  PDND: STREAMS for Netware                     
*  $P8=PVT0321,  HBB6606  971216  PDJV: Correct comment                         
*  $DA=PWA0391   JBB6607  980901  PDJT: Register File Interest  A326.01         
*  $P9=PWK0861   HBB6608  990324  PDJT: FastPath by socket      PWY0213         
*  $DB=PX00535   HBB7704  000504  PDJT: RACF Access Control Lists               
*  $DC=PYMA525   HBB7706  010202  PDJV: Add constants for ACLs                  
*  $DD=DYVA574   HBB7707  010523  PDNU: IPV6 Initialization (A574.01)           
*  $DE=DYVA573   HBB7707  010515  PDFV: /dev enhancements      A573.00          
*  $DF=DYVA573   HBB7707  010824  PDFV: /dev/fd for C89 change A573.00          
*  $PA=PYN0220   HBB7708  020301  PDFO: Bilingual fixup                         
*  $PB=PYV0438   HBB7707  020223  PDNU: IFCONF6 to HOMEIF6                      
*  $DG=DYNA597   HBB7708  020313  PDJS: MLS add cmd for fdpoe  A597.00          
*  $xx=TYN1055   HBB7708  020415  PDNU: Rollup IPV6                             
*  $xx=TJK0336   HBB7709  020430  PDNU: Rollup IPV6                             
*  $PC=PJK0208   HBB7709  020904  PDJT: Cmd Constants for LP64                  
*  $PD=TYN1468   HBB7708  030330  PDNU: New IPV6 SIOCMSCHGRT6METRIC             
*  $PE=PJK0634   HBB7709  030715  PDNU: SIOCGHOMEIF6 64-Bit version             
*  $PF=PJK1352   HBB7709  030715  PDNU: SIOCGHOMEIF664 64-Bit version           
*  $DH=DDEA846   HBB7730  041215  PDNU: Route Modification                      
*  $PG=ME04686   HBB7730  051005  PD2R: Add new MsAddRt6V2/MsDelRt6V2           
*  $DI=DCRB004   HBB7730  050715  PDNU: SECIGET_T / SIOCTIEDESTHRD and          
*                                         FIONWRITE ME04787                     
*  $DJ=OA13217   HBB7707  050816  PDJT: SiocGifConf6           SPE              
*  $DK=ME05016   HBB7730  051026  PDJT: Get multilevel security Info            
*  $DL=DCRB004   HBB7730  051215  PDNU: SIOCSECENVR                             
*  $DM=ME07022   HBB7740  060407  PDJT: Multicast Source Filter RFC3678         
*  $DN=ME07094   HBB7740  060407  PDJT: ASM MCAST, MCAST_IN/EXCLUDE             
*  $DO=ME07100   HBB7740  060626  PDJT: Externalize GetPathName                 
*  $DP=ME07876   HBB7740  060919  PDJT: Max_NumSrc                              
*  $PH=ME08701   HBB7740  061204  PDJT: Minor MCAST changes                     
*  $PI=ME11959   HBB7750  070910  PD2R: Add SIOCGRTTABLE str-OA22044            
*  $PJ=ME11419   HBB7750  080319  PDJQ: Fix propchck error                      
*  $DQ=DCRB575   HBB7760  080411  PDJT: SiocGifMTU                              
*  $DR=DCRB864   HBB7770  090430  PDJT: Get/Set Partner Security Info           
*  $PK=ME17232   HBB7770  091022  PD2R: Add IPv6 SE IP addr. flags              
*  $DS=WI401047  HBB77D0  210419  PDND: Add IOCC#ATTR                           
*                                                                               
****END OF SPECIFICATIONS*********************************************/         
*                                                               @EJECT;         
*        %GOTO IOCCPLS  ;         /* Bilingual header                           
.A411    ANOP  ,                                                                
** BPXYIOCC: Ioctl Command Constant Definitions                                 
**  Used By: Ioctl syscalls                                                     
*   Ioctl command constants - Range 1-255 reserved for OpenMVS                  
*  Authorized/Tcpip CMD values                                                  
IOCC#TCI             EQU   5000 Cmd for Tcpip Initialization                    
IOCC#TCC             EQU   5001 Cmd for Complete Tcpip Initialization           
IOCC#TCS             EQU   5002 Cmd for Tcpip Path Sever                        
IOCC#TCR             EQU   5003 Cmd for Tcpip Reply/Post call                   
IOCC#TCG             EQU   5004 Cmd for Tcpip SiGnal call         @p3a          
IOCC#TCCE            EQU   5006 Cmd for Tcpip End Registration    @D5A          
SIOCMSDELRT          EQU   5007 Cmd for Delete Route                            
*                                         (Pre-Router wrap)       @D5A          
SIOCMSADDRT          EQU   5008 Cmd for Add Route                               
*                                         (Pre-Router wrap)       @D5A          
SIOCMSSIFADDR        EQU   5009 Cmd for Set Interface address                   
*                                         (Pre-Router wrap)       @D5A          
SIOCMSSIFFLAGS       EQU   5010 Cmd for Set Interface Flags                     
*                                         (Pre-Router wrap)       @D5A          
SIOCMSSIFDSTADDR     EQU   5011 Cmd for Set point-to-point interface            
*                                 address (Pre-Router wrap)       @D5A          
SIOCMSSIFBRDADDR     EQU   5012 Cmd for Set Broadcast address                   
*                                         (Pre-Router wrap)       @D5A          
SIOCMSSIFNETMASK     EQU   5013 Cmd for Set interface network                   
*                                 mask for an Internet address                  
*                                         (Pre-Router wrap)       @D5A          
SIOCMSSIFMETRIC      EQU   5014 Cmd for Set Interface routing metric            
*                                         (Pre-Router wrap)       @D5A          
SIOCMSRBRTTABLE      EQU   5015 Cmd for Set Routing table required              
*                                         required request                      
*                                         (Pre-Router wrap)       @D5A          
SIOMSMETRIC1RT       EQU   5016 Cmd for Set metric1                             
*                                         (Pre-Router wrap)       @D5A          
SIOCMSICMPREDIRECT   EQU   5017 Cmd for Propagating ICMP redirects              
*                                         (Pre-Router wrap)       @D5A          
SIOCSETTKN           EQU   X'8008139A' 5018 Set Tcp/Ip master Tkn @P6A          
*                                                                               
SIOCMSADDRT6         EQU   X'8044F604'     Add IPV6 Route         @DDA          
*                                                                               
SIOCMSDELRT6         EQU   X'8044F605'     Delete IPV6 Route      @DDA          
*                                                                               
SIOCGRT6TABLE        EQU   X'C014F606' Get IPV6 Network Routing                 
*                                         Table                   @DDA          
SIOCGRT6TABLE64      EQU   X'C018F606' Get IPV6 Network Routing                 
*                                         Table  64-BIT           @PFC          
SIOCMSRBRT6TABLE     EQU   X'8000F607' Rebuild IPV6 Route Tables  @DDA          
*                                                                               
SIOCGHOMEIF6         EQU   X'C014F608'  Get IPV6 Home Interface                 
*                                         Configuration           @PBC          
SIOCGHOMEIF664       EQU   X'C018F608'  Get IPV6 Home Interface                 
*                                         Configuration 64-Bit    @PFC          
SIOCMSRBHOMEIF6      EQU   X'8000F609' Rebuild IPV6 Home Interface@PBC          
*                                                                               
SIOCMSCHGRT6METRIC   EQU   X'8044F60A' Change IPV6 route's metric @PDA          
*                                                                               
SIOCMSMODHOMEIF6     EQU   X'8008F60B' Modify IPV6 Home Interface @DHA          
*                                                                               
SIOCMSADDRT6V2       EQU   X'8058F60C' Add IPV6 route version 2   @PGA          
*                                                                               
SIOCMSDELRT6V2       EQU   X'8058F60D' Del IPV6 route version 2   @PGA          
*                                                                               
SIOCMSCHGRT6METRICV2 EQU   X'8058F60E' Change IPV6 route's metric @PGA          
*                                                                               
* Connection type and security credentials on TCPIP sockets.      @DRA          
*   Refer to: Comm Svr: IP Programmer's Guide and References.     @DRA          
SIOCGPARTNERINFO     EQU   X'C000F612'  Get Info                  @DRA          
SIOCSPARTNERINFO     EQU   X'8004F613'  Set Optimization          @DRA          
*  Ioctl Command Constants - terminal control                                   
TIOCGWINSZ           EQU   X'4008A368'  get window size           @D3A          
TIOCSWINSZ           EQU   X'8008A367'  set window size           @D3A          
TIOCNOTIFY           EQU   X'8001A364'  notify master by packet   @P7A          
*  Constants for argument when TIOCNOTIFY is specified            @P7A          
IOCC#PWBEGIN         EQU   1            Begin secure data         @P7A          
IOCC#PWEND           EQU   2            End   secure data         @P7A          
*                                                                               
* Ioctl command constants - for Router query                      @D5A          
SIOCGRTTABLE         EQU   X'C008C980'  Gets Network Routing Tab  @D5A          
SIOCGRTTABLE64       EQU   X'C00CC980'  Get NRT for 64-Bit C Pgm  @PCA          
*                                                                               
SIOCSETRTTD          EQU   X'8008C981'  Set Socket to be attached to            
*                                         1 TD                    @D5A          
*                                                                               
SIOCMSMODHOMEIF      EQU   X'8008C983'  Modify Home Interface     @DHA          
*                                                                               
SIOCMSMODHOMEIFV2    EQU   X'8016C984'  Modify Home Interface V2  @PIA          
*                                                                               
SIOCMSADDRTV2        EQU   X'8054C985'  Cmd for Add Route V2      @PIA          
*                                                                               
SIOCMSDELRTV2        EQU   X'8054C986'  Cmd for Delete Route V2   @PIA          
*                                                                               
SIOMSMETRIC1RTV2     EQU   X'8054C987'  Cmd for Set Metric1 V2    @PIA          
*                                                                               
FIONBIO              EQU   X'8004A77E'  set/reset nonblock I/O                  
FIONREAD             EQU   X'4004A77F'  get number of readable bytes            
*                                     available                                 
FIONWRITE            EQU   X'4004A78A'  get number of writeable bytes           
*                                     available                   @DIA          
FIOASYNC             EQU   X'8004A77D'  set/clear async I/O       @D5A          
FIOSETOWN            EQU   X'8004A77C'  set owner                 @D5A          
FIOGETOWN            EQU   X'4004A77B'  get owner                 @D5A          
SECIGET              EQU   X'4010E401'  get security information                
SECIGET_T            EQU   X'4028E403'  Get peer task security    @DIA          
SIOCTIEDESTHRD       EQU   X'8004E404'  Tie descriptor to thread  @DIA          
SIOCSECENVR          EQU   X'C012A78B'  SET/GET Client Security   @DLA          
*                                        Environment              @DLA          
SIOCADDRT            EQU   X'8030A70A'  IBM use only, Add routing               
*                                     table entry                               
SIOCATMARK           EQU   X'4004A707'  Is current location pointing            
*                                     to out-of-band data?                      
SIOCSPGRP            EQU   X'8004A708'  Set process group          @DDA         
SIOCGPGRP            EQU   X'4004A709'  Get process group          @DDA         
SIOCDELRT            EQU   X'8030A70B'  IBM use only, Delete routing            
*                                     table entry                               
SIOMETRIC1RT         EQU   X'8030A70C'  IBM use only, Set metric1 @D5A          
SIOCSIFADDR          EQU   X'8020A70C'  Set Network interface addr@D5A          
SIOCGIFADDR          EQU   X'C020A70D'  Get Network interface address           
SIOCGIFBRDADDR       EQU   X'C020A712'  Get Network interface                   
*                                     Broadcast Address                         
SIOCSIFBRDADDR       EQU   X'8020A713'  Sets Network interface                  
*                                     Broadcast Address           @D5A          
SIOCGIFCONF          EQU   X'C008A714'  Get Network interface Config            
SIOCGIFCONF64        EQU   X'C00CA714'    for 64-Bit C Pgms                     
SIOCGIFCONF6         EQU   X'C018A722'  Get IPv6 Network IfConf  @DJA           
*                                                                               
SIOCGIFMTU           EQU   X'C020A726'  Get MTU Size             @DQA           
*                                                                               
SIOCGIFDSTADDR       EQU   X'C020A70F'  Get Network interface                   
*                                     Destination Address                       
SIOCGIFFLAGS         EQU   X'C020A711'  Get Network interface Flags             
SIOCGIFMETRIC        EQU   X'C020A717'  IBM use only, Gets Network              
*                                     Interface Routing Metric                  
SIOCGIFNETMASK       EQU   X'C020A715'  Get Network interface                   
*                                     Network Mask                              
SIOCSIFNETMASK       EQU   X'8020A716'  Set Network interface                   
*                                     Network Mask                @D5A          
SIOCSIFDSTADDR       EQU   X'8020A70E'  IBM use only, Sets Network              
*                                     Interface Destination Address             
SIOCSIFFLAGS         EQU   X'8020A710'  IBM use only, Sets Network              
*                                     Interface Flags                           
SIOCSIFMETRIC        EQU   X'8020A718'  IBM use only, Sets Network              
*                                     Interface Routing Metric                  
SIOCSARP             EQU   X'8024A71E'  IBM use only, Sets ARP                  
*                                     Entry                      @D5A           
SIOCGARP             EQU   X'C024A71F'  IBM use only, Gets ARP                  
*                                     Entry                      @D5A           
SIOCDARP             EQU   X'8024A720'  IBM use only, Deletes ARP               
*                                     Entry                      @D5A           
SIOCSHIWAT           EQU   X'8004A700'  Set High Water Mark                     
*                                         (Not Supported)        @D5A           
SIOCGHIWAT           EQU   X'4004A701'  Get High Water Mark                     
*                                         (Not Supported)        @D5A           
SIOCSLOWAT           EQU   X'8004A702'  Set Low Water Mark                      
*                                         (Not Supported)        @D5A           
SIOCGLOWAT           EQU   X'4004A703'  Get Low Water Mark                      
*                                         (Not Supported)        @D5A           
FIOFCTLNBIO          EQU   X'0000E402'  change blocking/nonblocking             
*               STREAMS                                                         
IOCC#ILINK           EQU   X'4004E21A'  I_LINK                   @D9A           
*               DFS ACLs                                                        
IOCC#EDITACL         EQU   X'2000C100'  Edit ACL                 @P5A           
*               RACF ACLs                                                       
SETFACL              EQU   X'0000D301'  SET FILE ACL             @DBA           
IOCC#SETFACL         EQU   X'0000D301'  SET FILE ACL             @DCA           
GETFACL              EQU   X'0000D302'  GET FILE ACL             @DBA           
IOCC#GETFACL         EQU   X'0000D302'  GET FILE ACL             @DCA           
*                                                                               
*   Get Port of Entry for Multilevel Security                      @DDA         
*   Get Port of Entry Attributes for a Socket Resource             @DDA         
SIOCGSOCKPOEATTRS    EQU   X'4000D305'                           @DDA           
*   Get Port of Entry Attributes for a non-Socket Resource         @DGA         
SIOCGFDPOEATTRS      EQU   X'4000D306'                           @DDA           
*   Get Multilevel Security info for a Socket Resource           @DKA           
SIOCGSOCKMLSINFO     EQU   X'4000D307'                           @DKA           
*  Constants for argument when FIONBIO is specified                             
IOCC#BLOCK           EQU   X'00000000'  Allow blocking to occur                 
IOCC#NONBLOCK        EQU   X'00000001'  Do not allow blocking to occur          
*  Constants for argument when SIOCTIEDESTHRD is specified         @DIA         
SIOC#TIESD           EQU   X'00000001'  Tie descriptor to thread   @DIA         
SIOC#UNTIESD         EQU   X'00000000'  UnTie descriptor from thrd @DIA         
*  Constants for argument when SIOCSECENVR is specified            @DLA         
SIOC#SETENVR         EQU   X'00000001'  SET Security Environment   @DLA         
SIOC#GETENVR         EQU   X'00000002'  GET Security Envrionment   @DLA         
*                                                                               
***********************************************************************         
*                                                                     *         
*                        I P v 6                                 @DDA *         
*                                                                     *         
***********************************************************************         
*        IPv6 Ioctls                                                            
SIOCGIFVERSION       EQU   X'4000F601'  Get Interface Ver   Out                 
SIOCGSRCIPADDR       EQU   X'C000F602'  Get Source Addr   InOut                 
SIOCGIFNAMEINDEX     EQU   X'4000F603'  Get If Name/Index   Out                 
                                                                                
***********************************************************************         
*                                                                     *         
* Get and Set ip_msfilter                                             *         
*                                                                     *         
****************************************************************** @DMA         
* Get and Set ip_msfilter (IPv4 only)                              @DMA         
SIOCGIPMSFILTER      EQU   X'C000A724'                             @DMA         
SIOCSIPMSFILTER      EQU   X'8000A725'                             @DMA         
***********************************************************************         
*                                                                     *         
* Get and Set group_filter                                            *         
*                                                                     *         
****************************************************************** @DMA         
* Get and Set group_filter (IPv6 or IPv4)                          @DMA         
SIOCGMSFILTER        EQU   X'C000F610'                             @DMA         
SIOCSMSFILTER        EQU   X'8000F611'                             @DMA         
                                                                                
***********************************************************************         
* Packet mode or Extended Packet mode data record control data.   @D7C*         
*                                                                     *         
* Returned on master read when no control information is pending.     *         
* In packet mode one byte is returned.  In extended packet mode, four *         
* bytes are returned.  Data follows the control data.                 *         
***********************************************************************         
TIOC_DATA            EQU   X'00'        Data packet                @D3A         
***********************************************************************         
* Packet mode control byte - returned on master read()            @D7C*         
*                                                                     *         
* A single control byte is returned in packet mode.  In extended      *         
* packet mode, four bytes are returned, with the non-extended bits    *         
* in the fourth byte.  The equates below can be used against the      *         
* fourth byte (with TM, OI and NI) or against all four bytes (with    *         
* OC, NC, etc.).                                                      *         
***********************************************************************         
TIOCPKT_FLUSHREAD    EQU   X'01'        Input was flushed          @D3A         
TIOCPKT_FLUSHWRITE   EQU   X'02'        Output was flushed         @D3A         
TIOCPKT_STOP         EQU   X'04'        Stop output                @D3A         
TIOCPKT_START        EQU   X'08'        Start output               @D3A         
TIOCPKT_NOSTOP       EQU   X'10'        STOP/START not standard    @D3A         
TIOCPKT_DOSTOP       EQU   X'20'        STOP/START standard        @D3A         
***********************************************************************         
* Extended Packet mode control byte - returned on master read()   @D7C*         
***********************************************************************         
TIOCXPKT_PASSTHRU    EQU   X'00000100'  3270 Passthrough mode     @D7C          
TIOCXPKT_NOPASSTHRU  EQU   X'00000200'  Not 3270 Passthrough mode @D7C          
TIOCXPKT_ECHO        EQU   X'00000400'  ECHO set on               @D7A          
TIOCXPKT_NOECHO      EQU   X'00000800'  ECHO set off              @D7A          
TIOCXPKT_CHCP        EQU   X'00001000'  Code page change          @D7A          
TIOCXPKT_PWBEGIN     EQU   X'00002000'  Begin secure data         @P7A          
TIOCXPKT_PWEND       EQU   X'00004000'  End   secure data         @P7A          
**********************************************************************          
* Get Pathname                                                    @DOA          
IOCC#GETPATHNAME     EQU   17           Absolute name             @DOA          
IOCC#GETPATHNAMEREL  EQU   19           Relative name             @DOA          
**********************************************************************          
* UPDTOFTE                                                        @D8C          
**********************************************************************          
IOCC#UPDTOFTE        EQU   20         UPDATE OFTE CMD             @D8A          
*                                                                 @DDA          
         AIF   ('&DSECT' EQ 'NO').B411                            @DDA          
IOCUOFTE             DSECT ,          ARGUMENT BUFFER             @DDA          
         AGO   .C411                                              @DDA          
.B411    ANOP  ,                                                  @DDA          
IOCUOFTE             DS    0F         ARGUMENT BUFFER             @DDA          
.C411    ANOP  ,                                                  @DDA          
*                                                                 @DDA          
IOCUOCMD             DS     F         SUBCMD                      @D8A          
IOCUO#READ           EQU    1           READ                      @D8A          
IOCUO#WRITE          EQU    2           WRITE                     @D8A          
IOCUO#CS             EQU    3           COMPARE & SWAP            @D8A          
IOCUOVALUEBUFF       DS     0F        VALUE TO/FROM STATE AREA    @D8A          
IOCUOVOFFSET         DS     F            OFFSET  (>=0)            @D8A          
IOCUOVLEN            DS     F            LENGTH  (>0)             @D8A          
IOCUOVDATA           DS     0C           DATA                     @D8A          
*                                                                 @DDA          
         AIF   ('&DSECT' EQ 'NO').B412                            @DDA          
IOCUOCSBUFF          DSECT ,          COMPARE VALUE FOR CS SUBCMD @DDA          
         AGO   .C412                                              @DDA          
.B412    ANOP  ,                                                  @DDA          
IOCUOCSBUFF          DS    0F         COMPARE VALUE FOR CS SUBCMD @DDA          
.C412    ANOP  ,                                                  @DDA          
*                                                                 @DDA          
IOCUOCSOFFSET        DS     CL4          OFFSET (BYTE BDY)        @D8A          
IOCUOCSLEN           DS     CL4          LENGTH (BYTE BDY)        @D8A          
IOCUOCSDATA          DS     0C           DATA                     @D8A          
*                                                                               
IOCC#REGFILEINT      EQU   21         REGISTER FILE INTR          @DAA          
IOCC#FASTPATH        EQU   22         Set FastPath Ops            @P9A          
*                                                                               
IOCC#DEVCONSOLE      EQU   23         /dev/console behavior       @DEA          
IOCC#DEVCONSUPPRESS  EQU   1          /dev/console - set suppress @DEA          
IOCC#DEVCONUNSUPPRS  EQU   0          /dev/console -   unsuppress @DEA          
*                                                                               
IOCC#DEVFD           EQU   27         /dev/fd behavior            @DFA          
IOCC#XATTR           EQU   28         get/list xattr              @DSA          
*                     LFS/Cinet Level Ioctls                      @DDA          
IOCC#GETSTACKS       EQU   24         Get Stack Names             @DDA          
IOCC#DIRIOCTL        EQU   25         Directed Ioctl              @DDA          
IOCC#GRTRSELECT      EQU   26         Get PreRtr Select           @DDA          
*                                                                               
***********************************************************************         
*                                                                 @DDA*         
*   Iocc#GetStacks -                                                  *         
*      Get the names of the stacks that are attached to a socket.     *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B413                            @DDA          
IOCSTACKINFO         DSECT ,                                      @DDA          
         AGO   .C413                                              @DDA          
.B413    ANOP  ,                                                  @DDA          
IOCSTACKINFO         DS    0F                                     @DDA          
.C413    ANOP  ,                                                  @DDA          
IOCSTACKINFOHEADER   DS    CL8                                                  
                     ORG   IOCSTACKINFOHEADER                                   
IOCSTACKINFOFLAGS    DS    X             Flags                                  
IOCSTACKCINET        EQU   X'80'         Cinet socket                           
                     DS    CL3                                                  
IOCSTACKENTRIES      DS    F             Number of Names returned               
                     ORG                                                        
IOCSTACKNAMES        DS    CL16          Array of stack names                   
***********************************************************************         
*   Array of IOCSTACKNAMES                                            *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B414                            @DDA          
IOCSTACKNAMESD       DSECT ,                                      @DDA          
         AGO   .C414                                              @DDA          
.B414    ANOP  ,                                                  @DDA          
IOCSTACKNAMESD       DS    0F                                     @DDA          
.C414    ANOP  ,                                                  @DDA          
IOCSTACKNAME         DS    CL8           Stack name                             
IOCSTACKTDINDEX      DS    X             Cinet Stack TdIndex                    
IOCSTACKFLAGS        DS    X             Flags                                  
IOCSTACK_ACTIVE          EQU  X'80'      Active                                 
IOCSTACK_IPV6_SUPPORT    EQU  X'40'      IPv6 is supported                      
IOCSTACK_IPV6_INTERFACES EQU  X'20'      IPv6 Home Interfaces                   
IOCSTACK_IPV4_INTERFACES EQU  X'10'      IPv4 Home Interfaces                   
                     DS    CL6                                                  
                                                                                
***********************************************************************         
*                                                                 @DDA*         
*   Iocc#DirIoctl  - Directed Ioctl                                   *         
*      Passes the imbedded ioctl to the specified stack.              *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B415                            @DDA          
IOCDIRIOCTL          DSECT ,                                      @DDA          
         AGO   .C415                                              @DDA          
.B415    ANOP  ,                                                  @DDA          
IOCDIRIOCTL          DS    0F                                     @DDA          
.C415    ANOP  ,                                                  @DDA          
IOCDIRHDR            DS    CL16                                                 
                     ORG   IOCDIRHDR                                            
IOCDIRNAME           DS    CL8    Target Stack Name                             
IOCDIRCMD            DS    XL4    Imbedded ioctl Command                        
IOCDIRARGLEN         DS    F      Imbedded ioctl Argument Length                
                     ORG                                                        
IOCDIRARG            DS    C      Imbedded ioctl Argument                       
                                                                                
***********************************************************************         
*                                                                 @DDA*         
*   Iocc#GRtrSelect - Get Cinet PreRouter's selected stack for each   *         
*          of an array of specified destination IP addresses.         *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B416                            @DDA          
IOCRTRSELECT         DSECT ,                                      @DDA          
         AGO   .C416                                              @DDA          
.B416    ANOP  ,                                                  @DDA          
IOCRTRSELECT         DS    0F                                     @DDA          
.C416    ANOP  ,                                                  @DDA          
IOCRTRIPADDR         DS    CL16     Input IP Address                            
IOCRTRSTACK          DS    CL8      Output Selected Stack Name                  
                     ORG   IOCRTRSTACK                                          
IOCRTRERRTEST        DS    CL1      Error if = 0                                
                     DS    CL1                                                  
IOCRTRERRNO          DS    XL2      Error RC (Errno)                            
IOCRTRRSN            DS    XL4      Error Rsn (ErrnoJr)                         
                     ORG                                                        
                                                                                
IOCRTRERROR          EQU   X'00'  IocRtrErrTest value to test for error         
                                                                                
***********************************************************************         
*                                                                 @DDA*         
*   SiocGIfNameIndex - Get Interface Name/Index Table                 *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B418                            @DDA          
IF_NAMEINDEXENTRY    DSECT ,                                      @DDA          
         AGO   .C418                                              @DDA          
.B418    ANOP  ,                                                  @DDA          
IF_NAMEINDEXENTRY    DS    0F                                     @DDA          
.C418    ANOP  ,                                                  @DDA          
IF_NIINDEX           DS    F         Interface Index                            
                     ORG   IF_NIINDEX                                           
IF_NITDINDEX         DS    H         CInet Td Index                             
IF_NIIFINDEX         DS    H         Stack Interface Index                      
                     ORG                                                        
IF_NINAME            DS    CL16      Interface Name, blank padded               
IF_NIEXT             DS    CL4                                                  
                     ORG   IF_NIEXT                                             
IF_NINAMETERM        DS    CL1       Null for C for Name len=16                 
IF_NIFLAGS           DS    X         Name Index Flags             @PKA          
IF_NIOSM             EQU   X'80'     1 = OSM Interface            @PKA          
                     DS    CL2       Reserved                     @PKC          
                     ORG                                                        
IF_NAMEINDEXENTRYL   EQU   *-IF_NAMEINDEXENTRY                    @DDA          
                                                                                
         AIF   ('&DSECT' EQ 'NO').B417                            @DDA          
IF_NAMEINDEX         DSECT ,                                      @DDA          
         AGO   .C417                                              @DDA          
.B417    ANOP  ,                                                  @DDA          
IF_NAMEINDEX         DS    0F                                     @DDA          
.C417    ANOP  ,                                                  @DDA          
IF_NIHEADER          DS    2F                                                   
                     ORG   IF_NIHEADER                                          
IF_NITOTALIF         DS    F      Total Active Interfaces on System             
IF_NIENTRIES         DS    F      Number of entries returned                    
                     ORG                                                        
IF_NITABLE           DS    CL(IF_NAMEINDEXENTRYL)                               
                                                                                
***********************************************************************         
*                                                                @DDA *         
*   SiocGSockPoeAttrs - Socket Port of Entry Attributes               *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B419                            @DDA          
IOCPOEATTR           DSECT ,                                      @DDA          
         AGO   .C419                                              @DDA          
.B419    ANOP  ,                                                  @DDA          
IOCPOEATTR           DS    0F                                     @DDA          
.C419    ANOP  ,                                                  @DDA          
IOCPOEPEERIPADDR     DS    CL16          Peer IP Address                        
                     ORG   IOCPOEPEERIPADDR                                     
IOCPOEPEERIPV6PREFIX DS    CL12                                                 
IOCPOEPEERIPV4ADDR   DS    F                                                    
                     ORG                                                        
IOCPOETERMID         DS    CL8           TERMINAL Profile Name                  
IOCPOELABEL          DS    CL8           Security Label                         
IOCPOEPROFILE        DS    CL64          SERVAUTH Resource Name                 
                                                                                
***********************************************************************         
*                                                                @DKA *         
*   SiocGSockMLSINFO  - Socket Multilevel Security Information        *         
*     IocPoeProfile returns full resource name                        *         
*     IocMlsProfile returns actual profile name in use                *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B420                            @DKA          
IOCMLSINFO           DSECT ,                                      @DKA          
         AGO   .C420                                              @DKA          
.B420    ANOP  ,                                                  @DKA          
IOCMLSINFO           DS    0F                                     @DKA          
.C420    ANOP  ,                                                  @DKA          
IOCMLSMVSNAME        DS    CL8           MVS System Name          @DKA          
IOCMLSSTKNAME        DS    CL8           Stack Job Name           @DKA          
IOCMLSNAZNAME        DS    CL8           NetAccess Zone Name      @DKA          
IOCMLSUSRNAME        DS    CL8           Caller UserID            @DKA          
IOCMLSUSRLBL         DS    CL8           Caller Security Label    @DKA          
IOCMLSSTKLBL         DS    CL8           Stack  Security Label    @DKA          
IOCMLSNAZLBL         DS    CL8           Zone   Security Label    @DKA          
IOCMLSCONLBL         DS    CL8           Connct Security Label    @DKA          
IOCMLSPROFILE        DS    CL64          SERVAUTH Profile Name    @DKA          
                                                                                
*---------------------------------------------------------------------*         
*     Multicast Source Filter Structures from RFC 3678                *         
*                                                                     *         
*   *** These require the inclusion of BPXYSOCK ***                   *         
*----------------------------------------------------------------- @DMA         
*                                                                  @DMA         
         AIF   ('&MCAST' EQ 'NO').NOMCAST                          @DNA         
*                                                                  @DMA         
* SiocGIPMSFilter  - Get a list of multicast source addresses      @DMA         
* SiocSIPMSFilter  - Set a list of multicast source addresses      @DMA         
*                                                                  @DMA         
         AIF   ('&DSECT' EQ 'NO').B421                             @DMA         
IP_MSFILTER DSECT ,                                                @DMA         
         AGO   .C421                                               @DMA         
.B421    ANOP  ,                                                   @DMA         
IP_MSFILTER DS 0F                                                  @DMA         
.C421    ANOP  ,                                                   @DMA         
IMSF_HEADER DS 0C                 Header                           @DMA         
IMSF_MULTIADDR DS CL4             IP Multicast address of group    @DMA         
IMSF_INTERFACE DS CL4             Local IP addr of interface       @DMA         
IMSF_FMODE DS CL4                 Filter mode                      @DMA         
IMSF_NUMSRC DS CL4                Number of sources in src_list    @DMA         
IMSF_HEADER_LEN EQU *-IP_MSFILTER                                  @DMA         
IMSF_SLIST DS 0CL(L'IMSF_SRCADDR) Start of source list             @DMA         
*                                                                  @DMA         
         AIF   ('&DSECT' EQ 'NO').B422                             @DMA         
IMSF_SRCENTRY DSECT ,                                              @DMA         
         AGO   .C422                                               @DMA         
.B422    ANOP  ,                                                   @DMA         
IMSF_SRCENTRY DS 0F               Source list entry                @DMA         
.C422    ANOP  ,                                                   @DMA         
IMSF_SRCADDR DS CL4               Source IP address                @DMA         
IMSF_SRCENTRY_LEN EQU *-IMSF_SRCENTRY Length                       @PHA         
*                                                                  @DMA         
*                                                                  @DMA         
* SiocGMSFilter  - Get a list of multicast source addresses        @DMA         
* SiocSMSFilter  - Set a list of multicast source addresses        @DMA         
*                                                                  @DMA         
***********************************************************************         
*                                                                     *         
* GROUP_REQ STRUCTURE                                                 *         
*                                                                     *         
****************************************************************** @DMA         
         AIF   ('&DSECT' EQ 'NO').B423                             @DMA         
GROUP_FILTER DSECT ,                                               @DMA         
         AGO   .C423                                               @DMA         
.B423    ANOP  ,                                                   @DMA         
GROUP_FILTER DS 0F                                                 @DMA         
.C423    ANOP  ,                                                   @DMA         
GF_HEADER DS 0C                   Header                           @DMA         
GF_INTERFACE DS CL4               Interface index                  @DMA         
         DS    CL4                Padding                          @DMA         
GF_GROUP DS    CL(L'SOCKADDR_STORAGE) Group address                @DMA         
GF_FMODE DS    CL4                Filter mode                      @PHM         
GF_NUMSRC DS   CL4                Number of sources                @PHM         
GF_HEADER_LEN EQU *-GROUP_FILTER                                   @PHM         
GF_SLIST DS 0CL(L'GF_SRCENTRY)    Start of source list             @DMA         
         ORG   GF_GROUP                                            @DMA         
GF_MULTISOCKADDR4 DS CL(SOCK#LEN+SOCK_SIN#LEN)                     @DMA         
         ORG   GF_GROUP                                            @DMA         
GF_MULTISOCKADDR6 DS CL(SOCK#LEN+SOCK_SIN6#LEN)                    @DMA         
*                                                                  @DMA         
         AIF   ('&DSECT' EQ 'NO').B424                             @DMA         
GF_SRCENTRY DSECT ,                                                @DMA         
         AGO   .C424                                               @DMA         
.B424    ANOP  ,                                                   @DMA         
GF_SRCENTRY DS 0F                 Source list entry                @DMA         
.C424    ANOP  ,                                                   @DMA         
GF_SRCADDR DS CL(L'SOCKADDR_STORAGE) Source address                @DMA         
GF_SRCENTRY_LEN EQU *-GF_SRCENTRY  Length                          @PHA         
         ORG   GF_SRCADDR                                          @DMA         
GF_SRCADDR4 DS CL(SOCK#LEN+SOCK_SIN#LEN)                           @DMA         
         ORG   GF_SRCADDR                                          @DMA         
GF_SRCADDR6 DS CL(SOCK#LEN+SOCK_SIN6#LEN)                          @DMA         
*                                                                  @DMA         
MCAST_INCLUDE      EQU   0                                         @DNA         
MCAST_EXCLUDE      EQU   1                                         @DNA         
MCAST_NUMSRC_MAX   EQU  64            Max number of sources for    @PHA         
*                                      GF_NUMSRC and IMSF_NUMSRC   @DPA         
*                                                                  @DNA         
.NOMCAST ANOP  ,              End of Multicast Structures          @DNA         
***********************************************************************         
* SIOCGRTTABLE - Obtain route information. Returns information for    *         
*                IPv4 routes from the TCP/IP stack's main route table.*         
*                                                                     *         
*                The Route entry structures returned can either be    *         
*                Version 1, Version 2, or Version 3 structures.       *         
*                  Version 1                                          *         
*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an IP    *         
*                      address                                        *         
*                  Version 2                                          *         
*                    - IOCN_RTMSGTYPE structure is the same size      *         
*                      as Version 1                                   *         
*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an       *         
*                      interface index.                               *         
*                  Version 3                                          *         
*                    - IOCN_RTMSGTYPE structure is larger than the    *         
*                      Version 1 or 2 size                            *         
*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an       *         
*                      interface index                                *         
*                    - New MTU field added                            *         
*                The RTEV3 macro variable controls whether the        *         
*                Version 3 Route entry structure is generated by      *         
*                this macro.  By default, the macro generates the     *         
*                Version 3 Route entry structure.                     *         
*                                                                     *         
*                When requesting Version 2 or Version 3 output in a   *         
*                CINET environment, invoking applications must either *         
*                have stack affinity or use the IOCC#DIRIOCTL to      *         
*                invoke this ioctl.  Otherwise, the output from the   *         
*                first stack will be in the requested version format  *         
*                but, the output from subsequent stacks will be in    *         
*                Version 1 format.                                    *         
*                                                                     *         
* Input     - Input to the ioctl is a buffer length and a buffer      *         
*             address.  By default, Version 1 Route entry structures  *         
*             are returned.                                           *         
*                                                                     *         
*             To obtain Version 2 or 3 Route entry output, an         *         
*             IOCN_RTMSGHDRTYPE structure must be setup at the        *         
*             beginning of the output buffer, before invoking the     *         
*             ioctl.  The following fields must be set:               *         
*               - IOCN_RTMSGHDRVER set to Version 2 or 3              *         
*               - IOCN_RTMSGHDREYEID set to the correct eyecatcher    *         
*                 value.                                              *         
*                                                                     *         
*                                                                     *         
* Output    - Return_value = 0                                        *         
*                  - IOCN_RTMSGHDRTYPE structure returned with        *         
*                    field IOCN_RTMSGHDRNUMENT set to the number      *         
*                    of Route entry structures returned.  In the      *         
*                    output buffer, the header is followed by the     *         
*                    Route entry structures.                          *         
*                  - The IOCN_RTMSGHDRVER and IOCN_RTMSGHDRSUBVER     *         
*                    fields indicate whether Version 1, 2, or 3       *         
*                    of the Route entry structures was returned.      *         
*                  - IOCN_RTMSGHDRNUMENT - number of either Version   *         
*                    1, 2, or 3 Route entry structures returned.      *         
*           - Return_value = -1                                       *         
*                  - Return_code = EBADMSG                            *         
*                    This means that the output buffer is not large   *         
*                    enough for one IOCN_RTMSGHDRTYPE structure       *         
*                    and one Route entry structure.                   *         
*                  - Return_code = ERANGE                             *         
*                    This means that the output buffer is not large   *         
*                    enough for all the Route entry structures which  *         
*                    can be returned. In this case, only the          *         
*                    IOCN_RTMSGHDRTYPE structure will be returned.    *         
*                    Field IOCN_RTMSGHDRNUMENT in this header will    *         
*                    contain the number of Route entry structures     *         
*                    which can be returned.  Field IOCN_RTMSGHDRVER   *         
*                    will indicate which version of the Route entry   *         
*                    structures will be returned.                     *         
*                                                                @PIA *         
***********************************************************************         
*                                                                @PIA           
* Header structure - IOCN_RTMSGHDRTYPE                           @PIA           
*                                                                @PIA           
         AIF   ('&DSECT' EQ 'NO').B425                           @PIA           
IOCN_RTMSGHDRTYPE    DSECT ,      Route header                   @PIA           
         AGO   .C425                                             @PIA           
.B425    ANOP  ,                                                 @PIA           
IOCN_RTMSGHDRTYPE    DS    0F     Route header                   @PIA           
.C425    ANOP  ,                                                 @PIA           
*                                                                               
IOCN_RTMSGHDRLEN     DS     H     Length of header               @PIA           
IOCN_RTMSGHDRVER     DS     FL1   Version of Route entry structures             
*                                 returned                       @PIA           
                     DS     CL1   Reserved                       @PIA           
IOCN_RTMSGHDREYEID   DS     CL4   Eye catcher 'Rmsg'             @PIA           
IOCN_RTMSGHDREYEC    EQU    C'Rmsg'  Eye catcher constant        @PIA           
IOCN_RTMSGHDRSUBVER  DS     FL1   Version of Route entry structures             
*                                 returned                       @PIA           
                     DS     CL3   Reserved                       @PIA           
IOCN_RTMSGHDRIOCTLNUM  DS   F     Set to x'10' to indicate the                  
*                                 SIOCGRTTABLE ioctl             @PIA           
IOCN_RTMSGHDRNUMENT  DS     F     Output - number of Route entries              
*                                 returned                       @PIA           
                     DS     CL52  Reserved                       @PIA           
IOCN_RTMSGHDR#LEN    EQU    *-IOCN_RTMSGHDRTYPE  Length of header@PIA           
*                                                                               
* Version constants for fields IOCN_RTMSGHDRVER  and                            
* IOCN_RTMSGHDRSUBVER                                            @PIA           
*                                                                               
IOCN_RTMSGTYPEV1     EQU    1       Version 1                    @PIA           
IOCN_RTMSGTYPEV2     EQU    2       Version 2                    @PIA           
IOCN_RTMSGTYPEV3     EQU    3       Version 3                    @PIA           
*                                                                @PIA           
* Version 1 and Version 2 Route entry structure - IOCN_RTMSGTYPE @PIA           
*                                                                @PIA           
         AIF   ('&DSECT' EQ 'NO').B426                           @PIA           
IOCN_RTMSGTYPE       DSECT ,      Route entry structure          @PIA           
         AGO   .C426                                             @PIA           
.B426    ANOP  ,                                                 @PIA           
IOCN_RTMSGTYPE       DS    0F     Route entry structure          @PIA           
.C426    ANOP  ,                                                 @PIA           
*                                                                               
IOCN_IPADDRRTMSGDEST DS     CL4   Destination IP address         @PIA           
IOCN_IPADDRRTMSGMASK DS     CL4   Subnet mask                    @PIA           
IOCN_IPADDRRTMSGGATE DS     CL4   Gateway IP address             @PIA           
IOCN_IPADDRRTMSGHOMEIF  DS  F     Version 1 = IP address         @PIA           
*                                 Other versions = interface                    
*                                 index                          @PIA           
IOCN_RTMSGMETRICTYPE DS     F     Metric type is always 1, meaning              
*                                 metric value is in hop counts  @PIA           
IOCN_RTMSGMETRIC     DS     F     Metric value in hop counts     @PIA           
                     DS     CL3   Reserved                       @PIA           
IOCN_RTATTRRTMSG     DS     XL1   Route flags                    @PIA           
IOCN_BRTATTRLOOPBACK EQU    X'80'   1 = Loopback interface       @PIA           
IOCN_BRTATTRLOCAL    EQU    X'40'   1 = Local/Home IP address    @PIA           
IOCN_BRTATTRDYNBUILT EQU    X'10'   1 = Dynamically built, e.g.                 
*                                       by ICMP redirect         @PIA           
IOCN_BRTATTRHOST     EQU    X'04'   1 = Host route, 0 = Network                 
*                                   route                        @PIA           
IOCN_BRTATTRGATEWAY  EQU    X'02'   1 = Gateway                  @PIA           
IOCN_BRTATTRRTUP     EQU    X'01'   1 = Route is active, 0 = Route              
*                                   is inactive                  @PIA           
IOCN_RTMSGRTETYPE    DS     XL1   Route type                     @PIA           
IOCN_RTOTHER         EQU    1       Other (default, direct)      @PIA           
IOCN_RTLOCAL         EQU    2       Static (configured)          @PIA           
IOCN_RTICMP          EQU    4       ICMP                         @PIA           
IOCN_RTRIP           EQU    8       RIP                          @PIA           
IOCN_RTOSPF          EQU    13      OSPF                         @PIA           
IOCN_RTREPSTAT       EQU    130     Replaceable static           @PIA           
                     DS     CL3   Reserved                       @PIA           
IOCN_RTMSGV1#LEN     EQU    *-IOCN_RTMSGTYPE V1 Route entry len  @PIA           
IOCN_RTMSGV2#LEN     EQU    *-IOCN_RTMSGTYPE V2 Route entry len  @PIA           
        AIF   ('&RTEV3' EQ 'NO').B427                            @PIA           
*                                                                @PIA           
* Version 3 Route entry structure - additional field             @PIA           
*                                                                @PIA           
IOCN_RTMSGMTU        DS     H     Route's MTU value              @PIA           
                     DS     H     Reserved                       @PIA           
                     DS     F     Reserved                       @PIA           
                     DS     F     Reserved                       @PIA           
                     DS     F     Reserved                       @PIA           
IOCN_RTMSGV3#LEN     EQU    *-IOCN_RTMSGTYPE  V3 Route entry len @PIA           
.B427    ANOP  ,                                                 @PIA           
*                                                                               
***********************************************************************         
* IOCN_IFREQ                                                      @DQA*         
*  Mapping that defines the network interface block that is used      *         
*  on ioctls that transfer network interface information              *         
*                                                                     *         
*  This is equivalent to the C ifreq structure from in.h              *         
*  This is the ASM version of the PL/X IOCN_IfType from BPXZIOCN.     *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B428                                          
IOCN_IFREQ DSECT         Mapping for network interface information              
         AGO   .C428                                                            
.B428    ANOP  ,                                                                
IOCN_IFREQ DS 0F         Mapping for network interface information              
.C428    ANOP  ,                                                                
IOCN_IFTYPE   DS 0F      Structure Name from BPXZIOCN.                          
IOCN_IFNAME   DS CL16     Interface name.                                       
IOCN_IFUNION  DS 0CL16    Union of fields:                                      
         ORG   IOCN_IFUNION                                                     
IOCN_SADDRIF     DS CL16  The address of the interface                          
         ORG   IOCN_IFUNION                                                     
IOCN_SADDRIFDEST DS CL16  Destination address in a point to point link          
         ORG   IOCN_IFUNION                                                     
IOCN_SADDRIFBROADCAST DS CL16 Address for Broadcasting                          
         ORG   IOCN_IFUNION                                                     
IOCN_IFMETRIC    DS F     Interface metric                                      
         ORG   IOCN_IFUNION                                                     
IOCN_PIFDATA     DS A     Pointer to an area set by TCPIP                       
         ORG   IOCN_IFUNION                                                     
IOCN_MTUSIZE     DS F     MTU size.  Used with SIOCGIFMTU.                      
         ORG   IOCN_IFUNION                                                     
IOCN_IFATTRIF    DS 0BL2  Flag area.                                            
*                                                                               
IOCN_IFATTRBYTE1    DS 0CL1                                                     
IOCN_BIFATTRSNAP        EQU X'20'                                               
IOCN_BIFATTRTOKBRIDGE   EQU X'10'                                               
IOCN_BIFATTRCHECKSUM    EQU X'04'                                               
IOCN_BIFATTRALLMULTI    EQU X'02'                                               
IOCN_BIFATTRALLPACKSUPT EQU X'01'                                               
         ORG   IOCN_IFATTRBYTE1+1                                               
IOCN_IFATTRBYTE2    DS 0CL1                                                     
IOCN_BIFATTRARPNOTSUPT  EQU X'80'                                               
IOCN_BIFATTRRESALLOC    EQU X'40'                                               
IOCN_BIFATTRNOTRAILER   EQU X'20'                                               
IOCN_BIFATTRPTTOPT      EQU X'10'                                               
IOCN_BIFATTRLOOPBACK    EQU X'08'                                               
IOCN_BIFATTRDEBUG       EQU X'04'                                               
IOCN_BIFATTRBROADCAST   EQU X'02'                                               
IOCN_BIFATTRUP          EQU X'01'                                               
*                                                                               
         ORG   IOCN_IFUNION+16                                                  
IOCN_IFEND       DS   0C  End of structure                                      
IOCN_IFREQ_LEN   EQU *-IOCN_IFREQ Length of Structure                           
IOCN_#IFNAMESIZE EQU 16   Size of the name field                                
*                                                                               
** BPXYIOCC End                                                                 
         SPACE 3                                                                
         AIF   ('&LIST' EQ 'YES').E411                        6@D1A             
         POP   PRINT                                                            
.E411    ANOP  ,                                                                
         MEND  ,                  Terminating PL/X comment           */         
*%IOCCPLS : ;                                                                   
*                                                               @SPACE;         
*/********************************************************************/         
*/* Ioctl command constants - Range 1-255 reserved for OpenMVS       */         
*/*                           (See BPXZIOCC)                     @D6C*/         
*/********************************************************************/         
*Dcl                               /* Get pathname requests:     @DOA*/         
*  Iocc#GetPathName    Fixed(32) Constant(17), /* Absolute name  @DOA*/         
*  Iocc#GetPathNameRel Fixed(32) Constant(19); /* Relative name  @DOA*/         
*                                                                               
*Dcl                                                                            
*  Iocc#UpdtOfte   Fixed(32) Constant(20), /* Update Ofte        @D8A*/         
*  Iocc#RegFileInt Fixed(32) Constant(21), /* Register File Intr @DAA*/         
*  Iocc#FastPath   Fixed(32) Constant(22), /* Set Fastpath ops   @P9A*/         
*  Iocc#DevConsole Fixed(32) Constant(23), /*Modify /dev/console @DEA*/         
*                  /* LFS/Cinet Level Ioctls                     @DDA*/         
*  Iocc#GetStacks  Fixed(32) Constant(24), /* Get Stack Names    @DDA*/         
*  Iocc#DirIoctl   Fixed(32) Constant(25), /* Directed Ioctl     @DDA*/         
*  Iocc#GRtrSelect Fixed(32) Constant(26), /* Get PreRtr Select  @DDA*/         
*                                                                               
*  Iocc#DevFd      Fixed(32) Constant(27), /* Modify /dev/fd     @DFA*/         
*  Iocc#xattr      Fixed(32) Constant(28); /* get/list xattr     @DSA*/         
*                                                               @SPACE;         
*/********************************************************************/         
*/* Ioctl command constants - Tcp/Ip interface                       */         
*/********************************************************************/         
*Dcl                                                                            
*  IocC#TcI  Fixed(32) Constant(5000), /* Tcpip Initialization call  */         
*  IocC#TcC  Fixed(32) Constant(5001), /* Tcpip Complete Initialization         
*                                                                    */         
*  IocC#TcS  Fixed(32) Constant(5002), /* Tcpip Path Sever call      */         
*  IocC#TcR  Fixed(32) Constant(5003), /* Tcpip Reply/Post call      */         
*  IocC#TcG  Fixed(32) Constant(5004), /* Tcpip SiGnal call      @P3A*/         
*  IocC#TcCE Fixed(32) Constant(5006), /* Tcpip End Registration @D5A*/         
*  SIOCMSDELRT Fixed(32) Constant(5007), /* Delete Route                        
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSADDRT Fixed(32) Constant(5008), /* Add Route (Pre-Router wrap)         
*                                                                @D5A*/         
*  SIOCMSSIFADDR Fixed(32) Constant(5009), /* Set Interface address             
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSSIFFLAGS Fixed(32) Constant(5010), /* Set Interface Flags              
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSSIFDSTADDR Fixed(32) Constant(5011), /* Set point-to-point             
*                                         interface address                     
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSSIFBRDADDR Fixed(32) Constant(5012), /* Set Broadcast address          
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSSIFNETMASK Fixed(32) Constant(5013), /* Set interface network          
*                                         mask for an Internet address          
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSSIFMETRIC Fixed(32) Constant(5014), /* Set Interface routing           
*                                         metric                                
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSRBRTTABLE Fixed(32) Constant(5015), /* Set Routing table               
*                                         required rebuild request              
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOMSMETRIC1RT Fixed(32) Constant(5016), /* Set metric1                      
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCMSICMPREDIRECT Fixed(32) Constant(5017), /* Propagating an               
*                                          ICMP redirect                        
*                                         (Pre-Router wrap)      @D5A*/         
*  SIOCSETTKN  Bit(32) Constant('8008139A'x); /* 5018 Set Tcp/ip master         
*                                                socket token.   @P6A*/         
*                                                                               
*                                                               @SPACE;         
*/********************************************************************/         
*/* Ioctl command constants - for pseudo-terminal                @D3A*/         
*/********************************************************************/         
*Dcl                                                                            
*  TIOCGWINSZ  Bit(32) Constant('4008A368'X), /* get window size @D3A*/         
*  TIOCSWINSZ  Bit(32) Constant('8008A367'X), /* set window size @D3A*/         
*  TIOCNOTIFY  Bit(32) Constant('8001A364'X); /* notify master                  
*                                                  by packet     @P7A*/         
*/********************************************************************/         
*/* Constants for argument values - for pseudo-terminal          @P7A*/         
*/********************************************************************/         
*Dcl                                                                            
*  Iocc#PwBegin  Fixed(8)  Constant(1),  /*  Begin secure data   @P7A*/         
*  Iocc#PwEnd    Fixed(8)  Constant(2);  /*  End   secure data   @P7A*/         
*                                                               @SPACE;         
*/*--------------------------------------------------------------@DIA*/         
*/* Declare argument values for SIOCTIEDESTHRD                       */         
*/*------------------------------------------------------------------*/         
*Declare                                                                        
* SIOC#TIESD   Fixed(31) Constant(1),/* Tie descriptor to thread @DIA*/         
* SIOC#UNTIESD Fixed(31) Constant(0);/* Untie descriptor from "  @DIA*/         
*                                                                               
*/*--------------------------------------------------------------@DLA*/         
*/* Declare argument values for SIOCSECENVR                          */         
*/*------------------------------------------------------------------*/         
*Declare                                                                        
* SIOC#SETENVR Fixed(31) Constant(1),/* SET Security Environment @DLA*/         
* SIOC#GETENVR Fixed(31) Constant(2);/* GET Security Envrionment @DLA*/         
*                                                                               
*/********************************************************************/         
*/* Constants for argument values - for /dev/console             @DEA*/         
*/********************************************************************/         
*Dcl                                                                            
*  Iocc#DevConSuppress Fixed(8) Constant(1),  /* Set suppress    @DEA*/         
*  Iocc#DevConUnSupprs Fixed(8) Constant(0);  /* Unsuppress      @DEA*/         
*                                                                               
*/********************************************************************/         
*/* Ioctl command constants - for Router query                   @D5A*/         
*/********************************************************************/         
*Dcl                                                                            
*  SIOCGRTTABLE Bit(32) Constant('C008C980'X), /* Gets Network Routing          
*                                         Table                  @D5A*/         
*  SIOCGRTTABLE64 Bit(32) Constant('C00CC980'X),  /* Get NRT for @PCA           
*                                                  64-Bit C Pgms @PCA*/         
*  SIOCSETRTTD  Bit(32) Constant('8008C981'X), /* Sets Socket to be             
*                                         attached to 1 TD       @D5A*/         
*                                                                               
*  SIOCMSMODHOMEIF Bit(32) Constant('8008C983'X), /* Modify Home                
*                                                    Interface   @DHA*/         
*                                                                               
*  SIOCMSMODHOMEIFV2 Bit(32) Constant('8016C984'X), /* Mod HomeV2@PIA*/         
*                                                                               
*  SIOCMSADDRTV2 Bit(32) Constant('8054C985'X), /* Add Route V2  @PIA*/         
*                                                                               
*  SIOCMSDELRTV2 Bit(32) Constant('8054C986'X), /* Del Route V2  @PIA*/         
*                                                                               
*  SIOMSMETRIC1RTV2 Bit(32) Constant('8054C987'X); /*Set Mtric V2@PIA*/         
*                                                                               
*/********************************************************************/         
*/* Ioctl command constants - for sockets PFSes                  @D2A*/         
*/********************************************************************/         
*Dcl                                                                            
*  FIONBIO  Bit(32) Constant('8004A77E'X), /* set/reset nonblock I/O */         
*  FIONREAD Bit(32) Constant('4004A77F'X), /* get number of readable            
*                                             bytes available        */         
*  FIONWRITE Bit(32) Constant('4004A78A'X), /* get number of writeable          
*                                             bytes available    @DIA*/         
*  FIOASYNC Bit(32) Constant('8004A77D'X), /* Set/clear async i/o               
*                                                                @D5A*/         
*  FIOSETOWN Bit(32) Constant('8004A77C'X), /* Set owner         @D5A*/         
*  FIOGETOWN Bit(32) Constant('4004A77B'X), /* Get owner         @D5A*/         
*  SECIGET  Bit(32) Constant('4010E401'X), /* get security information          
*                                                                @P4A*/         
*  SECIGET_T Bit(32) Constant('4028E403'X),/* get peer task security            
*                                                                @DIA*/         
*  SIOCTIEDESTHRD Bit(32) Constant('8004E404'X), /* Tie descriptor              
*                                                 to thread      @DIA*/         
*                                                                               
*  SIOCSECENVR    Bit(32) Constant('C012A78B'X), /* SET/GET Client              
*                                           Security Environment @DLA*/         
*                                                                               
*  SIOCADDRT Bit(32) Constant('8030A70A'X), /* IBM use only, Add                
*                                         routing table entry        */         
*  SIOCATMARK Bit(32) Constant('4004A707'X), /* Is current location             
*                                         pointing to out-of-band data?         
*                                                                    */         
*  SIOCSPGRP Bit(32) Constant('8004A708'X), /* Set process group @D5A*/         
*  SIOCGPGRP Bit(32) Constant('4004A709'X), /* Get process group @D5A*/         
*  SIOCDELRT Bit(32) Constant('8030A70B'X), /* IBM use only, Delete             
*                                         routing table entry        */         
*  SIOMETRIC1RT Bit(32) Constant('8030A70C'X), /* IBM use only,                 
*                                         Set metric1            @D5A*/         
*  SIOCSIFADDR Bit(32) Constant('8020A70C'X), /* Sets Network                   
*                                         interface address      @D5A*/         
*  SIOCGIFADDR Bit(32) Constant('C020A70D'X), /* Gets Network                   
*                                         interface address          */         
*  SIOCGIFBRDADDR Bit(32) Constant('C020A712'X), /* Gets Network                
*                                         interface broadcast address*/         
*  SIOCSIFBRDADDR Bit(32) Constant('8020A713'X), /* Sets Network                
*                                         interface broadcast                   
*                                         address                @D5A*/         
*  SIOCGIFCONF Bit(32) Constant('C008A714'X), /* Gets Network                   
*                                         interface Configuration    */         
*  SIOCGIFCONF64 Bit(32) Constant('C00CA714'X), /* Get IfConf    @PCA           
*                                              for 64-Bit C Pgms @PCA*/         
*  SIOCGIFCONF6 Bit(32) Constant('C018A722'X), /* IPv6 Network   @DJA           
*                                         Interface Configuration@DIA*/         
*  SIOCGIFMTU   Bit(32) Constant('C020A726'X), /* Get MTU Size   @DQA*/         
*  SIOCGIFDSTADDR Bit(32) Constant('C020A70F'X), /* Gets Network                
*                                         interface destination                 
*                                         address                    */         
*  SIOCGIFFLAGS Bit(32) Constant('C020A711'X), /* Gets Network                  
*                                         interface Flags            */         
*  SIOCGIFMETRIC Bit(32) Constant('C020A717'X), /* IBM use only, Gets           
*                                         network interface routing             
*                                         metric                     */         
*  SIOCGIFNETMASK Bit(32) Constant('C020A715'X), /* Gets Network                
*                                         interface network mask     */         
*  SIOCSIFNETMASK Bit(32) Constant('8020A716'X), /* Sets Network                
*                                         interface network mask @D5A*/         
*  SIOCSIFDSTADDR Bit(32) Constant('8020A70E'X), /* IBM Use only,               
*                                         Sets Network Interface                
*                                         destination address        */         
*  SIOCSIFFLAGS Bit(32) Constant('8020A710'X), /* IBM Use only,                 
*                                         Sets Network Interface                
*                                         Flags                      */         
*  SIOCSIFMETRIC Bit(32) Constant('8020A718'X), /* IBM use only, Sets           
*                                         network interface routing             
*                                         metric                     */         
*  SIOCSARP Bit(32) Constant('8024A71E'X), /* IBM use only, Sets                
*                                         ARP Entry              @D5A*/         
*  SIOCGARP Bit(32) Constant('C024A71F'X), /* IBM use only, Gets                
*                                         ARP Entry              @D5A*/         
*  SIOCDARP Bit(32) Constant('8024A720'X), /* IBM use only, Deletes             
*                                         ARP Entry              @D5A*/         
*  SIOCSHIWAT Bit(32) Constant('8004A700'X), /* Set High Water Mark             
*                                         (Not Supported)        @D5A*/         
*  SIOCGHIWAT Bit(32) Constant('4004A701'X), /* Get High Water Mark             
*                                         (Not Supported)        @D5A*/         
*  SIOCSLOWAT Bit(32) Constant('8004A702'X), /* Set Low Water Mark              
*                                                                @D5A*/         
*  SIOCGLOWAT Bit(32) Constant('4004A703'X), /* Get Low Water Mark              
*                                                                @D5A*/         
*                                                                               
*                   /* Get and Set ip_msfilter (IPv4 only)       @DMA*/         
*  SIOCGIPMSFILTER  Bit(32) Constant('C000A724'X),             /*@DMA*/         
*  SIOCSIPMSFILTER  Bit(32) Constant('8000A725'X),             /*@DMA*/         
*                   /* Get and Set group_filter (IPv6 or IPv4)   @DMA*/         
*  SIOCGMSFILTER    Bit(32) Constant('C000F610'X),             /*@DMA*/         
*  SIOCSMSFILTER    Bit(32) Constant('8000F611'X),             /*@DMA*/         
*                                                                               
*  FIOFCTLNBIO Bit(32) Constant('0000E402'X); /* set/reset nonblock I/O         
*                                         due to call from fctl  @P2A*/         
*                                                               @SPACE;         
*Dcl                                                                            
*  Iocc#EditACL Constant('2000C100'X)  /* Edit ACL: _IO('A',0)   @P5A*/         
*               Bit(32);                                       /*@P5A*/         
*                                                               @SPACE;         
*/********************************************************************/         
*/* Ioctl command constants - for STREAMS                        @D9A*/         
*/********************************************************************/         
*Dcl                                                                            
*  Iocc#ILINK Bit(32) Constant('4004E21A'X);                  /* @D9A*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/* SAF/RACF File Access Control List - 'L'   (D3xx)             @DBA*/         
*/*   The SetFacl Arg is input to the R_SetFacl SAF/RACF Service.@DBA*/         
*/********************************************************************/         
*Dcl                                                           /*@DBA*/         
*  SetFacl Constant(Iocc#SetFacl) Fixed(32), /* Set File ACL @DBA@DCC*/         
*  Iocc#SetFacl Constant('0000D301'X) Fixed(32), /* Set File ACL @DCA*/         
*  GetFacl Constant(Iocc#GetFacl) Fixed(32), /* Get File ACL @DBA@DCC*/         
*  Iocc#GetFacl Constant('0000D302'X) Fixed(32); /* Get File ACL @DCA*/         
*                                                                               
*                                                                               
*/***************************************************************@DDA*/         
*/* Get Port of Entry for Multilevel Security                    @DDA*/         
*/***************************************************************@DDA*/         
*Dcl  /* Get Port of Entry Attributes for a Socket Resource      @DDA*/         
*   SiocGSockPoeAttrs Constant('4000D305'x) Bit(32);           /*@DDA*/         
*                                                              /*@DGA*/         
*Dcl  /* Get Port of Entry Attributes for a non-Socket Resource  @DGA*/         
*   SiocGFdPoeAttrs   Constant('4000D306'x) Bit(32);           /*@DGA*/         
*                                                              /*@DDA*/         
*/*--------------------------------------------------------------@DDA*/         
*/* SiocGSockPoeAttrs - Socket Port of Entry Attributes          @DDA*/         
*/*--------------------------------------------------------------@DDA*/         
*Dcl                                                           /*@DDA*/         
*  1 IocPoeAttr    Based Bdy(Word),                            /*@DDA*/         
*    2 IocPoePeerIpAddr Char(16) Bdy(Word), /* Peer IP Address   @DDA*/         
*      3 IocPoePeerIPv6Prefix Char(12),                        /*@DDA*/         
*      3 IocPoePeerIPv4Addr Fixed(32),                         /*@DDA*/         
*    2 IocPoeTermid  Char(8),           /* TERMINAL Profile Name @DDA*/         
*    2 IocPoeLabel   Char(8),           /* Security Label        @DDA*/         
*    2 IocPoeProfile Char(64);          /* SERVAUTH Resource Name@DDA*/         
*                                                                               
*/***************************************************************@DKA*/         
*/* Get Multilevel Security Information                          @DKA*/         
*/***************************************************************@DKA*/         
*Dcl  /* Get Multilevel Security info for a Socket Resource      @DKA*/         
*   SiocGSockMlsInfo  Constant('4000D307'x) Bit(32);           /*@DKA*/         
*                                                              /*@DKA*/         
*/*--------------------------------------------------------------@DKA*/         
*/* SiocGSockMlsInfo  - Socket Multilevel Security Information   @DKA*/         
*/*   IocPoeProfile returns full resource name                   @DKA*/         
*/*   IocMlsProfile returns actual profile name in use           @DKA*/         
*/*--------------------------------------------------------------@DKA*/         
*Dcl                                                           /*@DKA*/         
*  1 IocMlsInfo    Based Bdy(Word),                            /*@DKA*/         
*    2 IocMlsMvsName Char(8),           /* MVS System Name       @DKA*/         
*    2 IocMlsStkName Char(8),           /* Stack Job Name        @DKA*/         
*    2 IocMlsNaZName Char(8),           /* NetAccess Zone Name   @DKA*/         
*    2 IocMlsUsrName Char(8),           /* Caller UserID         @DKA*/         
*    2 IocMlsUsrLbl  Char(8),           /* Caller Security Label @DKA*/         
*    2 IocMlsStkLbl  Char(8),           /* Stack  Security Label @DKA*/         
*    2 IocMlsNaZLbl  Char(8),           /* Zone   Security Label @DKA*/         
*    2 IocMlsConLbl  Char(8),           /* Connct Security Label @DKA*/         
*    2 IocMlsProfile Char(64);          /* SERVAUTH Profile Name @DKA*/         
*                                                                               
*/********************************************************************/         
*/* Constants for argument values                                @P2A*/         
*/********************************************************************/         
*Dcl                                                                            
*  Iocc#Block    Fixed(32) Constant(0),  /* Allow blocking to occur             
*                                                                @P2A*/         
*  Iocc#NonBlock Fixed(32) Constant(1);  /* No blocking should occur            
*                                                                @P2A*/         
*/********************************************************************/         
*/* Packet mode control byte - returned on master read()         @D7C*/         
*/*                                                                  */         
*/* For use in extended packet mode RESPECIFY this flag byte as      */         
*/* DEFINED on TIOCXPKT_Flag_byte4.                                  */         
*/********************************************************************/         
*Dcl                                                                            
*  1  TIOCPKT_Flag_byte Bit(8) Based,  /* Packet flag bits       @D3A*/         
*     2 *                  Bit(2), /* Reserved                   @D3A*/         
*     2 TIOCPKT_DOSTOP     Bit(1), /* STOP/START standard        @D3A*/         
*     2 TIOCPKT_NOSTOP     Bit(1), /* STOP/START not standard    @D3A*/         
*     2 TIOCPKT_START      Bit(1), /* Start output               @D3A*/         
*     2 TIOCPKT_STOP       Bit(1), /* Stop output                @D3A*/         
*     2 TIOCPKT_FLUSHWRITE Bit(1), /* Output was   flushed       @D3A*/         
*     2 TIOCPKT_FLUSHREAD  Bit(1); /* Input was    flushed       @D3A*/         
*/********************************************************************/         
*/* Extended Packet mode control byte - returned on master read()@D7C*/         
*/********************************************************************/         
*Dcl                                                                            
*  1  TIOCXPKT_Flag_bytes Based,    /* Extended Packet flag bits @D7C*/         
*     2 TIOCXPKT_Flag_byte1 Bit(8), /* Ext Packet flag byte 1    @D7A*/         
*     2 TIOCXPKT_Flag_byte2 Bit(8), /* Ext Packet flag byte 2    @D7A*/         
*     2 TIOCXPKT_Flag_byte3 Bit(8), /* Ext Packet flag byte 3    @D7A*/         
*       3 *                   Bit(1), /* Reserved           @D7C @P7C*/         
*       3 TIOCXPKT_PWEND      Bit(1), /* End   secure data       @P7A*/         
*       3 TIOCXPKT_PWBEGIN    Bit(1), /* Begin secure data       @P7A*/         
*       3 TIOCXPKT_CHCP       Bit(1), /* Code page change        @D7A*/         
*       3 TIOCXPKT_NOECHO     Bit(1), /* ECHO set off            @D7A*/         
*       3 TIOCXPKT_ECHO       Bit(1), /* ECHO set on             @D7A*/         
*       3 TIOCXPKT_NOPASSTHRU Bit(1), /* Not 3270 Passthru mode  @D7C*/         
*       3 TIOCXPKT_PASSTHRU   Bit(1), /* 3270 Passthru mode      @D7C*/         
*     2 TIOCXPKT_Flag_byte4 Bit(8); /* Ext Packet flag byte 4    @D7A*/         
*/********************************************************************/         
*/* Packet mode or Extended Packet mode data record control      @D7C*/         
*/* data.                                                            */         
*/*                                                                  */         
*/* Returned on master read when no control information is           */         
*/* pending.  In packet mode one byte is returned.  In extended      */         
*/* packet mode, four bytes are returned.  Data follows the          */         
*/* control data.                                                    */         
*/********************************************************************/         
*Dcl                                                                            
*  TIOC_DATA          Bit(8) Constant('00'x); /* Data packet     @D3A*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/* IocY#UpdtOfte - Argument buffer to Update OfteStateArea      @D8A*/         
*/********************************************************************/         
*Dcl 1 IocUOfte Based Bdy(Word),                               /*@D8A*/         
*      2 IocUoCmd       Fixed(32),  /* Cmd: Write, Read, CS      @D8A*/         
*      2 IocUoValueBuff ,           /* Value To/From State Area  @D8A*/         
*        3 IocUoVoffset Fixed(31),  /*    Offset  (>=0)          @D8A*/         
*        3 IocUoVlen    Fixed(31),  /*    Length  (>0)           @D8A*/         
*        3 IocUoVdata   Char(*);    /*    Data                   @D8A*/         
*                                                              /*@D8A*/         
*Dcl 1   IocUoCsBuff                /* Compare Value for Cmd=CS  @D8A*/         
*              Based(Addr(IocUoVdata)+IocUoVlen) Bdy(Byte),    /*@D8A*/         
*        3 IocUoCSoffset Fixed(31) Bdy(Byte),                  /*@D8A*/         
*        3 IocUoCSlen    Fixed(31) Bdy(Byte),                  /*@D8A*/         
*        3 IocUoCSdata   Char(*);                              /*@D8A*/         
*                                                              /*@D8A*/         
*Dcl (IocUo#Read   Constant(1),   /* IocUoCmd Values             @D8A*/         
*     IocUo#Write  Constant(2),                                /*@D8A*/         
*     IocUo#CS     Constant(3)) Fixed(32);                     /*@D8A*/         
*                                                              /*@D8A*/         
*                                                                               
*                                                                               
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*                      I P v 6                                 @DDA*/         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*Dcl  /* IPv6 Ioctls                                                 */         
* (SiocGIfVersion   Constant('4000F601'x), /* Get Interface Ver   Out*/         
*  SiocGSrcIpAddr   Constant('C000F602'x), /* Get Source Addr   InOut*/         
*  SiocGIfNameIndex Constant('4000F603'x), /* Get If Name/Index   Out*/         
*                                                                               
*  SiocMsAddRt6     Constant('8044F604'x), /* Add IPV6 Route     @DDA*/         
*  SiocMsDelRt6     Constant('8044F605'x), /* Delete IPV6 Route  @DDA*/         
*  SiocGrt6Table    Constant('C014F606'x), /* Get IPV6 Rte Table @DDA*/         
*  SiocGrt6Table64  Constant('C018F606'x), /* Get IPV6 Rte 64    @PFC*/         
*  SiocMsRbrt6Table Constant('8000F607'x), /* Rebuild Rte & Home @DDA*/         
*  SiocGHomeIf6     Constant('C014F608'x), /* Get IPV6 HomeIf    @PBC*/         
*  SiocGHomeIf664   Constant('C018F608'x), /* Get IPV6 HomeIf 64 @PFC*/         
*  SiocMsRbHomeIf6  Constant('8000F609'x),/* Rebuild IPV6 HomeIf @PBC*/         
*  SiocMsChgRt6Metric Constant('8044F60A'x), /* Change the metric               
*                                             of an IPV6 route  @PDA*/          
*  SiocMsModHomeIf6    Constant('8008F60B'x),/* Modify IPV6 Home                
*                                               Interface        @DHA*/         
*  SiocMsAddRt6V2   Constant('8058F60C'x), /* Add IPV6 Route V2  @PGA*/         
*  SiocMsDelRt6V2   Constant('8058F60D'x), /* Delete IPV6 Rte V2 @PGA*/         
*  SiocMsChgRt6MetricV2 Constant('8058F60E'x)  /* Change the metric             
*                                             of an IPV6 route   @PGA*/         
*                               ) Bit(32);                                      
*                                                                               
*/*------------------------------------------------------------------*/         
*/* Connection type and security credentials on TCPIP sockets.   @DRA*/         
*/*   Refer to: Comm Svr: IP Programmer's Guide and References.  @DRA*/         
*/*------------------------------------------------------------------*/         
* Dcl                                                          /*@DRA*/         
*  (SIOCGPARTNERINFO Constant('C000F612'x),  /* Get Info         @DRA*/         
*   SIOCSPARTNERINFO Constant('8004F613'x)   /* Set Optimization @DRA*/         
*                                      ) Bit(32);              /*@DRA*/         
*                                                                               
*/*------------------------------------------------------------------*/         
*/* Iocc#GetStacks -                                                 */         
*/*    Get the names of the stacks that are attached to a socket.    */         
*/*------------------------------------------------------------------*/         
*Dcl                                                                            
*  1 IocStackInfo  Based Bdy(Word),                                             
*    2 IocStackInfoHeader ,                                                     
*      3 IocStackInfoFlags Bit(8),      /* Flags:                    */         
*        5 IocStackCinet    Bit(1),     /*   Cinet socket            */         
*      3 *                 Char(3),                                             
*      3 IocStackEntries   Fixed(32),   /* Number of Names returned  */         
*    2 IocStackNames(*) ,               /* Array of Stack Names      */         
*      3 IocStackName     Char(8),        /* Stack Name              */         
*      3 IocStackTdIndex  Fixed(8),       /* Cinet Stack TdIndex     */         
*      3 IocStackFlags    Bit(8),         /* Flags                   */         
*        5 IocStack_Active          Bit(1), /* Active                */         
*        5 IocStack_IPv6_Support    Bit(1), /* IPv6 is supported     */         
*        5 IocStack_IPv6_Interfaces Bit(1), /* IPv6 Home Interfaces  */         
*        5 IocStack_IPv4_Interfaces Bit(1), /* IPv4 Home Interfaces  */         
*      3 *                Char(6);                                              
*                                                                               
*/*------------------------------------------------------------------*/         
*/* Iocc#DirIoctl  - Directed Ioctl                                  */         
*/*    Passes the imbedded ioctl to the specified stack.             */         
*/*------------------------------------------------------------------*/         
*Dcl                                                                            
*  1 IocDirIoctl   Based Bdy(Word),                                             
*    2 IocDirHdr ,                                                              
*      3 IocDirName Char(8),     /* Target Stack Name                */         
*      3 IocDirCmd  Bit(32),     /* Imbedded ioctl Command           */         
*      3 IocDirArgLen Fixed(32), /* Imbedded ioctl Argument Length   */         
*    2 IocDirArg    Char(*);     /* Imbedded ioctl Argument          */         
*                                                                               
*                                                                               
*/*------------------------------------------------------------------*/         
*/* Iocc#GRtrSelect - Get Cinet PreRouter's selected stack for each  */         
*/*        of an array of specified destination IP addresses.        */         
*/*------------------------------------------------------------------*/         
*Dcl                                                                            
*  1 IocRtrSelect(*)  Based Bdy(Word),                                          
*    2 IocRtrIpAddr    Char(16),      /* Input IP Address            */         
*    2 IocRtrStack     Char(8),       /* Output Selected Stack Name  */         
*      3 IocRtrErrTest   Char(1),     /*   Error if = 0              */         
*      3    *            Char(1),                                               
*      3 IocRtrErrno     Bit(16),     /*     Error RC (Errno)        */         
*      3 IocRtrRsn       Bit(32);     /*     Error Rsn (ErrnoJr)     */         
*                                                                               
*Dcl IocRtrError Char(1) Constant('00'x);   /* IocRtrErrTest value              
*                                                to test for error   */         
*                                                                               
*/*------------------------------------------------------------------*/         
*/* SiocGIfNameIndex - Get Interface Name/Index Table                */         
*/*------------------------------------------------------------------*/         
*Dcl                                                                            
*  1 If_NameIndex  Based Bdy(Word),                                             
*    2 If_NIHeader ,                                                            
*      3 If_NITotalIF Fixed(32), /* Total Active Interfaces on System*/         
*      3 If_NIEntries Fixed(32), /* Number of entries returned       */         
*    2 If_NITable(*) Char(Length(If_NameIndexEntry));                           
*                                                                               
*Dcl                                                                            
*  1 If_NameIndexEntry Based Bdy(Word),                                         
*    2 If_NiIndex    Fixed(32),     /* Interface Index               */         
*      3 If_NiTdIndex  Fixed(16),   /*   CInet Td Index              */         
*      3 If_NiIfIndex  Fixed(16),   /*   Stack Interface Index       */         
*    2 If_NIName     Char(16),      /* Interface Name, blank padded  */         
*    2 If_NIExt,                                                                
*      3 If_NINameTerm Char(1),     /* Null for C for Name len=16    */         
*      3 If_NIFlags Bit(8),         /* Name Index Flags          @PKA*/         
*        5 If_NIOsm Bit(1),         /* OSM interface             @PKA*/         
*        5 *        Bit(7),         /* Reserved                  @PKA*/         
*      3   *           Char(2);     /* Reserved                  @PKC*/         
*                                                                               
*                                                                               
*/*------------------------------------------------------------------*/         
*/*     Multicast Source Filter Structures from RFC 3678         @DMA*/         
*/*                                                              @DMA*/         
*/*   *** These require the inclusion of BPXYSOCK ***            @DMA*/         
*/*------------------------------------------------------------------*/         
*%IF Translate(BPXY_MULTICAST_STRUCTS) = 'YES' %Then       /*@DNC@DMA*/         
* %DO;                                                        /* @DMA*/         
*/*------------------------------------------------------------------*/         
*/* SiocGIPMSFilter  - Get a list of multicast source addresses  @DMA*/         
*/* SiocSIPMSFilter  - Set a list of multicast source addresses  @DMA*/         
*/*------------------------------------------------------------------*/         
*Dcl                                                          /* @DMA*/         
*  1 IP_MSFilter      Based Bdy(Word),                        /* @DMA*/         
*    2 IMSF_Header,                     /* Header                @DMA*/         
*      3 IMSF_MultiAddr Fixed(32),      /* Multicast address     @DMA*/         
*      3 IMSF_Interface Fixed(32),      /* Local IP addr of intf @DMA*/         
*      3 IMSF_Fmode       Fixed(32),    /* Filter mode           @DMA*/         
*      3 IMSF_NumSrc      Fixed(32),    /* Number of sources     @DMA*/         
*    2 IMSF_Slist(*) Char(length(IMSF_SrcEntry)); /* Source List @DMA*/         
*                                                             /* @DMA*/         
*Dcl                                                          /* @DMA*/         
*  1 IMSF_SrcEntry Based Bdy(Word),                           /* @DMA*/         
*    2 IMSF_SrcAddr  Fixed(32);         /* Source IP address     @DMA*/         
*                                                             /* @DMA*/         
*/*------------------------------------------------------------------*/         
*/* SiocGMSFilter  - Get a list of multicast source addresses    @DMA*/         
*/* SiocSMSFilter  - Set a list of multicast source addresses    @DMA*/         
*/*------------------------------------------------------------------*/         
*Dcl                                                          /* @DMA*/         
*  1 GROUP_FILTER      Based Bdy(DWord),                      /* @DMA*/         
*    2 GF_Header,                       /* Header                @DMA*/         
*      3 GF_Interface Fixed(32),        /* Interface index       @DMA*/         
*      3 *              Fixed(32),      /* Padding               @DMA*/         
*      3 GF_Group isa(SockAddr_Storage),   /* multicast address  @DMA*/         
*        5 * union,                                           /* @DMA*/         
*          6 GF_MultiSockAddr4 isa(Sock_Inet_SockAddr),       /* @DMA*/         
*          6 GF_MultiSockAddr6 isa(Sock_Inet6_SockAddr),      /* @DMA*/         
*      3 GF_Fmode       Fixed(32),      /* Filter mode           @DMA*/         
*      3 GF_NumSrc      Fixed(32),      /* Number of sources     @DMA*/         
*    2 GF_Slist(*)    Char(length(GF_SrcEntry));  /* Source List @DMA*/         
*                                                             /* @DMA*/         
*Dcl                                                          /* @DMA*/         
*  1 GF_SrcEntry Based Bdy(DWord),                            /* @DMA*/         
*    2 GF_SrcAddr isa(SockAddr_Storage), /* Source IP address    @DMA*/         
*      3 * union,                                             /* @DMA*/         
*        4 GF_SrcAddr4 isa(Sock_Inet_SockAddr),               /* @DMA*/         
*        4 GF_SrcAddr6 isa(Sock_Inet6_SockAddr);              /* @DMA*/         
*                                                             /* @DMA*/         
*Dcl                                                          /* @DNA*/         
*  MCAST_INCLUDE Fixed(31) Constant(0),                       /* @DNA*/         
*  MCAST_EXCLUDE Fixed(31) Constant(1),                       /* @DNA*/         
*  MCAST_NUMSRC_MAX Fixed(31) Constant(64);                   /* @PHA*/         
*                                                             /* @DMA*/         
*%End;  /* End Inclusion of Multicast Source Filter Structures   @DMA*/         
