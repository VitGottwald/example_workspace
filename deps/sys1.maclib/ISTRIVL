*/********************* START OF SPECIFICATIONS **********************/         
*/*                                                                  */         
*/* MAPPING NAME: ISTRIVL                                            */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME:  Resource Information Vector List              */         
*/*                                                                  */         
*/*                                                                  */         
*/* COPYRIGHT = LICENSED MATERIALS - PROPERTY OF IBM                 */         
*/*                                                                  */         
*/*             THIS PRODUCT CONTAINS                                */         
*/*             "RESTRICTED MATERIALS OF IBM"                        */         
*/*                                                                  */         
*/*             5695-117 (C) COPYRIGHT IBM CORP. 1994, 1997.         */         
*/*             ALL RIGHTS RESERVED.                                 */         
*/*                                                                  */         
*/*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -            */         
*/*             USE, DUPLICATION OR DISCLOSURE RESTRICTED            */         
*/*             BY GSA ADP SCHEDULE CONTRACT WITH IBM CORP.          */         
*/*                                                                  */         
*/*             SEE COPYRIGHT INSTRUCTIONS.                          */         
*/*                                                                  */         
*/*                                                                  */         
*/* MAPPING USER'S GUIDE:                                            */         
*/*                                                                  */         
*/*    FUNCTION:                                                     */         
*/*       ISTRIVL contains mappings for a collection of vectors and  */         
*/*       data fields provided by VTAM to the application in the     */         
*/*       Resource Information Vector List.                          */         
*/*                                                                  */         
*/*       Vectors are addressible via ACBRIVL after OPEN for the     */         
*/*       ACB has completed.                                         */         
*/*                                                                  */         
*/*       The highorder bit in the vector key is off for all         */         
*/*       vectors sent from VTAM to the application.                 */         
*/*                                                                  */         
*/*    METHOD OF INCLUSION:                                          */         
*/*       By invocation as a mapping macro in assembler programs.    */         
*/*       By ATBUILD or %INCLUDE in PL/X programs.                   */         
*/*                                                                  */         
*/*                                                                  */         
*/*    RESTRICTIONS / DEPENDENCIES: None.                            */         
*/*                                                                  */         
*/*    NOTES:  None                                                  */         
*/*                                                                  */         
*/* EXTERNAL REFERENCES:  None.                                      */         
*/*                                                                  */         
*/*                                                                  */         
*/* CHANGE ACTIVITY:                                                 */         
*/*                                                                  */         
*/* $MAC(ISTRIVL),COMP(O/C),PROD(VTAM): RESOURCE INFORMATION VECTOR  */         
*/*                                     LIST                         */         
*/*                                                                  */         
*/* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS            */         
*/* ---- -------- ------- ------ ------  --------------------------- */         
*/* $L0= KA@@@PLD APPCRR  931030 576146: DCE Security Services       */         
*/* $L1= KP@DR009 PMIII   940228 043006: Support Level Recognition   */         
*/* $L2= KP@DR008 PMIII   940520 043006: VRBLK PIU count expansion   */         
*/* $L3= KA@DR005 APPCRR  940708 576146: DCE Security Services       */         
*/* $Y1= P115000  VTAGENT 940920 792173: Add Address Fields to vector*/         
*/* $Y2= P116683  APPCRR  940927 879315: Remove internal-use vector  */         
*/* $Y3= P116769  FREEDOM 941010 879315: Updated user mappings       */         
*/* $Y4= P117800  FREEDOM 950208 879315: Correct length field size   */         
*/* $Y5= P118309  FREEDOM 950331 879315: Remove character equates    */         
*/* $N1= P126308  POLARIS 970918 879315: Appl definition info vector */         
*/*                                                                  */         
*/********************** END OF SPECIFICATIONS ***********************/         
*@LISTPUSH;                         /*                           @Y1A*/         
*@LISTOFF;                          /*                           @Y1A*/         
*                                   /* BILINGUAL HEADER                         
*                                                                               
         MACRO                                                                  
         ISTRIVL                                                                
ISTRIVL  DSECT                      MAPPING FOR RESOURCE INFORMATION            
*                                   VECTOR LIST POINTED TO BY ACBRIVL           
RIVLLEN  DS    HL2                  TOTAL LENGTH OF VECTORS                     
RIVLDATA DS    0X                   VECTOR DATA                                 
*                                                                               
***********************************************************************         
***  GENERALIZED MAPPING FOR EXAMINING COMMON FIELDS IN ALL ACB      **         
***  VECTORS IN THE VECTOR LIST POINTED TO BY ACBRIVL                **         
***********************************************************************         
ISTRIVVT DSECT                      VECTOR TEMPLATE                @Y3A         
RIVVTLEN DS    X                    VECTOR LENGTH                  @Y3A         
RIVVTKEY DS    X                    VECTOR KEY                     @Y3A         
RIVVTDAT DS    0X                   VECTOR DATA                    @Y3A         
*                                                                               
*                                                                               
***********************************************************************         
*** ISTRIV02 - maps the application's network name vector.           **         
***          - The name is specified by the name field of the        **         
***            application definition statement.                     **         
***          - This is obtained from the NAME ON APPL STATEMENT.     **         
***********************************************************************         
ISTRIV02 DSECT                      APPLICATION NETWORK NAME VECTOR             
*                                   (FROM NAME ON APPL STATEMENT)               
RIV02LEN DS    X                    VECTOR LENGTH                               
RIV02KEY DS    X                    VECTOR KEY                                  
RIV02KYC EQU   X'02'                KEY IS X'02'                                
RIV02DTA DS    CL8                  VECTOR DATA                                 
*                                                                               
***********************************************************************         
*** ISTRIV03 - maps the application's ACB name vector.               **         
***          - This is supplied by the APPLID operand on the ACB     **         
***            statement or can be supplied by the operating         **         
***            system.  During OPEN ACB, VTAM will search for the    **         
***            application's characteristics by matching the ACB     **         
***            APPLID value to an RDTE with the application's        **         
***            ACBNAME.  If ACBNAME was not coded for the            **         
***            application, VTAM will search for a match with an     **         
***            RDTE containing the application's network name.       **         
***          - This is obtained from the APPLID on ACB MACRO.        **         
***********************************************************************         
ISTRIV03 DSECT                      APPLICATION ACB NAME VECTOR                 
*                                   (FROM APPLID ON ACB MACRO)                  
RIV03LEN DS    X                    VECTOR LENGTH                               
RIV03KEY DS    X                    VECTOR KEY                                  
RIV03KYC EQU   X'03'                KEY IS X'03'                                
RIV03DTA DS    CL8                  VECTOR DATA                                 
*                                                                               
***********************************************************************         
*** ISTRIV06 - maps the network name in which the host resides.      **         
***          - This is obtained from the NETID START OPTION.         **         
***            If NETID start option is not specified, this value    **         
***            will be blanks.                                       **         
***********************************************************************         
ISTRIV06 DSECT                      NETWORK NAME VECTOR                         
*                                   (FROM NETID START OPTION)                   
RIV06LEN DS    X                    VECTOR LENGTH                               
RIV06KEY DS    X                    VECTOR KEY                                  
RIV06KYC EQU   X'06'                KEY IS X'06'                                
RIV06DTA DS    CL8                  VECTOR DATA                                 
*                                                                               
***********************************************************************         
*** ISTRIV07 - maps the SSCP Name vector.                            **         
***          - This is obtained from the SSCPNAME START OPTION       **         
***********************************************************************         
ISTRIV07 DSECT                      SSCP NAME VECTOR                            
*                                   (FROM SSCPNAME START OPTON)                 
RIV07LEN DS    X                    VECTOR LENGTH                               
RIV07KEY DS    X                    VECTOR KEY                                  
RIV07KYC EQU   X'07'                KEY IS X'07'                                
RIV07DTA DS    CL8                  VECTOR DATA                                 
*                                   (DEFAULT IS 'VTAM')                         
*                                                                               
***********************************************************************         
*** ISTRIV08 - maps the Host Subarea PU Network Name vector.         **         
***          - This is obtained from the HOSTPU START OPTION         **         
***            If HOSTPU start option is not specified, the name     **         
***            will default to 'ISTPUS  '.                           **         
***********************************************************************         
ISTRIV08 DSECT                      HOST SUBAREA PU NETWORK NAME VECTOR         
*                                   (FROM HOSTPU START OPTION)                  
RIV08LEN DS    X                    VECTOR LENGTH                               
RIV08KEY DS    X                    VECTOR KEY                                  
RIV08KYC EQU   X'08'                KEY IS X'08'                                
RIV08DTA DS    CL8                  VECTOR DATA                                 
*                                   (DEFAULT IS 'ISTPUS')                       
*                                                                               
***********************************************************************         
*** ISTRIV09 - maps the Host Subarea PU network address vector.      **         
***          - It contains the network address of the host           **         
***            subarea PU.                                           **         
***********************************************************************         
ISTRIV09 DSECT                      HOST SUBAREA PU NETWORK ADDRESS             
*                                                                               
RIV09LEN DS    X                    VECTOR LENGTH                               
RIV09KEY DS    X                    VECTOR KEY                                  
RIV09KYC EQU   X'09'                KEY IS X'09'                                
RIV09DTA DS    XL6                  VECTOR DATA                                 
*                                                                               
***********************************************************************         
*** ISTRIV0A - maps the maximum subarea vector.                      **         
***          - Contains the maximum subarea number that is valid     **         
***            for the host's domain.                                **         
***          - This is obtained from the MAXSUBA START OPTION        **         
***********************************************************************         
ISTRIV0A DSECT                      MAXIMUM SUBAREA NUMBER VECTOR               
*                                   (FROM MAXSUBA START OPTION)                 
RIV0ALEN DS    X                    VECTOR LENGTH                               
RIV0AKEY DS    X                    VECTOR KEY                                  
RIV0AKYC EQU   X'0A'                KEY IS X'0A'                                
RIV0ADTA DS    X                    VECTOR DATA                                 
*                                                                               
***********************************************************************         
*** ISTRIV0B - maps the LU 6.2 application definition vector.        **         
***            After the LU 6.2 application program has issued an    **         
***            open ACB, the LU 6.2 application program may use      **         
***            this vector to determine the values coded on the      **         
***            APPL definition statement.                            **         
***          - This is obtained from the APPL STATEMENT PARAMETERS   **         
***********************************************************************         
ISTRIV0B DSECT                      LU 6.2 APPL DEFINITION VECTOR               
*                                   (FROM APPL STATEMENT PARAMETERS)            
RIV0BLEN DS    X                    VECTOR LENGTH                               
RIV0BKEY DS    X                    VECTOR KEY                                  
RIV0BKYC EQU   X'0B'                KEY IS X'0B'                                
RIV0BDTA DS    0X                   VECTOR DATA                                 
         DS    X                    RESERVED                                    
RIV0BSLV EQU   X'C0'                SESSION-LEVEL LU-LU VERIFICATION            
*                                   BIT MASK                                    
RIV0BSLR EQU   X'80'                REQUIRED                                    
RIV0BSLO EQU   X'40'                OPTIONAL                                    
RIV0BSLN EQU   X'00'                NONE                                        
RIV0BCLS DS    X                    CONVERSATION SECURITY ACCEPTANCE            
RIV0BCLN EQU   X'01'                NONE                                        
RIV0BCLC EQU   X'02'                CONV                                        
RIV0BCLA EQU   X'03'                ALREADYV                                    
RIV0BCLP EQU   X'04'                PERSISTV                                    
RIV0BCLV EQU   X'05'                AVPV                                        
RIV0BFLG DS    X                    MISCELLANEOUS FLAGS                         
RIV0BDDL EQU   X'80'                DDRAINL=ALLOW                               
RIV0BDRL EQU   X'40'                DRESPL=ALLOW                                
RIV0BATA EQU   X'20'                ATNLOSS=ALL                                 
RIV0BSYP EQU   X'10'                SYNCLVL=SYNCPT                              
RIV0BOPC EQU   X'08'                OPERCNOS=ALLOW                              
         DS    X                    RESERVED                                    
RIV0BDSL DS    HL2                  DSESLIM VALUE                               
RIV0BDML DS    HL2                  DMINWNL VALUE                               
RIV0BDMR DS    HL2                  DMINWNR VALUE                               
RIV0BAUT DS    HL2                  AUTOSES VALUE                               
*                                                                               
***********************************************************************         
*** ISTRIV0C - maps the common application definition vector.        **         
***            After the application program has issued an open for  **         
***            its ACB, the application may examine this vector to   **         
***            determine the values coded on the APPL definition     **         
***            statement for common application defination keywords. **         
***          - This is obtained from the APPL STATEMENT PARAMETERS   **         
***********************************************************************         
ISTRIV0C DSECT                      APPLICATION DEFINITION VECTOR               
*                                   FOR ALL APPLICATION PROGRAMS   @N1A         
*                                   (FROM APPL STATEMENT PARAMETERS)            
RIV0CLEN DS    X                    VECTOR LENGTH                  @N1A         
RIV0CKEY DS    X                    VECTOR KEY                     @N1A         
RIV0CKYC EQU   X'0C'                KEY IS X'0C'                   @N1A         
RIV0CDTA DS    0X                   VECTOR DATA                    @N1A         
RIV0CAUT DS    X                    AUTHORIZATION SETTINGS         @N1A         
RIV0CACQ EQU   X'80'                AUTH=ACQ                       @N1A         
RIV0CASD EQU   X'40'                AUTH=ASDP                      @N1A         
RIV0CCNM EQU   X'20'                AUTH=CNM                       @N1A         
RIV0CPAS EQU   X'10'                AUTH=PASS                      @N1A         
RIV0CPPO EQU   X'08'                AUTH=PPO                       @N1A         
RIV0CSPO EQU   X'04'                AUTH=SPO                       @N1A         
RIV0CTSO EQU   X'02'                AUTH=TSO                       @N1A         
RIV0CVPA EQU   X'01'                AUTH=VPACE                     @N1A         
RIV0CFL1 DS    X                    MISCELLANEOUS FLAGS 1          @N1A         
RIV0CAPC EQU   X'80'                APPC=YES                       @N1A         
RIV0CAUX EQU   X'40'                AUTHEXIT=YES                   @N1A         
RIV0CCER EQU   X'20'                CERTIFY=YES                    @N1A         
RIV0CDSW EQU   X'10'                DSPLYWLD=YES                   @N1A         
RIV0CFSP EQU   X'08'                FASTPASS=YES                   @N1A         
RIV0CHAV EQU   X'04'                HAVAIL=YES                     @N1A         
RIV0CPAR EQU   X'02'                PARSESS=YES                    @N1A         
RIV0CPRS EQU   X'01'                PERSIST=MULTI                  @N1A         
RIV0CFL2 DS    X                    MISCELLANEOUS FLAGS 2          @N1A         
RIV0CSSL EQU   X'80'                SESSLIM=YES                    @N1A         
RIV0CSON EQU   X'40'                SONSCIP=YES                    @N1A         
RIV0CSRX EQU   X'20'                SRBEXIT=YES                    @N1A         
RIV0CVCN EQU   X'10'                VCNS=YES                       @N1A         
RIV0CVFR EQU   X'08'                VTAMFRR=YES                    @N1A         
RIV0CLTM DS    X                    LOSTERM SETTING                @N1A         
RIV0CLTN EQU   X'00'                LOSTERM=NORMAL                 @N1A         
RIV0CLTI EQU   X'01'                LOSTERM=IMMED                  @N1A         
RIV0CLTS EQU   X'02'                LOSTERM=SECOND                 @N1A         
RIV0CCMI DS    X                    CMPAPPLI VALUE                 @N1A         
RIV0CCMO DS    X                    CMPAPPLO VALUE                 @N1A         
RIV0CENC DS    X                    ENCR VALUE                     @N1A         
RIV0CECN EQU   X'00'                ENCR=NONE                      @N1A         
RIV0CECO EQU   X'01'                ENCR=OPT                       @N1A         
RIV0CECC EQU   X'02'                ENCR=COND                      @N1A         
RIV0CECS EQU   X'03'                ENCR=SEL                       @N1A         
RIV0CECR EQU   X'04'                ENCR=REQD                      @N1A         
RIV0CVPC DS    X                    VPACING VALUE                  @N1A         
         DS    XL4                  RESERVED                       @N1A         
*                                                                               
***********************************************************************         
*** ISTRIV11 - maps the APPCCMD vector area length vector.           **         
***          - It contains the absolute minimum length and the       **         
***            recommended minimum length for full use of the        **         
***            APPCCMD vector area.                                  **         
***********************************************************************         
ISTRIV11 DSECT                      APPCCMD VECTOR AREA LENGTH VECTOR           
*                                                                @L3C           
RIV11LEN DS    X                    VECTOR LENGTH                               
RIV11KEY DS    X                    VECTOR KEY                                  
RIV11KYC EQU   X'11'                KEY IS X'11'                                
RIV11AML DS    XL4                  ABSOLUTE MINIMUM APPCCMD VECTOR             
*                                   AREA LENGTH                  @L3A           
RIV11RML DS    XL4                  RECOMMENDED MINIMUM APPCCMD                 
*                                   VECTOR AREA LENGTH           @L3C           
*                                                                               
***********************************************************************         
*** ISTRIV12 - maps the application to VTAM vector keys vector.      **         
***          - It contains a list of all ACB vector keys that        **         
***            VTAM will process. Constants for the ACB vectors are  **         
***            located in ISTVACBV.                                  **         
***********************************************************************         
ISTRIV12 DSECT                      APPLICATION TO VTAM VECTOR KEYS             
*                                   FOR ACB MACRO                               
RIV12LEN DS    X                    VECTOR LENGTH                               
RIV12KEY DS    X                    VECTOR KEY                                  
RIV12KYC EQU   X'12'                KEY IS X'12'                                
RIV12DTA DS    0CL1                 VECTOR DATA                                 
*                                                                               
***********************************************************************         
*** ISTRIV13 - maps the Performance Monitor vector.                  **         
***            Identifies a table of Performance Data vector fields  **         
***            (within ISTXPL) that have been retired by the         **         
***            Performance Monitor Interface since its inception.    **         
***********************************************************************         
ISTRIV13 DSECT                      PERFORMANCE MONITOR VECTOR   @L1A           
*                                                                               
RIV13LEN DS    X                    VECTOR LENGTH                @L1A           
RIV13KEY DS    X                    VECTOR KEY                   @L1A           
RIV13KYC EQU   X'13'                KEY IS X'13'                 @L1A           
RIV13ENT DS    HL2                  NUMBER OF ENTRIES IN TABLE   @L2A           
*                                   (ZERO IF NONE RETIRED)                      
RIV13RFT DS    AL4                  RETIRED FIELDS TABLE ADDRESS @L2A           
*                                   (ZERO IF NONE RETIRED)                      
RIV13ELN DS    HL2                  LENGTH OF EACH ENTRY         @L2A           
*                                                                               
RIV13TBL DSECT                      RETIRED FIELDS TABLE ENTRY   @L1A           
*                                   (MAPS ENTRIES IN TABLE ADDRESSED            
*                                   BY RIV13RFT)                                
RIV13VID DS    0CL6                 ID OF AFFECTED VECTOR        @L1A           
RIV13MAJ DS    CL2                  MAJOR CATEGORY               @L1A           
RIV13SUB DS    CL2                  SUBCATEGORY                  @L1A           
RIV13REC DS    CL2                  RECORD TYPE                  @L1A           
RIV13FLD DS    0CL4                 FIELD POSITION WITHIN VECTOR @L1A           
RIV13OFF DS    HL2                  FIELD OFFSET                 @L1A           
RIV13FLG DS    BL1                  FLAG BYTE                    @L1A           
RIV13BIT EQU   X'01'                DATA TYPE INDICATOR                         
*                                   (1= BITSTRING, 0= OTHER)     @L1A           
RIV13LNG DS    XL1                  FIELD LENGTH IF NOT BITSTRING,              
*                                   MASK FOR BITS RETIRED WITHIN BYTE           
*                                   FOR BITSTRING FIELD                         
*                                                                               
         MEND                                                        */         
*                                                                               
*@LISTPOP;                          /* Begin PL/X mapping        @Y1C*/         
*/********************************************************************/         
*/* ISTRIVL  - maps the Resource Information Vector List header.     */         
*/*            The vector list contains information about the        */         
*/*            application program that opened an ACB at execution   */         
*/*            time.                                                 */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIVL   BDY(BYTE) BASED,   /* RESOURCE INFORMATION VECTOR              
*                                      LIST                          */         
*      2 RIVLLEN  FIXED(16) BDY(BYTE), /* TOTAL LENGTH OF VECTORS    */         
*      2 RIVLDATA CHAR(0);          /* VECTOR DATA               @Y3C*/         
*                                                                               
*/********************************************************************/         
*/*  GENERALIZED MAPPING FOR EXAMINING COMMON FIELDS IN ALL ACB      */         
*/*  VECTORS IN THE VECTOR LIST POINTED TO BY ACBRIVL                */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIVVT  BDY(BYTE) BASED,   /* VECTOR FIELDS             @Y3A*/         
*      2 RIVVTLEN       FIXED(8),   /* VECTOR LENGTH             @Y4C*/         
*      2 RIVVTKEY       CHAR(1),    /* VECTOR KEY                @Y3A*/         
*      2 RIVVTDAT       CHAR(0);    /* VECTOR DATA               @Y3A*/         
*                                                                               
*                                                                               
*/********************************************************************/         
*/* ISTRIV02 - maps the application's network name vector.           */         
*/*          - The name is specified by the name field of the        */         
*/*            application definition statement.                     */         
*/*          - This is obtained from the NAME ON APPL STATEMENT.     */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV02 BDY(BYTE) BASED,    /* APPLICATION NETWORK NAME      */         
*      2 RIV02LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV02KEY CHAR(1),          /* VECTOR KEY X'02'              */         
*      2 RIV02DTA CHAR(8);          /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV02KYC BIT(8) CONSTANT('02'X); /* RIV02KEY - X'02'            */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV03 - maps the application's ACB name vector.               */         
*/*          - This is supplied by the APPLID operand on the ACB     */         
*/*            statement or can be supplied by the operating         */         
*/*            system.  During OPEN ACB, VTAM will search for the    */         
*/*            application's characteristics by matching the ACB     */         
*/*            APPLID value to an RDTE with the application's        */         
*/*            ACBNAME.  If ACBNAME was not coded for the            */         
*/*            application, VTAM will search for a match with an     */         
*/*            RDTE containing the application's network name.       */         
*/*          - This is obtained from the APPLID on ACB MACRO.        */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV03  BDY(BYTE) BASED,   /* APPLICATION ACB NAME VECTOR   */         
*      2 RIV03LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV03KEY CHAR(1),          /* VECTOR KEY X'03'              */         
*      2 RIV03DTA CHAR(8);          /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV03KYC BIT(8) CONSTANT('03'X); /* RIV03KEY - X'03'            */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV06 - maps the network name in which the host resides.      */         
*/*          - This is obtained from the NETID START OPTION          */         
*/*            If NETID start option is not specified, this value    */         
*/*            will be blanks.                                       */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV06  BDY(BYTE) BASED,   /* NETWORK NAME VECTOR           */         
*      2 RIV06LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV06KEY CHAR(1),          /* VECTOR KEY X'06'              */         
*      2 RIV06DTA CHAR(8);          /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV06KYC BIT(8) CONSTANT('06'X); /* RIV06KEY - X'06'            */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV07 - maps the SSCP Name vector.                            */         
*/*          - This is obtained from the SSCPNAME START OPTION       */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV07  BDY(BYTE) BASED,   /* SSCP NAME VECTOR              */         
*      2 RIV07LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV07KEY CHAR(1),          /* VECTOR KEY X'07'              */         
*      2 RIV07DTA CHAR(8);          /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV07KYC BIT(8) CONSTANT('07'X); /* RIV07KEY - X'07'            */         
*                                                                               
*  DCL                                                                          
*    RIV07DTD CHAR(8) CONSTANT('VTAM    '); /* RIV07DTA - DEFAULT    */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV08 - maps the Host Subarea PU Network Name vector.         */         
*/*          - This is obtained from the HOSTPU START OPTION         */         
*/*            If HOSTPU start option is not specified, the name     */         
*/*            will default to 'ISTPUS  '.                           */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV08  BDY(BYTE) BASED,   /* HOST SUBAREA PU NETWORK NAME  */         
*      2 RIV08LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV08KEY CHAR(1),          /* VECTOR KEY X'08'              */         
*      2 RIV08DTA CHAR(8);          /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV08KYC BIT(8) CONSTANT('08'X); /* RIV08KEY - X'08'            */         
*                                                                               
*  DCL                                                                          
*    RIV08DTD CHAR(8) CONSTANT('ISTPUS  '); /* RIV08DTA - DEFAULT    */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV09 - maps the Host Subarea PU network address vector.      */         
*/*          - It contains the network address of the host           */         
*/*            subarea PU.                                           */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV09  BDY(BYTE) BASED,   /* HOST SUBAREA PU NETWORK ADDRESS          
*                                      VECTOR                        */         
*      2 RIV09LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV09KEY CHAR(1),          /* VECTOR KEY X'09'              */         
*      2 RIV09DTA CHAR(6);          /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV09KYC BIT(8) CONSTANT('09'X); /* RIV09KEY - X'09'            */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV0A - maps the maximum subarea vector.                      */         
*/*          - Contains the maximum subarea number that is valid     */         
*/*            for the host's domain.                                */         
*/*          - This is obtained from the MAXSUBA START OPTION        */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV0A  BDY(BYTE) BASED,   /* MAXIMUM SUBAREA NUMBER VECTOR */         
*      2 RIV0ALEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV0AKEY CHAR(1),          /* VECTOR KEY X'0A'              */         
*      2 RIV0ADTA FIXED(8);         /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV0AKYC BIT(8) CONSTANT('0A'X); /* RIV0AKEY - X'0A'            */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV0B - maps the LU 6.2 application definition vector.        */         
*/*            After the LU 6.2 application program has issued an    */         
*/*            open ACB, the LU 6.2 application program may use      */         
*/*            this vector to determine the values coded on the      */         
*/*            APPL definition statement.                            */         
*/*          - This is obtained from the APPL STATEMENT PARAMETERS   */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV0B  BDY(BYTE) BASED,   /* LU 6.2 APPL DEFINITION VECTOR */         
*      2 RIV0BLEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 RIV0BKEY CHAR(1),          /* VECTOR KEY X'0B'              */         
*      2 RIV0BDTA,                  /* VECTOR DATA                   */         
*        3 *        BIT(8),         /* RESERVED                      */         
*          4 RIV0BSLV BIT(2),       /* SESSION-LEVEL LU-LU                      
*                                      VERIFICATION MASK             */         
*          4 *        BIT(6),       /* RESERVED                      */         
*        3 RIV0BCLS CHAR(1),        /* CONVERSATION SECURITY                    
*                                      ACCEPTANCE                    */         
*        3 RIV0BFLG CHAR(1),        /* MISCELLANEOUS FLAGS           */         
*          4 RIV0BDDL BIT(1),       /* DDRAINL=ALLOW                 */         
*          4 RIV0BDRL BIT(1),       /* DRESPL=ALLOW                  */         
*          4 RIV0BATA BIT(1),       /* ATNLOSS=ALL                   */         
*          4 RIV0BSYP BIT(1),       /* SYNCLVL=SYNCPT                */         
*          4 RIV0BOPC BIT(1),       /* OPERCNOS=ALLOW                */         
*          4 *        BIT(3),       /* RESERVED                      */         
*        3 *        CHAR(1),        /* RESERVED                      */         
*        3 RIV0BDSL FIXED(16) BDY(BYTE), /* DSESLIM VALUE            */         
*        3 RIV0BDML FIXED(16) BDY(BYTE), /* DMINWNL VALUE            */         
*        3 RIV0BDMR FIXED(16) BDY(BYTE), /* DMINWNR VALUE            */         
*        3 RIV0BAUT FIXED(16) BDY(BYTE); /* AUTOSES VALUE            */         
*                                                                               
*  DCL                                                                          
*    RIV0BKYC BIT(8) CONSTANT('0B'X); /* RIV0BKEY - X'0B'            */         
*                                                                               
*  DCL                                                                          
*    RIV0BSLN BIT(2) CONSTANT('00'B), /* RIV0BSLV - NONE             */         
*    RIV0BSLO BIT(2) CONSTANT('01'B), /* RIV0BSLV - OPTIONAL         */         
*    RIV0BSLR BIT(2) CONSTANT('10'B); /* RIV0BSLV - REQUIRED         */         
*                                                                               
*  DCL                                                                          
*    RIV0BCLN BIT(8) CONSTANT('01'X), /* RIV0BCLS - NONE             */         
*    RIV0BCLC BIT(8) CONSTANT('02'X), /* RIV0BCLS - CONV             */         
*    RIV0BCLA BIT(8) CONSTANT('03'X), /* RIV0BCLS - ALREADYV         */         
*    RIV0BCLP BIT(8) CONSTANT('04'X), /* RIV0BCLS - PERSISTV         */         
*    RIV0BCLV BIT(8) CONSTANT('05'X); /* RIV0BCLS - AVPV             */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV0C - maps the common application definition vector.        */         
*/*            After the application program has issued an open for  */         
*/*            its ACB, the application may examine this vector to   */         
*/*            determine the values coded on the APPL definition     */         
*/*            statement for common application defination keywords. */         
*/*          - This is obtained from the APPL STATEMENT PARAMETERS   */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV0C  BDY(BYTE) BASED,   /* APPLICATION DEFINITION VECTOR            
*                                      FOR ALL APPLICATION PROGRAMS             
*                                      (FROM APPL STATEMENT PARAMETERS)         
*                                                                @N1A*/         
*      2 RIV0CLEN FIXED(8),         /* VECTOR LENGTH             @N1A*/         
*      2 RIV0CKEY CHAR(1),          /* VECTOR KEY X'0C'          @N1A*/         
*      2 RIV0CDTA,                  /* VECTOR DATA               @N1A*/         
*        3 RIV0CAUT BIT(8),         /* AUTHORIZATION SETTINGS    @N1A*/         
*          4 RIV0CACQ BIT(1),       /* AUTH=ACQ                  @N1A*/         
*          4 RIV0CASD BIT(1),       /* AUTH=ASDP                 @N1A*/         
*          4 RIV0CCNM BIT(1),       /* AUTH=CNM                  @N1A*/         
*          4 RIV0CPAS BIT(1),       /* AUTH=PASS                 @N1A*/         
*          4 RIV0CPPO BIT(1),       /* AUTH=PPO                  @N1A*/         
*          4 RIV0CSPO BIT(1),       /* AUTH=SPO                  @N1A*/         
*          4 RIV0CTSO BIT(1),       /* AUTH=TSO                  @N1A*/         
*          4 RIV0CVPA BIT(1),       /* AUTH=VPACE                @N1A*/         
*        3 RIV0CFL1 BIT(8),         /* MISCELLANEOUS FLAGS 1     @N1A*/         
*          4 RIV0CAPC BIT(1),       /* APPC=YES                  @N1A*/         
*          4 RIV0CAUX BIT(1),       /* AUTHEXIT=YES              @N1A*/         
*          4 RIV0CCER BIT(1),       /* CERTIFY=YES               @N1A*/         
*          4 RIV0CDSW BIT(1),       /* DSPLYWLD=YES              @N1A*/         
*          4 RIV0CFSP BIT(1),       /* FASTPASS=YES              @N1A*/         
*          4 RIV0CHAV BIT(1),       /* HAVAIL=YES                @N1A*/         
*          4 RIV0CPAR BIT(1),       /* PARSESS=YES               @N1A*/         
*          4 RIV0CPRS BIT(1),       /* PERSIST=MULTI             @N1A*/         
*        3 RIV0CFL2 BIT(8),         /* MISCELLANEOUS FLAGS 2     @N1A*/         
*          4 RIV0CSSL BIT(1),       /* SESSLIM=YES               @N1A*/         
*          4 RIV0CSON BIT(1),       /* SONSCIP=YES               @N1A*/         
*          4 RIV0CSRX BIT(1),       /* SRBEXIT=YES               @N1A*/         
*          4 RIV0CVCN BIT(1),       /* VCNS=YES                  @N1A*/         
*          4 RIV0CVFR BIT(1),       /* VTAMFRR=YES               @N1A*/         
*          4 *        BIT(3),       /* RESERVED                  @N1A*/         
*        3 RIV0CLTM BIT(8),         /* LOSTERM SETTING           @N1A*/         
*        3 RIV0CCMI FIXED(8),       /* CMPAPPLI VALUE            @N1A*/         
*        3 RIV0CCMO FIXED(8),       /* CMPAPPLO VALUE            @N1A*/         
*        3 RIV0CENC BIT(8),         /* ENCR VALUE                @N1A*/         
*        3 RIV0CVPC FIXED(8),       /* VPACING VALUE             @N1A*/         
*        3 *        CHAR(4);        /* RESERVED                  @N1A*/         
*                                                                               
*  DCL                                                                          
*    RIV0CKYC BIT(8) CONSTANT('0C'X); /* RIV0CKEY - X'0C'        @N1A*/         
*                                                                               
*  DCL                                                                          
*    RIV0CLTN BIT(8) CONSTANT('00'X), /* LOSTERM=NORMAL          @N1A*/         
*    RIV0CLTI BIT(8) CONSTANT('01'X), /* LOSTERM=IMMED           @N1A*/         
*    RIV0CLTS BIT(8) CONSTANT('02'X); /* LOSTERM=SECOND          @N1A*/         
*                                                                               
*  DCL                                                                          
*    RIV0CECN BIT(8) CONSTANT('00'X), /* ENCR=NONE               @N1A*/         
*    RIV0CECO BIT(8) CONSTANT('01'X), /* ENCR=OPT                @N1A*/         
*    RIV0CECC BIT(8) CONSTANT('02'X), /* ENCR=COND               @N1A*/         
*    RIV0CECS BIT(8) CONSTANT('03'X), /* ENCR=SEL                @N1A*/         
*    RIV0CECR BIT(8) CONSTANT('04'X); /* ENCR=REQD               @N1A*/         
*                                                                               
*/********************************************************************/         
*/* ISTRIV11 - maps the APPCCMD vector area length vector. It        */         
*/*          - It contains the absolute minimum length and the       */         
*/*            recommended minimum length for full use of the        */         
*/*            APPCCMD vector area.                                  */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV11  BDY(BYTE) BASED,   /* APPCCMD VECTOR AREA LENGTH               
*                                      VECTOR                    @L3C*/         
*      2 RIV11BAS,                                                              
*        3 RIV11LEN FIXED(8),         /* VECTOR LENGTH               */         
*        3 RIV11KEY CHAR(1),          /* VECTOR KEY X'11'            */         
*      2 RIV11ADD,                                                              
*        3 RIV11AML FIXED(32) BDY(BYTE), /* ABSOLUTE MINIMUM APPCCMD            
*                                      VECTOR AREA LENGTH        @L3A*/         
*        3 RIV11RML FIXED(32) BDY(BYTE); /* RECOMMENDED MINIMUM APPCCMD         
*                                      VECTOR AREA LENGTH        @L3C*/         
*                                                                               
*  DCL                                                                          
*    RIV11KYC BIT(8) CONSTANT('11'X); /* RIV11KEY - X'11'            */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV12 - maps the application to VTAM vector keys vector.      */         
*/*          - It contains a list of all ACB vector keys that        */         
*/*            VTAM will process. Constants for the ACB vectors are  */         
*/*            located in ISTVACBV.                                  */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV12  BDY(BYTE) BASED,   /* APPLICATION TO VTAM VECTOR               
*                                      KEYS FOR ACB MACRO            */         
*      2 RIV12BAS,                                                              
*        3 RIV12LEN FIXED(8),       /* VECTOR LENGTH                 */         
*        3 RIV12KEY CHAR(1),        /* VECTOR KEY X'12'              */         
*      2 RIV12ADD  BDY(BYTE),                                                   
*        3 RIV12DTA CHAR(*);        /* VECTOR DATA                   */         
*                                                                               
*  DCL                                                                          
*    RIV12KYC BIT(8) CONSTANT('12'X); /* RIV12KEY - X'12'            */         
*                                                                               
*/********************************************************************/         
*/* ISTRIV13 - maps the Performance Monitor vector.                  */         
*/*            Identifies a table of Performance Data vector fields  */         
*/*            (within ISTXPL) that have been retired by the         */         
*/*            Performance Monitor Interface since its inception.    */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTRIV13  BDY(BYTE) BASED,   /* PERFORMANCE MONITOR VECTOR               
*                                                                @L1A*/         
*      2 RIV13LEN FIXED(8),         /* VECTOR LENGTH             @L1A*/         
*      2 RIV13KEY CHAR(1),          /* VECTOR KEY X'13'          @L1A*/         
*      2 RIV13ENT FIXED(16) BDY(BYTE), /* NUMBER OF ENTRIES IN TABLE            
*                                      (ZERO IF NONE RETIRED)    @L2A*/         
*      2 RIV13RFT PTR(31) BDY(BYTE), /* RETIRED FIELDS TABLE ADDRESS            
*                                      (ZERO IF NONE RETIRED)    @L2A*/         
*      2 RIV13ELN FIXED(16) BDY(BYTE); /* LENGTH OF EACH ENTRY   @L2A*/         
*                                                                               
*  DCL                                                                          
*    1 RIV13TBL(*) CHAR(10) BASED(RIV13RFT), /* RETIRED FIELDS TABLE            
*                                      ENTRY (MAPS ENTRIES IN TABLE             
*                                      ADDRESSED BY RIV13RFT)    @L2C*/         
*      3 RIV13VID CHAR(6),          /* ID OF AFFECTED VECTOR     @L1A*/         
*        4 RIV13MAJ CHAR(2),        /* MAJOR CATEGORY            @L1A*/         
*        4 RIV13SUB CHAR(2),        /* SUBCATEGORY               @L1A*/         
*        4 RIV13REC CHAR(2),        /* RECORD TYPE               @L1A*/         
*      3 RIV13FLD CHAR(4),          /* FIELD POSITION WITHIN VECTOR             
*                                                                @L1A*/         
*        4 RIV13OFF FIXED(16) BDY(BYTE), /* FIELD OFFSET         @L1A*/         
*        4 RIV13FLG BIT(8),         /* FLAG BYTE                 @L1A*/         
*          5 *          BIT(7),     /* RESERVED                  @L1A*/         
*          5 RIV13BIT BIT(1),       /* DATA TYPE INDICATOR                      
*                                      (1= BITSTRING, 0= OTHER)  @L1A*/         
*        4 RIV13LNG FIXED(8);       /* FIELD LENGTH IF NOT BITSTRING,           
*                                      MASK FOR BITS RETIRED WITHIN             
*                                      BYTE FOR BITSTRING FIELD  @L1A*/         
*                                                                               
*  DCL                                                                          
*    RIV13KYC BIT(8) CONSTANT('13'X); /* RIV13KEY - X'13'        @L1A*/         
