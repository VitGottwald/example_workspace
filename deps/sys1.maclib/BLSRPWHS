*/**  Start of Specifications for BLSRPWHS ***************************/ 00200000
*/*                                                                  */ 00400000
*/* $MAC(BLSRPWHS) COMP(SC132) PROD(HBB7790): WHERE parameter list   */ 00600004
*/*                                                                  */ 00800000
*/* PROPRIETARY STATEMENT =                                          */ 00810004
*/*                                                                  */ 00820004
*/*   5650-ZOS COPYRIGHT IBM CORP. 1984, 2013                        */ 00830004
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00840004
*/*                                                                  */ 00850004
*/* STATUS = HBB7790                                                 */ 00860004
*/*                                                                  */ 00870004
*/*                                                                  */ 02200000
*/* External classification: PI                                      */ 02400000
*/* End of external classification:                                  */ 02600000
*/*                                                                  */ 02800000
*/* FUNCTION = Describe the input to and the output from the WHERE   */ 03000000
*/* service.                                                         */ 03200000
*/*                                                                  */ 03400000
*/* OPERATION = Create a mapping for BLSRPWHS                        */ 03600000
*/*                                                                  */ 03800000
*/* DESCRIPTIVE NAME: IPCS Symbol Table Record                       */ 04000000
*/*   ACRONYM:  BLSRPWHS                                             */ 04200000
*/*                                                                  */ 04400000
*/* MACRO NAME: BLSRPWHS                                             */ 04600000
*/* DSECT NAME: Selected by invoker                                  */ 04800000
*/* COMPONENT:  IPCS (SC132)                                         */ 05000000
*/* EYE-CATCHER: PWHS                                                */ 05200000
*/*     OFFSET:  0                                                   */ 05400000
*/*     LENGTH:  4                                                   */ 05600000
*/*                                                                  */ 05800000
*/* STORAGE ATTRIBUTES:                                              */ 06000000
*/*   SUBPOOL:  Any that may be altered by key 8 programs            */ 06200000
*/*   KEY:  8                                                        */ 06400000
*/*   RESIDENCY:  LOC(ANY,ANY)                                       */ 06600000
*/*   MAIN STORAGE:  No                                              */ 06800000
*/*   AUXILIARY STORAGE:  Yes                                        */ 07000000
*/*   VIRTUAL STORAGE:  No                                           */ 07200000
*/*   DATA SPACE: No                                                 */ 07400000
*/*                                                                  */ 07600000
*/* SIZE:                                                            */ 07800000
*/*   ABITS=31:  222 bytes                                           */ 08000000
*/*   ABITS=64:  240 bytes                                           */ 08200000
*/*                                                                  */ 08400000
*/* CREATED BY: IPCS subcommands concerned with debugging            */ 08600000
*/* POINTED TO BY: Parameter lists used by IPCS programs to describe */ 08800000
*/*   a location of interest as input to the IPCS Where service and  */ 09000000
*/*   a block that contains it on successful return from that        */ 09200000
*/*   service.                                                       */ 09400000
*/*                                                                  */ 09600000
*/* SERIALIZATION: None                                              */ 09800000
*/*                                                                  */ 10000000
*/*  METHOD OF ACCESS:                                               */ 10200000
*/*                                                                  */ 10400000
*/*   PLS = The macro can expand in a LIST or SUBLIST format.        */ 10600000
*/*                                                                  */ 10800000
*/*     Set macro variable EHBENDCHAR to comma or semicolon.         */ 11000000
*/*     Defaults to semicolon for LIST form and must be set for the  */ 11200000
*/*     SUBLIST form.  For example:                                  */ 11400000
*/*                                                                  */ 11600000
*/*       %DCL EHBENDCHAR EXTERNAL CHARACTER                         */ 11800000
*/*       %EHBENDCHAR=','                                            */ 12000000
*/*                                                                  */ 12200000
*/*                                                                  */ 12400000
*/*    LIST FORM    = ?BLSRPWHS MF(LIST,PREFIX,STORCLASS)            */ 12600000
*/*                                                                  */ 12800000
*/*    SUBLIST FORM = ?BLSRPWHS MF(SUBLIST,PREFIX,STORCLASS,LEVEL)   */ 13000000
*/*                                                                  */ 13200000
*/*       MF                                                         */ 13400000
*/*      PARM  Meaning                                               */ 13600000
*/*      ----  ---------------------------------------------------   */ 13800000
*/*                                                                  */ 14000000
*/*       1    LIST or L for LIST form                               */ 14200000
*/*            SUBLIST or S for SUBLIST form                         */ 14400000
*/*                                                                  */ 14600000
*/*       2    PREFIX is from 1 to 4 alpha-numeric starting with an  */ 14800000
*/*            alpha character. e.g. 'PWHS'                          */ 15000000
*/*                                                                  */ 15200000
*/*       3    STORAGE CLASS and initialization attribute COMPLETE   */ 15400000
*/*            keyword will cause initial values to be generated.    */ 15600000
*/*            Default storage class with COMPLETE is STATIC LOCAL.  */ 15800000
*/*            Can specify BASED, DEFINED ...                        */ 16000000
*/*                                                                  */ 16200000
*/*       4    Structure level number to start with.  This can only  */ 16400000
*/*            be specified on the SUBLIST form.                     */ 16600000
*/*                                                                  */ 16800000
*/*   ASM = The assembler format takes the form                      */ 17000000
*/*                                                                  */ 17200000
*/*         LABEL  BLSRPWHS DSECT=YES                                */ 17400000
*/*                               NO                                 */ 17600000
*/*                                                                  */ 17800000
*/*         The LABEL is used as the prefix for all the field names. */ 18000000
*/*         The label cannot exceed 4 characters.  For example code  */ 18200000
*/*         'PWHS   BLSRPWHS DSECT=YES'                              */ 18400000
*/*                                                                  */ 18600000
*/*         DSECT=YES will cause a DSECT to be generated.  The       */ 18800000
*/*                   initial values will be ignored.                */ 19000000
*/*                                                                  */ 19200000
*/*         DSECT=NO  will cause a set of initialized DCs to be      */ 19400000
*/*                   generated.                                     */ 19600000
*/*                                                                  */ 19800000
*/* NOTES =                                                          */ 20000000
*/*   DEPENDENCIES = This macro requires external macro variables    */ 20200000
*/*     be declared in one of the two following ways:                */ 20400000
*/*                                                                  */ 20600000
*/*     1. Use the BLSRPROC macro to generate the PROC statement and */ 20800000
*/*        macro declares.                                           */ 21000000
*/*                                                                  */ 21200000
*/*     2. Use the BLSRMAC0 macro to generate only the declares.     */ 21400000
*/*                                                                  */ 21600000
*/* ================================================================ */ 21800000
*/*                                                                  */ 22000000
*/* CHANGE ACTIVITY=                                                 */ 22200000
*/*                                                                  */ 22400000
*/*   Products=                                                      */ 22600000
*/* $L0= SRVASADA,JBB2220,84108,PD31: WHERE subcommand support       */ 22800000
*/* $L1= SRVASADA,JBB2220,84108,PD31: WHERE subcommand support       */ 23000000
*/* $L2= ME24482  HBB7790 120723 PDXB: &LABEL                        */ 23010005
*/*                                                                  */ 23200000
*/* ---------------------------------------------------------------- */ 23400000
*/*                                                                  */ 23600000
*/*   Hardware=                                                      */ 23800000
*/* $H1= 64BIT,HBB7703,99139,PDE1: 64-bit addressing support         */ 24000000
*/*      o  Enlarge dump data addresses/attributes to doublewords    */ 24200000
*/*      o  Make the parameter list a multiple of doublewords in     */ 24400000
*/*         length                                                   */ 24600000
*/*                                                                  */ 24800000
*/* ---------------------------------------------------------------- */ 25000000
*/*                                                                  */ 25200000
*/*   Design changes=                                                */ 25400000
*/* $D1= DKB0054,HBB4430,92046,PDE1: OPEN/MVS path name support      */ 25600000
*/*                                                                  */ 25800000
*/* ---------------------------------------------------------------- */ 26000000
*/*                                                                  */ 26200000
*/*   PTMs=                                                          */ 26400000
*/* $P1= PA20612,JBB2220,85281,PDL9: Mishandling of address          */ 26600000
*/*      expressions and inaccurate identification of some           */ 26800000
*/*      dump areas                                                  */ 27000000
*/* $P2= PA20624,JBB2220,85283,PD31: Supply a default length for     */ 27200000
*/*      the assembler structure when DSECT=NO is specified.         */ 27400000
*/*    = ME08404,HBB7740,06311,PDE1: Prolog cleanup                  */ 27600000
*/*                                                                  */ 27800000
*/* ---------------------------------------------------------------- */ 28000000
*/*                                                                  */ 28200000
*/*   Maintenance=                                                   */ 28400000
*/* $01= OA17842,HBB7709,06207,PDE1: Allow filtering of map data by  */ 28600000
*/*      data type code                                              */ 28800000
*/*                                                                  */ 29000000
*/** End of Specifications for BLSRPWHS ******************************  29200000
         MACRO                                                          29400000
&LAB     BLSRPWHS &DSECT=YES,&ABITS=31,&LABEL=                     @L2C 29600005
         LCLC  &P                                                  @L2A 29610005
&P       SETC  '&LAB'                                              @L2A 29620005
         AIF   ('&P' NE '').HAVELAB                                @L2A 29630005
&P       SETC  '&LABEL'                                            @L2A 29631005
         AIF   ('&P' NE '').HAVELAB                                @L2A 29632005
&P       SETC  'PWHS'                                              @L2A 29640005
.HAVELAB ANOP                                                      @L2A 29650005
         GBLA  &BLSABIT           ABITS                            @H1A 29800000
         GBLB  &EPWHS             Blurb produced once in assembly       30000000
         GBLC  &BLSADC            Data type                        @H1A 30200000
         BLSABITS ABITS=&ABITS    Process ABITS option             @H1A 30400000
         IEZBITS ,                Define symbolic bits             @L1P 30600000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1P 30800000
&P       DSECT ,                  WHERE service parameter list          31000000
         AGO   .L020              Define structure of record       @L1P 31200000
.L010    ANOP  ,                  No DSECT statement               @L1P 31400000
         DS    0D                 Align on doubleword boundary     @P2C 31600000
         AIF   (&BLSABIT EQ 64).L014 ABITS=64                      @H1A 31800000
&P       DS    0CL222             WHERE service parameter list     @P2A 32000000
         AGO   .L020              Common code                      @H1A 32200000
.L014    ANOP  ,                  ABITS=64                         @H1A 32400000
&P       DS    0CL238             WHERE service parameter list     @H1A 32600000
.L020    ANOP  ,                  Define structure of record       @L1P 32800000
&P.000   DS    0D                 Begin BLSRPWHS               #MD06207 33000000
         AIF   (&EPWHS).L030      Blurb produced once in assembly       33200000
*-----------------------------------------------------------------      33400000
* A WHERE service parameter list defines the input to and the           33600000
* output from the WHERE service.                                        33800000
*-----------------------------------------------------------------      34000000
.L030    ANOP  ,                  Blurb produced once in assembly  @L1P 34200000
&P.ID    DS    0CL5               Control block identifier              34400000
&P.IDC   DC    CL4'PWHS'          Control block acronym                 34600000
         AIF   (&BLSABIT EQ 64).L034 ABITS=64                      @H1A 34800000
&P.IDL   DC    CL1'1'             Control block level indicator         35000000
         AGO   .L036              Common code                      @H1A 35200000
.L034    ANOP  ,                  ABITS=64                         @H1A 35400000
&P.IDL   DC    CL1'2'             Control block level indicator    @H1A 35600000
.L036    ANOP  ,                  Common code                      @H1A 35800000
&P.IDL31 EQU   C'1'               ABITS=31                         @H1A 36000000
&P.IDL64 EQU   C'2'               ABITS=64                         @H1A 36200000
&P.PFLG  DS    0BL3               Processing flags                      36400000
&P.PFL1  DC    BL1'0'             First byte of flags                   36600000
&P.PUT   EQU   BIT0               Generate output using the print      X36800000
                                  service                               37000000
&P.RETN  EQU   BIT1               Return nonstandard module name   @D1A 37200000
&P.DTYF  EQU   BIT2+BIT3+BIT4     Data type code selectors.  All bits  *37400000
                                  off or on select all types       @01A 37600000
&P.DTYFL EQU   BIT2               MODULE selector                  @01A 37800000
&P.DTYFM EQU   BIT3               STRUCTURE selector               @01A 38000000
&P.DTYFU EQU   BIT4               AREA selector                    @01A 38200000
         DC    XL2'0000'          Reserved                         @D1A 38400000
&P.MODN  DC    CL8'        '      Name of module requesting the        *38600000
                                  service                          @L1P 38800000
&P.AS    BLSRDATS DSECT=NO        Address space identifier         @L1P 39000000
&P.LAD   DC    &BLSADC            WHERE address                    @H1C 39200000
         AIF   (&BLSABIT EQ 64).L040 ABITS=64                      @H1A 39400000
         DC    XL20'00'           Reserved                              39600000
         AGO   .L042              Common code                      @H1A 39800000
.L040    ANOP  ,                  ABITS=64                         @H1A 40000000
         DC    XL12'00'           Reserved                         @H1A 40200000
.L042    ANOP  ,                  Common code                      @H1A 40400000
&P.OUTP  DS    0CL120             WHERE output area                     40600000
&P.OLAD  DC    &BLSADC            Located object address           @H1C 40800000
&P.OD    BLSRDATC DSECT=NO,ABITS=&BLSABIT Storage characteristics of   *41000000
                                  object                           @H1C 41200000
         AIF   (&BLSABIT EQ 64).L060 ABITS=64                      @H1A 41400000
&P.OOFF  DC    F'0'               Offset into located object            41600000
         AGO   .L062              Common code                      @H1A 41800000
.L060    ANOP  ,                  ABITS=64                         @H1A 42000000
&P.OOFF  DC    XL8'00'            Offset into located object       @H1A 42200000
.L062    ANOP  ,                  Common code                      @H1A 42400000
&P.OSAL  DC    H'0'               Length of system area name            42600000
&P.OSAN  DC    CL31' '            System area name (e.g. PLPA)          42800000
         DC    CL1' '             Reserved                              43000000
&P.ONOL  DC    H'0'               Length of NAME+OFFSET string          43200000
&P.ONMO  DC    CL42' '            NAME+OFFSET string                    43400000
         DC    XL2'00'            Reserved                         @D1A 43600000
&P.OMDP  DC    A(0)               Address of nonstandard module name   *43800000
                                  data or 0                        @D1A 44000000
         AIF   (&BLSABIT EQ 64).L094 ABITS=64                      @H1A 44200000
         DC    XL14'00'           Reserved                         @D1C 44400000
         AGO   .L096              Common code                      @H1A 44600000
.L094    ANOP  ,                  ABITS=64                         @H1A 44800000
         DC    XL12'00'           Reserved                         @H1A 45000000
.L096    ANOP  ,                  Common code                      @H1A 45200000
&P.999   DS    0C                 End BLSRPWHS                 #MD06207 45400000
         MEND  ,                  End assembler macro BLSRPWHS       */ 45600000
*                                                                       45800000
*%BLSRPWHS:                         /* WHERE service parameter list  */ 46000000
*   MACRO KEYS(ABITS,MF);           /*                           @H1C*/ 46200000
*                                                                       46400000
*/* ================================================================ */ 46600000
*/* Define Macro-Variables                                           */ 46800000
*/* ================================================================ */ 47000000
*                                                                       47200000
*   DECLARE                         /* External macro variables      */ 47400000
*     BLSABIT  FIXED EXTERNAL,      /* ABITS                     @H1A*/ 47600000
*     BLSADC   CHARACTER EXTERNAL,  /* Pointer data type         @H1A*/ 47800000
*     ELSRPWHS CHARACTER EXTERNAL,  /* BLSRPWHS global data          */ 48000000
*     EHBCSECT CHARACTER EXTERNAL,  /* CSECT name                @L1P*/ 48200000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation        @L1P*/ 48400000
*     EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro requests      48600000
*                                                                @L1P*/ 48800000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number        @L1P*/ 49000000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number       @L1P*/ 49200000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number        @L1P*/ 49400000
*     EHBLVL4  CHARACTER EXTERNAL,  /* Fourth level number       @L1P*/ 49600000
*     EHBLVL5  CHARACTER EXTERNAL,  /* Fifth level number        @01P*/ 49800000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                @L1P*/ 50000000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters         @L1P*/ 50200000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class       @L1P*/ 50400000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag     50600000
*                                                                @L1P*/ 50800000
*     BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations       51000000
*                                                                @L1P*/ 51200000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column  @L1P*/ 51400000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column @L1P*/ 51600000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column  @L1P*/ 51800000
*     EHBCOL4  FIXED EXTERNAL,      /* Fourth indentation column @L1P*/ 52000000
*     EHBCOL5  FIXED EXTERNAL,      /* Fifth indentation column  @01P*/ 52200000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code         @L1P*/ 52400000
*   DEACTIVATE ELSRPWHS,BLSRENDDECLARE; /* Prevent accidents         */ 52600000
*   DECLARE                         /* Internal macro variables      */ 52800000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation         @L1P*/ 53000000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number       @L1P*/ 53200000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number        @L1P*/ 53400000
*     CLVL4    CHARACTER INTERNAL,  /* Fourth level number       @L1P*/ 53600000
*     CLVL5    CHARACTER INTERNAL,  /* Fifth level number        @01P*/ 53800000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                @L1P*/ 54000000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters         @L1P*/ 54200000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag     54400000
*                                                                @L1P*/ 54600000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                  @L1P*/ 54800000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                   @L1P*/ 55000000
*     CQINITPTR CHARACTER INTERNAL, /* Initial pointer           @H1A*/ 55200000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column @L1P*/ 55400000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column  @L1P*/ 55600000
*     FCOL4    FIXED INTERNAL,      /* Fourth indentation column @L1P*/ 55800000
*     FCOL5    FIXED INTERNAL,      /* Fifth indentation column  @01P*/ 56000000
*     FRC      FIXED INTERNAL,      /* Macro return code         @L1P*/ 56200000
*     F1       FIXED INTERNAL;      /* Utility variable          @L1P*/ 56400000
*   DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,CQCOMPLETE,   56600000
*       CQINITIAL,CQINITPTR,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent        56800000
*                                      accidents                 @H1C*/ 57000000
*   CQINITIAL = ' INITIAL(';        /* Literal                   @L1P*/ 57200000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                   @L1P*/ 57400000
*   ANSWER('?'!!MACLABEL!!'BLRMF('!!MF!!') FORMS(L,S);'); /*     @L1P*/ 57600000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation         @L1P*/ 57800000
*   EHBENDCHAR = ',';               /* Final punctuation         @L1P*/ 58000000
*   CLVL2 = EHBLVL2;                /* Second level number       @L1P*/ 58200000
*   CLVL3 = EHBLVL3;                /* Third level number        @L1P*/ 58400000
*   CLVL4 = EHBLVL4;                /* Fourth level number       @L1P*/ 58600000
*   CLVL5 = EHBLVL5;                /* Fifth level number        @01P*/ 58800000
*   CMF1 = EHBMF1;                  /* Macro form                @L1P*/ 59000000
*   CMF2 = EHBMF2;                  /* Prefix characters         @L1P*/ 59200000
*   CMF3A = EHBMF3A;                /* Complete initialization flag     59400000
*                                                                @L1P*/ 59600000
*   FCOL2 = EHBCOL2;                /* Second indentation column @L1P*/ 59800000
*   FCOL3 = EHBCOL3;                /* Third indentation column  @L1P*/ 60000000
*   FCOL4 = EHBCOL4;                /* Fourth indentation column @L1P*/ 60200000
*   FCOL5 = EHBCOL5;                /* Fifth indentation column  @01P*/ 60400000
*   FRC = EHBRC;                    /* Macro return code         @L1P*/ 60600000
*   BLSRENDDECLARE = BLSRENDDECLARE !! CMF2 !!                          60800000
*       'IDL31 CHARACTER(1) CONSTANT(''1''),/*ABITS(31)*/' !! CMF2 !!   61000000
*       'IDL64 CHARACTER(1) CONSTANT(''2''),/*ABITS(64)*/'; /*   @H1C*/ 61200000
*   ANSWER('?BLSABITS'!!ABITS!!';'); /* Process ABITS            @H1A*/ 61400000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 61600000
*     DO;                           /* ABITS=64                  @H1A*/ 61800000
*       BLSRENDDECLARE = BLSRENDDECLARE !! CMF2 !! 'PWHS CHARACTER(5) CO62000000
*NSTANT(''PWHS2''),/*PWHS identifier constant used to fill in PWHSID*/' 62200000
*           ;                       /*                           @H1C*/ 62400000
*       CQINITPTR = CQINITIAL !! '''00''X)'; /* Initial pointer value   62600000
*                                                                @H1A*/ 62800000
*     END;                          /* ABITS=64                  @H1A*/ 63000000
*   ELSE                            /* ABITS=31                  @H1A*/ 63200000
*     DO;                           /* ABITS=31                  @H1A*/ 63400000
*       BLSRENDDECLARE = BLSRENDDECLARE !! CMF2 !! 'PWHS CHARACTER(5) CO63600000
*NSTANT(''PWHS1''),/*PWHS identifier constant used to fill in PWHSID*/' 63800000
*           ;                                                           64000000
*       CQINITPTR = CQINITIAL !! 'ZZZZNULL)'; /* Initial pointer        64200000
*                                      value                     @H1A*/ 64400000
*     END;                          /* ABITS=31                  @H1A*/ 64600000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 64800000
*     ANSWER('DECLARE/*BLSRPWHS #MD06207*/') COLUMN(5); /*       @01C*/ 65000000
*   ANSWER(EHBLVL1!!CMF2!!' BOUNDARY(WORD)'!!EHBMF3!!',/*BLSRPWHS'!!    65200000
*       MACLIST!!' '!!MACKEYS!!'*/') COLUMN(EHBCOL1);                   65400000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 65600000
*     IF INDEX(ELSRPWHS,',BLURB') = 0 THEN /* Produce blurb          */ 65800000
*       DO;                         /* produce BLURB once        @L1P*/ 66000000
*         ANSWER('/*****************************************************66200000
****************/ /* WHERE service parameter list                       66400000
*              */ /*                                                    66600000
*              */ /* FUNCTION = The WHERE service parameter list defines66800000
* the input    */ /*    to and the output from the WHERE service.       67000000
*              */ /*                                                    67200000
*              */ /* INPUT    = Major areas within the WHERE input secti67400000
*on are:       */ /*   DATS - Address space block.  This defines the typ67600000
*e of data.    */ /*          (e.g. virtual storage in ASID xxxx)       67800000
*              */ ') COLUMN(2);                                         68000000
*         ANSWER('/*   LAD  - Logical address.  This is the location tha68200000
*t the caller  */ /*          of the WHERE service wants identified.    68400000
*              */ /*                                                    68600000
*              */ /* INPUT/OUTPUT                                       68800000
*              */ /*   DATC - Data characteristics.  For the identified 69000000
*area, the     */ /*          DATC will normally indicate a type of STRU69200000
*CTURE         */ /*          (e.g. TCB), a MODULE, or an AREA,         69400000
*              */ /*          and whether the structure has a prefix.   69600000
*              */ /*                                                    69800000
*              */ ') COLUMN(2);     /*                           @P1A*/ 70000000
*         ANSWER('/* OUTPUT   = Major areas within the WHERE output sect70200000
*ion are:      */ /*   OLAD - Logical address.  This is the location of 70400000
*the area      */ /*          identified as containing the input address70600000
*.             */ /*   BFAD - Buffer address contains the address of a b70800000
*uffer which   */ /*          contains a copy of the structure.  This fi71000000
*eld is set    */ /*          by the CBSTAT service before calling the C71200000
*BSTAT exits.  */ /*****************************************************71400000
****************/ ') COLUMN(2);     /*                           @P1C*/ 71600000
*         ELSRPWHS = ELSRPWHS !! ',BLURB'; /* Blurb produced         */ 71800000
*       END;                        /* produce BLURB once        @L1P*/ 72000000
*   ANSWER(CLVL2!!CMF2!!'ID CHARACTER(5)') COLUMN(FCOL2); /*     @L1P*/ 72200000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 72400000
*     ANSWER(CQINITIAL!!CMF2!!'PWHS)');                                 72600000
*   ANSWER(',/*Control block identifier*/'); /*                  @L1P*/ 72800000
*   ANSWER(CLVL3!!CMF2!!'IDC CHARACTER(4),/*Control block acronym*/')   73000000
*       COLUMN(FCOL3);              /*                           @L1P*/ 73200000
*   ANSWER(CLVL3!!CMF2!!'IDL CHARACTER(1),/*Control block level */')    73400000
*       COLUMN(FCOL3);              /*                           @L1P*/ 73600000
*   ANSWER(CLVL2!!CMF2!!'PFLG BIT(24),/*Processing flags*/') COLUMN(    73800000
*       FCOL3);                                                         74000000
*   ANSWER(CLVL3!!CMF2!!'PFL1 BIT(8)') COLUMN(FCOL3);                   74200000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 74400000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L1P*/ 74600000
*   ANSWER(',/*First flag byte*/'); /*                           @L1P*/ 74800000
*   ANSWER(CLVL4!!CMF2!!                                                75000000
*       'PUT  BIT(1),/*Generate output using the print service*/')      75200000
*       COLUMN(FCOL4);              /*                           @L1C*/ 75400000
*   ANSWER(CLVL4!!CMF2!!                                                75600000
*       'RETN  BIT(1),/*Return nonstandard module name*/') COLUMN(FCOL4 75800000
*       );                          /*                           @D1A*/ 76000000
*   ANSWER(CLVL4!!CMF2!!'DTYF  BIT(3),/*Data type code selectors.  All b76200000
*its off or on select all data types*/') COLUMN(FCOL4); /*       @01A*/ 76400000
*   ANSWER(CLVL5!!CMF2!!'DTYFL BIT(1),/*MODULE selector*/') COLUMN(     76600000
*       FCOL5);                     /*                           @01A*/ 76800000
*   ANSWER(CLVL5!!CMF2!!'DTYFM BIT(1),/*STRUCTURE selector*/') COLUMN(  77000000
*       FCOL5);                     /*                           @01A*/ 77200000
*   ANSWER(CLVL5!!CMF2!!'DTYFU BIT(1),/*AREA selector*/') COLUMN(FCOL5) 77400000
*       ;                           /*                           @01A*/ 77600000
*   ANSWER(CLVL4!!'* BIT(3),/*Reserved*/') COLUMN(FCOL4); /*     @01C*/ 77800000
*   ANSWER(CLVL3!!'* BIT(16)') COLUMN(FCOL3);                           78000000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 78200000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L1P*/ 78400000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 78600000
*   ANSWER(CLVL2!!CMF2!!'MODN CHARACTER(8)') COLUMN(FCOL2); /*   @L1P*/ 78800000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 79000000
*     IF LENGTH(EHBCSECT) >= 8 THEN /* CSECT name defined by BLRPROC    79200000
*                                                                @L1P*/ 79400000
*       ANSWER(CQINITIAL!!QUOTE(EHBCSECT(1:8))!!')'); /*         @L1P*/ 79600000
*     ELSE                          /* No token specified        @L1P*/ 79800000
*       ANSWER(CQINITIAL!!''' '')'); /* Default is blanks        @L1P*/ 80000000
*   ANSWER(',/*Name of module requesting the service*/'); /*     @L1P*/ 80200000
*   ANSWER('?BLSRDATS(ZZZASTCV,ZZZAS1NO,ZZZAS2M) MF(SUBLIST,'!!CMF2!!   80400000
*       'AS,'!!CMF3A!!','!!CLVL2!!');'); /* Address space identifier    80600000
*                                                                @L1P*/ 80800000
*   ANSWER(CLVL2!!CMF2!!'LAD '!!BLSADC) COLUMN(FCOL2); /*        @H1C*/ 81000000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 81200000
*     ANSWER(CQINITPTR);            /*                           @H1C*/ 81400000
*   ANSWER(',/*Logical address requested to be located*/');             81600000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 81800000
*     ANSWER(CLVL2!!'* BIT(96)') COLUMN(FCOL2); /*               @H1A*/ 82000000
*   ELSE                            /* ABITS=31                  @H1C*/ 82200000
*     ANSWER(CLVL2!!'* BIT(160)') COLUMN(FCOL2);                        82400000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 82600000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L1P*/ 82800000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 83000000
*   ANSWER(CLVL2!!CMF2!!'OUTP,/*WHERE output area*/') COLUMN(FCOL2);    83200000
*   ANSWER(CLVL3!!CMF2!!'OLAD '!!BLSADC) COLUMN(FCOL3); /*       @H1C*/ 83400000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 83600000
*     ANSWER(CQINITPTR);            /*                           @H1C*/ 83800000
*   ANSWER(',/*Logical address of located object*/');                   84000000
*   ANSWER('?BLSRDATC L(0) MF(SUBLIST,'!!CMF2!!'OD,'!!CMF3A!!','!!CLVL3 84200000
*       !!') ABITS('!!CHAR(BLSABIT)!!');'); /* Storage                  84400000
*                                      characteristics           @H1C*/ 84600000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 84800000
*     DO;                           /* ABITS=64                  @H1A*/ 85000000
*       ANSWER(CLVL3!!CMF2!!'OOFF CHARACTER(8)') COLUMN(FCOL3); /*      85200000
*                                                                @H1A*/ 85400000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialization required   @H1P*/ 85600000
*         ANSWER(CQINITIAL!!'''00''X)'); /*                      @H1A*/ 85800000
*     END;                          /* ABITS=64                  @H1A*/ 86000000
*   ELSE                            /* ABITS=31                  @H1A*/ 86200000
*     DO;                           /* ABITS=31                  @H1A*/ 86400000
*       ANSWER(CLVL3!!CMF2!!'OOFF SIGNED BINARY(31)') COLUMN(FCOL3);    86600000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialization required   @L1P*/ 86800000
*         ANSWER(CQINITIAL!!'ZZZZNULL)'); /*                     @L1P*/ 87000000
*     END;                          /* ABITS=31                  @H1A*/ 87200000
*   ANSWER(',/*Offset into located object*/');                          87400000
*   ANSWER(CLVL3!!CMF2!!'OSAL UNSIGNED BINARY(16)') COLUMN(FCOL3);      87600000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 87800000
*     ANSWER(CQINITIAL!!'0)');                                          88000000
*   ANSWER(',/*Length of system area name*/');                          88200000
*   ANSWER(CLVL3!!CMF2!!'OSAN CHARACTER(ZZZSYML)') COLUMN(FCOL3);       88400000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 88600000
*     ANSWER(CQINITIAL!!'ZZZSYM40)');                                   88800000
*   ANSWER(',/*System area name (e.g. PLPA)*/');                        89000000
*   ANSWER(CLVL3!!'* CHARACTER(1)') COLUMN(FCOL3);                      89200000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 89400000
*     ANSWER(CQINITIAL!!''' '')');  /*                           @L1P*/ 89600000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 89800000
*   ANSWER(CLVL3!!CMF2!!'ONOL UNSIGNED BINARY(16)') COLUMN(FCOL3);      90000000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 90200000
*     ANSWER(CQINITIAL!!'0)');                                          90400000
*   ANSWER(',/*Length of NAME+OFFSET string*/');                        90600000
*   ANSWER(CLVL3!!CMF2!!'ONMO CHARACTER(42)') COLUMN(FCOL3);            90800000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 91000000
*     ANSWER(CQINITIAL!!''' '')');                                      91200000
*   ANSWER(',/*NAME+OFFSET string*/');                                  91400000
*   ANSWER(CLVL3!!'* BIT(16)') COLUMN(FCOL3); /*                 @D1A*/ 91600000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @D1P*/ 91800000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @D1P*/ 92000000
*   ANSWER(',/*Reserved*/');        /*                           @D1P*/ 92200000
*   ANSWER(CLVL3!!CMF2!!'OMDP POINTER(32)') COLUMN(FCOL3); /*    @D1A*/ 92400000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @D1P*/ 92600000
*     ANSWER(CQINITIAL!!'ZZZZNULL)'); /*                         @D1P*/ 92800000
*   ANSWER(',/*Address of nonstandard module name data or 0*/'); /*     93000000
*                                                                @D1A*/ 93200000
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 93400000
*     ANSWER(CLVL3!!'* BIT(128)') COLUMN(FCOL3); /*              @H1A*/ 93600000
*   ELSE                            /* ABITS=31                      */ 93800000
*     ANSWER(CLVL3!!'* BIT(112)') COLUMN(FCOL3); /*              @H1C*/ 94000000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 94200000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L1P*/ 94400000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 94600000
*   ANSWER(CLVL2!!CMF2!!'999 CHARACTER(0)'!!CENDCHAR!!                  94800000
*       '/*BLSRPWHS #MD06207*/') COLUMN(FCOL2); /*               @01C*/ 95000000
*   IF CENDCHAR = ';' THEN          /*                           @L1P*/ 95200000
*     ANSWER('?BLSR002;');          /* Process deferred declarations    95400000
*                                                                @L1P*/ 95600000
*   ANSWER('?BLR003(BLSRPWHS,'!!CHAR(EHBRC)!!');');                     95800000
*   RETURN CODE(FRC);               /*                           @L1P*/ 96000000
*   %END BLSRPWHS;                                                      96200000
