*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMGCORF                               -10/16/06-<> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Get Correlator Flags                          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 (C) COPYRIGHT IBM CORP. 2007, 2007                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7740                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMGCORF service allows to check whether or not certain    * 00002100
*      Application Response Measurement (ARM) flags in a provided     * 00002200
*      EWLM correlator are set. These flags are contained in byte 3   * 00002300
*      of the ARM correlator format.                                  * 00002400
*                                                                     * 00002500
*      Note: for further details about ARM refer to the ARM V4        * 00002600
*      OpenGroup standard at http://www.opengroup.org/arm             * 00002700
*                                                                     * 00002800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002900
*                                                                     * 00003000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003100
*                                                                     * 00003200
*01* ENVIRONMENT:                                                     * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*      Dispatchable unit mode: Task or SRB mode.                      * 00003600
*                                                                     * 00003700
*      Minimum authorization: Problem state or supervisor state.      * 00003800
*                                                                     * 00003900
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00004000
*                        mode, code SYSSTATE AMODE64=YES before       * 00004100
*                        invoking this macro.                         * 00004200
*                                                                     * 00004300
*      ASC mode:         Primary.                                     * 00004400
*                                                                     * 00004500
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004600
*                                                                     * 00004700
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004800
*                                                                     * 00004900
*      Locks:            No locks held.  No restriction.              * 00005000
*                                                                     * 00005100
*      Control parameters: Control parameters must be in the primary  * 00005200
*                        address space.                               * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*01* PROGRAMMING REQUIREMENTS:                                        * 00005700
*    None.                                                            * 00005800
*                                                                     * 00005900
*01* RESTRICTIONS:                                                    * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*    1.  The caller is responsible for error recovery.                * 00006300
*                                                                     * 00006400
*    2.  The caller must serialize to prevent any correlator from     * 00006500
*        being accessed concurrently.                                 * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*01* INPUT REGISTER INFORMATION:                                      * 00007000
*                                                                     * 00007100
*    Before issuing the IWMGCORF macro, the caller does not have to   * 00007200
*    place any information into any register unless using it in       * 00007300
*    register notation for a particular parameter, or using it as a   * 00007400
*    base register.                                                   * 00007500
*                                                                     * 00007600
*01* OUTPUT REGISTER INFORMATION:                                     * 00007700
*                                                                     * 00007800
*    When control returns to the caller, the GPRs contain:            * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*    REGISTER  CONTENTS                                               * 00008200
*                                                                     * 00008300
*    0-1       Used as work register by the system                    * 00008400
*                                                                     * 00008500
*    2-13      Unchanged                                              * 00008600
*                                                                     * 00008700
*    14-15     Used as work register by the system                    * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*    When control returns to the caller, the ARs contain:             * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*    REGISTER  CONTENTS                                               * 00009500
*                                                                     * 00009600
*    0-1       Used as work registers by the system                   * 00009700
*                                                                     * 00009800
*    2-13      Unchanged                                              * 00009900
*                                                                     * 00010000
*    14-15     Used as work registers by the system.                  * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*    Some callers depend on register contents remaining the same      * 00010500
*    before and after issuing a service.  If the system changes the   * 00010600
*    contents of registers on which the caller depends, the caller    * 00010700
*    must save them before issuing the service, and restore them      * 00010800
*    after the system returns control.                                * 00010900
*                                                                     * 00011000
*01* PERFORMANCE IMPLICATIONS:                                        * 00011100
*                                                                     * 00011200
*    None                                                             * 00011300
*                                                                     * 00011400
*01* SYNTAX:                                                          * 00011500
*                                                                     * 00011600
*Ýxlabel¨  IWMGCORF     EWLM_CORR=xewlm_corr                          * 00011700
*                     Ý,ASYNC_FLAG=xasync_flag¨                       * 00011800
*                     Ý,INDEP_FLAG=xindep_flag¨                       * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*      Where:                                                         * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*      Ýxlabel¨                                                       * 00012500
*          is an optional symbol, starting in column 1, that is the   * 00012600
*          name on the IWMGCORF macro invocation.  The name must      * 00012700
*          conform to the rules for an ordinary assembler language    * 00012800
*          symbol.                                                    * 00012900
*          DEFAULT: No name.                                          * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*      EWLM_CORR=xewlm_corr                                           * 00013500
*          is the name (RS-type), or address in register (2)-(12), of * 00013600
*          a required character input which contains an EWLM (ARM)    * 00013700
*          correlator. If the correlator is invalid (architected      * 00013800
*          length in the first two bytes is less than 4 or greater    * 00013900
*          than 512) a call to this macro acts as a no-operation and  * 00014000
*          no change to the ASYNC_FLAG or INDEP_FLAG fields is made.  * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*      ÝASYNC_FLAG=xasync_flag¨                                       * 00014600
*          is the name (RS-type), or address in register (2)-(12), of * 00014700
*          an optional fullword output which receives the indication  * 00014800
*          whether or not the asynchronous flow flag is set. A value  * 00014900
*          of 1 is returned, if the asynchronous flow flag is set.    * 00015000
*          Otherwise 0 is returned.                                   * 00015100
*          It is the caller's responsibility to initialize the        * 00015200
*          ASYNC_FLAG field before issuing the macro because IWMGCORF * 00015300
*          will not modify it if the EWLM_CORR field contains an      * 00015400
*          invalid ARM correlator (see above).                        * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      ÝINDEP_FLAG=xindep_flag¨                                       * 00016000
*          is the name (RS-type), or address in register (2)-(12), of * 00016100
*          an optional fullword output which receives the indication  * 00016200
*          whether or not the independent flag is set. A value of 1   * 00016300
*          is returned, if the independent flag is set.  Otherwise 0  * 00016400
*          is returned.                                               * 00016500
*          It is the caller's responsibility to initialize the        * 00016600
*          INDEP_FLAG field before issuing the macro because IWMGCORF * 00016700
*          will not modify it if the EWLM_CORR field contains an      * 00016800
*          invalid ARM correlator (see above).                        * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*01* ABEND CODES:  None.                                              * 00017300
*                                                                     * 00017400
*01* RETURN CODES:  None.                                             * 00017500
*                                                                     * 00017600
*01* REASON CODES:  None.                                             * 00017700
*                                                                     * 00017800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00017900
*                                                                     * 00018000
*02*   PROCESSOR:  ASSEM                                              * 00018100
*                                                                     * 00018200
*01* COMPONENT:  SCWLM                                                * 00018300
*                                                                     * 00018400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00018500
*                                                                     * 00018600
*01* EXAMPLES:                                                        * 00018700
*              LHI   2,-1          INIT TO CATCH INVALID CORRELATOR   * 00018800
*              ST    2,ASYNCHRO                                       * 00018900
*              ST    2,INDEPEND                                       * 00019000
*              IWMGCORF                                             * * 00019100
*                    EWLM_CORR=MYCORR,                              * * 00019200
*                    ASYNC_FLAG=ASYNCHRO,                           * * 00019300
*                    INDEP_FLAG=INDEPEND                              * 00019400
*              L     2,ASYNCHRO    LOAD ASNYCHRONOUS INDIDICATOR      * 00019500
*              LTR   2,2           TEST ASYNC RESULT                  * 00019600
*              JP    ASYN_ON       ASYNC FLAG IS ON                   * 00019700
*              JZ    ASYN_OFF      ASYNC FLAG IS OFF                  * 00019800
*    CORR_INVA DS    0H            NOT A VALID ARM CORRELATOR         * 00019900
*              :                                                      * 00020000
*              :                                                      * 00020100
*    ASYN_ON   L     3,INDEPEND    LOAD INDEPENDENT INDICATOR         * 00020200
*              LTR   3,3           TEST INDEP (RELEVANT, IF ASYNC)    * 00020300
*              JP    INDE_ON                                          * 00020400
*    INDE_OFF  DS    0H            ASYNC ON, BUT NOT INDEPENDANT      * 00020500
*              :                                                      * 00020600
*              :                                                      * 00020700
*    ASYNCHRO  DS    F             STORAGE AREA FOR ASYNC FLAG        * 00020800
*    INDEPEND  DS    F             STORAGE AREA FOR INDEP FLAG        * 00020900
*    MYCORR    DS    CL512         STORAGE AREA FOR ARM CORRELATOR    * 00021000
*                                                                     * 00021100
*01* MACRO USAGE NOTES:                                               * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00021500
*        global macro variable.  Any value other than 'NO' will       * 00021600
*        result in the macro expansion being printed.  The default is * 00021700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00021800
*        variable should be set.                                      * 00021900
*                                                                     * 00022000
*                    GBLC &ZPRINT                                     * 00022100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*01* CHANGE ACTIVITY:                                                 * 00022600
*                                                                     * 00022700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00022800
*                                                                     * 00022900
*    $L0=LEWLMQ   HBB7740 060814 3241KK:  Initial version             * 00023000
*    $L1=ME07735  HBB7740 060906 3241GB:  Minor updates to            * 00023100
*                                         description and code        * 00023200
****** END OF SPECIFICATIONS *****************************************/ 00023300
*/********************************************************************* 00023400
         MACRO                                                          00023500
&XLABEL  IWMGCORF &EWLM_CORR=,&ASYNC_FLAG=,&INDEP_FLAG=                 00023600
.*                                                                      00023700
*                MACDATE -10/16/06-<0>                                  00023800
.*                                                                      00023900
.*******************************************************************    00024000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00024100
.*******************************************************************    00024200
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00024300
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00024400
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00024500
.*                                                                      00024600
                GBLC  &ZIWMGCORF  YES=MACRO USED AT LEAST ONCE          00024700
.*******************************************************************    00024800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00024900
.*******************************************************************    00025000
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00025100
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00025200
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00025300
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00025400
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00025500
                LCLA  &ZAWRK      USED AS A WORK AREA                   00025600
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00025700
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00025800
                LCLC  &ZC         CHARACTER WORK VARIABLE               00025900
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00026000
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00026100
                LCLC  &ZMAC_G     "G" or null                           00026200
&ZMAC_G         SETC  ''                                                00026300
                LCLC  &ZMAC_LR                                          00026400
&ZMAC_LR        SETC  'LR'                                              00026500
                LCLC  &ZMAC_L                                           00026600
&ZMAC_L         SETC  'L'                                               00026700
                LCLC  &ZMAC_ST                                          00026800
&ZMAC_ST        SETC  'ST'                                              00026900
                LCLA  &ZMACRET    MACRO RETURN CODE                     00027000
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00027100
.*                                                                      00027200
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00027300
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00027400
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00027500
                LCLC  &ZENDBASEPL               End of base PL          00027600
.*******************************************************************    00027700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00027800
.*******************************************************************    00027900
                LCLC  &XEWLM_CORR               ++ NAME                 00028000
                LCLC  &XASYNC_FLAG              ++ NAME                 00028100
                LCLC  &XINDEP_FLAG              ++ NAME                 00028200
.*******************************************************************    00028300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00028400
.*******************************************************************    00028500
                LCLC  &ZXEWLM_CORR              ++ INPUT NAME           00028600
                LCLC  &ZXASYNC_FLAG             ++ OUTPUT NAME          00028700
                LCLC  &ZXINDEP_FLAG             ++ OUTPUT NAME          00028800
.********************************************************************   00028900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00029000
.********************************************************************   00029100
                ACTR  10000                                             00029200
.*----------------------------------------------------------------***   00029300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00029400
                AIF   (N'&EWLM_CORR LE 1).ZG2A  CK NUM                  00029500
&ZMS            SETC  '"EWLM_CORR='                                     00029600
&ZMS            SETC  '&ZMS.&EWLM_CORR"'                                00029700
&ZMS            SETC  '&ZMS "EWLM_CORR"'                                00029800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00029900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00030000
.ZG2A           ANOP  ,                                                 00030100
.*-------------------------------------------------------------------   00030200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00030300
&ZXEWLM_CORR    SETC  'INPUT'     SET IN/OUTPUT                         00030400
&XEWLM_CORR     SETC  '&EWLM_CORR(1)'           SET XVARIABLE           00030500
                AIF   (N'&EWLM_CORR GT 1).ZG2B  MULTI PARMS             00030600
&XEWLM_CORR     SETC  '&EWLM_CORR'              SET XVARIABLE           00030700
.ZG2B           AIF   (K'&EWLM_CORR(1) GT 0).ZG2C                       00030800
&ZXEWLM_CORR    SETC  ''          RESET IN/OUTPUT                       00030900
&ZMS            SETC  ' '                                               00031000
&ZMS            SETC  '&ZMS "EWLM_CORR" KEY AND ITS'                    00031100
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00031200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00031300
.ZG2C           ANOP  ,                                                 00031400
.*-------------------------------------------------------------------   00031500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00031600
                AIF   (K'&ZXEWLM_CORR LE 0).ZG2R  NOT I/O               00031700
                AIF   ('&XEWLM_CORR'(1,1) NE '(').ZG2R                  00031800
&ZCGPR          SETC  '&XEWLM_CORR'(2,K'&XEWLM_CORR-2)                  00031900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00032000
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00032100
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00032200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00032300
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00032400
.ZG2P           ANOP  ,                                                 00032500
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00032600
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00032700
                AIF   ('&ZCGPR' LE '12').ZG2R                           00032800
.ZG2Q           ANOP  ,                                                 00032900
&ZMS            SETC  '"EWLM_CORR='                                     00033000
&ZMS            SETC  '&ZMS.&EWLM_CORR"'                                00033100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00033200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00033300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00033400
.ZG2R           ANOP  ,                                                 00033500
.*----------------------------------------------------------------***   00033600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00033700
                AIF   (N'&ASYNC_FLAG LE 1).ZG5A  CK NUM                 00033800
&ZMS            SETC  '"ASYNC_FLAG='                                    00033900
&ZMS            SETC  '&ZMS.&ASYNC_FLAG"'                               00034000
&ZMS            SETC  '&ZMS "ASYNC_FLAG"'                               00034100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00034200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00034300
.ZG5A           ANOP  ,                                                 00034400
.*-------------------------------------------------------------------   00034500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00034600
                AIF   (K'&ASYNC_FLAG(1) LE 0).ZG5C  NO PARM             00034700
&ZXASYNC_FLAG   SETC  'OUTPUT'    SET OUTPUT                            00034800
&XASYNC_FLAG    SETC  '&ASYNC_FLAG(1)'          SET XVARIABLE           00034900
                AIF   (N'&ASYNC_FLAG GT 1).ZG5C                         00035000
&XASYNC_FLAG    SETC  '&ASYNC_FLAG'             SET XVARIABLE           00035100
.ZG5C           ANOP  ,                                                 00035200
.*-------------------------------------------------------------------   00035300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00035400
                AIF   (K'&ZXASYNC_FLAG LE 0).ZG5R  NOT I/O              00035500
                AIF   ('&XASYNC_FLAG'(1,1) NE '(').ZG5R                 00035600
&ZCGPR          SETC  '&XASYNC_FLAG'(2,K'&XASYNC_FLAG-2)                00035700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00035800
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00035900
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00036000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00036100
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00036200
.ZG5P           ANOP  ,                                                 00036300
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00036400
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00036500
                AIF   ('&ZCGPR' LE '12').ZG5R                           00036600
.ZG5Q           ANOP  ,                                                 00036700
&ZMS            SETC  '"ASYNC_FLAG='                                    00036800
&ZMS            SETC  '&ZMS.&ASYNC_FLAG"'                               00036900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00037000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00037100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00037200
.ZG5R           ANOP  ,                                                 00037300
.*----------------------------------------------------------------***   00037400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00037500
                AIF   (N'&INDEP_FLAG LE 1).ZG8A  CK NUM                 00037600
&ZMS            SETC  '"INDEP_FLAG='                                    00037700
&ZMS            SETC  '&ZMS.&INDEP_FLAG"'                               00037800
&ZMS            SETC  '&ZMS "INDEP_FLAG"'                               00037900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00038000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00038100
.ZG8A           ANOP  ,                                                 00038200
.*-------------------------------------------------------------------   00038300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00038400
                AIF   (K'&INDEP_FLAG(1) LE 0).ZG8C  NO PARM             00038500
&ZXINDEP_FLAG   SETC  'OUTPUT'    SET OUTPUT                            00038600
&XINDEP_FLAG    SETC  '&INDEP_FLAG(1)'          SET XVARIABLE           00038700
                AIF   (N'&INDEP_FLAG GT 1).ZG8C                         00038800
&XINDEP_FLAG    SETC  '&INDEP_FLAG'             SET XVARIABLE           00038900
.ZG8C           ANOP  ,                                                 00039000
.*-------------------------------------------------------------------   00039100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00039200
                AIF   (K'&ZXINDEP_FLAG LE 0).ZG8R  NOT I/O              00039300
                AIF   ('&XINDEP_FLAG'(1,1) NE '(').ZG8R                 00039400
&ZCGPR          SETC  '&XINDEP_FLAG'(2,K'&XINDEP_FLAG-2)                00039500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00039600
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00039700
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00039800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00039900
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00040000
.ZG8P           ANOP  ,                                                 00040100
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00040200
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00040300
                AIF   ('&ZCGPR' LE '12').ZG8R                           00040400
.ZG8Q           ANOP  ,                                                 00040500
&ZMS            SETC  '"INDEP_FLAG='                                    00040600
&ZMS            SETC  '&ZMS.&INDEP_FLAG"'                               00040700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00040800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00040900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00041000
.ZG8R           ANOP  ,                                                 00041100
.******************************************************************     00041200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00041300
.******************************************************************     00041400
                ACTR  10000                                             00041500
.*----------------------------------------------------------------***   00041600
.***AH.P02 EXTRA POSITIONALS                                            00041700
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00041800
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00041900
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00042000
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00042100
.ZGLISTX1       ANOP  ,                                                 00042200
&ZCVAL          SETC  ''          ERROR FIELD                           00042300
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00042400
.ZGLIST2        ANOP  ,                                                 00042500
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00042600
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00042700
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00042800
                AGO   .ZGLIST2                                          00042900
.*                                                                      00043000
.ZGLIST3        ANOP  ,                                                 00043100
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00043200
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00043300
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00043400
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00043500
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00043600
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00043700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00043800
.ZGLISTX        ANOP  ,                                                 00043900
&ZASYSLNDX      SETA  0                                                 00044000
.*******************************************************************    00044100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00044200
.*******************************************************************    00044300
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00044400
.*******************************************************************    00044500
.***AE.01  START OF IWMGCORF MACRO CODE                                 00044600
.*******************************************************************    00044700
                LCLC  &M0M0001                 NAME                     00044800
&M0M0001        SETC  '&XLABEL'                SET NAME                 00044900
                AIF   (K'&XLABEL NE 0).XLAB2                            00045000
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00045100
.*                                                                      00045200
.XLAB2          ANOP  ,                                                 00045300
&M0M0001 DS    0H                             IWMGCORF-0                00045400
.*******************************************************************    00045500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00045600
.*******************************************************************    00045700
              PUSH  PRINT                                               00045800
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00045900
                PRINT OFF         ++ PR01                               00046000
                AGO   .ZPRNTXX                                          00046100
.ZPRINTX        PRINT ON                                                00046200
.ZPRNTXX        ANOP  ,                                                 00046300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00046400
         LCLC  &T1,&TAR,&SYX,&TR1                                       00046500
&SYX     SETC  '&SYSNDX'                                                00046600
         AIF   ('&XEWLM_CORR'(1,1) EQ '(').CORRREG                      00046700
&TR1     SETC  '14'                                                     00046800
.*       Correlator is provided in variable                             00046900
         LA    14,&XEWLM_CORR      ADDRESS CORRELATOR                   00047000
         AGO   .CHECKLC                                                 00047100
.CORRREG ANOP                                                           00047200
.*       Address of correlator is provided in register                  00047300
&TR1     SETC  '&XEWLM_CORR'(2,K'&XEWLM_CORR-2)                         00047400
.CHECKLC ANOP                                                           00047500
.*       Check correlator length and format                             00047600
         LH    15,0(,&TR1)         First two bytes contain length       00047700
         CHI   15,4                                                     00047800
         JL    END&SYX             Corr lenght must be >= 4             00047900
         CHI   15,512                                                   00048000
         JH    END&SYX             Corr length must be <= 512           00048100
.*                                                                      00048200
.*       Now it is clear that correlator length is >= 4 and <= 512      00048300
.*       Check, if ASYNC flag is to be extracted                        00048400
.*                                                                      00048500
         AIF   ('&ASYNC_FLAG' EQ '').ASYNEND                            00048600
.*       ASYNC_FLAG was specified, determine target address             00048700
&TAR     SETC  '&XASYNC_FLAG'      Default target address               00048800
         AIF   ('&XASYNC_FLAG'(1,1) NE '(').ASYNMEM                     00048900
&TAR     SETC  '&TAR'(2,K'&TAR-2)  Extract target register              00049000
&TAR     SETC  '0(0,&TAR)'         Target address is 0(0,reg)           00049100
.ASYNMEM ANOP                                                           00049200
.*       Test ASYNC_FLAG                                                00049300
.*       Since 15 contains correlator length (0..512), we can be sure   00049400
.*       that the upper half of R15 is zero. So we can use ICM          00049500
.*       without clearing R15 before to make sure upper half is zero    00049600
         ICM   15,3,2(&TR1)        Bytes at offset 2 and 3              00049700
         NILL  15,X'0020'          Mask 3rd bit in flag byte offset 3   00049800
         SRL   15,5                Move into least significant pos      00049900
.*       Store in memory                                                00050000
         ST    15,&TAR             Store result                         00050100
.ASYNEND ANOP                                                           00050200
.*                                                                      00050300
.*       Check, if INDEPENDENT flag is to be extracted                  00050400
.*                                                                      00050500
         AIF   ('&INDEP_FLAG' EQ '').INDEEND                            00050600
.*       INDEP_FLAG was specified, determine target address             00050700
&TAR     SETC  '&XINDEP_FLAG'      Default target address               00050800
         AIF   ('&XINDEP_FLAG'(1,1) NE '(').INDEMEM                     00050900
&TAR     SETC  '&TAR'(2,K'&TAR-2)  Extract target register              00051000
&TAR     SETC  '0(0,&TAR)'         Target address is 0(0,reg)           00051100
.INDEMEM ANOP                                                           00051200
.*       Test the INDEP_FLAG                                            00051300
         ICM   15,3,2(&TR1)        Bytes at offset 2 and 3              00051400
         NILL  15,X'0010'          Mask 4th bit in flag byte offset 3   00051500
         SRL   15,4                Move into least significant pos      00051600
.*       Store result in memory                                         00051700
         ST    15,&TAR             Store result                         00051800
.INDEEND ANOP                                                           00051900
.*                                                                      00052000
END&SYX  DS    0H                  End of IWMGCORF processing           00052100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00052200
.********************************************************************   00052300
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00052400
.********************************************************************   00052500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00052600
                      LCLA  &ZOPN1         INVOCATION INDEX             00052700
                      LCLC  &ZOPL(4095)    LABEL                        00052800
                      LCLC  &ZOPO(4095)    OPERATION                    00052900
                      LCLC  &ZOPV(4095)    VALUE                        00053000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00053100
.*                                                                      00053200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00053300
.*******************************************************************    00053400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00053500
.*******************************************************************    00053600
                      ACTR  10000                                       00053700
.*                                                                      00053800
                      LCLA  &ZLC           COLUMN POSITION              00053900
                      LCLA  &ZOPX          LIST TABLE INDEX             00054000
                      LCLC  &ZLL           LABEL                        00054100
                      LCLC  &ZLOP          OPERATION                    00054200
                      LCLC  &ZLV           VALUE                        00054300
                      LCLC  &ZLD           DESCRIPTION                  00054400
.*                                                                      00054500
&ZOPX                 SETA  1                                           00054600
.*******************************************************************    00054700
.***AP.X01  FORMAT GENERATED CODE                                       00054800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00054900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00055000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00055100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00055200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00055300
                      AIF   (K'&ZLD LE 0).ZL51                          00055400
&ZLC                  SETA  35             COMMENT COLUMN               00055500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00055600
&ZLC                  SETA  33             COMMENT COLUMN               00055700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00055800
&ZLV                  SETC  '&ZLV'.' '                                  00055900
                      AGO   .ZL31                                       00056000
.*                                                                      00056100
.ZL41                 ANOP  ,                                           00056200
&ZLV                  SETC  '&ZLV'.' '                                  00056300
.ZL51                 ANOP  ,                                           00056400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00056500
.*                                                                      00056600
&ZLL     &ZLOP &ZLV                                                     00056700
.*                                                                      00056800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00056900
                      AGO   .ZL21          CONTINUE LOOPING             00057000
.*                                                                      00057100
.ZLX1                 ANOP  ,                                           00057200
.*******************************************************************    00057300
.***AP.X02  END OF IWMGCORF MACRO                                       00057400
&ZIWMGCORF            SETC  'YES'          SET IWMGCORF USED            00057500
         POP   PRINT                                                    00057600
*                                            IWMGCORF-0                 00057700
         SPACE 1                                                        00057800
.ZLX2                 ANOP  ,                                           00057900
         MEND                                                           00058000
**********************************************************************/ 00058100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00058200
*%IWMGCORF: MACRO KEYS(EWLM_CORR,ASYNC_FLAG,INDEP_FLAG);                00058300
*  ANS('?'!!MACLABEL!!' '!!'IWMGCORP '!!MACLIST!!                       00058400
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00058500
*%END IWMGCORF;                                                         00058600
