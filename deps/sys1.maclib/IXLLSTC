*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLLSTC                               -01/13/18-<5> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES List Structure Control Services           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2000, 2017                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77B0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLLSTC macro provides operations to atomically perform    * 00002100
*      locking functions, monitor list state changes, read and write  * 00002200
*      list controls, read event queue controls and event monitor     * 00002300
*      controls and dequeue event monitor controls.                   * 00002400
*                                                                     * 00002500
*      The list structure is accessed as a set of linked lists where  * 00002600
*      each list is comprised of some number of list entries.  The    * 00002700
*      number of lists is determined via programming interface when   * 00002800
*      the structure is allocated, and is static for the duration of  * 00002900
*      the structure.                                                 * 00003000
*                                                                     * 00003100
*      Refer to the IXLCONN service description for additional        * 00003200
*      information regarding the allocation of and connection to a    * 00003300
*      list structure.                                                * 00003400
*                                                                     * 00003500
*      A "list cursor" is maintained for each linked list.  This list * 00003600
*      cursor is a list entry identifier corresponding to one of the  * 00003700
*      entries on the linked list.  If the list cursor is not         * 00003800
*      initialized it has a value of all binary zeros.                * 00003900
*                                                                     * 00004000
*      An allocated list entry has a structure assigned entry         * 00004100
*      identifier which is unique within the structure and can be     * 00004200
*      used for subsequent reference or access to that entry.         * 00004300
*      Structure allocation allows an option to support user defined  * 00004400
*      entry names, or user defined entry IDs which the structure     * 00004500
*      will enforce as unique within the structure on create          * 00004600
*      requests.  Entry names and user defined entry IDs may also be  * 00004700
*      used for subsequent entry reference and access.  Structure     * 00004800
*      allocation allows optional entry key support and secondary key * 00004900
*      support which functions as a mechanism for designating         * 00005000
*      relative positions within a specified list other than the list * 00005100
*      head or tail.  Either an entry key and/or a secondary key can  * 00005200
*      be specified on list requests.  Entry name and entry           * 00005300
*      key/secondary key support are mutually exclusive options.      * 00005400
*                                                                     * 00005500
*      A list structure may also be allocated to include a lock table * 00005600
*      as part of the structure.  The lock table is comprised of a    * 00005700
*      set of exclusive locks which can be manipulated either         * 00005800
*      independently of or in conjunction with list entry and adjunct * 00005900
*      data.  Locking operations include the setting, resetting, and  * 00006000
*      testing of a specified lock.  List entry and adjunct data      * 00006100
*      operations can be affected by the state of a specified lock.   * 00006200
*      The purpose and scope of each lock is entirely user defined.   * 00006300
*                                                                     * 00006400
*      A connection may optionally have a list notification vector    * 00006500
*      allocated on the attached host CPC.  The notification vector   * 00006600
*      may be used to monitor list state changes from the empty to    * 00006700
*      not-empty state, and vice-versa, for any list, sublist, or set * 00006800
*      of sublists in the structure.  Monitoring a set of sublists is * 00006900
*      accomplished via key-range monitoring and is available for     * 00007000
*      keyed sublists.  Monitoring secondary keyed sublists by        * 00007100
*      key-range is not provided.                                     * 00007200
*                                                                     * 00007300
*      List state transitions are recognized differently depending on * 00007400
*      the CFLEVEL of the coupling facility that contains the         * 00007500
*      structure:                                                     * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*      o   For CFLEVEL<=8, a list changes from the empty to the       * 00007900
*          not-empty state when the list has no entries and an entry  * 00008000
*          is created on or moved to the list.  A list changes from   * 00008100
*          the not-empty to the empty state when the list has one     * 00008200
*          entry and the entry is deleted or moved to another list.   * 00008300
*                                                                     * 00008400
*      o   For CFLEVEL=9 or higher, the initial state of a list is    * 00008500
*          empty.  Consider a particular pair of list empty/not-empty * 00008600
*          threshold counts.  Once a list is in the empty state, it   * 00008700
*          remains in the empty state until the number of entries on  * 00008800
*          the list becomes greater than the list not-empty threshold * 00008900
*          count.  If the list is in an empty state and an entry is   * 00009000
*          created on or moved to the list, the list state            * 00009100
*          transitions from empty to not-empty if the number of list  * 00009200
*          entries on the list becomes greater than the               * 00009300
*          list-not-empty threshold count.  Once a list is in the     * 00009400
*          not-empty state, it remains in the not-empty state until   * 00009500
*          the number of entries on the list either becomes zero or   * 00009600
*          becomes less than or equal to the list empty threshold     * 00009700
*          count.  If a list is in the not-empty state and an entry   * 00009800
*          is either deleted from the list or moved to another list,  * 00009900
*          the list state transitions from not-empty to empty if the  * 00010000
*          number of list entries on the list either becomes zero or  * 00010100
*          becomes less than or equal to the list-empty threshold     * 00010200
*          count.                                                     * 00010300
*                                                                     * 00010400
*          When the list empty/not-empty threshold counts change, the * 00010500
*          list state may also change.  If the number of entries on   * 00010600
*          the list is less than or equal to the new list empty       * 00010700
*          threshold count, the list state is empty.  If the number   * 00010800
*          of entries on the list is greater than the new list        * 00010900
*          not-empty threshold count, the list state is not-empty.    * 00011000
*          Otherwise the list state remains unchanged.                * 00011100
*                                                                     * 00011200
*      o   For CFLEVEL=22 or higher, in addition to using the         * 00011300
*          notification vector to monitor list state changes from the * 00011400
*          empty to not-empty state, the notification vector may also * 00011500
*          be used to monitor list state changes from the full to     * 00011600
*          not-full state and vice-versa. A user may monitor a list   * 00011700
*          for either not-empty or not-full transitions, but not both * 00011800
*          at the same time.  A user can dynamically change the type  * 00011900
*          of list monitoring being performed on a list by            * 00012000
*          re-registering for monitoring with the opposite            * 00012100
*          list-notification monitor type.                            * 00012200
*                                                                     * 00012300
*          CFLEVEL=22 or higher coupling facilities also offer an     * 00012400
*          "aggressive" type of list monitoring.  In addition to      * 00012500
*          monitoring for list state changes from the empty to        * 00012600
*          not-empty state and vise-versa based on established        * 00012700
*          threshold counts, a registered user can use a list         * 00012800
*          transition exit in conjunction with more frequent updates  * 00012900
*          to the list notification vector by the system to monitor   * 00013000
*          for all list entry additions to a list while the list      * 00013100
*          not-empty threshold count is exceeded.  Aggressive list    * 00013200
*          monitoring is only available for not-empty monitoring      * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*      Key-range state transitions are recognized similarly to the    * 00013700
*      list state transitions for CFLEVEL=9 or higher:                * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*      o   When key-range initialization completes, the key-range     * 00014100
*          state is set to empty if the number of list entries in the * 00014200
*          key-range is less than or equal to the key-range not-empty * 00014300
*          threshold count, and not-empty otherwise.  Once a          * 00014400
*          key-range is in the empty state, it remains in the empty   * 00014500
*          state until the number of list entries in the key-range    * 00014600
*          becomes greater than the key-range not-empty threshold     * 00014700
*          count.  If a key-range is in the empty state and an entry  * 00014800
*          is either created in the key-range or moved to the         * 00014900
*          key-range, the key-range state transitions from empty to   * 00015000
*          not-empty if the number of list entries in the key-range   * 00015100
*          becomes greater than the key-range not-empty threshold     * 00015200
*          count.  Once a key-range is in the not-empty state, it     * 00015300
*          remains in the not-empty state until the number of entries * 00015400
*          in the key-range either becomes zero or becomes less than  * 00015500
*          or equal to the key-range empty threshold count.  If a     * 00015600
*          key-range is in the not-empty state and an entry is either * 00015700
*          deleted from the key-range or moved to another list or     * 00015800
*          moved to the same list with a new entry key that is        * 00015900
*          outside the key-range, the key-range state transitions     * 00016000
*          from not-empty to empty if the number of list entries in   * 00016100
*          the key-range becomes zero or becomes less than or equal   * 00016200
*          to the key-range empty threshold count.                    * 00016300
*                                                                     * 00016400
*      o   In addition to the key-range state transitions from empty  * 00016500
*          to not-empty based on thresholds for CFLEVEL=9 or higher,  * 00016600
*          CFLEVEL=22 or higher coupling facilities also offer        * 00016700
*          "aggressive" monitoring for key-ranges. Aggressive         * 00016800
*          key-range monitoring and notification works similar to     * 00016900
*          aggressive list monitoring.  A registered user can use a   * 00017000
*          list transition exit in conjunction with more frequent     * 00017100
*          updates to the list notification vector by the system to   * 00017200
*          monitor for all list entry additions to a key-range while  * 00017300
*          the key-range not-empty threshold count is exceeded.       * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      For structures allocated in CFLEVEL=3 or higher, the           * 00017800
*      notification vector may be used to monitor an event queue for  * 00017900
*      state changes from the empty to not-empty state, and vice      * 00018000
*      versa.  An event queue contains Event Monitor Controls (EMCs)  * 00018100
*      for sublists which the user is monitoring and which have       * 00018200
*      become not-empty.  An event queue transitions from empty to    * 00018300
*      not-empty when a monitored sublist becomes not-empty, causing  * 00018400
*      the event monitor controls associated with the sublist to be   * 00018500
*      queued to the event queue.  An event queue transitions from    * 00018600
*      not-empty to empty when the last event monitor controls object * 00018700
*      is removed from the event queue as a result of one of the      * 00018800
*      following:                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      o   the event monitor controls being dequeued from the event   * 00019200
*          queue by the user                                          * 00019300
*                                                                     * 00019400
*      o   the event monitor controls being withdrawn from the event  * 00019500
*          queue as a result of the corresponding sublist becoming    * 00019600
*          empty                                                      * 00019700
*                                                                     * 00019800
*      o   the user deregistering monitoring interest in the          * 00019900
*          corresponding sublist.                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*      Event queue monitoring should be used in conjunction with      * 00020400
*      sublist monitoring.                                            * 00020500
*                                                                     * 00020600
*      For list structures allocated in CFLEVEL=9 or higher, a        * 00020700
*      sublist can be identified either by entry key or by secondary  * 00020800
*      key.  EMCs for sublists identified by entry key and EMCs for   * 00020900
*      sublists identified by secondary key are queued to different   * 00021000
*      event queues.  The different event queues can be monitored     * 00021100
*      independently.                                                 * 00021200
*                                                                     * 00021300
*      MVS provides a facility,  the IXLVECTR service, for optimized  * 00021400
*      testing of list transitions and/or event queue transitions     * 00021500
*      from empty to not-empty,  by interrogating the status of       * 00021600
*      individual entries in the notification vector which have been  * 00021700
*      associated with a particular list or the user's event queue.   * 00021800
*                                                                     * 00021900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00022000
*                                                                     * 00022100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00022200
*                                                                     * 00022300
*01* ENVIRONMENT:                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00022700
*                                                                     * 00022800
*      Dispatchable unit mode: Task or SRB mode.                      * 00022900
*                                                                     * 00023000
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00023100
*                                                                     * 00023200
*                        The current primary address space must be    * 00023300
*                        the same as the primary address space at the * 00023400
*                        time the connection service, IXLCONN, was    * 00023500
*                        issued for the structure.                    * 00023600
*                                                                     * 00023700
*      AMODE:            31-bit.                                      * 00023800
*                                                                     * 00023900
*      ASC mode:         Primary or Access Register.                  * 00024000
*                                                                     * 00024100
*      Interrupt status: Enabled or disabled for I/O and external     * 00024200
*                        interrupts.                                  * 00024300
*                                                                     * 00024400
*      Locks:            Disabled callers must be legally disabled by * 00024500
*                        holding the CPU lock and cannot hold other   * 00024600
*                        disabled locks (invocation by DIE routines   * 00024700
*                        is not supported).  Enabled callers must not * 00024800
*                        hold any locks.  When MODE=SYNCSUSPEND is    * 00024900
*                        specified the caller must be enabled.        * 00025000
*                                                                     * 00025100
*      Control parameters:                                            * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                        1.  The caller's parameter list must be      * 00025500
*                            addressable in the caller's primary      * 00025600
*                            address space.                           * 00025700
*                                                                     * 00025800
*                        2.  If the caller is running in Access       * 00025900
*                            Register ASC mode and specifies a macro  * 00026000
*                            parameter using explicit register        * 00026100
*                            notation the access register             * 00026200
*                            corresponding to the general register    * 00026300
*                            must appropriately qualify the general   * 00026400
*                            register.                                * 00026500
*                                                                     * 00026600
*                        3.  The virtual storage areas specified by   * 00026700
*                            the ANSAREA and MOSVECTOR keywords must  * 00026800
*                            be addressable in the caller's primary   * 00026900
*                            address space or from the caller's PASN  * 00027000
*                            access list.                             * 00027100
*                                                                     * 00027200
*                        4.  All other virtual storage areas          * 00027300
*                            specified on the invocation may be       * 00027400
*                            addressable in the caller's primary,     * 00027500
*                            secondary, or home address spaces, from  * 00027600
*                            the PASN access list, or from the DU     * 00027700
*                            access list.                             * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*01* PROGRAMMING REQUIREMENTS:                                        * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*    1.  Access Register mode invokers must specify SYSSTATE          * 00028700
*        ASCENV=AR prior to invoking this macro.                      * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*01* RESTRICTIONS:                                                    * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*    1.  If the caller is disabled then the parameter list and all    * 00029500
*        storage areas addressed by macro parameters must reside in   * 00029600
*        either non-pageable or disabled reference storage.           * 00029700
*                                                                     * 00029800
*    2.  The caller may not be running as a Disabled Interrupt Exit   * 00029900
*        (DIE).                                                       * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*01* INPUT REGISTER INFORMATION:                                      * 00030400
*                                                                     * 00030500
*    Before issuing the IXLLSTC macro, the caller does not have to    * 00030600
*    place any information into any register or AR unless using it in * 00030700
*    register notation for a particular parameter, or using it as a   * 00030800
*    base register.                                                   * 00030900
*                                                                     * 00031000
*01* OUTPUT REGISTER INFORMATION:                                     * 00031100
*                                                                     * 00031200
*    When control returns to the caller, the GPRs contain:            * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*    REGISTER  CONTENTS                                               * 00031600
*                                                                     * 00031700
*    0         Reason code                                            * 00031800
*                                                                     * 00031900
*    1         Used as work registers by the system                   * 00032000
*                                                                     * 00032100
*    2-13      Unchanged                                              * 00032200
*                                                                     * 00032300
*    14        Used as work registers by the system.                  * 00032400
*                                                                     * 00032500
*    15        Return code                                            * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*    When control returns to the caller, the ARs contain:             * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*    REGISTER  CONTENTS                                               * 00033300
*                                                                     * 00033400
*    0-1       Used as work registers by the system                   * 00033500
*                                                                     * 00033600
*    2-13      Unchanged                                              * 00033700
*                                                                     * 00033800
*    14-15     Used as work registers by the system.                  * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*01* PERFORMANCE IMPLICATIONS:                                        * 00034300
*                                                                     * 00034400
*    None.                                                            * 00034500
*                                                                     * 00034600
*01* SYNTAX:                                                          * 00034700
*                                                                     * 00034800
*Ýxlabel¨  IXLLSTC     CONTOKEN=xcontoken                             * 00034900
*                    Ý,REQID=»xreqid!NO_REQIDº¨                       * 00035000
*                   Ð ,REQUEST=LOCK                                   * 00035100
*                   !     ,LOCKINDEX=xlockindex                       * 00035200
*                   !   Ð ,LOCKOPER=SET                               * 00035300
*                   !   !   ÐÝ,LOCKMODE=UNCOND¨                       * 00035400
*                   !   !   ¿Ý,LOCKMODE=COND                          * 00035500
*                   !   !        Ý,LOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨¨ * 00035600
*                   !   !    Ý,LOCKDATA=»xlockdata!NO_LOCKDATAº¨      * 00035700
*                   !   Ô ,LOCKOPER=RESET                             * 00035800
*                   !   !    Ý,LOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨      * 00035900
*                   !   Ô ,LOCKOPER=TEST                              * 00036000
*                   !   !    Ý,LOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨      * 00036100
*                   !   ¿ ,LOCKOPER=READNEXT                          * 00036200
*                   !        Ý,LOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨      * 00036300
*                   Ô ,REQUEST=READ_LCONTROLS                         * 00036400
*                   !     ,LISTNUM=xlistnum                           * 00036500
*                   !   Ð ,BUFLIST=xbuflist                           * 00036600
*                   !   !   ÐÝ,BUFADDRTYPE=VIRTUAL                    * 00036700
*                   !   !   !   ÐÝ,PAGEABLE=YES                       * 00036800
*                   !   !   !   !    Ý,BUFSTGKEY                      * 00036900
*                   !   !   !   !                =»xbufstgkey!CALLERS * 00037000
*                   !   !   !   !                _KEYº¨¨              * 00037100
*                   !   !   !   ¿Ý,PAGEABLE=NO¨                       * 00037200
*                   !   !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨     * 00037300
*                   !   !   !   ÐÝ,BUFADDRSIZE=31¨                    * 00037400
*                   !   !   !   ¿Ý,BUFADDRSIZE=64¨¨                   * 00037500
*                   !   !   ¿Ý,BUFADDRTYPE=REAL                       * 00037600
*                   !   !       ÐÝ,BUFADDRSIZE=31¨                    * 00037700
*                   !   !       ¿Ý,BUFADDRSIZE=64¨¨                   * 00037800
*                   !   ¿ ,BUFFER=xbuffer                             * 00037900
*                   !       ÐÝ,PAGEABLE=YES                           * 00038000
*                   !       !    Ý,BUFSTGKEY                          * 00038100
*                   !       !                =»xbufstgkey!CALLERS_KEY * 00038200
*                   !       !                º¨¨                      * 00038300
*                   !       ¿Ý,PAGEABLE=NO¨                           * 00038400
*                   Ô ,REQUEST=WRITE_LCONTROLS                        * 00038500
*                   !     ,LISTNUM=xlistnum                           * 00038600
*                   !     ,AUTHCOMP=xauthcomp                         * 00038700
*                   !    Ý,NEWAUTH=»xnewauth!NO_NEWAUTHº¨             * 00038800
*                   !    Ý,LISTLIMIT=»xlistlimit!NO_LISTLIMITº¨       * 00038900
*                   !    Ý,LISTDESC=»xlistdesc!NO_LISTDESCº¨          * 00039000
*                   !    Ý,LISTKEY=»xlistkey!NO_LISTKEYº¨             * 00039100
*                   !    Ý,MAXLISTKEY=»xmaxlistkey!NO_MAXLISTKEYº¨    * 00039200
*                   !    Ý,SETCURSOR=»NO_SETCURSOR!HEAD!TAILº¨        * 00039300
*                   !   ÐÝ,KEYRANGE=NO_CHANGE¨                        * 00039400
*                   !   ¿Ý,KEYRANGE=SET                               * 00039500
*                   !         ,KEYRANGESTART                          * 00039600
*                   !                        =xkeyrangestart          * 00039700
*                   !         ,KEYRANGEEND=xkeyrangeend¨              * 00039800
*                   !   ÐÝ,KEYRANGESTATE=NO_CHANGE¨                   * 00039900
*                   !   ¿Ý,KEYRANGESTATE=DEFINE                       * 00040000
*                   !         ,KREMPTY=xkrempty                       * 00040100
*                   !         ,KRNOTEMPTY=xkrnotempty¨                * 00040200
*                   !   ÐÝ,LISTSTATE=NO_CHANGE¨                       * 00040300
*                   !   ¿Ý,LISTSTATE=DEFINE                           * 00040400
*                   !         ,LISTEMPTY=xlistempty                   * 00040500
*                   !         ,LISTNOTEMPTY=xlistnotempty¨            * 00040600
*                   !    Ý,KEYRNOTIFYDELAY=»NO_CHANGE!ON!OFFº¨        * 00040700
*                   !    Ý,LISTNOTIFYDELAY=»NO_CHANGE!ON!OFFº¨        * 00040800
*                   Ô ,REQUEST=READ_STRCOUNTS                         * 00040900
*                   Ô ,REQUEST=READ_EQCONTROLS                        * 00041000
*                   !    Ý,KEYTYPE=»ENTRY!SECONDARYº¨                 * 00041100
*                   Ô ,REQUEST=READ_EMCONTROLS                        * 00041200
*                   !     ,LISTNUM=xlistnum                           * 00041300
*                   !   Ð ,ENTRYKEY=xentrykey                         * 00041400
*                   !   ¿ ,SECONDARYKEY=xsecondarykey                 * 00041500
*                   Ô ,REQUEST=DEQ_EVENTQ                             * 00041600
*                   !    Ý,KEYTYPE=»ENTRY!SECONDARYº¨                 * 00041700
*                   !   Ð ,BUFLIST=xbuflist                           * 00041800
*                   !   !   ÐÝ,BUFADDRTYPE=VIRTUAL                    * 00041900
*                   !   !   !   ÐÝ,PAGEABLE=YES                       * 00042000
*                   !   !   !   !    Ý,BUFSTGKEY                      * 00042100
*                   !   !   !   !                =»xbufstgkey!CALLERS * 00042200
*                   !   !   !   !                _KEYº¨¨              * 00042300
*                   !   !   !   ¿Ý,PAGEABLE=NO¨                       * 00042400
*                   !   !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨     * 00042500
*                   !   !   !   ÐÝ,BUFADDRSIZE=31¨                    * 00042600
*                   !   !   !   ¿Ý,BUFADDRSIZE=64¨¨                   * 00042700
*                   !   !   ¿Ý,BUFADDRTYPE=REAL                       * 00042800
*                   !   !       ÐÝ,BUFADDRSIZE=31¨                    * 00042900
*                   !   !       ¿Ý,BUFADDRSIZE=64¨¨                   * 00043000
*                   !   ¿ ,BUFFER=xbuffer                             * 00043100
*                   !       ÐÝ,PAGEABLE=YES                           * 00043200
*                   !       !    Ý,BUFSTGKEY                          * 00043300
*                   !       !                =»xbufstgkey!CALLERS_KEY * 00043400
*                   !       !                º¨¨                      * 00043500
*                   !       ¿Ý,PAGEABLE=NO¨                           * 00043600
*                   Ô ,REQUEST=MONITOR_EVENTQ                         * 00043700
*                   !    Ý,KEYTYPE=»ENTRY!SECONDARYº¨                 * 00043800
*                   !   Ð ,ACTION=START                               * 00043900
*                   !   !     ,VECTORINDEX=xvectorindex               * 00044000
*                   !   !    Ý,DRIVEEXIT=»YES!NOº¨                    * 00044100
*                   !   ¿ ,ACTION=STOP                                * 00044200
*                   Ô ,REQUEST=MONITOR_LIST                           * 00044300
*                   !     ,LISTNUM=xlistnum                           * 00044400
*                   !   Ð ,ACTION=START                               * 00044500
*                   !   !     ,VECTORINDEX=xvectorindex               * 00044600
*                   !   !   ÐÝ,MONITORTYPE=NOTEMPTY                   * 00044700
*                   !   !   !    Ý,NOTIFICATION=»FIRST!EVERYº¨¨       * 00044800
*                   !   !   ¿Ý,MONITORTYPE=NOTFULL¨                   * 00044900
*                   !   !    Ý,DRIVEEXIT=»YES!NOº¨                    * 00045000
*                   !   ¿ ,ACTION=STOP                                * 00045100
*                   Ô ,REQUEST=MONITOR_KEYRANGE                       * 00045200
*                   !     ,LISTNUM=xlistnum                           * 00045300
*                   !   Ð ,ACTION=START                               * 00045400
*                   !   !     ,VECTORINDEX=xvectorindex               * 00045500
*                   !   !    Ý,NOTIFICATION=»FIRST!EVERYº¨            * 00045600
*                   !   !    Ý,DRIVEEXIT=»YES!NOº¨                    * 00045700
*                   !   ¿ ,ACTION=STOP                                * 00045800
*                   Ô ,REQUEST=MONITOR_SUBLIST                        * 00045900
*                   !     ,LISTNUM=xlistnum                           * 00046000
*                   !   Ð ,ENTRYKEY=xentrykey                         * 00046100
*                   !   ¿ ,SECONDARYKEY=xsecondarykey                 * 00046200
*                   !   Ð ,ACTION=START                               * 00046300
*                   !   !    Ý,NOTIFICATION=»FIRST!EVERYº¨            * 00046400
*                   !   !     ,UNC=xunc                               * 00046500
*                   !   ¿ ,ACTION=STOP                                * 00046600
*                   ¿ ,REQUEST=MONITOR_SUBLISTS                       * 00046700
*                         ,STARTINDEX=xstartindex                     * 00046800
*                         ,ENDINDEX=xendindex                         * 00046900
*                         ,MOSVECTOR=xmosvector                       * 00047000
*                       Ð ,BUFLIST=xbuflist                           * 00047100
*                       !   ÐÝ,BUFADDRTYPE=VIRTUAL                    * 00047200
*                       !   !   ÐÝ,PAGEABLE=YES                       * 00047300
*                       !   !   !    Ý,BUFSTGKEY                      * 00047400
*                       !   !   !                =»xbufstgkey!CALLERS * 00047500
*                       !   !   !                _KEYº¨¨              * 00047600
*                       !   !   ¿Ý,PAGEABLE=NO¨                       * 00047700
*                       !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨     * 00047800
*                       !   !   ÐÝ,BUFADDRSIZE=31¨                    * 00047900
*                       !   !   ¿Ý,BUFADDRSIZE=64¨¨                   * 00048000
*                       !   ¿Ý,BUFADDRTYPE=REAL                       * 00048100
*                       !       ÐÝ,BUFADDRSIZE=31¨                    * 00048200
*                       !       ¿Ý,BUFADDRSIZE=64¨¨                   * 00048300
*                       !     ,BUFNUM=xbufnum                         * 00048400
*                       !     ,BUFINCRNUM=xbufincrnum                 * 00048500
*                       ¿ ,BUFFER=xbuffer                             * 00048600
*                           ÐÝ,PAGEABLE=YES                           * 00048700
*                           !    Ý,BUFSTGKEY                          * 00048800
*                           !                =»xbufstgkey!CALLERS_KEY * 00048900
*                           !                º¨¨                      * 00049000
*                           ¿Ý,PAGEABLE=NO¨                           * 00049100
*                             ,BUFSIZE=xbufsize                       * 00049200
*                   ÐÝ,MODE=SYNCSUSPEND                               * 00049300
*                   !     ,ANSAREA=xansarea                           * 00049400
*                   !         ,ANSLEN=xanslen¨                        * 00049500
*                   ÔÝ,MODE=SYNCECB                                   * 00049600
*                   !     ,REQECB=xreqecb                             * 00049700
*                   !     ,ANSAREA=xansarea                           * 00049800
*                   !         ,ANSLEN=xanslen¨                        * 00049900
*                   ÔÝ,MODE=SYNCEXIT                                  * 00050000
*                   !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨             * 00050100
*                   !     ,ANSAREA=xansarea                           * 00050200
*                   !         ,ANSLEN=xanslen¨                        * 00050300
*                   ÔÝ,MODE=SYNCTOKEN                                 * 00050400
*                   !     ,REQTOKEN=xreqtoken                         * 00050500
*                   !     ,ANSAREA=xansarea                           * 00050600
*                   !         ,ANSLEN=xanslen¨                        * 00050700
*                   ÔÝ,MODE=ASYNCECB                                  * 00050800
*                   !     ,REQECB=xreqecb                             * 00050900
*                   !     ,ANSAREA=xansarea                           * 00051000
*                   !         ,ANSLEN=xanslen¨                        * 00051100
*                   ÔÝ,MODE=ASYNCEXIT                                 * 00051200
*                   !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨             * 00051300
*                   !     ,ANSAREA=xansarea                           * 00051400
*                   !         ,ANSLEN=xanslen¨                        * 00051500
*                   ÔÝ,MODE=ASYNCTOKEN                                * 00051600
*                   !     ,REQTOKEN=xreqtoken                         * 00051700
*                   !     ,ANSAREA=xansarea                           * 00051800
*                   !         ,ANSLEN=xanslen¨                        * 00051900
*                   ¿Ý,MODE=ASYNCNORESPONSE¨                          * 00052000
*                    Ý,RETCODE=xretcode¨                              * 00052100
*                    Ý,RSNCODE=xrsncode¨                              * 00052200
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00052300
*                   ÐÝ,MF=S¨                                          * 00052400
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00052500
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*      Where:                                                         * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*      Ýxlabel¨                                                       * 00053200
*          is an optional symbol, starting in column 1, that is the   * 00053300
*          name on the IXLLSTC macro invocation.  The name must       * 00053400
*          conform to the rules for an ordinary assembler language    * 00053500
*          symbol.                                                    * 00053600
*          DEFAULT: No name.                                          * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*      CONTOKEN=xcontoken                                             * 00054200
*          is the name (RS-type), or address in register (2)-(12), of * 00054300
*          a required 16 character input field that contains the      * 00054400
*          connect token returned by the IXLCONN service.  The        * 00054500
*          CONTOKEN uniquely identifies the user's connection to the  * 00054600
*          list structure.                                            * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*      ÝREQID=»xreqid!NO_REQIDº¨                                      * 00055200
*          is the name (RS-type), or address in register (2)-(12), of * 00055300
*          an optional 8 character input that contains a user-defined * 00055400
*          request identifier to be associated with the request.      * 00055500
*                                                                     * 00055600
*          Requests that have not been processed may be cancelled     * 00055700
*          using this request identifier.                             * 00055800
*                                                                     * 00055900
*          Refer to the IXLPURGE service description for additional   * 00056000
*          information regarding the cancelling requests.             * 00056100
*                                                                     * 00056200
*          DEFAULT: NO_REQID                                          * 00056300
*                                                                     * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*                                                                     * 00056700
*      REQUEST=»LOCK!READ_LCONTROLS!WRITE_LCONTROLS!READ_STRCOUNTS!RE * 00056800
*          AD_EQCONTROLS!READ_EMCONTROLS!DEQ_EVENTQ!MONITOR_EVENTQ!MO * 00056900
*          NITOR_LIST!MONITOR_KEYRANGE!MONITOR_SUBLIST!MONITOR_SUBLIS * 00057000
*          TSº                                                        * 00057100
*          is a required keyword input that specifies the type of     * 00057200
*          operation to be performed on the structure.                * 00057300
*                                                                     * 00057400
*                                                                     * 00057500
*          REQUEST=LOCK                                               * 00057600
*              Requests that the lock entry designated by LOCKINDEX   * 00057700
*              be operated on as specified by the LOCKOPER keyword.   * 00057800
*              This request type may only be specified for structures * 00057900
*              that contain a lock table.                             * 00058000
*                                                                     * 00058100
*              REQUEST=LOCK is mutually exclusive with                * 00058200
*              MODE=ASYNCNORESPONSE.                                  * 00058300
*                                                                     * 00058400
*                                                                     * 00058500
*              LOCKINDEX=xlockindex                                   * 00058600
*                  is the name (RS-type), or address in register      * 00058700
*                  (2)-(12), of a required fullword input that        * 00058800
*                  contains the index of the lock to be operated on   * 00058900
*                  within the lock table for the list structure.      * 00059000
*                                                                     * 00059100
*                  When specified, the designated lock will be        * 00059200
*                  operated on as specified by the LOCKOPER keyword.  * 00059300
*                  The specified value must fall within the range 0   * 00059400
*                  to the number of lock table entries minus one,     * 00059500
*                  inclusive.                                         * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*                                                                     * 00060000
*              LOCKOPER=»SET!RESET!TEST!READNEXTº                     * 00060100
*                  is a required keyword input that specifies the     * 00060200
*                  type of operation to be performed on the specified * 00060300
*                  lock.                                              * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*                                                                     * 00060700
*                  LOCKOPER=SET                                       * 00060800
*                      When LOCKCOMP is not specified, requests       * 00060900
*                      ownership of the lock for the connection       * 00061000
*                      specified by CONTOKEN.                         * 00061100
*                                                                     * 00061200
*                      When LOCKCOMP is specified, requests that      * 00061300
*                      ownership of the lock be transferred from the  * 00061400
*                      connection specified by LOCKCOMP to the        * 00061500
*                      connection specified by CONTOKEN.  Any         * 00061600
*                      outstanding requests awaiting contention       * 00061700
*                      resolution on this lock are ignored.           * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                      ÝLOCKMODE=»UNCOND!CONDº¨                       * 00062100
*                          is an optional keyword input that          * 00062200
*                          specifies how contention on the lock       * 00062300
*                          should be handled.                         * 00062400
*                          DEFAULT: UNCOND                            * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*                          ÝLOCKMODE=UNCOND¨                          * 00062800
*                              Requests that the lock operation be    * 00062900
*                              done unconditionally.                  * 00063000
*                                                                     * 00063100
*                              If the specified lock is held then the * 00063200
*                              entire IXLLSTC operation will be held  * 00063300
*                              up until the whole operation can be    * 00063400
*                              processed.  If MODE=SYNCSUSPEND was    * 00063500
*                              specified the caller will be suspended * 00063600
*                              until the lock becomes available,      * 00063700
*                              otherwise the request will be          * 00063800
*                              processed asynchronously and the       * 00063900
*                              requestor will be notified by the      * 00064000
*                              means indicated on the MODE keyword.   * 00064100
*                                                                     * 00064200
*                          ÝLOCKMODE=COND                             * 00064300
*                              Requests that the lock operation be    * 00064400
*                              done conditionally.                    * 00064500
*                                                                     * 00064600
*                              If the specified lock is held then the * 00064700
*                              entire IXLLSTC operation will be       * 00064800
*                              terminated with no resultant change to * 00064900
*                              the structure, and indicative return   * 00065000
*                              and reason codes are provided to the   * 00065100
*                              invoker.                               * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                              ÝLOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨¨    * 00065500
*                                  is the name (RS-type), or address  * 00065600
*                                  in register (2)-(12), of an        * 00065700
*                                  optional byte input field          * 00065800
*                                  containing a connection identifier * 00065900
*                                  to be verified as the current lock * 00066000
*                                  owner as a prerequisite to         * 00066100
*                                  successful completion of this      * 00066200
*                                  request. If the request            * 00066300
*                                  experiences lock contention the    * 00066400
*                                  request will be failed.  The       * 00066500
*                                  connection identifier is available * 00066600
*                                  from the IXLCONN answer area.      * 00066700
*                                  DEFAULT: NO_LOCKCOMP               * 00066800
*                                                                     * 00066900
*                                                                     * 00067000
*                                                                     * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*                                                                     * 00067400
*                                                                     * 00067500
*                                                                     * 00067600
*                      ÝLOCKDATA=»xlockdata!NO_LOCKDATAº¨             * 00067700
*                          is the name (RS-type), or address in       * 00067800
*                          register (2)-(12), of an optional 8        * 00067900
*                          character input that contains              * 00068000
*                          user-specified information to be passed to * 00068100
*                          the NOTIFY exit for the connection when    * 00068200
*                          the lock is held because of this           * 00068300
*                          LOCKOPER=SET request and another           * 00068400
*                          connection issues either:                  * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*                          o   A IXLLSTC LOCK request specifying      * 00068800
*                              LOCKOPER=SET with LOCKMODE=UNCOND.     * 00068900
*                                                                     * 00069000
*                          o   An IXLLSTE request specifying          * 00069100
*                              LOCKOPER=SET with LOCKMODE=UNCOND.     * 00069200
*                                                                     * 00069300
*                          o   An IXLLSTM request specifying          * 00069400
*                              LOCKOPER=NOTHELD.                      * 00069500
*                                                                     * 00069600
*                                                                     * 00069700
*                                                                     * 00069800
*                          DEFAULT: NO_LOCKDATA                       * 00069900
*                                                                     * 00070000
*                                                                     * 00070100
*                                                                     * 00070200
*                  LOCKOPER=RESET                                     * 00070300
*                      When LOCKCOMP is not specified, requests that  * 00070400
*                      ownership of the lock be released if held by   * 00070500
*                      the connection specified by CONTOKEN.          * 00070600
*                                                                     * 00070700
*                      When LOCKCOMP is specified, requests that      * 00070800
*                      ownership of the lock be released if and only  * 00070900
*                      if it is held by the connection specified by   * 00071000
*                      LOCKCOMP.                                      * 00071100
*                                                                     * 00071200
*                      The RESET operation will always be done        * 00071300
*                      unconditionally when LOCKCOMP is not specified * 00071400
*                      and conditionally when LOCKCOMP is specified.  * 00071500
*                                                                     * 00071600
*                                                                     * 00071700
*                                                                     * 00071800
*                      ÝLOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨             * 00071900
*                          is the name (RS-type), or address in       * 00072000
*                          register (2)-(12), of an optional byte     * 00072100
*                          input field containing a connection        * 00072200
*                          identifier to be verified as the current   * 00072300
*                          lock owner as a prerequisite to successful * 00072400
*                          completion of this request.                * 00072500
*                                                                     * 00072600
*                          When LOCKCOMP is specified the locking     * 00072700
*                          operation is always considered to be a     * 00072800
*                          conditional operation.  That is, if the    * 00072900
*                          request experiences lock contention the    * 00073000
*                          request will be failed.  The connection    * 00073100
*                          identifier is available from the IXLCONN   * 00073200
*                          answer area.                               * 00073300
*                          DEFAULT: NO_LOCKCOMP                       * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                  LOCKOPER=TEST                                      * 00073800
*                      When LOCKCOMP is not specified, requests that  * 00073900
*                      the lock be tested to see if it is owned by    * 00074000
*                      the connection specified by CONTOKEN.  If      * 00074100
*                      LOCKCOMP is specified the lock is to be tested * 00074200
*                      to see if it is owned by the LOCKCOMP          * 00074300
*                      connection.                                    * 00074400
*                                                                     * 00074500
*                      In both cases return code 0 indicates the lock * 00074600
*                      was held, while return code 4 indicates the    * 00074700
*                      lock is either not held or is held by a        * 00074800
*                      different connection.                          * 00074900
*                                                                     * 00075000
*                      The lock state remains unchanged as a result   * 00075100
*                      of this option.                                * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                      ÝLOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨             * 00075500
*                          is the name (RS-type), or address in       * 00075600
*                          register (2)-(12), of an optional byte     * 00075700
*                          input field containing a connection        * 00075800
*                          identifier to be verified as the current   * 00075900
*                          lock owner as a prerequisite to successful * 00076000
*                          completion of this request.                * 00076100
*                          DEFAULT: NO_LOCKCOMP                       * 00076200
*                                                                     * 00076300
*                                                                     * 00076400
*                                                                     * 00076500
*                  LOCKOPER=READNEXT                                  * 00076600
*                      When LOCKCOMP is not specified, requests that  * 00076700
*                      the lock index and connection ID of the owner  * 00076800
*                      of the next owned lock starting at the lock    * 00076900
*                      index specified by LOCKINDEX be returned.      * 00077000
*                                                                     * 00077100
*                      When LOCKCOMP is specified, requests that the  * 00077200
*                      lock index of the next lock owned by the       * 00077300
*                      LOCKCOMP connection, starting at the lock      * 00077400
*                      index specified by LOCKINDEX, be returned.     * 00077500
*                                                                     * 00077600
*                      The lock state remains unchanged as a result   * 00077700
*                      of this option.                                * 00077800
*                                                                     * 00077900
*                      A request specifying LOCKOPER=READNEXT may     * 00078000
*                      complete prematurely if coupling facility      * 00078100
*                      model-dependent timeout criteria is exceeded.  * 00078200
*                      In this event indicative return and reason     * 00078300
*                      codes are provided, and the index of the next  * 00078400
*                      lock to be processed is returned in the answer * 00078500
*                      area specified by ANSAREA.  This lock index    * 00078600
*                      may be specified on a subsequent               * 00078700
*                      LOCKOPER=READNEXT request to resume processing * 00078800
*                      with the appropriate lock entry.               * 00078900
*                                                                     * 00079000
*                                                                     * 00079100
*                      ÝLOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨             * 00079200
*                          is the name (RS-type), or address in       * 00079300
*                          register (2)-(12), of an optional byte     * 00079400
*                          input field containing a connection        * 00079500
*                          identifier.                                * 00079600
*                          DEFAULT: NO_LOCKCOMP                       * 00079700
*                                                                     * 00079800
*                                                                     * 00079900
*                                                                     * 00080000
*                                                                     * 00080100
*                                                                     * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*          REQUEST=READ_LCONTROLS                                     * 00080500
*              Read list controls.  Requests that control information * 00080600
*              for the list specified by LISTNUM be returned.         * 00080700
*                                                                     * 00080800
*              Information returned in the answer area specified by   * 00080900
*              ANSAREA consists of the list controls as mapped by     * 00081000
*              IXLYLAA mapping macro.  In addition, the list          * 00081100
*              monitoring information and key-range monitoring        * 00081200
*              information for the list is returned in the storage    * 00081300
*              specified by BUFFER or the buffers specified by        * 00081400
*              BUFLIST.  Refer to the IXLYLMI mapping macro for the   * 00081500
*              format of the returned list monitoring information and * 00081600
*              key-range monitoring information.                      * 00081700
*                                                                     * 00081800
*              REQUEST=READ_LCONTROLS is mutually exclusive with      * 00081900
*              MODE=ASYNCNORESPONSE.                                  * 00082000
*                                                                     * 00082100
*                                                                     * 00082200
*              LISTNUM=xlistnum                                       * 00082300
*                  is the name (RS-type), or address in register      * 00082400
*                  (2)-(12), of a required fullword input specifying  * 00082500
*                  the number of the list to be processed.            * 00082600
*                                                                     * 00082700
*                                                                     * 00082800
*                                                                     * 00082900
*                                                                     * 00083000
*              The following is a set of mutually exclusive keys.     * 00083100
*              This set is required; only one key must be specified.  * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*              BUFLIST=xbuflist                                       * 00083500
*                  belongs to a set of mutually exclusive keys. It is * 00083600
*                  an input.  It is the name (RS-type), or address in * 00083700
*                  register (2)-(12), of a 128-byte virtual storage   * 00083800
*                  area containing the address of a buffer.  The      * 00083900
*                  buffer receives output data from the               * 00084000
*                  READ_LCONTROLS request.                            * 00084100
*                                                                     * 00084200
*                  The format of the list is a set of 8-byte          * 00084300
*                  elements.  The BUFADDRSIZE keyword denotes whether * 00084400
*                  four or eight bytes of the element are used.  If   * 00084500
*                  BUFADDRSIZE=31 is specified then the first four    * 00084600
*                  bytes of each element are reserved space and the   * 00084700
*                  last four bytes contain the address of the buffer. * 00084800
*                  If BUFADDRSIZE=64 is specified then the full eight * 00084900
*                  bytes specify the address of the buffer.  The      * 00085000
*                  buffers may not reside in large pages.  The        * 00085100
*                  buffers may not reside in high shared virtual      * 00085200
*                  storage areas or in pageable high virtual common   * 00085300
*                  storage (above 2GB).                               * 00085400
*                                                                     * 00085500
*                  For READ_LCONTROLS requests only one buffer may be * 00085600
*                  passed.  The buffer must be 4096 bytes in length   * 00085700
*                  and must start on a 4096-byte boundary.            * 00085800
*                                                                     * 00085900
*                  Upon successful completion of a READ_LCONTROLS     * 00086000
*                  request, the BUFLIST buffer contains, starting at  * 00086100
*                  offset zero, an array of list monitoring           * 00086200
*                  information for the specified list and an array of * 00086300
*                  key-range monitoring information for the specified * 00086400
*                  list.  The relative position of an array element   * 00086500
*                  associates it with a connection identifier.  The   * 00086600
*                  first array element is associated with a           * 00086700
*                  connection identifier of zero, and is reserved.    * 00086800
*                  The length and contents of each array element is   * 00086900
*                  defined by mapping macro IXLYLMI.                  * 00087000
*                                                                     * 00087100
*                  BUFLIST is mutually exclusive with BUFFER.         * 00087200
*                                                                     * 00087300
*                                                                     * 00087400
*                  ÝBUFADDRTYPE=»VIRTUAL!REALº                        * 00087500
*                      is an optional keyword input that specifies    * 00087600
*                      whether the buffer address specified in the    * 00087700
*                      BUFLIST list is a virtual storage address or a * 00087800
*                      real storage address.                          * 00087900
*                                                                     * 00088000
*                      DEFAULT: VIRTUAL                               * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*                      ÝBUFADDRTYPE=VIRTUAL                           * 00088400
*                          Indicates that the buffer address          * 00088500
*                          specified in the BUFLIST list is a virtual * 00088600
*                          storage address.                           * 00088700
*                                                                     * 00088800
*                                                                     * 00088900
*                                                                     * 00089000
*                          ÝPAGEABLE=»YES!NOº¨                        * 00089100
*                              is an optional keyword input that      * 00089200
*                              specifies whether or not the buffer    * 00089300
*                              specified by BUFLIST resides in        * 00089400
*                              pageable storage.                      * 00089500
*                                                                     * 00089600
*                              DEFAULT: YES                           * 00089700
*                                                                     * 00089800
*                                                                     * 00089900
*                              ÝPAGEABLE=YES                          * 00090000
*                                  Indicates that the BUFLIST buffer  * 00090100
*                                  resides in pageable virtual        * 00090200
*                                  storage.                           * 00090300
*                                                                     * 00090400
*                                  This includes disabled reference   * 00090500
*                                  storage, and may include storage   * 00090600
*                                  that has the potential to become   * 00090700
*                                  pageable (such as address space    * 00090800
*                                  storage for which a PGSER FIX has  * 00090900
*                                  been successfully processed).  It  * 00091000
*                                  does not include implicitly        * 00091100
*                                  non-pageable storage (such as is   * 00091200
*                                  obtained from non-pageable         * 00091300
*                                  subpools).                         * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*                                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEY * 00091800
*                                      º¨¨                            * 00091900
*                                      is the name (RS-type), or      * 00092000
*                                      address in register (2)-(12),  * 00092100
*                                      of an optional 8 bit input     * 00092200
*                                      containing the storage key to  * 00092300
*                                      be used when referencing the   * 00092400
*                                      buffer in the list specified   * 00092500
*                                      by BUFLIST.                    * 00092600
*                                                                     * 00092700
*                                      The high order nibble contains * 00092800
*                                      the storage key, the low order * 00092900
*                                      nibble is ignored.  For        * 00093000
*                                      example, set 'kkkk' in the     * 00093100
*                                      binary bit string 'kkkkxxxx'B  * 00093200
*                                      to correspond to the desired   * 00093300
*                                      storage key.                   * 00093400
*                                                                     * 00093500
*                                      If BUFSTGKEY is not specified, * 00093600
*                                      then all references to the     * 00093700
*                                      BUFLIST buffer are performed   * 00093800
*                                      using the caller's PSW key.    * 00093900
*                                                                     * 00094000
*                                      DEFAULT: CALLERS_KEY           * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*                                                                     * 00094400
*                              ÝPAGEABLE=NO¨                          * 00094500
*                                  Indicates that the BUFLIST buffer  * 00094600
*                                  resides in non-pageable virtual    * 00094700
*                                  storage.                           * 00094800
*                                                                     * 00094900
*                                  This includes implicitly           * 00095000
*                                  non-pageable storage areas.  If    * 00095100
*                                  the virtual storage may            * 00095200
*                                  potentially become pageable, then  * 00095300
*                                  the invoker is responsible for     * 00095400
*                                  ensuring the virtual storage       * 00095500
*                                  remains non-pageable for the       * 00095600
*                                  duration of the request.           * 00095700
*                                                                     * 00095800
*                                  If MODE=ASYNCTOKEN is specified or * 00095900
*                                  MODE=SYNCTOKEN is specified and    * 00096000
*                                  the request does not complete      * 00096100
*                                  synchronously, then the storage    * 00096200
*                                  must remain non-pageable until     * 00096300
*                                  completion of the corresponding    * 00096400
*                                  IXLFCOMP request.  If              * 00096500
*                                  MODE=ASYNCEXIT is specified or     * 00096600
*                                  MODE=SYNCEXIT is specified and the * 00096700
*                                  request does not complete          * 00096800
*                                  synchronously, then the storage    * 00096900
*                                  must remain non-pageable until the * 00097000
*                                  completion exit is driven for the  * 00097100
*                                  request.  If MODE=ASYNCECB is      * 00097200
*                                  specified or MODE=SYNCECB is       * 00097300
*                                  specified and the request does not * 00097400
*                                  complete synchronously, then the   * 00097500
*                                  storage must remain non-pageable   * 00097600
*                                  until the specified ECB is posted  * 00097700
*                                  for the request.                   * 00097800
*                                                                     * 00097900
*                                                                     * 00098000
*                                                                     * 00098100
*                                                                     * 00098200
*                                                                     * 00098300
*                                                                     * 00098400
*                          ÝBUFALET=»xbufalet!NO_BUFALETº¨            * 00098500
*                              is the name (RS-type), or address in   * 00098600
*                              register (2)-(12), of an optional      * 00098700
*                              fullword input specifying the ALET     * 00098800
*                              value to be used in referencing the    * 00098900
*                              buffer specified for BUFLIST.          * 00099000
*                                                                     * 00099100
*                              DEFAULT: NO_BUFALET                    * 00099200
*                                                                     * 00099300
*                                                                     * 00099400
*                                                                     * 00099500
*                                                                     * 00099600
*                          ÝBUFADDRSIZE=»31!64º¨                      * 00099700
*                              is an optional keyword input that      * 00099800
*                              specifies whether a 31 or a 64 bit     * 00099900
*                              address is specified by a BUFLIST      * 00100000
*                              entry.                                 * 00100100
*                                                                     * 00100200
*                              DEFAULT: 31                            * 00100300
*                                                                     * 00100400
*                                                                     * 00100500
*                              ÝBUFADDRSIZE=31¨                       * 00100600
*                                  Indicates that the BUFLIST entry   * 00100700
*                                  is 31 bits in size.                * 00100800
*                                                                     * 00100900
*                              ÝBUFADDRSIZE=64¨¨                      * 00101000
*                                  Indicates that the BUFLIST entry   * 00101100
*                                  is 64 bits in size.                * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                      ÝBUFADDRTYPE=REAL                              * 00101800
*                          Indicates that the buffer address          * 00101900
*                          specified in the BUFLIST list is a real    * 00102000
*                          storage address.                           * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*                          ÝBUFADDRSIZE=»31!64º¨¨                     * 00102400
*                              is an optional keyword input that      * 00102500
*                              specifies whether a 31 or a 64 bit     * 00102600
*                              address is specified by a BUFLIST      * 00102700
*                              entry.                                 * 00102800
*                                                                     * 00102900
*                              DEFAULT: 31                            * 00103000
*                                                                     * 00103100
*                                                                     * 00103200
*                              ÝBUFADDRSIZE=31¨                       * 00103300
*                                  Indicates that the BUFLIST entry   * 00103400
*                                  is 31 bits in size.                * 00103500
*                                                                     * 00103600
*                              ÝBUFADDRSIZE=64¨¨                      * 00103700
*                                  Indicates that the BUFLIST entry   * 00103800
*                                  is 64 bits in size.                * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*                                                                     * 00104300
*                                                                     * 00104400
*                                                                     * 00104500
*                                                                     * 00104600
*                                                                     * 00104700
*                                                                     * 00104800
*              BUFFER=xbuffer                                         * 00104900
*                  belongs to a set of mutually exclusive keys. It is * 00105000
*                  an input.  It is the name (RS-type), or address in * 00105100
*                  register (2)-(12), of a virtual storage area to    * 00105200
*                  receive output data from the request.  The BUFFER  * 00105300
*                  keyword supports 4 byte addresses only.  The       * 00105400
*                  BUFFER keyword is mutually exclusive with the      * 00105500
*                  BUFADDRSIZE keyword.  The buffer may not reside in * 00105600
*                  large pages.                                       * 00105700
*                                                                     * 00105800
*                  For READ_LCONTROLS requests, the buffer must be    * 00105900
*                  4096 bytes on a 4096-byte boundary.                * 00106000
*                                                                     * 00106100
*                  Upon successful completion of a READ_LCONTROLS     * 00106200
*                  request, the BUFFER area contains, starting at     * 00106300
*                  offset zero, an array of list monitoring           * 00106400
*                  information for the specified list and an array of * 00106500
*                  key-range monitoring information for the specified * 00106600
*                  list.  The relative position of an array element   * 00106700
*                  associates it with a connection identifier.  The   * 00106800
*                  first array element is associated with a           * 00106900
*                  connection identifier of zero, and is reserved.    * 00107000
*                  The length and contents of each array element is   * 00107100
*                  defined by mapping macro IXLYLMI.                  * 00107200
*                                                                     * 00107300
*                  BUFFER is mutually exclusive with BUFLIST.         * 00107400
*                                                                     * 00107500
*                                                                     * 00107600
*                  ÝPAGEABLE=»YES!NOº¨                                * 00107700
*                      is an optional keyword input that specifies    * 00107800
*                      whether or not the storage area specified by   * 00107900
*                      BUFFER resides in pageable storage.            * 00108000
*                                                                     * 00108100
*                      DEFAULT: YES                                   * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*                      ÝPAGEABLE=YES                                  * 00108500
*                          Indicates that the BUFFER area resides in  * 00108600
*                          pageable virtual storage.                  * 00108700
*                                                                     * 00108800
*                          This includes disabled reference storage,  * 00108900
*                          and may include storage that has the       * 00109000
*                          potential to become pageable (such as      * 00109100
*                          address space storage for which a PGSER    * 00109200
*                          FIX has been successfully processed).  It  * 00109300
*                          does not include implicitly non-pageable   * 00109400
*                          storage (such as is obtained from          * 00109500
*                          non-pageable subpools).                    * 00109600
*                                                                     * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00110000
*                              is the name (RS-type), or address in   * 00110100
*                              register (2)-(12), of an optional 8    * 00110200
*                              bit input containing the storage key   * 00110300
*                              to be used when referencing the        * 00110400
*                              storage area specified by BUFFER.      * 00110500
*                                                                     * 00110600
*                              The high order nibble contains the     * 00110700
*                              storage key, the low order nibble is   * 00110800
*                              ignored.  For example, set 'kkkk' in   * 00110900
*                              the binary bit string 'kkkkxxxx'B to   * 00111000
*                              correspond to the desired storage key. * 00111100
*                                                                     * 00111200
*                              If BUFSTGKEY is not specified, then    * 00111300
*                              all references to the BUFFER buffer    * 00111400
*                              storage are performed using the        * 00111500
*                              caller's PSW key.                      * 00111600
*                                                                     * 00111700
*                              DEFAULT: CALLERS_KEY                   * 00111800
*                                                                     * 00111900
*                                                                     * 00112000
*                                                                     * 00112100
*                      ÝPAGEABLE=NO¨                                  * 00112200
*                          Indicates that the BUFFER area resides in  * 00112300
*                          non-pageable virtual storage.              * 00112400
*                                                                     * 00112500
*                          This includes implicitly non-pageable      * 00112600
*                          storage areas.  If the virtual storage may * 00112700
*                          potentially become pageable, then the      * 00112800
*                          invoker is responsible for ensuring the    * 00112900
*                          virtual storage remains non-pageable for   * 00113000
*                          the duration of the request.               * 00113100
*                                                                     * 00113200
*                          If MODE=ASYNCTOKEN is specified or         * 00113300
*                          MODE=SYNCTOKEN is specified and the        * 00113400
*                          request does not complete synchronously,   * 00113500
*                          then the storage must remain non-pageable  * 00113600
*                          until completion of the corresponding      * 00113700
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00113800
*                          specified or MODE=SYNCEXIT is specified    * 00113900
*                          and the request does not complete          * 00114000
*                          synchronously, then the storage must       * 00114100
*                          remain non-pageable until the completion   * 00114200
*                          exit is driven for the request.  If        * 00114300
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00114400
*                          is specified and the request does not      * 00114500
*                          complete synchronously, then the storage   * 00114600
*                          must remain non-pageable until the         * 00114700
*                          specified ECB is posted for the request.   * 00114800
*                                                                     * 00114900
*                                                                     * 00115000
*                                                                     * 00115100
*                                                                     * 00115200
*                                                                     * 00115300
*                                                                     * 00115400
*                                                                     * 00115500
*              End of a set of mutually exclusive required keys.      * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*          REQUEST=WRITE_LCONTROLS                                    * 00115900
*              Write list controls.  Requests that one or more of the * 00116000
*              list controls for the list specified by LISTNUM be     * 00116100
*              updated.  The list controls which may be updated       * 00116200
*              include the following:                                 * 00116300
*                                                                     * 00116400
*                                                                     * 00116500
*              o   List authority (NEWAUTH)                           * 00116600
*                                                                     * 00116700
*              o   List limit bounding the number of entries or       * 00116800
*                  elements which may reside on the list (LISTLIMIT)  * 00116900
*                                                                     * 00117000
*              o   List description (LISTDESC)                        * 00117100
*                                                                     * 00117200
*              o   List key (LISTKEY)                                 * 00117300
*                                                                     * 00117400
*              o   Maximum list key (MAXLISTKEY)                      * 00117500
*                                                                     * 00117600
*              o   List cursor and list cursor direction (SETCURSOR)  * 00117700
*                                                                     * 00117800
*              o   Key-range start and end values (KEYRANGESTART and  * 00117900
*                  KEYRANGEEND)                                       * 00118000
*                                                                     * 00118100
*              o   Key-range empty and key-range not-empty threshold  * 00118200
*                  counts (KREMPTY and KRNOTEMPTY)                    * 00118300
*                                                                     * 00118400
*              o   List empty and list not-empty threshold counts     * 00118500
*                  (LISTEMPTY and LISTNOTEMPTY)                       * 00118600
*                                                                     * 00118700
*              o   List notification delay control (LISTNOTIFYDELAY)  * 00118800
*                                                                     * 00118900
*              o   Key-range notification delay control               * 00119000
*                  (KEYRNOTIFYDELAY)                                  * 00119100
*                                                                     * 00119200
*                                                                     * 00119300
*                                                                     * 00119400
*                                                                     * 00119500
*              LISTNUM=xlistnum                                       * 00119600
*                  is the name (RS-type), or address in register      * 00119700
*                  (2)-(12), of a required fullword input specifying  * 00119800
*                  the number of the list to be processed.            * 00119900
*                                                                     * 00120000
*                                                                     * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*              AUTHCOMP=xauthcomp                                     * 00120500
*                  is the name (RS-type), or address in register      * 00120600
*                  (2)-(12), of a required 16 character input which   * 00120700
*                  specifies a value to be compared to the list       * 00120800
*                  authority value for the designated list.           * 00120900
*                                                                     * 00121000
*                  If the specified list authority fails to equal the * 00121100
*                  list authority value for the designated list then  * 00121200
*                  the IXLLSTC operation is terminated with no        * 00121300
*                  resultant change to the structure, and indicative  * 00121400
*                  return and reason codes are provided to the        * 00121500
*                  invoker.                                           * 00121600
*                                                                     * 00121700
*                                                                     * 00121800
*                                                                     * 00121900
*                                                                     * 00122000
*              ÝNEWAUTH=»xnewauth!NO_NEWAUTHº¨                        * 00122100
*                  is the name (RS-type), or address in register      * 00122200
*                  (2)-(12), of an optional 16 character input which  * 00122300
*                  specifies a new value to be established as the     * 00122400
*                  list authority of the designated list.  If NEWAUTH * 00122500
*                  is not specified the list authority for the        * 00122600
*                  designated list will remain unchanged.             * 00122700
*                                                                     * 00122800
*                  Note: The default list authority for all lists     * 00122900
*                  when the structure is allocated is binary zeros.   * 00123000
*                  DEFAULT: NO_NEWAUTH                                * 00123100
*                                                                     * 00123200
*                                                                     * 00123300
*                                                                     * 00123400
*                                                                     * 00123500
*              ÝLISTLIMIT=»xlistlimit!NO_LISTLIMITº¨                  * 00123600
*                  is the name (RS-type), or address in register      * 00123700
*                  (2)-(12), of an optional fullword input specifying * 00123800
*                  the list limit bounding the number of entries or   * 00123900
*                  elements that may reside on the list.  If          * 00124000
*                  LISTLIMIT is not specified the list limit for the  * 00124100
*                  designated list will remain unchanged.             * 00124200
*                                                                     * 00124300
*                  Note: The default list limit for all lists when    * 00124400
*                  the structure is allocated is the total number of  * 00124500
*                  list entries or elements in the structure.         * 00124600
*                                                                     * 00124700
*                  When an IXLALTER is processed for a list           * 00124800
*                  structure, if the list limit for a list is equal   * 00124900
*                  to the default value then it will be automatically * 00125000
*                  adjusted to the new number of entries or elements. * 00125100
*                  If a list limit is not equal to the default value  * 00125200
*                  then the alter process will not adjust it and it   * 00125300
*                  is the responsibility of the user, if desired, to  * 00125400
*                  set a new limit taking into account the current    * 00125500
*                  entry and element counts for the altered           * 00125600
*                  structure.                                         * 00125700
*                  DEFAULT: NO_LISTLIMIT                              * 00125800
*                                                                     * 00125900
*                                                                     * 00126000
*                                                                     * 00126100
*                                                                     * 00126200
*              ÝLISTDESC=»xlistdesc!NO_LISTDESCº¨                     * 00126300
*                  is the name (RS-type), or address in register      * 00126400
*                  (2)-(12), of an optional 32 character input        * 00126500
*                  specifying the user defined description to be      * 00126600
*                  associated with the list.  If LISTDESC is not      * 00126700
*                  specified the user description for the designated  * 00126800
*                  list will remain unchanged.                        * 00126900
*                                                                     * 00127000
*                  Note: The default list description for all lists   * 00127100
*                  when the structure is allocated is binary zeros.   * 00127200
*                  DEFAULT: NO_LISTDESC                               * 00127300
*                                                                     * 00127400
*                                                                     * 00127500
*                                                                     * 00127600
*                                                                     * 00127700
*              ÝLISTKEY=»xlistkey!NO_LISTKEYº¨                        * 00127800
*                  is the name (RS-type), or address in register      * 00127900
*                  (2)-(12), of an optional 16 character input        * 00128000
*                  specifying the list key to be associated with the  * 00128100
*                  list.  This list key value may be assigned to list * 00128200
*                  entries when they are created or moved.            * 00128300
*                                                                     * 00128400
*                  If LISTKEY is not specified the list key for the   * 00128500
*                  designated list will remain unchanged.  LISTKEY is * 00128600
*                  ignored when the structure does not support keyed  * 00128700
*                  entries.                                           * 00128800
*                                                                     * 00128900
*                  Note: The default list key for all lists when the  * 00129000
*                  structure is allocated is binary zeros.            * 00129100
*                                                                     * 00129200
*                  The LISTKEY keyword is only meaningful for list    * 00129300
*                  structures allocated in a CFLEVEL=1 or higher      * 00129400
*                  coupling facility.                                 * 00129500
*                  DEFAULT: NO_LISTKEY                                * 00129600
*                                                                     * 00129700
*                                                                     * 00129800
*                                                                     * 00129900
*                                                                     * 00130000
*              ÝMAXLISTKEY=»xmaxlistkey!NO_MAXLISTKEYº¨               * 00130100
*                  is the name (RS-type), or address in register      * 00130200
*                  (2)-(12), of an optional 16 character input        * 00130300
*                  specifying the maximum list key value to be        * 00130400
*                  associated with the list.  This value specifies an * 00130500
*                  upper bound for the list key value.                * 00130600
*                                                                     * 00130700
*                  If MAXLISTKEY is not specified the maximum list    * 00130800
*                  key for the designated list will remain unchanged. * 00130900
*                  MAXLISTKEY is ignored when the structure does not  * 00131000
*                  support keyed entries.                             * 00131100
*                                                                     * 00131200
*                  Note: The default maximum list key for all lists   * 00131300
*                  when the structure is allocated is binary zeros.   * 00131400
*                                                                     * 00131500
*                  The MAXLISTKEY keyword is only meaningful for list * 00131600
*                  structures allocated in a CFLEVEL=1 or higher      * 00131700
*                  coupling facility.                                 * 00131800
*                  DEFAULT: NO_MAXLISTKEY                             * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*                                                                     * 00132300
*              ÝSETCURSOR=»NO_SETCURSOR!HEAD!TAILº¨                   * 00132400
*                  is an optional keyword input which indicates that  * 00132500
*                  the list cursor and the list cursor direction are  * 00132600
*                  to be set.                                         * 00132700
*                                                                     * 00132800
*                  The list cursor direction is only used when an     * 00132900
*                  IXLLSTE invocation specifies UPDATECURSOR=YES with * 00133000
*                  CURSORUPDATETYPE=NEXTCOND.                         * 00133100
*                                                                     * 00133200
*                  Note: The default list cursor for all lists when   * 00133300
*                  the structure is allocated is binary zeros.  The   * 00133400
*                  default list cursor direction for all lists when   * 00133500
*                  the structure is allocated is a head-to-tail       * 00133600
*                  direction.                                         * 00133700
*                                                                     * 00133800
*                  The SETCURSOR keyword is only meaningful for list  * 00133900
*                  structures allocated in a CFLEVEL=1 or higher      * 00134000
*                  coupling facility.                                 * 00134100
*                                                                     * 00134200
*                  DEFAULT: NO_SETCURSOR                              * 00134300
*                                                                     * 00134400
*                                                                     * 00134500
*                  SETCURSOR=NO_SETCURSOR                             * 00134600
*                      Indicates that the list cursor and the list    * 00134700
*                      cursor direction will remain unchanged.        * 00134800
*                                                                     * 00134900
*                  SETCURSOR=HEAD                                     * 00135000
*                      Indicates that the list cursor is to be set to * 00135100
*                      the entry identifier for the first entry on    * 00135200
*                      the list and the list cursor direction is to   * 00135300
*                      be set in a head-to-tail direction.  If the    * 00135400
*                      list is empty then the list cursor will be     * 00135500
*                      reset to binary zeros.                         * 00135600
*                                                                     * 00135700
*                                                                     * 00135800
*                  SETCURSOR=TAIL                                     * 00135900
*                      Indicates that the list cursor is to be set to * 00136000
*                      the entry identifier for the last entry on the * 00136100
*                      list and the list cursor direction is to be    * 00136200
*                      set in a tail-to-head direction.  If the list  * 00136300
*                      is empty then the list cursor will be reset to * 00136400
*                      binary zeros.                                  * 00136500
*                                                                     * 00136600
*                                                                     * 00136700
*                                                                     * 00136800
*                                                                     * 00136900
*                                                                     * 00137000
*                                                                     * 00137100
*              ÝKEYRANGE=»NO_CHANGE!SETº¨                             * 00137200
*                  is an optional keyword input that determines       * 00137300
*                  whether the key-range is to be updated.            * 00137400
*                  DEFAULT: NO_CHANGE                                 * 00137500
*                                                                     * 00137600
*                                                                     * 00137700
*                  ÝKEYRANGE=NO_CHANGE¨                               * 00137800
*                      Indicates that the key-range currently defined * 00137900
*                      for the list will remain unchanged.            * 00138000
*                                                                     * 00138100
*                  ÝKEYRANGE=SET                                      * 00138200
*                      Indicates that the key-range defined for the   * 00138300
*                      list is to be set to the range specified by    * 00138400
*                      KEYRANGESTART and KEYRANGEEND.                 * 00138500
*                                                                     * 00138600
*                      SET is valid for keyed list structures         * 00138700
*                      allocated in a CFLEVEL=9 or higher coupling    * 00138800
*                      facility.  SET is ignored and the request      * 00138900
*                      processed as if NO_CHANGE were specified when  * 00139000
*                      the structure is allocated in a CFLEVEL=8 or   * 00139100
*                      lower coupling facility, or if the structure   * 00139200
*                      does not support keyed list entries.           * 00139300
*                                                                     * 00139400
*                      The default key-range start and end key values * 00139500
*                      are initialized to binary zeros for all lists  * 00139600
*                      when the structure is allocated.               * 00139700
*                                                                     * 00139800
*                      A request to change the key-range starts       * 00139900
*                      key-range initialization. A request to set the * 00140000
*                      key-range start and end key values to their    * 00140100
*                      current values continues key-range             * 00140200
*                      initialization. The request may complete       * 00140300
*                      prematurely due to a key-range initialization  * 00140400
*                      model-dependent timeout.                       * 00140500
*                                                                     * 00140600
*                      A timeout indicates the list controls have     * 00140700
*                      been updated but key-range initialization has  * 00140800
*                      not completed.  Key-range initialization can   * 00140900
*                      be completed by setting the key-range until    * 00141000
*                      the request completes without timing out. Note * 00141100
*                      that reissuing the original request may be     * 00141200
*                      done in response to a timeout, but it may not  * 00141300
*                      be appropriate if both AUTHCOMP and NEWAUTH    * 00141400
*                      are used since the list controls (including    * 00141500
*                      the list authority) were updated by the        * 00141600
*                      original request that timed out.               * 00141700
*                                                                     * 00141800
*                                                                     * 00141900
*                      KEYRANGESTART=xkeyrangestart                   * 00142000
*                          is the name (RS-type), or address in       * 00142100
*                          register (2)-(12), of a required 16        * 00142200
*                          character input that specifies an unsigned * 00142300
*                          128-bit key-range start key value to be    * 00142400
*                          associated with the list.                  * 00142500
*                                                                     * 00142600
*                                                                     * 00142700
*                                                                     * 00142800
*                                                                     * 00142900
*                      KEYRANGEEND=xkeyrangeend¨                      * 00143000
*                          is the name (RS-type), or address in       * 00143100
*                          register (2)-(12), of a required 16        * 00143200
*                          character input that specifies an unsigned * 00143300
*                          128-bit key-range end key value to be      * 00143400
*                          associated with the list.  The end key     * 00143500
*                          value must be greater than or equal to the * 00143600
*                          start key value.                           * 00143700
*                                                                     * 00143800
*                                                                     * 00143900
*                                                                     * 00144000
*                                                                     * 00144100
*                                                                     * 00144200
*                                                                     * 00144300
*                                                                     * 00144400
*                                                                     * 00144500
*              ÝKEYRANGESTATE=»NO_CHANGE!DEFINEº¨                     * 00144600
*                  is an optional keyword input that specifies        * 00144700
*                  whether the threshold counts that define the       * 00144800
*                  empty/not-empty state of a key-range are to be     * 00144900
*                  updated.                                           * 00145000
*                  DEFAULT: NO_CHANGE                                 * 00145100
*                                                                     * 00145200
*                                                                     * 00145300
*                  ÝKEYRANGESTATE=NO_CHANGE¨                          * 00145400
*                      Indicates that the threshold counts will       * 00145500
*                      remain unchanged.                              * 00145600
*                                                                     * 00145700
*                  ÝKEYRANGESTATE=DEFINE                              * 00145800
*                      Indicates that the threshold counts that       * 00145900
*                      define the empty/not-empty state of a          * 00146000
*                      key-range are to be set to the values          * 00146100
*                      indicated by KREMPTY and KRNOTEMPTY.           * 00146200
*                                                                     * 00146300
*                      DEFINE is valid for keyed list structures      * 00146400
*                      allocated in a CFLEVEL=9 or higher coupling    * 00146500
*                      facility.  DEFINE is ignored and the request   * 00146600
*                      processed as if NO_CHANGE were specified when  * 00146700
*                      the structure is allocated in a CFLEVEL=8 or   * 00146800
*                      lower coupling facility, or if the structure   * 00146900
*                      does not support keyed list entries.           * 00147000
*                                                                     * 00147100
*                      A key-range is either in the empty state or    * 00147200
*                      the not-empty state.  Use a                    * 00147300
*                      REQUEST=MONITOR_KEYRANGE request to register   * 00147400
*                      interest in monitoring transitions between     * 00147500
*                      key-range states.                              * 00147600
*                                                                     * 00147700
*                      The default key-range empty/not-empty          * 00147800
*                      threshold counts are initialized to zero for   * 00147900
*                      all lists when the structure is allocated.     * 00148000
*                                                                     * 00148100
*                                                                     * 00148200
*                      KREMPTY=xkrempty                               * 00148300
*                          is the name (RS-type), or address in       * 00148400
*                          register (2)-(12), of a required fullword  * 00148500
*                          input specifying the key-range empty       * 00148600
*                          threshold count to be associated with the  * 00148700
*                          list.                                      * 00148800
*                                                                     * 00148900
*                          A key-range is in the empty state if the   * 00149000
*                          number of list entries in the key-range is * 00149100
*                          either less than or equal to the KREMPTY   * 00149200
*                          threshold or zero.  Upon completion of the * 00149300
*                          key-range state definition, the key-range  * 00149400
*                          is also considered to be in the empty      * 00149500
*                          state if the number of list entries in the * 00149600
*                          key-range is less than or equal to the     * 00149700
*                          KRNOTEMPTY threshold.  Once the key-range  * 00149800
*                          state becomes empty, it remains empty      * 00149900
*                          until the number of list entries in the    * 00150000
*                          key-range becomes greater than the         * 00150100
*                          KRNOTEMPTY threshold.                      * 00150200
*                                                                     * 00150300
*                          The KREMPTY keyword is valid only for a    * 00150400
*                          keyed list structure allocated in a        * 00150500
*                          CFLEVEL=9 or higher coupling facility.     * 00150600
*                                                                     * 00150700
*                                                                     * 00150800
*                                                                     * 00150900
*                                                                     * 00151000
*                      KRNOTEMPTY=xkrnotempty¨                        * 00151100
*                          is the name (RS-type), or address in       * 00151200
*                          register (2)-(12), of a required fullword  * 00151300
*                          input specifying the key-range not-empty   * 00151400
*                          threshold count to be associated with the  * 00151500
*                          list.  The key-range not-empty count must  * 00151600
*                          be greater than or equal to the key-range  * 00151700
*                          empty count.                               * 00151800
*                                                                     * 00151900
*                          A key-range is in the not-empty state if   * 00152000
*                          the number of list entries in the          * 00152100
*                          key-range is greater than the KRNOTEMPTY   * 00152200
*                          threshold.  Once the key-range state is    * 00152300
*                          not-empty, it remains not-empty until the  * 00152400
*                          number of list entries in the key-range    * 00152500
*                          either becomes less than or equal to the   * 00152600
*                          KREMPTY threshold or becomes zero.         * 00152700
*                                                                     * 00152800
*                          The KRNOTEMPTY keyword is valid only for a * 00152900
*                          keyed list structure allocated in a        * 00153000
*                          CFLEVEL=9 or higher coupling facility.     * 00153100
*                                                                     * 00153200
*                                                                     * 00153300
*                                                                     * 00153400
*                                                                     * 00153500
*                                                                     * 00153600
*                                                                     * 00153700
*                                                                     * 00153800
*                                                                     * 00153900
*              ÝLISTSTATE=»NO_CHANGE!DEFINEº¨                         * 00154000
*                  is an optional keyword input that specifies        * 00154100
*                  whether the threshold counts that define the       * 00154200
*                  empty/not-empty state of a list are to be updated. * 00154300
*                  DEFAULT: NO_CHANGE                                 * 00154400
*                                                                     * 00154500
*                                                                     * 00154600
*                  ÝLISTSTATE=NO_CHANGE¨                              * 00154700
*                      Indicates that the threshold counts will       * 00154800
*                      remain unchanged.                              * 00154900
*                                                                     * 00155000
*                  ÝLISTSTATE=DEFINE                                  * 00155100
*                      Indicates that the threshold counts that       * 00155200
*                      define the empty/not-empty state of a list are * 00155300
*                      to be set to the values indicated by LISTEMPTY * 00155400
*                      and LISTNOTEMPTY.                              * 00155500
*                                                                     * 00155600
*                      Upon completion of the definition of the list  * 00155700
*                      empty/not-empty thresholds, the list state may * 00155800
*                      change.  If the number of list entries is less * 00155900
*                      than or equal to the new list empty threshold, * 00156000
*                      the list state is empty.  If the number of     * 00156100
*                      list entries is greater than the new list      * 00156200
*                      not-empty threshold, the list state is         * 00156300
*                      not-empty.  When the number of list entries is * 00156400
*                      greater than the new list empty threshold and  * 00156500
*                      less than or equal to the new list not-empty   * 00156600
*                      threshold, the list state remains unchanged.   * 00156700
*                                                                     * 00156800
*                      DEFINE is valid for CFLEVEL=9 or higher.       * 00156900
*                      DEFINE is ignored and the request processed as * 00157000
*                      if NO_CHANGE were specified when the structure * 00157100
*                      is allocated in a CFLEVEL=8 or lower coupling  * 00157200
*                      facility.                                      * 00157300
*                                                                     * 00157400
*                      A list is either in the empty state or the     * 00157500
*                      not-empty state.  Use a REQUEST=MONITOR_LIST   * 00157600
*                      request to register interest in monitoring     * 00157700
*                      transitions between list states.               * 00157800
*                                                                     * 00157900
*                      The default list empty/not-empty threshold     * 00158000
*                      counts are initialized to zero for all lists   * 00158100
*                      when the structure is allocated.  For          * 00158200
*                      structures allocated in a CFLEVEL=8 or lower   * 00158300
*                      coupling facility, the list-empty and list     * 00158400
*                      not-empty threshold counts are always zero.    * 00158500
*                                                                     * 00158600
*                                                                     * 00158700
*                      LISTEMPTY=xlistempty                           * 00158800
*                          is the name (RS-type), or address in       * 00158900
*                          register (2)-(12), of a required fullword  * 00159000
*                          input specifying the list empty threshold  * 00159100
*                          count to be associated with the list.      * 00159200
*                                                                     * 00159300
*                          A list is in the empty state if the number * 00159400
*                          of list entries on the list is less than   * 00159500
*                          or equal to the LISTEMPTY threshold.       * 00159600
*                                                                     * 00159700
*                          The LISTEMPTY keyword is valid only for a  * 00159800
*                          list structure allocated in a CFLEVEL=9 or * 00159900
*                          higher coupling facility.                  * 00160000
*                                                                     * 00160100
*                                                                     * 00160200
*                                                                     * 00160300
*                                                                     * 00160400
*                      LISTNOTEMPTY=xlistnotempty¨                    * 00160500
*                          is the name (RS-type), or address in       * 00160600
*                          register (2)-(12), of a required fullword  * 00160700
*                          input specifying the list not-empty        * 00160800
*                          threshold count to be associated with the  * 00160900
*                          list.  The list not-empty threshold count  * 00161000
*                          must be greater than or equal to the list  * 00161100
*                          empty threshold count.                     * 00161200
*                                                                     * 00161300
*                          A list is in the not-empty state if the    * 00161400
*                          number of list entries on the list is      * 00161500
*                          greater than the LISTNOTEMPTY threshold.   * 00161600
*                                                                     * 00161700
*                          The LISTNOTEMPTY keyword is valid only for * 00161800
*                          a list structure allocated in a CFLEVEL=9  * 00161900
*                          or higher coupling facility.               * 00162000
*                                                                     * 00162100
*                                                                     * 00162200
*                                                                     * 00162300
*                                                                     * 00162400
*                                                                     * 00162500
*                                                                     * 00162600
*                                                                     * 00162700
*                                                                     * 00162800
*              ÝKEYRNOTIFYDELAY=»NO_CHANGE!ON!OFFº¨                   * 00162900
*                  is an optional keyword input that specifies        * 00163000
*                  whether the key-range-notification delay value for * 00163100
*                  the structure will be applied when notifying       * 00163200
*                  monitoring instances of empty to not-empty state   * 00163300
*                  transitions for the list's (specified by LISTNUM)  * 00163400
*                  keyrange.                                          * 00163500
*                                                                     * 00163600
*                  Note: The default setting for KEYRNOTIFYDELAY for  * 00163700
*                  all lists when the structure is allocated is ON.   * 00163800
*                                                                     * 00163900
*                  KEYRNOTIFYDELAY is applicable when the structure   * 00164000
*                  is allocated with keys in a CFLEVEL=22 or higher   * 00164100
*                  coupling facility and the structure definition     * 00164200
*                  statement for the structure in the CFRM active     * 00164300
*                  policy specifies a non-zero KEYRNOTIFYDELAY value. * 00164400
*                                                                     * 00164500
*                  If KEYRNOTIFYDELAY is specified and the            * 00164600
*                  operational level of the coupling facility in      * 00164700
*                  which the structure is allocated (see              * 00164800
*                  ConaCFacilityCFLevel in the IXLCONN Connect Answer * 00164900
*                  Area) is less than CFLEVEL=22, the WRITE_LCONTROLS * 00165000
*                  request fails with return code IxlRetCodeEnvError, * 00165100
*                  reason code IxlRsnCodeBadReqCflevel.               * 00165200
*                                                                     * 00165300
*                  Macro IXCYQUAA defines the                         * 00165400
*                  QuReqRfListMonitorOptions bit in the QuReqFeatures * 00165500
*                  string that can be used to test if keyrange        * 00165600
*                  notification delay support and the IXLLSTC         * 00165700
*                  KEYRNOTIFYDELAY keyword is supported on the        * 00165800
*                  system. Use IXCQUERY REQINFO=FEATURES to get the   * 00165900
*                  QuReqFeatures string.                              * 00166000
*                                                                     * 00166100
*                  DEFAULT: NO_CHANGE                                 * 00166200
*                                                                     * 00166300
*                                                                     * 00166400
*                  KEYRNOTIFYDELAY=NO_CHANGE                          * 00166500
*                      Indicates that the key-range-notification      * 00166600
*                      delay value for the list's key-range will      * 00166700
*                      remain unchanged.                              * 00166800
*                                                                     * 00166900
*                  KEYRNOTIFYDELAY=ON                                 * 00167000
*                      The key-range-notification delay value for the * 00167100
*                      structure will be applied when notifying       * 00167200
*                      monitoring instances of empty to not-empty     * 00167300
*                      state transitions for this list's keyrange.    * 00167400
*                                                                     * 00167500
*                  KEYRNOTIFYDELAY=OFF                                * 00167600
*                      The key-range-notification delay value for the * 00167700
*                      structure will not be applied when notifying   * 00167800
*                      monitoring instances of empty to not-empty     * 00167900
*                      state transitions for this list's keyrange.    * 00168000
*                                                                     * 00168100
*                                                                     * 00168200
*                                                                     * 00168300
*                                                                     * 00168400
*                                                                     * 00168500
*                                                                     * 00168600
*              ÝLISTNOTIFYDELAY=»NO_CHANGE!ON!OFFº¨                   * 00168700
*                  is an optional keyword input that specifies        * 00168800
*                  whether the list notification delay value for the  * 00168900
*                  structure will be applied when notifying           * 00169000
*                  monitoring instances of empty to not-empty state   * 00169100
*                  transitions for the list specified by LISTNUM.     * 00169200
*                                                                     * 00169300
*                  Note: The default setting for LISTNOTIFYDELAY for  * 00169400
*                  all lists when the structure is allocated is ON.   * 00169500
*                                                                     * 00169600
*                  LISTNOTIFYDELAY is applicable when the structure   * 00169700
*                  is allocated in a CFLEVEL=22 or higher coupling    * 00169800
*                  facility and the structure definition statement    * 00169900
*                  for the structure in the CFRM active policy        * 00170000
*                  specifies a non-zero LISTNOTIFYDELAY value.        * 00170100
*                                                                     * 00170200
*                  If LISTNOTIFYDELAY is specified and the            * 00170300
*                  operational level of the coupling facility in      * 00170400
*                  which the structure is allocated (see              * 00170500
*                  ConaCFacilityCFLevel in the IXLCONN Connect Answer * 00170600
*                  Area) is less than CFLEVEL=22, the WRITE_LCONTROLS * 00170700
*                  request fails with return code IxlRetCodeEnvError, * 00170800
*                  reason code IxlRsnCodeBadReqCflevel.               * 00170900
*                                                                     * 00171000
*                  Macro IXCYQUAA defines the                         * 00171100
*                  QuReqRfListMonitorOptions bit in the QuReqFeatures * 00171200
*                  string that can be used to test if list            * 00171300
*                  notification delay support and the IXLLSTC         * 00171400
*                  LISTNOTIFYDELAY keyword is supported on the        * 00171500
*                  system. Use IXCQUERY REQINFO=FEATURES to get the   * 00171600
*                  QuReqFeatures string.                              * 00171700
*                                                                     * 00171800
*                  DEFAULT: NO_CHANGE                                 * 00171900
*                                                                     * 00172000
*                                                                     * 00172100
*                  LISTNOTIFYDELAY=NO_CHANGE                          * 00172200
*                      Indicates that the list notification delay     * 00172300
*                      value for the list will remain unchanged.      * 00172400
*                                                                     * 00172500
*                  LISTNOTIFYDELAY=ON                                 * 00172600
*                      The list notification delay value for the      * 00172700
*                      structure will be applied when notifying       * 00172800
*                      monitoring instances of empty to not-empty     * 00172900
*                      state transitions for this list.               * 00173000
*                                                                     * 00173100
*                  LISTNOTIFYDELAY=OFF                                * 00173200
*                      The list notification delay value for the      * 00173300
*                      structure will not be applied when notifying   * 00173400
*                      monitoring instances of empty to not-empty     * 00173500
*                      state transitions for this list.               * 00173600
*                                                                     * 00173700
*                                                                     * 00173800
*                                                                     * 00173900
*                                                                     * 00174000
*                                                                     * 00174100
*          REQUEST=READ_STRCOUNTS                                     * 00174200
*              Read Structure counts.  Requests that information on   * 00174300
*              the maximum and in-use counts be returned.             * 00174400
*                                                                     * 00174500
*              Information returned in the answer area specified by   * 00174600
*              ANSAREA consists of the current in-use number of       * 00174700
*              elements and maximum number of elements defined for    * 00174800
*              the structure if data elements are supported for the   * 00174900
*              structure, the current in-use number of entries and    * 00175000
*              the maximum number of entries defined for the          * 00175100
*              structure, the current in-use number of event monitor  * 00175200
*              controls and the total number of event monitor         * 00175300
*              controls defined for the structure if event monitor    * 00175400
*              controls are supported for the structure and the       * 00175500
*              number of lock entries defined for the structure if    * 00175600
*              the structure is defined as a serialized list          * 00175700
*              structure.                                             * 00175800
*                                                                     * 00175900
*          REQUEST=READ_EQCONTROLS                                    * 00176000
*              Read event queue controls.  Requests that control      * 00176100
*              information for the requesting user's event queue be   * 00176200
*              returned.                                              * 00176300
*                                                                     * 00176400
*              Information returned in the answer area specified by   * 00176500
*              ANSAREA consists of the total number of EMCs (Event    * 00176600
*              Monitor Controls) currently on the event queue, the    * 00176700
*              number of times that the event queue has transitioned  * 00176800
*              from the empty to the not-empty state, the vector      * 00176900
*              index number which is being used to monitor the event  * 00177000
*              queue, an indication of whether or not the user's list * 00177100
*              transition exit is to be driven when the event queue   * 00177200
*              transitions from the empty to not-empty state, and an  * 00177300
*              indication of whether the EMCs are for sublists        * 00177400
*              identified by entry key or for sublists identified by  * 00177500
*              secondary key.                                         * 00177600
*                                                                     * 00177700
*                                                                     * 00177800
*              ÝKEYTYPE=»ENTRY!SECONDARYº¨                            * 00177900
*                  is an optional keyword input that specifies        * 00178000
*                  whether to return information about the event      * 00178100
*                  queue for state transitions of sublists identified * 00178200
*                  by list entry key or to return informaion about    * 00178300
*                  the event queue for state transitions of sublists  * 00178400
*                  identified by secondary key.                       * 00178500
*                  DEFAULT: ENTRY                                     * 00178600
*                                                                     * 00178700
*                                                                     * 00178800
*                  KEYTYPE=ENTRY                                      * 00178900
*                      specifies that information about the event     * 00179000
*                      queue for state transitions of sublists        * 00179100
*                      identified by list entry key is to be          * 00179200
*                      returned.                                      * 00179300
*                                                                     * 00179400
*                      KEYTYPE=ENTRY is valid only when the structure * 00179500
*                      is allocated in a CFLEVEL=3 or higher coupling * 00179600
*                      facility.                                      * 00179700
*                                                                     * 00179800
*                  KEYTYPE=SECONDARY                                  * 00179900
*                      specifies that information about the event     * 00180000
*                      queue for state transitions of sublists        * 00180100
*                      identified by secondary key is to be returned. * 00180200
*                                                                     * 00180300
*                      KEYTYPE=SECONDARY is valid only when the       * 00180400
*                      structure is allocated with secondary keys in  * 00180500
*                      a CFLEVEL=9 or higher coupling facility.       * 00180600
*                                                                     * 00180700
*                                                                     * 00180800
*                                                                     * 00180900
*                                                                     * 00181000
*                                                                     * 00181100
*          REQUEST=READ_EMCONTROLS                                    * 00181200
*              Read event monitor controls (EMCs).  Requests that     * 00181300
*              control information for the requesting user's          * 00181400
*              registered interest in monitoring a particular sublist * 00181500
*              (designated by LISTNUM and either ENTRYKEY or          * 00181600
*              SECONDARYKEY) be returned.                             * 00181700
*                                                                     * 00181800
*              For entry keys, this request type is valid only when   * 00181900
*              the structure is allocated in a CFLEVEL=3 or higher    * 00182000
*              coupling facility.  The structure must support keyed   * 00182100
*              list entries (i.e., REFOPTION=KEY must be specified on * 00182200
*              the IXLCONN request when the structure is allocated).  * 00182300
*                                                                     * 00182400
*              For secondary keys, this request type is valid only    * 00182500
*              when the structure is allocated in a CFLEVEL=9 or      * 00182600
*              higher coupling facility.  The structure must support  * 00182700
*              secondary keys (i.e., KEYTYPE=SECONDARY must be        * 00182800
*              specified on the IXLCONN request when the structure is * 00182900
*              allocated).                                            * 00183000
*                                                                     * 00183100
*              Information returned in the answer area specified by   * 00183200
*              ANSAREA includes the user notification controls (UNC), * 00183300
*              the list number and entry key or secondary key of the  * 00183400
*              sublist with which the event monitor control           * 00183500
*              information is associated, an indication of whether or * 00183600
*              not the EMC is currently queued to the user's event    * 00183700
*              queue, an indication of whether the EMCs are for       * 00183800
*              sublists identified by entry key or for sublists       * 00183900
*              identified by secondary key, and an indication of      * 00184000
*              whether the EMC is queued to the event queue for only  * 00184100
*              the first list entry added to the sublist or for every * 00184200
*              list entry added to the sublist.                       * 00184300
*                                                                     * 00184400
*                                                                     * 00184500
*              LISTNUM=xlistnum                                       * 00184600
*                  is the name (RS-type), or address in register      * 00184700
*                  (2)-(12), of a required fullword input partially   * 00184800
*                  designating a sublist to be processed.             * 00184900
*                                                                     * 00185000
*                  LISTNUM is used in conjunction with either         * 00185100
*                  ENTRYKEY or SECONDARYKEY to designate a sublist    * 00185200
*                  for which the user's event monitor controls are to * 00185300
*                  be read.                                           * 00185400
*                                                                     * 00185500
*                                                                     * 00185600
*                                                                     * 00185700
*                                                                     * 00185800
*              The following is a set of mutually exclusive keys.     * 00185900
*              This set is required; only one key must be specified.  * 00186000
*                                                                     * 00186100
*                                                                     * 00186200
*              ENTRYKEY=xentrykey                                     * 00186300
*                  belongs to a set of mutually exclusive keys. It is * 00186400
*                  the name (RS-type), or address in register         * 00186500
*                  (2)-(12), of a 16 character input that specifies   * 00186600
*                  an unsigned 128-bit entry key to be used in        * 00186700
*                  conjunction with LISTNUM to designate a sublist    * 00186800
*                  whose EMCs are to be read.                         * 00186900
*                                                                     * 00187000
*                  ENTRYKEY may only be specified for structures that * 00187100
*                  support keyed entries.                             * 00187200
*                                                                     * 00187300
*              SECONDARYKEY=xsecondarykey                             * 00187400
*                  belongs to a set of mutually exclusive keys. It is * 00187500
*                  the name (RS-type), or address in register         * 00187600
*                  (2)-(12), of a 32 character input that specifies   * 00187700
*                  an unsigned 256-bit secondary key to be used in    * 00187800
*                  conjunction with LISTNUM to designate a sublist    * 00187900
*                  whose EMCs are to be read.                         * 00188000
*                                                                     * 00188100
*                  SECONDARYKEY is valid only for structures that are * 00188200
*                  allocated in a CFLEVEL=9 or higher coupling        * 00188300
*                  facility.  The structure must support secondary    * 00188400
*                  keys.                                              * 00188500
*                                                                     * 00188600
*                                                                     * 00188700
*                                                                     * 00188800
*              End of a set of mutually exclusive required keys.      * 00188900
*                                                                     * 00189000
*                                                                     * 00189100
*          REQUEST=DEQ_EVENTQ                                         * 00189200
*              Dequeue event queue EMCs.  Requests that event monitor * 00189300
*              controls be dequeued from an event queue.  The         * 00189400
*              contents of the dequeued EMCs are returned in the      * 00189500
*              specified BUFFER or BUFLIST area.  Each individual EMC * 00189600
*              is mapped by the IXLYEMC mapping macro. Note that      * 00189700
*              neither the EMCs nor the sublist monitoring interest   * 00189800
*              which they represent is deleted by this request.       * 00189900
*              Sublist monitoring remains active until it is stopped  * 00190000
*              via a subsequent MONITOR_SUBLIST ACTION=STOP request.  * 00190100
*                                                                     * 00190200
*              This request type is valid only when the structure is  * 00190300
*              allocated in a CFLEVEL=3 or higher coupling facility.  * 00190400
*                                                                     * 00190500
*              The DEQ_EVENTQ request may complete prematurely, that  * 00190600
*              is, without having dequeued all of the EMCs from an    * 00190700
*              event queue.  In such a case, the user is expected to  * 00190800
*              process the EMCs which were returned on the current    * 00190900
*              request and then re-issue the DEQ_EVENTQ request to    * 00191000
*              continue the process of dequeueing the remaining EMCs  * 00191100
*              from event queue.                                      * 00191200
*                                                                     * 00191300
*              Information returned in the answer area specified by   * 00191400
*              ANSAREA consists of the number of EMCs which were      * 00191500
*              returned, and the number of EMCs which still remain on * 00191600
*              the user's event queue.                                * 00191700
*                                                                     * 00191800
*              REQUEST=DEQ_EVENTQ is mutually exclusive with          * 00191900
*              MODE=ASYNCNORESPONSE.                                  * 00192000
*                                                                     * 00192100
*                                                                     * 00192200
*              ÝKEYTYPE=»ENTRY!SECONDARYº¨                            * 00192300
*                  is an optional keyword input that specifies        * 00192400
*                  whether to dequeue EMCs for state transitions of   * 00192500
*                  sublists identified by list entry key or to        * 00192600
*                  dequeue EMCs for state transitions of sublists     * 00192700
*                  identified by secondary key.                       * 00192800
*                  DEFAULT: ENTRY                                     * 00192900
*                                                                     * 00193000
*                                                                     * 00193100
*                  KEYTYPE=ENTRY                                      * 00193200
*                      specifies that the EMCs for state transitions  * 00193300
*                      of sublists identified by list entry key are   * 00193400
*                      to be dequeued.                                * 00193500
*                                                                     * 00193600
*                      KEYTYPE=ENTRY is valid only when the structure * 00193700
*                      is allocated in a CFLEVEL=3 or higher coupling * 00193800
*                      facility.                                      * 00193900
*                                                                     * 00194000
*                  KEYTYPE=SECONDARY                                  * 00194100
*                      specifies that the EMCs for state transitions  * 00194200
*                      of sublists identified by secondary key are to * 00194300
*                      be dequeued.                                   * 00194400
*                                                                     * 00194500
*                      KEYTYPE=SECONDARY is valid only when the       * 00194600
*                      structure is allocated with secondary keys in  * 00194700
*                      a CFLEVEL=9 or higher coupling facility.       * 00194800
*                                                                     * 00194900
*                                                                     * 00195000
*                                                                     * 00195100
*                                                                     * 00195200
*                                                                     * 00195300
*                                                                     * 00195400
*              The following is a set of mutually exclusive keys.     * 00195500
*              This set is required; only one key must be specified.  * 00195600
*                                                                     * 00195700
*                                                                     * 00195800
*              BUFLIST=xbuflist                                       * 00195900
*                  belongs to a set of mutually exclusive keys. It is * 00196000
*                  an input.  It is the name (RS-type), or address in * 00196100
*                  register (2)-(12), of a 128-byte virtual storage   * 00196200
*                  area containing the address of a buffer.  The      * 00196300
*                  buffer receives output data from the DEQ_EVENTQ    * 00196400
*                  request.                                           * 00196500
*                                                                     * 00196600
*                  The format of the list is a set of 8-byte          * 00196700
*                  elements.  The BUFADDRSIZE keyword denotes whether * 00196800
*                  four or eight bytes of the element are used.  If   * 00196900
*                  BUFADDRSIZE=31 is specified then the first four    * 00197000
*                  bytes of each element are reserved space and the   * 00197100
*                  last four bytes contain the address of the buffer. * 00197200
*                  If BUFADDRSIZE=64 is specified then the full eight * 00197300
*                  bytes specify the address of the buffer.  The      * 00197400
*                  buffers may not reside in large pages.  The        * 00197500
*                  buffers may not reside in high shared virtual      * 00197600
*                  storage areas or in pageable high virtual common   * 00197700
*                  storage (above 2GB).                               * 00197800
*                                                                     * 00197900
*                  For DEQ_EVENTQ requests only one buffer may be     * 00198000
*                  passed.  The buffer must be 4096 bytes in length   * 00198100
*                  and must start on a 4096-byte boundary.            * 00198200
*                                                                     * 00198300
*                  Upon successful completion of a DEQ_EVENTQ         * 00198400
*                  request, the BUFLIST contains, starting at offset  * 00198500
*                  zero in the buffer, an array of event monitor      * 00198600
*                  controls that were dequeued from the event queue.  * 00198700
*                  The length and contents of each array element is   * 00198800
*                  defined by mapping macro IXLYEMC.                  * 00198900
*                                                                     * 00199000
*                  BUFLIST is mutually exclusive with BUFFER.         * 00199100
*                                                                     * 00199200
*                                                                     * 00199300
*                  ÝBUFADDRTYPE=»VIRTUAL!REALº                        * 00199400
*                      is an optional keyword input that specifies    * 00199500
*                      whether the buffer address specified in the    * 00199600
*                      BUFLIST list is a virtual storage address or a * 00199700
*                      real storage address.                          * 00199800
*                                                                     * 00199900
*                      DEFAULT: VIRTUAL                               * 00200000
*                                                                     * 00200100
*                                                                     * 00200200
*                      ÝBUFADDRTYPE=VIRTUAL                           * 00200300
*                          Indicates that the buffer address          * 00200400
*                          specified in the BUFLIST list is a virtual * 00200500
*                          storage address.                           * 00200600
*                                                                     * 00200700
*                                                                     * 00200800
*                                                                     * 00200900
*                          ÝPAGEABLE=»YES!NOº¨                        * 00201000
*                              is an optional keyword input that      * 00201100
*                              specifies whether or not the buffer    * 00201200
*                              specified by BUFLIST resides in        * 00201300
*                              pageable storage.                      * 00201400
*                                                                     * 00201500
*                              DEFAULT: YES                           * 00201600
*                                                                     * 00201700
*                                                                     * 00201800
*                              ÝPAGEABLE=YES                          * 00201900
*                                  Indicates that the BUFLIST buffer  * 00202000
*                                  resides in pageable virtual        * 00202100
*                                  storage.                           * 00202200
*                                                                     * 00202300
*                                  This includes disabled reference   * 00202400
*                                  storage, and may include storage   * 00202500
*                                  that has the potential to become   * 00202600
*                                  pageable (such as address space    * 00202700
*                                  storage for which a PGSER FIX has  * 00202800
*                                  been successfully processed).  It  * 00202900
*                                  does not include implicitly        * 00203000
*                                  non-pageable storage (such as is   * 00203100
*                                  obtained from non-pageable         * 00203200
*                                  subpools).                         * 00203300
*                                                                     * 00203400
*                                                                     * 00203500
*                                                                     * 00203600
*                                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEY * 00203700
*                                      º¨¨                            * 00203800
*                                      is the name (RS-type), or      * 00203900
*                                      address in register (2)-(12),  * 00204000
*                                      of an optional 8 bit input     * 00204100
*                                      containing the storage key to  * 00204200
*                                      be used when referencing the   * 00204300
*                                      buffer in the list specified   * 00204400
*                                      by BUFLIST.                    * 00204500
*                                                                     * 00204600
*                                      The high order nibble contains * 00204700
*                                      the storage key, the low order * 00204800
*                                      nibble is ignored.  For        * 00204900
*                                      example, set 'kkkk' in the     * 00205000
*                                      binary bit string 'kkkkxxxx'B  * 00205100
*                                      to correspond to the desired   * 00205200
*                                      storage key.                   * 00205300
*                                                                     * 00205400
*                                      If BUFSTGKEY is not specified, * 00205500
*                                      then all references to the     * 00205600
*                                      BUFLIST buffer are performed   * 00205700
*                                      using the caller's PSW key.    * 00205800
*                                                                     * 00205900
*                                      DEFAULT: CALLERS_KEY           * 00206000
*                                                                     * 00206100
*                                                                     * 00206200
*                                                                     * 00206300
*                              ÝPAGEABLE=NO¨                          * 00206400
*                                  Indicates that the BUFLIST buffer  * 00206500
*                                  resides in non-pageable virtual    * 00206600
*                                  storage.                           * 00206700
*                                                                     * 00206800
*                                  This includes implicitly           * 00206900
*                                  non-pageable storage areas.  If    * 00207000
*                                  the virtual storage may            * 00207100
*                                  potentially become pageable, then  * 00207200
*                                  the invoker is responsible for     * 00207300
*                                  ensuring the virtual storage       * 00207400
*                                  remains non-pageable for the       * 00207500
*                                  duration of the request.           * 00207600
*                                                                     * 00207700
*                                  If MODE=ASYNCTOKEN is specified or * 00207800
*                                  MODE=SYNCTOKEN is specified and    * 00207900
*                                  the request does not complete      * 00208000
*                                  synchronously, then the storage    * 00208100
*                                  must remain non-pageable until     * 00208200
*                                  completion of the corresponding    * 00208300
*                                  IXLFCOMP request.  If              * 00208400
*                                  MODE=ASYNCEXIT is specified or     * 00208500
*                                  MODE=SYNCEXIT is specified and the * 00208600
*                                  request does not complete          * 00208700
*                                  synchronously, then the storage    * 00208800
*                                  must remain non-pageable until the * 00208900
*                                  completion exit is driven for the  * 00209000
*                                  request.  If MODE=ASYNCECB is      * 00209100
*                                  specified or MODE=SYNCECB is       * 00209200
*                                  specified and the request does not * 00209300
*                                  complete synchronously, then the   * 00209400
*                                  storage must remain non-pageable   * 00209500
*                                  until the specified ECB is posted  * 00209600
*                                  for the request.                   * 00209700
*                                                                     * 00209800
*                                                                     * 00209900
*                                                                     * 00210000
*                                                                     * 00210100
*                                                                     * 00210200
*                                                                     * 00210300
*                          ÝBUFALET=»xbufalet!NO_BUFALETº¨            * 00210400
*                              is the name (RS-type), or address in   * 00210500
*                              register (2)-(12), of an optional      * 00210600
*                              fullword input specifying the ALET     * 00210700
*                              value to be used in referencing the    * 00210800
*                              buffer specified for BUFLIST.          * 00210900
*                                                                     * 00211000
*                              DEFAULT: NO_BUFALET                    * 00211100
*                                                                     * 00211200
*                                                                     * 00211300
*                                                                     * 00211400
*                                                                     * 00211500
*                          ÝBUFADDRSIZE=»31!64º¨                      * 00211600
*                              is an optional keyword input that      * 00211700
*                              specifies whether a 31 or a 64 bit     * 00211800
*                              address is specified by a BUFLIST      * 00211900
*                              entry.                                 * 00212000
*                                                                     * 00212100
*                              DEFAULT: 31                            * 00212200
*                                                                     * 00212300
*                                                                     * 00212400
*                              ÝBUFADDRSIZE=31¨                       * 00212500
*                                  Indicates that the BUFLIST entry   * 00212600
*                                  is 31 bits in size.                * 00212700
*                                                                     * 00212800
*                              ÝBUFADDRSIZE=64¨¨                      * 00212900
*                                  Indicates that the BUFLIST entry   * 00213000
*                                  is 64 bits in size.                * 00213100
*                                                                     * 00213200
*                                                                     * 00213300
*                                                                     * 00213400
*                                                                     * 00213500
*                                                                     * 00213600
*                      ÝBUFADDRTYPE=REAL                              * 00213700
*                          Indicates that the buffer address          * 00213800
*                          specified in the BUFLIST list is a real    * 00213900
*                          storage address.                           * 00214000
*                                                                     * 00214100
*                                                                     * 00214200
*                          ÝBUFADDRSIZE=»31!64º¨¨                     * 00214300
*                              is an optional keyword input that      * 00214400
*                              specifies whether a 31 or a 64 bit     * 00214500
*                              address is specified by a BUFLIST      * 00214600
*                              entry.                                 * 00214700
*                                                                     * 00214800
*                              DEFAULT: 31                            * 00214900
*                                                                     * 00215000
*                                                                     * 00215100
*                              ÝBUFADDRSIZE=31¨                       * 00215200
*                                  Indicates that the BUFLIST entry   * 00215300
*                                  is 31 bits in size.                * 00215400
*                                                                     * 00215500
*                              ÝBUFADDRSIZE=64¨¨                      * 00215600
*                                  Indicates that the BUFLIST entry   * 00215700
*                                  is 64 bits in size.                * 00215800
*                                                                     * 00215900
*                                                                     * 00216000
*                                                                     * 00216100
*                                                                     * 00216200
*                                                                     * 00216300
*                                                                     * 00216400
*                                                                     * 00216500
*                                                                     * 00216600
*                                                                     * 00216700
*              BUFFER=xbuffer                                         * 00216800
*                  belongs to a set of mutually exclusive keys. It is * 00216900
*                  an input.  It is the name (RS-type), or address in * 00217000
*                  register (2)-(12), of a virtual storage area to    * 00217100
*                  receive output data from the request.  The BUFFER  * 00217200
*                  keyword supports 4 byte addresses only.  The       * 00217300
*                  BUFFER keyword is mutually exclusive with the      * 00217400
*                  BUFADDRSIZE keyword.  The buffers may not reside   * 00217500
*                  in large pages.                                    * 00217600
*                                                                     * 00217700
*                  For DEQ_EVENTQ requests, the buffer must be 4096   * 00217800
*                  bytes on a 4096-byte boundary.                     * 00217900
*                                                                     * 00218000
*                  Upon successful completion of a DEQ_EVENTQ         * 00218100
*                  request, the BUFFER area contains, starting at     * 00218200
*                  offset zero, an array of event monitor controls    * 00218300
*                  that were dequeued from the event queue.  The      * 00218400
*                  length and contents of each array element is       * 00218500
*                  defined by mapping macro IXLYEMC.                  * 00218600
*                                                                     * 00218700
*                  BUFFER is mutually exclusive with BUFLIST.         * 00218800
*                                                                     * 00218900
*                                                                     * 00219000
*                  ÝPAGEABLE=»YES!NOº¨                                * 00219100
*                      is an optional keyword input that specifies    * 00219200
*                      whether or not the storage area specified by   * 00219300
*                      BUFFER resides in pageable storage.            * 00219400
*                                                                     * 00219500
*                      DEFAULT: YES                                   * 00219600
*                                                                     * 00219700
*                                                                     * 00219800
*                      ÝPAGEABLE=YES                                  * 00219900
*                          Indicates that the BUFFER area resides in  * 00220000
*                          pageable virtual storage.                  * 00220100
*                                                                     * 00220200
*                          This includes disabled reference storage,  * 00220300
*                          and may include storage that has the       * 00220400
*                          potential to become pageable (such as      * 00220500
*                          address space storage for which a PGSER    * 00220600
*                          FIX has been successfully processed).  It  * 00220700
*                          does not include implicitly non-pageable   * 00220800
*                          storage (such as is obtained from          * 00220900
*                          non-pageable subpools).                    * 00221000
*                                                                     * 00221100
*                                                                     * 00221200
*                                                                     * 00221300
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00221400
*                              is the name (RS-type), or address in   * 00221500
*                              register (2)-(12), of an optional 8    * 00221600
*                              bit input containing the storage key   * 00221700
*                              to be used when referencing the        * 00221800
*                              storage area specified by BUFFER.      * 00221900
*                                                                     * 00222000
*                              The high order nibble contains the     * 00222100
*                              storage key, the low order nibble is   * 00222200
*                              ignored.  For example, set 'kkkk' in   * 00222300
*                              the binary bit string 'kkkkxxxx'B to   * 00222400
*                              correspond to the desired storage key. * 00222500
*                                                                     * 00222600
*                              If BUFSTGKEY is not specified, then    * 00222700
*                              all references to the BUFFER buffer    * 00222800
*                              storage are performed using the        * 00222900
*                              caller's PSW key.                      * 00223000
*                                                                     * 00223100
*                              DEFAULT: CALLERS_KEY                   * 00223200
*                                                                     * 00223300
*                                                                     * 00223400
*                                                                     * 00223500
*                      ÝPAGEABLE=NO¨                                  * 00223600
*                          Indicates that the BUFFER area resides in  * 00223700
*                          non-pageable virtual storage.              * 00223800
*                                                                     * 00223900
*                          This includes implicitly non-pageable      * 00224000
*                          storage areas.  If the virtual storage may * 00224100
*                          potentially become pageable, then the      * 00224200
*                          invoker is responsible for ensuring the    * 00224300
*                          virtual storage remains non-pageable for   * 00224400
*                          the duration of the request.               * 00224500
*                                                                     * 00224600
*                          If MODE=ASYNCTOKEN is specified or         * 00224700
*                          MODE=SYNCTOKEN is specified and the        * 00224800
*                          request does not complete synchronously,   * 00224900
*                          then the storage must remain non-pageable  * 00225000
*                          until completion of the corresponding      * 00225100
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00225200
*                          specified or MODE=SYNCEXIT is specified    * 00225300
*                          and the request does not complete          * 00225400
*                          synchronously, then the storage must       * 00225500
*                          remain non-pageable until the completion   * 00225600
*                          exit is driven for the request.  If        * 00225700
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00225800
*                          is specified and the request does not      * 00225900
*                          complete synchronously, then the storage   * 00226000
*                          must remain non-pageable until the         * 00226100
*                          specified ECB is posted for the request.   * 00226200
*                                                                     * 00226300
*                                                                     * 00226400
*                                                                     * 00226500
*                                                                     * 00226600
*                                                                     * 00226700
*                                                                     * 00226800
*                                                                     * 00226900
*              End of a set of mutually exclusive required keys.      * 00227000
*                                                                     * 00227100
*                                                                     * 00227200
*          REQUEST=MONITOR_EVENTQ                                     * 00227300
*              Monitor an event queue.  Requests that list            * 00227400
*              notification vector monitoring of an event queue for   * 00227500
*              the requesting user be started or stopped.             * 00227600
*                                                                     * 00227700
*              This request type is valid only when the structure is  * 00227800
*              allocated in a CFLEVEL=3 or higher coupling facility.  * 00227900
*              The user must have a local vector associated with his  * 00228000
*              connection to the structure, and the structure must    * 00228100
*              support keyed list entries.  If the structure is       * 00228200
*              allocated in a CFLEVEL=9 or higher coupling facility   * 00228300
*              and is allocated with secondary keys, there are two    * 00228400
*              event queues that can be monitored.  The KEYTYPE       * 00228500
*              keyword designates which event queue is the subject of * 00228600
*              the MONITOR_EVENTQ request.                            * 00228700
*                                                                     * 00228800
*              While event queue monitoring is in effect for an event * 00228900
*              queue, the IXLVECTR service may be used to determine   * 00229000
*              whether the event queue contains any event monitor     * 00229100
*              controls (EMCs).  These EMCs represent not-empty       * 00229200
*              sublists in which the user has registered sublist      * 00229300
*              monitoring interest.  Refer to the IXLVECTR service    * 00229400
*              for more details.  The user should use event queue     * 00229500
*              monitoring in conjunction with sublist monitoring      * 00229600
*              (MONITOR_SUBLIST and/or MONITOR_SUBLISTS) to process   * 00229700
*              state transitions for monitored sublists.  Queued EMCs * 00229800
*              may be dequeued from an event queue, and their         * 00229900
*              contents read, using the DEQ_EVENTQ request.           * 00230000
*                                                                     * 00230100
*              If a list notification vector index is in use for      * 00230200
*              monitoring, a request to stop monitoring should be     * 00230300
*              performed before using the same vector index to start  * 00230400
*              another monitor.  If event queue monitoring is in      * 00230500
*              effect, a request to start monitoring the same event   * 00230600
*              queue with a different VECTORINDEX or DRIVEEXIT        * 00230700
*              specification will cause the old specifications to be  * 00230800
*              immediately replaced by the new specifications.  It is * 00230900
*              not necessary to stop event queue monitoring before    * 00231000
*              requesting to start monitoring the same event queue    * 00231100
*              using the new specifications.  The state of the        * 00231200
*              replaced vector index is not defined.  However,  since * 00231300
*              the replaced vector index is no longer being used to   * 00231400
*              monitor an event queue,  it may be reassigned for      * 00231500
*              other uses (e.g. to monitor a list).                   * 00231600
*                                                                     * 00231700
*              When event queue monitoring is stopped, the state of   * 00231800
*              the vector index which was previously being used to    * 00231900
*              monitor the event queue is not defined.  However,      * 00232000
*              since the vector index is no longer being used to      * 00232100
*              monitor the event queue,  it may be reassigned for     * 00232200
*              other uses (e.g. to monitor a list).                   * 00232300
*                                                                     * 00232400
*                                                                     * 00232500
*              ÝKEYTYPE=»ENTRY!SECONDARYº¨                            * 00232600
*                  is an optional keyword input that specifies        * 00232700
*                  whether to monitor the event queue for state       * 00232800
*                  transitions of sublists identified by list entry   * 00232900
*                  key or to monitor the event queue for state        * 00233000
*                  transitions of sublists identified by secondary    * 00233100
*                  key.                                               * 00233200
*                  DEFAULT: ENTRY                                     * 00233300
*                                                                     * 00233400
*                                                                     * 00233500
*                  KEYTYPE=ENTRY                                      * 00233600
*                      specifies that the event queue for state       * 00233700
*                      transitions of sublists identified by list     * 00233800
*                      entry key is to be monitored.                  * 00233900
*                                                                     * 00234000
*                      KEYTYPE=ENTRY is valid only when the structure * 00234100
*                      is allocated with keys in a CFLEVEL=3 or       * 00234200
*                      higher coupling facility.                      * 00234300
*                                                                     * 00234400
*                  KEYTYPE=SECONDARY                                  * 00234500
*                      specifies that the event queue for state       * 00234600
*                      transitions of sublists identified by          * 00234700
*                      secondary key is to be monitored.              * 00234800
*                                                                     * 00234900
*                      KEYTYPE=SECONDARY is valid only when the       * 00235000
*                      structure is allocated with secondary keys in  * 00235100
*                      a CFLEVEL=9 or higher coupling facility.       * 00235200
*                                                                     * 00235300
*                                                                     * 00235400
*                                                                     * 00235500
*                                                                     * 00235600
*                                                                     * 00235700
*                                                                     * 00235800
*              ACTION=»START!STOPº                                    * 00235900
*                  is a required keyword input that specifies whether * 00236000
*                  event queue monitoring is to be started or         * 00236100
*                  stopped.                                           * 00236200
*                                                                     * 00236300
*                                                                     * 00236400
*                                                                     * 00236500
*                  ACTION=START                                       * 00236600
*                      Requests that event queue monitoring for the   * 00236700
*                      connection specified by CONTOKEN be started    * 00236800
*                      for the specified event queue.                 * 00236900
*                                                                     * 00237000
*                                                                     * 00237100
*                      VECTORINDEX=xvectorindex                       * 00237200
*                          is the name (RS-type), or address in       * 00237300
*                          register (2)-(12), of a required fullword  * 00237400
*                          input field which contains the vector      * 00237500
*                          index to be associated with the monitored  * 00237600
*                          event queue.  If the request completes     * 00237700
*                          successfully, this local vector index in   * 00237800
*                          the vector for the connection specified by * 00237900
*                          CONTOKEN will subsequently reflect the     * 00238000
*                          empty/not-empty state of the user's event  * 00238100
*                          queue.                                     * 00238200
*                                                                     * 00238300
*                                                                     * 00238400
*                                                                     * 00238500
*                                                                     * 00238600
*                      ÝDRIVEEXIT=»YES!NOº¨                           * 00238700
*                          is an optional keyword input that          * 00238800
*                          specifies whether XES should drive the     * 00238900
*                          connection's list transition exit when the * 00239000
*                          state of the specified user's event queue  * 00239100
*                          changes from empty to not-empty.           * 00239200
*                                                                     * 00239300
*                          DEFAULT: YES                               * 00239400
*                                                                     * 00239500
*                                                                     * 00239600
*                          DRIVEEXIT=YES                              * 00239700
*                              When the state of the user's event     * 00239800
*                              queue changes from empty to not-empty  * 00239900
*                              XES will drive the connection's list   * 00240000
*                              transition exit.                       * 00240100
*                                                                     * 00240200
*                                                                     * 00240300
*                          DRIVEEXIT=NO                               * 00240400
*                              When the state of the user's event     * 00240500
*                              queue changes from empty to not-empty  * 00240600
*                              XES will not drive the connection's    * 00240700
*                              list transition exit.                  * 00240800
*                                                                     * 00240900
*                                                                     * 00241000
*                                                                     * 00241100
*                                                                     * 00241200
*                                                                     * 00241300
*                  ACTION=STOP                                        * 00241400
*                      Requests that monitoring of the event queue    * 00241500
*                      for the connection specified by CONTOKEN be    * 00241600
*                      stopped.                                       * 00241700
*                                                                     * 00241800
*                                                                     * 00241900
*                                                                     * 00242000
*                                                                     * 00242100
*                                                                     * 00242200
*          REQUEST=MONITOR_LIST                                       * 00242300
*              Monitor a list.  Requests that list monitoring of the  * 00242400
*              list specified by LISTNUM be started or stopped.       * 00242500
*                                                                     * 00242600
*              While list monitoring is in effect for a list, the     * 00242700
*              IXLVECTR service may be used to determine whether the  * 00242800
*              list is considered empty or not-empty according to the * 00242900
*              thresholds established with a WRITE_LCONTROLS request  * 00243000
*              or considered full or not-full according to the list   * 00243100
*              limits established with a WRITE_LCONTROLS request.     * 00243200
*                                                                     * 00243300
*              The IXLVECTR service may also be used to alter the     * 00243400
*              size of the list notification vector, and thus change  * 00243500
*              the number of lists, key-ranges, or event queues which * 00243600
*              can be monitored concurrently.  Refer to the IXLVECTR  * 00243700
*              service for more details.                              * 00243800
*                                                                     * 00243900
*              If a list notification vector index is in use for      * 00244000
*              monitoring, a request to stop monitoring should be     * 00244100
*              performed before using the same vector index to start  * 00244200
*              another monitor.  If a vector index is in use for      * 00244300
*              monitoring a list, a request to start list monitoring  * 00244400
*              for the same list with a different vector index will   * 00244500
*              cause the vector index in use for the list to be       * 00244600
*              replaced by the new vector index.  In this case it is  * 00244700
*              not necessary to stop monitoring using the old index   * 00244800
*              before requesting to start monitoring using the new    * 00244900
*              index.                                                 * 00245000
*                                                                     * 00245100
*              A user can dynamically change the type of list         * 00245200
*              monitoring being performed (i.e., empty/not-empty or   * 00245300
*              full/not-full) without stopping monitoring.  A request * 00245400
*              to start list monitoring for the same list for the     * 00245500
*              opposite list-notification monitor type will replace   * 00245600
*              the monitoring type and upon successful completion     * 00245700
*              subsequently reflect the state of the monitored list   * 00245800
*              in the list notification vector index specified by the * 00245900
*              VECTORINDEX keyword.                                   * 00246000
*                                                                     * 00246100
*              REQUEST=WRITE_LCONTROLS may be used to set the         * 00246200
*              empty/not-empty threshold counts that are used to      * 00246300
*              define the empty/not-empty state of a list for list    * 00246400
*              monitoring.                                            * 00246500
*                                                                     * 00246600
*              REQUEST=WRITE_LCONTROLS may be used to set the list    * 00246700
*              limits bounding the number of entries or elements that * 00246800
*              may reside on the list that are used to define the     * 00246900
*              full/not-full state of a list for list monitoring.     * 00247000
*                                                                     * 00247100
*              REQUEST=MONITOR_LIST with ACTION=START is mutually     * 00247200
*              exclusive with MODE=ASYNCNORESPONSE.                   * 00247300
*                                                                     * 00247400
*                                                                     * 00247500
*              LISTNUM=xlistnum                                       * 00247600
*                  is the name (RS-type), or address in register      * 00247700
*                  (2)-(12), of a required fullword input specifying  * 00247800
*                  the number of the list to be monitored.            * 00247900
*                                                                     * 00248000
*                                                                     * 00248100
*                                                                     * 00248200
*                                                                     * 00248300
*              ACTION=»START!STOPº                                    * 00248400
*                  is a required keyword input that specifies whether * 00248500
*                  list monitoring is to be started or stopped.       * 00248600
*                                                                     * 00248700
*                                                                     * 00248800
*                                                                     * 00248900
*                  ACTION=START                                       * 00249000
*                      Requests that monitoring for the connection    * 00249100
*                      specified by CONTOKEN be started.              * 00249200
*                                                                     * 00249300
*                                                                     * 00249400
*                      VECTORINDEX=xvectorindex                       * 00249500
*                          is the name (RS-type), or address in       * 00249600
*                          register (2)-(12), of a required fullword  * 00249700
*                          input field which contains the list        * 00249800
*                          notification vector index that is to       * 00249900
*                          reflect the empty/not-empty or             * 00250000
*                          full/not-full state of the monitored list  * 00250100
*                          as specified by the MONITORTYPE keyword.   * 00250200
*                          If the request completes successfully,     * 00250300
*                          this local notification vector index in    * 00250400
*                          the vector for the connection specified by * 00250500
*                          CONTOKEN will subsequently reflect the     * 00250600
*                          state of the monitored list in accordance  * 00250700
*                          with the specified monitor type.           * 00250800
*                                                                     * 00250900
*                                                                     * 00251000
*                                                                     * 00251100
*                                                                     * 00251200
*                      ÝMONITORTYPE=»NOTEMPTY!NOTFULLº¨               * 00251300
*                          is an optional keyword input that          * 00251400
*                          specifies the type of monitoring           * 00251500
*                          requested.  A user may monitor for either  * 00251600
*                          empty/not-empty transitions or for         * 00251700
*                          full/not-full transitions, but not both    * 00251800
*                          for the same list.                         * 00251900
*                                                                     * 00252000
*                          A user can dynamically change the type of  * 00252100
*                          list monitoring being performed for a list * 00252200
*                          (without stopping monitoring) by           * 00252300
*                          re-registering with the opposite           * 00252400
*                          list-notification monitor type.            * 00252500
*                                                                     * 00252600
*                          Macro IXCYQUAA defines the                 * 00252700
*                          QuReqRfNotFullMonitoring bit in the        * 00252800
*                          QuReqFeatures string that can be used to   * 00252900
*                          test if list not-full monitoring support   * 00253000
*                          and the IXLLSTC MONITORTYPE keyword is     * 00253100
*                          supported on the system. Use IXCQUERY      * 00253200
*                          REQINFO=FEATURES to get the QuReqFeatures  * 00253300
*                          string.                                    * 00253400
*                          DEFAULT: NOTEMPTY                          * 00253500
*                                                                     * 00253600
*                                                                     * 00253700
*                          ÝMONITORTYPE=NOTEMPTY                      * 00253800
*                              requests that the list specified by    * 00253900
*                              LISTNUM be monitored for               * 00254000
*                              empty/not-empty transitions.           * 00254100
*                                                                     * 00254200
*                              While list monitoring is in effect for * 00254300
*                              the list, the IXLVECTR service may be  * 00254400
*                              used to determine whether the list is  * 00254500
*                              considered empty or not-empty          * 00254600
*                              according to the thresholds            * 00254700
*                              established with a WRITE_LCONTROLS     * 00254800
*                              request.                               * 00254900
*                                                                     * 00255000
*                                                                     * 00255100
*                              ÝNOTIFICATION=»FIRST!EVERYº¨¨          * 00255200
*                                  is an optional keyword input that  * 00255300
*                                  specifies the conditions under     * 00255400
*                                  which the coupling facility        * 00255500
*                                  updates the list notification      * 00255600
*                                  vector for empty/not-empty list    * 00255700
*                                  state transitions for the list     * 00255800
*                                  identified by LISTNUM              * 00255900
*                                  DEFAULT: FIRST                     * 00256000
*                                                                     * 00256100
*                                                                     * 00256200
*                                  NOTIFICATION=FIRST                 * 00256300
*                                      indicates that the list        * 00256400
*                                      notification vector index      * 00256500
*                                      associated with the monitored  * 00256600
*                                      list is updated whenever the   * 00256700
*                                      list state transitions from    * 00256800
*                                      the not-empty state to empty   * 00256900
*                                      state and when the list state  * 00257000
*                                      transitions from the empty     * 00257100
*                                      state to not-empty state.      * 00257200
*                                                                     * 00257300
*                                  NOTIFICATION=EVERY                 * 00257400
*                                      indicates that the list        * 00257500
*                                      notification vector index      * 00257600
*                                      associated with the monitored  * 00257700
*                                      list is updated whenever the   * 00257800
*                                      list state transitions from    * 00257900
*                                      the not-empty state to empty   * 00258000
*                                      state and every time a list    * 00258100
*                                      entry is added to the list and * 00258200
*                                      the list not-empty threshold   * 00258300
*                                      count is exceeded.             * 00258400
*                                                                     * 00258500
*                                      NOTIFICATION=EVERY is valid    * 00258600
*                                      only when the structure is     * 00258700
*                                      allocated in a CFLEVEL=22 or   * 00258800
*                                      higher coupling facility.      * 00258900
*                                                                     * 00259000
*                                      If NOTIFICATION=EVERY is       * 00259100
*                                      specified and the operational  * 00259200
*                                      level of the coupling facility * 00259300
*                                      in which the structure is      * 00259400
*                                      allocated (see                 * 00259500
*                                      ConaCFacilityCFLevel in the    * 00259600
*                                      IXLCONN Connect Answer Area)   * 00259700
*                                      is less than CFLEVEL=22, the   * 00259800
*                                      MONITOR_LIST request fails     * 00259900
*                                      with return code               * 00260000
*                                      IxlRetCodeEnvError, reason     * 00260100
*                                      code IxlRsnCodeBadReqCflevel.  * 00260200
*                                                                     * 00260300
*                                      Macro IXCYQUAA defines the     * 00260400
*                                      QuReqRfAggressiveNotify bit in * 00260500
*                                      the QuReqFeatures string that  * 00260600
*                                      can be used to test if         * 00260700
*                                      aggressive list monitoring     * 00260800
*                                      (the IXLLSTC                   * 00260900
*                                      NOTIFICATION=EVERY keyword for * 00261000
*                                      REQUEST=MONITOR_LIST) is       * 00261100
*                                      supported on the system. Use   * 00261200
*                                      IXCQUERY REQINFO=FEATURES to   * 00261300
*                                      get the QuReqFeatures string.  * 00261400
*                                                                     * 00261500
*                                                                     * 00261600
*                                                                     * 00261700
*                                                                     * 00261800
*                                                                     * 00261900
*                          ÝMONITORTYPE=NOTFULL¨                      * 00262000
*                              requests that the list specified by    * 00262100
*                              LISTNUM be monitored for full/not-full * 00262200
*                              transitions.                           * 00262300
*                                                                     * 00262400
*                              While list monitoring is in effect for * 00262500
*                              the list, the IXLVECTR service can be  * 00262600
*                              used to determine whether the list is  * 00262700
*                              considered full or not-full according  * 00262800
*                              to the list limits established with a  * 00262900
*                              WRITE_LCONTROLS request.               * 00263000
*                                                                     * 00263100
*                              Monitoring for full/not-full           * 00263200
*                              transitions is valid only when the     * 00263300
*                              structure is allocated in a CFLEVEL=22 * 00263400
*                              or higher coupling facility.           * 00263500
*                                                                     * 00263600
*                              If MONITORTYPE=NOTFULL is specified    * 00263700
*                              and the operational level of the       * 00263800
*                              coupling facility in which the         * 00263900
*                              structure is allocated (see            * 00264000
*                              ConaCFacilityCFLevel in the IXLCONN    * 00264100
*                              Connect Answer Area) is less than      * 00264200
*                              CFLEVEL=22, the MONITOR_LIST request   * 00264300
*                              fails with return code                 * 00264400
*                              IxlRetCodeEnvError, reason code        * 00264500
*                              IxlRsnCodeBadReqCflevel.               * 00264600
*                                                                     * 00264700
*                                                                     * 00264800
*                                                                     * 00264900
*                                                                     * 00265000
*                                                                     * 00265100
*                                                                     * 00265200
*                      ÝDRIVEEXIT=»YES!NOº¨                           * 00265300
*                          is an optional keyword input that          * 00265400
*                          specifies whether XES should drive the     * 00265500
*                          connection's list transition exit when the * 00265600
*                          state of a list changes from empty to      * 00265700
*                          not-empty or from full to not-full.        * 00265800
*                                                                     * 00265900
*                          MONITORTYPE determines the type of list    * 00266000
*                          transition that will cause XES to initiate * 00266100
*                          processing to drive the connection's list  * 00266200
*                          transition exit.                           * 00266300
*                          DEFAULT: YES                               * 00266400
*                                                                     * 00266500
*                                                                     * 00266600
*                          DRIVEEXIT=YES                              * 00266700
*                              When the state of a list changes from  * 00266800
*                              empty to not-empty or from full to     * 00266900
*                              not-full, XES will drive the           * 00267000
*                              connection's list transition exit.     * 00267100
*                                                                     * 00267200
*                              When NOTIFICATION=EVERY is specified,  * 00267300
*                              XES processing will be initiated to    * 00267400
*                              drive the connection's list transition * 00267500
*                              exit whenever a list entry is added to * 00267600
*                              the monitored list and the list        * 00267700
*                              not-empty threshold count for the list * 00267800
*                              is exceeded instead of only when the   * 00267900
*                              list state transitions from empty to   * 00268000
*                              not-empty.                             * 00268100
*                                                                     * 00268200
*                              The combination of NOTIFICATION=EVERY  * 00268300
*                              and DRIVEEXIT=YES gives the            * 00268400
*                              connection's list transition exit the  * 00268500
*                              opportunity to receive control more    * 00268600
*                              frequently and whenever new entries    * 00268700
*                              are added to a monitored list and the  * 00268800
*                              list not-empty threshold count is      * 00268900
*                              exceeded.                              * 00269000
*                                                                     * 00269100
*                              XES does not guarantee that a          * 00269200
*                              connection's list transition exit will * 00269300
*                              be driven on a "one-for-one" basis for * 00269400
*                              each and every list entry addition to  * 00269500
*                              a monitored list above the list        * 00269600
*                              not-empty threshold.  It is important  * 00269700
*                              for the list transition exit to        * 00269800
*                              determine the state of the lists,      * 00269900
*                              sublists, event queues and key ranges  * 00270000
*                              it is monitoring regardless of the     * 00270100
*                              frequency that the exit is driven.     * 00270200
*                                                                     * 00270300
*                              The frequency in which the             * 00270400
*                              connection's list transition exit is   * 00270500
*                              driven when NOTIFICATION=EVERY is      * 00270600
*                              specified and its impact on the system * 00270700
*                              is largely determined by system        * 00270800
*                              workload, work and address space       * 00270900
*                              dispatching priorities and other       * 00271000
*                              variables within the system.           * 00271100
*                                                                     * 00271200
*                          DRIVEEXIT=NO                               * 00271300
*                              When the state of the list changes,    * 00271400
*                              XES will not drive the connection's    * 00271500
*                              list transition exit.                  * 00271600
*                                                                     * 00271700
*                              DRIVEEXIT=NO is mutually exclusive     * 00271800
*                              with NOTIFICATION=EVERY                * 00271900
*                                                                     * 00272000
*                                                                     * 00272100
*                                                                     * 00272200
*                                                                     * 00272300
*                                                                     * 00272400
*                  ACTION=STOP                                        * 00272500
*                      Requests that list monitoring monitoring for   * 00272600
*                      the connection specified by CONTOKEN be        * 00272700
*                      stopped for the list specified by LISTNUM.     * 00272800
*                                                                     * 00272900
*                                                                     * 00273000
*                                                                     * 00273100
*                                                                     * 00273200
*                                                                     * 00273300
*          REQUEST=MONITOR_KEYRANGE                                   * 00273400
*              Requests that key-range monitoring of the list         * 00273500
*              specified by LISTNUM be started or stopped.            * 00273600
*              REQUEST=MONITOR_KEYRANGE is valid only for keyed list  * 00273700
*              structures allocated in CFLEVEL=9 or higher coupling   * 00273800
*              facility.                                              * 00273900
*                                                                     * 00274000
*              While key-range monitoring is in effect for a list,    * 00274100
*              the IXLVECTR service may be used to determine whether  * 00274200
*              the key-range is considered empty or not-empty         * 00274300
*              according to the thresholds established with a         * 00274400
*              WRITE_LCONTROLS request that specifies                 * 00274500
*              KEYRANGESTATE=DEFINE.                                  * 00274600
*                                                                     * 00274700
*              The IXLVECTR service may also be used to alter the     * 00274800
*              size of the list notification vector, and thus change  * 00274900
*              the number of lists, key-ranges, or event queues which * 00275000
*              can be monitored concurrently.  Refer to the IXLVECTR  * 00275100
*              service for more details.                              * 00275200
*                                                                     * 00275300
*              If a list notification vector index is in use for      * 00275400
*              monitoring, a request to stop monitoring should be     * 00275500
*              performed before using the same vector index to start  * 00275600
*              another monitor.  If a vector index is in use for      * 00275700
*              monitoring a key-range, a request to start key-range   * 00275800
*              monitoring of the same list with a different vector    * 00275900
*              index will cause the vector index in use for the       * 00276000
*              key-range to be replaced by the new vector index.  In  * 00276100
*              this case it is not necessary to stop monitoring using * 00276200
*              the old index before requesting to start monitoring    * 00276300
*              using the new index.                                   * 00276400
*                                                                     * 00276500
*              Only one key-range may be monitored per list.          * 00276600
*              REQUEST=WRITE_LCONTROLS may be used to set the         * 00276700
*              starting and ending key-range values, and the          * 00276800
*              empty/not-empty threshold counts that define the       * 00276900
*              empty/not-empty state of a key-range for key-range     * 00277000
*              monitoring.                                            * 00277100
*                                                                     * 00277200
*              REQUEST=MONITOR_KEYRANGE with ACTION=START is mutually * 00277300
*              exclusive with MODE=ASYNCNORESPONSE.                   * 00277400
*                                                                     * 00277500
*              A request to start monitoring a key-range for a list   * 00277600
*              may complete prematurely due to a key-range            * 00277700
*              initialization model-dependent timeout (see            * 00277800
*              WRITE_LCONTROLS request with KEYRANGE=SET).  The       * 00277900
*              caller is expected to reissue the request until it     * 00278000
*              completes without timing out.                          * 00278100
*                                                                     * 00278200
*                                                                     * 00278300
*              LISTNUM=xlistnum                                       * 00278400
*                  is the name (RS-type), or address in register      * 00278500
*                  (2)-(12), of a required fullword input specifying  * 00278600
*                  the number of the list whose key-range is to be    * 00278700
*                  monitored.                                         * 00278800
*                                                                     * 00278900
*                                                                     * 00279000
*                                                                     * 00279100
*                                                                     * 00279200
*              ACTION=»START!STOPº                                    * 00279300
*                  is a required keyword input that specifies whether * 00279400
*                  key-range monitoring of the list is to be started  * 00279500
*                  or stopped.                                        * 00279600
*                                                                     * 00279700
*                                                                     * 00279800
*                                                                     * 00279900
*                  ACTION=START                                       * 00280000
*                      Requests that key-range monitoring for the     * 00280100
*                      connection specified by CONTOKEN be started    * 00280200
*                      for the list specified by LISTNUM.             * 00280300
*                                                                     * 00280400
*                                                                     * 00280500
*                      VECTORINDEX=xvectorindex                       * 00280600
*                          is the name (RS-type), or address in       * 00280700
*                          register (2)-(12), of a required fullword  * 00280800
*                          input field which contains the list        * 00280900
*                          notification vector index that is to       * 00281000
*                          reflect the empty/not-empty state of the   * 00281100
*                          monitored key-range.  If the request       * 00281200
*                          completes successfully, this local         * 00281300
*                          notification vector index in the vector    * 00281400
*                          for the connection specified by CONTOKEN   * 00281500
*                          will subsequently reflect the              * 00281600
*                          empty/not-empty state of the monitored     * 00281700
*                          key-range.                                 * 00281800
*                                                                     * 00281900
*                                                                     * 00282000
*                                                                     * 00282100
*                                                                     * 00282200
*                      ÝNOTIFICATION=»FIRST!EVERYº¨                   * 00282300
*                          is an optional keyword input that          * 00282400
*                          specifies the conditions under which the   * 00282500
*                          coupling facility updates the list         * 00282600
*                          notification vector for key-range          * 00282700
*                          monitoring for the list identified by      * 00282800
*                          LISTNUM                                    * 00282900
*                          DEFAULT: FIRST                             * 00283000
*                                                                     * 00283100
*                                                                     * 00283200
*                          NOTIFICATION=FIRST                         * 00283300
*                              indicates that the list notification   * 00283400
*                              vector index associated with the       * 00283500
*                              monitored key-range of a list          * 00283600
*                              identified by LISTNUM is updated       * 00283700
*                              whenever the key-range state           * 00283800
*                              transitions from the not-empty state   * 00283900
*                              to empty state and when the key-range  * 00284000
*                              state transitions from the empty state * 00284100
*                              to not-empty state.                    * 00284200
*                                                                     * 00284300
*                          NOTIFICATION=EVERY                         * 00284400
*                              indicates that the list notification   * 00284500
*                              vector index associated with the       * 00284600
*                              monitored key-range of a list          * 00284700
*                              identified by LISTNUM is updated       * 00284800
*                              whenever the key-range state           * 00284900
*                              transitions from the not-empty state   * 00285000
*                              to empty state and every time a list   * 00285100
*                              entry is added to the key-range and    * 00285200
*                              the key-range not-empty threshold      * 00285300
*                              count is exceeded.                     * 00285400
*                                                                     * 00285500
*                              NOTIFICATION=EVERY is valid only when  * 00285600
*                              the structure is allocated in a        * 00285700
*                              CFLEVEL=22 or higher coupling          * 00285800
*                              facility.                              * 00285900
*                                                                     * 00286000
*                              If NOTIFICATION=EVERY is specified and * 00286100
*                              the operational level of the coupling  * 00286200
*                              facility in which the structure is     * 00286300
*                              allocated (see ConaCFacilityCFLevel in * 00286400
*                              the IXLCONN Connect Answer Area) is    * 00286500
*                              less than CFLEVEL=22, the              * 00286600
*                              MONITOR_KEYRANGE request fails with    * 00286700
*                              return code IxlRetCodeEnvError, reason * 00286800
*                              code IxlRsnCodeBadReqCflevel.          * 00286900
*                                                                     * 00287000
*                              Macro IXCYQUAA defines the             * 00287100
*                              QuReqRfAggressiveNotify bit in the     * 00287200
*                              QuReqFeatures string that can be used  * 00287300
*                              to test if aggressive key-range        * 00287400
*                              monitoring (the IXLLSTC                * 00287500
*                              NOTIFICATION=EVERY keyword for         * 00287600
*                              REQUEST=MONITOR_KEYRANGE) is supported * 00287700
*                              on the system. Use IXCQUERY            * 00287800
*                              REQINFO=FEATURES to get the            * 00287900
*                              QuReqFeatures string.                  * 00288000
*                                                                     * 00288100
*                                                                     * 00288200
*                                                                     * 00288300
*                                                                     * 00288400
*                                                                     * 00288500
*                                                                     * 00288600
*                      ÝDRIVEEXIT=»YES!NOº¨                           * 00288700
*                          is an optional keyword input that          * 00288800
*                          specifies whether XES should drive the     * 00288900
*                          connection's list transition exit when the * 00289000
*                          state of the key-range changes from empty  * 00289100
*                          to not-empty.                              * 00289200
*                                                                     * 00289300
*                          DEFAULT: YES                               * 00289400
*                                                                     * 00289500
*                                                                     * 00289600
*                          DRIVEEXIT=YES                              * 00289700
*                              When the state of a key-range changes  * 00289800
*                              from empty to not-empty XES will drive * 00289900
*                              the connection's list transition exit. * 00290000
*                                                                     * 00290100
*                              When NOTIFICATION=EVERY is specified,  * 00290200
*                              XES processing will be initiated to    * 00290300
*                              drive the connection's list transition * 00290400
*                              exit whenever a list entry is added to * 00290500
*                              the monitored key-range and the        * 00290600
*                              key-range not-empty threshold count    * 00290700
*                              for the key-range is exceeded instead  * 00290800
*                              of only when the key-range state       * 00290900
*                              transitions from empty to not-empty.   * 00291000
*                                                                     * 00291100
*                              The combination of NOTIFICATION=EVERY  * 00291200
*                              and DRIVEEXIT=YES gives the            * 00291300
*                              connection's list transition exit the  * 00291400
*                              opportunity to receive control more    * 00291500
*                              frequently and whenever new entries    * 00291600
*                              are added to a monitored key-range and * 00291700
*                              the key-range list not-empty threshold * 00291800
*                              count is exceeded.                     * 00291900
*                                                                     * 00292000
*                              XES does not guarantee that a          * 00292100
*                              connection's list transition exit will * 00292200
*                              be driven on a "one-for-one" basis for * 00292300
*                              each and every list entry addition to  * 00292400
*                              a monitored key-range above the        * 00292500
*                              key-range not-empty threshold.  It is  * 00292600
*                              important for the list transition exit * 00292700
*                              to determine the state of the lists,   * 00292800
*                              sublists, event queues and key ranges  * 00292900
*                              it is monitoring regardless of the     * 00293000
*                              frequency that the exit is driven.     * 00293100
*                                                                     * 00293200
*                              The frequency in which the             * 00293300
*                              connection's list transition exit is   * 00293400
*                              driven when NOTIFICATION=EVERY is      * 00293500
*                              specified and its impact on the system * 00293600
*                              is largely determined by system        * 00293700
*                              workload, work and address space       * 00293800
*                              dispatching priorities and other       * 00293900
*                              variables within the system.           * 00294000
*                                                                     * 00294100
*                          DRIVEEXIT=NO                               * 00294200
*                              When the state of the key-range        * 00294300
*                              changes, XES will not drive the        * 00294400
*                              connection's list transition exit.     * 00294500
*                                                                     * 00294600
*                              DRIVEEXIT=NO is mutually exclusive     * 00294700
*                              with NOTIFICATION=EVERY                * 00294800
*                                                                     * 00294900
*                                                                     * 00295000
*                                                                     * 00295100
*                                                                     * 00295200
*                                                                     * 00295300
*                  ACTION=STOP                                        * 00295400
*                      Requests that key-range monitoring for the     * 00295500
*                      connection specified by CONTOKEN be stopped    * 00295600
*                      for the list specified by LISTNUM.             * 00295700
*                                                                     * 00295800
*                                                                     * 00295900
*                                                                     * 00296000
*                                                                     * 00296100
*                                                                     * 00296200
*          REQUEST=MONITOR_SUBLIST                                    * 00296300
*              Monitor a sublist, designated by a list number and     * 00296400
*              either an entry key or secondary key, within the list  * 00296500
*              structure.  Requests that monitoring of the designated * 00296600
*              sublist be started or stopped for the requesting user. * 00296700
*                                                                     * 00296800
*              A request to monitor a keyed sublist is valid only     * 00296900
*              when the structure is allocated in a CFLEVEL=3 or      * 00297000
*              higher coupling facility.  The user must have a local  * 00297100
*              vector associated with his connection to the           * 00297200
*              structure, and the structure must support keyed list   * 00297300
*              entries (i.e., REFOPTION=KEY must be specified on the  * 00297400
*              IXLCONN request when the structure is allocated).      * 00297500
*                                                                     * 00297600
*              A request to monitor a secondary keyed sublist is      * 00297700
*              valid only when the structure is allocated in a        * 00297800
*              CFLEVEL=9 or higher coupling facility.  The user must  * 00297900
*              have a local vector associated with his connection to  * 00298000
*              the structure, and the structure must support          * 00298100
*              secondary keys (i.e., KEYTYPE=SECONDARY must be        * 00298200
*              specified on the IXLCONN request when the structure is * 00298300
*              allocated).                                            * 00298400
*                                                                     * 00298500
*              While sublist monitoring is in effect for a sublist,   * 00298600
*              the coupling facility will queue or withdraw event     * 00298700
*              monitor controls (EMCs) to or from the registered      * 00298800
*              user's event queue to reflect the empty or not-empty   * 00298900
*              state of the sublist.  The user should use sublist     * 00299000
*              monitoring in conjunction with event queue monitoring  * 00299100
*              (MONITOR_EVENTQ) to process state transitions for      * 00299200
*              monitored sublists.  Queued EMCs may be dequeued from  * 00299300
*              an event queue, and their contents read, using the     * 00299400
*              DEQ_EVENTQ request.                                    * 00299500
*                                                                     * 00299600
*              If multiple sublists are to be monitored, it may be    * 00299700
*              more efficient to start sublist monitoring for those   * 00299800
*              multiple sublists using MONITOR_SUBLISTS.  However,    * 00299900
*              sublist monitoring may only be stopped for one sublist * 00300000
*              at a time via MONITOR_SUBLIST.                         * 00300100
*                                                                     * 00300200
*              If sublist monitoring for a sublist is in effect, a    * 00300300
*              request to start monitoring the sublist with a         * 00300400
*              different User Notification Controls (UNC)             * 00300500
*              specification will cause the old specification to be   * 00300600
*              immediately replaced by the new specification.  It is  * 00300700
*              not necessary to stop sublist monitoring before        * 00300800
*              requesting to start monitoring using the new           * 00300900
*              specification.  The replacement of the UNC occurs      * 00301000
*              regardless of whether the EMC representing the sublist * 00301100
*              monitor is currently queued to an event queue for the  * 00301200
*              user.                                                  * 00301300
*                                                                     * 00301400
*              When sublist monitoring is stopped, the EMC            * 00301500
*              representing the sublist monitor is made available for * 00301600
*              reuse.  If the EMC is currently queued to an event     * 00301700
*              queue for the user, it will be dequeued.               * 00301800
*                                                                     * 00301900
*                                                                     * 00302000
*              LISTNUM=xlistnum                                       * 00302100
*                  is the name (RS-type), or address in register      * 00302200
*                  (2)-(12), of a required fullword input partially   * 00302300
*                  designating a sublist to be processed.             * 00302400
*                                                                     * 00302500
*                  LISTNUM may be used in conjunction with ENTRYKEY   * 00302600
*                  or SECONDARYKEY to designate a sublist for which   * 00302700
*                  the user wishes to start or stop sublist           * 00302800
*                  monitoring.                                        * 00302900
*                                                                     * 00303000
*                                                                     * 00303100
*                                                                     * 00303200
*                                                                     * 00303300
*              The following is a set of mutually exclusive keys.     * 00303400
*              This set is required; only one key must be specified.  * 00303500
*                                                                     * 00303600
*                                                                     * 00303700
*              ENTRYKEY=xentrykey                                     * 00303800
*                  belongs to a set of mutually exclusive keys. It is * 00303900
*                  the name (RS-type), or address in register         * 00304000
*                  (2)-(12), of a 16 character input that specifies   * 00304100
*                  an unsigned 128-bit entry key to be used in        * 00304200
*                  conjunction with LISTNUM to designate a sublist    * 00304300
*                  whose monitoring is to be started or stopped.      * 00304400
*                                                                     * 00304500
*                  ENTRYKEY may only be specified for structures that * 00304600
*                  support keyed entries.                             * 00304700
*                                                                     * 00304800
*              SECONDARYKEY=xsecondarykey                             * 00304900
*                  belongs to a set of mutually exclusive keys. It is * 00305000
*                  the name (RS-type), or address in register         * 00305100
*                  (2)-(12), of a 32 character input that specifies   * 00305200
*                  an unsigned 256-bit secondary key to be used in    * 00305300
*                  conjunction with LISTNUM to designate a sublist    * 00305400
*                  whose monitoring is to be started or stopped.      * 00305500
*                                                                     * 00305600
*                  SECONDARYKEY may only be specified for structures  * 00305700
*                  that are allocated in a CFLEVEL=9 or higher        * 00305800
*                  coupling facility.                                 * 00305900
*                                                                     * 00306000
*                                                                     * 00306100
*                                                                     * 00306200
*              End of a set of mutually exclusive required keys.      * 00306300
*                                                                     * 00306400
*                                                                     * 00306500
*                                                                     * 00306600
*              ACTION=»START!STOPº                                    * 00306700
*                  is a required keyword input that specifies whether * 00306800
*                  sublist monitoring is to be started or stopped.    * 00306900
*                                                                     * 00307000
*                                                                     * 00307100
*                                                                     * 00307200
*                  ACTION=START                                       * 00307300
*                      Requests that sublist monitoring for the       * 00307400
*                      connection specified by CONTOKEN for the       * 00307500
*                      designated sublist be started.                 * 00307600
*                                                                     * 00307700
*                                                                     * 00307800
*                      ÝNOTIFICATION=»FIRST!EVERYº¨                   * 00307900
*                          is an optional keyword input that          * 00308000
*                          specifies the condition for which the      * 00308100
*                          coupling facility is to queue an EMC to    * 00308200
*                          the registered user's event queue.         * 00308300
*                          DEFAULT: FIRST                             * 00308400
*                                                                     * 00308500
*                                                                     * 00308600
*                          NOTIFICATION=FIRST                         * 00308700
*                              indicates that an EMC is to be queued  * 00308800
*                              to the registered user's event queue   * 00308900
*                              when the monitored sublist transitions * 00309000
*                              from empty to not-empty.               * 00309100
*                                                                     * 00309200
*                          NOTIFICATION=EVERY                         * 00309300
*                              indicates that an EMC is to be queued  * 00309400
*                              to the registered user's event queue   * 00309500
*                              whenever a list entry is queued to the * 00309600
*                              monitored sublist and an EMC for the   * 00309700
*                              monitored sublist interest is not      * 00309800
*                              already queued to the registered       * 00309900
*                              user's event queue.                    * 00310000
*                                                                     * 00310100
*                              NOTIFICATION=EVERY is valid only when  * 00310200
*                              the structure is allocated in a        * 00310300
*                              CFLEVEL=9 or higher coupling facility. * 00310400
*                                                                     * 00310500
*                                                                     * 00310600
*                                                                     * 00310700
*                                                                     * 00310800
*                                                                     * 00310900
*                                                                     * 00311000
*                      UNC=xunc                                       * 00311100
*                          is the name (RS-type), or address in       * 00311200
*                          register (2)-(12), of a required 16        * 00311300
*                          character input field which contains the   * 00311400
*                          user notification controls (UNC) which     * 00311500
*                          represent the user's monitoring interest   * 00311600
*                          in the designated sublist.  The user       * 00311700
*                          notification control information resides   * 00311800
*                          in the event monitor controls (EMC), which * 00311900
*                          is queued to an event queue when the       * 00312000
*                          monitored sublist becomes not-empty, and   * 00312100
*                          is returned along with other information   * 00312200
*                          from the EMC on a DEQ_EVENTQ  request.     * 00312300
*                                                                     * 00312400
*                                                                     * 00312500
*                                                                     * 00312600
*                  ACTION=STOP                                        * 00312700
*                      Requests that monitoring of the designated     * 00312800
*                      sublist for the connection specified by        * 00312900
*                      CONTOKEN be stopped.                           * 00313000
*                                                                     * 00313100
*                                                                     * 00313200
*                                                                     * 00313300
*                                                                     * 00313400
*                                                                     * 00313500
*          REQUEST=MONITOR_SUBLISTS                                   * 00313600
*              Monitor a set of sublists (designated by list number   * 00313700
*              and either entry key or secondary key) in the list     * 00313800
*              structure.  Requests that monitoring of the designated * 00313900
*              sublists be started for the requesting user.           * 00314000
*              MONITOR_SUBLISTS cannot be used to stop sublist        * 00314100
*              monitoring.                                            * 00314200
*                                                                     * 00314300
*              A request to monitor a sublist identified by a list    * 00314400
*              entry key is valid only when the structure is          * 00314500
*              allocated in a CFLEVEL=3 or higher coupling facility.  * 00314600
*              A request to monitor a sublist identified by a         * 00314700
*              secondary key is valid only when the structure is      * 00314800
*              allocated in a CFLEVEL=9 or higher coupling facility   * 00314900
*              and supports secondary keys.  In both cases, the user  * 00315000
*              must have a local vector associated with his           * 00315100
*              connection to the structure, and the structure must    * 00315200
*              support keyed list entries.                            * 00315300
*                                                                     * 00315400
*              While sublist monitoring is in effect for a sublist,   * 00315500
*              the coupling facility will queue or withdraw event     * 00315600
*              monitor controls (EMCs) to or from an event queue for  * 00315700
*              the registered user to reflect the empty or not-empty  * 00315800
*              state of the sublist.  The user should use sublist     * 00315900
*              monitoring in conjunction with event queue monitoring  * 00316000
*              (MONITOR_EVENTQ) to process state transitions for      * 00316100
*              monitored sublists.  Queued EMCs may be dequeued from  * 00316200
*              an event queue, and their contents read, using the     * 00316300
*              DEQ_EVENTQ request.                                    * 00316400
*                                                                     * 00316500
*              If sublist monitoring for a sublist is in effect, a    * 00316600
*              request to start monitoring the sublist with a         * 00316700
*              different UNC specification will cause the old         * 00316800
*              specification to be immediately replaced by the new    * 00316900
*              specification.  It is not necessary to stop sublist    * 00317000
*              monitoring before requesting to start monitoring using * 00317100
*              the new specification.  The replacement of the UNC     * 00317200
*              occurs regardless of whether the EMC representing the  * 00317300
*              sublist monitor is currently queued to the user's      * 00317400
*              event queue.                                           * 00317500
*                                                                     * 00317600
*              The BUFFER or BUFLIST contains an input array of       * 00317700
*              entries, each mapped by the IXLYMSRI mapping macro,    * 00317800
*              and each of which contains the information needed to   * 00317900
*              request monitoring for one sublist.  The entries are   * 00318000
*              indexed with the first entry (index 1) starting at     * 00318100
*              offset zero in the BUFFER or BUFLIST area.             * 00318200
*                                                                     * 00318300
*              The STARTINDEX and ENDINDEX keywords contain the       * 00318400
*              starting and ending index numbers of the input         * 00318500
*              IXLYMSRI entries which are requested to be processed.  * 00318600
*              The MONITOR_SUBLISTS request can complete prematurely  * 00318700
*              for various reasons:                                   * 00318800
*                                                                     * 00318900
*                                                                     * 00319000
*              o   Model-dependent timeout - the index number of the  * 00319100
*                  first unprocessed IXLYMSRI entry is returned in    * 00319200
*                  the ANSAREA.                                       * 00319300
*                                                                     * 00319400
*              o   Insufficient event monitor control space to        * 00319500
*                  register as a sublist monitor - the index number   * 00319600
*                  of the first IXLYMSRI entry which could not be     * 00319700
*                  processed is returned in the ANSAREA.              * 00319800
*                                                                     * 00319900
*              o   Invalid list number specified in an IXLYMSRI entry * 00320000
*                  - the index number of the IXLYMSRI entry           * 00320100
*                  containing the invalid list number is returned in  * 00320200
*                  the ANSAREA.                                       * 00320300
*                                                                     * 00320400
*                                                                     * 00320500
*                                                                     * 00320600
*              In all of these premature completion cases, all prior  * 00320700
*              IXLYMSRI  entries were processed successfully.  The    * 00320800
*              user is responsible for performing any necessary       * 00320900
*              processing for the IXLYMSRI entries that were          * 00321000
*              successfully processed by the current request,  taking * 00321100
*              any necessary recovery actions to correct an error     * 00321200
*              condition reported on the current request,  and        * 00321300
*              re-issuing the MONITOR_SUBLISTS request with an        * 00321400
*              updated STARTINDEX value to redrive processing of      * 00321500
*              IXLYMSRI entries that were not processed on the        * 00321600
*              current request.                                       * 00321700
*                                                                     * 00321800
*              REQUEST=MONITOR_SUBLISTS is mutually exclusive with    * 00321900
*              MODE=ASYNCNORESPONSE.                                  * 00322000
*                                                                     * 00322100
*                                                                     * 00322200
*              STARTINDEX=xstartindex                                 * 00322300
*                  is the name (RS-type), or address in register      * 00322400
*                  (2)-(12), of a required halfword input field which * 00322500
*                  contains the 1-origin index number of the first    * 00322600
*                  IXLYMSRI entry which is requested to be processed. * 00322700
*                  Valid range is from 1 to the ENDINDEX value,       * 00322800
*                  inclusive.                                         * 00322900
*                                                                     * 00323000
*                                                                     * 00323100
*                                                                     * 00323200
*                                                                     * 00323300
*              ENDINDEX=xendindex                                     * 00323400
*                  is the name (RS-type), or address in register      * 00323500
*                  (2)-(12), of a required halfword input field which * 00323600
*                  contains the 1-origin index number of the last     * 00323700
*                  IXLYMSRI entry which is requested to be processed. * 00323800
*                  Valid range is from the STARTINDEX value to 1024,  * 00323900
*                  inclusive.  The specified index must not imply a   * 00324000
*                  larger buffer size than the user has actually      * 00324100
*                  provided for the BUFFER or BUFLIST.                * 00324200
*                                                                     * 00324300
*                                                                     * 00324400
*                                                                     * 00324500
*                                                                     * 00324600
*              MOSVECTOR=xmosvector                                   * 00324700
*                  is a required output.  It is the name (RS-type),   * 00324800
*                  or address in register (2)-(12), of a 128-byte     * 00324900
*                  virtual storage area which will contain a 1-origin * 00325000
*                  bit string in which each bit represents the        * 00325100
*                  monitored object state (empty or not-empty) of a   * 00325200
*                  particular sublist at the time that the            * 00325300
*                  MONITOR_SUBLISTS request was processed.            * 00325400
*                                                                     * 00325500
*                  The MOSVECTOR bits correspond one-to-one with the  * 00325600
*                  IXLYMSRI entries that were passed as input in the  * 00325700
*                  BUFFER or BUFLIST.  Only the bits corresponding to * 00325800
*                  the IXLYMSRI entries that were actually processed  * 00325900
*                  on the current request (i.e. between STARTINDEX    * 00326000
*                  and ENDINDEX for a request which completed         * 00326100
*                  successfully, or between STARTINDEX and the        * 00326200
*                  returned index of the first unprocessed entry      * 00326300
*                  minus one for premature completion cases) will     * 00326400
*                  contain valid monitored object state information   * 00326500
*                  for the sublists designated by the corresponding   * 00326600
*                  IXLYMSRI entries.  Bits in the MOSVECTOR which lie * 00326700
*                  outside the valid range are not meaningful.        * 00326800
*                                                                     * 00326900
*                  When a bit in the valid range is on, the sublist   * 00327000
*                  designated by the corresponding IXLYMSRI entry was * 00327100
*                  not-empty at the time that the request was         * 00327200
*                  processed.  When a bit in the valid range is off,  * 00327300
*                  the sublist designated by the corresponding        * 00327400
*                  IXLYMSRI entry was empty at the time that the      * 00327500
*                  request was processed.                             * 00327600
*                                                                     * 00327700
*                                                                     * 00327800
*                                                                     * 00327900
*                                                                     * 00328000
*              The following is a set of mutually exclusive keys.     * 00328100
*              This set is required; only one key must be specified.  * 00328200
*                                                                     * 00328300
*                                                                     * 00328400
*              BUFLIST=xbuflist                                       * 00328500
*                  belongs to a set of mutually exclusive keys. It is * 00328600
*                  an input.  It is the name (RS-type), or address in * 00328700
*                  register (2)-(12), of a 128-byte virtual storage   * 00328800
*                  area containing a list of addresses of buffers.    * 00328900
*                  These buffers contain input data for the request.  * 00329000
*                  The set of buffers is used as if it were a single  * 00329100
*                  contiguous area for purposes of input.             * 00329200
*                                                                     * 00329300
*                  The format of the list is a set of 8-byte          * 00329400
*                  elements.  The BUFADDRSIZE keyword denotes whether * 00329500
*                  four or eight bytes of the element are used.  If   * 00329600
*                  BUFADDRSIZE=31 is specified then the first four    * 00329700
*                  bytes of each element are reserved space and the   * 00329800
*                  last four bytes contain the address of the buffer. * 00329900
*                  If BUFADDRSIZE=64 is specified then the full eight * 00330000
*                  bytes specify the address of the buffer.  The      * 00330100
*                  buffers may not reside in large pages.  The        * 00330200
*                  buffers may not reside in high shared virtual      * 00330300
*                  storage areas or in pageable high virtual common   * 00330400
*                  storage (above 2GB).                               * 00330500
*                                                                     * 00330600
*                  There may be 1 to 16 buffers passed in the list.   * 00330700
*                  Each buffer in the list must be the same size and  * 00330800
*                  must reside in the same address space or data      * 00330900
*                  space.  Data is fetched from the buffers in the    * 00331000
*                  order specified.                                   * 00331100
*                                                                     * 00331200
*                  For MONITOR_SUBLISTS requests, the length of a     * 00331300
*                  buffer must be a multiple of 256 bytes between 256 * 00331400
*                  and 4096.  Each buffer must start on a 256-byte    * 00331500
*                  boundary and must not cross a 4096-byte boundary.  * 00331600
*                                                                     * 00331700
*                  For a MONITOR_SUBLISTS request, the BUFLIST is     * 00331800
*                  used to input an array of entries, each mapped by  * 00331900
*                  IXLYMSRI, and each of which contains the           * 00332000
*                  information necessary to register as a sublist     * 00332100
*                  monitor for one sublist.                           * 00332200
*                                                                     * 00332300
*                  BUFLIST is mutually exclusive with BUFFER.         * 00332400
*                                                                     * 00332500
*                                                                     * 00332600
*                  ÝBUFADDRTYPE=»VIRTUAL!REALº                        * 00332700
*                      is an optional keyword input that specifies    * 00332800
*                      whether the buffer addresses specified in the  * 00332900
*                      BUFLIST list are virtual storage addresses or  * 00333000
*                      real storage addresses.                        * 00333100
*                                                                     * 00333200
*                      DEFAULT: VIRTUAL                               * 00333300
*                                                                     * 00333400
*                                                                     * 00333500
*                      ÝBUFADDRTYPE=VIRTUAL                           * 00333600
*                          Indicates that the buffer addresses        * 00333700
*                          specified in the BUFLIST list are virtual  * 00333800
*                          storage addresses.                         * 00333900
*                                                                     * 00334000
*                                                                     * 00334100
*                                                                     * 00334200
*                          ÝPAGEABLE=»YES!NOº¨                        * 00334300
*                              is an optional keyword input that      * 00334400
*                              specifies whether or not the buffers   * 00334500
*                              specified by BUFLIST resides in        * 00334600
*                              pageable storage.                      * 00334700
*                                                                     * 00334800
*                              DEFAULT: YES                           * 00334900
*                                                                     * 00335000
*                                                                     * 00335100
*                              ÝPAGEABLE=YES                          * 00335200
*                                  Indicates that the BUFLIST buffers * 00335300
*                                  reside in pageable virtual         * 00335400
*                                  storage.                           * 00335500
*                                                                     * 00335600
*                                  This includes disabled reference   * 00335700
*                                  storage, and may include storage   * 00335800
*                                  that has the potential to become   * 00335900
*                                  pageable (such as address space    * 00336000
*                                  storage for which a PGSER FIX has  * 00336100
*                                  been successfully processed).  It  * 00336200
*                                  does not include implicitly        * 00336300
*                                  non-pageable storage (such as is   * 00336400
*                                  obtained from non-pageable         * 00336500
*                                  subpools).                         * 00336600
*                                                                     * 00336700
*                                                                     * 00336800
*                                                                     * 00336900
*                                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEY * 00337000
*                                      º¨¨                            * 00337100
*                                      is the name (RS-type), or      * 00337200
*                                      address in register (2)-(12),  * 00337300
*                                      of an optional 8 bit input     * 00337400
*                                      containing the storage key to  * 00337500
*                                      be used when referencing the   * 00337600
*                                      buffers in the list specified  * 00337700
*                                      by BUFLIST.                    * 00337800
*                                                                     * 00337900
*                                      The high order nibble contains * 00338000
*                                      the storage key, the low order * 00338100
*                                      nibble is ignored.  For        * 00338200
*                                      example, set 'kkkk' in the     * 00338300
*                                      binary bit string 'kkkkxxxx'B  * 00338400
*                                      to correspond to the desired   * 00338500
*                                      storage key.                   * 00338600
*                                                                     * 00338700
*                                      If BUFSTGKEY is not specified, * 00338800
*                                      then all references to the     * 00338900
*                                      BUFLIST buffers are performed  * 00339000
*                                      using the caller's PSW key.    * 00339100
*                                                                     * 00339200
*                                      DEFAULT: CALLERS_KEY           * 00339300
*                                                                     * 00339400
*                                                                     * 00339500
*                                                                     * 00339600
*                              ÝPAGEABLE=NO¨                          * 00339700
*                                  Indicates that the BUFLIST buffers * 00339800
*                                  reside in non-pageable virtual     * 00339900
*                                  storage.                           * 00340000
*                                                                     * 00340100
*                                  This includes implicitly           * 00340200
*                                  non-pageable storage areas.  If    * 00340300
*                                  the virtual storage may            * 00340400
*                                  potentially become pageable, then  * 00340500
*                                  the invoker is responsible for     * 00340600
*                                  ensuring the virtual storage       * 00340700
*                                  remains non-pageable for the       * 00340800
*                                  duration of the request.           * 00340900
*                                                                     * 00341000
*                                  If MODE=ASYNCTOKEN is specified or * 00341100
*                                  MODE=SYNCTOKEN is specified and    * 00341200
*                                  the request does not complete      * 00341300
*                                  synchronously, then the storage    * 00341400
*                                  must remain non-pageable until     * 00341500
*                                  completion of the corresponding    * 00341600
*                                  IXLFCOMP request.  If              * 00341700
*                                  MODE=ASYNCEXIT is specified or     * 00341800
*                                  MODE=SYNCEXIT is specified and the * 00341900
*                                  request does not complete          * 00342000
*                                  synchronously, then the storage    * 00342100
*                                  must remain non-pageable until the * 00342200
*                                  completion exit is driven for the  * 00342300
*                                  request.  If MODE=ASYNCECB is      * 00342400
*                                  specified or MODE=SYNCECB is       * 00342500
*                                  specified and the request does not * 00342600
*                                  complete synchronously, then the   * 00342700
*                                  storage must remain non-pageable   * 00342800
*                                  until the specified ECB is posted  * 00342900
*                                  for the request.                   * 00343000
*                                                                     * 00343100
*                                                                     * 00343200
*                                                                     * 00343300
*                                                                     * 00343400
*                                                                     * 00343500
*                                                                     * 00343600
*                          ÝBUFALET=»xbufalet!NO_BUFALETº¨            * 00343700
*                              is the name (RS-type), or address in   * 00343800
*                              register (2)-(12), of an optional      * 00343900
*                              fullword input specifying the ALET     * 00344000
*                              value to be used in referencing all of * 00344100
*                              the buffers specified for BUFLIST      * 00344200
*                                                                     * 00344300
*                              DEFAULT: NO_BUFALET                    * 00344400
*                                                                     * 00344500
*                                                                     * 00344600
*                                                                     * 00344700
*                                                                     * 00344800
*                          ÝBUFADDRSIZE=»31!64º¨                      * 00344900
*                              is an optional keyword input that      * 00345000
*                              specifies whether a 31 or a 64 bit     * 00345100
*                              address is specified by a BUFLIST      * 00345200
*                              entry.                                 * 00345300
*                                                                     * 00345400
*                              DEFAULT: 31                            * 00345500
*                                                                     * 00345600
*                                                                     * 00345700
*                              ÝBUFADDRSIZE=31¨                       * 00345800
*                                  Indicates that the BUFLIST entry   * 00345900
*                                  is 31 bits in size.                * 00346000
*                                                                     * 00346100
*                              ÝBUFADDRSIZE=64¨¨                      * 00346200
*                                  Indicates that the BUFLIST entry   * 00346300
*                                  is 64 bits in size.                * 00346400
*                                                                     * 00346500
*                                                                     * 00346600
*                                                                     * 00346700
*                                                                     * 00346800
*                                                                     * 00346900
*                      ÝBUFADDRTYPE=REAL                              * 00347000
*                          Indicates that the buffer addresses        * 00347100
*                          specified in the BUFLIST list are real     * 00347200
*                          storage addresses.                         * 00347300
*                                                                     * 00347400
*                                                                     * 00347500
*                          ÝBUFADDRSIZE=»31!64º¨¨                     * 00347600
*                              is an optional keyword input that      * 00347700
*                              specifies whether a 31 or a 64 bit     * 00347800
*                              address is specified by a BUFLIST      * 00347900
*                              entry.                                 * 00348000
*                                                                     * 00348100
*                              DEFAULT: 31                            * 00348200
*                                                                     * 00348300
*                                                                     * 00348400
*                              ÝBUFADDRSIZE=31¨                       * 00348500
*                                  Indicates that the BUFLIST entry   * 00348600
*                                  is 31 bits in size.                * 00348700
*                                                                     * 00348800
*                              ÝBUFADDRSIZE=64¨¨                      * 00348900
*                                  Indicates that the BUFLIST entry   * 00349000
*                                  is 64 bits in size.                * 00349100
*                                                                     * 00349200
*                                                                     * 00349300
*                                                                     * 00349400
*                                                                     * 00349500
*                                                                     * 00349600
*                                                                     * 00349700
*                                                                     * 00349800
*                                                                     * 00349900
*                                                                     * 00350000
*                                                                     * 00350100
*                  BUFNUM=xbufnum                                     * 00350200
*                      is the name (RS-type), or address in register  * 00350300
*                      (2)-(12), of a required byte input specifying  * 00350400
*                      the number of buffers defined in the BUFLIST   * 00350500
*                      list.                                          * 00350600
*                                                                     * 00350700
*                      BUFNUM values must be in the range of 1 to 16. * 00350800
*                                                                     * 00350900
*                                                                     * 00351000
*                                                                     * 00351100
*                                                                     * 00351200
*                  BUFINCRNUM=xbufincrnum                             * 00351300
*                      is the name (RS-type), or address in register  * 00351400
*                      (2)-(12), of a required byte input specifying  * 00351500
*                      the number of 256-byte increments or segments  * 00351600
*                      in each buffer in the BUFLIST list.            * 00351700
*                                                                     * 00351800
*                      BUFINCRNUM values must be a power of 2 in the  * 00351900
*                      range of 1 to 16 (1, 2, 4, 8, 16),             * 00352000
*                      corresponding to BUFLIST buffer sizes of 256   * 00352100
*                      to 4096 bytes.                                 * 00352200
*                                                                     * 00352300
*                                                                     * 00352400
*                                                                     * 00352500
*              BUFFER=xbuffer                                         * 00352600
*                  belongs to a set of mutually exclusive keys. It is * 00352700
*                  an input.  It is the name (RS-type), or address in * 00352800
*                  register (2)-(12), of a virtual storage area       * 00352900
*                  containing input data for the request.  The        * 00353000
*                  BUFSIZE keyword specifies the size of the buffer.  * 00353100
*                  The BUFFER keyword supports 4 byte addresses only. * 00353200
*                  The BUFFER keyword is mutually exclusive with the  * 00353300
*                  BUFADDRSIZE keyword.  The buffers may not reside   * 00353400
*                  in large pages.                                    * 00353500
*                                                                     * 00353600
*                  For MONITOR_SUBLISTS requests, if the length of    * 00353700
*                  the buffer is less than or equal to 4096 bytes     * 00353800
*                  then the length of the buffer must be a power of 2 * 00353900
*                  between 256 and 4096 bytes (256, 512, 1024, 2048,  * 00354000
*                  4096), the buffer must start on a 256-byte         * 00354100
*                  boundary, and the buffer must not cross a          * 00354200
*                  4096-byte boundary.  If the length of the buffer   * 00354300
*                  is greater than 4096 bytes then the length of the  * 00354400
*                  buffer must be a multiple of 4096 bytes between    * 00354500
*                  4096 and 65536 and the buffer must start on a      * 00354600
*                  4096-byte boundary.                                * 00354700
*                                                                     * 00354800
*                  For a MONITOR_SUBLISTS request, the BUFFER is used * 00354900
*                  to input an array of entries, each mapped by       * 00355000
*                  IXLYMSRI, and each of which contains the           * 00355100
*                  information necessary to register as a sublist     * 00355200
*                  monitor for one sublist.                           * 00355300
*                                                                     * 00355400
*                  BUFFER is mutually exclusive with BUFLIST.         * 00355500
*                                                                     * 00355600
*                                                                     * 00355700
*                  ÝPAGEABLE=»YES!NOº¨                                * 00355800
*                      is an optional keyword input that specifies    * 00355900
*                      whether or not the storage area specified by   * 00356000
*                      BUFFER resides in pageable storage.            * 00356100
*                                                                     * 00356200
*                      DEFAULT: YES                                   * 00356300
*                                                                     * 00356400
*                                                                     * 00356500
*                      ÝPAGEABLE=YES                                  * 00356600
*                          Indicates that the BUFFER area resides in  * 00356700
*                          pageable virtual storage.                  * 00356800
*                                                                     * 00356900
*                          This includes disabled reference storage,  * 00357000
*                          and may include storage that has the       * 00357100
*                          potential to become pageable (such as      * 00357200
*                          address space storage for which a PGSER    * 00357300
*                          FIX has been successfully processed).  It  * 00357400
*                          does not include implicitly non-pageable   * 00357500
*                          storage (such as is obtained from          * 00357600
*                          non-pageable subpools).                    * 00357700
*                                                                     * 00357800
*                                                                     * 00357900
*                                                                     * 00358000
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00358100
*                              is the name (RS-type), or address in   * 00358200
*                              register (2)-(12), of an optional 8    * 00358300
*                              bit input containing the storage key   * 00358400
*                              to be used when referencing the        * 00358500
*                              storage area specified by BUFFER.      * 00358600
*                                                                     * 00358700
*                              The high order nibble contains the     * 00358800
*                              storage key, the low order nibble is   * 00358900
*                              ignored.  For example, set 'kkkk' in   * 00359000
*                              the binary bit string 'kkkkxxxx'B to   * 00359100
*                              correspond to the desired storage key. * 00359200
*                                                                     * 00359300
*                              If BUFSTGKEY is not specified, then    * 00359400
*                              all references to the BUFFER buffer    * 00359500
*                              storage are performed using the        * 00359600
*                              caller's PSW key.                      * 00359700
*                                                                     * 00359800
*                              DEFAULT: CALLERS_KEY                   * 00359900
*                                                                     * 00360000
*                                                                     * 00360100
*                                                                     * 00360200
*                      ÝPAGEABLE=NO¨                                  * 00360300
*                          Indicates that the BUFFER area resides in  * 00360400
*                          non-pageable virtual storage.              * 00360500
*                                                                     * 00360600
*                          This includes implicitly non-pageable      * 00360700
*                          storage areas.  If the virtual storage may * 00360800
*                          potentially become pageable, then the      * 00360900
*                          invoker is responsible for ensuring the    * 00361000
*                          virtual storage remains non-pageable for   * 00361100
*                          the duration of the request.               * 00361200
*                                                                     * 00361300
*                          If MODE=ASYNCTOKEN is specified or         * 00361400
*                          MODE=SYNCTOKEN is specified and the        * 00361500
*                          request does not complete synchronously,   * 00361600
*                          then the storage must remain non-pageable  * 00361700
*                          until completion of the corresponding      * 00361800
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00361900
*                          specified or MODE=SYNCEXIT is specified    * 00362000
*                          and the request does not complete          * 00362100
*                          synchronously, then the storage must       * 00362200
*                          remain non-pageable until the completion   * 00362300
*                          exit is driven for the request.  If        * 00362400
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00362500
*                          is specified and the request does not      * 00362600
*                          complete synchronously, then the storage   * 00362700
*                          must remain non-pageable until the         * 00362800
*                          specified ECB is posted for the request.   * 00362900
*                                                                     * 00363000
*                                                                     * 00363100
*                                                                     * 00363200
*                                                                     * 00363300
*                                                                     * 00363400
*                                                                     * 00363500
*                  BUFSIZE=xbufsize                                   * 00363600
*                      is the name (RS-type), or address in register  * 00363700
*                      (2)-(12), of a required fullword input         * 00363800
*                      specifying the length of the virtual storage   * 00363900
*                      area specified for BUFFER in bytes.            * 00364000
*                                                                     * 00364100
*                      Refer to BUFFER for the buffer size            * 00364200
*                      requirements for this request type.            * 00364300
*                                                                     * 00364400
*                                                                     * 00364500
*                                                                     * 00364600
*                                                                     * 00364700
*                                                                     * 00364800
*              End of a set of mutually exclusive required keys.      * 00364900
*                                                                     * 00365000
*                                                                     * 00365100
*                                                                     * 00365200
*                                                                     * 00365300
*                                                                     * 00365400
*                                                                     * 00365500
*                                                                     * 00365600
*      ÝMODE=»SYNCSUSPEND!SYNCECB!SYNCEXIT!SYNCTOKEN!ASYNCECB!ASYNCEX * 00365700
*          IT!ASYNCTOKEN!ASYNCNORESPONSEº¨                            * 00365800
*          is an optional keyword input that specifies whether the    * 00365900
*          request is to be performed synchronously or                * 00366000
*          asynchronously.                                            * 00366100
*                                                                     * 00366200
*          DEFAULT: SYNCSUSPEND                                       * 00366300
*                                                                     * 00366400
*                                                                     * 00366500
*          ÝMODE=SYNCSUSPEND                                          * 00366600
*              Indicates that the request will be performed           * 00366700
*              synchronously.  Control is not returned to the caller  * 00366800
*              until request processing is complete and the final     * 00366900
*              disposition determined.                                * 00367000
*                                                                     * 00367100
*              If necessary the caller will be suspended until the    * 00367200
*              request completes.  The caller must be executing in an * 00367300
*              enabled state to use this option.                      * 00367400
*                                                                     * 00367500
*                                                                     * 00367600
*                                                                     * 00367700
*              ANSAREA=xansarea                                       * 00367800
*                  is a required input.  It is the name (RS-type), or * 00367900
*                  address in register (2)-(12), of a virtual storage * 00368000
*                  area, called the answer area, in which command     * 00368100
*                  response information will be placed.  The format   * 00368200
*                  of the answer area is described by the IXLYLAA     * 00368300
*                  mapping macro.                                     * 00368400
*                                                                     * 00368500
*                  Not all fields in the answer area are applicable   * 00368600
*                  to all request types.  Request type descriptions   * 00368700
*                  indicate what answer area fields are applicable    * 00368800
*                  for successful request completion cases.  Return   * 00368900
*                  and reason code descriptions indicate what answer  * 00369000
*                  area fields are applicable for non-successfully    * 00369100
*                  completing requests.                               * 00369200
*                                                                     * 00369300
*                                                                     * 00369400
*                  ANSLEN=xanslen¨                                    * 00369500
*                      is the name (RS-type), or address in register  * 00369600
*                      (2)-(12), of a required halfword input that    * 00369700
*                      contains the length in bytes of the virtual    * 00369800
*                      storage area provided for ANSAREA.             * 00369900
*                                                                     * 00370000
*                      The length of the answer area is described by  * 00370100
*                      the IXLYLAA mapping macro.                     * 00370200
*                                                                     * 00370300
*                                                                     * 00370400
*                                                                     * 00370500
*                                                                     * 00370600
*                                                                     * 00370700
*          ÝMODE=SYNCECB                                              * 00370800
*              Indicates that the request will be attempted           * 00370900
*              synchronously.  If the request cannot be completed     * 00371000
*              synchronously control is returned to the caller prior  * 00371100
*              to completion of the request, and the ECB specified by * 00371200
*              REQECB is posted when the request has completed.       * 00371300
*                                                                     * 00371400
*              If the request does not complete synchronously latent  * 00371500
*              XES binds to the storage locations specified by        * 00371600
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00371700
*              the REQECB ECB is posted.                              * 00371800
*                                                                     * 00371900
*                                                                     * 00372000
*              REQECB=xreqecb                                         * 00372100
*                  is the name (RS-type), or address in register      * 00372200
*                  (2)-(12), of a required 4 byte input that contains * 00372300
*                  the address of an ECB to be posted when the        * 00372400
*                  request has completed.                             * 00372500
*                                                                     * 00372600
*                  The ECB should be initialized by the requestor     * 00372700
*                  prior to use with this service.  The ECB must      * 00372800
*                  reside either in common storage or in the home     * 00372900
*                  address space that existed at the time the         * 00373000
*                  connection service, IXLCONN, was issued for the    * 00373100
*                  structure.  Any task which waits on the ECB must   * 00373200
*                  have the same home address space as existed when   * 00373300
*                  IXLCONN was issued.                                * 00373400
*                                                                     * 00373500
*                                                                     * 00373600
*                                                                     * 00373700
*                                                                     * 00373800
*              ANSAREA=xansarea                                       * 00373900
*                  is a required input.  It is the name (RS-type), or * 00374000
*                  address in register (2)-(12), of a virtual storage * 00374100
*                  area, called the answer area, in which command     * 00374200
*                  response information will be placed.  The format   * 00374300
*                  of the answer area is described by the IXLYLAA     * 00374400
*                  mapping macro.                                     * 00374500
*                                                                     * 00374600
*                  Not all fields in the answer area are applicable   * 00374700
*                  to all request types.  Request type descriptions   * 00374800
*                  indicate what answer area fields are applicable    * 00374900
*                  for successful request completion cases.  Return   * 00375000
*                  and reason code descriptions indicate what answer  * 00375100
*                  area fields are applicable for non-successfully    * 00375200
*                  completing requests.                               * 00375300
*                                                                     * 00375400
*                                                                     * 00375500
*                  ANSLEN=xanslen¨                                    * 00375600
*                      is the name (RS-type), or address in register  * 00375700
*                      (2)-(12), of a required halfword input that    * 00375800
*                      contains the length in bytes of the virtual    * 00375900
*                      storage area provided for ANSAREA.             * 00376000
*                                                                     * 00376100
*                      The length of the answer area is described by  * 00376200
*                      the IXLYLAA mapping macro.                     * 00376300
*                                                                     * 00376400
*                                                                     * 00376500
*                                                                     * 00376600
*                                                                     * 00376700
*                                                                     * 00376800
*          ÝMODE=SYNCEXIT                                             * 00376900
*              Indicates that the request will be attempted           * 00377000
*              synchronously.  If the request cannot be completed     * 00377100
*              synchronously control is returned to the caller prior  * 00377200
*              to completion of the request.  When the request        * 00377300
*              completes the connection's Complete Exit will be       * 00377400
*              called.                                                * 00377500
*                                                                     * 00377600
*              If the request does not complete synchronously latent  * 00377700
*              XES binds to the storage locations specified by        * 00377800
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00377900
*              the connection's Complete Exit is called.              * 00378000
*                                                                     * 00378100
*                                                                     * 00378200
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨                        * 00378300
*                  is the name (RS-type), or address in register      * 00378400
*                  (2)-(12), of an optional 8 character input         * 00378500
*                  variable that contains connector user-defined data * 00378600
*                  for the request to be passed to the Complete Exit  * 00378700
*                  when driven.  The contents of REQDATA has no       * 00378800
*                  meaning to the system.                             * 00378900
*                                                                     * 00379000
*                  DEFAULT: NO_REQDATA                                * 00379100
*                                                                     * 00379200
*                                                                     * 00379300
*                                                                     * 00379400
*                                                                     * 00379500
*              ANSAREA=xansarea                                       * 00379600
*                  is a required input.  It is the name (RS-type), or * 00379700
*                  address in register (2)-(12), of a virtual storage * 00379800
*                  area, called the answer area, in which command     * 00379900
*                  response information will be placed.  The format   * 00380000
*                  of the answer area is described by the IXLYLAA     * 00380100
*                  mapping macro.                                     * 00380200
*                                                                     * 00380300
*                  Not all fields in the answer area are applicable   * 00380400
*                  to all request types.  Request type descriptions   * 00380500
*                  indicate what answer area fields are applicable    * 00380600
*                  for successful request completion cases.  Return   * 00380700
*                  and reason code descriptions indicate what answer  * 00380800
*                  area fields are applicable for non-successfully    * 00380900
*                  completing requests.                               * 00381000
*                                                                     * 00381100
*                                                                     * 00381200
*                  ANSLEN=xanslen¨                                    * 00381300
*                      is the name (RS-type), or address in register  * 00381400
*                      (2)-(12), of a required halfword input that    * 00381500
*                      contains the length in bytes of the virtual    * 00381600
*                      storage area provided for ANSAREA.             * 00381700
*                                                                     * 00381800
*                      The length of the answer area is described by  * 00381900
*                      the IXLYLAA mapping macro.                     * 00382000
*                                                                     * 00382100
*                                                                     * 00382200
*                                                                     * 00382300
*                                                                     * 00382400
*                                                                     * 00382500
*          ÝMODE=SYNCTOKEN                                            * 00382600
*              Indicates that the request will be attempted           * 00382700
*              synchronously.  If the request cannot be completed     * 00382800
*              synchronously control is returned to the caller prior  * 00382900
*              to completion of the request and a token that uniquely * 00383000
*              identifies the request is returned.                    * 00383100
*                                                                     * 00383200
*              If the request does not complete synchronously latent  * 00383300
*              XES binds to the storage locations specified by        * 00383400
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00383500
*              a subsequent corresponding IXLFCOMP request indicates  * 00383600
*              completion of the original request.                    * 00383700
*                                                                     * 00383800
*                                                                     * 00383900
*              REQTOKEN=xreqtoken                                     * 00384000
*                  is a required output.  It is the name (RS-type),   * 00384100
*                  or address in register (2)-(12), of a 16 character * 00384200
*                  field into which is stored a token that uniquely   * 00384300
*                  identifies this request.                           * 00384400
*                                                                     * 00384500
*                  This token must be specified on a subsequent       * 00384600
*                  invocation of IXLFCOMP to force completion of the  * 00384700
*                  request and determine its final disposition.       * 00384800
*                                                                     * 00384900
*                                                                     * 00385000
*                                                                     * 00385100
*                                                                     * 00385200
*              ANSAREA=xansarea                                       * 00385300
*                  is a required input.  It is the name (RS-type), or * 00385400
*                  address in register (2)-(12), of a virtual storage * 00385500
*                  area, called the answer area, in which command     * 00385600
*                  response information will be placed.  The format   * 00385700
*                  of the answer area is described by the IXLYLAA     * 00385800
*                  mapping macro.                                     * 00385900
*                                                                     * 00386000
*                  Not all fields in the answer area are applicable   * 00386100
*                  to all request types.  Request type descriptions   * 00386200
*                  indicate what answer area fields are applicable    * 00386300
*                  for successful request completion cases.  Return   * 00386400
*                  and reason code descriptions indicate what answer  * 00386500
*                  area fields are applicable for non-successfully    * 00386600
*                  completing requests.                               * 00386700
*                                                                     * 00386800
*                                                                     * 00386900
*                  ANSLEN=xanslen¨                                    * 00387000
*                      is the name (RS-type), or address in register  * 00387100
*                      (2)-(12), of a required halfword input that    * 00387200
*                      contains the length in bytes of the virtual    * 00387300
*                      storage area provided for ANSAREA.             * 00387400
*                                                                     * 00387500
*                      The length of the answer area is described by  * 00387600
*                      the IXLYLAA mapping macro.                     * 00387700
*                                                                     * 00387800
*                                                                     * 00387900
*                                                                     * 00388000
*                                                                     * 00388100
*                                                                     * 00388200
*          ÝMODE=ASYNCECB                                             * 00388300
*              Indicates that the request is to be initiated and      * 00388400
*              control is to be returned to the caller prior to       * 00388500
*              completion of the request.  When the request completes * 00388600
*              the ECB specified by REQECB will be posted.            * 00388700
*                                                                     * 00388800
*              Latent XES binds to the storage locations specified by * 00388900
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00389000
*              the REQECB ECB is posted.                              * 00389100
*                                                                     * 00389200
*                                                                     * 00389300
*              REQECB=xreqecb                                         * 00389400
*                  is the name (RS-type), or address in register      * 00389500
*                  (2)-(12), of a required 4 byte input that contains * 00389600
*                  the address of an ECB to be posted when the        * 00389700
*                  request has completed.                             * 00389800
*                                                                     * 00389900
*                  The ECB should be initialized by the requestor     * 00390000
*                  prior to use with this service.  The ECB must      * 00390100
*                  reside either in common storage or in the home     * 00390200
*                  address space that existed at the time the         * 00390300
*                  connection service, IXLCONN, was issued for the    * 00390400
*                  structure.  Any task which waits on the ECB must   * 00390500
*                  have the same home address space as existed when   * 00390600
*                  IXLCONN was issued.                                * 00390700
*                                                                     * 00390800
*                                                                     * 00390900
*                                                                     * 00391000
*                                                                     * 00391100
*              ANSAREA=xansarea                                       * 00391200
*                  is a required input.  It is the name (RS-type), or * 00391300
*                  address in register (2)-(12), of a virtual storage * 00391400
*                  area, called the answer area, in which command     * 00391500
*                  response information will be placed.  The format   * 00391600
*                  of the answer area is described by the IXLYLAA     * 00391700
*                  mapping macro.                                     * 00391800
*                                                                     * 00391900
*                  Not all fields in the answer area are applicable   * 00392000
*                  to all request types.  Request type descriptions   * 00392100
*                  indicate what answer area fields are applicable    * 00392200
*                  for successful request completion cases.  Return   * 00392300
*                  and reason code descriptions indicate what answer  * 00392400
*                  area fields are applicable for non-successfully    * 00392500
*                  completing requests.                               * 00392600
*                                                                     * 00392700
*                                                                     * 00392800
*                  ANSLEN=xanslen¨                                    * 00392900
*                      is the name (RS-type), or address in register  * 00393000
*                      (2)-(12), of a required halfword input that    * 00393100
*                      contains the length in bytes of the virtual    * 00393200
*                      storage area provided for ANSAREA.             * 00393300
*                                                                     * 00393400
*                      The length of the answer area is described by  * 00393500
*                      the IXLYLAA mapping macro.                     * 00393600
*                                                                     * 00393700
*                                                                     * 00393800
*                                                                     * 00393900
*                                                                     * 00394000
*                                                                     * 00394100
*          ÝMODE=ASYNCEXIT                                            * 00394200
*              Indicates that the request is to be initiated and      * 00394300
*              control is to be returned to the caller prior to       * 00394400
*              completion of the request.  When the request completes * 00394500
*              the connection's Complete Exit will be called.         * 00394600
*                                                                     * 00394700
*              Latent XES binds to the storage locations specified by * 00394800
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00394900
*              the connection's Complete Exit is called.              * 00395000
*                                                                     * 00395100
*                                                                     * 00395200
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨                        * 00395300
*                  is the name (RS-type), or address in register      * 00395400
*                  (2)-(12), of an optional 8 character input         * 00395500
*                  variable that contains connector user-defined data * 00395600
*                  for the request to be passed to the Complete Exit  * 00395700
*                  when driven.  The contents of REQDATA has no       * 00395800
*                  meaning to the system.                             * 00395900
*                                                                     * 00396000
*                  DEFAULT: NO_REQDATA                                * 00396100
*                                                                     * 00396200
*                                                                     * 00396300
*                                                                     * 00396400
*                                                                     * 00396500
*              ANSAREA=xansarea                                       * 00396600
*                  is a required input.  It is the name (RS-type), or * 00396700
*                  address in register (2)-(12), of a virtual storage * 00396800
*                  area, called the answer area, in which command     * 00396900
*                  response information will be placed.  The format   * 00397000
*                  of the answer area is described by the IXLYLAA     * 00397100
*                  mapping macro.                                     * 00397200
*                                                                     * 00397300
*                  Not all fields in the answer area are applicable   * 00397400
*                  to all request types.  Request type descriptions   * 00397500
*                  indicate what answer area fields are applicable    * 00397600
*                  for successful request completion cases.  Return   * 00397700
*                  and reason code descriptions indicate what answer  * 00397800
*                  area fields are applicable for non-successfully    * 00397900
*                  completing requests.                               * 00398000
*                                                                     * 00398100
*                                                                     * 00398200
*                  ANSLEN=xanslen¨                                    * 00398300
*                      is the name (RS-type), or address in register  * 00398400
*                      (2)-(12), of a required halfword input that    * 00398500
*                      contains the length in bytes of the virtual    * 00398600
*                      storage area provided for ANSAREA.             * 00398700
*                                                                     * 00398800
*                      The length of the answer area is described by  * 00398900
*                      the IXLYLAA mapping macro.                     * 00399000
*                                                                     * 00399100
*                                                                     * 00399200
*                                                                     * 00399300
*                                                                     * 00399400
*                                                                     * 00399500
*          ÝMODE=ASYNCTOKEN                                           * 00399600
*              Indicates that the request is to be initiated, a token * 00399700
*              generated that uniquely identifies the request on this * 00399800
*              system, and control returned to the caller prior to    * 00399900
*              completion of the requested operation.                 * 00400000
*                                                                     * 00400100
*              Latent XES binds to the storage locations specified by * 00400200
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00400300
*              a subsequent corresponding IXLFCOMP request indicates  * 00400400
*              completion of the original request.                    * 00400500
*                                                                     * 00400600
*                                                                     * 00400700
*              REQTOKEN=xreqtoken                                     * 00400800
*                  is a required output.  It is the name (RS-type),   * 00400900
*                  or address in register (2)-(12), of a 16 character * 00401000
*                  field into which is stored a token that uniquely   * 00401100
*                  identifies this request.                           * 00401200
*                                                                     * 00401300
*                  This token must be specified on a subsequent       * 00401400
*                  invocation of IXLFCOMP to force completion of the  * 00401500
*                  request and determine its final disposition.       * 00401600
*                                                                     * 00401700
*                                                                     * 00401800
*                                                                     * 00401900
*                                                                     * 00402000
*              ANSAREA=xansarea                                       * 00402100
*                  is a required input.  It is the name (RS-type), or * 00402200
*                  address in register (2)-(12), of a virtual storage * 00402300
*                  area, called the answer area, in which command     * 00402400
*                  response information will be placed.  The format   * 00402500
*                  of the answer area is described by the IXLYLAA     * 00402600
*                  mapping macro.                                     * 00402700
*                                                                     * 00402800
*                  Not all fields in the answer area are applicable   * 00402900
*                  to all request types.  Request type descriptions   * 00403000
*                  indicate what answer area fields are applicable    * 00403100
*                  for successful request completion cases.  Return   * 00403200
*                  and reason code descriptions indicate what answer  * 00403300
*                  area fields are applicable for non-successfully    * 00403400
*                  completing requests.                               * 00403500
*                                                                     * 00403600
*                                                                     * 00403700
*                  ANSLEN=xanslen¨                                    * 00403800
*                      is the name (RS-type), or address in register  * 00403900
*                      (2)-(12), of a required halfword input that    * 00404000
*                      contains the length in bytes of the virtual    * 00404100
*                      storage area provided for ANSAREA.             * 00404200
*                                                                     * 00404300
*                      The length of the answer area is described by  * 00404400
*                      the IXLYLAA mapping macro.                     * 00404500
*                                                                     * 00404600
*                                                                     * 00404700
*                                                                     * 00404800
*                                                                     * 00404900
*                                                                     * 00405000
*          ÝMODE=ASYNCNORESPONSE¨                                     * 00405100
*              Indicates that the request is to be initiated and      * 00405200
*              control returned to the caller prior to completion of  * 00405300
*              the requested operation.  No asynchronous request      * 00405400
*              token is returned, hence no external mechanism exists  * 00405500
*              to force completion of the request.                    * 00405600
*                                                                     * 00405700
*              MODE=ASYNCNORESPONSE is mutually exclusive with LOCK,  * 00405800
*              READ_LCONTROLS, DEQ_EVENTQ, and MONITOR_SUBLISTS       * 00405900
*              requests.  It is also mutually exclusive with          * 00406000
*              REQUEST=MONITOR_LIST and REQUEST=MONITOR_KEYRANGE when * 00406100
*              ACTION=START is specified.  Any other request may      * 00406200
*              specify MODE=ASYNCNORESPONSE.                          * 00406300
*                                                                     * 00406400
*                                                                     * 00406500
*                                                                     * 00406600
*                                                                     * 00406700
*                                                                     * 00406800
*                                                                     * 00406900
*      ÝRETCODE=xretcode¨                                             * 00407000
*          is the name (RS-type) of an optional fullword output       * 00407100
*          variable, or register (2)-(12) or (15), into which the     * 00407200
*          return code is to be copied from GPR 15.  If you specify   * 00407300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00407400
*          the value will be left in GPR 15.                          * 00407500
*                                                                     * 00407600
*                                                                     * 00407700
*                                                                     * 00407800
*                                                                     * 00407900
*      ÝRSNCODE=xrsncode¨                                             * 00408000
*          is the name (RS-type) of an optional fullword output       * 00408100
*          variable into which the reason code is to be copied from   * 00408200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00408300
*          R0 (within or without parentheses), the value will be left * 00408400
*          in GPR 0.                                                  * 00408500
*                                                                     * 00408600
*                                                                     * 00408700
*                                                                     * 00408800
*                                                                     * 00408900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00409000
*          is an optional byte input decimal value in the "0-5" range * 00409100
*          that specifies the macro version.  PLISTVER is the only    * 00409200
*          key allowed on the list form of MF and determines which    * 00409300
*          parameter list is generated.  The macro keys associated    * 00409400
*          with each supported version of the macro are listed in     * 00409500
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00409600
*          instead of a number, and the parameter list will be of the * 00409700
*          largest size currently supported. This size may grow from  * 00409800
*          release to release (thus possibly affecting the amount of  * 00409900
*          storage needed by your program).  If your program can      * 00410000
*          tolerate this, IBM recommends that you always specify MAX  * 00410100
*          when creating the list form parameter list as that will    * 00410200
*          ensure that the list form parameter list is always long    * 00410300
*          enough to hold whatever parameters might be specified on   * 00410400
*          the execute form.                                          * 00410500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00410600
*          default is the lowest version which allows all of the      * 00410700
*          parameters specified on the invocation to be processed.    * 00410800
*                                                                     * 00410900
*                                                                     * 00411000
*                                                                     * 00411100
*                                                                     * 00411200
*      ÝMF=»S!L!Eº¨                                                   * 00411300
*          is an optional keyword input which specifies the macro     * 00411400
*          form.                                                      * 00411500
*          DEFAULT: S                                                 * 00411600
*                                                                     * 00411700
*                                                                     * 00411800
*          ÝMF=S¨                                                     * 00411900
*              specifies the standard form of the macro.  The "S"     * 00412000
*              form generates code to put the parameters into an      * 00412100
*              in-line parameter list and invoke the desired service. * 00412200
*              Full checking for required macro keys is done along    * 00412300
*              with supplying defaults for omitted optional           * 00412400
*              parameters.                                            * 00412500
*                                                                     * 00412600
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00412700
*              specifies the list form of the macro.  The "L" form    * 00412800
*              defines an area to be used for the parameter list.     * 00412900
*              Only the PLISTVER key may be specified on the          * 00413000
*              invocation.  All other macro parameters are flagged as * 00413100
*              errors.  If PLISTVER is not specified, the original    * 00413200
*              parameter list definition is used.                     * 00413300
*                                                                     * 00413400
*            ,xmfctrl                                                 * 00413500
*              is a required input.  It is the name of a storage area * 00413600
*              for the parameter list.                                * 00413700
*                                                                     * 00413800
*            »,xmfattr!0Dº                                            * 00413900
*              is an optional 60 character input string that varies   * 00414000
*              from 1 to 60 characters. Use it to force boundary      * 00414100
*              alignment of the parameter list. Use only 0F or 0D.    * 00414200
*              DEFAULT: 0D which forces the parameter list to a       * 00414300
*              doubleword boundary.                                   * 00414400
*                                                                     * 00414500
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00414600
*              specifies the execute form of the macro.  The "E" form * 00414700
*              generates code to put the parameters into the          * 00414800
*              parameter list specified by xmfctrl and provides full  * 00414900
*              syntax checking with default setting.                  * 00415000
*                                                                     * 00415100
*            ,xmfctrl                                                 * 00415200
*              is a required input.  It is the name (RS-type), or     * 00415300
*              address in register (1)-(12), of a storage area for    * 00415400
*              the parameter list.                                    * 00415500
*                                                                     * 00415600
*            »,COMPLETEº                                              * 00415700
*              is an optional keyword input which specifies the       * 00415800
*              degree of macro parameter syntax checking.             * 00415900
*              DEFAULT: COMPLETE                                      * 00416000
*                                                                     * 00416100
*                                                                     * 00416200
*              COMPLETE                                               * 00416300
*                  Checking for required macro keys is done and       * 00416400
*                  defaults are supplied for omitted optional         * 00416500
*                  parameters.                                        * 00416600
*                                                                     * 00416700
*                                                                     * 00416800
*                                                                     * 00416900
*                                                                     * 00417000
*                                                                     * 00417100
*                                                                     * 00417200
*                                                                     * 00417300
*01* RETURN CODES:                                                    * 00417400
*                                                                     * 00417500
*                                                                     * 00417600
*       0         IxlRetCodeOk:  Successful completion.               * 00417700
*                                                                     * 00417800
*                 If a MODE value of ASYNCECB, ASYNCEXIT, ASYNCTOKEN, * 00417900
*                 or ASYNCNORESPONSE was specified then the request   * 00418000
*                 has been successfully initiated.                    * 00418100
*                                                                     * 00418200
*                 If LOCKOPER=TEST was specified then this return     * 00418300
*                 code indicates the lock is held by the connection   * 00418400
*                 specified by CONTOKEN.                              * 00418500
*                                                                     * 00418600
*                                                                     * 00418700
*       4         IxlRetCodeWarning:  Warning.  The request           * 00418800
*                 completed, but with exceptional circumstances.      * 00418900
*                                                                     * 00419000
*                 HEX REASON  MEANING                                 * 00419100
*                 CODE                                                * 00419200
*                                                                     * 00419300
*                                                                     * 00419400
*                 xxxx0402    IxlRsnCodeAsynch:  The request could    * 00419500
*                             not be completed synchronously.  It     * 00419600
*                             will be completed asynchronously.       * 00419700
*                                                                     * 00419800
*                             If MODE=SYNCECB was specified the ECB   * 00419900
*                             specifed for REQECB will be posted when * 00420000
*                             the request has finished.               * 00420100
*                                                                     * 00420200
*                             If MODE=SYNCEXIT was specified the      * 00420300
*                             connection's completion exit will be    * 00420400
*                             given control when the request has      * 00420500
*                             finished.                               * 00420600
*                                                                     * 00420700
*                             If MODE=SYNCTOKEN was specified the     * 00420800
*                             answer area contains an asynchronous    * 00420900
*                             request token which may be used on the  * 00421000
*                             IXLFCOMP macro to determine when the    * 00421100
*                             request has finished.                   * 00421200
*                                                                     * 00421300
*                 xxxx0409    IxlRsnCodeTimeout:  A MONITOR_SUBLISTS, * 00421400
*                             or DEQ_EVENTQ request, or a LOCK        * 00421500
*                             request specifying LOCKOPER=READNEXT,   * 00421600
*                             or a WRITE_LCONTROLS request specifying * 00421700
*                             KEYRANGE=SET, or a MONITOR_KEYRANGE     * 00421800
*                             request has completed prematurely due   * 00421900
*                             to a model-dependent timeout condition. * 00422000
*                             For MONITOR_SUBLISTS, the index of the  * 00422100
*                             first unprocessed IXLYMSRI entry is     * 00422200
*                             returned in the answer area.  All prior * 00422300
*                             IXLYMSRI entries were processed.  For   * 00422400
*                             DEQ_EVENTQ, the number of EMCs that     * 00422500
*                             were dequeued from the user's event     * 00422600
*                             queue,  and the number of EMCs that     * 00422700
*                             remain on the user's event queue after  * 00422800
*                             dequeueing those EMCs, are returned in  * 00422900
*                             the answer area.  For LOCK, the index   * 00423000
*                             of the next lock to be processed has    * 00423100
*                             been returned in the answer area.  For  * 00423200
*                             WRITE_LCONTROLS, issue a new            * 00423300
*                             KEYRANGE=SET request specifying the     * 00423400
*                             same key range as the original request. * 00423500
*                             Any such request that specifies the     * 00423600
*                             AUTHCOMP keyword should use the new     * 00423700
*                             list authority value.  For              * 00423800
*                             MONITOR_KEYRANGE, reissue the request.  * 00423900
*                                                                     * 00424000
*                 xxxx040E    IxlRsnCodeLockNotHeld:  A LOCKOPER=TEST * 00424100
*                             request determined the specified lock   * 00424200
*                             was not held for the specified          * 00424300
*                             connection.  The connection ID of the   * 00424400
*                             lock owner is returned in the answer    * 00424500
*                             area.                                   * 00424600
*                                                                     * 00424700
*                 xxxx0410    IxlRsnCodeLockCond:  For a              * 00424800
*                             LOCKMODE=COND request, or a request     * 00424900
*                             that specified LOCKCOMP, the request    * 00425000
*                             could not be completed successfully     * 00425100
*                             because the specified lock is not       * 00425200
*                             currently held as required.  The        * 00425300
*                             connection ID of the lock owner is      * 00425400
*                             returned in the answer area.            * 00425500
*                                                                     * 00425600
*                 xxxx0412    IxlRsnCodeLockHeldBySys:  For a         * 00425700
*                             LOCKOPER=READNEXT or LOCKOPER=TEST      * 00425800
*                             request, the lock is not generally      * 00425900
*                             available.  The lock is not held by any * 00426000
*                             connection, but instead is held by the  * 00426100
*                             system.                                 * 00426200
*                                                                     * 00426300
*                 xxxx041F    IxlRsnCodeNoLocksHeld:  An IXLLSTC      * 00426400
*                             request specifying LOCKOPER=READNEXT    * 00426500
*                             found no locks held from the LOCKINDEX  * 00426600
*                             lock to the end of the lock table.      * 00426700
*                                                                     * 00426800
*                                                                     * 00426900
*                                                                     * 00427000
*                                                                     * 00427100
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00427200
*                 completed due to a user error.                      * 00427300
*                                                                     * 00427400
*                 HEX REASON  MEANING                                 * 00427500
*                 CODE                                                * 00427600
*                                                                     * 00427700
*                                                                     * 00427800
*                 xxxx0801    IxlRsnCodeBadParmlist:  Either unable   * 00427900
*                             to read or unable to write to the       * 00428000
*                             IXLLSTC parameter list.                 * 00428100
*                                                                     * 00428200
*                 xxxx0804    IxlRsnCodeBadVersionNum:  The version   * 00428300
*                             number in the parameter list is not     * 00428400
*                             valid.  This usually indicates that the * 00428500
*                             level of the macro is incompatible with * 00428600
*                             the level of the XES service code.      * 00428700
*                                                                     * 00428800
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00428900
*                             contoken specified.  The contoken is    * 00429000
*                             invalid for one of the following        * 00429100
*                             reasons:  disconnect has occurred, EOT  * 00429200
*                             of the connector's task, input contoken * 00429300
*                             is not the contoken returned from       * 00429400
*                             IXLCONN, the request was issued outside * 00429500
*                             the connector's address space, or the   * 00429600
*                             contoken has been invalidated for       * 00429700
*                             rebuild.                                * 00429800
*                                                                     * 00429900
*                 xxxx0824    IxlRsnCodeWrongStrType:  The connection * 00430000
*                             specified by CONTOKEN is not to a list  * 00430100
*                             structure.                              * 00430200
*                                                                     * 00430300
*                 xxxx0825    IxlRsnCodeNoEntry:  The designated      * 00430400
*                             event monitor controls object does not  * 00430500
*                             exist, hence request processing was     * 00430600
*                             suppressed.  For a READ_EMCONTROLS      * 00430700
*                             request,  the designated event monitor  * 00430800
*                             controls (EMC) does not exist for the   * 00430900
*                             user for the designated sublist.        * 00431000
*                                                                     * 00431100
*                 xxxx082B    IxlRsnCodeBadIDIndex:  An invalid value * 00431200
*                             was specified for either STARTINDEX or  * 00431300
*                             ENDINDEX.  When STARTINDEX or ENDINDEX  * 00431400
*                             is invalid, the index of the first      * 00431500
*                             entry which was not processed is        * 00431600
*                             returned in the answer area.            * 00431700
*                                                                     * 00431800
*                 xxxx0833    IxlRsnCodeBadPgblAttr:  The storage     * 00431900
*                             area specified by BUFFER, or one of the * 00432000
*                             buffers in the BUFLIST list is          * 00432100
*                             specified as being pageable, but is     * 00432200
*                             not.                                    * 00432300
*                                                                     * 00432400
*                 xxxx0834    IxlRsnCodeBadNonPgblAttr:  The storage  * 00432500
*                             area specified by BUFFER, or one of the * 00432600
*                             buffers in the BUFLIST list is          * 00432700
*                             specified as being non-pageable, but is * 00432800
*                             either pageable or not addressable.     * 00432900
*                                                                     * 00433000
*                 xxxx0835    IxlRsnCodeBadDataAddr:  The storage     * 00433100
*                             area specified by BUFFER or one of the  * 00433200
*                             buffers in the BUFLIST list is not      * 00433300
*                             addressable.                            * 00433400
*                                                                     * 00433500
*                 xxxx0836    IxlRsnCodeBadRealAddr:  Real storage    * 00433600
*                             addresses were provided in a BUFLIST    * 00433700
*                             list.  One of the buffers is not        * 00433800
*                             addressable in central storage.         * 00433900
*                                                                     * 00434000
*                 xxxx0838    IxlRsnCodeBadAnsArea:  The storage area * 00434100
*                             specified by ANSAREA and ANSLEN is not  * 00434200
*                             addressable.                            * 00434300
*                                                                     * 00434400
*                 xxxx0839    IxlRsnCodeBadReqTokenArea:  The storage * 00434500
*                             area specified by REQTOKEN is not       * 00434600
*                             addressable.                            * 00434700
*                                                                     * 00434800
*                 xxxx083D    IxlRsnCodeBadAnsLen:  The length of the * 00434900
*                             answer area, as specified by ANSLEN, is * 00435000
*                             not sufficient for providing answer     * 00435100
*                             area information.                       * 00435200
*                                                                     * 00435300
*                 xxxx0842    IxlRsnCodePersistentLock:  A request    * 00435400
*                             specifying an unconditional SET lock    * 00435500
*                             operation failed because the lock was   * 00435600
*                             held by a connection in the failed      * 00435700
*                             persistent state.  The connection ID of * 00435800
*                             the lock owner is returned in the       * 00435900
*                             answer area.                            * 00436000
*                                                                     * 00436100
*                 xxxx0846    IxlRsnCodeBadLockIndex:  The specified  * 00436200
*                             LOCKINDEX exceeds the size of the lock  * 00436300
*                             table for the structure.                * 00436400
*                                                                     * 00436500
*                 xxxx0847    IxlRsnCodeBadListNumber:  The specified * 00436600
*                             LISTNUM exceeds the number of lists for * 00436700
*                             the structure.                          * 00436800
*                                                                     * 00436900
*                 xxxx0848    IxlRsnCodeBadReset:  LOCKOPER=RESET was * 00437000
*                             specified for a lock not currently held * 00437100
*                             by the invoker.                         * 00437200
*                                                                     * 00437300
*                 xxxx084A    IxlRsnCodeNoKeys:  The structure does   * 00437400
*                             not support the use of entry keys,  and * 00437500
*                             the request either was a request type   * 00437600
*                             that requires the structure to support  * 00437700
*                             entry keys or a monitor request type    * 00437800
*                             that requires a keyed structure.        * 00437900
*                                                                     * 00438000
*                 xxxx084B    IxlRsnCodeNoLocks:  A locking operation * 00438100
*                             was requested, but the structure does   * 00438200
*                             not contain a lock table.               * 00438300
*                                                                     * 00438400
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 00438500
*                             specifying MODE=SYNCSUSPEND failed      * 00438600
*                             because the caller is disabled and      * 00438700
*                             cannot be suspended.                    * 00438800
*                                                                     * 00438900
*                 xxxx0852    IxlRsnCodeNoListVector:  A              * 00439000
*                             MONITOR_LIST, MONITOR_KEYRANGE,         * 00439100
*                             MONITOR_SUBLIST, MONITOR_EVENTQ, or     * 00439200
*                             MONITOR_SUBLISTS request failed because * 00439300
*                             no local vector for monitoring list     * 00439400
*                             headers, key-ranges, and/or event       * 00439500
*                             queues exists for this connection.      * 00439600
*                             Either a list notification vector was   * 00439700
*                             not requested for this connection, or   * 00439800
*                             the list notification vector has been   * 00439900
*                             deleted.                                * 00440000
*                                                                     * 00440100
*                 xxxx0853    IxlRsnCodeInvListVIndex:  An invalid    * 00440200
*                             vector index was specified on a         * 00440300
*                             MONITOR_LIST, MONITOR_KEYRANGE, or      * 00440400
*                             MONITOR_EVENTQ request with             * 00440500
*                             ACTION=START specified.                 * 00440600
*                                                                     * 00440700
*                 xxxx0854    IxlRsnCodeBadLockComp:  The value       * 00440800
*                             specified for LOCKCOMP is not a valid   * 00440900
*                             connection identifier.                  * 00441000
*                                                                     * 00441100
*                 xxxx0859    IxlRsnCodeBadListAuth:  The authority   * 00441200
*                             value for the specified list does not   * 00441300
*                             meet the criteria specified by          * 00441400
*                             AUTHCOMP.  The current list authority   * 00441500
*                             and description are returned in the     * 00441600
*                             answer area.                            * 00441700
*                                                                     * 00441800
*                 xxxx0864    IxlRsnCodeBadBufSize:  The specified    * 00441900
*                             buffer area is not large enough to      * 00442000
*                             contain the data being read.  For       * 00442100
*                             READ_LCONTROLS and DEQ_EVENTQ, the      * 00442200
*                             specified buffer area must be 4096      * 00442300
*                             bytes in length.                        * 00442400
*                                                                     * 00442500
*                 xxxx0865    IxlRsnCodeBadBufSpec:  The buffer       * 00442600
*                             specification is in error.  Refer to    * 00442700
*                             the BUFFER or BUFLIST specification     * 00442800
*                             requirements.                           * 00442900
*                                                                     * 00443000
*                 xxxx0866    IxlRsnCodeBadBufKey:  The buffer        * 00443100
*                             storage key is incorrect.  For requests * 00443200
*                             which write coupling facility data the  * 00443300
*                             data cannot be fetched.  For requests   * 00443400
*                             which read coupling facility data the   * 00443500
*                             data cannot be stored.                  * 00443600
*                                                                     * 00443700
*                 xxxx0867    IxlRsnCodeBadBufList:  The storage area * 00443800
*                             specified by BUFLIST is not             * 00443900
*                             addressable.                            * 00444000
*                                                                     * 00444100
*                 xxxx0880    IxlRsnCodeBadMosvector:  The storage    * 00444200
*                             area specified by MOSVECTOR is not      * 00444300
*                             addressable.                            * 00444400
*                                                                     * 00444500
*                 xxxx0891    IxlRsnCodeBadKeyRangeEnd The specified  * 00444600
*                             KEYRANGEEND value is not valid.  The    * 00444700
*                             value of KEYRANGEEND must be greater    * 00444800
*                             than or equal to the value of           * 00444900
*                             KEYRANGESTART.                          * 00445000
*                                                                     * 00445100
*                 xxxx0892    IxlRsnCodeBadKrNotEmpty The specified   * 00445200
*                             KRNOTEMPTY value is not valid.  The     * 00445300
*                             value of KRNOTEMPTY must be greater     * 00445400
*                             than or equal to the value of KREMPTY.  * 00445500
*                                                                     * 00445600
*                 xxxx0893    IxlRsnCodeBadListNotEmpty The specified * 00445700
*                             LISTNOTEMPTY value is not valid.  The   * 00445800
*                             value of LISTNOTEMPTY must be greater   * 00445900
*                             than or equal to the value of           * 00446000
*                             LISTEMPTY.                              * 00446100
*                                                                     * 00446200
*                 xxxx0897    IxlRsnCodeBadKeyType The specified      * 00446300
*                             KEYTYPE is not suitable for the         * 00446400
*                             structure.  KEYTYPE=SECONDARY is valid  * 00446500
*                             only if the structure supports          * 00446600
*                             secondary keys.  KEYTYPE=ENTRY is valid * 00446700
*                             only if the structure supports entry    * 00446800
*                             keys.                                   * 00446900
*                                                                     * 00447000
*                 xxxx08AD    IxlRsnCodeBadHighSharedVirt:  Request   * 00447100
*                             specified a high shared virtual storage * 00447200
*                             area (above 2GB).                       * 00447300
*                                                                     * 00447400
*                                                                     * 00447500
*                                                                     * 00447600
*                                                                     * 00447700
*       C         IxlRetCodeEnvError:  Environmental problem.         * 00447800
*                                                                     * 00447900
*                 HEX REASON  MEANING                                 * 00448000
*                 CODE                                                * 00448100
*                                                                     * 00448200
*                                                                     * 00448300
*                 xxxx0C06    IxlRsnCodeNoConn:  No connectivity to   * 00448400
*                             the list structure.  This may occur due * 00448500
*                             to operator commands such as VARY PATH  * 00448600
*                             OFFLINE or CONFIG CHP OFFLINE or        * 00448700
*                             hardware errors such as facility or     * 00448800
*                             path failures.  The contoken will be    * 00448900
*                             invalidated.  The user should           * 00449000
*                             disconnect or rebuild.                  * 00449100
*                                                                     * 00449200
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 00449300
*                             completion of the request, the request  * 00449400
*                             was purged.  Reasons: the connector     * 00449500
*                             failed, the connector disconnected, the * 00449600
*                             requestor failed, the request was       * 00449700
*                             purged by IXLPURGE, or requests were    * 00449800
*                             purged when the connector provided an   * 00449900
*                             IXLEERSP response for the Rebuild Stop  * 00450000
*                             or Rebuild Cleanup event.               * 00450100
*                                                                     * 00450200
*                 xxxx0C14    IxlRsnCodeStatusUnknown:  The IXLLSTC   * 00450300
*                             request has completed, but the final    * 00450400
*                             disposition of the request cannot be    * 00450500
*                             determined.                             * 00450600
*                                                                     * 00450700
*                 xxxx0C17    IxlRsnCodeStrFull:  The structure is    * 00450800
*                             full and cannot accommodate the         * 00450900
*                             creation of more event monitor controls * 00451000
*                             (EMCs) on a MONITOR_SUBLIST or          * 00451100
*                             MONITOR_SUBLISTS request.  For a        * 00451200
*                             MONITOR_SUBLISTS request,  the index of * 00451300
*                             the IXLYMSRI entry which experienced    * 00451400
*                             the structure full condition is         * 00451500
*                             returned in the answer area.            * 00451600
*                                                                     * 00451700
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 00451800
*                             completion of the request, the list     * 00451900
*                             structure failed.                       * 00452000
*                                                                     * 00452100
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 00452200
*                             type is not permitted for the level of  * 00452300
*                             coupling facility in which the target   * 00452400
*                             structure is allocated.                 * 00452500
*                                                                     * 00452600
*                 xxxx0CA0    IxlRsnCodeQuiescedSuspendFail:  The     * 00452700
*                             request is failed because the structure * 00452800
*                             is quiesced for a system-managed        * 00452900
*                             process (other than a STOP or SWITCH to * 00453000
*                             fall out of a system-managed duplexing  * 00453100
*                             rebuild) and SUSPEND=FAIL is specified. * 00453200
*                                                                     * 00453300
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00453400
*                             are not available.  This can be because * 00453500
*                             the hardware necessary to provide XES   * 00453600
*                             functions is not present.               * 00453700
*                                                                     * 00453800
*                                                                     * 00453900
*                                                                     * 00454000
*                                                                     * 00454100
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00454200
*                 state of the involved structure and the disposition * 00454300
*                 of the request are unpredictable.                   * 00454400
*                                                                     * 00454500
*                                                                     * 00454600
*                                                                     * 00454700
*01* REASON CODES:                                                    * 00454800
*                                                                     * 00454900
*       Reason codes, as appropriate, are defined under their         * 00455000
*       corresponding return code.  Reason code and return code       * 00455100
*       constants are defined within the IXLYCON macro.               * 00455200
*                                                                     * 00455300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00455400
*                                                                     * 00455500
*02*   PROCESSOR:  ASSEM                                              * 00455600
*                                                                     * 00455700
*01* COMPONENT:  SCIXL                                                * 00455800
*                                                                     * 00455900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00456000
*                                                                     * 00456100
*01* ABEND CODES:  None.                                              * 00456200
*                                                                     * 00456300
*01* MACRO USAGE NOTES:                                               * 00456400
*                                                                     * 00456500
*                                                                     * 00456600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00456700
*        global macro variable.  Any value other than 'NO' will       * 00456800
*        result in the macro expansion being printed.  The default is * 00456900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00457000
*        variable should be set.                                      * 00457100
*                                                                     * 00457200
*                    GBLC &ZPRINT                                     * 00457300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00457400
*                                                                     * 00457500
*                                                                     * 00457600
*    2.  The  IXLLSTC macro supports multiple versions. The macro key * 00457700
*        list  below  contains the version level in which the key was * 00457800
*        first  introduced.  Positionals  are  identified by the word * 00457900
*        'Positional'  followed by the numeric value of its position. * 00458000
*        Nested  positionals  are  preceded  by their outer key.  The * 00458100
*        lowest value represents the original version and the highest * 00458200
*        value  represents  the  most  recent  version of the IXLLSTC * 00458300
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00458400
*        least  as high as the highest version number of all the keys * 00458500
*        being used.                                                  * 00458600
*                                                                     * 00458700
*        VERSION   KEY                                                * 00458800
*                                                                     * 00458900
*              0      ACTION                                          * 00459000
*                     ANSAREA                                         * 00459100
*                     ANSLEN                                          * 00459200
*                     AUTHCOMP                                        * 00459300
*                     BUFADDRSIZE                                     * 00459400
*                     BUFADDRTYPE                                     * 00459500
*                     BUFALET                                         * 00459600
*                     BUFFER                                          * 00459700
*                     BUFINCRNUM                                      * 00459800
*                     BUFLIST                                         * 00459900
*                     BUFNUM                                          * 00460000
*                     BUFSIZE                                         * 00460100
*                     BUFSTGKEY                                       * 00460200
*                     CONTOKEN                                        * 00460300
*                     DRIVEEXIT                                       * 00460400
*                     KEYRANGE                                        * 00460500
*                     KEYRANGESTATE                                   * 00460600
*                     LISTDESC                                        * 00460700
*                     LISTLIMIT                                       * 00460800
*                     LISTNUM                                         * 00460900
*                     LISTSTATE                                       * 00461000
*                     LOCKCOMP                                        * 00461100
*                     LOCKDATA                                        * 00461200
*                     LOCKINDEX                                       * 00461300
*                     LOCKMODE                                        * 00461400
*                     LOCKOPER                                        * 00461500
*                     MODE                                            * 00461600
*                     NEWAUTH                                         * 00461700
*                     PAGEABLE                                        * 00461800
*                     REQDATA                                         * 00461900
*                     REQECB                                          * 00462000
*                     REQID                                           * 00462100
*                     REQTOKEN                                        * 00462200
*                     REQUEST                                         * 00462300
*                     VECTORINDEX                                     * 00462400
*              1      LISTKEY                                         * 00462500
*                     MAXLISTKEY                                      * 00462600
*                     SETCURSOR                                       * 00462700
*              2      ENDINDEX                                        * 00462800
*                     ENTRYKEY                                        * 00462900
*                     KEYTYPE                                         * 00463000
*                     MOSVECTOR                                       * 00463100
*                     NOTIFICATION                                    * 00463200
*                     STARTINDEX                                      * 00463300
*                     UNC                                             * 00463400
*              4      KEYRANGEEND                                     * 00463500
*                     KEYRANGESTART                                   * 00463600
*                     KREMPTY                                         * 00463700
*                     KRNOTEMPTY                                      * 00463800
*                     LISTEMPTY                                       * 00463900
*                     LISTNOTEMPTY                                    * 00464000
*                     SECONDARYKEY                                    * 00464100
*              5      KEYRNOTIFYDELAY                                 * 00464200
*                     LISTNOTIFYDELAY                                 * 00464300
*                     MONITORTYPE                                     * 00464400
*                                                                     * 00464500
*    3.  Different parameter list versions may be generated depending * 00464600
*        on  the  value  specified  for certain keys.   The following * 00464700
*        table  summarizes  the  minimum  version required to support * 00464800
*        such  specifications.   When  specifying  PLISTVER,  be sure * 00464900
*        that it is as least as high as the highest version number of * 00465000
*        all the key values being used.                               * 00465100
*                                                                     * 00465200
*        Key              Version  Key Value                          * 00465300
*        -------------    -------  ---------------------------------- * 00465400
*        -                                                            * 00465500
*        REQUEST          0        LOCK, READ_LCONTROLS,              * 00465600
*                                  WRITE_LCONTROLS, MONITOR_LIST      * 00465700
*                         2        READ_EQCONTROLS, READ_EMCONTROLS,  * 00465800
*                                  DEQ_EVENTQ, MONITOR_EVENTQ,        * 00465900
*                                  MONITOR_SUBLIST, MONITOR_SUBLISTS  * 00466000
*                         4        MONITOR_KEYRANGE                   * 00466100
*        KEYTYPE          2        ENTRY                              * 00466200
*                         4        SECONDARY                          * 00466300
*        NOTIFICATION     2        FIRST                              * 00466400
*                         4        EVERY for MONITOR_SUBLIST          * 00466500
*                         5        EVERY for MONITOR_LIST and         * 00466600
*                                  MONITOR_KEYRANGE                   * 00466700
*                                                                     * 00466800
*                                                                     * 00466900
*                                                                     * 00467000
*01* CHANGE ACTIVITY:                                                 * 00467100
*                                                                     * 00467200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00467300
*                                                                     * 00467400
*    $L0=SYSLKSMG JBB6609 990904 PD00DT:  Split IXLLIST               * 00467500
*    $P1=PWY0001  JBB6609 980807 PD00DV:  Plist version needs to be   * 00467600
*                                         set consistently with       * 00467700
*                                         IXLLIST                     * 00467800
*    $L1=MQ       JBB6609 980903 PD00DV:  Secondary key support       * 00467900
*    $L2=MQ       JBB6609 990126 PD00BJ:  MQSeries support            * 00468000
*    $L3=64BIT    HBB7703 990211 B7VBGD:  64 bit real support         * 00468100
*    $P2=PWY0287  JBB6609 990415 PD00DV:  Add reason code 0410 and    * 00468200
*                                         0847 descriptions           * 00468300
*    $P3=PWY0410  JBB6609 990616 PD00DV:  Move EMACASM and MACLASM    * 00468400
*                                         tags to correct position,   * 00468500
*                                         and comment out prolog and  * 00468600
*                                         docprof tags at top of      * 00468700
*                                         macro                       * 00468800
*    $P4=PWY0507  JBB6609 990715 PD00DT:  Include missing description * 00468900
*                                         for returncode=8            * 00469000
*                                         reasoncode=084A.            * 00469100
*    $L4=DUPLX    HBB7705 000115 PD00DV:  CF Duplexing                * 00469200
*    $01=OW39892  HBB7705 001115 PD00QQ:  AutoR extension for CICS    * 00469300
*    $L5=V64BIT   HBB7705 000912 PD00SE:  64-Bit Virtual Support      * 00469400
*    $P5=PX00769  HBB7705 001131 PD00SE:  64-Bit Virtual Support      * 00469500
*    $P6=ME08196  HBB7740 070629 PD00FR:  RSMPIN/RSMLKPG large pages  * 00469600
*                                         (APAR OA20902)              * 00469700
*    $P7=ME12915  HBB7750 080314 PD00FR:  Correct macro documentation * 00469800
*                                         regarding disallowed use of * 00469900
*                                         high shared virtual storage * 00470000
*                                         areas (PYN0893)             * 00470100
*    $02=OA26817  HBB7730 090112 PD00DT:  Add new Read Structure      * 00470200
*                                         Counts request              * 00470300
*    $03=OA41825  HBB7790 130522 PD00OF:  CF Flash exploitation       * 00470400
*    $L6=LSTNOT   HBB77B0 150310 PD00C9:  CF List Notification        * 00470500
*    $P8=150746   HBB77B0 161219 PD00C9:  LISTNOTIFYDELAY and         * 00470600
*                                         KEYRNOTIFYDELAY prolog      * 00470700
*                                         updates                     * 00470800
*    $P9=151683   HBB77B0 170112 PD00C9:  Add documentation regarding * 00470900
*                                         disallowed use of pageable  * 00471000
*                                         high virtual common storage * 00471100
*                                         (above 2GB) for buffers     * 00471200
****** END OF SPECIFICATIONS *****************************************/ 00471300
*/********************************************************************* 00471400
         MACRO                                                          00471500
&XLABEL  IXLLSTC &CONTOKEN=,&REQID=,&REQUEST=,&LOCKINDEX=,&LOCKOPER=,  *00471600
               &LOCKMODE=,&LOCKCOMP=,&LOCKDATA=,&LISTNUM=,&BUFLIST=,   *00471700
               &BUFADDRTYPE=,&PAGEABLE=,&BUFSTGKEY=,&BUFALET=,         *00471800
               &BUFADDRSIZE=,&BUFFER=,&AUTHCOMP=,&NEWAUTH=,&LISTLIMIT=,*00471900
               &LISTDESC=,&LISTKEY=,&MAXLISTKEY=,&SETCURSOR=,          *00472000
               &KEYRANGE=,&KEYRANGESTART=,&KEYRANGEEND=,               *00472100
               &KEYRANGESTATE=,&KREMPTY=,&KRNOTEMPTY=,&LISTSTATE=,     *00472200
               &LISTEMPTY=,&LISTNOTEMPTY=,&KEYRNOTIFYDELAY=,           *00472300
               &LISTNOTIFYDELAY=,&KEYTYPE=,&ENTRYKEY=,&SECONDARYKEY=,  *00472400
               &ACTION=,&VECTORINDEX=,&DRIVEEXIT=,&MONITORTYPE=,       *00472500
               &NOTIFICATION=,&UNC=,&STARTINDEX=,&ENDINDEX=,           *00472600
               &MOSVECTOR=,&BUFNUM=,&BUFINCRNUM=,&BUFSIZE=,&MODE=,     *00472700
               &ANSAREA=,&ANSLEN=,&REQECB=,&REQDATA=,&REQTOKEN=,       *00472800
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00472900
.*                                                                      00473000
*                      MACDATE -01/13/18-<5>                            00473100
.*                                                                      00473200
.*******************************************************************    00473300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00473400
.*******************************************************************    00473500
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00473600
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00473700
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00473800
.*                                                                      00473900
                      GBLC  &ZIXLLSTC   YES=MACRO USED AT LEAST ONCE    00474000
.*******************************************************************    00474100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00474200
.*******************************************************************    00474300
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00474400
                      LCLC  &ZCNDX      SYSNDX CHARACTERS               00474500
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00474600
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00474700
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00474800
                      LCLA  &ZAWRK      USED AS A WORK AREA             00474900
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00475000
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00475100
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00475200
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00475300
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00475400
                      LCLC  &ZMAC_G     "G" or null                     00475500
&ZMAC_G               SETC  ''                                          00475600
                      LCLC  &ZMAC_LR                                    00475700
&ZMAC_LR              SETC  'LR'                                        00475800
                      LCLC  &ZMAC_L                                     00475900
&ZMAC_L               SETC  'L'                                         00476000
                      LCLC  &ZMAC_ST                                    00476100
&ZMAC_ST              SETC  'ST'                                        00476200
                      LCLC  &ZMAC_LLGT                                  00476300
&ZMAC_LLGT            SETC  'L'                                         00476400
                      LCLC  &ZMAC_LGR                                   00476500
&ZMAC_LGR             SETC  'LR'                                        00476600
                      LCLC  &ZMAC_LG                                    00476700
&ZMAC_LG              SETC  'L'                                         00476800
                      LCLC  &ZMAC_STG                                   00476900
&ZMAC_STG             SETC  'ST'                                        00477000
                      LCLA  &ZMACRET    MACRO RETURN CODE               00477100
&ZMACRET              SETA  0           ASSUME NO ERRORS                00477200
.*                                                                      00477300
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00477400
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00477500
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00477600
                      LCLC  &ZENDBASEPL         End of base PL          00477700
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           00477800
.*******************************************************************    00477900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00478000
.*******************************************************************    00478100
                      LCLA  &ZI         INDEX FOR ARRAY                 00478200
                      LCLA  &ZJ         INDEX FOR PARMS                 00478300
                      LCLA  &ZK         INDEX FOR PARSE                 00478400
                      LCLA  &ZLO        LOW RANGE VALUE                 00478500
                      LCLA  &ZHI        HIGH RANGE VALUE                00478600
                      LCLC  &ZW         WORK AREA FOR PARM              00478700
.********************************************************************   00478800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00478900
.********************************************************************   00479000
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL         00479100
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  00479200
                      GBLA  &SYSALVL    SYSSTATE ARCHLVL                00479300
                      GBLC  &SYSAM64    SYSSTATE AMODE64                00479400
.*                                                                      00479500
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  00479600
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   00479700
                      SPLEVEL  TEST                                     00479800
.ZSYS2                ANOP  ,                                           00479900
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       00480000
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       00480100
                      SYSSTATE TEST                                     00480200
                      AGO   .ZSYS4                                      00480300
.ZSYS3                ANOP  ,                                           00480400
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         00480500
.ZSYS4                ANOP  ,                                           00480600
                      AIF   ('&SYSAM64' NE 'YES').ZSYSN64               00480700
&ZMAC_LLGT            SETC 'LLGT'                                       00480800
&ZMAC_LGR             SETC 'LGR'                                        00480900
&ZMAC_LG              SETC 'LG'                                         00481000
&ZMAC_STG             SETC 'STG'                                        00481100
.ZSYSN64              ANOP  ,                                           00481200
.*******************************************************************    00481300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00481400
.*******************************************************************    00481500
                      LCLC  &XCONTOKEN  ++ NAME                         00481600
                      LCLC  &XREQID     ++ NAME                         00481700
                      LCLC  &XREQUEST   ++ VALUE                        00481800
                      LCLC  &XLOCKINDEX         ++ NAME                 00481900
                      LCLC  &XLOCKOPER  ++ VALUE                        00482000
                      LCLC  &XLOCKMODE  ++ VALUE                        00482100
                      LCLC  &XLOCKCOMP  ++ NAME                         00482200
                      LCLC  &XLOCKDATA  ++ NAME                         00482300
                      LCLC  &XLISTNUM   ++ NAME                         00482400
                      LCLC  &XDATAREA   ++ NAME                         00482500
                      LCLC  &XBUFLIST   ++ NAME                         00482600
                      LCLC  &XBUFADDRTYPE       ++ VALUE                00482700
                      LCLC  &XPAGEABLE  ++ VALUE                        00482800
                      LCLC  &XBUFSTGKEY         ++ NAME                 00482900
                      LCLC  &XBUFALET   ++ NAME                         00483000
                      LCLC  &XBUFADDRSIZE       ++ VALUE                00483100
                      LCLC  &XBUFFER    ++ NAME                         00483200
                      LCLC  &XAUTHCOMP  ++ NAME                         00483300
                      LCLC  &XNEWAUTH   ++ NAME                         00483400
                      LCLC  &XLISTLIMIT         ++ NAME                 00483500
                      LCLC  &XLISTDESC  ++ NAME                         00483600
                      LCLC  &XLISTKEY   ++ NAME                         00483700
                      LCLC  &XMAXLISTKEY        ++ NAME                 00483800
                      LCLC  &XSETCURSOR         ++ VALUE                00483900
                      LCLC  &XKEYRANGE  ++ VALUE                        00484000
                      LCLC  &XKEYRANGESTART     ++ NAME                 00484100
                      LCLC  &XKEYRANGEEND       ++ NAME                 00484200
                      LCLC  &XKEYRANGESTATE     ++ VALUE                00484300
                      LCLC  &XKREMPTY   ++ NAME                         00484400
                      LCLC  &XKRNOTEMPTY        ++ NAME                 00484500
                      LCLC  &XLISTSTATE         ++ VALUE                00484600
                      LCLC  &XLISTEMPTY         ++ NAME                 00484700
                      LCLC  &XLISTNOTEMPTY      ++ NAME                 00484800
                      LCLC  &XKEYRNOTIFYDELAY   ++ VALUE                00484900
                      LCLC  &XLISTNOTIFYDELAY   ++ VALUE                00485000
                      LCLC  &XKEYTYPE   ++ VALUE                        00485100
                      LCLC  &XNAME      ++ NAME                         00485200
                      LCLC  &XENTRYKEY  ++ NAME                         00485300
                      LCLC  &XSECONDARYKEY      ++ NAME                 00485400
                      LCLC  &XACTION    ++ VALUE                        00485500
                      LCLC  &XVECTORINDEX       ++ NAME                 00485600
                      LCLC  &XDRIVEEXIT         ++ VALUE                00485700
                      LCLC  &XMONITORTYPE       ++ VALUE                00485800
                      LCLC  &XNOTIFICATION      ++ VALUE                00485900
                      LCLC  &XUNC       ++ NAME                         00486000
                      LCLC  &XSTARTINDEX        ++ NAME                 00486100
                      LCLC  &XENDINDEX  ++ NAME                         00486200
                      LCLC  &XMOSVECTOR         ++ NAME                 00486300
                      LCLC  &XBUFNUM    ++ NAME                         00486400
                      LCLC  &XBUFINCRNUM        ++ NAME                 00486500
                      LCLC  &XBUFSIZE   ++ NAME                         00486600
                      LCLC  &XMODE      ++ VALUE                        00486700
                      LCLC  &XANSAREA   ++ NAME                         00486800
                      LCLC  &XANSLEN    ++ NAME                         00486900
                      LCLC  &XREQECB    ++ NAME                         00487000
                      LCLC  &XREQDATA   ++ NAME                         00487100
                      LCLC  &XREQTOKEN  ++ NAME                         00487200
                      LCLC  &XRETCODE   ++ NAME                         00487300
                      LCLC  &XRSNCODE   ++ NAME                         00487400
                      LCLA  &XPLISTVER  ++ VALUE                        00487500
                      LCLC  &XMF        ++ VALUE                        00487600
                      LCLC  &XMFCTRL    ++ NAME                         00487700
                      LCLC  &XMFATTR    ++ VALUE                        00487800
                      LCLC  &XMFSCK     ++ VALUE                        00487900
.*******************************************************************    00488000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00488100
.*******************************************************************    00488200
                      LCLC  &ZXCONTOKEN         ++ INPUT NAME           00488300
                      LCLC  &ZXREQID    ++ INPUT NAME                   00488400
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  00488500
                      LCLC  &ZXLOCKINDEX        ++ INPUT NAME           00488600
                      LCLC  &ZXLOCKOPER         ++ INPUT VALUE          00488700
                      LCLC  &ZXLOCKMODE         ++ INPUT VALUE          00488800
                      LCLC  &ZXLOCKCOMP         ++ INPUT NAME           00488900
                      LCLC  &ZXLOCKDATA         ++ INPUT NAME           00489000
                      LCLC  &ZXLISTNUM  ++ INPUT NAME                   00489100
                      LCLC  &ZXDATAREA  ++ INPUT NAME                   00489200
                      LCLC  &ZXBUFLIST  ++ INPUT NAME                   00489300
                      LCLC  &ZXBUFADDRTYPE      ++ INPUT VALUE          00489400
                      LCLC  &ZXPAGEABLE         ++ INPUT VALUE          00489500
                      LCLC  &ZXBUFSTGKEY        ++ INPUT NAME           00489600
                      LCLC  &ZXBUFALET  ++ INPUT NAME                   00489700
                      LCLC  &ZXBUFADDRSIZE      ++ INPUT VALUE          00489800
                      LCLC  &ZXBUFFER   ++ INPUT NAME                   00489900
                      LCLC  &ZXAUTHCOMP         ++ INPUT NAME           00490000
                      LCLC  &ZXNEWAUTH  ++ INPUT NAME                   00490100
                      LCLC  &ZXLISTLIMIT        ++ INPUT NAME           00490200
                      LCLC  &ZXLISTDESC         ++ INPUT NAME           00490300
                      LCLC  &ZXLISTKEY  ++ INPUT NAME                   00490400
                      LCLC  &ZXMAXLISTKEY       ++ INPUT NAME           00490500
                      LCLC  &ZXSETCURSOR        ++ INPUT VALUE          00490600
                      LCLC  &ZXKEYRANGE         ++ INPUT VALUE          00490700
                      LCLC  &ZXKEYRANGESTART    ++ INPUT NAME           00490800
                      LCLC  &ZXKEYRANGEEND      ++ INPUT NAME           00490900
                      LCLC  &ZXKEYRANGESTATE    ++ INPUT VALUE          00491000
                      LCLC  &ZXKREMPTY  ++ INPUT NAME                   00491100
                      LCLC  &ZXKRNOTEMPTY       ++ INPUT NAME           00491200
                      LCLC  &ZXLISTSTATE        ++ INPUT VALUE          00491300
                      LCLC  &ZXLISTEMPTY        ++ INPUT NAME           00491400
                      LCLC  &ZXLISTNOTEMPTY     ++ INPUT NAME           00491500
                      LCLC  &ZXKEYRNOTIFYDELAY  ++ INPUT VALUE          00491600
                      LCLC  &ZXLISTNOTIFYDELAY  ++ INPUT VALUE          00491700
                      LCLC  &ZXKEYTYPE  ++ INPUT VALUE                  00491800
                      LCLC  &ZXNAME     ++ INPUT NAME                   00491900
                      LCLC  &ZXENTRYKEY         ++ INPUT NAME           00492000
                      LCLC  &ZXSECONDARYKEY     ++ INPUT NAME           00492100
                      LCLC  &ZXACTION   ++ INPUT VALUE                  00492200
                      LCLC  &ZXVECTORINDEX      ++ INPUT NAME           00492300
                      LCLC  &ZXDRIVEEXIT        ++ INPUT VALUE          00492400
                      LCLC  &ZXMONITORTYPE      ++ INPUT VALUE          00492500
                      LCLC  &ZXNOTIFICATION     ++ INPUT VALUE          00492600
                      LCLC  &ZXUNC      ++ INPUT NAME                   00492700
                      LCLC  &ZXSTARTINDEX       ++ INPUT NAME           00492800
                      LCLC  &ZXENDINDEX         ++ INPUT NAME           00492900
                      LCLC  &ZXMOSVECTOR        ++ OUTPUT NAME          00493000
                      LCLC  &ZXBUFNUM   ++ INPUT NAME                   00493100
                      LCLC  &ZXBUFINCRNUM       ++ INPUT NAME           00493200
                      LCLC  &ZXBUFSIZE  ++ INPUT NAME                   00493300
                      LCLC  &ZXMODE     ++ INPUT VALUE                  00493400
                      LCLC  &ZXANSAREA  ++ INPUT NAME                   00493500
                      LCLC  &ZXANSLEN   ++ INPUT NAME                   00493600
                      LCLC  &ZXREQECB   ++ INPUT NAME                   00493700
                      LCLC  &ZXREQDATA  ++ INPUT NAME                   00493800
                      LCLC  &ZXREQTOKEN         ++ OUTPUT NAME          00493900
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00494000
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  00494100
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          00494200
                      LCLC  &ZXMF       ++ INPUT VALUE                  00494300
                      LCLC  &ZXMFCTRL   ++ INPUT NAME                   00494400
                      LCLC  &ZXMFATTR   ++ INPUT VALUE                  00494500
                      LCLC  &ZXMFSCK    ++ INPUT VALUE                  00494600
.********************************************************************   00494700
.***AC.PLV01  PROCESS PLISTVER                                      *   00494800
.********************************************************************   00494900
&XPLISTVER      SETA  0                                                 00495000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00495100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00495200
&XPLISTVER      SETA  5                                                 00495300
.ZPLV0          ANOP  ,                                                 00495400
.*                                                                      00495500
                AIF   ('&LISTKEY' EQ '').ZPLV1E                         00495600
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00495700
&XPLISTVER      SETA  1                                                 00495800
.ZPLV1E         ANOP  ,                                                 00495900
.*                                                                      00496000
                AIF   ('&MAXLISTKEY' EQ '').ZPLV2E                      00496100
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00496200
&XPLISTVER      SETA  1                                                 00496300
.ZPLV2E         ANOP  ,                                                 00496400
.*                                                                      00496500
                AIF   ('&SETCURSOR' EQ '').ZPLV3E                       00496600
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00496700
&XPLISTVER      SETA  1                                                 00496800
.ZPLV3E         ANOP  ,                                                 00496900
.*                                                                      00497000
                AIF   ('&KEYRANGESTART' EQ '').ZPLV4E                   00497100
                AIF   (&XPLISTVER GE 4).ZPLV4E                          00497200
&XPLISTVER      SETA  4                                                 00497300
.ZPLV4E         ANOP  ,                                                 00497400
.*                                                                      00497500
                AIF   ('&KEYRANGEEND' EQ '').ZPLV5E                     00497600
                AIF   (&XPLISTVER GE 4).ZPLV5E                          00497700
&XPLISTVER      SETA  4                                                 00497800
.ZPLV5E         ANOP  ,                                                 00497900
.*                                                                      00498000
                AIF   ('&KREMPTY' EQ '').ZPLV6E                         00498100
                AIF   (&XPLISTVER GE 4).ZPLV6E                          00498200
&XPLISTVER      SETA  4                                                 00498300
.ZPLV6E         ANOP  ,                                                 00498400
.*                                                                      00498500
                AIF   ('&KRNOTEMPTY' EQ '').ZPLV7E                      00498600
                AIF   (&XPLISTVER GE 4).ZPLV7E                          00498700
&XPLISTVER      SETA  4                                                 00498800
.ZPLV7E         ANOP  ,                                                 00498900
.*                                                                      00499000
                AIF   ('&LISTEMPTY' EQ '').ZPLV8E                       00499100
                AIF   (&XPLISTVER GE 4).ZPLV8E                          00499200
&XPLISTVER      SETA  4                                                 00499300
.ZPLV8E         ANOP  ,                                                 00499400
.*                                                                      00499500
                AIF   ('&LISTNOTEMPTY' EQ '').ZPLV9E                    00499600
                AIF   (&XPLISTVER GE 4).ZPLV9E                          00499700
&XPLISTVER      SETA  4                                                 00499800
.ZPLV9E         ANOP  ,                                                 00499900
.*                                                                      00500000
                AIF   ('&KEYRNOTIFYDELAY' EQ '').ZPLV10E                00500100
                AIF   (&XPLISTVER GE 5).ZPLV10E                         00500200
&XPLISTVER      SETA  5                                                 00500300
.ZPLV10E        ANOP  ,                                                 00500400
.*                                                                      00500500
                AIF   ('&LISTNOTIFYDELAY' EQ '').ZPLV11E                00500600
                AIF   (&XPLISTVER GE 5).ZPLV11E                         00500700
&XPLISTVER      SETA  5                                                 00500800
.ZPLV11E        ANOP  ,                                                 00500900
.*                                                                      00501000
                AIF   ('&KEYTYPE' EQ '').ZPLV12E                        00501100
                AIF   (&XPLISTVER GE 2).ZPLV12E                         00501200
&XPLISTVER      SETA  2                                                 00501300
.ZPLV12E        ANOP  ,                                                 00501400
.*                                                                      00501500
                AIF   ('&ENTRYKEY' EQ '').ZPLV13E                       00501600
                AIF   (&XPLISTVER GE 2).ZPLV13E                         00501700
&XPLISTVER      SETA  2                                                 00501800
.ZPLV13E        ANOP  ,                                                 00501900
.*                                                                      00502000
                AIF   ('&SECONDARYKEY' EQ '').ZPLV14E                   00502100
                AIF   (&XPLISTVER GE 4).ZPLV14E                         00502200
&XPLISTVER      SETA  4                                                 00502300
.ZPLV14E        ANOP  ,                                                 00502400
.*                                                                      00502500
                AIF   ('&KEYTYPE' EQ '').ZPLV15E                        00502600
                AIF   (&XPLISTVER GE 2).ZPLV15E                         00502700
&XPLISTVER      SETA  2                                                 00502800
.ZPLV15E        ANOP  ,                                                 00502900
.*                                                                      00503000
                AIF   ('&KEYTYPE' EQ '').ZPLV16E                        00503100
                AIF   (&XPLISTVER GE 2).ZPLV16E                         00503200
&XPLISTVER      SETA  2                                                 00503300
.ZPLV16E        ANOP  ,                                                 00503400
.*                                                                      00503500
                AIF   ('&MONITORTYPE' EQ '').ZPLV17E                    00503600
                AIF   (&XPLISTVER GE 5).ZPLV17E                         00503700
&XPLISTVER      SETA  5                                                 00503800
.ZPLV17E        ANOP  ,                                                 00503900
.*                                                                      00504000
                AIF   ('&NOTIFICATION' EQ '').ZPLV18E                   00504100
                AIF   (&XPLISTVER GE 2).ZPLV18E                         00504200
&XPLISTVER      SETA  2                                                 00504300
.ZPLV18E        ANOP  ,                                                 00504400
.*                                                                      00504500
                AIF   ('&NOTIFICATION' EQ '').ZPLV19E                   00504600
                AIF   (&XPLISTVER GE 2).ZPLV19E                         00504700
&XPLISTVER      SETA  2                                                 00504800
.ZPLV19E        ANOP  ,                                                 00504900
.*                                                                      00505000
                AIF   ('&ENTRYKEY' EQ '').ZPLV20E                       00505100
                AIF   (&XPLISTVER GE 2).ZPLV20E                         00505200
&XPLISTVER      SETA  2                                                 00505300
.ZPLV20E        ANOP  ,                                                 00505400
.*                                                                      00505500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV21E                   00505600
                AIF   (&XPLISTVER GE 4).ZPLV21E                         00505700
&XPLISTVER      SETA  4                                                 00505800
.ZPLV21E        ANOP  ,                                                 00505900
.*                                                                      00506000
                AIF   ('&NOTIFICATION' EQ '').ZPLV22E                   00506100
                AIF   (&XPLISTVER GE 2).ZPLV22E                         00506200
&XPLISTVER      SETA  2                                                 00506300
.ZPLV22E        ANOP  ,                                                 00506400
.*                                                                      00506500
                AIF   ('&UNC' EQ '').ZPLV23E                            00506600
                AIF   (&XPLISTVER GE 2).ZPLV23E                         00506700
&XPLISTVER      SETA  2                                                 00506800
.ZPLV23E        ANOP  ,                                                 00506900
.*                                                                      00507000
                AIF   ('&STARTINDEX' EQ '').ZPLV24E                     00507100
                AIF   (&XPLISTVER GE 2).ZPLV24E                         00507200
&XPLISTVER      SETA  2                                                 00507300
.ZPLV24E        ANOP  ,                                                 00507400
.*                                                                      00507500
                AIF   ('&ENDINDEX' EQ '').ZPLV25E                       00507600
                AIF   (&XPLISTVER GE 2).ZPLV25E                         00507700
&XPLISTVER      SETA  2                                                 00507800
.ZPLV25E        ANOP  ,                                                 00507900
.*                                                                      00508000
                AIF   ('&MOSVECTOR' EQ '').ZPLV26E                      00508100
                AIF   (&XPLISTVER GE 2).ZPLV26E                         00508200
&XPLISTVER      SETA  2                                                 00508300
.ZPLV26E        ANOP  ,                                                 00508400
.*                                                                      00508500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00508600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00508700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00508800
.*-------------------------------------------------------------------   00508900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00509000
&ZMS            SETC  '"PLISTVER='                                      00509100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00509200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00509300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00509400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00509500
                AGO   .ZPVCK2                                           00509600
.ZPVCK3         ANOP  ,                                                 00509700
.*-------------------------------------------------------------------   00509800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00509900
&ZMS            SETC  '"PLISTVER='                                      00510000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00510100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00510200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00510300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00510400
                AGO   .ZPVCKE                                           00510500
.ZPVCK2         ANOP  ,                                                 00510600
.*-------------------------------------------------------------------   00510700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00510800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00510900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00511000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00511100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00511200
                AIF   (&ZN LE 5).ZPVCK4A   NOT HIGH                     00511300
.ZPVCK6         ANOP  ,                                                 00511400
&ZMS            SETC  '"PLISTVER='                                      00511500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00511600
&ZMS            SETC  '&ZMS THE RANGE IS "0-5"'                         00511700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00511800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00511900
&XPLISTVER      SETA  5                                                 00512000
                AGO   .ZPVCKE                                           00512100
.*-------------------------------------------------------------------   00512200
.ZPVCK4A        ANOP  ,                                                 00512300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00512400
&ZMS            SETC  'PLISTVER='                                       00512500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00512600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00512700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00512800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00512900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00513000
                AGO   .ZPVCK5                                           00513100
.ZPVCK4         ANOP  ,                                                 00513200
&XPLISTVER      SETA  &PLISTVER(1)                                      00513300
.ZPVCK5         ANOP  ,                                                 00513400
.ZPVCKE         ANOP  ,                                                 00513500
.********************************************************************   00513600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00513700
.********************************************************************   00513800
                      ACTR  10000                                       00513900
.*------------------------------------------------------------------    00514000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00514100
&XMF                  SETC  ''          INITIALIZE XVARIABLE            00514200
.*-------------------------------------------------------------------   00514300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00514400
.ZG443                ANOP  ,                                           00514500
&ZTLC                 SETC 'S'                                          00514600
                      AIF   ('&MF(1)' NE '&ZTLC').ZG444                 00514700
&XMF                  SETC  'S'         SET KEYWORD                     00514800
                      AIF   (N'&MF LE 1).ZG443A  CK NUM                 00514900
&ZMS                  SETC  '"MF='                                      00515000
&ZMS                  SETC  '&ZMS.&MF"'                                 00515100
&ZMS                  SETC  '&ZMS "MF"'                                 00515200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00515300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00515400
.ZG443A               ANOP  ,                                           00515500
.*-------------------------------------------------------------------   00515600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00515700
.ZG444                ANOP  ,                                           00515800
&ZTLC                 SETC 'L'                                          00515900
                      AIF   ('&MF(1)' NE '&ZTLC').ZG451                 00516000
&XMF                  SETC  'L'         SET KEYWORD                     00516100
                      AIF   (N'&MF LE 3).ZG444A  CK NUM                 00516200
&ZMS                  SETC  '"MF='                                      00516300
&ZMS                  SETC  '&ZMS.&MF"'                                 00516400
&ZMS                  SETC  '&ZMS "MF"'                                 00516500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00516600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00516700
.ZG444A               ANOP  ,                                           00516800
.*-------------------------------------------------------------------   00516900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00517000
                      AIF   (N'&SYSLIST NE 0).ZG444B  POSITIONALS?      00517100
                      AIF   ('&CONTOKEN' NE '').ZG444B  KEYS?           00517200
                      AIF   ('&REQID' NE '').ZG444B  KEYS?              00517300
                      AIF   ('&REQUEST' NE '').ZG444B  KEYS?            00517400
                      AIF   ('&LOCKINDEX' NE '').ZG444B  KEYS?          00517500
                      AIF   ('&LOCKOPER' NE '').ZG444B  KEYS?           00517600
                      AIF   ('&LOCKMODE' NE '').ZG444B  KEYS?           00517700
                      AIF   ('&LOCKCOMP' NE '').ZG444B  KEYS?           00517800
                      AIF   ('&LOCKDATA' NE '').ZG444B  KEYS?           00517900
                      AIF   ('&LISTNUM' NE '').ZG444B  KEYS?            00518000
                      AIF   ('&BUFLIST' NE '').ZG444B  KEYS?            00518100
                      AIF   ('&BUFADDRTYPE' NE '').ZG444B  KEYS?        00518200
                      AIF   ('&PAGEABLE' NE '').ZG444B  KEYS?           00518300
                      AIF   ('&BUFSTGKEY' NE '').ZG444B  KEYS?          00518400
                      AIF   ('&BUFALET' NE '').ZG444B  KEYS?            00518500
                      AIF   ('&BUFADDRSIZE' NE '').ZG444B  KEYS?        00518600
                      AIF   ('&BUFFER' NE '').ZG444B  KEYS?             00518700
                      AIF   ('&AUTHCOMP' NE '').ZG444B  KEYS?           00518800
                      AIF   ('&NEWAUTH' NE '').ZG444B  KEYS?            00518900
                      AIF   ('&LISTLIMIT' NE '').ZG444B  KEYS?          00519000
                      AIF   ('&LISTDESC' NE '').ZG444B  KEYS?           00519100
                      AIF   ('&LISTKEY' NE '').ZG444B  KEYS?            00519200
                      AIF   ('&MAXLISTKEY' NE '').ZG444B  KEYS?         00519300
                      AIF   ('&SETCURSOR' NE '').ZG444B  KEYS?          00519400
                      AIF   ('&KEYRANGE' NE '').ZG444B  KEYS?           00519500
                      AIF   ('&KEYRANGESTART' NE '').ZG444B  KEYS?      00519600
                      AIF   ('&KEYRANGEEND' NE '').ZG444B  KEYS?        00519700
                      AIF   ('&KEYRANGESTATE' NE '').ZG444B  KEYS?      00519800
                      AIF   ('&KREMPTY' NE '').ZG444B  KEYS?            00519900
                      AIF   ('&KRNOTEMPTY' NE '').ZG444B  KEYS?         00520000
                      AIF   ('&LISTSTATE' NE '').ZG444B  KEYS?          00520100
                      AIF   ('&LISTEMPTY' NE '').ZG444B  KEYS?          00520200
                      AIF   ('&LISTNOTEMPTY' NE '').ZG444B  KEYS?       00520300
                      AIF   ('&KEYRNOTIFYDELAY' NE '').ZG444B  KEYS?    00520400
                      AIF   ('&LISTNOTIFYDELAY' NE '').ZG444B  KEYS?    00520500
                      AIF   ('&KEYTYPE' NE '').ZG444B  KEYS?            00520600
                      AIF   ('&ENTRYKEY' NE '').ZG444B  KEYS?           00520700
                      AIF   ('&SECONDARYKEY' NE '').ZG444B  KEYS?       00520800
                      AIF   ('&ACTION' NE '').ZG444B  KEYS?             00520900
                      AIF   ('&VECTORINDEX' NE '').ZG444B  KEYS?        00521000
                      AIF   ('&DRIVEEXIT' NE '').ZG444B  KEYS?          00521100
                      AIF   ('&MONITORTYPE' NE '').ZG444B  KEYS?        00521200
                      AIF   ('&NOTIFICATION' NE '').ZG444B  KEYS?       00521300
                      AIF   ('&UNC' NE '').ZG444B  KEYS?                00521400
                      AIF   ('&STARTINDEX' NE '').ZG444B  KEYS?         00521500
                      AIF   ('&ENDINDEX' NE '').ZG444B  KEYS?           00521600
                      AIF   ('&MOSVECTOR' NE '').ZG444B  KEYS?          00521700
                      AIF   ('&BUFNUM' NE '').ZG444B  KEYS?             00521800
                      AIF   ('&BUFINCRNUM' NE '').ZG444B  KEYS?         00521900
                      AIF   ('&BUFSIZE' NE '').ZG444B  KEYS?            00522000
                      AIF   ('&MODE' NE '').ZG444B  KEYS?               00522100
                      AIF   ('&ANSAREA' NE '').ZG444B  KEYS?            00522200
                      AIF   ('&ANSLEN' NE '').ZG444B  KEYS?             00522300
                      AIF   ('&REQECB' NE '').ZG444B  KEYS?             00522400
                      AIF   ('&REQDATA' NE '').ZG444B  KEYS?            00522500
                      AIF   ('&REQTOKEN' NE '').ZG444B  KEYS?           00522600
                      AIF   ('&RETCODE' NE '').ZG444B  KEYS?            00522700
                      AIF   ('&RSNCODE' NE '').ZG444B  KEYS?            00522800
                      AGO    .ZG444C    INVOCATION OKAY                 00522900
.ZG444B               ANOP  ,                                           00523000
&ZMS                  SETC  'THE "L" FORM OF "MF"'                      00523100
&ZMS                  SETC  '&ZMS CAN ONLY HAVE'                        00523200
&ZMS                  SETC  '&ZMS THE "PLISTVER" KEY'                   00523300
                      MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'      00523400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00523500
.ZG444C               ANOP  ,                                           00523600
.*-------------------------------------------------------------------   00523700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00523800
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00523900
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00524000
                      AIF   (N'&MF(2) GT 1).ZG446B  MULTI               00524100
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00524200
.ZG446B               AIF   (K'&MF(2) GT 0).ZG446C                      00524300
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00524400
&ZMS                  SETC  'WHEN "L" IS SPECIFIED'                     00524500
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00524600
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00524700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00524800
.ZG446C               ANOP  ,                                           00524900
.*-------------------------------------------------------------------   00525000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00525100
                      AIF   (K'&ZXMFCTRL LE 0).ZG446P  NOT I/O          00525200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG446P             00525300
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00525400
&ZMS                  SETC  '"MF='                                      00525500
&ZMS                  SETC  '&ZMS.&MF"'                                 00525600
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00525700
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'           00525800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00525900
.ZG446P               ANOP  ,                                           00526000
.*-------------------------------------------------------------------   00526100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00526200
&ZXMFATTR             SETC  'INPUT'     SET IN/OUTPUT                   00526300
&XMFATTR              SETC  '0D'                                        00526400
                      AIF   (K'&MF(3) LE 0).ZG449B  PARM                00526500
&XMFATTR              SETC  '&MF(3,1)'  SET XVARIABLE                   00526600
                      AIF   (N'&MF(3) GT 1).ZG449B  MULTI               00526700
&XMFATTR              SETC  '&MF(3)'    SET XVARIABLE                   00526800
.ZG449B               ANOP  ,                                           00526900
.*-------------------------------------------------------------------   00527000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00527100
                      AIF   (K'&ZXMFATTR LE 0).ZG449P  NOT I/O          00527200
                      AIF   ('&XMFATTR'(1,1) NE '(').ZG449P             00527300
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00527400
&ZMS                  SETC  '"MF='                                      00527500
&ZMS                  SETC  '&ZMS.&MF"'                                 00527600
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00527700
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'           00527800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00527900
.ZG449P               ANOP  ,                                           00528000
.*-------------------------------------------------------------------   00528100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00528200
                      AIF   (K'&ZXMFATTR LE 0).ZG449S  NOT I/O          00528300
                      AIF   (K'&XMFATTR LE 60).ZG449S  LNG OK           00528400
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00528500
&ZMS                  SETC  '"MF='                                      00528600
&ZMS                  SETC  '&ZMS.&MF"'                                 00528700
&ZMS                  SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'       00528800
                      MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'          00528900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00529000
.ZG449S               ANOP  ,                                           00529100
.*-------------------------------------------------------------------   00529200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00529300
.ZG451                ANOP  ,                                           00529400
&ZTLC                 SETC 'E'                                          00529500
                      AIF   ('&MF(1)' NE '&ZTLC').ZG459                 00529600
&XMF                  SETC  'E'         SET KEYWORD                     00529700
                      AIF   (N'&MF LE 3).ZG451A  CK NUM                 00529800
&ZMS                  SETC  '"MF='                                      00529900
&ZMS                  SETC  '&ZMS.&MF"'                                 00530000
&ZMS                  SETC  '&ZMS "MF"'                                 00530100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00530200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00530300
.ZG451A               ANOP  ,                                           00530400
.*-------------------------------------------------------------------   00530500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00530600
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00530700
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00530800
                      AIF   (N'&MF(2) GT 1).ZG453B  MULTI               00530900
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00531000
.ZG453B               AIF   (K'&MF(2) GT 0).ZG453C                      00531100
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00531200
&ZMS                  SETC  'WHEN "E" IS SPECIFIED'                     00531300
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00531400
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00531500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00531600
.ZG453C               ANOP  ,                                           00531700
.*-------------------------------------------------------------------   00531800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00531900
                      AIF   (K'&ZXMFCTRL LE 0).ZG453R  NOT I/O          00532000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG453R             00532100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                  00532200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG453P               00532300
                      AIF   (K'&ZCGPR GT 2).ZG453Q                      00532400
                      AIF   ('&ZCGPR' EQ '0').ZG453Q                    00532500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00532600
                      AIF   (T'&ZCGPR NE 'N').ZG453Q  INVALID REG NAME  00532700
.ZG453P               ANOP  ,                                           00532800
                      AIF   (T'&ZCGPR NE 'N').ZG453R  NON NUMERIC       00532900
                      AIF   ('&ZCGPR' LT '1').ZG453Q                    00533000
                      AIF   ('&ZCGPR' LE '12').ZG453R                   00533100
.ZG453Q               ANOP  ,                                           00533200
&ZMS                  SETC  '"MF='                                      00533300
&ZMS                  SETC  '&ZMS.&MF"'                                 00533400
&ZMS                  SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'   00533500
                      MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'            00533600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00533700
.ZG453R               ANOP  ,                                           00533800
.*-------------------------------------------------------------------   00533900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00534000
&XMFSCK               SETC  ''          INITIALIZE XVARIABLE            00534100
.ZG457A   AIF   ('&MF(3)' NE 'COMPLETE').ZG458A                         00534200
&XMFSCK               SETC  'COMPLETE'  SET KEYWORD                     00534300
.*-------------------------------------------------------------------   00534400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00534500
.ZG458A               AIF   (K'&XMFSCK GT 0).ZG458C  KEYWORD            00534600
                      AIF   (K'&MF(3) LE 0).ZG458B                      00534700
&ZMS                  SETC  '"MF='                                      00534800
&ZMS                  SETC  '&ZMS.&MF"'                                 00534900
&ZMS                  SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '   00535000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00535100
&ZMS                  SETC  '&ZMS "COMPLETE".'                          00535200
                      MNOTE 8,' &ZMS '                                  00535300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00535400
.ZG458B               ANOP  ,                                           00535500
&XMFSCK               SETC  'COMPLETE'  SET DEFAULT KEYWORD             00535600
.ZG458C               ANOP  ,                                           00535700
&ZXMFSCK              SETC  'INPUT'     SET IN/OUTPUT                   00535800
.*------------------------------------------------------------------    00535900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00536000
.ZG459                ANOP  ,                                           00536100
&ZXMF                 SETC  'INPUT'     SET IN/OUTPUT                   00536200
                      AIF   (K'&XMF GT 0).ZG459E  VALID ARG             00536300
                      AIF   (T'&MF EQ 'O').ZG459D  OMITTED              00536400
&ZASYSLNDX            SETA  0                                           00536500
.ZG459A               ANOP  ,           POSITIONAL MACRO KEY            00536600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00536700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG459C           00536800
&ZTLC                 SETC 'MF'                                         00536900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG459A  00537000
.ZG459B               ANOP  ,                                           00537100
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00537200
&ZMS                  SETC  'THE "MF" KEY'                              00537300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00537400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00537500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00537600
                      AGO   .ZG459E                                     00537700
.ZG459C               ANOP  ,                                           00537800
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00537900
&ZMS                  SETC  '"MF='                                      00538000
&ZMS                  SETC  '&ZMS.&MF"'                                 00538100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00538200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00538300
&ZMS                  SETC  '&ZMS "S",'                                 00538400
&ZMS                  SETC  '&ZMS "L",'                                 00538500
&ZMS                  SETC  '&ZMS OR "E".'                              00538600
                      MNOTE 8,' &ZMS '                                  00538700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00538800
                      AGO   .ZG459E                                     00538900
.ZG459D               ANOP  ,                                           00539000
&XMF                  SETC  'S'         SET DEFAULT KEYWORD             00539100
&XMFSCK               SETC  'COMPLETE'  COMPLETE CHECKING               00539200
.ZG459E               ANOP  ,                                           00539300
.********************************************************************   00539400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00539500
.********************************************************************   00539600
                      ACTR  10000                                       00539700
.*-------------------------------------------------------------------   00539800
.***AG.MF03 MF=(SLE)                                                    00539900
                      AIF   ('&XMF' EQ 'L').ZGMFX                       00540000
.*----------------------------------------------------------------***   00540100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00540200
                      AIF   (N'&CONTOKEN LE 1).ZG2A  CK NUM             00540300
&ZMS                  SETC  '"CONTOKEN='                                00540400
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           00540500
&ZMS                  SETC  '&ZMS "CONTOKEN"'                           00540600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00540700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00540800
.ZG2A                 ANOP  ,                                           00540900
.*-------------------------------------------------------------------   00541000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00541100
&ZXCONTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   00541200
&XCONTOKEN            SETC  '&CONTOKEN(1)'      SET XVARIABLE           00541300
                      AIF   (N'&CONTOKEN GT 1).ZG2B  MULTI              00541400
&XCONTOKEN            SETC  '&CONTOKEN'         SET XVARIABLE           00541500
.ZG2B                 AIF   (K'&CONTOKEN(1) GT 0).ZG2C                  00541600
&ZXCONTOKEN           SETC  ''          RESET IN/OUTPUT                 00541700
&ZMS                  SETC  ' '                                         00541800
&ZMS                  SETC  '&ZMS "CONTOKEN" KEY AND ITS'               00541900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00542000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00542100
.ZG2C                 ANOP  ,                                           00542200
.*-------------------------------------------------------------------   00542300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00542400
                      AIF   (K'&ZXCONTOKEN LE 0).ZG2R  NOT I/O          00542500
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R             00542600
&ZCGPR                SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)              00542700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 00542800
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        00542900
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      00543000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00543100
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    00543200
.ZG2P                 ANOP  ,                                           00543300
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         00543400
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      00543500
                      AIF   ('&ZCGPR' LE '12').ZG2R                     00543600
.ZG2Q                 ANOP  ,                                           00543700
&ZMS                  SETC  '"CONTOKEN='                                00543800
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           00543900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00544000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00544100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00544200
.ZG2R                 ANOP  ,                                           00544300
.*----------------------------------------------------------------***   00544400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00544500
                      AIF   (N'&REQID LE 1).ZG5A  CK NUM                00544600
&ZMS                  SETC  '"REQID='                                   00544700
&ZMS                  SETC  '&ZMS.&REQID"'                              00544800
&ZMS                  SETC  '&ZMS "REQID"'                              00544900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00545000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00545100
.ZG5A                 ANOP  ,                                           00545200
.*-------------------------------------------------------------------   00545300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00545400
&ZXREQID              SETC  'INPUT'     SET IN/OUTPUT                   00545500
&XREQID               SETC  'NO_REQID'                                  00545600
                      AIF   (K'&REQID(1) LE 0).ZG5B  PARM               00545700
&XREQID               SETC  '&REQID(1)'         SET XVARIABLE           00545800
                      AIF   (N'&REQID GT 1).ZG5B  MULTI                 00545900
&XREQID               SETC  '&REQID'    SET XVARIABLE                   00546000
.ZG5B                 ANOP  ,                                           00546100
.*-------------------------------------------------------------------   00546200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00546300
                      AIF   (K'&ZXREQID LE 0).ZG5R  NOT I/O             00546400
         AIF   ('&XREQID' EQ 'NO_REQID').ZG5R                           00546500
                      AIF   ('&XREQID'(1,1) NE '(').ZG5R                00546600
&ZCGPR                SETC  '&XREQID'(2,K'&XREQID-2)                    00546700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                 00546800
                      AIF   (K'&ZCGPR GT 2).ZG5Q                        00546900
                      AIF   ('&ZCGPR' EQ '0').ZG5Q                      00547000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00547100
                      AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME    00547200
.ZG5P                 ANOP  ,                                           00547300
                      AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC         00547400
                      AIF   ('&ZCGPR' LT '2').ZG5Q                      00547500
                      AIF   ('&ZCGPR' LE '12').ZG5R                     00547600
.ZG5Q                 ANOP  ,                                           00547700
&ZMS                  SETC  '"REQID='                                   00547800
&ZMS                  SETC  '&ZMS.&REQID"'                              00547900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00548000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00548100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00548200
.ZG5R                 ANOP  ,                                           00548300
.*------------------------------------------------------------------    00548400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00548500
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            00548600
.*-------------------------------------------------------------------   00548700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00548800
.ZG9                  ANOP  ,                                           00548900
                      AIF   (K'&REQUEST(1) LE 0).ZG9A                   00549000
&ZTLC                 SETC 'LOCK'                                       00549100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG40             00549200
&XREQUEST             SETC  'LOCK'      SET KEYWORD                     00549300
                      AIF   (N'&REQUEST LE 1).ZG9A  CK NUM              00549400
&ZMS                  SETC  '"REQUEST='                                 00549500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00549600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00549700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00549800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00549900
.ZG9A                 ANOP  ,                                           00550000
.*------------------------------------------------------------------    00550100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00550200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00550300
.ZG9A0                AIF   (K'&LISTNUM LE 0).ZG9A1  OK                 00550400
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00550500
.ZG9A1                AIF   (K'&BUFLIST LE 0).ZG9A2  OK                 00550600
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00550700
.ZG9A2                AIF   (K'&BUFADDRTYPE LE 0).ZG9A3  OK             00550800
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00550900
.ZG9A3                AIF   (K'&PAGEABLE LE 0).ZG9A4  OK                00551000
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00551100
.ZG9A4                AIF   (K'&BUFSTGKEY LE 0).ZG9A5  OK               00551200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00551300
.ZG9A5                AIF   (K'&BUFALET LE 0).ZG9A6  OK                 00551400
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00551500
.ZG9A6                AIF   (K'&BUFADDRSIZE LE 0).ZG9A7  OK             00551600
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00551700
.ZG9A7                AIF   (K'&BUFFER LE 0).ZG9A8  OK                  00551800
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00551900
.ZG9A8                AIF   (K'&AUTHCOMP LE 0).ZG9A9  OK                00552000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00552100
.ZG9A9                AIF   (K'&NEWAUTH LE 0).ZG9A10  OK                00552200
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00552300
.ZG9A10               AIF   (K'&LISTLIMIT LE 0).ZG9A11  OK              00552400
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00552500
.ZG9A11               AIF   (K'&LISTDESC LE 0).ZG9A12  OK               00552600
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00552700
.ZG9A12               AIF   (K'&LISTKEY LE 0).ZG9A13  OK                00552800
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00552900
.ZG9A13               AIF   (K'&MAXLISTKEY LE 0).ZG9A14  OK             00553000
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00553100
.ZG9A14               AIF   (K'&SETCURSOR LE 0).ZG9A15  OK              00553200
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00553300
.ZG9A15               AIF   (K'&KEYRANGE LE 0).ZG9A16  OK               00553400
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00553500
.ZG9A16               AIF   (K'&KEYRANGESTART LE 0).ZG9A17  OK          00553600
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00553700
.ZG9A17               AIF   (K'&KEYRANGEEND LE 0).ZG9A18  OK            00553800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00553900
.ZG9A18               AIF   (K'&KEYRANGESTATE LE 0).ZG9A19  OK          00554000
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00554100
.ZG9A19               AIF   (K'&KREMPTY LE 0).ZG9A20  OK                00554200
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00554300
.ZG9A20               AIF   (K'&KRNOTEMPTY LE 0).ZG9A21  OK             00554400
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00554500
.ZG9A21               AIF   (K'&LISTSTATE LE 0).ZG9A22  OK              00554600
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00554700
.ZG9A22               AIF   (K'&LISTEMPTY LE 0).ZG9A23  OK              00554800
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00554900
.ZG9A23               AIF   (K'&LISTNOTEMPTY LE 0).ZG9A24  OK           00555000
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00555100
.ZG9A24               AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG9A25  OK        00555200
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00555300
.ZG9A25               AIF   (K'&LISTNOTIFYDELAY LE 0).ZG9A26  OK        00555400
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00555500
.ZG9A26               AIF   (K'&KEYTYPE LE 0).ZG9A27  OK                00555600
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00555700
.ZG9A27               AIF   (K'&ENTRYKEY LE 0).ZG9A28  OK               00555800
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00555900
.ZG9A28               AIF   (K'&SECONDARYKEY LE 0).ZG9A29  OK           00556000
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00556100
.ZG9A29               AIF   (K'&ACTION LE 0).ZG9A30  OK                 00556200
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00556300
.ZG9A30               AIF   (K'&VECTORINDEX LE 0).ZG9A31  OK            00556400
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00556500
.ZG9A31               AIF   (K'&DRIVEEXIT LE 0).ZG9A32  OK              00556600
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00556700
.ZG9A32               AIF   (K'&MONITORTYPE LE 0).ZG9A33  OK            00556800
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00556900
.ZG9A33               AIF   (K'&NOTIFICATION LE 0).ZG9A34  OK           00557000
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00557100
.ZG9A34               AIF   (K'&UNC LE 0).ZG9A35  OK                    00557200
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00557300
.ZG9A35               AIF   (K'&STARTINDEX LE 0).ZG9A36  OK             00557400
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00557500
.ZG9A36               AIF   (K'&ENDINDEX LE 0).ZG9A37  OK               00557600
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00557700
.ZG9A37               AIF   (K'&MOSVECTOR LE 0).ZG9A38  OK              00557800
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00557900
.ZG9A38               AIF   (K'&BUFNUM LE 0).ZG9A39  OK                 00558000
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00558100
.ZG9A39               AIF   (K'&BUFINCRNUM LE 0).ZG9A40  OK             00558200
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00558300
.ZG9A40               AIF   (K'&BUFSIZE LE 0).ZG9A41  OK                00558400
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00558500
.ZG9A41               AIF   (K'&ZCVAL LE 0).ZG9A42  OK                  00558600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00558700
                      AIF  (K'&ZCVAL LE 160).ZG9A42A                    00558800
&ZCVAL                SETC '&ZCVAL'(1,160)                              00558900
&ZCVAL                SETC '&ZCVAL....'                                 00559000
.ZG9A42A              ANOP                                              00559100
&ZMS                  SETC  '"REQUEST'                                  00559200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00559300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00559400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00559500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00559600
.ZG9A42               ANOP  ,                                           00559700
.*----------------------------------------------------------------***   00559800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00559900
                      AIF   (N'&LOCKINDEX LE 1).ZG11A  CK NUM           00560000
&ZMS                  SETC  '"LOCKINDEX='                               00560100
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          00560200
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          00560300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00560400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00560500
.ZG11A                ANOP  ,                                           00560600
.*-------------------------------------------------------------------   00560700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00560800
&ZXLOCKINDEX          SETC  'INPUT'     SET IN/OUTPUT                   00560900
&XLOCKINDEX           SETC  '&LOCKINDEX(1)'     SET XVARIABLE           00561000
                      AIF   (N'&LOCKINDEX GT 1).ZG11B  MULTI            00561100
&XLOCKINDEX           SETC  '&LOCKINDEX'        SET XVARIABLE           00561200
.ZG11B                AIF   (K'&LOCKINDEX(1) GT 0).ZG11C                00561300
&ZXLOCKINDEX          SETC  ''          RESET IN/OUTPUT                 00561400
&ZMS                  SETC  ' '                                         00561500
&ZMS                  SETC  '&ZMS "LOCKINDEX" KEY AND ITS'              00561600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00561700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00561800
.ZG11C                ANOP  ,                                           00561900
.*-------------------------------------------------------------------   00562000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00562100
                      AIF   (K'&ZXLOCKINDEX LE 0).ZG11R  NOT I/O        00562200
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZG11R           00562300
&ZCGPR                SETC  '&XLOCKINDEX'(2,K'&XLOCKINDEX-2)            00562400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                00562500
                      AIF   (K'&ZCGPR GT 2).ZG11Q                       00562600
                      AIF   ('&ZCGPR' EQ '0').ZG11Q                     00562700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00562800
                      AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME   00562900
.ZG11P                ANOP  ,                                           00563000
                      AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC        00563100
                      AIF   ('&ZCGPR' LT '2').ZG11Q                     00563200
                      AIF   ('&ZCGPR' LE '12').ZG11R                    00563300
.ZG11Q                ANOP  ,                                           00563400
&ZMS                  SETC  '"LOCKINDEX='                               00563500
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          00563600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00563700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00563800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00563900
.ZG11R                ANOP  ,                                           00564000
.*------------------------------------------------------------------    00564100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00564200
&XLOCKOPER            SETC  ''          INITIALIZE XVARIABLE            00564300
.*-------------------------------------------------------------------   00564400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00564500
.ZG15                 ANOP  ,                                           00564600
                      AIF   (K'&LOCKOPER(1) LE 0).ZG15A                 00564700
&ZTLC                 SETC 'SET'                                        00564800
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG27            00564900
&XLOCKOPER            SETC  'SET'       SET KEYWORD                     00565000
                      AIF   (N'&LOCKOPER LE 1).ZG15A  CK NUM            00565100
&ZMS                  SETC  '"LOCKOPER='                                00565200
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00565300
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00565400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00565500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00565600
.ZG15A                ANOP  ,                                           00565700
.*------------------------------------------------------------------    00565800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00565900
&XLOCKMODE            SETC  ''          INITIALIZE XVARIABLE            00566000
.*-------------------------------------------------------------------   00566100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566200
.ZG18                 ANOP  ,                                           00566300
                      AIF   (K'&LOCKMODE(1) LE 0).ZG18A                 00566400
&ZTLC                 SETC 'UNCOND'                                     00566500
                      AIF   ('&LOCKMODE(1)' NE '&ZTLC').ZG19            00566600
&XLOCKMODE            SETC  'UNCOND'    SET KEYWORD                     00566700
                      AIF   (N'&LOCKMODE LE 1).ZG18A  CK NUM            00566800
&ZMS                  SETC  '"LOCKMODE='                                00566900
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           00567000
&ZMS                  SETC  '&ZMS "LOCKMODE"'                           00567100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00567200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00567300
.ZG18A                ANOP  ,                                           00567400
.*------------------------------------------------------------------    00567500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00567600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00567700
.ZG18A0               AIF   (K'&LOCKCOMP LE 0).ZG18A1  OK               00567800
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00567900
.ZG18A1               AIF   (K'&ZCVAL LE 0).ZG18A2  OK                  00568000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00568100
&ZMS                  SETC  '"LOCKMODE'                                 00568200
&ZMS                  SETC  '&ZMS.=&LOCKMODE"'                          00568300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00568400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00568500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00568600
.ZG18A2               ANOP  ,                                           00568700
.*-------------------------------------------------------------------   00568800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00568900
.ZG19                 ANOP  ,                                           00569000
&ZTLC                 SETC 'COND'                                       00569100
                      AIF   ('&LOCKMODE(1)' NE '&ZTLC').ZG23            00569200
&XLOCKMODE            SETC  'COND'      SET KEYWORD                     00569300
                      AIF   (N'&LOCKMODE LE 1).ZG19A  CK NUM            00569400
&ZMS                  SETC  '"LOCKMODE='                                00569500
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           00569600
&ZMS                  SETC  '&ZMS "LOCKMODE"'                           00569700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00569800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00569900
.ZG19A                ANOP  ,                                           00570000
.*----------------------------------------------------------------***   00570100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00570200
                      AIF   (N'&LOCKCOMP LE 1).ZG21A  CK NUM            00570300
&ZMS                  SETC  '"LOCKCOMP='                                00570400
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00570500
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00570600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00570700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00570800
.ZG21A                ANOP  ,                                           00570900
.*-------------------------------------------------------------------   00571000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00571100
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00571200
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00571300
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG21B  PARM           00571400
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00571500
                      AIF   (N'&LOCKCOMP GT 1).ZG21B  MULTI             00571600
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00571700
.ZG21B                ANOP  ,                                           00571800
.*-------------------------------------------------------------------   00571900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00572000
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG21R  NOT I/O         00572100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG21R                    00572200
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG21R            00572300
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00572400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                00572500
                      AIF   (K'&ZCGPR GT 2).ZG21Q                       00572600
                      AIF   ('&ZCGPR' EQ '0').ZG21Q                     00572700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00572800
                      AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME   00572900
.ZG21P                ANOP  ,                                           00573000
                      AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC        00573100
                      AIF   ('&ZCGPR' LT '2').ZG21Q                     00573200
                      AIF   ('&ZCGPR' LE '12').ZG21R                    00573300
.ZG21Q                ANOP  ,                                           00573400
&ZMS                  SETC  '"LOCKCOMP='                                00573500
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00573600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00573700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00573800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00573900
.ZG21R                ANOP  ,                                           00574000
.*------------------------------------------------------------------    00574100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00574200
.ZG23                 ANOP  ,                                           00574300
&ZXLOCKMODE           SETC  'INPUT'     SET IN/OUTPUT                   00574400
                      AIF   (K'&XLOCKMODE GT 0).ZG23E  VALID ARG        00574500
                      AIF   (T'&LOCKMODE EQ 'O').ZG23D  OMITTED         00574600
&ZASYSLNDX            SETA  0                                           00574700
.ZG23A                ANOP  ,           POSITIONAL MACRO KEY            00574800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00574900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG23C            00575000
&ZTLC                 SETC 'LOCKMODE'                                   00575100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG23A   00575200
.ZG23B                ANOP  ,                                           00575300
&ZXLOCKMODE           SETC  ''          RESET IN/OUTPUT                 00575400
&ZMS                  SETC  'THE "LOCKMODE" KEY'                        00575500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00575600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00575700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00575800
                      AGO   .ZG23E                                      00575900
.ZG23C                ANOP  ,                                           00576000
&ZXLOCKMODE           SETC  ''          RESET IN/OUTPUT                 00576100
&ZMS                  SETC  '"LOCKMODE='                                00576200
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           00576300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00576400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00576500
&ZMS                  SETC  '&ZMS "UNCOND"'                             00576600
&ZMS                  SETC  '&ZMS OR "COND".'                           00576700
                      MNOTE 8,' &ZMS '                                  00576800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00576900
                      AGO   .ZG23E                                      00577000
.ZG23D                ANOP  ,                                           00577100
&XLOCKMODE            SETC  'UNCOND'    SET DEFAULT KEYWORD             00577200
.ZG23E                ANOP  ,                                           00577300
.*----------------------------------------------------------------***   00577400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00577500
                      AIF   (N'&LOCKDATA LE 1).ZG25A  CK NUM            00577600
&ZMS                  SETC  '"LOCKDATA='                                00577700
&ZMS                  SETC  '&ZMS.&LOCKDATA"'                           00577800
&ZMS                  SETC  '&ZMS "LOCKDATA"'                           00577900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00578000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00578100
.ZG25A                ANOP  ,                                           00578200
.*-------------------------------------------------------------------   00578300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00578400
&ZXLOCKDATA           SETC  'INPUT'     SET IN/OUTPUT                   00578500
&XLOCKDATA            SETC  'NO_LOCKDATA'                               00578600
                      AIF   (K'&LOCKDATA(1) LE 0).ZG25B  PARM           00578700
&XLOCKDATA            SETC  '&LOCKDATA(1)'      SET XVARIABLE           00578800
                      AIF   (N'&LOCKDATA GT 1).ZG25B  MULTI             00578900
&XLOCKDATA            SETC  '&LOCKDATA'         SET XVARIABLE           00579000
.ZG25B                ANOP  ,                                           00579100
.*-------------------------------------------------------------------   00579200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00579300
                      AIF   (K'&ZXLOCKDATA LE 0).ZG25R  NOT I/O         00579400
         AIF   ('&XLOCKDATA' EQ 'NO_LOCKDATA').ZG25R                    00579500
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZG25R            00579600
&ZCGPR                SETC  '&XLOCKDATA'(2,K'&XLOCKDATA-2)              00579700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                00579800
                      AIF   (K'&ZCGPR GT 2).ZG25Q                       00579900
                      AIF   ('&ZCGPR' EQ '0').ZG25Q                     00580000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00580100
                      AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME   00580200
.ZG25P                ANOP  ,                                           00580300
                      AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC        00580400
                      AIF   ('&ZCGPR' LT '2').ZG25Q                     00580500
                      AIF   ('&ZCGPR' LE '12').ZG25R                    00580600
.ZG25Q                ANOP  ,                                           00580700
&ZMS                  SETC  '"LOCKDATA='                                00580800
&ZMS                  SETC  '&ZMS.&LOCKDATA"'                           00580900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00581000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00581100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00581200
.ZG25R                ANOP  ,                                           00581300
.*-------------------------------------------------------------------   00581400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00581500
.ZG27                 ANOP  ,                                           00581600
&ZTLC                 SETC 'RESET'                                      00581700
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG31            00581800
&XLOCKOPER            SETC  'RESET'     SET KEYWORD                     00581900
                      AIF   (N'&LOCKOPER LE 1).ZG27A  CK NUM            00582000
&ZMS                  SETC  '"LOCKOPER='                                00582100
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00582200
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00582300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00582400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00582500
.ZG27A                ANOP  ,                                           00582600
.*------------------------------------------------------------------    00582700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00582800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00582900
.ZG27A0               AIF   (K'&LOCKMODE LE 0).ZG27A1  OK               00583000
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00583100
.ZG27A1               AIF   (K'&LOCKDATA LE 0).ZG27A2  OK               00583200
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00583300
.ZG27A2               AIF   (K'&ZCVAL LE 0).ZG27A3  OK                  00583400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00583500
&ZMS                  SETC  '"LOCKOPER'                                 00583600
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          00583700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00583800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00583900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00584000
.ZG27A3               ANOP  ,                                           00584100
.*----------------------------------------------------------------***   00584200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00584300
                      AIF   (N'&LOCKCOMP LE 1).ZG29A  CK NUM            00584400
&ZMS                  SETC  '"LOCKCOMP='                                00584500
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00584600
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00584700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00584800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00584900
.ZG29A                ANOP  ,                                           00585000
.*-------------------------------------------------------------------   00585100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00585200
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00585300
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00585400
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG29B  PARM           00585500
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00585600
                      AIF   (N'&LOCKCOMP GT 1).ZG29B  MULTI             00585700
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00585800
.ZG29B                ANOP  ,                                           00585900
.*-------------------------------------------------------------------   00586000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00586100
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG29R  NOT I/O         00586200
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG29R                    00586300
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG29R            00586400
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00586500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                00586600
                      AIF   (K'&ZCGPR GT 2).ZG29Q                       00586700
                      AIF   ('&ZCGPR' EQ '0').ZG29Q                     00586800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00586900
                      AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME   00587000
.ZG29P                ANOP  ,                                           00587100
                      AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC        00587200
                      AIF   ('&ZCGPR' LT '2').ZG29Q                     00587300
                      AIF   ('&ZCGPR' LE '12').ZG29R                    00587400
.ZG29Q                ANOP  ,                                           00587500
&ZMS                  SETC  '"LOCKCOMP='                                00587600
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00587700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00587800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00587900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00588000
.ZG29R                ANOP  ,                                           00588100
.*-------------------------------------------------------------------   00588200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00588300
.ZG31                 ANOP  ,                                           00588400
&ZTLC                 SETC 'TEST'                                       00588500
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG35            00588600
&XLOCKOPER            SETC  'TEST'      SET KEYWORD                     00588700
                      AIF   (N'&LOCKOPER LE 1).ZG31A  CK NUM            00588800
&ZMS                  SETC  '"LOCKOPER='                                00588900
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00589000
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00589100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00589200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00589300
.ZG31A                ANOP  ,                                           00589400
.*------------------------------------------------------------------    00589500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00589600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00589700
.ZG31A0               AIF   (K'&LOCKMODE LE 0).ZG31A1  OK               00589800
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00589900
.ZG31A1               AIF   (K'&LOCKDATA LE 0).ZG31A2  OK               00590000
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00590100
.ZG31A2               AIF   (K'&ZCVAL LE 0).ZG31A3  OK                  00590200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00590300
&ZMS                  SETC  '"LOCKOPER'                                 00590400
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          00590500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00590600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00590700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00590800
.ZG31A3               ANOP  ,                                           00590900
.*----------------------------------------------------------------***   00591000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00591100
                      AIF   (N'&LOCKCOMP LE 1).ZG33A  CK NUM            00591200
&ZMS                  SETC  '"LOCKCOMP='                                00591300
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00591400
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00591500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00591600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00591700
.ZG33A                ANOP  ,                                           00591800
.*-------------------------------------------------------------------   00591900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00592000
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00592100
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00592200
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG33B  PARM           00592300
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00592400
                      AIF   (N'&LOCKCOMP GT 1).ZG33B  MULTI             00592500
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00592600
.ZG33B                ANOP  ,                                           00592700
.*-------------------------------------------------------------------   00592800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00592900
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG33R  NOT I/O         00593000
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG33R                    00593100
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG33R            00593200
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00593300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                00593400
                      AIF   (K'&ZCGPR GT 2).ZG33Q                       00593500
                      AIF   ('&ZCGPR' EQ '0').ZG33Q                     00593600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00593700
                      AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME   00593800
.ZG33P                ANOP  ,                                           00593900
                      AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC        00594000
                      AIF   ('&ZCGPR' LT '2').ZG33Q                     00594100
                      AIF   ('&ZCGPR' LE '12').ZG33R                    00594200
.ZG33Q                ANOP  ,                                           00594300
&ZMS                  SETC  '"LOCKCOMP='                                00594400
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00594500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00594600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00594700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00594800
.ZG33R                ANOP  ,                                           00594900
.*-------------------------------------------------------------------   00595000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00595100
.ZG35                 ANOP  ,                                           00595200
&ZTLC                 SETC 'READNEXT'                                   00595300
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG39            00595400
&XLOCKOPER            SETC  'READNEXT'  SET KEYWORD                     00595500
                      AIF   (N'&LOCKOPER LE 1).ZG35A  CK NUM            00595600
&ZMS                  SETC  '"LOCKOPER='                                00595700
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00595800
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00595900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00596000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00596100
.ZG35A                ANOP  ,                                           00596200
.*------------------------------------------------------------------    00596300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00596400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00596500
.ZG35A0               AIF   (K'&LOCKMODE LE 0).ZG35A1  OK               00596600
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00596700
.ZG35A1               AIF   (K'&LOCKDATA LE 0).ZG35A2  OK               00596800
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00596900
.ZG35A2               AIF   (K'&ZCVAL LE 0).ZG35A3  OK                  00597000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00597100
&ZMS                  SETC  '"LOCKOPER'                                 00597200
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          00597300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00597400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00597500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00597600
.ZG35A3               ANOP  ,                                           00597700
.*----------------------------------------------------------------***   00597800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00597900
                      AIF   (N'&LOCKCOMP LE 1).ZG37A  CK NUM            00598000
&ZMS                  SETC  '"LOCKCOMP='                                00598100
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00598200
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00598300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00598400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00598500
.ZG37A                ANOP  ,                                           00598600
.*-------------------------------------------------------------------   00598700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00598800
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00598900
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00599000
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG37B  PARM           00599100
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00599200
                      AIF   (N'&LOCKCOMP GT 1).ZG37B  MULTI             00599300
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00599400
.ZG37B                ANOP  ,                                           00599500
.*-------------------------------------------------------------------   00599600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00599700
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG37R  NOT I/O         00599800
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG37R                    00599900
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG37R            00600000
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00600100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                00600200
                      AIF   (K'&ZCGPR GT 2).ZG37Q                       00600300
                      AIF   ('&ZCGPR' EQ '0').ZG37Q                     00600400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00600500
                      AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME   00600600
.ZG37P                ANOP  ,                                           00600700
                      AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC        00600800
                      AIF   ('&ZCGPR' LT '2').ZG37Q                     00600900
                      AIF   ('&ZCGPR' LE '12').ZG37R                    00601000
.ZG37Q                ANOP  ,                                           00601100
&ZMS                  SETC  '"LOCKCOMP='                                00601200
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00601300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00601400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00601500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00601600
.ZG37R                ANOP  ,                                           00601700
.*------------------------------------------------------------------    00601800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00601900
.ZG39                 ANOP  ,                                           00602000
&ZXLOCKOPER           SETC  'INPUT'     SET IN/OUTPUT                   00602100
                      AIF   (K'&XLOCKOPER GT 0).ZG39E  VALID ARG        00602200
                      AIF   (T'&LOCKOPER EQ 'O').ZG39D  OMITTED         00602300
&ZASYSLNDX            SETA  0                                           00602400
.ZG39A                ANOP  ,           POSITIONAL MACRO KEY            00602500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00602600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C            00602700
&ZTLC                 SETC 'LOCKOPER'                                   00602800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A   00602900
.ZG39B                ANOP  ,                                           00603000
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 00603100
&ZMS                  SETC  'THE "LOCKOPER" KEY'                        00603200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00603300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00603400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00603500
                      AGO   .ZG39E                                      00603600
.ZG39C                ANOP  ,                                           00603700
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 00603800
&ZMS                  SETC  '"LOCKOPER='                                00603900
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00604000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00604100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00604200
&ZMS                  SETC  '&ZMS "SET",'                               00604300
&ZMS                  SETC  '&ZMS "RESET",'                             00604400
&ZMS                  SETC  '&ZMS "TEST",'                              00604500
&ZMS                  SETC  '&ZMS OR "READNEXT".'                       00604600
                      MNOTE 8,' &ZMS '                                  00604700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00604800
                      AGO   .ZG39E                                      00604900
.ZG39D                ANOP  ,                                           00605000
&XLOCKOPER            SETC  'SET'       SET DEFAULT KEYWORD             00605100
.ZG39E                ANOP  ,                                           00605200
.*------------------------------------------------------------------    00605300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00605400
                      AIF   (K'&LOCKOPER(1) GT 0).ZG39F  PARM           00605500
&XLOCKOPER            SETC  ''          ENSURE NULL KEYWORD             00605600
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 00605700
&ZMS                  SETC  'THE'                                       00605800
&ZMS                  SETC  '&ZMS "LOCKOPER" KEY AND ITS'               00605900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00606000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00606100
&ZMS                  SETC  '&ZMS "SET",'                               00606200
&ZMS                  SETC  '&ZMS "RESET",'                             00606300
&ZMS                  SETC  '&ZMS "TEST",'                              00606400
&ZMS                  SETC  '&ZMS OR "READNEXT".'                       00606500
                      MNOTE 8,' &ZMS '                                  00606600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00606700
.ZG39F                ANOP  ,                                           00606800
.*-------------------------------------------------------------------   00606900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00607000
.ZG40                 ANOP  ,                                           00607100
&ZTLC                 SETC 'READ_LCONTROLS'                             00607200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG82             00607300
&XREQUEST             SETC  'READ_LCONTROLS'    SET KEYWORD             00607400
                      AIF   (N'&REQUEST LE 1).ZG40A  CK NUM             00607500
&ZMS                  SETC  '"REQUEST='                                 00607600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00607700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00607800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00607900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00608000
.ZG40A                ANOP  ,                                           00608100
.*------------------------------------------------------------------    00608200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00608300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00608400
.ZG40A0               AIF   (K'&LOCKINDEX LE 0).ZG40A1  OK              00608500
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00608600
.ZG40A1               AIF   (K'&LOCKOPER LE 0).ZG40A2  OK               00608700
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00608800
.ZG40A2               AIF   (K'&LOCKMODE LE 0).ZG40A3  OK               00608900
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00609000
.ZG40A3               AIF   (K'&LOCKCOMP LE 0).ZG40A4  OK               00609100
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00609200
.ZG40A4               AIF   (K'&LOCKDATA LE 0).ZG40A5  OK               00609300
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00609400
.ZG40A5               AIF   (K'&AUTHCOMP LE 0).ZG40A6  OK               00609500
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00609600
.ZG40A6               AIF   (K'&NEWAUTH LE 0).ZG40A7  OK                00609700
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00609800
.ZG40A7               AIF   (K'&LISTLIMIT LE 0).ZG40A8  OK              00609900
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00610000
.ZG40A8               AIF   (K'&LISTDESC LE 0).ZG40A9  OK               00610100
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00610200
.ZG40A9               AIF   (K'&LISTKEY LE 0).ZG40A10  OK               00610300
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00610400
.ZG40A10              AIF   (K'&MAXLISTKEY LE 0).ZG40A11  OK            00610500
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00610600
.ZG40A11              AIF   (K'&SETCURSOR LE 0).ZG40A12  OK             00610700
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00610800
.ZG40A12              AIF   (K'&KEYRANGE LE 0).ZG40A13  OK              00610900
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00611000
.ZG40A13              AIF   (K'&KEYRANGESTART LE 0).ZG40A14  OK         00611100
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00611200
.ZG40A14              AIF   (K'&KEYRANGEEND LE 0).ZG40A15  OK           00611300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00611400
.ZG40A15              AIF   (K'&KEYRANGESTATE LE 0).ZG40A16  OK         00611500
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00611600
.ZG40A16              AIF   (K'&KREMPTY LE 0).ZG40A17  OK               00611700
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00611800
.ZG40A17              AIF   (K'&KRNOTEMPTY LE 0).ZG40A18  OK            00611900
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00612000
.ZG40A18              AIF   (K'&LISTSTATE LE 0).ZG40A19  OK             00612100
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00612200
.ZG40A19              AIF   (K'&LISTEMPTY LE 0).ZG40A20  OK             00612300
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00612400
.ZG40A20              AIF   (K'&LISTNOTEMPTY LE 0).ZG40A21  OK          00612500
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00612600
.ZG40A21              AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG40A22  OK       00612700
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00612800
.ZG40A22              AIF   (K'&LISTNOTIFYDELAY LE 0).ZG40A23  OK       00612900
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00613000
.ZG40A23              AIF   (K'&KEYTYPE LE 0).ZG40A24  OK               00613100
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00613200
.ZG40A24              AIF   (K'&ENTRYKEY LE 0).ZG40A25  OK              00613300
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00613400
.ZG40A25              AIF   (K'&SECONDARYKEY LE 0).ZG40A26  OK          00613500
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00613600
.ZG40A26              AIF   (K'&ACTION LE 0).ZG40A27  OK                00613700
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00613800
.ZG40A27              AIF   (K'&VECTORINDEX LE 0).ZG40A28  OK           00613900
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00614000
.ZG40A28              AIF   (K'&DRIVEEXIT LE 0).ZG40A29  OK             00614100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00614200
.ZG40A29              AIF   (K'&MONITORTYPE LE 0).ZG40A30  OK           00614300
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00614400
.ZG40A30              AIF   (K'&NOTIFICATION LE 0).ZG40A31  OK          00614500
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00614600
.ZG40A31              AIF   (K'&UNC LE 0).ZG40A32  OK                   00614700
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00614800
.ZG40A32              AIF   (K'&STARTINDEX LE 0).ZG40A33  OK            00614900
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00615000
.ZG40A33              AIF   (K'&ENDINDEX LE 0).ZG40A34  OK              00615100
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00615200
.ZG40A34              AIF   (K'&MOSVECTOR LE 0).ZG40A35  OK             00615300
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00615400
.ZG40A35              AIF   (K'&BUFNUM LE 0).ZG40A36  OK                00615500
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00615600
.ZG40A36              AIF   (K'&BUFINCRNUM LE 0).ZG40A37  OK            00615700
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00615800
.ZG40A37              AIF   (K'&BUFSIZE LE 0).ZG40A38  OK               00615900
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00616000
.ZG40A38              AIF   (K'&ZCVAL LE 0).ZG40A39  OK                 00616100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00616200
                      AIF  (K'&ZCVAL LE 160).ZG40A39A                   00616300
&ZCVAL                SETC '&ZCVAL'(1,160)                              00616400
&ZCVAL                SETC '&ZCVAL....'                                 00616500
.ZG40A39A             ANOP                                              00616600
&ZMS                  SETC  '"REQUEST'                                  00616700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00616800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00616900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00617000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00617100
.ZG40A39              ANOP  ,                                           00617200
.*----------------------------------------------------------------***   00617300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00617400
                      AIF   (N'&LISTNUM LE 1).ZG42A  CK NUM             00617500
&ZMS                  SETC  '"LISTNUM='                                 00617600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00617700
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00617800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00617900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00618000
.ZG42A                ANOP  ,                                           00618100
.*-------------------------------------------------------------------   00618200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00618300
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00618400
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00618500
                      AIF   (N'&LISTNUM GT 1).ZG42B  MULTI              00618600
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00618700
.ZG42B                AIF   (K'&LISTNUM(1) GT 0).ZG42C                  00618800
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00618900
&ZMS                  SETC  ' '                                         00619000
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00619100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00619200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00619300
.ZG42C                ANOP  ,                                           00619400
.*-------------------------------------------------------------------   00619500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00619600
                      AIF   (K'&ZXLISTNUM LE 0).ZG42R  NOT I/O          00619700
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG42R             00619800
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00619900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                00620000
                      AIF   (K'&ZCGPR GT 2).ZG42Q                       00620100
                      AIF   ('&ZCGPR' EQ '0').ZG42Q                     00620200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00620300
                      AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME   00620400
.ZG42P                ANOP  ,                                           00620500
                      AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC        00620600
                      AIF   ('&ZCGPR' LT '2').ZG42Q                     00620700
                      AIF   ('&ZCGPR' LE '12').ZG42R                    00620800
.ZG42Q                ANOP  ,                                           00620900
&ZMS                  SETC  '"LISTNUM='                                 00621000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00621100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00621200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00621300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00621400
.ZG42R                ANOP  ,                                           00621500
.*----------------------------------------------------------------***   00621600
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00621700
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            00621800
                      AIF   (K'&BUFLIST LE 0).ZG45C                     00621900
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00622000
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   00622100
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   00622200
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      00622300
                      AIF   (N'&BUFLIST GT 1).ZG45A                     00622400
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              00622500
.ZG45A                AIF   (N'&BUFLIST LE 1).ZG45B  CK NUM             00622600
&ZMS                  SETC  '"BUFLIST='                                 00622700
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00622800
&ZMS                  SETC  '&ZMS "BUFLIST"'                            00622900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00623000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00623100
.ZG45B                AIF   (K'&XBUFLIST GT 0).ZG45C  ONE PARM          00623200
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00623300
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00623400
&ZMS                  SETC  ' '                                         00623500
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                00623600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00623700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00623800
.ZG45C                ANOP  ,                                           00623900
.*----------------------------------------------------------------***   00624000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00624100
                      AIF   (K'&BUFFER LE 0).ZG72D  NO ME KEY           00624200
                      AIF   (N'&BUFFER LE 1).ZG72A  CK NUM              00624300
&ZMS                  SETC  '"BUFFER='                                  00624400
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00624500
&ZMS                  SETC  '&ZMS "BUFFER"'                             00624600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00624700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00624800
.ZG72A                AIF   (K'&XDATAREA LE 0).ZG72B                    00624900
&ZMS                  SETC  '"BUFFER'                                   00625000
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00625100
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00625200
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          00625300
                      MNOTE 8,' &ZMS KEY.'                              00625400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00625500
                      AGO   .ZG72D                                      00625600
.*                                                                      00625700
.ZG72B                ANOP  ,                                           00625800
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00625900
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   00626000
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   00626100
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      00626200
                      AIF   (N'&BUFFER GT 1).ZG72C                      00626300
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              00626400
.ZG72C                AIF   (K'&XBUFFER GT 0).ZG72D  ONE PARM           00626500
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00626600
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 00626700
&ZMS                  SETC  ' '                                         00626800
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 00626900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00627000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00627100
.ZG72D                ANOP  ,                                           00627200
.*------------------------------------------------------------------    00627300
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00627400
                      AIF   (K'&XDATAREA GT 0).ZG81B                    00627500
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00627600
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00627700
&XDATAREA             SETC  ''          ENSURE NULL                     00627800
&XBUFLIST             SETC  ''          ENSURE NULL                     00627900
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00628000
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00628100
&ZMS                  SETC  '&ZMS REQUIRED:'                            00628200
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            00628300
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           00628400
                      MNOTE 8,' &ZMS '                                  00628500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00628600
.ZG81B                ANOP  ,                                           00628700
.*-------------------------------------------------------------------   00628800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00628900
.ZG45ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG72ZY                       00629000
.*-------------------------------------------------------------------   00629100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00629200
                      AIF   (K'&ZXBUFLIST LE 0).ZG45R  NOT I/O          00629300
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG45R             00629400
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                00629500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                00629600
                      AIF   (K'&ZCGPR GT 2).ZG45Q                       00629700
                      AIF   ('&ZCGPR' EQ '0').ZG45Q                     00629800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00629900
                      AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME   00630000
.ZG45P                ANOP  ,                                           00630100
                      AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC        00630200
                      AIF   ('&ZCGPR' LT '2').ZG45Q                     00630300
                      AIF   ('&ZCGPR' LE '12').ZG45R                    00630400
.ZG45Q                ANOP  ,                                           00630500
&ZMS                  SETC  '"BUFLIST='                                 00630600
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00630700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00630800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00630900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00631000
.ZG45R                ANOP  ,                                           00631100
.*------------------------------------------------------------------    00631200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00631300
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            00631400
.*-------------------------------------------------------------------   00631500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00631600
.ZG48                 ANOP  ,                                           00631700
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG48A              00631800
&ZTLC                 SETC 'VIRTUAL'                                    00631900
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG65         00632000
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     00632100
                      AIF   (N'&BUFADDRTYPE LE 1).ZG48A  CK NUM         00632200
&ZMS                  SETC  '"BUFADDRTYPE='                             00632300
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00632400
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00632500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00632600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00632700
.ZG48A                ANOP  ,                                           00632800
.*------------------------------------------------------------------    00632900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00633000
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00633100
.*-------------------------------------------------------------------   00633200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00633300
.ZG51                 ANOP  ,                                           00633400
                      AIF   (K'&PAGEABLE(1) LE 0).ZG51A                 00633500
&ZTLC                 SETC 'YES'                                        00633600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG55            00633700
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00633800
                      AIF   (N'&PAGEABLE LE 1).ZG51A  CK NUM            00633900
&ZMS                  SETC  '"PAGEABLE='                                00634000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00634100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00634200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00634300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00634400
.ZG51A                ANOP  ,                                           00634500
.*----------------------------------------------------------------***   00634600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00634700
                      AIF   (N'&BUFSTGKEY LE 1).ZG53A  CK NUM           00634800
&ZMS                  SETC  '"BUFSTGKEY='                               00634900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00635000
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00635100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00635200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00635300
.ZG53A                ANOP  ,                                           00635400
.*-------------------------------------------------------------------   00635500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00635600
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00635700
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00635800
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG53B  PARM          00635900
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00636000
                      AIF   (N'&BUFSTGKEY GT 1).ZG53B  MULTI            00636100
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00636200
.ZG53B                ANOP  ,                                           00636300
.*-------------------------------------------------------------------   00636400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00636500
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG53R  NOT I/O        00636600
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG53R                   00636700
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG53R           00636800
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00636900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                00637000
                      AIF   (K'&ZCGPR GT 2).ZG53Q                       00637100
                      AIF   ('&ZCGPR' EQ '0').ZG53Q                     00637200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00637300
                      AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME   00637400
.ZG53P                ANOP  ,                                           00637500
                      AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC        00637600
                      AIF   ('&ZCGPR' LT '2').ZG53Q                     00637700
                      AIF   ('&ZCGPR' LE '12').ZG53R                    00637800
.ZG53Q                ANOP  ,                                           00637900
&ZMS                  SETC  '"BUFSTGKEY='                               00638000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00638100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00638200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00638300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00638400
.ZG53R                ANOP  ,                                           00638500
.*-------------------------------------------------------------------   00638600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00638700
.ZG55                 ANOP  ,                                           00638800
&ZTLC                 SETC 'NO'                                         00638900
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG56            00639000
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00639100
                      AIF   (N'&PAGEABLE LE 1).ZG55A  CK NUM            00639200
&ZMS                  SETC  '"PAGEABLE='                                00639300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00639400
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00639500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00639600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00639700
.ZG55A                ANOP  ,                                           00639800
.*------------------------------------------------------------------    00639900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00640000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00640100
.ZG55A0               AIF   (K'&BUFSTGKEY LE 0).ZG55A1  OK              00640200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00640300
.ZG55A1               AIF   (K'&ZCVAL LE 0).ZG55A2  OK                  00640400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00640500
&ZMS                  SETC  '"PAGEABLE'                                 00640600
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00640700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00640800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00640900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00641000
.ZG55A2               ANOP  ,                                           00641100
.*------------------------------------------------------------------    00641200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00641300
.ZG56                 ANOP  ,                                           00641400
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00641500
                      AIF   (K'&XPAGEABLE GT 0).ZG56E  VALID ARG        00641600
                      AIF   (T'&PAGEABLE EQ 'O').ZG56D  OMITTED         00641700
&ZASYSLNDX            SETA  0                                           00641800
.ZG56A                ANOP  ,           POSITIONAL MACRO KEY            00641900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00642000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG56C            00642100
&ZTLC                 SETC 'PAGEABLE'                                   00642200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG56A   00642300
.ZG56B                ANOP  ,                                           00642400
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00642500
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        00642600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00642700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00642800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00642900
                      AGO   .ZG56E                                      00643000
.ZG56C                ANOP  ,                                           00643100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00643200
&ZMS                  SETC  '"PAGEABLE='                                00643300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00643400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00643500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00643600
&ZMS                  SETC  '&ZMS "YES"'                                00643700
&ZMS                  SETC  '&ZMS OR "NO".'                             00643800
                      MNOTE 8,' &ZMS '                                  00643900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00644000
                      AGO   .ZG56E                                      00644100
.ZG56D                ANOP  ,                                           00644200
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00644300
.ZG56E                ANOP  ,                                           00644400
.*----------------------------------------------------------------***   00644500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00644600
                      AIF   (N'&BUFALET LE 1).ZG58A  CK NUM             00644700
&ZMS                  SETC  '"BUFALET='                                 00644800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00644900
&ZMS                  SETC  '&ZMS "BUFALET"'                            00645000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00645100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00645200
.ZG58A                ANOP  ,                                           00645300
.*-------------------------------------------------------------------   00645400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00645500
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   00645600
&XBUFALET             SETC  'NO_BUFALET'                                00645700
                      AIF   (K'&BUFALET(1) LE 0).ZG58B  PARM            00645800
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           00645900
                      AIF   (N'&BUFALET GT 1).ZG58B  MULTI              00646000
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   00646100
.ZG58B                ANOP  ,                                           00646200
.*-------------------------------------------------------------------   00646300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00646400
                      AIF   (K'&ZXBUFALET LE 0).ZG58R  NOT I/O          00646500
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG58R                      00646600
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG58R             00646700
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                00646800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                00646900
                      AIF   (K'&ZCGPR GT 2).ZG58Q                       00647000
                      AIF   ('&ZCGPR' EQ '0').ZG58Q                     00647100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00647200
                      AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME   00647300
.ZG58P                ANOP  ,                                           00647400
                      AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC        00647500
                      AIF   ('&ZCGPR' LT '2').ZG58Q                     00647600
                      AIF   ('&ZCGPR' LE '12').ZG58R                    00647700
.ZG58Q                ANOP  ,                                           00647800
&ZMS                  SETC  '"BUFALET='                                 00647900
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00648000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00648100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00648200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00648300
.ZG58R                ANOP  ,                                           00648400
.*------------------------------------------------------------------    00648500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00648600
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            00648700
.*-------------------------------------------------------------------   00648800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00648900
.ZG62                 ANOP  ,                                           00649000
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG62A              00649100
&ZTLC                 SETC '31'                                         00649200
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG63         00649300
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     00649400
                      AIF   (N'&BUFADDRSIZE LE 1).ZG62A  CK NUM         00649500
&ZMS                  SETC  '"BUFADDRSIZE='                             00649600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00649700
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00649800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00649900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00650000
.ZG62A                ANOP  ,                                           00650100
.*-------------------------------------------------------------------   00650200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00650300
.ZG63                 ANOP  ,                                           00650400
&ZTLC                 SETC '64'                                         00650500
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG64         00650600
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     00650700
                      AIF   (N'&BUFADDRSIZE LE 1).ZG63A  CK NUM         00650800
&ZMS                  SETC  '"BUFADDRSIZE='                             00650900
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00651000
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00651100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00651200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00651300
.ZG63A                ANOP  ,                                           00651400
.*------------------------------------------------------------------    00651500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00651600
.ZG64                 ANOP  ,                                           00651700
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   00651800
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG64E  VALID ARG     00651900
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG64D  OMITTED      00652000
&ZASYSLNDX            SETA  0                                           00652100
.ZG64A                ANOP  ,           POSITIONAL MACRO KEY            00652200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00652300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG64C            00652400
&ZTLC                 SETC 'BUFADDRSIZE'                                00652500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG64A   00652600
.ZG64B                ANOP  ,                                           00652700
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00652800
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     00652900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00653000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00653100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00653200
                      AGO   .ZG64E                                      00653300
.ZG64C                ANOP  ,                                           00653400
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00653500
&ZMS                  SETC  '"BUFADDRSIZE='                             00653600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00653700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00653800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00653900
&ZMS                  SETC  '&ZMS "31"'                                 00654000
&ZMS                  SETC  '&ZMS OR "64".'                             00654100
                      MNOTE 8,' &ZMS '                                  00654200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00654300
                      AGO   .ZG64E                                      00654400
.ZG64D                ANOP  ,                                           00654500
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             00654600
.ZG64E                ANOP  ,                                           00654700
.*-------------------------------------------------------------------   00654800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00654900
.ZG65                 ANOP  ,                                           00655000
&ZTLC                 SETC 'REAL'                                       00655100
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG71         00655200
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     00655300
                      AIF   (N'&BUFADDRTYPE LE 1).ZG65A  CK NUM         00655400
&ZMS                  SETC  '"BUFADDRTYPE='                             00655500
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00655600
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00655700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00655800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00655900
.ZG65A                ANOP  ,                                           00656000
.*------------------------------------------------------------------    00656100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00656200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00656300
.ZG65A0               AIF   (K'&PAGEABLE LE 0).ZG65A1  OK               00656400
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00656500
.ZG65A1               AIF   (K'&BUFSTGKEY LE 0).ZG65A2  OK              00656600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00656700
.ZG65A2               AIF   (K'&BUFALET LE 0).ZG65A3  OK                00656800
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00656900
.ZG65A3               AIF   (K'&ZCVAL LE 0).ZG65A4  OK                  00657000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00657100
&ZMS                  SETC  '"BUFADDRTYPE'                              00657200
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00657300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00657400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00657500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00657600
.ZG65A4               ANOP  ,                                           00657700
.*------------------------------------------------------------------    00657800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00657900
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            00658000
.*-------------------------------------------------------------------   00658100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00658200
.ZG68                 ANOP  ,                                           00658300
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG68A              00658400
&ZTLC                 SETC '31'                                         00658500
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG69         00658600
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     00658700
                      AIF   (N'&BUFADDRSIZE LE 1).ZG68A  CK NUM         00658800
&ZMS                  SETC  '"BUFADDRSIZE='                             00658900
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00659000
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00659100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00659200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00659300
.ZG68A                ANOP  ,                                           00659400
.*-------------------------------------------------------------------   00659500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00659600
.ZG69                 ANOP  ,                                           00659700
&ZTLC                 SETC '64'                                         00659800
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG70         00659900
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     00660000
                      AIF   (N'&BUFADDRSIZE LE 1).ZG69A  CK NUM         00660100
&ZMS                  SETC  '"BUFADDRSIZE='                             00660200
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00660300
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00660400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00660500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00660600
.ZG69A                ANOP  ,                                           00660700
.*------------------------------------------------------------------    00660800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00660900
.ZG70                 ANOP  ,                                           00661000
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   00661100
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG70E  VALID ARG     00661200
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG70D  OMITTED      00661300
&ZASYSLNDX            SETA  0                                           00661400
.ZG70A                ANOP  ,           POSITIONAL MACRO KEY            00661500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00661600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG70C            00661700
&ZTLC                 SETC 'BUFADDRSIZE'                                00661800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG70A   00661900
.ZG70B                ANOP  ,                                           00662000
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00662100
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     00662200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00662300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00662400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00662500
                      AGO   .ZG70E                                      00662600
.ZG70C                ANOP  ,                                           00662700
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00662800
&ZMS                  SETC  '"BUFADDRSIZE='                             00662900
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00663000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00663100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00663200
&ZMS                  SETC  '&ZMS "31"'                                 00663300
&ZMS                  SETC  '&ZMS OR "64".'                             00663400
                      MNOTE 8,' &ZMS '                                  00663500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00663600
                      AGO   .ZG70E                                      00663700
.ZG70D                ANOP  ,                                           00663800
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             00663900
.ZG70E                ANOP  ,                                           00664000
.*------------------------------------------------------------------    00664100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00664200
.ZG71                 ANOP  ,                                           00664300
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   00664400
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG71E  VALID ARG     00664500
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG71D  OMITTED      00664600
&ZASYSLNDX            SETA  0                                           00664700
.ZG71A                ANOP  ,           POSITIONAL MACRO KEY            00664800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00664900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG71C            00665000
&ZTLC                 SETC 'BUFADDRTYPE'                                00665100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG71A   00665200
.ZG71B                ANOP  ,                                           00665300
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00665400
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     00665500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00665600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00665700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00665800
                      AGO   .ZG71E                                      00665900
.ZG71C                ANOP  ,                                           00666000
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00666100
&ZMS                  SETC  '"BUFADDRTYPE='                             00666200
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00666300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00666400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00666500
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            00666600
&ZMS                  SETC  '&ZMS OR "REAL".'                           00666700
                      MNOTE 8,' &ZMS '                                  00666800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00666900
                      AGO   .ZG71E                                      00667000
.ZG71D                ANOP  ,                                           00667100
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             00667200
.ZG71E                ANOP  ,                                           00667300
.*-------------------------------------------------------------------   00667400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00667500
.ZG72ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG81ZY                        00667600
.*-------------------------------------------------------------------   00667700
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00667800
&ZCVAL                SETC ''           ERROR KEY FIELD                 00667900
.ZG72I0               AIF   (K'&BUFADDRTYPE LE 0).ZG72I1                00668000
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         00668100
.ZG72I1               AIF   (K'&BUFALET LE 0).ZG72I2                    00668200
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          00668300
.ZG72I2               AIF   (K'&BUFADDRSIZE LE 0).ZG72I3                00668400
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         00668500
.ZG72I3               AIF   (K'&ZCVAL LE 0).ZG72J  KEY                  00668600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00668700
&ZMS                  SETC  '"BUFFER'                                   00668800
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00668900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00669000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00669100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00669200
.ZG72J                ANOP  ,                                           00669300
.*-------------------------------------------------------------------   00669400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00669500
                      AIF   (K'&ZXBUFFER LE 0).ZG72R  NOT I/O           00669600
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG72R              00669700
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  00669800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                00669900
                      AIF   (K'&ZCGPR GT 2).ZG72Q                       00670000
                      AIF   ('&ZCGPR' EQ '0').ZG72Q                     00670100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00670200
                      AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME   00670300
.ZG72P                ANOP  ,                                           00670400
                      AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC        00670500
                      AIF   ('&ZCGPR' LT '2').ZG72Q                     00670600
                      AIF   ('&ZCGPR' LE '12').ZG72R                    00670700
.ZG72Q                ANOP  ,                                           00670800
&ZMS                  SETC  '"BUFFER='                                  00670900
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00671000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00671100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00671200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00671300
.ZG72R                ANOP  ,                                           00671400
.*------------------------------------------------------------------    00671500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00671600
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00671700
.*-------------------------------------------------------------------   00671800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00671900
.ZG75                 ANOP  ,                                           00672000
                      AIF   (K'&PAGEABLE(1) LE 0).ZG75A                 00672100
&ZTLC                 SETC 'YES'                                        00672200
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG79            00672300
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00672400
                      AIF   (N'&PAGEABLE LE 1).ZG75A  CK NUM            00672500
&ZMS                  SETC  '"PAGEABLE='                                00672600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00672700
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00672800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00672900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00673000
.ZG75A                ANOP  ,                                           00673100
.*----------------------------------------------------------------***   00673200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00673300
                      AIF   (N'&BUFSTGKEY LE 1).ZG77A  CK NUM           00673400
&ZMS                  SETC  '"BUFSTGKEY='                               00673500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00673600
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00673700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00673800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00673900
.ZG77A                ANOP  ,                                           00674000
.*-------------------------------------------------------------------   00674100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00674200
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00674300
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00674400
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG77B  PARM          00674500
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00674600
                      AIF   (N'&BUFSTGKEY GT 1).ZG77B  MULTI            00674700
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00674800
.ZG77B                ANOP  ,                                           00674900
.*-------------------------------------------------------------------   00675000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00675100
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG77R  NOT I/O        00675200
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG77R                   00675300
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG77R           00675400
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00675500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG77P                00675600
                      AIF   (K'&ZCGPR GT 2).ZG77Q                       00675700
                      AIF   ('&ZCGPR' EQ '0').ZG77Q                     00675800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00675900
                      AIF   (T'&ZCGPR NE 'N').ZG77Q  INVALID REG NAME   00676000
.ZG77P                ANOP  ,                                           00676100
                      AIF   (T'&ZCGPR NE 'N').ZG77R  NON NUMERIC        00676200
                      AIF   ('&ZCGPR' LT '2').ZG77Q                     00676300
                      AIF   ('&ZCGPR' LE '12').ZG77R                    00676400
.ZG77Q                ANOP  ,                                           00676500
&ZMS                  SETC  '"BUFSTGKEY='                               00676600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00676700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00676800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00676900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00677000
.ZG77R                ANOP  ,                                           00677100
.*-------------------------------------------------------------------   00677200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00677300
.ZG79                 ANOP  ,                                           00677400
&ZTLC                 SETC 'NO'                                         00677500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG80            00677600
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00677700
                      AIF   (N'&PAGEABLE LE 1).ZG79A  CK NUM            00677800
&ZMS                  SETC  '"PAGEABLE='                                00677900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00678000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00678100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00678200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00678300
.ZG79A                ANOP  ,                                           00678400
.*------------------------------------------------------------------    00678500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00678600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00678700
.ZG79A0               AIF   (K'&BUFSTGKEY LE 0).ZG79A1  OK              00678800
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00678900
.ZG79A1               AIF   (K'&ZCVAL LE 0).ZG79A2  OK                  00679000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00679100
&ZMS                  SETC  '"PAGEABLE'                                 00679200
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00679300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00679400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00679500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00679600
.ZG79A2               ANOP  ,                                           00679700
.*------------------------------------------------------------------    00679800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00679900
.ZG80                 ANOP  ,                                           00680000
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00680100
                      AIF   (K'&XPAGEABLE GT 0).ZG80E  VALID ARG        00680200
                      AIF   (T'&PAGEABLE EQ 'O').ZG80D  OMITTED         00680300
&ZASYSLNDX            SETA  0                                           00680400
.ZG80A                ANOP  ,           POSITIONAL MACRO KEY            00680500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00680600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG80C            00680700
&ZTLC                 SETC 'PAGEABLE'                                   00680800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG80A   00680900
.ZG80B                ANOP  ,                                           00681000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00681100
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        00681200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00681300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00681400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00681500
                      AGO   .ZG80E                                      00681600
.ZG80C                ANOP  ,                                           00681700
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00681800
&ZMS                  SETC  '"PAGEABLE='                                00681900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00682000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00682100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00682200
&ZMS                  SETC  '&ZMS "YES"'                                00682300
&ZMS                  SETC  '&ZMS OR "NO".'                             00682400
                      MNOTE 8,' &ZMS '                                  00682500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00682600
                      AGO   .ZG80E                                      00682700
.ZG80D                ANOP  ,                                           00682800
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00682900
.ZG80E                ANOP  ,                                           00683000
.*-------------------------------------------------------------------   00683100
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00683200
.ZG81ZY               ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00683300
.*-------------------------------------------------------------------   00683400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00683500
.ZG82                 ANOP  ,                                           00683600
&ZTLC                 SETC 'WRITE_LCONTROLS'                            00683700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG155            00683800
&XREQUEST             SETC  'WRITE_LCONTROLS'   SET KEYWORD             00683900
                      AIF   (N'&REQUEST LE 1).ZG82A  CK NUM             00684000
&ZMS                  SETC  '"REQUEST='                                 00684100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00684200
&ZMS                  SETC  '&ZMS "REQUEST"'                            00684300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00684400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00684500
.ZG82A                ANOP  ,                                           00684600
.*------------------------------------------------------------------    00684700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00684800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00684900
.ZG82A0               AIF   (K'&LOCKINDEX LE 0).ZG82A1  OK              00685000
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00685100
.ZG82A1               AIF   (K'&LOCKOPER LE 0).ZG82A2  OK               00685200
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00685300
.ZG82A2               AIF   (K'&LOCKMODE LE 0).ZG82A3  OK               00685400
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00685500
.ZG82A3               AIF   (K'&LOCKCOMP LE 0).ZG82A4  OK               00685600
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00685700
.ZG82A4               AIF   (K'&LOCKDATA LE 0).ZG82A5  OK               00685800
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00685900
.ZG82A5               AIF   (K'&BUFLIST LE 0).ZG82A6  OK                00686000
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00686100
.ZG82A6               AIF   (K'&BUFADDRTYPE LE 0).ZG82A7  OK            00686200
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00686300
.ZG82A7               AIF   (K'&PAGEABLE LE 0).ZG82A8  OK               00686400
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00686500
.ZG82A8               AIF   (K'&BUFSTGKEY LE 0).ZG82A9  OK              00686600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00686700
.ZG82A9               AIF   (K'&BUFALET LE 0).ZG82A10  OK               00686800
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00686900
.ZG82A10              AIF   (K'&BUFADDRSIZE LE 0).ZG82A11  OK           00687000
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00687100
.ZG82A11              AIF   (K'&BUFFER LE 0).ZG82A12  OK                00687200
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00687300
.ZG82A12              AIF   (K'&KEYTYPE LE 0).ZG82A13  OK               00687400
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00687500
.ZG82A13              AIF   (K'&ENTRYKEY LE 0).ZG82A14  OK              00687600
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00687700
.ZG82A14              AIF   (K'&SECONDARYKEY LE 0).ZG82A15  OK          00687800
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00687900
.ZG82A15              AIF   (K'&ACTION LE 0).ZG82A16  OK                00688000
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00688100
.ZG82A16              AIF   (K'&VECTORINDEX LE 0).ZG82A17  OK           00688200
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00688300
.ZG82A17              AIF   (K'&DRIVEEXIT LE 0).ZG82A18  OK             00688400
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00688500
.ZG82A18              AIF   (K'&MONITORTYPE LE 0).ZG82A19  OK           00688600
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00688700
.ZG82A19              AIF   (K'&NOTIFICATION LE 0).ZG82A20  OK          00688800
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00688900
.ZG82A20              AIF   (K'&UNC LE 0).ZG82A21  OK                   00689000
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00689100
.ZG82A21              AIF   (K'&STARTINDEX LE 0).ZG82A22  OK            00689200
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00689300
.ZG82A22              AIF   (K'&ENDINDEX LE 0).ZG82A23  OK              00689400
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00689500
.ZG82A23              AIF   (K'&MOSVECTOR LE 0).ZG82A24  OK             00689600
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00689700
.ZG82A24              AIF   (K'&BUFNUM LE 0).ZG82A25  OK                00689800
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00689900
.ZG82A25              AIF   (K'&BUFINCRNUM LE 0).ZG82A26  OK            00690000
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00690100
.ZG82A26              AIF   (K'&BUFSIZE LE 0).ZG82A27  OK               00690200
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00690300
.ZG82A27              AIF   (K'&ZCVAL LE 0).ZG82A28  OK                 00690400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00690500
                      AIF  (K'&ZCVAL LE 160).ZG82A28A                   00690600
&ZCVAL                SETC '&ZCVAL'(1,160)                              00690700
&ZCVAL                SETC '&ZCVAL....'                                 00690800
.ZG82A28A             ANOP                                              00690900
&ZMS                  SETC  '"REQUEST'                                  00691000
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00691100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00691200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00691300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00691400
.ZG82A28              ANOP  ,                                           00691500
.*----------------------------------------------------------------***   00691600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00691700
                      AIF   (N'&LISTNUM LE 1).ZG84A  CK NUM             00691800
&ZMS                  SETC  '"LISTNUM='                                 00691900
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00692000
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00692100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00692200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00692300
.ZG84A                ANOP  ,                                           00692400
.*-------------------------------------------------------------------   00692500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00692600
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00692700
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00692800
                      AIF   (N'&LISTNUM GT 1).ZG84B  MULTI              00692900
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00693000
.ZG84B                AIF   (K'&LISTNUM(1) GT 0).ZG84C                  00693100
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00693200
&ZMS                  SETC  ' '                                         00693300
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00693400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00693500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00693600
.ZG84C                ANOP  ,                                           00693700
.*-------------------------------------------------------------------   00693800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00693900
                      AIF   (K'&ZXLISTNUM LE 0).ZG84R  NOT I/O          00694000
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG84R             00694100
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00694200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG84P                00694300
                      AIF   (K'&ZCGPR GT 2).ZG84Q                       00694400
                      AIF   ('&ZCGPR' EQ '0').ZG84Q                     00694500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00694600
                      AIF   (T'&ZCGPR NE 'N').ZG84Q  INVALID REG NAME   00694700
.ZG84P                ANOP  ,                                           00694800
                      AIF   (T'&ZCGPR NE 'N').ZG84R  NON NUMERIC        00694900
                      AIF   ('&ZCGPR' LT '2').ZG84Q                     00695000
                      AIF   ('&ZCGPR' LE '12').ZG84R                    00695100
.ZG84Q                ANOP  ,                                           00695200
&ZMS                  SETC  '"LISTNUM='                                 00695300
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00695400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00695500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00695600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00695700
.ZG84R                ANOP  ,                                           00695800
.*----------------------------------------------------------------***   00695900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00696000
                      AIF   (N'&AUTHCOMP LE 1).ZG87A  CK NUM            00696100
&ZMS                  SETC  '"AUTHCOMP='                                00696200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           00696300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           00696400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00696500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00696600
.ZG87A                ANOP  ,                                           00696700
.*-------------------------------------------------------------------   00696800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00696900
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00697000
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           00697100
                      AIF   (N'&AUTHCOMP GT 1).ZG87B  MULTI             00697200
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           00697300
.ZG87B                AIF   (K'&AUTHCOMP(1) GT 0).ZG87C                 00697400
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 00697500
&ZMS                  SETC  ' '                                         00697600
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               00697700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00697800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00697900
.ZG87C                ANOP  ,                                           00698000
.*-------------------------------------------------------------------   00698100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00698200
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG87R  NOT I/O         00698300
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG87R            00698400
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              00698500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                00698600
                      AIF   (K'&ZCGPR GT 2).ZG87Q                       00698700
                      AIF   ('&ZCGPR' EQ '0').ZG87Q                     00698800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00698900
                      AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME   00699000
.ZG87P                ANOP  ,                                           00699100
                      AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC        00699200
                      AIF   ('&ZCGPR' LT '2').ZG87Q                     00699300
                      AIF   ('&ZCGPR' LE '12').ZG87R                    00699400
.ZG87Q                ANOP  ,                                           00699500
&ZMS                  SETC  '"AUTHCOMP='                                00699600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           00699700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00699800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00699900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00700000
.ZG87R                ANOP  ,                                           00700100
.*----------------------------------------------------------------***   00700200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00700300
                      AIF   (N'&NEWAUTH LE 1).ZG90A  CK NUM             00700400
&ZMS                  SETC  '"NEWAUTH='                                 00700500
&ZMS                  SETC  '&ZMS.&NEWAUTH"'                            00700600
&ZMS                  SETC  '&ZMS "NEWAUTH"'                            00700700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00700800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00700900
.ZG90A                ANOP  ,                                           00701000
.*-------------------------------------------------------------------   00701100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00701200
&ZXNEWAUTH            SETC  'INPUT'     SET IN/OUTPUT                   00701300
&XNEWAUTH             SETC  'NO_NEWAUTH'                                00701400
                      AIF   (K'&NEWAUTH(1) LE 0).ZG90B  PARM            00701500
&XNEWAUTH             SETC  '&NEWAUTH(1)'       SET XVARIABLE           00701600
                      AIF   (N'&NEWAUTH GT 1).ZG90B  MULTI              00701700
&XNEWAUTH             SETC  '&NEWAUTH'  SET XVARIABLE                   00701800
.ZG90B                ANOP  ,                                           00701900
.*-------------------------------------------------------------------   00702000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00702100
                      AIF   (K'&ZXNEWAUTH LE 0).ZG90R  NOT I/O          00702200
         AIF   ('&XNEWAUTH' EQ 'NO_NEWAUTH').ZG90R                      00702300
                      AIF   ('&XNEWAUTH'(1,1) NE '(').ZG90R             00702400
&ZCGPR                SETC  '&XNEWAUTH'(2,K'&XNEWAUTH-2)                00702500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                00702600
                      AIF   (K'&ZCGPR GT 2).ZG90Q                       00702700
                      AIF   ('&ZCGPR' EQ '0').ZG90Q                     00702800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00702900
                      AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME   00703000
.ZG90P                ANOP  ,                                           00703100
                      AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC        00703200
                      AIF   ('&ZCGPR' LT '2').ZG90Q                     00703300
                      AIF   ('&ZCGPR' LE '12').ZG90R                    00703400
.ZG90Q                ANOP  ,                                           00703500
&ZMS                  SETC  '"NEWAUTH='                                 00703600
&ZMS                  SETC  '&ZMS.&NEWAUTH"'                            00703700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00703800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00703900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00704000
.ZG90R                ANOP  ,                                           00704100
.*----------------------------------------------------------------***   00704200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00704300
                      AIF   (N'&LISTLIMIT LE 1).ZG93A  CK NUM           00704400
&ZMS                  SETC  '"LISTLIMIT='                               00704500
&ZMS                  SETC  '&ZMS.&LISTLIMIT"'                          00704600
&ZMS                  SETC  '&ZMS "LISTLIMIT"'                          00704700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00704800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00704900
.ZG93A                ANOP  ,                                           00705000
.*-------------------------------------------------------------------   00705100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00705200
&ZXLISTLIMIT          SETC  'INPUT'     SET IN/OUTPUT                   00705300
&XLISTLIMIT           SETC  'NO_LISTLIMIT'                              00705400
                      AIF   (K'&LISTLIMIT(1) LE 0).ZG93B  PARM          00705500
&XLISTLIMIT           SETC  '&LISTLIMIT(1)'     SET XVARIABLE           00705600
                      AIF   (N'&LISTLIMIT GT 1).ZG93B  MULTI            00705700
&XLISTLIMIT           SETC  '&LISTLIMIT'        SET XVARIABLE           00705800
.ZG93B                ANOP  ,                                           00705900
.*-------------------------------------------------------------------   00706000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00706100
                      AIF   (K'&ZXLISTLIMIT LE 0).ZG93R  NOT I/O        00706200
         AIF   ('&XLISTLIMIT' EQ 'NO_LISTLIMIT').ZG93R                  00706300
                      AIF   ('&XLISTLIMIT'(1,1) NE '(').ZG93R           00706400
&ZCGPR                SETC  '&XLISTLIMIT'(2,K'&XLISTLIMIT-2)            00706500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG93P                00706600
                      AIF   (K'&ZCGPR GT 2).ZG93Q                       00706700
                      AIF   ('&ZCGPR' EQ '0').ZG93Q                     00706800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00706900
                      AIF   (T'&ZCGPR NE 'N').ZG93Q  INVALID REG NAME   00707000
.ZG93P                ANOP  ,                                           00707100
                      AIF   (T'&ZCGPR NE 'N').ZG93R  NON NUMERIC        00707200
                      AIF   ('&ZCGPR' LT '2').ZG93Q                     00707300
                      AIF   ('&ZCGPR' LE '12').ZG93R                    00707400
.ZG93Q                ANOP  ,                                           00707500
&ZMS                  SETC  '"LISTLIMIT='                               00707600
&ZMS                  SETC  '&ZMS.&LISTLIMIT"'                          00707700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00707800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00707900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00708000
.ZG93R                ANOP  ,                                           00708100
.*----------------------------------------------------------------***   00708200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00708300
                      AIF   (N'&LISTDESC LE 1).ZG96A  CK NUM            00708400
&ZMS                  SETC  '"LISTDESC='                                00708500
&ZMS                  SETC  '&ZMS.&LISTDESC"'                           00708600
&ZMS                  SETC  '&ZMS "LISTDESC"'                           00708700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00708800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00708900
.ZG96A                ANOP  ,                                           00709000
.*-------------------------------------------------------------------   00709100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00709200
&ZXLISTDESC           SETC  'INPUT'     SET IN/OUTPUT                   00709300
&XLISTDESC            SETC  'NO_LISTDESC'                               00709400
                      AIF   (K'&LISTDESC(1) LE 0).ZG96B  PARM           00709500
&XLISTDESC            SETC  '&LISTDESC(1)'      SET XVARIABLE           00709600
                      AIF   (N'&LISTDESC GT 1).ZG96B  MULTI             00709700
&XLISTDESC            SETC  '&LISTDESC'         SET XVARIABLE           00709800
.ZG96B                ANOP  ,                                           00709900
.*-------------------------------------------------------------------   00710000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00710100
                      AIF   (K'&ZXLISTDESC LE 0).ZG96R  NOT I/O         00710200
         AIF   ('&XLISTDESC' EQ 'NO_LISTDESC').ZG96R                    00710300
                      AIF   ('&XLISTDESC'(1,1) NE '(').ZG96R            00710400
&ZCGPR                SETC  '&XLISTDESC'(2,K'&XLISTDESC-2)              00710500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG96P                00710600
                      AIF   (K'&ZCGPR GT 2).ZG96Q                       00710700
                      AIF   ('&ZCGPR' EQ '0').ZG96Q                     00710800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00710900
                      AIF   (T'&ZCGPR NE 'N').ZG96Q  INVALID REG NAME   00711000
.ZG96P                ANOP  ,                                           00711100
                      AIF   (T'&ZCGPR NE 'N').ZG96R  NON NUMERIC        00711200
                      AIF   ('&ZCGPR' LT '2').ZG96Q                     00711300
                      AIF   ('&ZCGPR' LE '12').ZG96R                    00711400
.ZG96Q                ANOP  ,                                           00711500
&ZMS                  SETC  '"LISTDESC='                                00711600
&ZMS                  SETC  '&ZMS.&LISTDESC"'                           00711700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00711800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00711900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00712000
.ZG96R                ANOP  ,                                           00712100
.*----------------------------------------------------------------***   00712200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00712300
                      AIF   (N'&LISTKEY LE 1).ZG99A  CK NUM             00712400
&ZMS                  SETC  '"LISTKEY='                                 00712500
&ZMS                  SETC  '&ZMS.&LISTKEY"'                            00712600
&ZMS                  SETC  '&ZMS "LISTKEY"'                            00712700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00712800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00712900
.ZG99A                ANOP  ,                                           00713000
.*-------------------------------------------------------------------   00713100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00713200
&ZXLISTKEY            SETC  'INPUT'     SET IN/OUTPUT                   00713300
&XLISTKEY             SETC  'NO_LISTKEY'                                00713400
                      AIF   (K'&LISTKEY(1) LE 0).ZG99B  PARM            00713500
&XLISTKEY             SETC  '&LISTKEY(1)'       SET XVARIABLE           00713600
                      AIF   (N'&LISTKEY GT 1).ZG99B  MULTI              00713700
&XLISTKEY             SETC  '&LISTKEY'  SET XVARIABLE                   00713800
.ZG99B                ANOP  ,                                           00713900
.*-------------------------------------------------------------------   00714000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00714100
                      AIF   (K'&ZXLISTKEY LE 0).ZG99R  NOT I/O          00714200
         AIF   ('&XLISTKEY' EQ 'NO_LISTKEY').ZG99R                      00714300
                      AIF   ('&XLISTKEY'(1,1) NE '(').ZG99R             00714400
&ZCGPR                SETC  '&XLISTKEY'(2,K'&XLISTKEY-2)                00714500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                00714600
                      AIF   (K'&ZCGPR GT 2).ZG99Q                       00714700
                      AIF   ('&ZCGPR' EQ '0').ZG99Q                     00714800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00714900
                      AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME   00715000
.ZG99P                ANOP  ,                                           00715100
                      AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC        00715200
                      AIF   ('&ZCGPR' LT '2').ZG99Q                     00715300
                      AIF   ('&ZCGPR' LE '12').ZG99R                    00715400
.ZG99Q                ANOP  ,                                           00715500
&ZMS                  SETC  '"LISTKEY='                                 00715600
&ZMS                  SETC  '&ZMS.&LISTKEY"'                            00715700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00715800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00715900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00716000
.ZG99R                ANOP  ,                                           00716100
.*----------------------------------------------------------------***   00716200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00716300
                      AIF   (N'&MAXLISTKEY LE 1).ZG102A  CK NUM         00716400
&ZMS                  SETC  '"MAXLISTKEY='                              00716500
&ZMS                  SETC  '&ZMS.&MAXLISTKEY"'                         00716600
&ZMS                  SETC  '&ZMS "MAXLISTKEY"'                         00716700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00716800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00716900
.ZG102A               ANOP  ,                                           00717000
.*-------------------------------------------------------------------   00717100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00717200
&ZXMAXLISTKEY         SETC  'INPUT'     SET IN/OUTPUT                   00717300
&XMAXLISTKEY          SETC  'NO_MAXLISTKEY'                             00717400
                      AIF   (K'&MAXLISTKEY(1) LE 0).ZG102B  PARM        00717500
&XMAXLISTKEY          SETC  '&MAXLISTKEY(1)'    SET XVARIABLE           00717600
                      AIF   (N'&MAXLISTKEY GT 1).ZG102B  MULTI          00717700
&XMAXLISTKEY          SETC  '&MAXLISTKEY'       SET XVARIABLE           00717800
.ZG102B               ANOP  ,                                           00717900
.*-------------------------------------------------------------------   00718000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00718100
                      AIF   (K'&ZXMAXLISTKEY LE 0).ZG102R  NOT I/O      00718200
         AIF   ('&XMAXLISTKEY' EQ 'NO_MAXLISTKEY').ZG102R               00718300
                      AIF   ('&XMAXLISTKEY'(1,1) NE '(').ZG102R         00718400
&ZCGPR                SETC  '&XMAXLISTKEY'(2,K'&XMAXLISTKEY-2)          00718500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG102P               00718600
                      AIF   (K'&ZCGPR GT 2).ZG102Q                      00718700
                      AIF   ('&ZCGPR' EQ '0').ZG102Q                    00718800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00718900
                      AIF   (T'&ZCGPR NE 'N').ZG102Q  INVALID REG NAME  00719000
.ZG102P               ANOP  ,                                           00719100
                      AIF   (T'&ZCGPR NE 'N').ZG102R  NON NUMERIC       00719200
                      AIF   ('&ZCGPR' LT '2').ZG102Q                    00719300
                      AIF   ('&ZCGPR' LE '12').ZG102R                   00719400
.ZG102Q               ANOP  ,                                           00719500
&ZMS                  SETC  '"MAXLISTKEY='                              00719600
&ZMS                  SETC  '&ZMS.&MAXLISTKEY"'                         00719700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00719800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00719900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00720000
.ZG102R               ANOP  ,                                           00720100
.*----------------------------------------------------------------***   00720200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00720300
                      AIF   (N'&SETCURSOR LE 1).ZG105A  CK NUM          00720400
&ZMS                  SETC  '"SETCURSOR='                               00720500
&ZMS                  SETC  '&ZMS.&SETCURSOR"'                          00720600
&ZMS                  SETC  '&ZMS "SETCURSOR"'                          00720700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00720800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00720900
.ZG105A               ANOP  ,                                           00721000
.*-------------------------------------------------------------------   00721100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00721200
&XSETCURSOR           SETC  ''          INITIALIZE XVARIABLE            00721300
.ZG106A   AIF   ('&SETCURSOR(1)' NE 'NO_SETCURSOR').ZG107A              00721400
&XSETCURSOR           SETC  'NO_SETCURSOR'      SET KEYWORD             00721500
.*-------------------------------------------------------------------   00721600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00721700
.ZG107A   AIF   ('&SETCURSOR(1)' NE 'HEAD').ZG108A                      00721800
&XSETCURSOR           SETC  'HEAD'      SET KEYWORD                     00721900
.*-------------------------------------------------------------------   00722000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00722100
.ZG108A   AIF   ('&SETCURSOR(1)' NE 'TAIL').ZG109A                      00722200
&XSETCURSOR           SETC  'TAIL'      SET KEYWORD                     00722300
.*-------------------------------------------------------------------   00722400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00722500
.ZG109A               AIF   (K'&XSETCURSOR GT 0).ZG109C  KEYWORD        00722600
                      AIF   (K'&SETCURSOR(1) LE 0).ZG109B               00722700
&ZMS                  SETC  '"SETCURSOR='                               00722800
&ZMS                  SETC  '&ZMS.&SETCURSOR"'                          00722900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00723000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00723100
&ZMS                  SETC  '&ZMS "NO_SETCURSOR",'                      00723200
&ZMS                  SETC  '&ZMS "HEAD",'                              00723300
&ZMS                  SETC  '&ZMS OR "TAIL".'                           00723400
                      MNOTE 8,' &ZMS '                                  00723500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00723600
.ZG109B               ANOP  ,                                           00723700
&XSETCURSOR           SETC  'NO_SETCURSOR'      SET DEFAULT KEYWORD     00723800
.ZG109C               ANOP  ,                                           00723900
&ZXSETCURSOR          SETC  'INPUT'     SET IN/OUTPUT                   00724000
.*------------------------------------------------------------------    00724100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00724200
&XKEYRANGE            SETC  ''          INITIALIZE XVARIABLE            00724300
.*-------------------------------------------------------------------   00724400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00724500
.ZG112                ANOP  ,                                           00724600
                      AIF   (K'&KEYRANGE(1) LE 0).ZG112A                00724700
&ZTLC                 SETC 'NO_CHANGE'                                  00724800
                      AIF   ('&KEYRANGE(1)' NE '&ZTLC').ZG113           00724900
&XKEYRANGE            SETC  'NO_CHANGE'         SET KEYWORD             00725000
                      AIF   (N'&KEYRANGE LE 1).ZG112A  CK NUM           00725100
&ZMS                  SETC  '"KEYRANGE='                                00725200
&ZMS                  SETC  '&ZMS.&KEYRANGE"'                           00725300
&ZMS                  SETC  '&ZMS "KEYRANGE"'                           00725400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00725500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00725600
.ZG112A               ANOP  ,                                           00725700
.*------------------------------------------------------------------    00725800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00725900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00726000
.ZG112A0              AIF   (K'&KEYRANGESTART LE 0).ZG112A1  OK         00726100
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00726200
.ZG112A1              AIF   (K'&KEYRANGEEND LE 0).ZG112A2  OK           00726300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00726400
.ZG112A2              AIF   (K'&ZCVAL LE 0).ZG112A3  OK                 00726500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00726600
&ZMS                  SETC  '"KEYRANGE'                                 00726700
&ZMS                  SETC  '&ZMS.=&KEYRANGE"'                          00726800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00726900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00727000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00727100
.ZG112A3              ANOP  ,                                           00727200
.*-------------------------------------------------------------------   00727300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00727400
.ZG113                ANOP  ,                                           00727500
&ZTLC                 SETC 'SET'                                        00727600
                      AIF   ('&KEYRANGE(1)' NE '&ZTLC').ZG120           00727700
&XKEYRANGE            SETC  'SET'       SET KEYWORD                     00727800
                      AIF   (N'&KEYRANGE LE 1).ZG113A  CK NUM           00727900
&ZMS                  SETC  '"KEYRANGE='                                00728000
&ZMS                  SETC  '&ZMS.&KEYRANGE"'                           00728100
&ZMS                  SETC  '&ZMS "KEYRANGE"'                           00728200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00728300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00728400
.ZG113A               ANOP  ,                                           00728500
.*----------------------------------------------------------------***   00728600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00728700
                      AIF   (N'&KEYRANGESTART LE 1).ZG115A  CK NUM      00728800
&ZMS                  SETC  '"KEYRANGESTART='                           00728900
&ZMS                  SETC  '&ZMS.&KEYRANGESTART"'                      00729000
&ZMS                  SETC  '&ZMS "KEYRANGESTART"'                      00729100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00729200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00729300
.ZG115A               ANOP  ,                                           00729400
.*-------------------------------------------------------------------   00729500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00729600
&ZXKEYRANGESTART      SETC  'INPUT'     SET IN/OUTPUT                   00729700
&XKEYRANGESTART       SETC  '&KEYRANGESTART(1)'  SET XVARIABLE          00729800
                      AIF   (N'&KEYRANGESTART GT 1).ZG115B  MULTI       00729900
&XKEYRANGESTART       SETC  '&KEYRANGESTART'    SET XVARIABLE           00730000
.ZG115B               AIF   (K'&KEYRANGESTART(1) GT 0).ZG115C           00730100
&ZXKEYRANGESTART      SETC  ''          RESET IN/OUTPUT                 00730200
&ZMS                  SETC  'WHEN "SET" IS SPECIFIED'                   00730300
&ZMS                  SETC  '&ZMS , "KEYRANGESTART" KEY AND ITS'        00730400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00730500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00730600
.ZG115C               ANOP  ,                                           00730700
.*-------------------------------------------------------------------   00730800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00730900
                      AIF   (K'&ZXKEYRANGESTART LE 0).ZG115R  NOT I/O   00731000
                      AIF   ('&XKEYRANGESTART'(1,1) NE '(').ZG115R      00731100
&ZCGPR                SETC  '&XKEYRANGESTART'(2,K'&XKEYRANGESTART-2)    00731200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG115P               00731300
                      AIF   (K'&ZCGPR GT 2).ZG115Q                      00731400
                      AIF   ('&ZCGPR' EQ '0').ZG115Q                    00731500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00731600
                      AIF   (T'&ZCGPR NE 'N').ZG115Q  INVALID REG NAME  00731700
.ZG115P               ANOP  ,                                           00731800
                      AIF   (T'&ZCGPR NE 'N').ZG115R  NON NUMERIC       00731900
                      AIF   ('&ZCGPR' LT '2').ZG115Q                    00732000
                      AIF   ('&ZCGPR' LE '12').ZG115R                   00732100
.ZG115Q               ANOP  ,                                           00732200
&ZMS                  SETC  '"KEYRANGESTART='                           00732300
&ZMS                  SETC  '&ZMS.&KEYRANGESTART"'                      00732400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00732500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00732600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00732700
.ZG115R               ANOP  ,                                           00732800
.*----------------------------------------------------------------***   00732900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00733000
                      AIF   (N'&KEYRANGEEND LE 1).ZG118A  CK NUM        00733100
&ZMS                  SETC  '"KEYRANGEEND='                             00733200
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        00733300
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        00733400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00733500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00733600
.ZG118A               ANOP  ,                                           00733700
.*-------------------------------------------------------------------   00733800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00733900
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   00734000
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           00734100
                      AIF   (N'&KEYRANGEEND GT 1).ZG118B  MULTI         00734200
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           00734300
.ZG118B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG118C             00734400
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 00734500
&ZMS                  SETC  'WHEN "SET" IS SPECIFIED'                   00734600
&ZMS                  SETC  '&ZMS , "KEYRANGEEND" KEY AND ITS'          00734700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00734800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00734900
.ZG118C               ANOP  ,                                           00735000
.*-------------------------------------------------------------------   00735100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00735200
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG118R  NOT I/O     00735300
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG118R        00735400
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        00735500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG118P               00735600
                      AIF   (K'&ZCGPR GT 2).ZG118Q                      00735700
                      AIF   ('&ZCGPR' EQ '0').ZG118Q                    00735800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00735900
                      AIF   (T'&ZCGPR NE 'N').ZG118Q  INVALID REG NAME  00736000
.ZG118P               ANOP  ,                                           00736100
                      AIF   (T'&ZCGPR NE 'N').ZG118R  NON NUMERIC       00736200
                      AIF   ('&ZCGPR' LT '2').ZG118Q                    00736300
                      AIF   ('&ZCGPR' LE '12').ZG118R                   00736400
.ZG118Q               ANOP  ,                                           00736500
&ZMS                  SETC  '"KEYRANGEEND='                             00736600
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        00736700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00736800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00736900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00737000
.ZG118R               ANOP  ,                                           00737100
.*------------------------------------------------------------------    00737200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00737300
.ZG120                ANOP  ,                                           00737400
&ZXKEYRANGE           SETC  'INPUT'     SET IN/OUTPUT                   00737500
                      AIF   (K'&XKEYRANGE GT 0).ZG120E  VALID ARG       00737600
                      AIF   (T'&KEYRANGE EQ 'O').ZG120D  OMITTED        00737700
&ZASYSLNDX            SETA  0                                           00737800
.ZG120A               ANOP  ,           POSITIONAL MACRO KEY            00737900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00738000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG120C           00738100
&ZTLC                 SETC 'KEYRANGE'                                   00738200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG120A  00738300
.ZG120B               ANOP  ,                                           00738400
&ZXKEYRANGE           SETC  ''          RESET IN/OUTPUT                 00738500
&ZMS                  SETC  'THE "KEYRANGE" KEY'                        00738600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00738700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00738800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00738900
                      AGO   .ZG120E                                     00739000
.ZG120C               ANOP  ,                                           00739100
&ZXKEYRANGE           SETC  ''          RESET IN/OUTPUT                 00739200
&ZMS                  SETC  '"KEYRANGE='                                00739300
&ZMS                  SETC  '&ZMS.&KEYRANGE"'                           00739400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00739500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00739600
&ZMS                  SETC  '&ZMS "NO_CHANGE"'                          00739700
&ZMS                  SETC  '&ZMS OR "SET".'                            00739800
                      MNOTE 8,' &ZMS '                                  00739900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00740000
                      AGO   .ZG120E                                     00740100
.ZG120D               ANOP  ,                                           00740200
&XKEYRANGE            SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00740300
.ZG120E               ANOP  ,                                           00740400
.*------------------------------------------------------------------    00740500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00740600
&XKEYRANGESTATE       SETC  ''          INITIALIZE XVARIABLE            00740700
.*-------------------------------------------------------------------   00740800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00740900
.ZG123                ANOP  ,                                           00741000
                      AIF   (K'&KEYRANGESTATE(1) LE 0).ZG123A           00741100
&ZTLC                 SETC 'NO_CHANGE'                                  00741200
                      AIF   ('&KEYRANGESTATE(1)' NE '&ZTLC').ZG124      00741300
&XKEYRANGESTATE       SETC  'NO_CHANGE'         SET KEYWORD             00741400
                      AIF   (N'&KEYRANGESTATE LE 1).ZG123A  CK NUM      00741500
&ZMS                  SETC  '"KEYRANGESTATE='                           00741600
&ZMS                  SETC  '&ZMS.&KEYRANGESTATE"'                      00741700
&ZMS                  SETC  '&ZMS "KEYRANGESTATE"'                      00741800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00741900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00742000
.ZG123A               ANOP  ,                                           00742100
.*------------------------------------------------------------------    00742200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00742300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00742400
.ZG123A0              AIF   (K'&KREMPTY LE 0).ZG123A1  OK               00742500
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00742600
.ZG123A1              AIF   (K'&KRNOTEMPTY LE 0).ZG123A2  OK            00742700
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00742800
.ZG123A2              AIF   (K'&ZCVAL LE 0).ZG123A3  OK                 00742900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00743000
&ZMS                  SETC  '"KEYRANGESTATE'                            00743100
&ZMS                  SETC  '&ZMS.=&KEYRANGESTATE"'                     00743200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00743300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00743400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00743500
.ZG123A3              ANOP  ,                                           00743600
.*-------------------------------------------------------------------   00743700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00743800
.ZG124                ANOP  ,                                           00743900
&ZTLC                 SETC 'DEFINE'                                     00744000
                      AIF   ('&KEYRANGESTATE(1)' NE '&ZTLC').ZG131      00744100
&XKEYRANGESTATE       SETC  'DEFINE'    SET KEYWORD                     00744200
                      AIF   (N'&KEYRANGESTATE LE 1).ZG124A  CK NUM      00744300
&ZMS                  SETC  '"KEYRANGESTATE='                           00744400
&ZMS                  SETC  '&ZMS.&KEYRANGESTATE"'                      00744500
&ZMS                  SETC  '&ZMS "KEYRANGESTATE"'                      00744600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00744700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00744800
.ZG124A               ANOP  ,                                           00744900
.*----------------------------------------------------------------***   00745000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00745100
                      AIF   (N'&KREMPTY LE 1).ZG126A  CK NUM            00745200
&ZMS                  SETC  '"KREMPTY='                                 00745300
&ZMS                  SETC  '&ZMS.&KREMPTY"'                            00745400
&ZMS                  SETC  '&ZMS "KREMPTY"'                            00745500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00745600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00745700
.ZG126A               ANOP  ,                                           00745800
.*-------------------------------------------------------------------   00745900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00746000
&ZXKREMPTY            SETC  'INPUT'     SET IN/OUTPUT                   00746100
&XKREMPTY             SETC  '&KREMPTY(1)'       SET XVARIABLE           00746200
                      AIF   (N'&KREMPTY GT 1).ZG126B  MULTI             00746300
&XKREMPTY             SETC  '&KREMPTY'  SET XVARIABLE                   00746400
.ZG126B               AIF   (K'&KREMPTY(1) GT 0).ZG126C                 00746500
&ZXKREMPTY            SETC  ''          RESET IN/OUTPUT                 00746600
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'                00746700
&ZMS                  SETC  '&ZMS , "KREMPTY" KEY AND ITS'              00746800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00746900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00747000
.ZG126C               ANOP  ,                                           00747100
.*-------------------------------------------------------------------   00747200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00747300
                      AIF   (K'&ZXKREMPTY LE 0).ZG126R  NOT I/O         00747400
                      AIF   ('&XKREMPTY'(1,1) NE '(').ZG126R            00747500
&ZCGPR                SETC  '&XKREMPTY'(2,K'&XKREMPTY-2)                00747600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG126P               00747700
                      AIF   (K'&ZCGPR GT 2).ZG126Q                      00747800
                      AIF   ('&ZCGPR' EQ '0').ZG126Q                    00747900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00748000
                      AIF   (T'&ZCGPR NE 'N').ZG126Q  INVALID REG NAME  00748100
.ZG126P               ANOP  ,                                           00748200
                      AIF   (T'&ZCGPR NE 'N').ZG126R  NON NUMERIC       00748300
                      AIF   ('&ZCGPR' LT '2').ZG126Q                    00748400
                      AIF   ('&ZCGPR' LE '12').ZG126R                   00748500
.ZG126Q               ANOP  ,                                           00748600
&ZMS                  SETC  '"KREMPTY='                                 00748700
&ZMS                  SETC  '&ZMS.&KREMPTY"'                            00748800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00748900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00749000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00749100
.ZG126R               ANOP  ,                                           00749200
.*----------------------------------------------------------------***   00749300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00749400
                      AIF   (N'&KRNOTEMPTY LE 1).ZG129A  CK NUM         00749500
&ZMS                  SETC  '"KRNOTEMPTY='                              00749600
&ZMS                  SETC  '&ZMS.&KRNOTEMPTY"'                         00749700
&ZMS                  SETC  '&ZMS "KRNOTEMPTY"'                         00749800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00749900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00750000
.ZG129A               ANOP  ,                                           00750100
.*-------------------------------------------------------------------   00750200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00750300
&ZXKRNOTEMPTY         SETC  'INPUT'     SET IN/OUTPUT                   00750400
&XKRNOTEMPTY          SETC  '&KRNOTEMPTY(1)'    SET XVARIABLE           00750500
                      AIF   (N'&KRNOTEMPTY GT 1).ZG129B  MULTI          00750600
&XKRNOTEMPTY          SETC  '&KRNOTEMPTY'       SET XVARIABLE           00750700
.ZG129B               AIF   (K'&KRNOTEMPTY(1) GT 0).ZG129C              00750800
&ZXKRNOTEMPTY         SETC  ''          RESET IN/OUTPUT                 00750900
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'                00751000
&ZMS                  SETC  '&ZMS , "KRNOTEMPTY" KEY AND ITS'           00751100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00751200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00751300
.ZG129C               ANOP  ,                                           00751400
.*-------------------------------------------------------------------   00751500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00751600
                      AIF   (K'&ZXKRNOTEMPTY LE 0).ZG129R  NOT I/O      00751700
                      AIF   ('&XKRNOTEMPTY'(1,1) NE '(').ZG129R         00751800
&ZCGPR                SETC  '&XKRNOTEMPTY'(2,K'&XKRNOTEMPTY-2)          00751900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG129P               00752000
                      AIF   (K'&ZCGPR GT 2).ZG129Q                      00752100
                      AIF   ('&ZCGPR' EQ '0').ZG129Q                    00752200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00752300
                      AIF   (T'&ZCGPR NE 'N').ZG129Q  INVALID REG NAME  00752400
.ZG129P               ANOP  ,                                           00752500
                      AIF   (T'&ZCGPR NE 'N').ZG129R  NON NUMERIC       00752600
                      AIF   ('&ZCGPR' LT '2').ZG129Q                    00752700
                      AIF   ('&ZCGPR' LE '12').ZG129R                   00752800
.ZG129Q               ANOP  ,                                           00752900
&ZMS                  SETC  '"KRNOTEMPTY='                              00753000
&ZMS                  SETC  '&ZMS.&KRNOTEMPTY"'                         00753100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00753200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00753300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00753400
.ZG129R               ANOP  ,                                           00753500
.*------------------------------------------------------------------    00753600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00753700
.ZG131                ANOP  ,                                           00753800
&ZXKEYRANGESTATE      SETC  'INPUT'     SET IN/OUTPUT                   00753900
                      AIF   (K'&XKEYRANGESTATE GT 0).ZG131E  VALID ARG  00754000
                      AIF   (T'&KEYRANGESTATE EQ 'O').ZG131D  OMITTED   00754100
&ZASYSLNDX            SETA  0                                           00754200
.ZG131A               ANOP  ,           POSITIONAL MACRO KEY            00754300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00754400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG131C           00754500
&ZTLC                 SETC 'KEYRANGESTATE'                              00754600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG131A  00754700
.ZG131B               ANOP  ,                                           00754800
&ZXKEYRANGESTATE      SETC  ''          RESET IN/OUTPUT                 00754900
&ZMS                  SETC  'THE "KEYRANGESTATE" KEY'                   00755000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00755100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00755200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00755300
                      AGO   .ZG131E                                     00755400
.ZG131C               ANOP  ,                                           00755500
&ZXKEYRANGESTATE      SETC  ''          RESET IN/OUTPUT                 00755600
&ZMS                  SETC  '"KEYRANGESTATE='                           00755700
&ZMS                  SETC  '&ZMS.&KEYRANGESTATE"'                      00755800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00755900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00756000
&ZMS                  SETC  '&ZMS "NO_CHANGE"'                          00756100
&ZMS                  SETC  '&ZMS OR "DEFINE".'                         00756200
                      MNOTE 8,' &ZMS '                                  00756300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00756400
                      AGO   .ZG131E                                     00756500
.ZG131D               ANOP  ,                                           00756600
&XKEYRANGESTATE       SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00756700
.ZG131E               ANOP  ,                                           00756800
.*------------------------------------------------------------------    00756900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00757000
&XLISTSTATE           SETC  ''          INITIALIZE XVARIABLE            00757100
.*-------------------------------------------------------------------   00757200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00757300
.ZG134                ANOP  ,                                           00757400
                      AIF   (K'&LISTSTATE(1) LE 0).ZG134A               00757500
&ZTLC                 SETC 'NO_CHANGE'                                  00757600
                      AIF   ('&LISTSTATE(1)' NE '&ZTLC').ZG135          00757700
&XLISTSTATE           SETC  'NO_CHANGE'         SET KEYWORD             00757800
                      AIF   (N'&LISTSTATE LE 1).ZG134A  CK NUM          00757900
&ZMS                  SETC  '"LISTSTATE='                               00758000
&ZMS                  SETC  '&ZMS.&LISTSTATE"'                          00758100
&ZMS                  SETC  '&ZMS "LISTSTATE"'                          00758200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00758300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00758400
.ZG134A               ANOP  ,                                           00758500
.*------------------------------------------------------------------    00758600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00758700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00758800
.ZG134A0              AIF   (K'&LISTEMPTY LE 0).ZG134A1  OK             00758900
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00759000
.ZG134A1              AIF   (K'&LISTNOTEMPTY LE 0).ZG134A2  OK          00759100
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00759200
.ZG134A2              AIF   (K'&ZCVAL LE 0).ZG134A3  OK                 00759300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00759400
&ZMS                  SETC  '"LISTSTATE'                                00759500
&ZMS                  SETC  '&ZMS.=&LISTSTATE"'                         00759600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00759700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00759800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00759900
.ZG134A3              ANOP  ,                                           00760000
.*-------------------------------------------------------------------   00760100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00760200
.ZG135                ANOP  ,                                           00760300
&ZTLC                 SETC 'DEFINE'                                     00760400
                      AIF   ('&LISTSTATE(1)' NE '&ZTLC').ZG142          00760500
&XLISTSTATE           SETC  'DEFINE'    SET KEYWORD                     00760600
                      AIF   (N'&LISTSTATE LE 1).ZG135A  CK NUM          00760700
&ZMS                  SETC  '"LISTSTATE='                               00760800
&ZMS                  SETC  '&ZMS.&LISTSTATE"'                          00760900
&ZMS                  SETC  '&ZMS "LISTSTATE"'                          00761000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00761100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00761200
.ZG135A               ANOP  ,                                           00761300
.*----------------------------------------------------------------***   00761400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00761500
                      AIF   (N'&LISTEMPTY LE 1).ZG137A  CK NUM          00761600
&ZMS                  SETC  '"LISTEMPTY='                               00761700
&ZMS                  SETC  '&ZMS.&LISTEMPTY"'                          00761800
&ZMS                  SETC  '&ZMS "LISTEMPTY"'                          00761900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00762000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00762100
.ZG137A               ANOP  ,                                           00762200
.*-------------------------------------------------------------------   00762300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00762400
&ZXLISTEMPTY          SETC  'INPUT'     SET IN/OUTPUT                   00762500
&XLISTEMPTY           SETC  '&LISTEMPTY(1)'     SET XVARIABLE           00762600
                      AIF   (N'&LISTEMPTY GT 1).ZG137B  MULTI           00762700
&XLISTEMPTY           SETC  '&LISTEMPTY'        SET XVARIABLE           00762800
.ZG137B               AIF   (K'&LISTEMPTY(1) GT 0).ZG137C               00762900
&ZXLISTEMPTY          SETC  ''          RESET IN/OUTPUT                 00763000
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'                00763100
&ZMS                  SETC  '&ZMS , "LISTEMPTY" KEY AND ITS'            00763200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00763300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00763400
.ZG137C               ANOP  ,                                           00763500
.*-------------------------------------------------------------------   00763600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00763700
                      AIF   (K'&ZXLISTEMPTY LE 0).ZG137R  NOT I/O       00763800
                      AIF   ('&XLISTEMPTY'(1,1) NE '(').ZG137R          00763900
&ZCGPR                SETC  '&XLISTEMPTY'(2,K'&XLISTEMPTY-2)            00764000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG137P               00764100
                      AIF   (K'&ZCGPR GT 2).ZG137Q                      00764200
                      AIF   ('&ZCGPR' EQ '0').ZG137Q                    00764300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00764400
                      AIF   (T'&ZCGPR NE 'N').ZG137Q  INVALID REG NAME  00764500
.ZG137P               ANOP  ,                                           00764600
                      AIF   (T'&ZCGPR NE 'N').ZG137R  NON NUMERIC       00764700
                      AIF   ('&ZCGPR' LT '2').ZG137Q                    00764800
                      AIF   ('&ZCGPR' LE '12').ZG137R                   00764900
.ZG137Q               ANOP  ,                                           00765000
&ZMS                  SETC  '"LISTEMPTY='                               00765100
&ZMS                  SETC  '&ZMS.&LISTEMPTY"'                          00765200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00765300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00765400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00765500
.ZG137R               ANOP  ,                                           00765600
.*----------------------------------------------------------------***   00765700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00765800
                      AIF   (N'&LISTNOTEMPTY LE 1).ZG140A  CK NUM       00765900
&ZMS                  SETC  '"LISTNOTEMPTY='                            00766000
&ZMS                  SETC  '&ZMS.&LISTNOTEMPTY"'                       00766100
&ZMS                  SETC  '&ZMS "LISTNOTEMPTY"'                       00766200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00766300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00766400
.ZG140A               ANOP  ,                                           00766500
.*-------------------------------------------------------------------   00766600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00766700
&ZXLISTNOTEMPTY       SETC  'INPUT'     SET IN/OUTPUT                   00766800
&XLISTNOTEMPTY        SETC  '&LISTNOTEMPTY(1)'  SET XVARIABLE           00766900
                      AIF   (N'&LISTNOTEMPTY GT 1).ZG140B  MULTI        00767000
&XLISTNOTEMPTY        SETC  '&LISTNOTEMPTY'     SET XVARIABLE           00767100
.ZG140B               AIF   (K'&LISTNOTEMPTY(1) GT 0).ZG140C            00767200
&ZXLISTNOTEMPTY       SETC  ''          RESET IN/OUTPUT                 00767300
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'                00767400
&ZMS                  SETC  '&ZMS , "LISTNOTEMPTY" KEY AND ITS'         00767500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00767600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00767700
.ZG140C               ANOP  ,                                           00767800
.*-------------------------------------------------------------------   00767900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00768000
                      AIF   (K'&ZXLISTNOTEMPTY LE 0).ZG140R  NOT I/O    00768100
                      AIF   ('&XLISTNOTEMPTY'(1,1) NE '(').ZG140R       00768200
&ZCGPR                SETC  '&XLISTNOTEMPTY'(2,K'&XLISTNOTEMPTY-2)      00768300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG140P               00768400
                      AIF   (K'&ZCGPR GT 2).ZG140Q                      00768500
                      AIF   ('&ZCGPR' EQ '0').ZG140Q                    00768600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00768700
                      AIF   (T'&ZCGPR NE 'N').ZG140Q  INVALID REG NAME  00768800
.ZG140P               ANOP  ,                                           00768900
                      AIF   (T'&ZCGPR NE 'N').ZG140R  NON NUMERIC       00769000
                      AIF   ('&ZCGPR' LT '2').ZG140Q                    00769100
                      AIF   ('&ZCGPR' LE '12').ZG140R                   00769200
.ZG140Q               ANOP  ,                                           00769300
&ZMS                  SETC  '"LISTNOTEMPTY='                            00769400
&ZMS                  SETC  '&ZMS.&LISTNOTEMPTY"'                       00769500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00769600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00769700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00769800
.ZG140R               ANOP  ,                                           00769900
.*------------------------------------------------------------------    00770000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00770100
.ZG142                ANOP  ,                                           00770200
&ZXLISTSTATE          SETC  'INPUT'     SET IN/OUTPUT                   00770300
                      AIF   (K'&XLISTSTATE GT 0).ZG142E  VALID ARG      00770400
                      AIF   (T'&LISTSTATE EQ 'O').ZG142D  OMITTED       00770500
&ZASYSLNDX            SETA  0                                           00770600
.ZG142A               ANOP  ,           POSITIONAL MACRO KEY            00770700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00770800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG142C           00770900
&ZTLC                 SETC 'LISTSTATE'                                  00771000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG142A  00771100
.ZG142B               ANOP  ,                                           00771200
&ZXLISTSTATE          SETC  ''          RESET IN/OUTPUT                 00771300
&ZMS                  SETC  'THE "LISTSTATE" KEY'                       00771400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00771500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00771600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00771700
                      AGO   .ZG142E                                     00771800
.ZG142C               ANOP  ,                                           00771900
&ZXLISTSTATE          SETC  ''          RESET IN/OUTPUT                 00772000
&ZMS                  SETC  '"LISTSTATE='                               00772100
&ZMS                  SETC  '&ZMS.&LISTSTATE"'                          00772200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00772300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00772400
&ZMS                  SETC  '&ZMS "NO_CHANGE"'                          00772500
&ZMS                  SETC  '&ZMS OR "DEFINE".'                         00772600
                      MNOTE 8,' &ZMS '                                  00772700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00772800
                      AGO   .ZG142E                                     00772900
.ZG142D               ANOP  ,                                           00773000
&XLISTSTATE           SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00773100
.ZG142E               ANOP  ,                                           00773200
.*----------------------------------------------------------------***   00773300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00773400
                      AIF   (N'&KEYRNOTIFYDELAY LE 1).ZG144A  CK NUM    00773500
&ZMS                  SETC  '"KEYRNOTIFYDELAY='                         00773600
&ZMS                  SETC  '&ZMS.&KEYRNOTIFYDELAY"'                    00773700
&ZMS                  SETC  '&ZMS "KEYRNOTIFYDELAY"'                    00773800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00773900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00774000
.ZG144A               ANOP  ,                                           00774100
.*-------------------------------------------------------------------   00774200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00774300
&XKEYRNOTIFYDELAY     SETC  ''          INITIALIZE XVARIABLE            00774400
.ZG145A   AIF   ('&KEYRNOTIFYDELAY(1)' NE 'NO_CHANGE').ZG146A           00774500
&XKEYRNOTIFYDELAY     SETC  'NO_CHANGE'         SET KEYWORD             00774600
.*-------------------------------------------------------------------   00774700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00774800
.ZG146A   AIF   ('&KEYRNOTIFYDELAY(1)' NE 'ON').ZG147A                  00774900
&XKEYRNOTIFYDELAY     SETC  'ON'        SET KEYWORD                     00775000
.*-------------------------------------------------------------------   00775100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00775200
.ZG147A   AIF   ('&KEYRNOTIFYDELAY(1)' NE 'OFF').ZG148A                 00775300
&XKEYRNOTIFYDELAY     SETC  'OFF'       SET KEYWORD                     00775400
.*-------------------------------------------------------------------   00775500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00775600
.ZG148A               AIF   (K'&XKEYRNOTIFYDELAY GT 0).ZG148C  KEYWORD  00775700
                      AIF   (K'&KEYRNOTIFYDELAY(1) LE 0).ZG148B         00775800
&ZMS                  SETC  '"KEYRNOTIFYDELAY='                         00775900
&ZMS                  SETC  '&ZMS.&KEYRNOTIFYDELAY"'                    00776000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00776100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00776200
&ZMS                  SETC  '&ZMS "NO_CHANGE",'                         00776300
&ZMS                  SETC  '&ZMS "ON",'                                00776400
&ZMS                  SETC  '&ZMS OR "OFF".'                            00776500
                      MNOTE 8,' &ZMS '                                  00776600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00776700
.ZG148B               ANOP  ,                                           00776800
&XKEYRNOTIFYDELAY     SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00776900
.ZG148C               ANOP  ,                                           00777000
&ZXKEYRNOTIFYDELAY    SETC  'INPUT'     SET IN/OUTPUT                   00777100
.*----------------------------------------------------------------***   00777200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00777300
                      AIF   (N'&LISTNOTIFYDELAY LE 1).ZG150A  CK NUM    00777400
&ZMS                  SETC  '"LISTNOTIFYDELAY='                         00777500
&ZMS                  SETC  '&ZMS.&LISTNOTIFYDELAY"'                    00777600
&ZMS                  SETC  '&ZMS "LISTNOTIFYDELAY"'                    00777700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00777800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00777900
.ZG150A               ANOP  ,                                           00778000
.*-------------------------------------------------------------------   00778100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00778200
&XLISTNOTIFYDELAY     SETC  ''          INITIALIZE XVARIABLE            00778300
.ZG151A   AIF   ('&LISTNOTIFYDELAY(1)' NE 'NO_CHANGE').ZG152A           00778400
&XLISTNOTIFYDELAY     SETC  'NO_CHANGE'         SET KEYWORD             00778500
.*-------------------------------------------------------------------   00778600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00778700
.ZG152A   AIF   ('&LISTNOTIFYDELAY(1)' NE 'ON').ZG153A                  00778800
&XLISTNOTIFYDELAY     SETC  'ON'        SET KEYWORD                     00778900
.*-------------------------------------------------------------------   00779000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00779100
.ZG153A   AIF   ('&LISTNOTIFYDELAY(1)' NE 'OFF').ZG154A                 00779200
&XLISTNOTIFYDELAY     SETC  'OFF'       SET KEYWORD                     00779300
.*-------------------------------------------------------------------   00779400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00779500
.ZG154A               AIF   (K'&XLISTNOTIFYDELAY GT 0).ZG154C  KEYWORD  00779600
                      AIF   (K'&LISTNOTIFYDELAY(1) LE 0).ZG154B         00779700
&ZMS                  SETC  '"LISTNOTIFYDELAY='                         00779800
&ZMS                  SETC  '&ZMS.&LISTNOTIFYDELAY"'                    00779900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00780000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00780100
&ZMS                  SETC  '&ZMS "NO_CHANGE",'                         00780200
&ZMS                  SETC  '&ZMS "ON",'                                00780300
&ZMS                  SETC  '&ZMS OR "OFF".'                            00780400
                      MNOTE 8,' &ZMS '                                  00780500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00780600
.ZG154B               ANOP  ,                                           00780700
&XLISTNOTIFYDELAY     SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00780800
.ZG154C               ANOP  ,                                           00780900
&ZXLISTNOTIFYDELAY    SETC  'INPUT'     SET IN/OUTPUT                   00781000
.*-------------------------------------------------------------------   00781100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00781200
.ZG155                ANOP  ,                                           00781300
&ZTLC                 SETC 'READ_STRCOUNTS'                             00781400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG156            00781500
&XREQUEST             SETC  'READ_STRCOUNTS'    SET KEYWORD             00781600
                      AIF   (N'&REQUEST LE 1).ZG155A  CK NUM            00781700
&ZMS                  SETC  '"REQUEST='                                 00781800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00781900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00782000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00782100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00782200
.ZG155A               ANOP  ,                                           00782300
.*------------------------------------------------------------------    00782400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00782500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00782600
.ZG155A0              AIF   (K'&LOCKINDEX LE 0).ZG155A1  OK             00782700
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00782800
.ZG155A1              AIF   (K'&LOCKOPER LE 0).ZG155A2  OK              00782900
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00783000
.ZG155A2              AIF   (K'&LOCKMODE LE 0).ZG155A3  OK              00783100
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00783200
.ZG155A3              AIF   (K'&LOCKCOMP LE 0).ZG155A4  OK              00783300
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00783400
.ZG155A4              AIF   (K'&LOCKDATA LE 0).ZG155A5  OK              00783500
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00783600
.ZG155A5              AIF   (K'&LISTNUM LE 0).ZG155A6  OK               00783700
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00783800
.ZG155A6              AIF   (K'&BUFLIST LE 0).ZG155A7  OK               00783900
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00784000
.ZG155A7              AIF   (K'&BUFADDRTYPE LE 0).ZG155A8  OK           00784100
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00784200
.ZG155A8              AIF   (K'&PAGEABLE LE 0).ZG155A9  OK              00784300
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00784400
.ZG155A9              AIF   (K'&BUFSTGKEY LE 0).ZG155A10  OK            00784500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00784600
.ZG155A10             AIF   (K'&BUFALET LE 0).ZG155A11  OK              00784700
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00784800
.ZG155A11             AIF   (K'&BUFADDRSIZE LE 0).ZG155A12  OK          00784900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00785000
.ZG155A12             AIF   (K'&BUFFER LE 0).ZG155A13  OK               00785100
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00785200
.ZG155A13             AIF   (K'&AUTHCOMP LE 0).ZG155A14  OK             00785300
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00785400
.ZG155A14             AIF   (K'&NEWAUTH LE 0).ZG155A15  OK              00785500
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00785600
.ZG155A15             AIF   (K'&LISTLIMIT LE 0).ZG155A16  OK            00785700
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00785800
.ZG155A16             AIF   (K'&LISTDESC LE 0).ZG155A17  OK             00785900
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00786000
.ZG155A17             AIF   (K'&LISTKEY LE 0).ZG155A18  OK              00786100
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00786200
.ZG155A18             AIF   (K'&MAXLISTKEY LE 0).ZG155A19  OK           00786300
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00786400
.ZG155A19             AIF   (K'&SETCURSOR LE 0).ZG155A20  OK            00786500
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00786600
.ZG155A20             AIF   (K'&KEYRANGE LE 0).ZG155A21  OK             00786700
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00786800
.ZG155A21             AIF   (K'&KEYRANGESTART LE 0).ZG155A22  OK        00786900
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00787000
.ZG155A22             AIF   (K'&KEYRANGEEND LE 0).ZG155A23  OK          00787100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00787200
.ZG155A23             AIF   (K'&KEYRANGESTATE LE 0).ZG155A24  OK        00787300
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00787400
.ZG155A24             AIF   (K'&KREMPTY LE 0).ZG155A25  OK              00787500
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00787600
.ZG155A25             AIF   (K'&KRNOTEMPTY LE 0).ZG155A26  OK           00787700
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00787800
.ZG155A26             AIF   (K'&LISTSTATE LE 0).ZG155A27  OK            00787900
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00788000
.ZG155A27             AIF   (K'&LISTEMPTY LE 0).ZG155A28  OK            00788100
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00788200
.ZG155A28             AIF   (K'&LISTNOTEMPTY LE 0).ZG155A29  OK         00788300
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00788400
.ZG155A29             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG155A30  OK      00788500
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00788600
.ZG155A30             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG155A31  OK      00788700
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00788800
.ZG155A31             AIF   (K'&KEYTYPE LE 0).ZG155A32  OK              00788900
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00789000
.ZG155A32             AIF   (K'&ENTRYKEY LE 0).ZG155A33  OK             00789100
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00789200
.ZG155A33             AIF   (K'&SECONDARYKEY LE 0).ZG155A34  OK         00789300
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00789400
.ZG155A34             AIF   (K'&ACTION LE 0).ZG155A35  OK               00789500
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00789600
.ZG155A35             AIF   (K'&VECTORINDEX LE 0).ZG155A36  OK          00789700
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00789800
.ZG155A36             AIF   (K'&DRIVEEXIT LE 0).ZG155A37  OK            00789900
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00790000
.ZG155A37             AIF   (K'&MONITORTYPE LE 0).ZG155A38  OK          00790100
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00790200
.ZG155A38             AIF   (K'&NOTIFICATION LE 0).ZG155A39  OK         00790300
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00790400
.ZG155A39             AIF   (K'&UNC LE 0).ZG155A40  OK                  00790500
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00790600
.ZG155A40             AIF   (K'&STARTINDEX LE 0).ZG155A41  OK           00790700
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00790800
.ZG155A41             AIF   (K'&ENDINDEX LE 0).ZG155A42  OK             00790900
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00791000
.ZG155A42             AIF   (K'&MOSVECTOR LE 0).ZG155A43  OK            00791100
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00791200
.ZG155A43             AIF   (K'&BUFNUM LE 0).ZG155A44  OK               00791300
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00791400
.ZG155A44             AIF   (K'&BUFINCRNUM LE 0).ZG155A45  OK           00791500
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00791600
.ZG155A45             AIF   (K'&BUFSIZE LE 0).ZG155A46  OK              00791700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00791800
.ZG155A46             AIF   (K'&ZCVAL LE 0).ZG155A47  OK                00791900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00792000
                      AIF  (K'&ZCVAL LE 160).ZG155A47A                  00792100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00792200
&ZCVAL                SETC '&ZCVAL....'                                 00792300
.ZG155A47A            ANOP                                              00792400
&ZMS                  SETC  '"REQUEST'                                  00792500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00792600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00792700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00792800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00792900
.ZG155A47             ANOP  ,                                           00793000
.*-------------------------------------------------------------------   00793100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00793200
.ZG156                ANOP  ,                                           00793300
&ZTLC                 SETC 'READ_EQCONTROLS'                            00793400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG162            00793500
&XREQUEST             SETC  'READ_EQCONTROLS'   SET KEYWORD             00793600
                      AIF   (N'&REQUEST LE 1).ZG156A  CK NUM            00793700
&ZMS                  SETC  '"REQUEST='                                 00793800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00793900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00794000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00794100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00794200
.ZG156A               ANOP  ,                                           00794300
.*------------------------------------------------------------------    00794400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00794500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00794600
.ZG156A0              AIF   (K'&LOCKINDEX LE 0).ZG156A1  OK             00794700
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00794800
.ZG156A1              AIF   (K'&LOCKOPER LE 0).ZG156A2  OK              00794900
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00795000
.ZG156A2              AIF   (K'&LOCKMODE LE 0).ZG156A3  OK              00795100
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00795200
.ZG156A3              AIF   (K'&LOCKCOMP LE 0).ZG156A4  OK              00795300
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00795400
.ZG156A4              AIF   (K'&LOCKDATA LE 0).ZG156A5  OK              00795500
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00795600
.ZG156A5              AIF   (K'&LISTNUM LE 0).ZG156A6  OK               00795700
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00795800
.ZG156A6              AIF   (K'&BUFLIST LE 0).ZG156A7  OK               00795900
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00796000
.ZG156A7              AIF   (K'&BUFADDRTYPE LE 0).ZG156A8  OK           00796100
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00796200
.ZG156A8              AIF   (K'&PAGEABLE LE 0).ZG156A9  OK              00796300
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00796400
.ZG156A9              AIF   (K'&BUFSTGKEY LE 0).ZG156A10  OK            00796500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00796600
.ZG156A10             AIF   (K'&BUFALET LE 0).ZG156A11  OK              00796700
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00796800
.ZG156A11             AIF   (K'&BUFADDRSIZE LE 0).ZG156A12  OK          00796900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00797000
.ZG156A12             AIF   (K'&BUFFER LE 0).ZG156A13  OK               00797100
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00797200
.ZG156A13             AIF   (K'&AUTHCOMP LE 0).ZG156A14  OK             00797300
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00797400
.ZG156A14             AIF   (K'&NEWAUTH LE 0).ZG156A15  OK              00797500
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00797600
.ZG156A15             AIF   (K'&LISTLIMIT LE 0).ZG156A16  OK            00797700
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00797800
.ZG156A16             AIF   (K'&LISTDESC LE 0).ZG156A17  OK             00797900
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00798000
.ZG156A17             AIF   (K'&LISTKEY LE 0).ZG156A18  OK              00798100
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00798200
.ZG156A18             AIF   (K'&MAXLISTKEY LE 0).ZG156A19  OK           00798300
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00798400
.ZG156A19             AIF   (K'&SETCURSOR LE 0).ZG156A20  OK            00798500
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00798600
.ZG156A20             AIF   (K'&KEYRANGE LE 0).ZG156A21  OK             00798700
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00798800
.ZG156A21             AIF   (K'&KEYRANGESTART LE 0).ZG156A22  OK        00798900
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00799000
.ZG156A22             AIF   (K'&KEYRANGEEND LE 0).ZG156A23  OK          00799100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00799200
.ZG156A23             AIF   (K'&KEYRANGESTATE LE 0).ZG156A24  OK        00799300
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00799400
.ZG156A24             AIF   (K'&KREMPTY LE 0).ZG156A25  OK              00799500
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00799600
.ZG156A25             AIF   (K'&KRNOTEMPTY LE 0).ZG156A26  OK           00799700
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00799800
.ZG156A26             AIF   (K'&LISTSTATE LE 0).ZG156A27  OK            00799900
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00800000
.ZG156A27             AIF   (K'&LISTEMPTY LE 0).ZG156A28  OK            00800100
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00800200
.ZG156A28             AIF   (K'&LISTNOTEMPTY LE 0).ZG156A29  OK         00800300
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00800400
.ZG156A29             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG156A30  OK      00800500
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00800600
.ZG156A30             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG156A31  OK      00800700
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00800800
.ZG156A31             AIF   (K'&ENTRYKEY LE 0).ZG156A32  OK             00800900
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00801000
.ZG156A32             AIF   (K'&SECONDARYKEY LE 0).ZG156A33  OK         00801100
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00801200
.ZG156A33             AIF   (K'&ACTION LE 0).ZG156A34  OK               00801300
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00801400
.ZG156A34             AIF   (K'&VECTORINDEX LE 0).ZG156A35  OK          00801500
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00801600
.ZG156A35             AIF   (K'&DRIVEEXIT LE 0).ZG156A36  OK            00801700
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00801800
.ZG156A36             AIF   (K'&MONITORTYPE LE 0).ZG156A37  OK          00801900
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00802000
.ZG156A37             AIF   (K'&NOTIFICATION LE 0).ZG156A38  OK         00802100
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00802200
.ZG156A38             AIF   (K'&UNC LE 0).ZG156A39  OK                  00802300
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00802400
.ZG156A39             AIF   (K'&STARTINDEX LE 0).ZG156A40  OK           00802500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00802600
.ZG156A40             AIF   (K'&ENDINDEX LE 0).ZG156A41  OK             00802700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00802800
.ZG156A41             AIF   (K'&MOSVECTOR LE 0).ZG156A42  OK            00802900
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00803000
.ZG156A42             AIF   (K'&BUFNUM LE 0).ZG156A43  OK               00803100
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00803200
.ZG156A43             AIF   (K'&BUFINCRNUM LE 0).ZG156A44  OK           00803300
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00803400
.ZG156A44             AIF   (K'&BUFSIZE LE 0).ZG156A45  OK              00803500
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00803600
.ZG156A45             AIF   (K'&ZCVAL LE 0).ZG156A46  OK                00803700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00803800
                      AIF  (K'&ZCVAL LE 160).ZG156A46A                  00803900
&ZCVAL                SETC '&ZCVAL'(1,160)                              00804000
&ZCVAL                SETC '&ZCVAL....'                                 00804100
.ZG156A46A            ANOP                                              00804200
&ZMS                  SETC  '"REQUEST'                                  00804300
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00804400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00804500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00804600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00804700
.ZG156A46             ANOP  ,                                           00804800
.*----------------------------------------------------------------***   00804900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00805000
                      AIF   (N'&KEYTYPE LE 1).ZG158A  CK NUM            00805100
&ZMS                  SETC  '"KEYTYPE='                                 00805200
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00805300
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            00805400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00805500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00805600
.ZG158A               ANOP  ,                                           00805700
.*-------------------------------------------------------------------   00805800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00805900
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            00806000
.ZG159A   AIF   ('&KEYTYPE(1)' NE 'ENTRY').ZG160A                       00806100
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     00806200
.*-------------------------------------------------------------------   00806300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00806400
.ZG160A   AIF   ('&KEYTYPE(1)' NE 'SECONDARY').ZG161A                   00806500
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             00806600
.*-------------------------------------------------------------------   00806700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00806800
.ZG161A               AIF   (K'&XKEYTYPE GT 0).ZG161C  KEYWORD          00806900
                      AIF   (K'&KEYTYPE(1) LE 0).ZG161B                 00807000
&ZMS                  SETC  '"KEYTYPE='                                 00807100
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00807200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00807300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00807400
&ZMS                  SETC  '&ZMS "ENTRY"'                              00807500
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      00807600
                      MNOTE 8,' &ZMS '                                  00807700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00807800
.ZG161B               ANOP  ,                                           00807900
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             00808000
.ZG161C               ANOP  ,                                           00808100
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   00808200
.*-------------------------------------------------------------------   00808300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00808400
.ZG162                ANOP  ,                                           00808500
&ZTLC                 SETC 'READ_EMCONTROLS'                            00808600
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG170            00808700
&XREQUEST             SETC  'READ_EMCONTROLS'   SET KEYWORD             00808800
                      AIF   (N'&REQUEST LE 1).ZG162A  CK NUM            00808900
&ZMS                  SETC  '"REQUEST='                                 00809000
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00809100
&ZMS                  SETC  '&ZMS "REQUEST"'                            00809200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00809300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00809400
.ZG162A               ANOP  ,                                           00809500
.*------------------------------------------------------------------    00809600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00809700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00809800
.ZG162A0              AIF   (K'&LOCKINDEX LE 0).ZG162A1  OK             00809900
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00810000
.ZG162A1              AIF   (K'&LOCKOPER LE 0).ZG162A2  OK              00810100
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00810200
.ZG162A2              AIF   (K'&LOCKMODE LE 0).ZG162A3  OK              00810300
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00810400
.ZG162A3              AIF   (K'&LOCKCOMP LE 0).ZG162A4  OK              00810500
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00810600
.ZG162A4              AIF   (K'&LOCKDATA LE 0).ZG162A5  OK              00810700
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00810800
.ZG162A5              AIF   (K'&BUFLIST LE 0).ZG162A6  OK               00810900
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00811000
.ZG162A6              AIF   (K'&BUFADDRTYPE LE 0).ZG162A7  OK           00811100
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00811200
.ZG162A7              AIF   (K'&PAGEABLE LE 0).ZG162A8  OK              00811300
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00811400
.ZG162A8              AIF   (K'&BUFSTGKEY LE 0).ZG162A9  OK             00811500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00811600
.ZG162A9              AIF   (K'&BUFALET LE 0).ZG162A10  OK              00811700
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00811800
.ZG162A10             AIF   (K'&BUFADDRSIZE LE 0).ZG162A11  OK          00811900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00812000
.ZG162A11             AIF   (K'&BUFFER LE 0).ZG162A12  OK               00812100
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00812200
.ZG162A12             AIF   (K'&AUTHCOMP LE 0).ZG162A13  OK             00812300
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00812400
.ZG162A13             AIF   (K'&NEWAUTH LE 0).ZG162A14  OK              00812500
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00812600
.ZG162A14             AIF   (K'&LISTLIMIT LE 0).ZG162A15  OK            00812700
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00812800
.ZG162A15             AIF   (K'&LISTDESC LE 0).ZG162A16  OK             00812900
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00813000
.ZG162A16             AIF   (K'&LISTKEY LE 0).ZG162A17  OK              00813100
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00813200
.ZG162A17             AIF   (K'&MAXLISTKEY LE 0).ZG162A18  OK           00813300
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00813400
.ZG162A18             AIF   (K'&SETCURSOR LE 0).ZG162A19  OK            00813500
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00813600
.ZG162A19             AIF   (K'&KEYRANGE LE 0).ZG162A20  OK             00813700
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00813800
.ZG162A20             AIF   (K'&KEYRANGESTART LE 0).ZG162A21  OK        00813900
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00814000
.ZG162A21             AIF   (K'&KEYRANGEEND LE 0).ZG162A22  OK          00814100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00814200
.ZG162A22             AIF   (K'&KEYRANGESTATE LE 0).ZG162A23  OK        00814300
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00814400
.ZG162A23             AIF   (K'&KREMPTY LE 0).ZG162A24  OK              00814500
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00814600
.ZG162A24             AIF   (K'&KRNOTEMPTY LE 0).ZG162A25  OK           00814700
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00814800
.ZG162A25             AIF   (K'&LISTSTATE LE 0).ZG162A26  OK            00814900
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00815000
.ZG162A26             AIF   (K'&LISTEMPTY LE 0).ZG162A27  OK            00815100
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00815200
.ZG162A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG162A28  OK         00815300
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00815400
.ZG162A28             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG162A29  OK      00815500
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00815600
.ZG162A29             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG162A30  OK      00815700
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00815800
.ZG162A30             AIF   (K'&KEYTYPE LE 0).ZG162A31  OK              00815900
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00816000
.ZG162A31             AIF   (K'&ACTION LE 0).ZG162A32  OK               00816100
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00816200
.ZG162A32             AIF   (K'&VECTORINDEX LE 0).ZG162A33  OK          00816300
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00816400
.ZG162A33             AIF   (K'&DRIVEEXIT LE 0).ZG162A34  OK            00816500
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00816600
.ZG162A34             AIF   (K'&MONITORTYPE LE 0).ZG162A35  OK          00816700
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00816800
.ZG162A35             AIF   (K'&NOTIFICATION LE 0).ZG162A36  OK         00816900
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00817000
.ZG162A36             AIF   (K'&UNC LE 0).ZG162A37  OK                  00817100
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00817200
.ZG162A37             AIF   (K'&STARTINDEX LE 0).ZG162A38  OK           00817300
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00817400
.ZG162A38             AIF   (K'&ENDINDEX LE 0).ZG162A39  OK             00817500
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00817600
.ZG162A39             AIF   (K'&MOSVECTOR LE 0).ZG162A40  OK            00817700
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00817800
.ZG162A40             AIF   (K'&BUFNUM LE 0).ZG162A41  OK               00817900
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00818000
.ZG162A41             AIF   (K'&BUFINCRNUM LE 0).ZG162A42  OK           00818100
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00818200
.ZG162A42             AIF   (K'&BUFSIZE LE 0).ZG162A43  OK              00818300
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00818400
.ZG162A43             AIF   (K'&ZCVAL LE 0).ZG162A44  OK                00818500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00818600
                      AIF  (K'&ZCVAL LE 160).ZG162A44A                  00818700
&ZCVAL                SETC '&ZCVAL'(1,160)                              00818800
&ZCVAL                SETC '&ZCVAL....'                                 00818900
.ZG162A44A            ANOP                                              00819000
&ZMS                  SETC  '"REQUEST'                                  00819100
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00819200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00819300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00819400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00819500
.ZG162A44             ANOP  ,                                           00819600
.*----------------------------------------------------------------***   00819700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00819800
                      AIF   (N'&LISTNUM LE 1).ZG164A  CK NUM            00819900
&ZMS                  SETC  '"LISTNUM='                                 00820000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00820100
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00820200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00820300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00820400
.ZG164A               ANOP  ,                                           00820500
.*-------------------------------------------------------------------   00820600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00820700
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00820800
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00820900
                      AIF   (N'&LISTNUM GT 1).ZG164B  MULTI             00821000
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00821100
.ZG164B               AIF   (K'&LISTNUM(1) GT 0).ZG164C                 00821200
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00821300
&ZMS                  SETC  ' '                                         00821400
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00821500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00821600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00821700
.ZG164C               ANOP  ,                                           00821800
.*-------------------------------------------------------------------   00821900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00822000
                      AIF   (K'&ZXLISTNUM LE 0).ZG164R  NOT I/O         00822100
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG164R            00822200
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00822300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG164P               00822400
                      AIF   (K'&ZCGPR GT 2).ZG164Q                      00822500
                      AIF   ('&ZCGPR' EQ '0').ZG164Q                    00822600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00822700
                      AIF   (T'&ZCGPR NE 'N').ZG164Q  INVALID REG NAME  00822800
.ZG164P               ANOP  ,                                           00822900
                      AIF   (T'&ZCGPR NE 'N').ZG164R  NON NUMERIC       00823000
                      AIF   ('&ZCGPR' LT '2').ZG164Q                    00823100
                      AIF   ('&ZCGPR' LE '12').ZG164R                   00823200
.ZG164Q               ANOP  ,                                           00823300
&ZMS                  SETC  '"LISTNUM='                                 00823400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00823500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00823600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00823700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00823800
.ZG164R               ANOP  ,                                           00823900
.*----------------------------------------------------------------***   00824000
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00824100
&XNAME                SETC  ''          INITIALIZE XVARIABLE            00824200
                      AIF   (K'&ENTRYKEY LE 0).ZG167C                   00824300
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   00824400
&XNAME                SETC  'ENTRYKEY'  SET XVARIABLE                   00824500
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   00824600
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE PARM      00824700
                      AIF   (N'&ENTRYKEY GT 1).ZG167A                   00824800
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE PARM      00824900
.ZG167A               AIF   (N'&ENTRYKEY LE 1).ZG167B  CK NUM           00825000
&ZMS                  SETC  '"ENTRYKEY='                                00825100
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00825200
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           00825300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00825400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00825500
.ZG167B               AIF   (K'&XENTRYKEY GT 0).ZG167C  ONE PARM        00825600
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00825700
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 00825800
&ZMS                  SETC  ' '                                         00825900
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               00826000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00826100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00826200
.ZG167C               ANOP  ,                                           00826300
.*----------------------------------------------------------------***   00826400
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00826500
                      AIF   (K'&SECONDARYKEY LE 0).ZG168D  NO ME KEY    00826600
                      AIF   (N'&SECONDARYKEY LE 1).ZG168A  CK NUM       00826700
&ZMS                  SETC  '"SECONDARYKEY='                            00826800
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       00826900
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       00827000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00827100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00827200
.ZG168A               AIF   (K'&XNAME LE 0).ZG168B                      00827300
&ZMS                  SETC  '"SECONDARYKEY'                             00827400
&ZMS                  SETC  '&ZMS.=&SECONDARYKEY"'                      00827500
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00827600
&ZMS                  SETC  '&ZMS "&XNAME"'                             00827700
                      MNOTE 8,' &ZMS KEY.'                              00827800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00827900
                      AGO   .ZG168D                                     00828000
.*                                                                      00828100
.ZG168B               ANOP  ,                                           00828200
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   00828300
&XNAME                SETC  'SECONDARYKEY'      SET XVARIABLE           00828400
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   00828500
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE PARM      00828600
                      AIF   (N'&SECONDARYKEY GT 1).ZG168C               00828700
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE PARM      00828800
.ZG168C               AIF   (K'&XSECONDARYKEY GT 0).ZG168D  ONE PARM    00828900
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00829000
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 00829100
&ZMS                  SETC  ' '                                         00829200
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           00829300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00829400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00829500
.ZG168D               ANOP  ,                                           00829600
.*------------------------------------------------------------------    00829700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00829800
                      AIF   (K'&XNAME GT 0).ZG169B                      00829900
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00830000
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 00830100
&XNAME                SETC  ''          ENSURE NULL                     00830200
&XENTRYKEY            SETC  ''          ENSURE NULL                     00830300
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00830400
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00830500
&ZMS                  SETC  '&ZMS REQUIRED:'                            00830600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'   VALID ME KEY            00830700
&ZMS                  SETC  '&ZMS OR "SECONDARYKEY".'  VALID ME KEY     00830800
                      MNOTE 8,' &ZMS '                                  00830900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00831000
.ZG169B               ANOP  ,                                           00831100
.*-------------------------------------------------------------------   00831200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00831300
.ZG167ZY  AIF    ('&XNAME' NE 'ENTRYKEY').ZG168ZY                       00831400
.*-------------------------------------------------------------------   00831500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00831600
                      AIF   (K'&ZXENTRYKEY LE 0).ZG167R  NOT I/O        00831700
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG167R           00831800
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              00831900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG167P               00832000
                      AIF   (K'&ZCGPR GT 2).ZG167Q                      00832100
                      AIF   ('&ZCGPR' EQ '0').ZG167Q                    00832200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00832300
                      AIF   (T'&ZCGPR NE 'N').ZG167Q  INVALID REG NAME  00832400
.ZG167P               ANOP  ,                                           00832500
                      AIF   (T'&ZCGPR NE 'N').ZG167R  NON NUMERIC       00832600
                      AIF   ('&ZCGPR' LT '2').ZG167Q                    00832700
                      AIF   ('&ZCGPR' LE '12').ZG167R                   00832800
.ZG167Q               ANOP  ,                                           00832900
&ZMS                  SETC  '"ENTRYKEY='                                00833000
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00833100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00833200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00833300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00833400
.ZG167R               ANOP  ,                                           00833500
.*-------------------------------------------------------------------   00833600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00833700
.ZG168ZY  AIF    ('&XNAME' NE 'SECONDARYKEY').ZG169ZY                   00833800
.*-------------------------------------------------------------------   00833900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00834000
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG168R  NOT I/O    00834100
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG168R       00834200
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      00834300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG168P               00834400
                      AIF   (K'&ZCGPR GT 2).ZG168Q                      00834500
                      AIF   ('&ZCGPR' EQ '0').ZG168Q                    00834600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00834700
                      AIF   (T'&ZCGPR NE 'N').ZG168Q  INVALID REG NAME  00834800
.ZG168P               ANOP  ,                                           00834900
                      AIF   (T'&ZCGPR NE 'N').ZG168R  NON NUMERIC       00835000
                      AIF   ('&ZCGPR' LT '2').ZG168Q                    00835100
                      AIF   ('&ZCGPR' LE '12').ZG168R                   00835200
.ZG168Q               ANOP  ,                                           00835300
&ZMS                  SETC  '"SECONDARYKEY='                            00835400
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       00835500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00835600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00835700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00835800
.ZG168R               ANOP  ,                                           00835900
.*-------------------------------------------------------------------   00836000
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00836100
.ZG169ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00836200
.*-------------------------------------------------------------------   00836300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00836400
.ZG170                ANOP  ,                                           00836500
&ZTLC                 SETC 'DEQ_EVENTQ'                                 00836600
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG214            00836700
&XREQUEST             SETC  'DEQ_EVENTQ'        SET KEYWORD             00836800
                      AIF   (N'&REQUEST LE 1).ZG170A  CK NUM            00836900
&ZMS                  SETC  '"REQUEST='                                 00837000
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00837100
&ZMS                  SETC  '&ZMS "REQUEST"'                            00837200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00837300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00837400
.ZG170A               ANOP  ,                                           00837500
.*------------------------------------------------------------------    00837600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00837700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00837800
.ZG170A0              AIF   (K'&LOCKINDEX LE 0).ZG170A1  OK             00837900
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00838000
.ZG170A1              AIF   (K'&LOCKOPER LE 0).ZG170A2  OK              00838100
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00838200
.ZG170A2              AIF   (K'&LOCKMODE LE 0).ZG170A3  OK              00838300
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00838400
.ZG170A3              AIF   (K'&LOCKCOMP LE 0).ZG170A4  OK              00838500
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00838600
.ZG170A4              AIF   (K'&LOCKDATA LE 0).ZG170A5  OK              00838700
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00838800
.ZG170A5              AIF   (K'&LISTNUM LE 0).ZG170A6  OK               00838900
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00839000
.ZG170A6              AIF   (K'&AUTHCOMP LE 0).ZG170A7  OK              00839100
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00839200
.ZG170A7              AIF   (K'&NEWAUTH LE 0).ZG170A8  OK               00839300
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00839400
.ZG170A8              AIF   (K'&LISTLIMIT LE 0).ZG170A9  OK             00839500
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00839600
.ZG170A9              AIF   (K'&LISTDESC LE 0).ZG170A10  OK             00839700
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00839800
.ZG170A10             AIF   (K'&LISTKEY LE 0).ZG170A11  OK              00839900
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00840000
.ZG170A11             AIF   (K'&MAXLISTKEY LE 0).ZG170A12  OK           00840100
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00840200
.ZG170A12             AIF   (K'&SETCURSOR LE 0).ZG170A13  OK            00840300
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00840400
.ZG170A13             AIF   (K'&KEYRANGE LE 0).ZG170A14  OK             00840500
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00840600
.ZG170A14             AIF   (K'&KEYRANGESTART LE 0).ZG170A15  OK        00840700
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00840800
.ZG170A15             AIF   (K'&KEYRANGEEND LE 0).ZG170A16  OK          00840900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00841000
.ZG170A16             AIF   (K'&KEYRANGESTATE LE 0).ZG170A17  OK        00841100
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00841200
.ZG170A17             AIF   (K'&KREMPTY LE 0).ZG170A18  OK              00841300
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00841400
.ZG170A18             AIF   (K'&KRNOTEMPTY LE 0).ZG170A19  OK           00841500
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00841600
.ZG170A19             AIF   (K'&LISTSTATE LE 0).ZG170A20  OK            00841700
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00841800
.ZG170A20             AIF   (K'&LISTEMPTY LE 0).ZG170A21  OK            00841900
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00842000
.ZG170A21             AIF   (K'&LISTNOTEMPTY LE 0).ZG170A22  OK         00842100
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00842200
.ZG170A22             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG170A23  OK      00842300
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00842400
.ZG170A23             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG170A24  OK      00842500
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00842600
.ZG170A24             AIF   (K'&ENTRYKEY LE 0).ZG170A25  OK             00842700
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00842800
.ZG170A25             AIF   (K'&SECONDARYKEY LE 0).ZG170A26  OK         00842900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00843000
.ZG170A26             AIF   (K'&ACTION LE 0).ZG170A27  OK               00843100
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00843200
.ZG170A27             AIF   (K'&VECTORINDEX LE 0).ZG170A28  OK          00843300
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00843400
.ZG170A28             AIF   (K'&DRIVEEXIT LE 0).ZG170A29  OK            00843500
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00843600
.ZG170A29             AIF   (K'&MONITORTYPE LE 0).ZG170A30  OK          00843700
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00843800
.ZG170A30             AIF   (K'&NOTIFICATION LE 0).ZG170A31  OK         00843900
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00844000
.ZG170A31             AIF   (K'&UNC LE 0).ZG170A32  OK                  00844100
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00844200
.ZG170A32             AIF   (K'&STARTINDEX LE 0).ZG170A33  OK           00844300
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00844400
.ZG170A33             AIF   (K'&ENDINDEX LE 0).ZG170A34  OK             00844500
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00844600
.ZG170A34             AIF   (K'&MOSVECTOR LE 0).ZG170A35  OK            00844700
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00844800
.ZG170A35             AIF   (K'&BUFNUM LE 0).ZG170A36  OK               00844900
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00845000
.ZG170A36             AIF   (K'&BUFINCRNUM LE 0).ZG170A37  OK           00845100
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00845200
.ZG170A37             AIF   (K'&BUFSIZE LE 0).ZG170A38  OK              00845300
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00845400
.ZG170A38             AIF   (K'&ZCVAL LE 0).ZG170A39  OK                00845500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00845600
                      AIF  (K'&ZCVAL LE 160).ZG170A39A                  00845700
&ZCVAL                SETC '&ZCVAL'(1,160)                              00845800
&ZCVAL                SETC '&ZCVAL....'                                 00845900
.ZG170A39A            ANOP                                              00846000
&ZMS                  SETC  '"REQUEST'                                  00846100
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00846200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00846300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00846400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00846500
.ZG170A39             ANOP  ,                                           00846600
.*----------------------------------------------------------------***   00846700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00846800
                      AIF   (N'&KEYTYPE LE 1).ZG172A  CK NUM            00846900
&ZMS                  SETC  '"KEYTYPE='                                 00847000
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00847100
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            00847200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00847300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00847400
.ZG172A               ANOP  ,                                           00847500
.*-------------------------------------------------------------------   00847600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00847700
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            00847800
.ZG173A   AIF   ('&KEYTYPE(1)' NE 'ENTRY').ZG174A                       00847900
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     00848000
.*-------------------------------------------------------------------   00848100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00848200
.ZG174A   AIF   ('&KEYTYPE(1)' NE 'SECONDARY').ZG175A                   00848300
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             00848400
.*-------------------------------------------------------------------   00848500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00848600
.ZG175A               AIF   (K'&XKEYTYPE GT 0).ZG175C  KEYWORD          00848700
                      AIF   (K'&KEYTYPE(1) LE 0).ZG175B                 00848800
&ZMS                  SETC  '"KEYTYPE='                                 00848900
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00849000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00849100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00849200
&ZMS                  SETC  '&ZMS "ENTRY"'                              00849300
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      00849400
                      MNOTE 8,' &ZMS '                                  00849500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00849600
.ZG175B               ANOP  ,                                           00849700
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             00849800
.ZG175C               ANOP  ,                                           00849900
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   00850000
.*----------------------------------------------------------------***   00850100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00850200
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            00850300
                      AIF   (K'&BUFLIST LE 0).ZG177C                    00850400
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00850500
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   00850600
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   00850700
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      00850800
                      AIF   (N'&BUFLIST GT 1).ZG177A                    00850900
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              00851000
.ZG177A               AIF   (N'&BUFLIST LE 1).ZG177B  CK NUM            00851100
&ZMS                  SETC  '"BUFLIST='                                 00851200
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00851300
&ZMS                  SETC  '&ZMS "BUFLIST"'                            00851400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00851500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00851600
.ZG177B               AIF   (K'&XBUFLIST GT 0).ZG177C  ONE PARM         00851700
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00851800
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00851900
&ZMS                  SETC  ' '                                         00852000
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                00852100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00852200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00852300
.ZG177C               ANOP  ,                                           00852400
.*----------------------------------------------------------------***   00852500
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00852600
                      AIF   (K'&BUFFER LE 0).ZG204D  NO ME KEY          00852700
                      AIF   (N'&BUFFER LE 1).ZG204A  CK NUM             00852800
&ZMS                  SETC  '"BUFFER='                                  00852900
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00853000
&ZMS                  SETC  '&ZMS "BUFFER"'                             00853100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00853200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00853300
.ZG204A               AIF   (K'&XDATAREA LE 0).ZG204B                   00853400
&ZMS                  SETC  '"BUFFER'                                   00853500
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00853600
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00853700
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          00853800
                      MNOTE 8,' &ZMS KEY.'                              00853900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00854000
                      AGO   .ZG204D                                     00854100
.*                                                                      00854200
.ZG204B               ANOP  ,                                           00854300
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00854400
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   00854500
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   00854600
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      00854700
                      AIF   (N'&BUFFER GT 1).ZG204C                     00854800
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              00854900
.ZG204C               AIF   (K'&XBUFFER GT 0).ZG204D  ONE PARM          00855000
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00855100
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 00855200
&ZMS                  SETC  ' '                                         00855300
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 00855400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00855500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00855600
.ZG204D               ANOP  ,                                           00855700
.*------------------------------------------------------------------    00855800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00855900
                      AIF   (K'&XDATAREA GT 0).ZG213B                   00856000
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00856100
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00856200
&XDATAREA             SETC  ''          ENSURE NULL                     00856300
&XBUFLIST             SETC  ''          ENSURE NULL                     00856400
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00856500
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00856600
&ZMS                  SETC  '&ZMS REQUIRED:'                            00856700
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            00856800
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           00856900
                      MNOTE 8,' &ZMS '                                  00857000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00857100
.ZG213B               ANOP  ,                                           00857200
.*-------------------------------------------------------------------   00857300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00857400
.ZG177ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG204ZY                     00857500
.*-------------------------------------------------------------------   00857600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00857700
                      AIF   (K'&ZXBUFLIST LE 0).ZG177R  NOT I/O         00857800
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG177R            00857900
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                00858000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG177P               00858100
                      AIF   (K'&ZCGPR GT 2).ZG177Q                      00858200
                      AIF   ('&ZCGPR' EQ '0').ZG177Q                    00858300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00858400
                      AIF   (T'&ZCGPR NE 'N').ZG177Q  INVALID REG NAME  00858500
.ZG177P               ANOP  ,                                           00858600
                      AIF   (T'&ZCGPR NE 'N').ZG177R  NON NUMERIC       00858700
                      AIF   ('&ZCGPR' LT '2').ZG177Q                    00858800
                      AIF   ('&ZCGPR' LE '12').ZG177R                   00858900
.ZG177Q               ANOP  ,                                           00859000
&ZMS                  SETC  '"BUFLIST='                                 00859100
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00859200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00859300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00859400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00859500
.ZG177R               ANOP  ,                                           00859600
.*------------------------------------------------------------------    00859700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00859800
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            00859900
.*-------------------------------------------------------------------   00860000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00860100
.ZG180                ANOP  ,                                           00860200
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG180A             00860300
&ZTLC                 SETC 'VIRTUAL'                                    00860400
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG197        00860500
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     00860600
                      AIF   (N'&BUFADDRTYPE LE 1).ZG180A  CK NUM        00860700
&ZMS                  SETC  '"BUFADDRTYPE='                             00860800
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00860900
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00861000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00861100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00861200
.ZG180A               ANOP  ,                                           00861300
.*------------------------------------------------------------------    00861400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00861500
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00861600
.*-------------------------------------------------------------------   00861700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00861800
.ZG183                ANOP  ,                                           00861900
                      AIF   (K'&PAGEABLE(1) LE 0).ZG183A                00862000
&ZTLC                 SETC 'YES'                                        00862100
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG187           00862200
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00862300
                      AIF   (N'&PAGEABLE LE 1).ZG183A  CK NUM           00862400
&ZMS                  SETC  '"PAGEABLE='                                00862500
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00862600
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00862700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00862800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00862900
.ZG183A               ANOP  ,                                           00863000
.*----------------------------------------------------------------***   00863100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00863200
                      AIF   (N'&BUFSTGKEY LE 1).ZG185A  CK NUM          00863300
&ZMS                  SETC  '"BUFSTGKEY='                               00863400
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00863500
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00863600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00863700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00863800
.ZG185A               ANOP  ,                                           00863900
.*-------------------------------------------------------------------   00864000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00864100
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00864200
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00864300
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG185B  PARM         00864400
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00864500
                      AIF   (N'&BUFSTGKEY GT 1).ZG185B  MULTI           00864600
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00864700
.ZG185B               ANOP  ,                                           00864800
.*-------------------------------------------------------------------   00864900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00865000
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG185R  NOT I/O       00865100
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG185R                  00865200
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG185R          00865300
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00865400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG185P               00865500
                      AIF   (K'&ZCGPR GT 2).ZG185Q                      00865600
                      AIF   ('&ZCGPR' EQ '0').ZG185Q                    00865700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00865800
                      AIF   (T'&ZCGPR NE 'N').ZG185Q  INVALID REG NAME  00865900
.ZG185P               ANOP  ,                                           00866000
                      AIF   (T'&ZCGPR NE 'N').ZG185R  NON NUMERIC       00866100
                      AIF   ('&ZCGPR' LT '2').ZG185Q                    00866200
                      AIF   ('&ZCGPR' LE '12').ZG185R                   00866300
.ZG185Q               ANOP  ,                                           00866400
&ZMS                  SETC  '"BUFSTGKEY='                               00866500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00866600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00866700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00866800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00866900
.ZG185R               ANOP  ,                                           00867000
.*-------------------------------------------------------------------   00867100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00867200
.ZG187                ANOP  ,                                           00867300
&ZTLC                 SETC 'NO'                                         00867400
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG188           00867500
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00867600
                      AIF   (N'&PAGEABLE LE 1).ZG187A  CK NUM           00867700
&ZMS                  SETC  '"PAGEABLE='                                00867800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00867900
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00868000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00868100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00868200
.ZG187A               ANOP  ,                                           00868300
.*------------------------------------------------------------------    00868400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00868500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00868600
.ZG187A0              AIF   (K'&BUFSTGKEY LE 0).ZG187A1  OK             00868700
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00868800
.ZG187A1              AIF   (K'&ZCVAL LE 0).ZG187A2  OK                 00868900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00869000
&ZMS                  SETC  '"PAGEABLE'                                 00869100
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00869200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00869300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00869400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00869500
.ZG187A2              ANOP  ,                                           00869600
.*------------------------------------------------------------------    00869700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00869800
.ZG188                ANOP  ,                                           00869900
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00870000
                      AIF   (K'&XPAGEABLE GT 0).ZG188E  VALID ARG       00870100
                      AIF   (T'&PAGEABLE EQ 'O').ZG188D  OMITTED        00870200
&ZASYSLNDX            SETA  0                                           00870300
.ZG188A               ANOP  ,           POSITIONAL MACRO KEY            00870400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00870500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG188C           00870600
&ZTLC                 SETC 'PAGEABLE'                                   00870700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG188A  00870800
.ZG188B               ANOP  ,                                           00870900
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00871000
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        00871100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00871200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00871300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00871400
                      AGO   .ZG188E                                     00871500
.ZG188C               ANOP  ,                                           00871600
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00871700
&ZMS                  SETC  '"PAGEABLE='                                00871800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00871900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00872000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00872100
&ZMS                  SETC  '&ZMS "YES"'                                00872200
&ZMS                  SETC  '&ZMS OR "NO".'                             00872300
                      MNOTE 8,' &ZMS '                                  00872400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00872500
                      AGO   .ZG188E                                     00872600
.ZG188D               ANOP  ,                                           00872700
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00872800
.ZG188E               ANOP  ,                                           00872900
.*----------------------------------------------------------------***   00873000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00873100
                      AIF   (N'&BUFALET LE 1).ZG190A  CK NUM            00873200
&ZMS                  SETC  '"BUFALET='                                 00873300
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00873400
&ZMS                  SETC  '&ZMS "BUFALET"'                            00873500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00873600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00873700
.ZG190A               ANOP  ,                                           00873800
.*-------------------------------------------------------------------   00873900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00874000
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   00874100
&XBUFALET             SETC  'NO_BUFALET'                                00874200
                      AIF   (K'&BUFALET(1) LE 0).ZG190B  PARM           00874300
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           00874400
                      AIF   (N'&BUFALET GT 1).ZG190B  MULTI             00874500
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   00874600
.ZG190B               ANOP  ,                                           00874700
.*-------------------------------------------------------------------   00874800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00874900
                      AIF   (K'&ZXBUFALET LE 0).ZG190R  NOT I/O         00875000
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG190R                     00875100
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG190R            00875200
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                00875300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG190P               00875400
                      AIF   (K'&ZCGPR GT 2).ZG190Q                      00875500
                      AIF   ('&ZCGPR' EQ '0').ZG190Q                    00875600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00875700
                      AIF   (T'&ZCGPR NE 'N').ZG190Q  INVALID REG NAME  00875800
.ZG190P               ANOP  ,                                           00875900
                      AIF   (T'&ZCGPR NE 'N').ZG190R  NON NUMERIC       00876000
                      AIF   ('&ZCGPR' LT '2').ZG190Q                    00876100
                      AIF   ('&ZCGPR' LE '12').ZG190R                   00876200
.ZG190Q               ANOP  ,                                           00876300
&ZMS                  SETC  '"BUFALET='                                 00876400
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00876500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00876600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00876700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00876800
.ZG190R               ANOP  ,                                           00876900
.*------------------------------------------------------------------    00877000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00877100
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            00877200
.*-------------------------------------------------------------------   00877300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00877400
.ZG194                ANOP  ,                                           00877500
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG194A             00877600
&ZTLC                 SETC '31'                                         00877700
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG195        00877800
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     00877900
                      AIF   (N'&BUFADDRSIZE LE 1).ZG194A  CK NUM        00878000
&ZMS                  SETC  '"BUFADDRSIZE='                             00878100
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00878200
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00878300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00878400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00878500
.ZG194A               ANOP  ,                                           00878600
.*-------------------------------------------------------------------   00878700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00878800
.ZG195                ANOP  ,                                           00878900
&ZTLC                 SETC '64'                                         00879000
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG196        00879100
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     00879200
                      AIF   (N'&BUFADDRSIZE LE 1).ZG195A  CK NUM        00879300
&ZMS                  SETC  '"BUFADDRSIZE='                             00879400
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00879500
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00879600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00879700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00879800
.ZG195A               ANOP  ,                                           00879900
.*------------------------------------------------------------------    00880000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00880100
.ZG196                ANOP  ,                                           00880200
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   00880300
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG196E  VALID ARG    00880400
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG196D  OMITTED     00880500
&ZASYSLNDX            SETA  0                                           00880600
.ZG196A               ANOP  ,           POSITIONAL MACRO KEY            00880700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00880800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG196C           00880900
&ZTLC                 SETC 'BUFADDRSIZE'                                00881000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG196A  00881100
.ZG196B               ANOP  ,                                           00881200
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00881300
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     00881400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00881500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00881600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00881700
                      AGO   .ZG196E                                     00881800
.ZG196C               ANOP  ,                                           00881900
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00882000
&ZMS                  SETC  '"BUFADDRSIZE='                             00882100
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00882200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00882300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00882400
&ZMS                  SETC  '&ZMS "31"'                                 00882500
&ZMS                  SETC  '&ZMS OR "64".'                             00882600
                      MNOTE 8,' &ZMS '                                  00882700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00882800
                      AGO   .ZG196E                                     00882900
.ZG196D               ANOP  ,                                           00883000
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             00883100
.ZG196E               ANOP  ,                                           00883200
.*-------------------------------------------------------------------   00883300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00883400
.ZG197                ANOP  ,                                           00883500
&ZTLC                 SETC 'REAL'                                       00883600
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG203        00883700
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     00883800
                      AIF   (N'&BUFADDRTYPE LE 1).ZG197A  CK NUM        00883900
&ZMS                  SETC  '"BUFADDRTYPE='                             00884000
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00884100
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00884200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00884300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00884400
.ZG197A               ANOP  ,                                           00884500
.*------------------------------------------------------------------    00884600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00884700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00884800
.ZG197A0              AIF   (K'&PAGEABLE LE 0).ZG197A1  OK              00884900
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00885000
.ZG197A1              AIF   (K'&BUFSTGKEY LE 0).ZG197A2  OK             00885100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00885200
.ZG197A2              AIF   (K'&BUFALET LE 0).ZG197A3  OK               00885300
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00885400
.ZG197A3              AIF   (K'&ZCVAL LE 0).ZG197A4  OK                 00885500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00885600
&ZMS                  SETC  '"BUFADDRTYPE'                              00885700
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00885800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00885900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00886000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00886100
.ZG197A4              ANOP  ,                                           00886200
.*------------------------------------------------------------------    00886300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00886400
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            00886500
.*-------------------------------------------------------------------   00886600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00886700
.ZG200                ANOP  ,                                           00886800
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG200A             00886900
&ZTLC                 SETC '31'                                         00887000
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG201        00887100
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     00887200
                      AIF   (N'&BUFADDRSIZE LE 1).ZG200A  CK NUM        00887300
&ZMS                  SETC  '"BUFADDRSIZE='                             00887400
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00887500
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00887600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00887700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00887800
.ZG200A               ANOP  ,                                           00887900
.*-------------------------------------------------------------------   00888000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00888100
.ZG201                ANOP  ,                                           00888200
&ZTLC                 SETC '64'                                         00888300
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG202        00888400
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     00888500
                      AIF   (N'&BUFADDRSIZE LE 1).ZG201A  CK NUM        00888600
&ZMS                  SETC  '"BUFADDRSIZE='                             00888700
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00888800
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00888900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00889000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00889100
.ZG201A               ANOP  ,                                           00889200
.*------------------------------------------------------------------    00889300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00889400
.ZG202                ANOP  ,                                           00889500
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   00889600
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG202E  VALID ARG    00889700
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG202D  OMITTED     00889800
&ZASYSLNDX            SETA  0                                           00889900
.ZG202A               ANOP  ,           POSITIONAL MACRO KEY            00890000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00890100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG202C           00890200
&ZTLC                 SETC 'BUFADDRSIZE'                                00890300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG202A  00890400
.ZG202B               ANOP  ,                                           00890500
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00890600
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     00890700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00890800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00890900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00891000
                      AGO   .ZG202E                                     00891100
.ZG202C               ANOP  ,                                           00891200
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00891300
&ZMS                  SETC  '"BUFADDRSIZE='                             00891400
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00891500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00891600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00891700
&ZMS                  SETC  '&ZMS "31"'                                 00891800
&ZMS                  SETC  '&ZMS OR "64".'                             00891900
                      MNOTE 8,' &ZMS '                                  00892000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00892100
                      AGO   .ZG202E                                     00892200
.ZG202D               ANOP  ,                                           00892300
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             00892400
.ZG202E               ANOP  ,                                           00892500
.*------------------------------------------------------------------    00892600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00892700
.ZG203                ANOP  ,                                           00892800
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   00892900
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG203E  VALID ARG    00893000
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG203D  OMITTED     00893100
&ZASYSLNDX            SETA  0                                           00893200
.ZG203A               ANOP  ,           POSITIONAL MACRO KEY            00893300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00893400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG203C           00893500
&ZTLC                 SETC 'BUFADDRTYPE'                                00893600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG203A  00893700
.ZG203B               ANOP  ,                                           00893800
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00893900
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     00894000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00894100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00894200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00894300
                      AGO   .ZG203E                                     00894400
.ZG203C               ANOP  ,                                           00894500
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00894600
&ZMS                  SETC  '"BUFADDRTYPE='                             00894700
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00894800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00894900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00895000
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            00895100
&ZMS                  SETC  '&ZMS OR "REAL".'                           00895200
                      MNOTE 8,' &ZMS '                                  00895300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00895400
                      AGO   .ZG203E                                     00895500
.ZG203D               ANOP  ,                                           00895600
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             00895700
.ZG203E               ANOP  ,                                           00895800
.*-------------------------------------------------------------------   00895900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00896000
.ZG204ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG213ZY                      00896100
.*-------------------------------------------------------------------   00896200
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00896300
&ZCVAL                SETC ''           ERROR KEY FIELD                 00896400
.ZG204I0              AIF   (K'&BUFADDRTYPE LE 0).ZG204I1               00896500
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         00896600
.ZG204I1              AIF   (K'&BUFALET LE 0).ZG204I2                   00896700
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          00896800
.ZG204I2              AIF   (K'&BUFADDRSIZE LE 0).ZG204I3               00896900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         00897000
.ZG204I3              AIF   (K'&ZCVAL LE 0).ZG204J  KEY                 00897100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00897200
&ZMS                  SETC  '"BUFFER'                                   00897300
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00897400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00897500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00897600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00897700
.ZG204J               ANOP  ,                                           00897800
.*-------------------------------------------------------------------   00897900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00898000
                      AIF   (K'&ZXBUFFER LE 0).ZG204R  NOT I/O          00898100
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG204R             00898200
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  00898300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG204P               00898400
                      AIF   (K'&ZCGPR GT 2).ZG204Q                      00898500
                      AIF   ('&ZCGPR' EQ '0').ZG204Q                    00898600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00898700
                      AIF   (T'&ZCGPR NE 'N').ZG204Q  INVALID REG NAME  00898800
.ZG204P               ANOP  ,                                           00898900
                      AIF   (T'&ZCGPR NE 'N').ZG204R  NON NUMERIC       00899000
                      AIF   ('&ZCGPR' LT '2').ZG204Q                    00899100
                      AIF   ('&ZCGPR' LE '12').ZG204R                   00899200
.ZG204Q               ANOP  ,                                           00899300
&ZMS                  SETC  '"BUFFER='                                  00899400
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00899500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00899600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00899700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00899800
.ZG204R               ANOP  ,                                           00899900
.*------------------------------------------------------------------    00900000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00900100
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00900200
.*-------------------------------------------------------------------   00900300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00900400
.ZG207                ANOP  ,                                           00900500
                      AIF   (K'&PAGEABLE(1) LE 0).ZG207A                00900600
&ZTLC                 SETC 'YES'                                        00900700
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG211           00900800
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00900900
                      AIF   (N'&PAGEABLE LE 1).ZG207A  CK NUM           00901000
&ZMS                  SETC  '"PAGEABLE='                                00901100
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00901200
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00901300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00901400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00901500
.ZG207A               ANOP  ,                                           00901600
.*----------------------------------------------------------------***   00901700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00901800
                      AIF   (N'&BUFSTGKEY LE 1).ZG209A  CK NUM          00901900
&ZMS                  SETC  '"BUFSTGKEY='                               00902000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00902100
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00902200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00902300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00902400
.ZG209A               ANOP  ,                                           00902500
.*-------------------------------------------------------------------   00902600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00902700
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00902800
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00902900
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG209B  PARM         00903000
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00903100
                      AIF   (N'&BUFSTGKEY GT 1).ZG209B  MULTI           00903200
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00903300
.ZG209B               ANOP  ,                                           00903400
.*-------------------------------------------------------------------   00903500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00903600
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG209R  NOT I/O       00903700
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG209R                  00903800
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG209R          00903900
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00904000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG209P               00904100
                      AIF   (K'&ZCGPR GT 2).ZG209Q                      00904200
                      AIF   ('&ZCGPR' EQ '0').ZG209Q                    00904300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00904400
                      AIF   (T'&ZCGPR NE 'N').ZG209Q  INVALID REG NAME  00904500
.ZG209P               ANOP  ,                                           00904600
                      AIF   (T'&ZCGPR NE 'N').ZG209R  NON NUMERIC       00904700
                      AIF   ('&ZCGPR' LT '2').ZG209Q                    00904800
                      AIF   ('&ZCGPR' LE '12').ZG209R                   00904900
.ZG209Q               ANOP  ,                                           00905000
&ZMS                  SETC  '"BUFSTGKEY='                               00905100
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00905200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00905300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00905400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00905500
.ZG209R               ANOP  ,                                           00905600
.*-------------------------------------------------------------------   00905700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00905800
.ZG211                ANOP  ,                                           00905900
&ZTLC                 SETC 'NO'                                         00906000
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG212           00906100
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00906200
                      AIF   (N'&PAGEABLE LE 1).ZG211A  CK NUM           00906300
&ZMS                  SETC  '"PAGEABLE='                                00906400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00906500
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00906600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00906700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00906800
.ZG211A               ANOP  ,                                           00906900
.*------------------------------------------------------------------    00907000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00907100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00907200
.ZG211A0              AIF   (K'&BUFSTGKEY LE 0).ZG211A1  OK             00907300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00907400
.ZG211A1              AIF   (K'&ZCVAL LE 0).ZG211A2  OK                 00907500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00907600
&ZMS                  SETC  '"PAGEABLE'                                 00907700
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00907800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00907900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00908000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00908100
.ZG211A2              ANOP  ,                                           00908200
.*------------------------------------------------------------------    00908300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00908400
.ZG212                ANOP  ,                                           00908500
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00908600
                      AIF   (K'&XPAGEABLE GT 0).ZG212E  VALID ARG       00908700
                      AIF   (T'&PAGEABLE EQ 'O').ZG212D  OMITTED        00908800
&ZASYSLNDX            SETA  0                                           00908900
.ZG212A               ANOP  ,           POSITIONAL MACRO KEY            00909000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00909100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG212C           00909200
&ZTLC                 SETC 'PAGEABLE'                                   00909300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG212A  00909400
.ZG212B               ANOP  ,                                           00909500
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00909600
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        00909700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00909800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00909900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00910000
                      AGO   .ZG212E                                     00910100
.ZG212C               ANOP  ,                                           00910200
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00910300
&ZMS                  SETC  '"PAGEABLE='                                00910400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00910500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00910600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00910700
&ZMS                  SETC  '&ZMS "YES"'                                00910800
&ZMS                  SETC  '&ZMS OR "NO".'                             00910900
                      MNOTE 8,' &ZMS '                                  00911000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00911100
                      AGO   .ZG212E                                     00911200
.ZG212D               ANOP  ,                                           00911300
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00911400
.ZG212E               ANOP  ,                                           00911500
.*-------------------------------------------------------------------   00911600
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00911700
.ZG213ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00911800
.*-------------------------------------------------------------------   00911900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00912000
.ZG214                ANOP  ,                                           00912100
&ZTLC                 SETC 'MONITOR_EVENTQ'                             00912200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG233            00912300
&XREQUEST             SETC  'MONITOR_EVENTQ'    SET KEYWORD             00912400
                      AIF   (N'&REQUEST LE 1).ZG214A  CK NUM            00912500
&ZMS                  SETC  '"REQUEST='                                 00912600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00912700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00912800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00912900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00913000
.ZG214A               ANOP  ,                                           00913100
.*------------------------------------------------------------------    00913200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00913300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00913400
.ZG214A0              AIF   (K'&LOCKINDEX LE 0).ZG214A1  OK             00913500
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00913600
.ZG214A1              AIF   (K'&LOCKOPER LE 0).ZG214A2  OK              00913700
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00913800
.ZG214A2              AIF   (K'&LOCKMODE LE 0).ZG214A3  OK              00913900
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00914000
.ZG214A3              AIF   (K'&LOCKCOMP LE 0).ZG214A4  OK              00914100
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00914200
.ZG214A4              AIF   (K'&LOCKDATA LE 0).ZG214A5  OK              00914300
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00914400
.ZG214A5              AIF   (K'&LISTNUM LE 0).ZG214A6  OK               00914500
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00914600
.ZG214A6              AIF   (K'&BUFLIST LE 0).ZG214A7  OK               00914700
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00914800
.ZG214A7              AIF   (K'&BUFADDRTYPE LE 0).ZG214A8  OK           00914900
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00915000
.ZG214A8              AIF   (K'&PAGEABLE LE 0).ZG214A9  OK              00915100
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00915200
.ZG214A9              AIF   (K'&BUFSTGKEY LE 0).ZG214A10  OK            00915300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00915400
.ZG214A10             AIF   (K'&BUFALET LE 0).ZG214A11  OK              00915500
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00915600
.ZG214A11             AIF   (K'&BUFADDRSIZE LE 0).ZG214A12  OK          00915700
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00915800
.ZG214A12             AIF   (K'&BUFFER LE 0).ZG214A13  OK               00915900
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00916000
.ZG214A13             AIF   (K'&AUTHCOMP LE 0).ZG214A14  OK             00916100
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00916200
.ZG214A14             AIF   (K'&NEWAUTH LE 0).ZG214A15  OK              00916300
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00916400
.ZG214A15             AIF   (K'&LISTLIMIT LE 0).ZG214A16  OK            00916500
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00916600
.ZG214A16             AIF   (K'&LISTDESC LE 0).ZG214A17  OK             00916700
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00916800
.ZG214A17             AIF   (K'&LISTKEY LE 0).ZG214A18  OK              00916900
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00917000
.ZG214A18             AIF   (K'&MAXLISTKEY LE 0).ZG214A19  OK           00917100
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00917200
.ZG214A19             AIF   (K'&SETCURSOR LE 0).ZG214A20  OK            00917300
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00917400
.ZG214A20             AIF   (K'&KEYRANGE LE 0).ZG214A21  OK             00917500
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00917600
.ZG214A21             AIF   (K'&KEYRANGESTART LE 0).ZG214A22  OK        00917700
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00917800
.ZG214A22             AIF   (K'&KEYRANGEEND LE 0).ZG214A23  OK          00917900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00918000
.ZG214A23             AIF   (K'&KEYRANGESTATE LE 0).ZG214A24  OK        00918100
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00918200
.ZG214A24             AIF   (K'&KREMPTY LE 0).ZG214A25  OK              00918300
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00918400
.ZG214A25             AIF   (K'&KRNOTEMPTY LE 0).ZG214A26  OK           00918500
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00918600
.ZG214A26             AIF   (K'&LISTSTATE LE 0).ZG214A27  OK            00918700
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00918800
.ZG214A27             AIF   (K'&LISTEMPTY LE 0).ZG214A28  OK            00918900
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00919000
.ZG214A28             AIF   (K'&LISTNOTEMPTY LE 0).ZG214A29  OK         00919100
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00919200
.ZG214A29             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG214A30  OK      00919300
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00919400
.ZG214A30             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG214A31  OK      00919500
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00919600
.ZG214A31             AIF   (K'&ENTRYKEY LE 0).ZG214A32  OK             00919700
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00919800
.ZG214A32             AIF   (K'&SECONDARYKEY LE 0).ZG214A33  OK         00919900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00920000
.ZG214A33             AIF   (K'&MONITORTYPE LE 0).ZG214A34  OK          00920100
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00920200
.ZG214A34             AIF   (K'&NOTIFICATION LE 0).ZG214A35  OK         00920300
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00920400
.ZG214A35             AIF   (K'&UNC LE 0).ZG214A36  OK                  00920500
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00920600
.ZG214A36             AIF   (K'&STARTINDEX LE 0).ZG214A37  OK           00920700
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00920800
.ZG214A37             AIF   (K'&ENDINDEX LE 0).ZG214A38  OK             00920900
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00921000
.ZG214A38             AIF   (K'&MOSVECTOR LE 0).ZG214A39  OK            00921100
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00921200
.ZG214A39             AIF   (K'&BUFNUM LE 0).ZG214A40  OK               00921300
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00921400
.ZG214A40             AIF   (K'&BUFINCRNUM LE 0).ZG214A41  OK           00921500
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00921600
.ZG214A41             AIF   (K'&BUFSIZE LE 0).ZG214A42  OK              00921700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00921800
.ZG214A42             AIF   (K'&ZCVAL LE 0).ZG214A43  OK                00921900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00922000
                      AIF  (K'&ZCVAL LE 160).ZG214A43A                  00922100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00922200
&ZCVAL                SETC '&ZCVAL....'                                 00922300
.ZG214A43A            ANOP                                              00922400
&ZMS                  SETC  '"REQUEST'                                  00922500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00922600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00922700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00922800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00922900
.ZG214A43             ANOP  ,                                           00923000
.*----------------------------------------------------------------***   00923100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00923200
                      AIF   (N'&KEYTYPE LE 1).ZG216A  CK NUM            00923300
&ZMS                  SETC  '"KEYTYPE='                                 00923400
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00923500
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            00923600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00923700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00923800
.ZG216A               ANOP  ,                                           00923900
.*-------------------------------------------------------------------   00924000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00924100
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            00924200
.ZG217A   AIF   ('&KEYTYPE(1)' NE 'ENTRY').ZG218A                       00924300
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     00924400
.*-------------------------------------------------------------------   00924500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00924600
.ZG218A   AIF   ('&KEYTYPE(1)' NE 'SECONDARY').ZG219A                   00924700
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             00924800
.*-------------------------------------------------------------------   00924900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00925000
.ZG219A               AIF   (K'&XKEYTYPE GT 0).ZG219C  KEYWORD          00925100
                      AIF   (K'&KEYTYPE(1) LE 0).ZG219B                 00925200
&ZMS                  SETC  '"KEYTYPE='                                 00925300
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00925400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00925500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00925600
&ZMS                  SETC  '&ZMS "ENTRY"'                              00925700
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      00925800
                      MNOTE 8,' &ZMS '                                  00925900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00926000
.ZG219B               ANOP  ,                                           00926100
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             00926200
.ZG219C               ANOP  ,                                           00926300
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   00926400
.*------------------------------------------------------------------    00926500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00926600
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00926700
.*-------------------------------------------------------------------   00926800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00926900
.ZG222                ANOP  ,                                           00927000
                      AIF   (K'&ACTION(1) LE 0).ZG222A                  00927100
&ZTLC                 SETC 'START'                                      00927200
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG231             00927300
&XACTION              SETC  'START'     SET KEYWORD                     00927400
                      AIF   (N'&ACTION LE 1).ZG222A  CK NUM             00927500
&ZMS                  SETC  '"ACTION='                                  00927600
&ZMS                  SETC  '&ZMS.&ACTION"'                             00927700
&ZMS                  SETC  '&ZMS "ACTION"'                             00927800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00927900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00928000
.ZG222A               ANOP  ,                                           00928100
.*----------------------------------------------------------------***   00928200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00928300
                      AIF   (N'&VECTORINDEX LE 1).ZG224A  CK NUM        00928400
&ZMS                  SETC  '"VECTORINDEX='                             00928500
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00928600
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00928700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00928800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00928900
.ZG224A               ANOP  ,                                           00929000
.*-------------------------------------------------------------------   00929100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00929200
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00929300
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00929400
                      AIF   (N'&VECTORINDEX GT 1).ZG224B  MULTI         00929500
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00929600
.ZG224B               AIF   (K'&VECTORINDEX(1) GT 0).ZG224C             00929700
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00929800
&ZMS                  SETC  ' '                                         00929900
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00930000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00930100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00930200
.ZG224C               ANOP  ,                                           00930300
.*-------------------------------------------------------------------   00930400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00930500
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG224R  NOT I/O     00930600
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG224R        00930700
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00930800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG224P               00930900
                      AIF   (K'&ZCGPR GT 2).ZG224Q                      00931000
                      AIF   ('&ZCGPR' EQ '0').ZG224Q                    00931100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00931200
                      AIF   (T'&ZCGPR NE 'N').ZG224Q  INVALID REG NAME  00931300
.ZG224P               ANOP  ,                                           00931400
                      AIF   (T'&ZCGPR NE 'N').ZG224R  NON NUMERIC       00931500
                      AIF   ('&ZCGPR' LT '2').ZG224Q                    00931600
                      AIF   ('&ZCGPR' LE '12').ZG224R                   00931700
.ZG224Q               ANOP  ,                                           00931800
&ZMS                  SETC  '"VECTORINDEX='                             00931900
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00932000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00932100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00932200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00932300
.ZG224R               ANOP  ,                                           00932400
.*----------------------------------------------------------------***   00932500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00932600
                      AIF   (N'&DRIVEEXIT LE 1).ZG227A  CK NUM          00932700
&ZMS                  SETC  '"DRIVEEXIT='                               00932800
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00932900
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          00933000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00933100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00933200
.ZG227A               ANOP  ,                                           00933300
.*-------------------------------------------------------------------   00933400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00933500
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            00933600
.ZG228A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG229A                       00933700
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     00933800
.*-------------------------------------------------------------------   00933900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00934000
.ZG229A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG230A                        00934100
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     00934200
.*-------------------------------------------------------------------   00934300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00934400
.ZG230A               AIF   (K'&XDRIVEEXIT GT 0).ZG230C  KEYWORD        00934500
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG230B               00934600
&ZMS                  SETC  '"DRIVEEXIT='                               00934700
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00934800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00934900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00935000
&ZMS                  SETC  '&ZMS "YES"'                                00935100
&ZMS                  SETC  '&ZMS OR "NO".'                             00935200
                      MNOTE 8,' &ZMS '                                  00935300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00935400
.ZG230B               ANOP  ,                                           00935500
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             00935600
.ZG230C               ANOP  ,                                           00935700
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   00935800
.*-------------------------------------------------------------------   00935900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00936000
.ZG231                ANOP  ,                                           00936100
&ZTLC                 SETC 'STOP'                                       00936200
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG232             00936300
&XACTION              SETC  'STOP'      SET KEYWORD                     00936400
                      AIF   (N'&ACTION LE 1).ZG231A  CK NUM             00936500
&ZMS                  SETC  '"ACTION='                                  00936600
&ZMS                  SETC  '&ZMS.&ACTION"'                             00936700
&ZMS                  SETC  '&ZMS "ACTION"'                             00936800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00936900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00937000
.ZG231A               ANOP  ,                                           00937100
.*------------------------------------------------------------------    00937200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00937300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00937400
.ZG231A0              AIF   (K'&VECTORINDEX LE 0).ZG231A1  OK           00937500
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00937600
.ZG231A1              AIF   (K'&DRIVEEXIT LE 0).ZG231A2  OK             00937700
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00937800
.ZG231A2              AIF   (K'&ZCVAL LE 0).ZG231A3  OK                 00937900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00938000
&ZMS                  SETC  '"ACTION'                                   00938100
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00938200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00938300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00938400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00938500
.ZG231A3              ANOP  ,                                           00938600
.*------------------------------------------------------------------    00938700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00938800
.ZG232                ANOP  ,                                           00938900
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00939000
                      AIF   (K'&XACTION GT 0).ZG232E  VALID ARG         00939100
                      AIF   (T'&ACTION EQ 'O').ZG232D  OMITTED          00939200
&ZASYSLNDX            SETA  0                                           00939300
.ZG232A               ANOP  ,           POSITIONAL MACRO KEY            00939400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00939500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG232C           00939600
&ZTLC                 SETC 'ACTION'                                     00939700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG232A  00939800
.ZG232B               ANOP  ,                                           00939900
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00940000
&ZMS                  SETC  'THE "ACTION" KEY'                          00940100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00940200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00940300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00940400
                      AGO   .ZG232E                                     00940500
.ZG232C               ANOP  ,                                           00940600
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00940700
&ZMS                  SETC  '"ACTION='                                  00940800
&ZMS                  SETC  '&ZMS.&ACTION"'                             00940900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00941000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00941100
&ZMS                  SETC  '&ZMS "START"'                              00941200
&ZMS                  SETC  '&ZMS OR "STOP".'                           00941300
                      MNOTE 8,' &ZMS '                                  00941400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00941500
                      AGO   .ZG232E                                     00941600
.ZG232D               ANOP  ,                                           00941700
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00941800
.ZG232E               ANOP  ,                                           00941900
.*------------------------------------------------------------------    00942000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00942100
                      AIF   (K'&ACTION(1) GT 0).ZG232F  PARM            00942200
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00942300
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00942400
&ZMS                  SETC  'THE'                                       00942500
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00942600
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00942700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00942800
&ZMS                  SETC  '&ZMS "START"'                              00942900
&ZMS                  SETC  '&ZMS OR "STOP".'                           00943000
                      MNOTE 8,' &ZMS '                                  00943100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00943200
.ZG232F               ANOP  ,                                           00943300
.*-------------------------------------------------------------------   00943400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00943500
.ZG233                ANOP  ,                                           00943600
&ZTLC                 SETC 'MONITOR_LIST'                               00943700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG260            00943800
&XREQUEST             SETC  'MONITOR_LIST'      SET KEYWORD             00943900
                      AIF   (N'&REQUEST LE 1).ZG233A  CK NUM            00944000
&ZMS                  SETC  '"REQUEST='                                 00944100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00944200
&ZMS                  SETC  '&ZMS "REQUEST"'                            00944300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00944400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00944500
.ZG233A               ANOP  ,                                           00944600
.*------------------------------------------------------------------    00944700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00944800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00944900
.ZG233A0              AIF   (K'&LOCKINDEX LE 0).ZG233A1  OK             00945000
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00945100
.ZG233A1              AIF   (K'&LOCKOPER LE 0).ZG233A2  OK              00945200
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00945300
.ZG233A2              AIF   (K'&LOCKMODE LE 0).ZG233A3  OK              00945400
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00945500
.ZG233A3              AIF   (K'&LOCKCOMP LE 0).ZG233A4  OK              00945600
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00945700
.ZG233A4              AIF   (K'&LOCKDATA LE 0).ZG233A5  OK              00945800
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00945900
.ZG233A5              AIF   (K'&BUFLIST LE 0).ZG233A6  OK               00946000
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00946100
.ZG233A6              AIF   (K'&BUFADDRTYPE LE 0).ZG233A7  OK           00946200
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00946300
.ZG233A7              AIF   (K'&PAGEABLE LE 0).ZG233A8  OK              00946400
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00946500
.ZG233A8              AIF   (K'&BUFSTGKEY LE 0).ZG233A9  OK             00946600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00946700
.ZG233A9              AIF   (K'&BUFALET LE 0).ZG233A10  OK              00946800
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00946900
.ZG233A10             AIF   (K'&BUFADDRSIZE LE 0).ZG233A11  OK          00947000
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00947100
.ZG233A11             AIF   (K'&BUFFER LE 0).ZG233A12  OK               00947200
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00947300
.ZG233A12             AIF   (K'&AUTHCOMP LE 0).ZG233A13  OK             00947400
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00947500
.ZG233A13             AIF   (K'&NEWAUTH LE 0).ZG233A14  OK              00947600
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00947700
.ZG233A14             AIF   (K'&LISTLIMIT LE 0).ZG233A15  OK            00947800
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00947900
.ZG233A15             AIF   (K'&LISTDESC LE 0).ZG233A16  OK             00948000
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00948100
.ZG233A16             AIF   (K'&LISTKEY LE 0).ZG233A17  OK              00948200
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00948300
.ZG233A17             AIF   (K'&MAXLISTKEY LE 0).ZG233A18  OK           00948400
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00948500
.ZG233A18             AIF   (K'&SETCURSOR LE 0).ZG233A19  OK            00948600
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00948700
.ZG233A19             AIF   (K'&KEYRANGE LE 0).ZG233A20  OK             00948800
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00948900
.ZG233A20             AIF   (K'&KEYRANGESTART LE 0).ZG233A21  OK        00949000
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00949100
.ZG233A21             AIF   (K'&KEYRANGEEND LE 0).ZG233A22  OK          00949200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00949300
.ZG233A22             AIF   (K'&KEYRANGESTATE LE 0).ZG233A23  OK        00949400
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00949500
.ZG233A23             AIF   (K'&KREMPTY LE 0).ZG233A24  OK              00949600
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00949700
.ZG233A24             AIF   (K'&KRNOTEMPTY LE 0).ZG233A25  OK           00949800
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00949900
.ZG233A25             AIF   (K'&LISTSTATE LE 0).ZG233A26  OK            00950000
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00950100
.ZG233A26             AIF   (K'&LISTEMPTY LE 0).ZG233A27  OK            00950200
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00950300
.ZG233A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG233A28  OK         00950400
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00950500
.ZG233A28             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG233A29  OK      00950600
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00950700
.ZG233A29             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG233A30  OK      00950800
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00950900
.ZG233A30             AIF   (K'&KEYTYPE LE 0).ZG233A31  OK              00951000
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00951100
.ZG233A31             AIF   (K'&ENTRYKEY LE 0).ZG233A32  OK             00951200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00951300
.ZG233A32             AIF   (K'&SECONDARYKEY LE 0).ZG233A33  OK         00951400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00951500
.ZG233A33             AIF   (K'&UNC LE 0).ZG233A34  OK                  00951600
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00951700
.ZG233A34             AIF   (K'&STARTINDEX LE 0).ZG233A35  OK           00951800
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00951900
.ZG233A35             AIF   (K'&ENDINDEX LE 0).ZG233A36  OK             00952000
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00952100
.ZG233A36             AIF   (K'&MOSVECTOR LE 0).ZG233A37  OK            00952200
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00952300
.ZG233A37             AIF   (K'&BUFNUM LE 0).ZG233A38  OK               00952400
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00952500
.ZG233A38             AIF   (K'&BUFINCRNUM LE 0).ZG233A39  OK           00952600
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00952700
.ZG233A39             AIF   (K'&BUFSIZE LE 0).ZG233A40  OK              00952800
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00952900
.ZG233A40             AIF   (K'&ZCVAL LE 0).ZG233A41  OK                00953000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00953100
                      AIF  (K'&ZCVAL LE 160).ZG233A41A                  00953200
&ZCVAL                SETC '&ZCVAL'(1,160)                              00953300
&ZCVAL                SETC '&ZCVAL....'                                 00953400
.ZG233A41A            ANOP                                              00953500
&ZMS                  SETC  '"REQUEST'                                  00953600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00953700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00953800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00953900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00954000
.ZG233A41             ANOP  ,                                           00954100
.*----------------------------------------------------------------***   00954200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00954300
                      AIF   (N'&LISTNUM LE 1).ZG235A  CK NUM            00954400
&ZMS                  SETC  '"LISTNUM='                                 00954500
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00954600
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00954700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00954800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00954900
.ZG235A               ANOP  ,                                           00955000
.*-------------------------------------------------------------------   00955100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00955200
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00955300
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00955400
                      AIF   (N'&LISTNUM GT 1).ZG235B  MULTI             00955500
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00955600
.ZG235B               AIF   (K'&LISTNUM(1) GT 0).ZG235C                 00955700
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00955800
&ZMS                  SETC  ' '                                         00955900
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00956000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00956100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00956200
.ZG235C               ANOP  ,                                           00956300
.*-------------------------------------------------------------------   00956400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00956500
                      AIF   (K'&ZXLISTNUM LE 0).ZG235R  NOT I/O         00956600
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG235R            00956700
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00956800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG235P               00956900
                      AIF   (K'&ZCGPR GT 2).ZG235Q                      00957000
                      AIF   ('&ZCGPR' EQ '0').ZG235Q                    00957100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00957200
                      AIF   (T'&ZCGPR NE 'N').ZG235Q  INVALID REG NAME  00957300
.ZG235P               ANOP  ,                                           00957400
                      AIF   (T'&ZCGPR NE 'N').ZG235R  NON NUMERIC       00957500
                      AIF   ('&ZCGPR' LT '2').ZG235Q                    00957600
                      AIF   ('&ZCGPR' LE '12').ZG235R                   00957700
.ZG235Q               ANOP  ,                                           00957800
&ZMS                  SETC  '"LISTNUM='                                 00957900
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00958000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00958100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00958200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00958300
.ZG235R               ANOP  ,                                           00958400
.*------------------------------------------------------------------    00958500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00958600
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00958700
.*-------------------------------------------------------------------   00958800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00958900
.ZG239                ANOP  ,                                           00959000
                      AIF   (K'&ACTION(1) LE 0).ZG239A                  00959100
&ZTLC                 SETC 'START'                                      00959200
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG258             00959300
&XACTION              SETC  'START'     SET KEYWORD                     00959400
                      AIF   (N'&ACTION LE 1).ZG239A  CK NUM             00959500
&ZMS                  SETC  '"ACTION='                                  00959600
&ZMS                  SETC  '&ZMS.&ACTION"'                             00959700
&ZMS                  SETC  '&ZMS "ACTION"'                             00959800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00959900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00960000
.ZG239A               ANOP  ,                                           00960100
.*----------------------------------------------------------------***   00960200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00960300
                      AIF   (N'&VECTORINDEX LE 1).ZG241A  CK NUM        00960400
&ZMS                  SETC  '"VECTORINDEX='                             00960500
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00960600
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00960700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00960800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00960900
.ZG241A               ANOP  ,                                           00961000
.*-------------------------------------------------------------------   00961100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00961200
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00961300
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00961400
                      AIF   (N'&VECTORINDEX GT 1).ZG241B  MULTI         00961500
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00961600
.ZG241B               AIF   (K'&VECTORINDEX(1) GT 0).ZG241C             00961700
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00961800
&ZMS                  SETC  ' '                                         00961900
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00962000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00962100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00962200
.ZG241C               ANOP  ,                                           00962300
.*-------------------------------------------------------------------   00962400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00962500
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG241R  NOT I/O     00962600
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG241R        00962700
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00962800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG241P               00962900
                      AIF   (K'&ZCGPR GT 2).ZG241Q                      00963000
                      AIF   ('&ZCGPR' EQ '0').ZG241Q                    00963100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00963200
                      AIF   (T'&ZCGPR NE 'N').ZG241Q  INVALID REG NAME  00963300
.ZG241P               ANOP  ,                                           00963400
                      AIF   (T'&ZCGPR NE 'N').ZG241R  NON NUMERIC       00963500
                      AIF   ('&ZCGPR' LT '2').ZG241Q                    00963600
                      AIF   ('&ZCGPR' LE '12').ZG241R                   00963700
.ZG241Q               ANOP  ,                                           00963800
&ZMS                  SETC  '"VECTORINDEX='                             00963900
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00964000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00964100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00964200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00964300
.ZG241R               ANOP  ,                                           00964400
.*------------------------------------------------------------------    00964500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00964600
&XMONITORTYPE         SETC  ''          INITIALIZE XVARIABLE            00964700
.*-------------------------------------------------------------------   00964800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00964900
.ZG245                ANOP  ,                                           00965000
                      AIF   (K'&MONITORTYPE(1) LE 0).ZG245A             00965100
&ZTLC                 SETC 'NOTEMPTY'                                   00965200
                      AIF   ('&MONITORTYPE(1)' NE '&ZTLC').ZG251        00965300
&XMONITORTYPE         SETC  'NOTEMPTY'  SET KEYWORD                     00965400
                      AIF   (N'&MONITORTYPE LE 1).ZG245A  CK NUM        00965500
&ZMS                  SETC  '"MONITORTYPE='                             00965600
&ZMS                  SETC  '&ZMS.&MONITORTYPE"'                        00965700
&ZMS                  SETC  '&ZMS "MONITORTYPE"'                        00965800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00965900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00966000
.ZG245A               ANOP  ,                                           00966100
.*----------------------------------------------------------------***   00966200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00966300
                      AIF   (N'&NOTIFICATION LE 1).ZG247A  CK NUM       00966400
&ZMS                  SETC  '"NOTIFICATION='                            00966500
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       00966600
&ZMS                  SETC  '&ZMS "NOTIFICATION"'                       00966700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00966800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00966900
.ZG247A               ANOP  ,                                           00967000
.*-------------------------------------------------------------------   00967100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00967200
&XNOTIFICATION        SETC  ''          INITIALIZE XVARIABLE            00967300
.ZG248A   AIF   ('&NOTIFICATION(1)' NE 'FIRST').ZG249A                  00967400
&XNOTIFICATION        SETC  'FIRST'     SET KEYWORD                     00967500
.*-------------------------------------------------------------------   00967600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00967700
.ZG249A   AIF   ('&NOTIFICATION(1)' NE 'EVERY').ZG250A                  00967800
&XNOTIFICATION        SETC  'EVERY'     SET KEYWORD                     00967900
.*-------------------------------------------------------------------   00968000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00968100
.ZG250A               AIF   (K'&XNOTIFICATION GT 0).ZG250C  KEYWORD     00968200
                      AIF   (K'&NOTIFICATION(1) LE 0).ZG250B            00968300
&ZMS                  SETC  '"NOTIFICATION='                            00968400
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       00968500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00968600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00968700
&ZMS                  SETC  '&ZMS "FIRST"'                              00968800
&ZMS                  SETC  '&ZMS OR "EVERY".'                          00968900
                      MNOTE 8,' &ZMS '                                  00969000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00969100
.ZG250B               ANOP  ,                                           00969200
&XNOTIFICATION        SETC  'FIRST'     SET DEFAULT KEYWORD             00969300
.ZG250C               ANOP  ,                                           00969400
&ZXNOTIFICATION       SETC  'INPUT'     SET IN/OUTPUT                   00969500
.*-------------------------------------------------------------------   00969600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00969700
.ZG251                ANOP  ,                                           00969800
&ZTLC                 SETC 'NOTFULL'                                    00969900
                      AIF   ('&MONITORTYPE(1)' NE '&ZTLC').ZG252        00970000
&XMONITORTYPE         SETC  'NOTFULL'   SET KEYWORD                     00970100
                      AIF   (N'&MONITORTYPE LE 1).ZG251A  CK NUM        00970200
&ZMS                  SETC  '"MONITORTYPE='                             00970300
&ZMS                  SETC  '&ZMS.&MONITORTYPE"'                        00970400
&ZMS                  SETC  '&ZMS "MONITORTYPE"'                        00970500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00970600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00970700
.ZG251A               ANOP  ,                                           00970800
.*------------------------------------------------------------------    00970900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00971000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00971100
.ZG251A0              AIF   (K'&NOTIFICATION LE 0).ZG251A1  OK          00971200
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00971300
.ZG251A1              AIF   (K'&ZCVAL LE 0).ZG251A2  OK                 00971400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00971500
&ZMS                  SETC  '"MONITORTYPE'                              00971600
&ZMS                  SETC  '&ZMS.=&MONITORTYPE"'                       00971700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00971800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00971900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00972000
.ZG251A2              ANOP  ,                                           00972100
.*------------------------------------------------------------------    00972200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00972300
.ZG252                ANOP  ,                                           00972400
&ZXMONITORTYPE        SETC  'INPUT'     SET IN/OUTPUT                   00972500
                      AIF   (K'&XMONITORTYPE GT 0).ZG252E  VALID ARG    00972600
                      AIF   (T'&MONITORTYPE EQ 'O').ZG252D  OMITTED     00972700
&ZASYSLNDX            SETA  0                                           00972800
.ZG252A               ANOP  ,           POSITIONAL MACRO KEY            00972900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00973000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG252C           00973100
&ZTLC                 SETC 'MONITORTYPE'                                00973200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG252A  00973300
.ZG252B               ANOP  ,                                           00973400
&ZXMONITORTYPE        SETC  ''          RESET IN/OUTPUT                 00973500
&ZMS                  SETC  'THE "MONITORTYPE" KEY'                     00973600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00973700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00973800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00973900
                      AGO   .ZG252E                                     00974000
.ZG252C               ANOP  ,                                           00974100
&ZXMONITORTYPE        SETC  ''          RESET IN/OUTPUT                 00974200
&ZMS                  SETC  '"MONITORTYPE='                             00974300
&ZMS                  SETC  '&ZMS.&MONITORTYPE"'                        00974400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00974500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00974600
&ZMS                  SETC  '&ZMS "NOTEMPTY"'                           00974700
&ZMS                  SETC  '&ZMS OR "NOTFULL".'                        00974800
                      MNOTE 8,' &ZMS '                                  00974900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00975000
                      AGO   .ZG252E                                     00975100
.ZG252D               ANOP  ,                                           00975200
&XMONITORTYPE         SETC  'NOTEMPTY'  SET DEFAULT KEYWORD             00975300
.ZG252E               ANOP  ,                                           00975400
.*----------------------------------------------------------------***   00975500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00975600
                      AIF   (N'&DRIVEEXIT LE 1).ZG254A  CK NUM          00975700
&ZMS                  SETC  '"DRIVEEXIT='                               00975800
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00975900
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          00976000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00976100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00976200
.ZG254A               ANOP  ,                                           00976300
.*-------------------------------------------------------------------   00976400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00976500
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            00976600
.ZG255A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG256A                       00976700
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     00976800
.*-------------------------------------------------------------------   00976900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00977000
.ZG256A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG257A                        00977100
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     00977200
.*-------------------------------------------------------------------   00977300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00977400
.ZG257A               AIF   (K'&XDRIVEEXIT GT 0).ZG257C  KEYWORD        00977500
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG257B               00977600
&ZMS                  SETC  '"DRIVEEXIT='                               00977700
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00977800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00977900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00978000
&ZMS                  SETC  '&ZMS "YES"'                                00978100
&ZMS                  SETC  '&ZMS OR "NO".'                             00978200
                      MNOTE 8,' &ZMS '                                  00978300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00978400
.ZG257B               ANOP  ,                                           00978500
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             00978600
.ZG257C               ANOP  ,                                           00978700
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   00978800
.*-------------------------------------------------------------------   00978900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00979000
.ZG258                ANOP  ,                                           00979100
&ZTLC                 SETC 'STOP'                                       00979200
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG259             00979300
&XACTION              SETC  'STOP'      SET KEYWORD                     00979400
                      AIF   (N'&ACTION LE 1).ZG258A  CK NUM             00979500
&ZMS                  SETC  '"ACTION='                                  00979600
&ZMS                  SETC  '&ZMS.&ACTION"'                             00979700
&ZMS                  SETC  '&ZMS "ACTION"'                             00979800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00979900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00980000
.ZG258A               ANOP  ,                                           00980100
.*------------------------------------------------------------------    00980200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00980300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00980400
.ZG258A0              AIF   (K'&VECTORINDEX LE 0).ZG258A1  OK           00980500
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00980600
.ZG258A1              AIF   (K'&MONITORTYPE LE 0).ZG258A2  OK           00980700
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00980800
.ZG258A2              AIF   (K'&NOTIFICATION LE 0).ZG258A3  OK          00980900
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00981000
.ZG258A3              AIF   (K'&DRIVEEXIT LE 0).ZG258A4  OK             00981100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00981200
.ZG258A4              AIF   (K'&ZCVAL LE 0).ZG258A5  OK                 00981300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00981400
&ZMS                  SETC  '"ACTION'                                   00981500
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00981600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00981700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00981800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00981900
.ZG258A5              ANOP  ,                                           00982000
.*------------------------------------------------------------------    00982100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00982200
.ZG259                ANOP  ,                                           00982300
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00982400
                      AIF   (K'&XACTION GT 0).ZG259E  VALID ARG         00982500
                      AIF   (T'&ACTION EQ 'O').ZG259D  OMITTED          00982600
&ZASYSLNDX            SETA  0                                           00982700
.ZG259A               ANOP  ,           POSITIONAL MACRO KEY            00982800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00982900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG259C           00983000
&ZTLC                 SETC 'ACTION'                                     00983100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG259A  00983200
.ZG259B               ANOP  ,                                           00983300
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00983400
&ZMS                  SETC  'THE "ACTION" KEY'                          00983500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00983600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00983700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00983800
                      AGO   .ZG259E                                     00983900
.ZG259C               ANOP  ,                                           00984000
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00984100
&ZMS                  SETC  '"ACTION='                                  00984200
&ZMS                  SETC  '&ZMS.&ACTION"'                             00984300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00984400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00984500
&ZMS                  SETC  '&ZMS "START"'                              00984600
&ZMS                  SETC  '&ZMS OR "STOP".'                           00984700
                      MNOTE 8,' &ZMS '                                  00984800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00984900
                      AGO   .ZG259E                                     00985000
.ZG259D               ANOP  ,                                           00985100
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00985200
.ZG259E               ANOP  ,                                           00985300
.*------------------------------------------------------------------    00985400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00985500
                      AIF   (K'&ACTION(1) GT 0).ZG259F  PARM            00985600
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00985700
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00985800
&ZMS                  SETC  'THE'                                       00985900
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00986000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00986100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00986200
&ZMS                  SETC  '&ZMS "START"'                              00986300
&ZMS                  SETC  '&ZMS OR "STOP".'                           00986400
                      MNOTE 8,' &ZMS '                                  00986500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00986600
.ZG259F               ANOP  ,                                           00986700
.*-------------------------------------------------------------------   00986800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00986900
.ZG260                ANOP  ,                                           00987000
&ZTLC                 SETC 'MONITOR_KEYRANGE'                           00987100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG282            00987200
&XREQUEST             SETC  'MONITOR_KEYRANGE'  SET KEYWORD             00987300
                      AIF   (N'&REQUEST LE 1).ZG260A  CK NUM            00987400
&ZMS                  SETC  '"REQUEST='                                 00987500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00987600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00987700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00987800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00987900
.ZG260A               ANOP  ,                                           00988000
.*------------------------------------------------------------------    00988100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00988200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00988300
.ZG260A0              AIF   (K'&LOCKINDEX LE 0).ZG260A1  OK             00988400
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00988500
.ZG260A1              AIF   (K'&LOCKOPER LE 0).ZG260A2  OK              00988600
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00988700
.ZG260A2              AIF   (K'&LOCKMODE LE 0).ZG260A3  OK              00988800
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00988900
.ZG260A3              AIF   (K'&LOCKCOMP LE 0).ZG260A4  OK              00989000
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00989100
.ZG260A4              AIF   (K'&LOCKDATA LE 0).ZG260A5  OK              00989200
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00989300
.ZG260A5              AIF   (K'&BUFLIST LE 0).ZG260A6  OK               00989400
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00989500
.ZG260A6              AIF   (K'&BUFADDRTYPE LE 0).ZG260A7  OK           00989600
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00989700
.ZG260A7              AIF   (K'&PAGEABLE LE 0).ZG260A8  OK              00989800
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00989900
.ZG260A8              AIF   (K'&BUFSTGKEY LE 0).ZG260A9  OK             00990000
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00990100
.ZG260A9              AIF   (K'&BUFALET LE 0).ZG260A10  OK              00990200
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00990300
.ZG260A10             AIF   (K'&BUFADDRSIZE LE 0).ZG260A11  OK          00990400
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00990500
.ZG260A11             AIF   (K'&BUFFER LE 0).ZG260A12  OK               00990600
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00990700
.ZG260A12             AIF   (K'&AUTHCOMP LE 0).ZG260A13  OK             00990800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00990900
.ZG260A13             AIF   (K'&NEWAUTH LE 0).ZG260A14  OK              00991000
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00991100
.ZG260A14             AIF   (K'&LISTLIMIT LE 0).ZG260A15  OK            00991200
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00991300
.ZG260A15             AIF   (K'&LISTDESC LE 0).ZG260A16  OK             00991400
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00991500
.ZG260A16             AIF   (K'&LISTKEY LE 0).ZG260A17  OK              00991600
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00991700
.ZG260A17             AIF   (K'&MAXLISTKEY LE 0).ZG260A18  OK           00991800
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00991900
.ZG260A18             AIF   (K'&SETCURSOR LE 0).ZG260A19  OK            00992000
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00992100
.ZG260A19             AIF   (K'&KEYRANGE LE 0).ZG260A20  OK             00992200
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00992300
.ZG260A20             AIF   (K'&KEYRANGESTART LE 0).ZG260A21  OK        00992400
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00992500
.ZG260A21             AIF   (K'&KEYRANGEEND LE 0).ZG260A22  OK          00992600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00992700
.ZG260A22             AIF   (K'&KEYRANGESTATE LE 0).ZG260A23  OK        00992800
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00992900
.ZG260A23             AIF   (K'&KREMPTY LE 0).ZG260A24  OK              00993000
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00993100
.ZG260A24             AIF   (K'&KRNOTEMPTY LE 0).ZG260A25  OK           00993200
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00993300
.ZG260A25             AIF   (K'&LISTSTATE LE 0).ZG260A26  OK            00993400
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00993500
.ZG260A26             AIF   (K'&LISTEMPTY LE 0).ZG260A27  OK            00993600
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00993700
.ZG260A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG260A28  OK         00993800
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00993900
.ZG260A28             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG260A29  OK      00994000
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 00994100
.ZG260A29             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG260A30  OK      00994200
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 00994300
.ZG260A30             AIF   (K'&KEYTYPE LE 0).ZG260A31  OK              00994400
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00994500
.ZG260A31             AIF   (K'&ENTRYKEY LE 0).ZG260A32  OK             00994600
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00994700
.ZG260A32             AIF   (K'&SECONDARYKEY LE 0).ZG260A33  OK         00994800
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00994900
.ZG260A33             AIF   (K'&MONITORTYPE LE 0).ZG260A34  OK          00995000
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     00995100
.ZG260A34             AIF   (K'&UNC LE 0).ZG260A35  OK                  00995200
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00995300
.ZG260A35             AIF   (K'&STARTINDEX LE 0).ZG260A36  OK           00995400
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00995500
.ZG260A36             AIF   (K'&ENDINDEX LE 0).ZG260A37  OK             00995600
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00995700
.ZG260A37             AIF   (K'&MOSVECTOR LE 0).ZG260A38  OK            00995800
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00995900
.ZG260A38             AIF   (K'&BUFNUM LE 0).ZG260A39  OK               00996000
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00996100
.ZG260A39             AIF   (K'&BUFINCRNUM LE 0).ZG260A40  OK           00996200
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00996300
.ZG260A40             AIF   (K'&BUFSIZE LE 0).ZG260A41  OK              00996400
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00996500
.ZG260A41             AIF   (K'&ZCVAL LE 0).ZG260A42  OK                00996600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00996700
                      AIF  (K'&ZCVAL LE 160).ZG260A42A                  00996800
&ZCVAL                SETC '&ZCVAL'(1,160)                              00996900
&ZCVAL                SETC '&ZCVAL....'                                 00997000
.ZG260A42A            ANOP                                              00997100
&ZMS                  SETC  '"REQUEST'                                  00997200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00997300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00997400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00997500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00997600
.ZG260A42             ANOP  ,                                           00997700
.*----------------------------------------------------------------***   00997800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00997900
                      AIF   (N'&LISTNUM LE 1).ZG262A  CK NUM            00998000
&ZMS                  SETC  '"LISTNUM='                                 00998100
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00998200
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00998300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00998400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00998500
.ZG262A               ANOP  ,                                           00998600
.*-------------------------------------------------------------------   00998700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00998800
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00998900
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00999000
                      AIF   (N'&LISTNUM GT 1).ZG262B  MULTI             00999100
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00999200
.ZG262B               AIF   (K'&LISTNUM(1) GT 0).ZG262C                 00999300
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00999400
&ZMS                  SETC  ' '                                         00999500
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00999600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00999700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00999800
.ZG262C               ANOP  ,                                           00999900
.*-------------------------------------------------------------------   01000000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01000100
                      AIF   (K'&ZXLISTNUM LE 0).ZG262R  NOT I/O         01000200
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG262R            01000300
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01000400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG262P               01000500
                      AIF   (K'&ZCGPR GT 2).ZG262Q                      01000600
                      AIF   ('&ZCGPR' EQ '0').ZG262Q                    01000700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01000800
                      AIF   (T'&ZCGPR NE 'N').ZG262Q  INVALID REG NAME  01000900
.ZG262P               ANOP  ,                                           01001000
                      AIF   (T'&ZCGPR NE 'N').ZG262R  NON NUMERIC       01001100
                      AIF   ('&ZCGPR' LT '2').ZG262Q                    01001200
                      AIF   ('&ZCGPR' LE '12').ZG262R                   01001300
.ZG262Q               ANOP  ,                                           01001400
&ZMS                  SETC  '"LISTNUM='                                 01001500
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01001600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01001700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01001800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01001900
.ZG262R               ANOP  ,                                           01002000
.*------------------------------------------------------------------    01002100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01002200
&XACTION              SETC  ''          INITIALIZE XVARIABLE            01002300
.*-------------------------------------------------------------------   01002400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01002500
.ZG266                ANOP  ,                                           01002600
                      AIF   (K'&ACTION(1) LE 0).ZG266A                  01002700
&ZTLC                 SETC 'START'                                      01002800
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG280             01002900
&XACTION              SETC  'START'     SET KEYWORD                     01003000
                      AIF   (N'&ACTION LE 1).ZG266A  CK NUM             01003100
&ZMS                  SETC  '"ACTION='                                  01003200
&ZMS                  SETC  '&ZMS.&ACTION"'                             01003300
&ZMS                  SETC  '&ZMS "ACTION"'                             01003400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01003500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01003600
.ZG266A               ANOP  ,                                           01003700
.*----------------------------------------------------------------***   01003800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01003900
                      AIF   (N'&VECTORINDEX LE 1).ZG268A  CK NUM        01004000
&ZMS                  SETC  '"VECTORINDEX='                             01004100
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        01004200
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        01004300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01004400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01004500
.ZG268A               ANOP  ,                                           01004600
.*-------------------------------------------------------------------   01004700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01004800
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   01004900
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           01005000
                      AIF   (N'&VECTORINDEX GT 1).ZG268B  MULTI         01005100
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           01005200
.ZG268B               AIF   (K'&VECTORINDEX(1) GT 0).ZG268C             01005300
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 01005400
&ZMS                  SETC  ' '                                         01005500
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            01005600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01005700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01005800
.ZG268C               ANOP  ,                                           01005900
.*-------------------------------------------------------------------   01006000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01006100
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG268R  NOT I/O     01006200
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG268R        01006300
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        01006400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG268P               01006500
                      AIF   (K'&ZCGPR GT 2).ZG268Q                      01006600
                      AIF   ('&ZCGPR' EQ '0').ZG268Q                    01006700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01006800
                      AIF   (T'&ZCGPR NE 'N').ZG268Q  INVALID REG NAME  01006900
.ZG268P               ANOP  ,                                           01007000
                      AIF   (T'&ZCGPR NE 'N').ZG268R  NON NUMERIC       01007100
                      AIF   ('&ZCGPR' LT '2').ZG268Q                    01007200
                      AIF   ('&ZCGPR' LE '12').ZG268R                   01007300
.ZG268Q               ANOP  ,                                           01007400
&ZMS                  SETC  '"VECTORINDEX='                             01007500
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        01007600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01007700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01007800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01007900
.ZG268R               ANOP  ,                                           01008000
.*----------------------------------------------------------------***   01008100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01008200
                      AIF   (N'&NOTIFICATION LE 1).ZG271A  CK NUM       01008300
&ZMS                  SETC  '"NOTIFICATION='                            01008400
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       01008500
&ZMS                  SETC  '&ZMS "NOTIFICATION"'                       01008600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01008700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01008800
.ZG271A               ANOP  ,                                           01008900
.*-------------------------------------------------------------------   01009000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01009100
&XNOTIFICATION        SETC  ''          INITIALIZE XVARIABLE            01009200
.ZG272A   AIF   ('&NOTIFICATION(1)' NE 'FIRST').ZG273A                  01009300
&XNOTIFICATION        SETC  'FIRST'     SET KEYWORD                     01009400
.*-------------------------------------------------------------------   01009500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01009600
.ZG273A   AIF   ('&NOTIFICATION(1)' NE 'EVERY').ZG274A                  01009700
&XNOTIFICATION        SETC  'EVERY'     SET KEYWORD                     01009800
.*-------------------------------------------------------------------   01009900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01010000
.ZG274A               AIF   (K'&XNOTIFICATION GT 0).ZG274C  KEYWORD     01010100
                      AIF   (K'&NOTIFICATION(1) LE 0).ZG274B            01010200
&ZMS                  SETC  '"NOTIFICATION='                            01010300
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       01010400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01010500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01010600
&ZMS                  SETC  '&ZMS "FIRST"'                              01010700
&ZMS                  SETC  '&ZMS OR "EVERY".'                          01010800
                      MNOTE 8,' &ZMS '                                  01010900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01011000
.ZG274B               ANOP  ,                                           01011100
&XNOTIFICATION        SETC  'FIRST'     SET DEFAULT KEYWORD             01011200
.ZG274C               ANOP  ,                                           01011300
&ZXNOTIFICATION       SETC  'INPUT'     SET IN/OUTPUT                   01011400
.*----------------------------------------------------------------***   01011500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01011600
                      AIF   (N'&DRIVEEXIT LE 1).ZG276A  CK NUM          01011700
&ZMS                  SETC  '"DRIVEEXIT='                               01011800
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          01011900
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          01012000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01012100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01012200
.ZG276A               ANOP  ,                                           01012300
.*-------------------------------------------------------------------   01012400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01012500
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            01012600
.ZG277A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG278A                       01012700
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     01012800
.*-------------------------------------------------------------------   01012900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01013000
.ZG278A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG279A                        01013100
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     01013200
.*-------------------------------------------------------------------   01013300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01013400
.ZG279A               AIF   (K'&XDRIVEEXIT GT 0).ZG279C  KEYWORD        01013500
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG279B               01013600
&ZMS                  SETC  '"DRIVEEXIT='                               01013700
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          01013800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01013900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01014000
&ZMS                  SETC  '&ZMS "YES"'                                01014100
&ZMS                  SETC  '&ZMS OR "NO".'                             01014200
                      MNOTE 8,' &ZMS '                                  01014300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01014400
.ZG279B               ANOP  ,                                           01014500
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             01014600
.ZG279C               ANOP  ,                                           01014700
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   01014800
.*-------------------------------------------------------------------   01014900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01015000
.ZG280                ANOP  ,                                           01015100
&ZTLC                 SETC 'STOP'                                       01015200
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG281             01015300
&XACTION              SETC  'STOP'      SET KEYWORD                     01015400
                      AIF   (N'&ACTION LE 1).ZG280A  CK NUM             01015500
&ZMS                  SETC  '"ACTION='                                  01015600
&ZMS                  SETC  '&ZMS.&ACTION"'                             01015700
&ZMS                  SETC  '&ZMS "ACTION"'                             01015800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01015900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01016000
.ZG280A               ANOP  ,                                           01016100
.*------------------------------------------------------------------    01016200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01016300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01016400
.ZG280A0              AIF   (K'&VECTORINDEX LE 0).ZG280A1  OK           01016500
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     01016600
.ZG280A1              AIF   (K'&NOTIFICATION LE 0).ZG280A2  OK          01016700
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    01016800
.ZG280A2              AIF   (K'&DRIVEEXIT LE 0).ZG280A3  OK             01016900
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      01017000
.ZG280A3              AIF   (K'&ZCVAL LE 0).ZG280A4  OK                 01017100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01017200
&ZMS                  SETC  '"ACTION'                                   01017300
&ZMS                  SETC  '&ZMS.=&ACTION"'                            01017400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01017500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01017600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01017700
.ZG280A4              ANOP  ,                                           01017800
.*------------------------------------------------------------------    01017900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01018000
.ZG281                ANOP  ,                                           01018100
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   01018200
                      AIF   (K'&XACTION GT 0).ZG281E  VALID ARG         01018300
                      AIF   (T'&ACTION EQ 'O').ZG281D  OMITTED          01018400
&ZASYSLNDX            SETA  0                                           01018500
.ZG281A               ANOP  ,           POSITIONAL MACRO KEY            01018600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01018700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG281C           01018800
&ZTLC                 SETC 'ACTION'                                     01018900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG281A  01019000
.ZG281B               ANOP  ,                                           01019100
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 01019200
&ZMS                  SETC  'THE "ACTION" KEY'                          01019300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01019400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01019500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01019600
                      AGO   .ZG281E                                     01019700
.ZG281C               ANOP  ,                                           01019800
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 01019900
&ZMS                  SETC  '"ACTION='                                  01020000
&ZMS                  SETC  '&ZMS.&ACTION"'                             01020100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01020200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01020300
&ZMS                  SETC  '&ZMS "START"'                              01020400
&ZMS                  SETC  '&ZMS OR "STOP".'                           01020500
                      MNOTE 8,' &ZMS '                                  01020600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01020700
                      AGO   .ZG281E                                     01020800
.ZG281D               ANOP  ,                                           01020900
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             01021000
.ZG281E               ANOP  ,                                           01021100
.*------------------------------------------------------------------    01021200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01021300
                      AIF   (K'&ACTION(1) GT 0).ZG281F  PARM            01021400
&XACTION              SETC  ''          ENSURE NULL KEYWORD             01021500
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 01021600
&ZMS                  SETC  'THE'                                       01021700
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 01021800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01021900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01022000
&ZMS                  SETC  '&ZMS "START"'                              01022100
&ZMS                  SETC  '&ZMS OR "STOP".'                           01022200
                      MNOTE 8,' &ZMS '                                  01022300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01022400
.ZG281F               ANOP  ,                                           01022500
.*-------------------------------------------------------------------   01022600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01022700
.ZG282                ANOP  ,                                           01022800
&ZTLC                 SETC 'MONITOR_SUBLIST'                            01022900
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG303            01023000
&XREQUEST             SETC  'MONITOR_SUBLIST'   SET KEYWORD             01023100
                      AIF   (N'&REQUEST LE 1).ZG282A  CK NUM            01023200
&ZMS                  SETC  '"REQUEST='                                 01023300
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01023400
&ZMS                  SETC  '&ZMS "REQUEST"'                            01023500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01023600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01023700
.ZG282A               ANOP  ,                                           01023800
.*------------------------------------------------------------------    01023900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01024000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01024100
.ZG282A0              AIF   (K'&LOCKINDEX LE 0).ZG282A1  OK             01024200
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      01024300
.ZG282A1              AIF   (K'&LOCKOPER LE 0).ZG282A2  OK              01024400
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      01024500
.ZG282A2              AIF   (K'&LOCKMODE LE 0).ZG282A3  OK              01024600
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      01024700
.ZG282A3              AIF   (K'&LOCKCOMP LE 0).ZG282A4  OK              01024800
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      01024900
.ZG282A4              AIF   (K'&LOCKDATA LE 0).ZG282A5  OK              01025000
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      01025100
.ZG282A5              AIF   (K'&BUFLIST LE 0).ZG282A6  OK               01025200
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      01025300
.ZG282A6              AIF   (K'&BUFADDRTYPE LE 0).ZG282A7  OK           01025400
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     01025500
.ZG282A7              AIF   (K'&PAGEABLE LE 0).ZG282A8  OK              01025600
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      01025700
.ZG282A8              AIF   (K'&BUFSTGKEY LE 0).ZG282A9  OK             01025800
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01025900
.ZG282A9              AIF   (K'&BUFALET LE 0).ZG282A10  OK              01026000
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      01026100
.ZG282A10             AIF   (K'&BUFADDRSIZE LE 0).ZG282A11  OK          01026200
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     01026300
.ZG282A11             AIF   (K'&BUFFER LE 0).ZG282A12  OK               01026400
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      01026500
.ZG282A12             AIF   (K'&AUTHCOMP LE 0).ZG282A13  OK             01026600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01026700
.ZG282A13             AIF   (K'&NEWAUTH LE 0).ZG282A14  OK              01026800
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      01026900
.ZG282A14             AIF   (K'&LISTLIMIT LE 0).ZG282A15  OK            01027000
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      01027100
.ZG282A15             AIF   (K'&LISTDESC LE 0).ZG282A16  OK             01027200
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      01027300
.ZG282A16             AIF   (K'&LISTKEY LE 0).ZG282A17  OK              01027400
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      01027500
.ZG282A17             AIF   (K'&MAXLISTKEY LE 0).ZG282A18  OK           01027600
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      01027700
.ZG282A18             AIF   (K'&SETCURSOR LE 0).ZG282A19  OK            01027800
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      01027900
.ZG282A19             AIF   (K'&KEYRANGE LE 0).ZG282A20  OK             01028000
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      01028100
.ZG282A20             AIF   (K'&KEYRANGESTART LE 0).ZG282A21  OK        01028200
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   01028300
.ZG282A21             AIF   (K'&KEYRANGEEND LE 0).ZG282A22  OK          01028400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01028500
.ZG282A22             AIF   (K'&KEYRANGESTATE LE 0).ZG282A23  OK        01028600
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   01028700
.ZG282A23             AIF   (K'&KREMPTY LE 0).ZG282A24  OK              01028800
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      01028900
.ZG282A24             AIF   (K'&KRNOTEMPTY LE 0).ZG282A25  OK           01029000
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      01029100
.ZG282A25             AIF   (K'&LISTSTATE LE 0).ZG282A26  OK            01029200
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      01029300
.ZG282A26             AIF   (K'&LISTEMPTY LE 0).ZG282A27  OK            01029400
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      01029500
.ZG282A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG282A28  OK         01029600
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    01029700
.ZG282A28             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG282A29  OK      01029800
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 01029900
.ZG282A29             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG282A30  OK      01030000
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 01030100
.ZG282A30             AIF   (K'&KEYTYPE LE 0).ZG282A31  OK              01030200
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01030300
.ZG282A31             AIF   (K'&VECTORINDEX LE 0).ZG282A32  OK          01030400
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     01030500
.ZG282A32             AIF   (K'&DRIVEEXIT LE 0).ZG282A33  OK            01030600
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      01030700
.ZG282A33             AIF   (K'&MONITORTYPE LE 0).ZG282A34  OK          01030800
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     01030900
.ZG282A34             AIF   (K'&STARTINDEX LE 0).ZG282A35  OK           01031000
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01031100
.ZG282A35             AIF   (K'&ENDINDEX LE 0).ZG282A36  OK             01031200
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01031300
.ZG282A36             AIF   (K'&MOSVECTOR LE 0).ZG282A37  OK            01031400
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      01031500
.ZG282A37             AIF   (K'&BUFNUM LE 0).ZG282A38  OK               01031600
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      01031700
.ZG282A38             AIF   (K'&BUFINCRNUM LE 0).ZG282A39  OK           01031800
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      01031900
.ZG282A39             AIF   (K'&BUFSIZE LE 0).ZG282A40  OK              01032000
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      01032100
.ZG282A40             AIF   (K'&ZCVAL LE 0).ZG282A41  OK                01032200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01032300
                      AIF  (K'&ZCVAL LE 160).ZG282A41A                  01032400
&ZCVAL                SETC '&ZCVAL'(1,160)                              01032500
&ZCVAL                SETC '&ZCVAL....'                                 01032600
.ZG282A41A            ANOP                                              01032700
&ZMS                  SETC  '"REQUEST'                                  01032800
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01032900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01033000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01033100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01033200
.ZG282A41             ANOP  ,                                           01033300
.*----------------------------------------------------------------***   01033400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01033500
                      AIF   (N'&LISTNUM LE 1).ZG284A  CK NUM            01033600
&ZMS                  SETC  '"LISTNUM='                                 01033700
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01033800
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01033900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01034000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01034100
.ZG284A               ANOP  ,                                           01034200
.*-------------------------------------------------------------------   01034300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01034400
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01034500
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01034600
                      AIF   (N'&LISTNUM GT 1).ZG284B  MULTI             01034700
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01034800
.ZG284B               AIF   (K'&LISTNUM(1) GT 0).ZG284C                 01034900
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01035000
&ZMS                  SETC  ' '                                         01035100
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01035200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01035300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01035400
.ZG284C               ANOP  ,                                           01035500
.*-------------------------------------------------------------------   01035600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01035700
                      AIF   (K'&ZXLISTNUM LE 0).ZG284R  NOT I/O         01035800
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG284R            01035900
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01036000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG284P               01036100
                      AIF   (K'&ZCGPR GT 2).ZG284Q                      01036200
                      AIF   ('&ZCGPR' EQ '0').ZG284Q                    01036300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01036400
                      AIF   (T'&ZCGPR NE 'N').ZG284Q  INVALID REG NAME  01036500
.ZG284P               ANOP  ,                                           01036600
                      AIF   (T'&ZCGPR NE 'N').ZG284R  NON NUMERIC       01036700
                      AIF   ('&ZCGPR' LT '2').ZG284Q                    01036800
                      AIF   ('&ZCGPR' LE '12').ZG284R                   01036900
.ZG284Q               ANOP  ,                                           01037000
&ZMS                  SETC  '"LISTNUM='                                 01037100
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01037200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01037300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01037400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01037500
.ZG284R               ANOP  ,                                           01037600
.*----------------------------------------------------------------***   01037700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01037800
&XNAME                SETC  ''          INITIALIZE XVARIABLE            01037900
                      AIF   (K'&ENTRYKEY LE 0).ZG287C                   01038000
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   01038100
&XNAME                SETC  'ENTRYKEY'  SET XVARIABLE                   01038200
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01038300
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE PARM      01038400
                      AIF   (N'&ENTRYKEY GT 1).ZG287A                   01038500
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE PARM      01038600
.ZG287A               AIF   (N'&ENTRYKEY LE 1).ZG287B  CK NUM           01038700
&ZMS                  SETC  '"ENTRYKEY='                                01038800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01038900
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01039000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01039100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01039200
.ZG287B               AIF   (K'&XENTRYKEY GT 0).ZG287C  ONE PARM        01039300
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 01039400
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01039500
&ZMS                  SETC  ' '                                         01039600
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01039700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01039800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01039900
.ZG287C               ANOP  ,                                           01040000
.*----------------------------------------------------------------***   01040100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01040200
                      AIF   (K'&SECONDARYKEY LE 0).ZG288D  NO ME KEY    01040300
                      AIF   (N'&SECONDARYKEY LE 1).ZG288A  CK NUM       01040400
&ZMS                  SETC  '"SECONDARYKEY='                            01040500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01040600
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01040700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01040800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01040900
.ZG288A               AIF   (K'&XNAME LE 0).ZG288B                      01041000
&ZMS                  SETC  '"SECONDARYKEY'                             01041100
&ZMS                  SETC  '&ZMS.=&SECONDARYKEY"'                      01041200
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       01041300
&ZMS                  SETC  '&ZMS "&XNAME"'                             01041400
                      MNOTE 8,' &ZMS KEY.'                              01041500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01041600
                      AGO   .ZG288D                                     01041700
.*                                                                      01041800
.ZG288B               ANOP  ,                                           01041900
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   01042000
&XNAME                SETC  'SECONDARYKEY'      SET XVARIABLE           01042100
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01042200
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE PARM      01042300
                      AIF   (N'&SECONDARYKEY GT 1).ZG288C               01042400
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE PARM      01042500
.ZG288C               AIF   (K'&XSECONDARYKEY GT 0).ZG288D  ONE PARM    01042600
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 01042700
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01042800
&ZMS                  SETC  ' '                                         01042900
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01043000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01043100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01043200
.ZG288D               ANOP  ,                                           01043300
.*------------------------------------------------------------------    01043400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           01043500
                      AIF   (K'&XNAME GT 0).ZG289B                      01043600
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 01043700
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01043800
&XNAME                SETC  ''          ENSURE NULL                     01043900
&XENTRYKEY            SETC  ''          ENSURE NULL                     01044000
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      01044100
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         01044200
&ZMS                  SETC  '&ZMS REQUIRED:'                            01044300
&ZMS                  SETC  '&ZMS "ENTRYKEY"'   VALID ME KEY            01044400
&ZMS                  SETC  '&ZMS OR "SECONDARYKEY".'  VALID ME KEY     01044500
                      MNOTE 8,' &ZMS '                                  01044600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01044700
.ZG289B               ANOP  ,                                           01044800
.*-------------------------------------------------------------------   01044900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01045000
.ZG287ZY  AIF    ('&XNAME' NE 'ENTRYKEY').ZG288ZY                       01045100
.*-------------------------------------------------------------------   01045200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01045300
                      AIF   (K'&ZXENTRYKEY LE 0).ZG287R  NOT I/O        01045400
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG287R           01045500
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01045600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG287P               01045700
                      AIF   (K'&ZCGPR GT 2).ZG287Q                      01045800
                      AIF   ('&ZCGPR' EQ '0').ZG287Q                    01045900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01046000
                      AIF   (T'&ZCGPR NE 'N').ZG287Q  INVALID REG NAME  01046100
.ZG287P               ANOP  ,                                           01046200
                      AIF   (T'&ZCGPR NE 'N').ZG287R  NON NUMERIC       01046300
                      AIF   ('&ZCGPR' LT '2').ZG287Q                    01046400
                      AIF   ('&ZCGPR' LE '12').ZG287R                   01046500
.ZG287Q               ANOP  ,                                           01046600
&ZMS                  SETC  '"ENTRYKEY='                                01046700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01046800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01046900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01047000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01047100
.ZG287R               ANOP  ,                                           01047200
.*-------------------------------------------------------------------   01047300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01047400
.ZG288ZY  AIF    ('&XNAME' NE 'SECONDARYKEY').ZG289ZY                   01047500
.*-------------------------------------------------------------------   01047600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01047700
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG288R  NOT I/O    01047800
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG288R       01047900
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01048000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG288P               01048100
                      AIF   (K'&ZCGPR GT 2).ZG288Q                      01048200
                      AIF   ('&ZCGPR' EQ '0').ZG288Q                    01048300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01048400
                      AIF   (T'&ZCGPR NE 'N').ZG288Q  INVALID REG NAME  01048500
.ZG288P               ANOP  ,                                           01048600
                      AIF   (T'&ZCGPR NE 'N').ZG288R  NON NUMERIC       01048700
                      AIF   ('&ZCGPR' LT '2').ZG288Q                    01048800
                      AIF   ('&ZCGPR' LE '12').ZG288R                   01048900
.ZG288Q               ANOP  ,                                           01049000
&ZMS                  SETC  '"SECONDARYKEY='                            01049100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01049200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01049300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01049400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01049500
.ZG288R               ANOP  ,                                           01049600
.*-------------------------------------------------------------------   01049700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            01049800
.ZG289ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     01049900
.*------------------------------------------------------------------    01050000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01050100
&XACTION              SETC  ''          INITIALIZE XVARIABLE            01050200
.*-------------------------------------------------------------------   01050300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01050400
.ZG292                ANOP  ,                                           01050500
                      AIF   (K'&ACTION(1) LE 0).ZG292A                  01050600
&ZTLC                 SETC 'START'                                      01050700
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG301             01050800
&XACTION              SETC  'START'     SET KEYWORD                     01050900
                      AIF   (N'&ACTION LE 1).ZG292A  CK NUM             01051000
&ZMS                  SETC  '"ACTION='                                  01051100
&ZMS                  SETC  '&ZMS.&ACTION"'                             01051200
&ZMS                  SETC  '&ZMS "ACTION"'                             01051300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01051400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01051500
.ZG292A               ANOP  ,                                           01051600
.*----------------------------------------------------------------***   01051700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01051800
                      AIF   (N'&NOTIFICATION LE 1).ZG294A  CK NUM       01051900
&ZMS                  SETC  '"NOTIFICATION='                            01052000
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       01052100
&ZMS                  SETC  '&ZMS "NOTIFICATION"'                       01052200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01052300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01052400
.ZG294A               ANOP  ,                                           01052500
.*-------------------------------------------------------------------   01052600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01052700
&XNOTIFICATION        SETC  ''          INITIALIZE XVARIABLE            01052800
.ZG295A   AIF   ('&NOTIFICATION(1)' NE 'FIRST').ZG296A                  01052900
&XNOTIFICATION        SETC  'FIRST'     SET KEYWORD                     01053000
.*-------------------------------------------------------------------   01053100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01053200
.ZG296A   AIF   ('&NOTIFICATION(1)' NE 'EVERY').ZG297A                  01053300
&XNOTIFICATION        SETC  'EVERY'     SET KEYWORD                     01053400
.*-------------------------------------------------------------------   01053500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01053600
.ZG297A               AIF   (K'&XNOTIFICATION GT 0).ZG297C  KEYWORD     01053700
                      AIF   (K'&NOTIFICATION(1) LE 0).ZG297B            01053800
&ZMS                  SETC  '"NOTIFICATION='                            01053900
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       01054000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01054100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01054200
&ZMS                  SETC  '&ZMS "FIRST"'                              01054300
&ZMS                  SETC  '&ZMS OR "EVERY".'                          01054400
                      MNOTE 8,' &ZMS '                                  01054500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01054600
.ZG297B               ANOP  ,                                           01054700
&XNOTIFICATION        SETC  'FIRST'     SET DEFAULT KEYWORD             01054800
.ZG297C               ANOP  ,                                           01054900
&ZXNOTIFICATION       SETC  'INPUT'     SET IN/OUTPUT                   01055000
.*----------------------------------------------------------------***   01055100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01055200
                      AIF   (N'&UNC LE 1).ZG299A  CK NUM                01055300
&ZMS                  SETC  '"UNC='                                     01055400
&ZMS                  SETC  '&ZMS.&UNC"'                                01055500
&ZMS                  SETC  '&ZMS "UNC"'                                01055600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01055700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01055800
.ZG299A               ANOP  ,                                           01055900
.*-------------------------------------------------------------------   01056000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01056100
&ZXUNC                SETC  'INPUT'     SET IN/OUTPUT                   01056200
&XUNC                 SETC  '&UNC(1)'   SET XVARIABLE                   01056300
                      AIF   (N'&UNC GT 1).ZG299B  MULTI                 01056400
&XUNC                 SETC  '&UNC'      SET XVARIABLE                   01056500
.ZG299B               AIF   (K'&UNC(1) GT 0).ZG299C                     01056600
&ZXUNC                SETC  ''          RESET IN/OUTPUT                 01056700
&ZMS                  SETC  ' '                                         01056800
&ZMS                  SETC  '&ZMS "UNC" KEY AND ITS'                    01056900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01057000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01057100
.ZG299C               ANOP  ,                                           01057200
.*-------------------------------------------------------------------   01057300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01057400
                      AIF   (K'&ZXUNC LE 0).ZG299R  NOT I/O             01057500
                      AIF   ('&XUNC'(1,1) NE '(').ZG299R                01057600
&ZCGPR                SETC  '&XUNC'(2,K'&XUNC-2)                        01057700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG299P               01057800
                      AIF   (K'&ZCGPR GT 2).ZG299Q                      01057900
                      AIF   ('&ZCGPR' EQ '0').ZG299Q                    01058000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01058100
                      AIF   (T'&ZCGPR NE 'N').ZG299Q  INVALID REG NAME  01058200
.ZG299P               ANOP  ,                                           01058300
                      AIF   (T'&ZCGPR NE 'N').ZG299R  NON NUMERIC       01058400
                      AIF   ('&ZCGPR' LT '2').ZG299Q                    01058500
                      AIF   ('&ZCGPR' LE '12').ZG299R                   01058600
.ZG299Q               ANOP  ,                                           01058700
&ZMS                  SETC  '"UNC='                                     01058800
&ZMS                  SETC  '&ZMS.&UNC"'                                01058900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01059000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01059100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01059200
.ZG299R               ANOP  ,                                           01059300
.*-------------------------------------------------------------------   01059400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01059500
.ZG301                ANOP  ,                                           01059600
&ZTLC                 SETC 'STOP'                                       01059700
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG302             01059800
&XACTION              SETC  'STOP'      SET KEYWORD                     01059900
                      AIF   (N'&ACTION LE 1).ZG301A  CK NUM             01060000
&ZMS                  SETC  '"ACTION='                                  01060100
&ZMS                  SETC  '&ZMS.&ACTION"'                             01060200
&ZMS                  SETC  '&ZMS "ACTION"'                             01060300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01060400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01060500
.ZG301A               ANOP  ,                                           01060600
.*------------------------------------------------------------------    01060700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01060800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01060900
.ZG301A0              AIF   (K'&NOTIFICATION LE 0).ZG301A1  OK          01061000
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    01061100
.ZG301A1              AIF   (K'&UNC LE 0).ZG301A2  OK                   01061200
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      01061300
.ZG301A2              AIF   (K'&ZCVAL LE 0).ZG301A3  OK                 01061400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01061500
&ZMS                  SETC  '"ACTION'                                   01061600
&ZMS                  SETC  '&ZMS.=&ACTION"'                            01061700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01061800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01061900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01062000
.ZG301A3              ANOP  ,                                           01062100
.*------------------------------------------------------------------    01062200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01062300
.ZG302                ANOP  ,                                           01062400
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   01062500
                      AIF   (K'&XACTION GT 0).ZG302E  VALID ARG         01062600
                      AIF   (T'&ACTION EQ 'O').ZG302D  OMITTED          01062700
&ZASYSLNDX            SETA  0                                           01062800
.ZG302A               ANOP  ,           POSITIONAL MACRO KEY            01062900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01063000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG302C           01063100
&ZTLC                 SETC 'ACTION'                                     01063200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG302A  01063300
.ZG302B               ANOP  ,                                           01063400
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 01063500
&ZMS                  SETC  'THE "ACTION" KEY'                          01063600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01063700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01063800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01063900
                      AGO   .ZG302E                                     01064000
.ZG302C               ANOP  ,                                           01064100
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 01064200
&ZMS                  SETC  '"ACTION='                                  01064300
&ZMS                  SETC  '&ZMS.&ACTION"'                             01064400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01064500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01064600
&ZMS                  SETC  '&ZMS "START"'                              01064700
&ZMS                  SETC  '&ZMS OR "STOP".'                           01064800
                      MNOTE 8,' &ZMS '                                  01064900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01065000
                      AGO   .ZG302E                                     01065100
.ZG302D               ANOP  ,                                           01065200
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             01065300
.ZG302E               ANOP  ,                                           01065400
.*------------------------------------------------------------------    01065500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01065600
                      AIF   (K'&ACTION(1) GT 0).ZG302F  PARM            01065700
&XACTION              SETC  ''          ENSURE NULL KEYWORD             01065800
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 01065900
&ZMS                  SETC  'THE'                                       01066000
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 01066100
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01066200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01066300
&ZMS                  SETC  '&ZMS "START"'                              01066400
&ZMS                  SETC  '&ZMS OR "STOP".'                           01066500
                      MNOTE 8,' &ZMS '                                  01066600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01066700
.ZG302F               ANOP  ,                                           01066800
.*-------------------------------------------------------------------   01066900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01067000
.ZG303                ANOP  ,                                           01067100
&ZTLC                 SETC 'MONITOR_SUBLISTS'                           01067200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG360            01067300
&XREQUEST             SETC  'MONITOR_SUBLISTS'  SET KEYWORD             01067400
                      AIF   (N'&REQUEST LE 1).ZG303A  CK NUM            01067500
&ZMS                  SETC  '"REQUEST='                                 01067600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01067700
&ZMS                  SETC  '&ZMS "REQUEST"'                            01067800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01067900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01068000
.ZG303A               ANOP  ,                                           01068100
.*------------------------------------------------------------------    01068200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01068300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01068400
.ZG303A0              AIF   (K'&LOCKINDEX LE 0).ZG303A1  OK             01068500
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      01068600
.ZG303A1              AIF   (K'&LOCKOPER LE 0).ZG303A2  OK              01068700
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      01068800
.ZG303A2              AIF   (K'&LOCKMODE LE 0).ZG303A3  OK              01068900
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      01069000
.ZG303A3              AIF   (K'&LOCKCOMP LE 0).ZG303A4  OK              01069100
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      01069200
.ZG303A4              AIF   (K'&LOCKDATA LE 0).ZG303A5  OK              01069300
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      01069400
.ZG303A5              AIF   (K'&LISTNUM LE 0).ZG303A6  OK               01069500
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01069600
.ZG303A6              AIF   (K'&AUTHCOMP LE 0).ZG303A7  OK              01069700
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01069800
.ZG303A7              AIF   (K'&NEWAUTH LE 0).ZG303A8  OK               01069900
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      01070000
.ZG303A8              AIF   (K'&LISTLIMIT LE 0).ZG303A9  OK             01070100
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      01070200
.ZG303A9              AIF   (K'&LISTDESC LE 0).ZG303A10  OK             01070300
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      01070400
.ZG303A10             AIF   (K'&LISTKEY LE 0).ZG303A11  OK              01070500
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      01070600
.ZG303A11             AIF   (K'&MAXLISTKEY LE 0).ZG303A12  OK           01070700
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      01070800
.ZG303A12             AIF   (K'&SETCURSOR LE 0).ZG303A13  OK            01070900
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      01071000
.ZG303A13             AIF   (K'&KEYRANGE LE 0).ZG303A14  OK             01071100
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      01071200
.ZG303A14             AIF   (K'&KEYRANGESTART LE 0).ZG303A15  OK        01071300
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   01071400
.ZG303A15             AIF   (K'&KEYRANGEEND LE 0).ZG303A16  OK          01071500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01071600
.ZG303A16             AIF   (K'&KEYRANGESTATE LE 0).ZG303A17  OK        01071700
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   01071800
.ZG303A17             AIF   (K'&KREMPTY LE 0).ZG303A18  OK              01071900
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      01072000
.ZG303A18             AIF   (K'&KRNOTEMPTY LE 0).ZG303A19  OK           01072100
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      01072200
.ZG303A19             AIF   (K'&LISTSTATE LE 0).ZG303A20  OK            01072300
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      01072400
.ZG303A20             AIF   (K'&LISTEMPTY LE 0).ZG303A21  OK            01072500
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      01072600
.ZG303A21             AIF   (K'&LISTNOTEMPTY LE 0).ZG303A22  OK         01072700
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    01072800
.ZG303A22             AIF   (K'&KEYRNOTIFYDELAY LE 0).ZG303A23  OK      01072900
&ZCVAL                SETC '&ZCVAL KEYRNOTIFYDELAY'  INCORRECT KEY USED 01073000
.ZG303A23             AIF   (K'&LISTNOTIFYDELAY LE 0).ZG303A24  OK      01073100
&ZCVAL                SETC '&ZCVAL LISTNOTIFYDELAY'  INCORRECT KEY USED 01073200
.ZG303A24             AIF   (K'&KEYTYPE LE 0).ZG303A25  OK              01073300
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01073400
.ZG303A25             AIF   (K'&ENTRYKEY LE 0).ZG303A26  OK             01073500
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01073600
.ZG303A26             AIF   (K'&SECONDARYKEY LE 0).ZG303A27  OK         01073700
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01073800
.ZG303A27             AIF   (K'&ACTION LE 0).ZG303A28  OK               01073900
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      01074000
.ZG303A28             AIF   (K'&VECTORINDEX LE 0).ZG303A29  OK          01074100
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     01074200
.ZG303A29             AIF   (K'&DRIVEEXIT LE 0).ZG303A30  OK            01074300
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      01074400
.ZG303A30             AIF   (K'&MONITORTYPE LE 0).ZG303A31  OK          01074500
&ZCVAL                SETC '&ZCVAL MONITORTYPE'  INCORRECT KEY USED     01074600
.ZG303A31             AIF   (K'&NOTIFICATION LE 0).ZG303A32  OK         01074700
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    01074800
.ZG303A32             AIF   (K'&UNC LE 0).ZG303A33  OK                  01074900
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      01075000
.ZG303A33             AIF   (K'&ZCVAL LE 0).ZG303A34  OK                01075100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01075200
                      AIF  (K'&ZCVAL LE 160).ZG303A34A                  01075300
&ZCVAL                SETC '&ZCVAL'(1,160)                              01075400
&ZCVAL                SETC '&ZCVAL....'                                 01075500
.ZG303A34A            ANOP                                              01075600
&ZMS                  SETC  '"REQUEST'                                  01075700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01075800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01075900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01076000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01076100
.ZG303A34             ANOP  ,                                           01076200
.*----------------------------------------------------------------***   01076300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01076400
                      AIF   (N'&STARTINDEX LE 1).ZG305A  CK NUM         01076500
&ZMS                  SETC  '"STARTINDEX='                              01076600
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         01076700
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         01076800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01076900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01077000
.ZG305A               ANOP  ,                                           01077100
.*-------------------------------------------------------------------   01077200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01077300
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   01077400
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           01077500
                      AIF   (N'&STARTINDEX GT 1).ZG305B  MULTI          01077600
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           01077700
.ZG305B               AIF   (K'&STARTINDEX(1) GT 0).ZG305C              01077800
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 01077900
&ZMS                  SETC  ' '                                         01078000
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             01078100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01078200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01078300
.ZG305C               ANOP  ,                                           01078400
.*-------------------------------------------------------------------   01078500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01078600
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG305R  NOT I/O      01078700
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG305R         01078800
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          01078900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG305P               01079000
                      AIF   (K'&ZCGPR GT 2).ZG305Q                      01079100
                      AIF   ('&ZCGPR' EQ '0').ZG305Q                    01079200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01079300
                      AIF   (T'&ZCGPR NE 'N').ZG305Q  INVALID REG NAME  01079400
.ZG305P               ANOP  ,                                           01079500
                      AIF   (T'&ZCGPR NE 'N').ZG305R  NON NUMERIC       01079600
                      AIF   ('&ZCGPR' LT '2').ZG305Q                    01079700
                      AIF   ('&ZCGPR' LE '12').ZG305R                   01079800
.ZG305Q               ANOP  ,                                           01079900
&ZMS                  SETC  '"STARTINDEX='                              01080000
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         01080100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01080200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01080300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01080400
.ZG305R               ANOP  ,                                           01080500
.*----------------------------------------------------------------***   01080600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01080700
                      AIF   (N'&ENDINDEX LE 1).ZG308A  CK NUM           01080800
&ZMS                  SETC  '"ENDINDEX='                                01080900
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           01081000
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           01081100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01081200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01081300
.ZG308A               ANOP  ,                                           01081400
.*-------------------------------------------------------------------   01081500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01081600
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   01081700
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           01081800
                      AIF   (N'&ENDINDEX GT 1).ZG308B  MULTI            01081900
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           01082000
.ZG308B               AIF   (K'&ENDINDEX(1) GT 0).ZG308C                01082100
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 01082200
&ZMS                  SETC  ' '                                         01082300
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               01082400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01082500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01082600
.ZG308C               ANOP  ,                                           01082700
.*-------------------------------------------------------------------   01082800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01082900
                      AIF   (K'&ZXENDINDEX LE 0).ZG308R  NOT I/O        01083000
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG308R           01083100
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              01083200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG308P               01083300
                      AIF   (K'&ZCGPR GT 2).ZG308Q                      01083400
                      AIF   ('&ZCGPR' EQ '0').ZG308Q                    01083500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01083600
                      AIF   (T'&ZCGPR NE 'N').ZG308Q  INVALID REG NAME  01083700
.ZG308P               ANOP  ,                                           01083800
                      AIF   (T'&ZCGPR NE 'N').ZG308R  NON NUMERIC       01083900
                      AIF   ('&ZCGPR' LT '2').ZG308Q                    01084000
                      AIF   ('&ZCGPR' LE '12').ZG308R                   01084100
.ZG308Q               ANOP  ,                                           01084200
&ZMS                  SETC  '"ENDINDEX='                                01084300
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           01084400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01084500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01084600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01084700
.ZG308R               ANOP  ,                                           01084800
.*----------------------------------------------------------------***   01084900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    01085000
                      AIF   (N'&MOSVECTOR LE 1).ZG311A  CK NUM          01085100
&ZMS                  SETC  '"MOSVECTOR='                               01085200
&ZMS                  SETC  '&ZMS.&MOSVECTOR"'                          01085300
&ZMS                  SETC  '&ZMS "MOSVECTOR"'                          01085400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01085500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01085600
.ZG311A               ANOP  ,                                           01085700
.*-------------------------------------------------------------------   01085800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        01085900
&ZXMOSVECTOR          SETC  'OUTPUT'    SET IN/OUTPUT                   01086000
&XMOSVECTOR           SETC  '&MOSVECTOR(1)'     SET XVARIABLE           01086100
                      AIF   (N'&MOSVECTOR GT 1).ZG311B  MULTI           01086200
&XMOSVECTOR           SETC  '&MOSVECTOR'        SET XVARIABLE           01086300
.ZG311B               AIF   (K'&MOSVECTOR(1) GT 0).ZG311C               01086400
&ZXMOSVECTOR          SETC  ''          RESET IN/OUTPUT                 01086500
&ZMS                  SETC  ' '                                         01086600
&ZMS                  SETC  '&ZMS "MOSVECTOR" KEY AND ITS'              01086700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01086800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01086900
.ZG311C               ANOP  ,                                           01087000
.*-------------------------------------------------------------------   01087100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   01087200
                      AIF   (K'&ZXMOSVECTOR LE 0).ZG311R  NOT I/O       01087300
                      AIF   ('&XMOSVECTOR'(1,1) NE '(').ZG311R          01087400
&ZCGPR                SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)            01087500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG311P               01087600
                      AIF   (K'&ZCGPR GT 2).ZG311Q                      01087700
                      AIF   ('&ZCGPR' EQ '0').ZG311Q                    01087800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01087900
                      AIF   (T'&ZCGPR NE 'N').ZG311Q  INVALID REG NAME  01088000
.ZG311P               ANOP  ,                                           01088100
                      AIF   (T'&ZCGPR NE 'N').ZG311R  NON NUMERIC       01088200
                      AIF   ('&ZCGPR' LT '2').ZG311Q                    01088300
                      AIF   ('&ZCGPR' LE '12').ZG311R                   01088400
.ZG311Q               ANOP  ,                                           01088500
&ZMS                  SETC  '"MOSVECTOR='                               01088600
&ZMS                  SETC  '&ZMS.&MOSVECTOR"'                          01088700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01088800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01088900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01089000
.ZG311R               ANOP  ,                                           01089100
.*----------------------------------------------------------------***   01089200
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01089300
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            01089400
                      AIF   (K'&BUFLIST LE 0).ZG314C                    01089500
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   01089600
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   01089700
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   01089800
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      01089900
                      AIF   (N'&BUFLIST GT 1).ZG314A                    01090000
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              01090100
.ZG314A               AIF   (N'&BUFLIST LE 1).ZG314B  CK NUM            01090200
&ZMS                  SETC  '"BUFLIST='                                 01090300
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01090400
&ZMS                  SETC  '&ZMS "BUFLIST"'                            01090500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01090600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01090700
.ZG314B               AIF   (K'&XBUFLIST GT 0).ZG314C  ONE PARM         01090800
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01090900
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 01091000
&ZMS                  SETC  ' '                                         01091100
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                01091200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01091300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01091400
.ZG314C               ANOP  ,                                           01091500
.*----------------------------------------------------------------***   01091600
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01091700
                      AIF   (K'&BUFFER LE 0).ZG347D  NO ME KEY          01091800
                      AIF   (N'&BUFFER LE 1).ZG347A  CK NUM             01091900
&ZMS                  SETC  '"BUFFER='                                  01092000
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01092100
&ZMS                  SETC  '&ZMS "BUFFER"'                             01092200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01092300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01092400
.ZG347A               AIF   (K'&XDATAREA LE 0).ZG347B                   01092500
&ZMS                  SETC  '"BUFFER'                                   01092600
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01092700
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       01092800
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          01092900
                      MNOTE 8,' &ZMS KEY.'                              01093000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01093100
                      AGO   .ZG347D                                     01093200
.*                                                                      01093300
.ZG347B               ANOP  ,                                           01093400
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   01093500
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   01093600
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   01093700
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      01093800
                      AIF   (N'&BUFFER GT 1).ZG347C                     01093900
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              01094000
.ZG347C               AIF   (K'&XBUFFER GT 0).ZG347D  ONE PARM          01094100
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01094200
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 01094300
&ZMS                  SETC  ' '                                         01094400
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 01094500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01094600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01094700
.ZG347D               ANOP  ,                                           01094800
.*------------------------------------------------------------------    01094900
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           01095000
                      AIF   (K'&XDATAREA GT 0).ZG359B                   01095100
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01095200
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 01095300
&XDATAREA             SETC  ''          ENSURE NULL                     01095400
&XBUFLIST             SETC  ''          ENSURE NULL                     01095500
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      01095600
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         01095700
&ZMS                  SETC  '&ZMS REQUIRED:'                            01095800
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            01095900
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           01096000
                      MNOTE 8,' &ZMS '                                  01096100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01096200
.ZG359B               ANOP  ,                                           01096300
.*-------------------------------------------------------------------   01096400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01096500
.ZG314ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG347ZY                     01096600
.*-------------------------------------------------------------------   01096700
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                01096800
&ZCVAL                SETC ''           ERROR KEY FIELD                 01096900
.ZG314I0              AIF   (K'&BUFSIZE LE 0).ZG314I1                   01097000
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          01097100
.ZG314I1              AIF   (K'&ZCVAL LE 0).ZG314J  KEY                 01097200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01097300
&ZMS                  SETC  '"BUFLIST'                                  01097400
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           01097500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01097600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01097700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01097800
.ZG314J               ANOP  ,                                           01097900
.*-------------------------------------------------------------------   01098000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01098100
                      AIF   (K'&ZXBUFLIST LE 0).ZG314R  NOT I/O         01098200
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG314R            01098300
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                01098400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG314P               01098500
                      AIF   (K'&ZCGPR GT 2).ZG314Q                      01098600
                      AIF   ('&ZCGPR' EQ '0').ZG314Q                    01098700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01098800
                      AIF   (T'&ZCGPR NE 'N').ZG314Q  INVALID REG NAME  01098900
.ZG314P               ANOP  ,                                           01099000
                      AIF   (T'&ZCGPR NE 'N').ZG314R  NON NUMERIC       01099100
                      AIF   ('&ZCGPR' LT '2').ZG314Q                    01099200
                      AIF   ('&ZCGPR' LE '12').ZG314R                   01099300
.ZG314Q               ANOP  ,                                           01099400
&ZMS                  SETC  '"BUFLIST='                                 01099500
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01099600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01099700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01099800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01099900
.ZG314R               ANOP  ,                                           01100000
.*------------------------------------------------------------------    01100100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01100200
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            01100300
.*-------------------------------------------------------------------   01100400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01100500
.ZG317                ANOP  ,                                           01100600
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG317A             01100700
&ZTLC                 SETC 'VIRTUAL'                                    01100800
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG334        01100900
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     01101000
                      AIF   (N'&BUFADDRTYPE LE 1).ZG317A  CK NUM        01101100
&ZMS                  SETC  '"BUFADDRTYPE='                             01101200
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01101300
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01101400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01101500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01101600
.ZG317A               ANOP  ,                                           01101700
.*------------------------------------------------------------------    01101800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01101900
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01102000
.*-------------------------------------------------------------------   01102100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01102200
.ZG320                ANOP  ,                                           01102300
                      AIF   (K'&PAGEABLE(1) LE 0).ZG320A                01102400
&ZTLC                 SETC 'YES'                                        01102500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG324           01102600
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01102700
                      AIF   (N'&PAGEABLE LE 1).ZG320A  CK NUM           01102800
&ZMS                  SETC  '"PAGEABLE='                                01102900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01103000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01103100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01103200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01103300
.ZG320A               ANOP  ,                                           01103400
.*----------------------------------------------------------------***   01103500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01103600
                      AIF   (N'&BUFSTGKEY LE 1).ZG322A  CK NUM          01103700
&ZMS                  SETC  '"BUFSTGKEY='                               01103800
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01103900
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01104000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01104100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01104200
.ZG322A               ANOP  ,                                           01104300
.*-------------------------------------------------------------------   01104400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01104500
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01104600
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01104700
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG322B  PARM         01104800
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01104900
                      AIF   (N'&BUFSTGKEY GT 1).ZG322B  MULTI           01105000
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01105100
.ZG322B               ANOP  ,                                           01105200
.*-------------------------------------------------------------------   01105300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01105400
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG322R  NOT I/O       01105500
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG322R                  01105600
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG322R          01105700
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01105800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG322P               01105900
                      AIF   (K'&ZCGPR GT 2).ZG322Q                      01106000
                      AIF   ('&ZCGPR' EQ '0').ZG322Q                    01106100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01106200
                      AIF   (T'&ZCGPR NE 'N').ZG322Q  INVALID REG NAME  01106300
.ZG322P               ANOP  ,                                           01106400
                      AIF   (T'&ZCGPR NE 'N').ZG322R  NON NUMERIC       01106500
                      AIF   ('&ZCGPR' LT '2').ZG322Q                    01106600
                      AIF   ('&ZCGPR' LE '12').ZG322R                   01106700
.ZG322Q               ANOP  ,                                           01106800
&ZMS                  SETC  '"BUFSTGKEY='                               01106900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01107000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01107100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01107200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01107300
.ZG322R               ANOP  ,                                           01107400
.*-------------------------------------------------------------------   01107500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01107600
.ZG324                ANOP  ,                                           01107700
&ZTLC                 SETC 'NO'                                         01107800
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG325           01107900
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01108000
                      AIF   (N'&PAGEABLE LE 1).ZG324A  CK NUM           01108100
&ZMS                  SETC  '"PAGEABLE='                                01108200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01108300
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01108400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01108500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01108600
.ZG324A               ANOP  ,                                           01108700
.*------------------------------------------------------------------    01108800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01108900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01109000
.ZG324A0              AIF   (K'&BUFSTGKEY LE 0).ZG324A1  OK             01109100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01109200
.ZG324A1              AIF   (K'&ZCVAL LE 0).ZG324A2  OK                 01109300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01109400
&ZMS                  SETC  '"PAGEABLE'                                 01109500
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01109600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01109700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01109800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01109900
.ZG324A2              ANOP  ,                                           01110000
.*------------------------------------------------------------------    01110100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01110200
.ZG325                ANOP  ,                                           01110300
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01110400
                      AIF   (K'&XPAGEABLE GT 0).ZG325E  VALID ARG       01110500
                      AIF   (T'&PAGEABLE EQ 'O').ZG325D  OMITTED        01110600
&ZASYSLNDX            SETA  0                                           01110700
.ZG325A               ANOP  ,           POSITIONAL MACRO KEY            01110800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01110900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG325C           01111000
&ZTLC                 SETC 'PAGEABLE'                                   01111100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG325A  01111200
.ZG325B               ANOP  ,                                           01111300
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01111400
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        01111500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01111600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01111700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01111800
                      AGO   .ZG325E                                     01111900
.ZG325C               ANOP  ,                                           01112000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01112100
&ZMS                  SETC  '"PAGEABLE='                                01112200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01112300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01112400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01112500
&ZMS                  SETC  '&ZMS "YES"'                                01112600
&ZMS                  SETC  '&ZMS OR "NO".'                             01112700
                      MNOTE 8,' &ZMS '                                  01112800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01112900
                      AGO   .ZG325E                                     01113000
.ZG325D               ANOP  ,                                           01113100
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01113200
.ZG325E               ANOP  ,                                           01113300
.*----------------------------------------------------------------***   01113400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01113500
                      AIF   (N'&BUFALET LE 1).ZG327A  CK NUM            01113600
&ZMS                  SETC  '"BUFALET='                                 01113700
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01113800
&ZMS                  SETC  '&ZMS "BUFALET"'                            01113900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01114000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01114100
.ZG327A               ANOP  ,                                           01114200
.*-------------------------------------------------------------------   01114300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01114400
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   01114500
&XBUFALET             SETC  'NO_BUFALET'                                01114600
                      AIF   (K'&BUFALET(1) LE 0).ZG327B  PARM           01114700
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           01114800
                      AIF   (N'&BUFALET GT 1).ZG327B  MULTI             01114900
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   01115000
.ZG327B               ANOP  ,                                           01115100
.*-------------------------------------------------------------------   01115200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01115300
                      AIF   (K'&ZXBUFALET LE 0).ZG327R  NOT I/O         01115400
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG327R                     01115500
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG327R            01115600
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                01115700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG327P               01115800
                      AIF   (K'&ZCGPR GT 2).ZG327Q                      01115900
                      AIF   ('&ZCGPR' EQ '0').ZG327Q                    01116000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01116100
                      AIF   (T'&ZCGPR NE 'N').ZG327Q  INVALID REG NAME  01116200
.ZG327P               ANOP  ,                                           01116300
                      AIF   (T'&ZCGPR NE 'N').ZG327R  NON NUMERIC       01116400
                      AIF   ('&ZCGPR' LT '2').ZG327Q                    01116500
                      AIF   ('&ZCGPR' LE '12').ZG327R                   01116600
.ZG327Q               ANOP  ,                                           01116700
&ZMS                  SETC  '"BUFALET='                                 01116800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01116900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01117000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01117100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01117200
.ZG327R               ANOP  ,                                           01117300
.*------------------------------------------------------------------    01117400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01117500
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01117600
.*-------------------------------------------------------------------   01117700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01117800
.ZG331                ANOP  ,                                           01117900
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG331A             01118000
&ZTLC                 SETC '31'                                         01118100
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG332        01118200
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01118300
                      AIF   (N'&BUFADDRSIZE LE 1).ZG331A  CK NUM        01118400
&ZMS                  SETC  '"BUFADDRSIZE='                             01118500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01118600
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01118700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01118800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01118900
.ZG331A               ANOP  ,                                           01119000
.*-------------------------------------------------------------------   01119100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01119200
.ZG332                ANOP  ,                                           01119300
&ZTLC                 SETC '64'                                         01119400
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG333        01119500
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01119600
                      AIF   (N'&BUFADDRSIZE LE 1).ZG332A  CK NUM        01119700
&ZMS                  SETC  '"BUFADDRSIZE='                             01119800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01119900
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01120000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01120100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01120200
.ZG332A               ANOP  ,                                           01120300
.*------------------------------------------------------------------    01120400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01120500
.ZG333                ANOP  ,                                           01120600
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01120700
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG333E  VALID ARG    01120800
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG333D  OMITTED     01120900
&ZASYSLNDX            SETA  0                                           01121000
.ZG333A               ANOP  ,           POSITIONAL MACRO KEY            01121100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01121200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG333C           01121300
&ZTLC                 SETC 'BUFADDRSIZE'                                01121400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG333A  01121500
.ZG333B               ANOP  ,                                           01121600
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01121700
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     01121800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01121900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01122000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01122100
                      AGO   .ZG333E                                     01122200
.ZG333C               ANOP  ,                                           01122300
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01122400
&ZMS                  SETC  '"BUFADDRSIZE='                             01122500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01122600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01122700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01122800
&ZMS                  SETC  '&ZMS "31"'                                 01122900
&ZMS                  SETC  '&ZMS OR "64".'                             01123000
                      MNOTE 8,' &ZMS '                                  01123100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01123200
                      AGO   .ZG333E                                     01123300
.ZG333D               ANOP  ,                                           01123400
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01123500
.ZG333E               ANOP  ,                                           01123600
.*-------------------------------------------------------------------   01123700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01123800
.ZG334                ANOP  ,                                           01123900
&ZTLC                 SETC 'REAL'                                       01124000
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG340        01124100
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     01124200
                      AIF   (N'&BUFADDRTYPE LE 1).ZG334A  CK NUM        01124300
&ZMS                  SETC  '"BUFADDRTYPE='                             01124400
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01124500
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01124600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01124700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01124800
.ZG334A               ANOP  ,                                           01124900
.*------------------------------------------------------------------    01125000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01125100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01125200
.ZG334A0              AIF   (K'&PAGEABLE LE 0).ZG334A1  OK              01125300
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      01125400
.ZG334A1              AIF   (K'&BUFSTGKEY LE 0).ZG334A2  OK             01125500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01125600
.ZG334A2              AIF   (K'&BUFALET LE 0).ZG334A3  OK               01125700
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      01125800
.ZG334A3              AIF   (K'&ZCVAL LE 0).ZG334A4  OK                 01125900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01126000
&ZMS                  SETC  '"BUFADDRTYPE'                              01126100
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       01126200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01126300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01126400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01126500
.ZG334A4              ANOP  ,                                           01126600
.*------------------------------------------------------------------    01126700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01126800
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01126900
.*-------------------------------------------------------------------   01127000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01127100
.ZG337                ANOP  ,                                           01127200
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG337A             01127300
&ZTLC                 SETC '31'                                         01127400
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG338        01127500
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01127600
                      AIF   (N'&BUFADDRSIZE LE 1).ZG337A  CK NUM        01127700
&ZMS                  SETC  '"BUFADDRSIZE='                             01127800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01127900
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01128000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01128100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01128200
.ZG337A               ANOP  ,                                           01128300
.*-------------------------------------------------------------------   01128400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01128500
.ZG338                ANOP  ,                                           01128600
&ZTLC                 SETC '64'                                         01128700
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG339        01128800
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01128900
                      AIF   (N'&BUFADDRSIZE LE 1).ZG338A  CK NUM        01129000
&ZMS                  SETC  '"BUFADDRSIZE='                             01129100
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01129200
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01129300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01129400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01129500
.ZG338A               ANOP  ,                                           01129600
.*------------------------------------------------------------------    01129700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01129800
.ZG339                ANOP  ,                                           01129900
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01130000
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG339E  VALID ARG    01130100
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG339D  OMITTED     01130200
&ZASYSLNDX            SETA  0                                           01130300
.ZG339A               ANOP  ,           POSITIONAL MACRO KEY            01130400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01130500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG339C           01130600
&ZTLC                 SETC 'BUFADDRSIZE'                                01130700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG339A  01130800
.ZG339B               ANOP  ,                                           01130900
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01131000
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     01131100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01131200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01131300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01131400
                      AGO   .ZG339E                                     01131500
.ZG339C               ANOP  ,                                           01131600
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01131700
&ZMS                  SETC  '"BUFADDRSIZE='                             01131800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01131900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01132000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01132100
&ZMS                  SETC  '&ZMS "31"'                                 01132200
&ZMS                  SETC  '&ZMS OR "64".'                             01132300
                      MNOTE 8,' &ZMS '                                  01132400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01132500
                      AGO   .ZG339E                                     01132600
.ZG339D               ANOP  ,                                           01132700
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01132800
.ZG339E               ANOP  ,                                           01132900
.*------------------------------------------------------------------    01133000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01133100
.ZG340                ANOP  ,                                           01133200
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01133300
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG340E  VALID ARG    01133400
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG340D  OMITTED     01133500
&ZASYSLNDX            SETA  0                                           01133600
.ZG340A               ANOP  ,           POSITIONAL MACRO KEY            01133700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01133800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG340C           01133900
&ZTLC                 SETC 'BUFADDRTYPE'                                01134000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG340A  01134100
.ZG340B               ANOP  ,                                           01134200
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01134300
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     01134400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01134500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01134600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01134700
                      AGO   .ZG340E                                     01134800
.ZG340C               ANOP  ,                                           01134900
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01135000
&ZMS                  SETC  '"BUFADDRTYPE='                             01135100
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01135200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01135300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01135400
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            01135500
&ZMS                  SETC  '&ZMS OR "REAL".'                           01135600
                      MNOTE 8,' &ZMS '                                  01135700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01135800
                      AGO   .ZG340E                                     01135900
.ZG340D               ANOP  ,                                           01136000
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             01136100
.ZG340E               ANOP  ,                                           01136200
.*----------------------------------------------------------------***   01136300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01136400
                      AIF   (N'&BUFNUM LE 1).ZG342A  CK NUM             01136500
&ZMS                  SETC  '"BUFNUM='                                  01136600
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01136700
&ZMS                  SETC  '&ZMS "BUFNUM"'                             01136800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01136900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01137000
.ZG342A               ANOP  ,                                           01137100
.*-------------------------------------------------------------------   01137200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01137300
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   01137400
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           01137500
                      AIF   (N'&BUFNUM GT 1).ZG342B  MULTI              01137600
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   01137700
.ZG342B               AIF   (K'&BUFNUM(1) GT 0).ZG342C                  01137800
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 01137900
&ZMS                  SETC  ' '                                         01138000
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 01138100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01138200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01138300
.ZG342C               ANOP  ,                                           01138400
.*-------------------------------------------------------------------   01138500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01138600
                      AIF   (K'&ZXBUFNUM LE 0).ZG342R  NOT I/O          01138700
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG342R             01138800
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  01138900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG342P               01139000
                      AIF   (K'&ZCGPR GT 2).ZG342Q                      01139100
                      AIF   ('&ZCGPR' EQ '0').ZG342Q                    01139200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01139300
                      AIF   (T'&ZCGPR NE 'N').ZG342Q  INVALID REG NAME  01139400
.ZG342P               ANOP  ,                                           01139500
                      AIF   (T'&ZCGPR NE 'N').ZG342R  NON NUMERIC       01139600
                      AIF   ('&ZCGPR' LT '2').ZG342Q                    01139700
                      AIF   ('&ZCGPR' LE '12').ZG342R                   01139800
.ZG342Q               ANOP  ,                                           01139900
&ZMS                  SETC  '"BUFNUM='                                  01140000
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01140100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01140200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01140300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01140400
.ZG342R               ANOP  ,                                           01140500
.*----------------------------------------------------------------***   01140600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01140700
                      AIF   (N'&BUFINCRNUM LE 1).ZG345A  CK NUM         01140800
&ZMS                  SETC  '"BUFINCRNUM='                              01140900
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         01141000
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         01141100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01141200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01141300
.ZG345A               ANOP  ,                                           01141400
.*-------------------------------------------------------------------   01141500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01141600
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   01141700
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           01141800
                      AIF   (N'&BUFINCRNUM GT 1).ZG345B  MULTI          01141900
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           01142000
.ZG345B               AIF   (K'&BUFINCRNUM(1) GT 0).ZG345C              01142100
&ZXBUFINCRNUM         SETC  ''          RESET IN/OUTPUT                 01142200
&ZMS                  SETC  ' '                                         01142300
&ZMS                  SETC  '&ZMS "BUFINCRNUM" KEY AND ITS'             01142400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01142500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01142600
.ZG345C               ANOP  ,                                           01142700
.*-------------------------------------------------------------------   01142800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01142900
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG345R  NOT I/O      01143000
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG345R         01143100
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          01143200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG345P               01143300
                      AIF   (K'&ZCGPR GT 2).ZG345Q                      01143400
                      AIF   ('&ZCGPR' EQ '0').ZG345Q                    01143500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01143600
                      AIF   (T'&ZCGPR NE 'N').ZG345Q  INVALID REG NAME  01143700
.ZG345P               ANOP  ,                                           01143800
                      AIF   (T'&ZCGPR NE 'N').ZG345R  NON NUMERIC       01143900
                      AIF   ('&ZCGPR' LT '2').ZG345Q                    01144000
                      AIF   ('&ZCGPR' LE '12').ZG345R                   01144100
.ZG345Q               ANOP  ,                                           01144200
&ZMS                  SETC  '"BUFINCRNUM='                              01144300
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         01144400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01144500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01144600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01144700
.ZG345R               ANOP  ,                                           01144800
.*-------------------------------------------------------------------   01144900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01145000
.ZG347ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG359ZY                      01145100
.*-------------------------------------------------------------------   01145200
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                01145300
&ZCVAL                SETC ''           ERROR KEY FIELD                 01145400
.ZG347I0              AIF   (K'&BUFADDRTYPE LE 0).ZG347I1               01145500
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         01145600
.ZG347I1              AIF   (K'&BUFALET LE 0).ZG347I2                   01145700
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          01145800
.ZG347I2              AIF   (K'&BUFADDRSIZE LE 0).ZG347I3               01145900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         01146000
.ZG347I3              AIF   (K'&BUFNUM LE 0).ZG347I4                    01146100
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          01146200
.ZG347I4              AIF   (K'&BUFINCRNUM LE 0).ZG347I5                01146300
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          01146400
.ZG347I5              AIF   (K'&ZCVAL LE 0).ZG347J  KEY                 01146500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01146600
&ZMS                  SETC  '"BUFFER'                                   01146700
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01146800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01146900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01147000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01147100
.ZG347J               ANOP  ,                                           01147200
.*-------------------------------------------------------------------   01147300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01147400
                      AIF   (K'&ZXBUFFER LE 0).ZG347R  NOT I/O          01147500
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG347R             01147600
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  01147700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG347P               01147800
                      AIF   (K'&ZCGPR GT 2).ZG347Q                      01147900
                      AIF   ('&ZCGPR' EQ '0').ZG347Q                    01148000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01148100
                      AIF   (T'&ZCGPR NE 'N').ZG347Q  INVALID REG NAME  01148200
.ZG347P               ANOP  ,                                           01148300
                      AIF   (T'&ZCGPR NE 'N').ZG347R  NON NUMERIC       01148400
                      AIF   ('&ZCGPR' LT '2').ZG347Q                    01148500
                      AIF   ('&ZCGPR' LE '12').ZG347R                   01148600
.ZG347Q               ANOP  ,                                           01148700
&ZMS                  SETC  '"BUFFER='                                  01148800
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01148900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01149000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01149100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01149200
.ZG347R               ANOP  ,                                           01149300
.*------------------------------------------------------------------    01149400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01149500
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01149600
.*-------------------------------------------------------------------   01149700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01149800
.ZG350                ANOP  ,                                           01149900
                      AIF   (K'&PAGEABLE(1) LE 0).ZG350A                01150000
&ZTLC                 SETC 'YES'                                        01150100
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG354           01150200
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01150300
                      AIF   (N'&PAGEABLE LE 1).ZG350A  CK NUM           01150400
&ZMS                  SETC  '"PAGEABLE='                                01150500
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01150600
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01150700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01150800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01150900
.ZG350A               ANOP  ,                                           01151000
.*----------------------------------------------------------------***   01151100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01151200
                      AIF   (N'&BUFSTGKEY LE 1).ZG352A  CK NUM          01151300
&ZMS                  SETC  '"BUFSTGKEY='                               01151400
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01151500
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01151600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01151700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01151800
.ZG352A               ANOP  ,                                           01151900
.*-------------------------------------------------------------------   01152000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01152100
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01152200
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01152300
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG352B  PARM         01152400
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01152500
                      AIF   (N'&BUFSTGKEY GT 1).ZG352B  MULTI           01152600
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01152700
.ZG352B               ANOP  ,                                           01152800
.*-------------------------------------------------------------------   01152900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01153000
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG352R  NOT I/O       01153100
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG352R                  01153200
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG352R          01153300
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01153400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG352P               01153500
                      AIF   (K'&ZCGPR GT 2).ZG352Q                      01153600
                      AIF   ('&ZCGPR' EQ '0').ZG352Q                    01153700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01153800
                      AIF   (T'&ZCGPR NE 'N').ZG352Q  INVALID REG NAME  01153900
.ZG352P               ANOP  ,                                           01154000
                      AIF   (T'&ZCGPR NE 'N').ZG352R  NON NUMERIC       01154100
                      AIF   ('&ZCGPR' LT '2').ZG352Q                    01154200
                      AIF   ('&ZCGPR' LE '12').ZG352R                   01154300
.ZG352Q               ANOP  ,                                           01154400
&ZMS                  SETC  '"BUFSTGKEY='                               01154500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01154600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01154700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01154800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01154900
.ZG352R               ANOP  ,                                           01155000
.*-------------------------------------------------------------------   01155100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01155200
.ZG354                ANOP  ,                                           01155300
&ZTLC                 SETC 'NO'                                         01155400
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG355           01155500
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01155600
                      AIF   (N'&PAGEABLE LE 1).ZG354A  CK NUM           01155700
&ZMS                  SETC  '"PAGEABLE='                                01155800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01155900
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01156000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01156100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01156200
.ZG354A               ANOP  ,                                           01156300
.*------------------------------------------------------------------    01156400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01156500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01156600
.ZG354A0              AIF   (K'&BUFSTGKEY LE 0).ZG354A1  OK             01156700
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01156800
.ZG354A1              AIF   (K'&ZCVAL LE 0).ZG354A2  OK                 01156900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01157000
&ZMS                  SETC  '"PAGEABLE'                                 01157100
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01157200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01157300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01157400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01157500
.ZG354A2              ANOP  ,                                           01157600
.*------------------------------------------------------------------    01157700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01157800
.ZG355                ANOP  ,                                           01157900
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01158000
                      AIF   (K'&XPAGEABLE GT 0).ZG355E  VALID ARG       01158100
                      AIF   (T'&PAGEABLE EQ 'O').ZG355D  OMITTED        01158200
&ZASYSLNDX            SETA  0                                           01158300
.ZG355A               ANOP  ,           POSITIONAL MACRO KEY            01158400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01158500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG355C           01158600
&ZTLC                 SETC 'PAGEABLE'                                   01158700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG355A  01158800
.ZG355B               ANOP  ,                                           01158900
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01159000
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        01159100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01159200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01159300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01159400
                      AGO   .ZG355E                                     01159500
.ZG355C               ANOP  ,                                           01159600
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01159700
&ZMS                  SETC  '"PAGEABLE='                                01159800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01159900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01160000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01160100
&ZMS                  SETC  '&ZMS "YES"'                                01160200
&ZMS                  SETC  '&ZMS OR "NO".'                             01160300
                      MNOTE 8,' &ZMS '                                  01160400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01160500
                      AGO   .ZG355E                                     01160600
.ZG355D               ANOP  ,                                           01160700
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01160800
.ZG355E               ANOP  ,                                           01160900
.*----------------------------------------------------------------***   01161000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01161100
                      AIF   (N'&BUFSIZE LE 1).ZG357A  CK NUM            01161200
&ZMS                  SETC  '"BUFSIZE='                                 01161300
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01161400
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            01161500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01161600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01161700
.ZG357A               ANOP  ,                                           01161800
.*-------------------------------------------------------------------   01161900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01162000
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   01162100
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           01162200
                      AIF   (N'&BUFSIZE GT 1).ZG357B  MULTI             01162300
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   01162400
.ZG357B               AIF   (K'&BUFSIZE(1) GT 0).ZG357C                 01162500
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 01162600
&ZMS                  SETC  ' '                                         01162700
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                01162800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01162900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01163000
.ZG357C               ANOP  ,                                           01163100
.*-------------------------------------------------------------------   01163200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01163300
                      AIF   (K'&ZXBUFSIZE LE 0).ZG357R  NOT I/O         01163400
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG357R            01163500
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                01163600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG357P               01163700
                      AIF   (K'&ZCGPR GT 2).ZG357Q                      01163800
                      AIF   ('&ZCGPR' EQ '0').ZG357Q                    01163900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01164000
                      AIF   (T'&ZCGPR NE 'N').ZG357Q  INVALID REG NAME  01164100
.ZG357P               ANOP  ,                                           01164200
                      AIF   (T'&ZCGPR NE 'N').ZG357R  NON NUMERIC       01164300
                      AIF   ('&ZCGPR' LT '2').ZG357Q                    01164400
                      AIF   ('&ZCGPR' LE '12').ZG357R                   01164500
.ZG357Q               ANOP  ,                                           01164600
&ZMS                  SETC  '"BUFSIZE='                                 01164700
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01164800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01164900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01165000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01165100
.ZG357R               ANOP  ,                                           01165200
.*-------------------------------------------------------------------   01165300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            01165400
.ZG359ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     01165500
.*------------------------------------------------------------------    01165600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01165700
.ZG360                ANOP  ,                                           01165800
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   01165900
                      AIF   (K'&XREQUEST GT 0).ZG360E  VALID ARG        01166000
                      AIF   (T'&REQUEST EQ 'O').ZG360D  OMITTED         01166100
&ZASYSLNDX            SETA  0                                           01166200
.ZG360A               ANOP  ,           POSITIONAL MACRO KEY            01166300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01166400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG360C           01166500
&ZTLC                 SETC 'REQUEST'                                    01166600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG360A  01166700
.ZG360B               ANOP  ,                                           01166800
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01166900
&ZMS                  SETC  'THE "REQUEST" KEY'                         01167000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01167100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01167200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01167300
                      AGO   .ZG360E                                     01167400
.ZG360C               ANOP  ,                                           01167500
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01167600
&ZMS                  SETC  '"REQUEST='                                 01167700
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01167800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01167900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01168000
&ZMS                  SETC  '&ZMS "LOCK",'                              01168100
&ZMS                  SETC  '&ZMS "READ_LCONTROLS",'                    01168200
&ZMS                  SETC  '&ZMS "WRITE_LCONTROLS",'                   01168300
&ZMS                  SETC  '&ZMS "READ_STRCOUNTS",'                    01168400
&ZMS                  SETC  '&ZMS "READ_EQCONTROLS",'                   01168500
&ZMS                  SETC  '&ZMS "READ_EMCONTROLS",'                   01168600
&ZMS                  SETC  '&ZMS "DEQ_EVENTQ",'                        01168700
&ZMS                  SETC  '&ZMS "MONITOR_EVENTQ",'                    01168800
&ZMS                  SETC  '&ZMS "MONITOR_LIST",'                      01168900
                      MNOTE 8,' &ZMS '                                  01169000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01169100
&ZMS                  SETC  '(CONTINUED) '                              01169200
&ZMS                  SETC  '&ZMS "MONITOR_KEYRANGE",'                  01169300
&ZMS                  SETC  '&ZMS "MONITOR_SUBLIST",'                   01169400
&ZMS                  SETC  '&ZMS OR "MONITOR_SUBLISTS".'               01169500
                      MNOTE 8,' &ZMS '                                  01169600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01169700
                      AGO   .ZG360E                                     01169800
.ZG360D               ANOP  ,                                           01169900
&XREQUEST             SETC  'LOCK'      SET DEFAULT KEYWORD             01170000
.ZG360E               ANOP  ,                                           01170100
.*------------------------------------------------------------------    01170200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01170300
                      AIF   (K'&REQUEST(1) GT 0).ZG360F  PARM           01170400
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             01170500
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01170600
&ZMS                  SETC  'THE'                                       01170700
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS'                01170800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01170900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01171000
&ZMS                  SETC  '&ZMS "LOCK",'                              01171100
&ZMS                  SETC  '&ZMS "READ_LCONTROLS",'                    01171200
&ZMS                  SETC  '&ZMS "WRITE_LCONTROLS",'                   01171300
&ZMS                  SETC  '&ZMS "READ_STRCOUNTS",'                    01171400
&ZMS                  SETC  '&ZMS "READ_EQCONTROLS",'                   01171500
&ZMS                  SETC  '&ZMS "READ_EMCONTROLS",'                   01171600
&ZMS                  SETC  '&ZMS "DEQ_EVENTQ",'                        01171700
&ZMS                  SETC  '&ZMS "MONITOR_EVENTQ",'                    01171800
                      MNOTE 8,' &ZMS '                                  01171900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01172000
&ZMS                  SETC  '(CONTINUED) '                              01172100
&ZMS                  SETC  '&ZMS "MONITOR_LIST",'                      01172200
&ZMS                  SETC  '&ZMS "MONITOR_KEYRANGE",'                  01172300
&ZMS                  SETC  '&ZMS "MONITOR_SUBLIST",'                   01172400
&ZMS                  SETC  '&ZMS OR "MONITOR_SUBLISTS".'               01172500
                      MNOTE 8,' &ZMS '                                  01172600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01172700
.ZG360F               ANOP  ,                                           01172800
.*------------------------------------------------------------------    01172900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01173000
&XMODE                SETC  ''          INITIALIZE XVARIABLE            01173100
.*-------------------------------------------------------------------   01173200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01173300
.ZG363                ANOP  ,                                           01173400
                      AIF   (K'&MODE(1) LE 0).ZG363A                    01173500
&ZTLC                 SETC 'SYNCSUSPEND'                                01173600
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG370               01173700
&XMODE                SETC  'SYNCSUSPEND'       SET KEYWORD             01173800
                      AIF   (N'&MODE LE 1).ZG363A  CK NUM               01173900
&ZMS                  SETC  '"MODE='                                    01174000
&ZMS                  SETC  '&ZMS.&MODE"'                               01174100
&ZMS                  SETC  '&ZMS "MODE"'                               01174200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01174300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01174400
.ZG363A               ANOP  ,                                           01174500
.*------------------------------------------------------------------    01174600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01174700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01174800
.ZG363A0              AIF   (K'&REQECB LE 0).ZG363A1  OK                01174900
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01175000
.ZG363A1              AIF   (K'&REQDATA LE 0).ZG363A2  OK               01175100
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01175200
.ZG363A2              AIF   (K'&REQTOKEN LE 0).ZG363A3  OK              01175300
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01175400
.ZG363A3              AIF   (K'&ZCVAL LE 0).ZG363A4  OK                 01175500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01175600
&ZMS                  SETC  '"MODE'                                     01175700
&ZMS                  SETC  '&ZMS.=&MODE"'                              01175800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01175900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01176000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01176100
.ZG363A4              ANOP  ,                                           01176200
.*----------------------------------------------------------------***   01176300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01176400
                      AIF   (N'&ANSAREA LE 1).ZG365A  CK NUM            01176500
&ZMS                  SETC  '"ANSAREA='                                 01176600
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01176700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01176800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01176900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01177000
.ZG365A               ANOP  ,                                           01177100
.*-------------------------------------------------------------------   01177200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01177300
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01177400
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01177500
                      AIF   (N'&ANSAREA GT 1).ZG365B  MULTI             01177600
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01177700
.ZG365B               AIF   (K'&ANSAREA(1) GT 0).ZG365C                 01177800
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01177900
&ZMS                  SETC  'WHEN "SYNCSUSPEND" IS SPECIFIED'           01178000
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01178100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01178200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01178300
.ZG365C               ANOP  ,                                           01178400
.*-------------------------------------------------------------------   01178500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01178600
                      AIF   (K'&ZXANSAREA LE 0).ZG365R  NOT I/O         01178700
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG365R            01178800
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01178900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG365P               01179000
                      AIF   (K'&ZCGPR GT 2).ZG365Q                      01179100
                      AIF   ('&ZCGPR' EQ '0').ZG365Q                    01179200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01179300
                      AIF   (T'&ZCGPR NE 'N').ZG365Q  INVALID REG NAME  01179400
.ZG365P               ANOP  ,                                           01179500
                      AIF   (T'&ZCGPR NE 'N').ZG365R  NON NUMERIC       01179600
                      AIF   ('&ZCGPR' LT '2').ZG365Q                    01179700
                      AIF   ('&ZCGPR' LE '12').ZG365R                   01179800
.ZG365Q               ANOP  ,                                           01179900
&ZMS                  SETC  '"ANSAREA='                                 01180000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01180100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01180200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01180300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01180400
.ZG365R               ANOP  ,                                           01180500
.*----------------------------------------------------------------***   01180600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01180700
                      AIF   (N'&ANSLEN LE 1).ZG367A  CK NUM             01180800
&ZMS                  SETC  '"ANSLEN='                                  01180900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01181000
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01181100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01181200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01181300
.ZG367A               ANOP  ,                                           01181400
.*-------------------------------------------------------------------   01181500
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01181600
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01181700
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01181800
                      AIF   (N'&ANSLEN GT 1).ZG367B  MULTI              01181900
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01182000
.ZG367B               AIF   (K'&ANSAREA(1) GT 0).ZG367C  KEY            01182100
                      AIF   (K'&ANSLEN(1) LE 0).ZG367D  PARM            01182200
&ZMS                  SETC  '"ANSLEN'                                   01182300
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01182400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01182500
&ZMS                  SETC  '&ZMS '                                     01182600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01182700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01182800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01182900
                      AGO   .ZG367E                                     01183000
.*                                                                      01183100
.ZG367C               AIF   (K'&ANSLEN(1) GT 0).ZG367E  PARM            01183200
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01183300
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01183400
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01183500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01183600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01183700
.ZG367D               ANOP  ,                                           01183800
&XANSLEN              SETC  '0'         SET DEFAULT                     01183900
.ZG367E               ANOP  ,                                           01184000
.*-------------------------------------------------------------------   01184100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01184200
                      AIF   (K'&ZXANSLEN LE 0).ZG367R  NOT I/O          01184300
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG367R             01184400
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01184500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG367P               01184600
                      AIF   (K'&ZCGPR GT 2).ZG367Q                      01184700
                      AIF   ('&ZCGPR' EQ '0').ZG367Q                    01184800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01184900
                      AIF   (T'&ZCGPR NE 'N').ZG367Q  INVALID REG NAME  01185000
.ZG367P               ANOP  ,                                           01185100
                      AIF   (T'&ZCGPR NE 'N').ZG367R  NON NUMERIC       01185200
                      AIF   ('&ZCGPR' LT '2').ZG367Q                    01185300
                      AIF   ('&ZCGPR' LE '12').ZG367R                   01185400
.ZG367Q               ANOP  ,                                           01185500
&ZMS                  SETC  '"ANSLEN='                                  01185600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01185700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01185800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01185900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01186000
.ZG367R               ANOP  ,                                           01186100
.*-------------------------------------------------------------------   01186200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01186300
.ZG370                ANOP  ,                                           01186400
&ZTLC                 SETC 'SYNCECB'                                    01186500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG380               01186600
&XMODE                SETC  'SYNCECB'   SET KEYWORD                     01186700
                      AIF   (N'&MODE LE 1).ZG370A  CK NUM               01186800
&ZMS                  SETC  '"MODE='                                    01186900
&ZMS                  SETC  '&ZMS.&MODE"'                               01187000
&ZMS                  SETC  '&ZMS "MODE"'                               01187100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01187200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01187300
.ZG370A               ANOP  ,                                           01187400
.*------------------------------------------------------------------    01187500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01187600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01187700
.ZG370A0              AIF   (K'&REQDATA LE 0).ZG370A1  OK               01187800
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01187900
.ZG370A1              AIF   (K'&REQTOKEN LE 0).ZG370A2  OK              01188000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01188100
.ZG370A2              AIF   (K'&ZCVAL LE 0).ZG370A3  OK                 01188200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01188300
&ZMS                  SETC  '"MODE'                                     01188400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01188500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01188600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01188700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01188800
.ZG370A3              ANOP  ,                                           01188900
.*----------------------------------------------------------------***   01189000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01189100
                      AIF   (N'&REQECB LE 1).ZG372A  CK NUM             01189200
&ZMS                  SETC  '"REQECB='                                  01189300
&ZMS                  SETC  '&ZMS.&REQECB"'                             01189400
&ZMS                  SETC  '&ZMS "REQECB"'                             01189500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01189600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01189700
.ZG372A               ANOP  ,                                           01189800
.*-------------------------------------------------------------------   01189900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01190000
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01190100
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01190200
                      AIF   (N'&REQECB GT 1).ZG372B  MULTI              01190300
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01190400
.ZG372B               AIF   (K'&REQECB(1) GT 0).ZG372C                  01190500
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01190600
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'               01190700
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01190800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01190900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01191000
.ZG372C               ANOP  ,                                           01191100
.*-------------------------------------------------------------------   01191200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01191300
                      AIF   (K'&ZXREQECB LE 0).ZG372R  NOT I/O          01191400
                      AIF   ('&XREQECB'(1,1) NE '(').ZG372R             01191500
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01191600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG372P               01191700
                      AIF   (K'&ZCGPR GT 2).ZG372Q                      01191800
                      AIF   ('&ZCGPR' EQ '0').ZG372Q                    01191900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01192000
                      AIF   (T'&ZCGPR NE 'N').ZG372Q  INVALID REG NAME  01192100
.ZG372P               ANOP  ,                                           01192200
                      AIF   (T'&ZCGPR NE 'N').ZG372R  NON NUMERIC       01192300
                      AIF   ('&ZCGPR' LT '2').ZG372Q                    01192400
                      AIF   ('&ZCGPR' LE '12').ZG372R                   01192500
.ZG372Q               ANOP  ,                                           01192600
&ZMS                  SETC  '"REQECB='                                  01192700
&ZMS                  SETC  '&ZMS.&REQECB"'                             01192800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01192900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01193000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01193100
.ZG372R               ANOP  ,                                           01193200
.*----------------------------------------------------------------***   01193300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01193400
                      AIF   (N'&ANSAREA LE 1).ZG375A  CK NUM            01193500
&ZMS                  SETC  '"ANSAREA='                                 01193600
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01193700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01193800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01193900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01194000
.ZG375A               ANOP  ,                                           01194100
.*-------------------------------------------------------------------   01194200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01194300
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01194400
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01194500
                      AIF   (N'&ANSAREA GT 1).ZG375B  MULTI             01194600
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01194700
.ZG375B               AIF   (K'&ANSAREA(1) GT 0).ZG375C                 01194800
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01194900
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'               01195000
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01195100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01195200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01195300
.ZG375C               ANOP  ,                                           01195400
.*-------------------------------------------------------------------   01195500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01195600
                      AIF   (K'&ZXANSAREA LE 0).ZG375R  NOT I/O         01195700
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG375R            01195800
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01195900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG375P               01196000
                      AIF   (K'&ZCGPR GT 2).ZG375Q                      01196100
                      AIF   ('&ZCGPR' EQ '0').ZG375Q                    01196200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01196300
                      AIF   (T'&ZCGPR NE 'N').ZG375Q  INVALID REG NAME  01196400
.ZG375P               ANOP  ,                                           01196500
                      AIF   (T'&ZCGPR NE 'N').ZG375R  NON NUMERIC       01196600
                      AIF   ('&ZCGPR' LT '2').ZG375Q                    01196700
                      AIF   ('&ZCGPR' LE '12').ZG375R                   01196800
.ZG375Q               ANOP  ,                                           01196900
&ZMS                  SETC  '"ANSAREA='                                 01197000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01197100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01197200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01197300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01197400
.ZG375R               ANOP  ,                                           01197500
.*----------------------------------------------------------------***   01197600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01197700
                      AIF   (N'&ANSLEN LE 1).ZG377A  CK NUM             01197800
&ZMS                  SETC  '"ANSLEN='                                  01197900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01198000
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01198100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01198200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01198300
.ZG377A               ANOP  ,                                           01198400
.*-------------------------------------------------------------------   01198500
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01198600
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01198700
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01198800
                      AIF   (N'&ANSLEN GT 1).ZG377B  MULTI              01198900
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01199000
.ZG377B               AIF   (K'&ANSAREA(1) GT 0).ZG377C  KEY            01199100
                      AIF   (K'&ANSLEN(1) LE 0).ZG377D  PARM            01199200
&ZMS                  SETC  '"ANSLEN'                                   01199300
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01199400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01199500
&ZMS                  SETC  '&ZMS '                                     01199600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01199700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01199800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01199900
                      AGO   .ZG377E                                     01200000
.*                                                                      01200100
.ZG377C               AIF   (K'&ANSLEN(1) GT 0).ZG377E  PARM            01200200
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01200300
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01200400
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01200500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01200600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01200700
.ZG377D               ANOP  ,                                           01200800
&XANSLEN              SETC  '0'         SET DEFAULT                     01200900
.ZG377E               ANOP  ,                                           01201000
.*-------------------------------------------------------------------   01201100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01201200
                      AIF   (K'&ZXANSLEN LE 0).ZG377R  NOT I/O          01201300
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG377R             01201400
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01201500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG377P               01201600
                      AIF   (K'&ZCGPR GT 2).ZG377Q                      01201700
                      AIF   ('&ZCGPR' EQ '0').ZG377Q                    01201800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01201900
                      AIF   (T'&ZCGPR NE 'N').ZG377Q  INVALID REG NAME  01202000
.ZG377P               ANOP  ,                                           01202100
                      AIF   (T'&ZCGPR NE 'N').ZG377R  NON NUMERIC       01202200
                      AIF   ('&ZCGPR' LT '2').ZG377Q                    01202300
                      AIF   ('&ZCGPR' LE '12').ZG377R                   01202400
.ZG377Q               ANOP  ,                                           01202500
&ZMS                  SETC  '"ANSLEN='                                  01202600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01202700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01202800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01202900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01203000
.ZG377R               ANOP  ,                                           01203100
.*-------------------------------------------------------------------   01203200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01203300
.ZG380                ANOP  ,                                           01203400
&ZTLC                 SETC 'SYNCEXIT'                                   01203500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG390               01203600
&XMODE                SETC  'SYNCEXIT'  SET KEYWORD                     01203700
                      AIF   (N'&MODE LE 1).ZG380A  CK NUM               01203800
&ZMS                  SETC  '"MODE='                                    01203900
&ZMS                  SETC  '&ZMS.&MODE"'                               01204000
&ZMS                  SETC  '&ZMS "MODE"'                               01204100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01204200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01204300
.ZG380A               ANOP  ,                                           01204400
.*------------------------------------------------------------------    01204500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01204600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01204700
.ZG380A0              AIF   (K'&REQECB LE 0).ZG380A1  OK                01204800
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01204900
.ZG380A1              AIF   (K'&REQTOKEN LE 0).ZG380A2  OK              01205000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01205100
.ZG380A2              AIF   (K'&ZCVAL LE 0).ZG380A3  OK                 01205200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01205300
&ZMS                  SETC  '"MODE'                                     01205400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01205500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01205600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01205700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01205800
.ZG380A3              ANOP  ,                                           01205900
.*----------------------------------------------------------------***   01206000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01206100
                      AIF   (N'&REQDATA LE 1).ZG382A  CK NUM            01206200
&ZMS                  SETC  '"REQDATA='                                 01206300
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01206400
&ZMS                  SETC  '&ZMS "REQDATA"'                            01206500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01206600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01206700
.ZG382A               ANOP  ,                                           01206800
.*-------------------------------------------------------------------   01206900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01207000
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01207100
&XREQDATA             SETC  'NO_REQDATA'                                01207200
                      AIF   (K'&REQDATA(1) LE 0).ZG382B  PARM           01207300
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01207400
                      AIF   (N'&REQDATA GT 1).ZG382B  MULTI             01207500
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01207600
.ZG382B               ANOP  ,                                           01207700
.*-------------------------------------------------------------------   01207800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01207900
                      AIF   (K'&ZXREQDATA LE 0).ZG382R  NOT I/O         01208000
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG382R                     01208100
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG382R            01208200
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01208300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG382P               01208400
                      AIF   (K'&ZCGPR GT 2).ZG382Q                      01208500
                      AIF   ('&ZCGPR' EQ '0').ZG382Q                    01208600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01208700
                      AIF   (T'&ZCGPR NE 'N').ZG382Q  INVALID REG NAME  01208800
.ZG382P               ANOP  ,                                           01208900
                      AIF   (T'&ZCGPR NE 'N').ZG382R  NON NUMERIC       01209000
                      AIF   ('&ZCGPR' LT '2').ZG382Q                    01209100
                      AIF   ('&ZCGPR' LE '12').ZG382R                   01209200
.ZG382Q               ANOP  ,                                           01209300
&ZMS                  SETC  '"REQDATA='                                 01209400
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01209500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01209600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01209700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01209800
.ZG382R               ANOP  ,                                           01209900
.*----------------------------------------------------------------***   01210000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01210100
                      AIF   (N'&ANSAREA LE 1).ZG385A  CK NUM            01210200
&ZMS                  SETC  '"ANSAREA='                                 01210300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01210400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01210500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01210600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01210700
.ZG385A               ANOP  ,                                           01210800
.*-------------------------------------------------------------------   01210900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01211000
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01211100
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01211200
                      AIF   (N'&ANSAREA GT 1).ZG385B  MULTI             01211300
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01211400
.ZG385B               AIF   (K'&ANSAREA(1) GT 0).ZG385C                 01211500
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01211600
&ZMS                  SETC  'WHEN "SYNCEXIT" IS SPECIFIED'              01211700
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01211800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01211900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01212000
.ZG385C               ANOP  ,                                           01212100
.*-------------------------------------------------------------------   01212200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01212300
                      AIF   (K'&ZXANSAREA LE 0).ZG385R  NOT I/O         01212400
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG385R            01212500
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01212600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG385P               01212700
                      AIF   (K'&ZCGPR GT 2).ZG385Q                      01212800
                      AIF   ('&ZCGPR' EQ '0').ZG385Q                    01212900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01213000
                      AIF   (T'&ZCGPR NE 'N').ZG385Q  INVALID REG NAME  01213100
.ZG385P               ANOP  ,                                           01213200
                      AIF   (T'&ZCGPR NE 'N').ZG385R  NON NUMERIC       01213300
                      AIF   ('&ZCGPR' LT '2').ZG385Q                    01213400
                      AIF   ('&ZCGPR' LE '12').ZG385R                   01213500
.ZG385Q               ANOP  ,                                           01213600
&ZMS                  SETC  '"ANSAREA='                                 01213700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01213800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01213900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01214000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01214100
.ZG385R               ANOP  ,                                           01214200
.*----------------------------------------------------------------***   01214300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01214400
                      AIF   (N'&ANSLEN LE 1).ZG387A  CK NUM             01214500
&ZMS                  SETC  '"ANSLEN='                                  01214600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01214700
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01214800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01214900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01215000
.ZG387A               ANOP  ,                                           01215100
.*-------------------------------------------------------------------   01215200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01215300
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01215400
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01215500
                      AIF   (N'&ANSLEN GT 1).ZG387B  MULTI              01215600
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01215700
.ZG387B               AIF   (K'&ANSAREA(1) GT 0).ZG387C  KEY            01215800
                      AIF   (K'&ANSLEN(1) LE 0).ZG387D  PARM            01215900
&ZMS                  SETC  '"ANSLEN'                                   01216000
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01216100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01216200
&ZMS                  SETC  '&ZMS '                                     01216300
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01216400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01216500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01216600
                      AGO   .ZG387E                                     01216700
.*                                                                      01216800
.ZG387C               AIF   (K'&ANSLEN(1) GT 0).ZG387E  PARM            01216900
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01217000
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01217100
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01217200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01217300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01217400
.ZG387D               ANOP  ,                                           01217500
&XANSLEN              SETC  '0'         SET DEFAULT                     01217600
.ZG387E               ANOP  ,                                           01217700
.*-------------------------------------------------------------------   01217800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01217900
                      AIF   (K'&ZXANSLEN LE 0).ZG387R  NOT I/O          01218000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG387R             01218100
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01218200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG387P               01218300
                      AIF   (K'&ZCGPR GT 2).ZG387Q                      01218400
                      AIF   ('&ZCGPR' EQ '0').ZG387Q                    01218500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01218600
                      AIF   (T'&ZCGPR NE 'N').ZG387Q  INVALID REG NAME  01218700
.ZG387P               ANOP  ,                                           01218800
                      AIF   (T'&ZCGPR NE 'N').ZG387R  NON NUMERIC       01218900
                      AIF   ('&ZCGPR' LT '2').ZG387Q                    01219000
                      AIF   ('&ZCGPR' LE '12').ZG387R                   01219100
.ZG387Q               ANOP  ,                                           01219200
&ZMS                  SETC  '"ANSLEN='                                  01219300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01219400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01219500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01219600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01219700
.ZG387R               ANOP  ,                                           01219800
.*-------------------------------------------------------------------   01219900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01220000
.ZG390                ANOP  ,                                           01220100
&ZTLC                 SETC 'SYNCTOKEN'                                  01220200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG400               01220300
&XMODE                SETC  'SYNCTOKEN'         SET KEYWORD             01220400
                      AIF   (N'&MODE LE 1).ZG390A  CK NUM               01220500
&ZMS                  SETC  '"MODE='                                    01220600
&ZMS                  SETC  '&ZMS.&MODE"'                               01220700
&ZMS                  SETC  '&ZMS "MODE"'                               01220800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01220900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01221000
.ZG390A               ANOP  ,                                           01221100
.*------------------------------------------------------------------    01221200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01221300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01221400
.ZG390A0              AIF   (K'&REQECB LE 0).ZG390A1  OK                01221500
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01221600
.ZG390A1              AIF   (K'&REQDATA LE 0).ZG390A2  OK               01221700
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01221800
.ZG390A2              AIF   (K'&ZCVAL LE 0).ZG390A3  OK                 01221900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01222000
&ZMS                  SETC  '"MODE'                                     01222100
&ZMS                  SETC  '&ZMS.=&MODE"'                              01222200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01222300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01222400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01222500
.ZG390A3              ANOP  ,                                           01222600
.*----------------------------------------------------------------***   01222700
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01222800
                      AIF   (N'&REQTOKEN LE 1).ZG392A  CK NUM           01222900
&ZMS                  SETC  '"REQTOKEN='                                01223000
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01223100
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01223200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01223300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01223400
.ZG392A               ANOP  ,                                           01223500
.*-------------------------------------------------------------------   01223600
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01223700
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01223800
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01223900
                      AIF   (N'&REQTOKEN GT 1).ZG392B  MULTI            01224000
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01224100
.ZG392B               AIF   (K'&REQTOKEN(1) GT 0).ZG392C                01224200
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01224300
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'             01224400
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01224500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01224600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01224700
.ZG392C               ANOP  ,                                           01224800
.*-------------------------------------------------------------------   01224900
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01225000
                      AIF   (K'&ZXREQTOKEN LE 0).ZG392R  NOT I/O        01225100
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG392R           01225200
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01225300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG392P               01225400
                      AIF   (K'&ZCGPR GT 2).ZG392Q                      01225500
                      AIF   ('&ZCGPR' EQ '0').ZG392Q                    01225600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01225700
                      AIF   (T'&ZCGPR NE 'N').ZG392Q  INVALID REG NAME  01225800
.ZG392P               ANOP  ,                                           01225900
                      AIF   (T'&ZCGPR NE 'N').ZG392R  NON NUMERIC       01226000
                      AIF   ('&ZCGPR' LT '2').ZG392Q                    01226100
                      AIF   ('&ZCGPR' LE '12').ZG392R                   01226200
.ZG392Q               ANOP  ,                                           01226300
&ZMS                  SETC  '"REQTOKEN='                                01226400
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01226500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01226600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01226700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01226800
.ZG392R               ANOP  ,                                           01226900
.*----------------------------------------------------------------***   01227000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01227100
                      AIF   (N'&ANSAREA LE 1).ZG395A  CK NUM            01227200
&ZMS                  SETC  '"ANSAREA='                                 01227300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01227400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01227500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01227600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01227700
.ZG395A               ANOP  ,                                           01227800
.*-------------------------------------------------------------------   01227900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01228000
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01228100
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01228200
                      AIF   (N'&ANSAREA GT 1).ZG395B  MULTI             01228300
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01228400
.ZG395B               AIF   (K'&ANSAREA(1) GT 0).ZG395C                 01228500
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01228600
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'             01228700
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01228800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01228900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01229000
.ZG395C               ANOP  ,                                           01229100
.*-------------------------------------------------------------------   01229200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01229300
                      AIF   (K'&ZXANSAREA LE 0).ZG395R  NOT I/O         01229400
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG395R            01229500
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01229600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG395P               01229700
                      AIF   (K'&ZCGPR GT 2).ZG395Q                      01229800
                      AIF   ('&ZCGPR' EQ '0').ZG395Q                    01229900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01230000
                      AIF   (T'&ZCGPR NE 'N').ZG395Q  INVALID REG NAME  01230100
.ZG395P               ANOP  ,                                           01230200
                      AIF   (T'&ZCGPR NE 'N').ZG395R  NON NUMERIC       01230300
                      AIF   ('&ZCGPR' LT '2').ZG395Q                    01230400
                      AIF   ('&ZCGPR' LE '12').ZG395R                   01230500
.ZG395Q               ANOP  ,                                           01230600
&ZMS                  SETC  '"ANSAREA='                                 01230700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01230800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01230900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01231000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01231100
.ZG395R               ANOP  ,                                           01231200
.*----------------------------------------------------------------***   01231300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01231400
                      AIF   (N'&ANSLEN LE 1).ZG397A  CK NUM             01231500
&ZMS                  SETC  '"ANSLEN='                                  01231600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01231700
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01231800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01231900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01232000
.ZG397A               ANOP  ,                                           01232100
.*-------------------------------------------------------------------   01232200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01232300
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01232400
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01232500
                      AIF   (N'&ANSLEN GT 1).ZG397B  MULTI              01232600
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01232700
.ZG397B               AIF   (K'&ANSAREA(1) GT 0).ZG397C  KEY            01232800
                      AIF   (K'&ANSLEN(1) LE 0).ZG397D  PARM            01232900
&ZMS                  SETC  '"ANSLEN'                                   01233000
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01233100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01233200
&ZMS                  SETC  '&ZMS '                                     01233300
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01233400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01233500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01233600
                      AGO   .ZG397E                                     01233700
.*                                                                      01233800
.ZG397C               AIF   (K'&ANSLEN(1) GT 0).ZG397E  PARM            01233900
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01234000
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01234100
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01234200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01234300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01234400
.ZG397D               ANOP  ,                                           01234500
&XANSLEN              SETC  '0'         SET DEFAULT                     01234600
.ZG397E               ANOP  ,                                           01234700
.*-------------------------------------------------------------------   01234800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01234900
                      AIF   (K'&ZXANSLEN LE 0).ZG397R  NOT I/O          01235000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG397R             01235100
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01235200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG397P               01235300
                      AIF   (K'&ZCGPR GT 2).ZG397Q                      01235400
                      AIF   ('&ZCGPR' EQ '0').ZG397Q                    01235500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01235600
                      AIF   (T'&ZCGPR NE 'N').ZG397Q  INVALID REG NAME  01235700
.ZG397P               ANOP  ,                                           01235800
                      AIF   (T'&ZCGPR NE 'N').ZG397R  NON NUMERIC       01235900
                      AIF   ('&ZCGPR' LT '2').ZG397Q                    01236000
                      AIF   ('&ZCGPR' LE '12').ZG397R                   01236100
.ZG397Q               ANOP  ,                                           01236200
&ZMS                  SETC  '"ANSLEN='                                  01236300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01236400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01236500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01236600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01236700
.ZG397R               ANOP  ,                                           01236800
.*-------------------------------------------------------------------   01236900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01237000
.ZG400                ANOP  ,                                           01237100
&ZTLC                 SETC 'ASYNCECB'                                   01237200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG410               01237300
&XMODE                SETC  'ASYNCECB'  SET KEYWORD                     01237400
                      AIF   (N'&MODE LE 1).ZG400A  CK NUM               01237500
&ZMS                  SETC  '"MODE='                                    01237600
&ZMS                  SETC  '&ZMS.&MODE"'                               01237700
&ZMS                  SETC  '&ZMS "MODE"'                               01237800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01237900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01238000
.ZG400A               ANOP  ,                                           01238100
.*------------------------------------------------------------------    01238200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01238300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01238400
.ZG400A0              AIF   (K'&REQDATA LE 0).ZG400A1  OK               01238500
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01238600
.ZG400A1              AIF   (K'&REQTOKEN LE 0).ZG400A2  OK              01238700
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01238800
.ZG400A2              AIF   (K'&ZCVAL LE 0).ZG400A3  OK                 01238900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01239000
&ZMS                  SETC  '"MODE'                                     01239100
&ZMS                  SETC  '&ZMS.=&MODE"'                              01239200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01239300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01239400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01239500
.ZG400A3              ANOP  ,                                           01239600
.*----------------------------------------------------------------***   01239700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01239800
                      AIF   (N'&REQECB LE 1).ZG402A  CK NUM             01239900
&ZMS                  SETC  '"REQECB='                                  01240000
&ZMS                  SETC  '&ZMS.&REQECB"'                             01240100
&ZMS                  SETC  '&ZMS "REQECB"'                             01240200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01240300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01240400
.ZG402A               ANOP  ,                                           01240500
.*-------------------------------------------------------------------   01240600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01240700
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01240800
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01240900
                      AIF   (N'&REQECB GT 1).ZG402B  MULTI              01241000
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01241100
.ZG402B               AIF   (K'&REQECB(1) GT 0).ZG402C                  01241200
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01241300
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'              01241400
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01241500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01241600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01241700
.ZG402C               ANOP  ,                                           01241800
.*-------------------------------------------------------------------   01241900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01242000
                      AIF   (K'&ZXREQECB LE 0).ZG402R  NOT I/O          01242100
                      AIF   ('&XREQECB'(1,1) NE '(').ZG402R             01242200
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01242300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG402P               01242400
                      AIF   (K'&ZCGPR GT 2).ZG402Q                      01242500
                      AIF   ('&ZCGPR' EQ '0').ZG402Q                    01242600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01242700
                      AIF   (T'&ZCGPR NE 'N').ZG402Q  INVALID REG NAME  01242800
.ZG402P               ANOP  ,                                           01242900
                      AIF   (T'&ZCGPR NE 'N').ZG402R  NON NUMERIC       01243000
                      AIF   ('&ZCGPR' LT '2').ZG402Q                    01243100
                      AIF   ('&ZCGPR' LE '12').ZG402R                   01243200
.ZG402Q               ANOP  ,                                           01243300
&ZMS                  SETC  '"REQECB='                                  01243400
&ZMS                  SETC  '&ZMS.&REQECB"'                             01243500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01243600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01243700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01243800
.ZG402R               ANOP  ,                                           01243900
.*----------------------------------------------------------------***   01244000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01244100
                      AIF   (N'&ANSAREA LE 1).ZG405A  CK NUM            01244200
&ZMS                  SETC  '"ANSAREA='                                 01244300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01244400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01244500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01244600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01244700
.ZG405A               ANOP  ,                                           01244800
.*-------------------------------------------------------------------   01244900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01245000
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01245100
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01245200
                      AIF   (N'&ANSAREA GT 1).ZG405B  MULTI             01245300
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01245400
.ZG405B               AIF   (K'&ANSAREA(1) GT 0).ZG405C                 01245500
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01245600
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'              01245700
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01245800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01245900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01246000
.ZG405C               ANOP  ,                                           01246100
.*-------------------------------------------------------------------   01246200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01246300
                      AIF   (K'&ZXANSAREA LE 0).ZG405R  NOT I/O         01246400
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG405R            01246500
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01246600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG405P               01246700
                      AIF   (K'&ZCGPR GT 2).ZG405Q                      01246800
                      AIF   ('&ZCGPR' EQ '0').ZG405Q                    01246900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01247000
                      AIF   (T'&ZCGPR NE 'N').ZG405Q  INVALID REG NAME  01247100
.ZG405P               ANOP  ,                                           01247200
                      AIF   (T'&ZCGPR NE 'N').ZG405R  NON NUMERIC       01247300
                      AIF   ('&ZCGPR' LT '2').ZG405Q                    01247400
                      AIF   ('&ZCGPR' LE '12').ZG405R                   01247500
.ZG405Q               ANOP  ,                                           01247600
&ZMS                  SETC  '"ANSAREA='                                 01247700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01247800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01247900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01248000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01248100
.ZG405R               ANOP  ,                                           01248200
.*----------------------------------------------------------------***   01248300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01248400
                      AIF   (N'&ANSLEN LE 1).ZG407A  CK NUM             01248500
&ZMS                  SETC  '"ANSLEN='                                  01248600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01248700
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01248800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01248900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01249000
.ZG407A               ANOP  ,                                           01249100
.*-------------------------------------------------------------------   01249200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01249300
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01249400
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01249500
                      AIF   (N'&ANSLEN GT 1).ZG407B  MULTI              01249600
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01249700
.ZG407B               AIF   (K'&ANSAREA(1) GT 0).ZG407C  KEY            01249800
                      AIF   (K'&ANSLEN(1) LE 0).ZG407D  PARM            01249900
&ZMS                  SETC  '"ANSLEN'                                   01250000
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01250100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01250200
&ZMS                  SETC  '&ZMS '                                     01250300
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01250400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01250500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01250600
                      AGO   .ZG407E                                     01250700
.*                                                                      01250800
.ZG407C               AIF   (K'&ANSLEN(1) GT 0).ZG407E  PARM            01250900
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01251000
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01251100
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01251200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01251300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01251400
.ZG407D               ANOP  ,                                           01251500
&XANSLEN              SETC  '0'         SET DEFAULT                     01251600
.ZG407E               ANOP  ,                                           01251700
.*-------------------------------------------------------------------   01251800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01251900
                      AIF   (K'&ZXANSLEN LE 0).ZG407R  NOT I/O          01252000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG407R             01252100
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01252200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG407P               01252300
                      AIF   (K'&ZCGPR GT 2).ZG407Q                      01252400
                      AIF   ('&ZCGPR' EQ '0').ZG407Q                    01252500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01252600
                      AIF   (T'&ZCGPR NE 'N').ZG407Q  INVALID REG NAME  01252700
.ZG407P               ANOP  ,                                           01252800
                      AIF   (T'&ZCGPR NE 'N').ZG407R  NON NUMERIC       01252900
                      AIF   ('&ZCGPR' LT '2').ZG407Q                    01253000
                      AIF   ('&ZCGPR' LE '12').ZG407R                   01253100
.ZG407Q               ANOP  ,                                           01253200
&ZMS                  SETC  '"ANSLEN='                                  01253300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01253400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01253500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01253600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01253700
.ZG407R               ANOP  ,                                           01253800
.*-------------------------------------------------------------------   01253900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01254000
.ZG410                ANOP  ,                                           01254100
&ZTLC                 SETC 'ASYNCEXIT'                                  01254200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG420               01254300
&XMODE                SETC  'ASYNCEXIT'         SET KEYWORD             01254400
                      AIF   (N'&MODE LE 1).ZG410A  CK NUM               01254500
&ZMS                  SETC  '"MODE='                                    01254600
&ZMS                  SETC  '&ZMS.&MODE"'                               01254700
&ZMS                  SETC  '&ZMS "MODE"'                               01254800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01254900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01255000
.ZG410A               ANOP  ,                                           01255100
.*------------------------------------------------------------------    01255200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01255300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01255400
.ZG410A0              AIF   (K'&REQECB LE 0).ZG410A1  OK                01255500
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01255600
.ZG410A1              AIF   (K'&REQTOKEN LE 0).ZG410A2  OK              01255700
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01255800
.ZG410A2              AIF   (K'&ZCVAL LE 0).ZG410A3  OK                 01255900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01256000
&ZMS                  SETC  '"MODE'                                     01256100
&ZMS                  SETC  '&ZMS.=&MODE"'                              01256200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01256300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01256400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01256500
.ZG410A3              ANOP  ,                                           01256600
.*----------------------------------------------------------------***   01256700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01256800
                      AIF   (N'&REQDATA LE 1).ZG412A  CK NUM            01256900
&ZMS                  SETC  '"REQDATA='                                 01257000
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01257100
&ZMS                  SETC  '&ZMS "REQDATA"'                            01257200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01257300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01257400
.ZG412A               ANOP  ,                                           01257500
.*-------------------------------------------------------------------   01257600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01257700
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01257800
&XREQDATA             SETC  'NO_REQDATA'                                01257900
                      AIF   (K'&REQDATA(1) LE 0).ZG412B  PARM           01258000
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01258100
                      AIF   (N'&REQDATA GT 1).ZG412B  MULTI             01258200
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01258300
.ZG412B               ANOP  ,                                           01258400
.*-------------------------------------------------------------------   01258500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01258600
                      AIF   (K'&ZXREQDATA LE 0).ZG412R  NOT I/O         01258700
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG412R                     01258800
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG412R            01258900
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01259000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG412P               01259100
                      AIF   (K'&ZCGPR GT 2).ZG412Q                      01259200
                      AIF   ('&ZCGPR' EQ '0').ZG412Q                    01259300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01259400
                      AIF   (T'&ZCGPR NE 'N').ZG412Q  INVALID REG NAME  01259500
.ZG412P               ANOP  ,                                           01259600
                      AIF   (T'&ZCGPR NE 'N').ZG412R  NON NUMERIC       01259700
                      AIF   ('&ZCGPR' LT '2').ZG412Q                    01259800
                      AIF   ('&ZCGPR' LE '12').ZG412R                   01259900
.ZG412Q               ANOP  ,                                           01260000
&ZMS                  SETC  '"REQDATA='                                 01260100
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01260200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01260300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01260400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01260500
.ZG412R               ANOP  ,                                           01260600
.*----------------------------------------------------------------***   01260700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01260800
                      AIF   (N'&ANSAREA LE 1).ZG415A  CK NUM            01260900
&ZMS                  SETC  '"ANSAREA='                                 01261000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01261100
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01261200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01261300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01261400
.ZG415A               ANOP  ,                                           01261500
.*-------------------------------------------------------------------   01261600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01261700
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01261800
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01261900
                      AIF   (N'&ANSAREA GT 1).ZG415B  MULTI             01262000
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01262100
.ZG415B               AIF   (K'&ANSAREA(1) GT 0).ZG415C                 01262200
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01262300
&ZMS                  SETC  'WHEN "ASYNCEXIT" IS SPECIFIED'             01262400
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01262500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01262600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01262700
.ZG415C               ANOP  ,                                           01262800
.*-------------------------------------------------------------------   01262900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01263000
                      AIF   (K'&ZXANSAREA LE 0).ZG415R  NOT I/O         01263100
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG415R            01263200
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01263300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG415P               01263400
                      AIF   (K'&ZCGPR GT 2).ZG415Q                      01263500
                      AIF   ('&ZCGPR' EQ '0').ZG415Q                    01263600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01263700
                      AIF   (T'&ZCGPR NE 'N').ZG415Q  INVALID REG NAME  01263800
.ZG415P               ANOP  ,                                           01263900
                      AIF   (T'&ZCGPR NE 'N').ZG415R  NON NUMERIC       01264000
                      AIF   ('&ZCGPR' LT '2').ZG415Q                    01264100
                      AIF   ('&ZCGPR' LE '12').ZG415R                   01264200
.ZG415Q               ANOP  ,                                           01264300
&ZMS                  SETC  '"ANSAREA='                                 01264400
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01264500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01264600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01264700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01264800
.ZG415R               ANOP  ,                                           01264900
.*----------------------------------------------------------------***   01265000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01265100
                      AIF   (N'&ANSLEN LE 1).ZG417A  CK NUM             01265200
&ZMS                  SETC  '"ANSLEN='                                  01265300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01265400
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01265500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01265600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01265700
.ZG417A               ANOP  ,                                           01265800
.*-------------------------------------------------------------------   01265900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01266000
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01266100
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01266200
                      AIF   (N'&ANSLEN GT 1).ZG417B  MULTI              01266300
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01266400
.ZG417B               AIF   (K'&ANSAREA(1) GT 0).ZG417C  KEY            01266500
                      AIF   (K'&ANSLEN(1) LE 0).ZG417D  PARM            01266600
&ZMS                  SETC  '"ANSLEN'                                   01266700
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01266800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01266900
&ZMS                  SETC  '&ZMS '                                     01267000
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01267100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01267200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01267300
                      AGO   .ZG417E                                     01267400
.*                                                                      01267500
.ZG417C               AIF   (K'&ANSLEN(1) GT 0).ZG417E  PARM            01267600
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01267700
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01267800
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01267900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01268000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01268100
.ZG417D               ANOP  ,                                           01268200
&XANSLEN              SETC  '0'         SET DEFAULT                     01268300
.ZG417E               ANOP  ,                                           01268400
.*-------------------------------------------------------------------   01268500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01268600
                      AIF   (K'&ZXANSLEN LE 0).ZG417R  NOT I/O          01268700
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG417R             01268800
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01268900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG417P               01269000
                      AIF   (K'&ZCGPR GT 2).ZG417Q                      01269100
                      AIF   ('&ZCGPR' EQ '0').ZG417Q                    01269200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01269300
                      AIF   (T'&ZCGPR NE 'N').ZG417Q  INVALID REG NAME  01269400
.ZG417P               ANOP  ,                                           01269500
                      AIF   (T'&ZCGPR NE 'N').ZG417R  NON NUMERIC       01269600
                      AIF   ('&ZCGPR' LT '2').ZG417Q                    01269700
                      AIF   ('&ZCGPR' LE '12').ZG417R                   01269800
.ZG417Q               ANOP  ,                                           01269900
&ZMS                  SETC  '"ANSLEN='                                  01270000
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01270100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01270200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01270300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01270400
.ZG417R               ANOP  ,                                           01270500
.*-------------------------------------------------------------------   01270600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01270700
.ZG420                ANOP  ,                                           01270800
&ZTLC                 SETC 'ASYNCTOKEN'                                 01270900
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG430               01271000
&XMODE                SETC  'ASYNCTOKEN'        SET KEYWORD             01271100
                      AIF   (N'&MODE LE 1).ZG420A  CK NUM               01271200
&ZMS                  SETC  '"MODE='                                    01271300
&ZMS                  SETC  '&ZMS.&MODE"'                               01271400
&ZMS                  SETC  '&ZMS "MODE"'                               01271500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01271600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01271700
.ZG420A               ANOP  ,                                           01271800
.*------------------------------------------------------------------    01271900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01272000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01272100
.ZG420A0              AIF   (K'&REQECB LE 0).ZG420A1  OK                01272200
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01272300
.ZG420A1              AIF   (K'&REQDATA LE 0).ZG420A2  OK               01272400
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01272500
.ZG420A2              AIF   (K'&ZCVAL LE 0).ZG420A3  OK                 01272600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01272700
&ZMS                  SETC  '"MODE'                                     01272800
&ZMS                  SETC  '&ZMS.=&MODE"'                              01272900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01273000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01273100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01273200
.ZG420A3              ANOP  ,                                           01273300
.*----------------------------------------------------------------***   01273400
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01273500
                      AIF   (N'&REQTOKEN LE 1).ZG422A  CK NUM           01273600
&ZMS                  SETC  '"REQTOKEN='                                01273700
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01273800
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01273900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01274000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01274100
.ZG422A               ANOP  ,                                           01274200
.*-------------------------------------------------------------------   01274300
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01274400
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01274500
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01274600
                      AIF   (N'&REQTOKEN GT 1).ZG422B  MULTI            01274700
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01274800
.ZG422B               AIF   (K'&REQTOKEN(1) GT 0).ZG422C                01274900
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01275000
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'            01275100
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01275200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01275300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01275400
.ZG422C               ANOP  ,                                           01275500
.*-------------------------------------------------------------------   01275600
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01275700
                      AIF   (K'&ZXREQTOKEN LE 0).ZG422R  NOT I/O        01275800
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG422R           01275900
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01276000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG422P               01276100
                      AIF   (K'&ZCGPR GT 2).ZG422Q                      01276200
                      AIF   ('&ZCGPR' EQ '0').ZG422Q                    01276300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01276400
                      AIF   (T'&ZCGPR NE 'N').ZG422Q  INVALID REG NAME  01276500
.ZG422P               ANOP  ,                                           01276600
                      AIF   (T'&ZCGPR NE 'N').ZG422R  NON NUMERIC       01276700
                      AIF   ('&ZCGPR' LT '2').ZG422Q                    01276800
                      AIF   ('&ZCGPR' LE '12').ZG422R                   01276900
.ZG422Q               ANOP  ,                                           01277000
&ZMS                  SETC  '"REQTOKEN='                                01277100
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01277200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01277300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01277400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01277500
.ZG422R               ANOP  ,                                           01277600
.*----------------------------------------------------------------***   01277700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01277800
                      AIF   (N'&ANSAREA LE 1).ZG425A  CK NUM            01277900
&ZMS                  SETC  '"ANSAREA='                                 01278000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01278100
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01278200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01278300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01278400
.ZG425A               ANOP  ,                                           01278500
.*-------------------------------------------------------------------   01278600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01278700
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01278800
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01278900
                      AIF   (N'&ANSAREA GT 1).ZG425B  MULTI             01279000
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01279100
.ZG425B               AIF   (K'&ANSAREA(1) GT 0).ZG425C                 01279200
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01279300
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'            01279400
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01279500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01279600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01279700
.ZG425C               ANOP  ,                                           01279800
.*-------------------------------------------------------------------   01279900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01280000
                      AIF   (K'&ZXANSAREA LE 0).ZG425R  NOT I/O         01280100
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG425R            01280200
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01280300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG425P               01280400
                      AIF   (K'&ZCGPR GT 2).ZG425Q                      01280500
                      AIF   ('&ZCGPR' EQ '0').ZG425Q                    01280600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01280700
                      AIF   (T'&ZCGPR NE 'N').ZG425Q  INVALID REG NAME  01280800
.ZG425P               ANOP  ,                                           01280900
                      AIF   (T'&ZCGPR NE 'N').ZG425R  NON NUMERIC       01281000
                      AIF   ('&ZCGPR' LT '2').ZG425Q                    01281100
                      AIF   ('&ZCGPR' LE '12').ZG425R                   01281200
.ZG425Q               ANOP  ,                                           01281300
&ZMS                  SETC  '"ANSAREA='                                 01281400
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01281500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01281600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01281700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01281800
.ZG425R               ANOP  ,                                           01281900
.*----------------------------------------------------------------***   01282000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01282100
                      AIF   (N'&ANSLEN LE 1).ZG427A  CK NUM             01282200
&ZMS                  SETC  '"ANSLEN='                                  01282300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01282400
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01282500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01282600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01282700
.ZG427A               ANOP  ,                                           01282800
.*-------------------------------------------------------------------   01282900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01283000
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01283100
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01283200
                      AIF   (N'&ANSLEN GT 1).ZG427B  MULTI              01283300
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01283400
.ZG427B               AIF   (K'&ANSAREA(1) GT 0).ZG427C  KEY            01283500
                      AIF   (K'&ANSLEN(1) LE 0).ZG427D  PARM            01283600
&ZMS                  SETC  '"ANSLEN'                                   01283700
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01283800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01283900
&ZMS                  SETC  '&ZMS '                                     01284000
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01284100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01284200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01284300
                      AGO   .ZG427E                                     01284400
.*                                                                      01284500
.ZG427C               AIF   (K'&ANSLEN(1) GT 0).ZG427E  PARM            01284600
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01284700
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01284800
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01284900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01285000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01285100
.ZG427D               ANOP  ,                                           01285200
&XANSLEN              SETC  '0'         SET DEFAULT                     01285300
.ZG427E               ANOP  ,                                           01285400
.*-------------------------------------------------------------------   01285500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01285600
                      AIF   (K'&ZXANSLEN LE 0).ZG427R  NOT I/O          01285700
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG427R             01285800
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01285900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG427P               01286000
                      AIF   (K'&ZCGPR GT 2).ZG427Q                      01286100
                      AIF   ('&ZCGPR' EQ '0').ZG427Q                    01286200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01286300
                      AIF   (T'&ZCGPR NE 'N').ZG427Q  INVALID REG NAME  01286400
.ZG427P               ANOP  ,                                           01286500
                      AIF   (T'&ZCGPR NE 'N').ZG427R  NON NUMERIC       01286600
                      AIF   ('&ZCGPR' LT '2').ZG427Q                    01286700
                      AIF   ('&ZCGPR' LE '12').ZG427R                   01286800
.ZG427Q               ANOP  ,                                           01286900
&ZMS                  SETC  '"ANSLEN='                                  01287000
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01287100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01287200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01287300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01287400
.ZG427R               ANOP  ,                                           01287500
.*-------------------------------------------------------------------   01287600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01287700
.ZG430                ANOP  ,                                           01287800
&ZTLC                 SETC 'ASYNCNORESPONSE'                            01287900
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG431               01288000
&XMODE                SETC  'ASYNCNORESPONSE'   SET KEYWORD             01288100
                      AIF   (N'&MODE LE 1).ZG430A  CK NUM               01288200
&ZMS                  SETC  '"MODE='                                    01288300
&ZMS                  SETC  '&ZMS.&MODE"'                               01288400
&ZMS                  SETC  '&ZMS "MODE"'                               01288500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01288600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01288700
.ZG430A               ANOP  ,                                           01288800
.*------------------------------------------------------------------    01288900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01289000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01289100
.ZG430A0              AIF   (K'&ANSAREA LE 0).ZG430A1  OK               01289200
&ZCVAL                SETC '&ZCVAL ANSAREA'     INCORRECT KEY USED      01289300
.ZG430A1              AIF   (K'&ANSLEN LE 0).ZG430A2  OK                01289400
&ZCVAL                SETC '&ZCVAL ANSLEN'      INCORRECT KEY USED      01289500
.ZG430A2              AIF   (K'&REQECB LE 0).ZG430A3  OK                01289600
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01289700
.ZG430A3              AIF   (K'&REQDATA LE 0).ZG430A4  OK               01289800
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01289900
.ZG430A4              AIF   (K'&REQTOKEN LE 0).ZG430A5  OK              01290000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01290100
.ZG430A5              AIF   (K'&ZCVAL LE 0).ZG430A6  OK                 01290200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01290300
&ZMS                  SETC  '"MODE'                                     01290400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01290500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01290600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01290700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01290800
.ZG430A6              ANOP  ,                                           01290900
.*------------------------------------------------------------------    01291000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01291100
.ZG431                ANOP  ,                                           01291200
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   01291300
                      AIF   (K'&XMODE GT 0).ZG431E  VALID ARG           01291400
                      AIF   (T'&MODE EQ 'O').ZG431D  OMITTED            01291500
&ZASYSLNDX            SETA  0                                           01291600
.ZG431A               ANOP  ,           POSITIONAL MACRO KEY            01291700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01291800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG431C           01291900
&ZTLC                 SETC 'MODE'                                       01292000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG431A  01292100
.ZG431B               ANOP  ,                                           01292200
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01292300
&ZMS                  SETC  'THE "MODE" KEY'                            01292400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01292500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01292600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01292700
                      AGO   .ZG431E                                     01292800
.ZG431C               ANOP  ,                                           01292900
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01293000
&ZMS                  SETC  '"MODE='                                    01293100
&ZMS                  SETC  '&ZMS.&MODE"'                               01293200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01293300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01293400
&ZMS                  SETC  '&ZMS "SYNCSUSPEND",'                       01293500
&ZMS                  SETC  '&ZMS "SYNCECB",'                           01293600
&ZMS                  SETC  '&ZMS "SYNCEXIT",'                          01293700
&ZMS                  SETC  '&ZMS "SYNCTOKEN",'                         01293800
&ZMS                  SETC  '&ZMS "ASYNCECB",'                          01293900
&ZMS                  SETC  '&ZMS "ASYNCEXIT",'                         01294000
&ZMS                  SETC  '&ZMS "ASYNCTOKEN",'                        01294100
&ZMS                  SETC  '&ZMS OR "ASYNCNORESPONSE".'                01294200
                      MNOTE 8,' &ZMS '                                  01294300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01294400
                      AGO   .ZG431E                                     01294500
.ZG431D               ANOP  ,                                           01294600
&XMODE                SETC  'SYNCSUSPEND'       SET DEFAULT KEYWORD     01294700
.ZG431E               ANOP  ,                                           01294800
.*----------------------------------------------------------------***   01294900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01295000
                      AIF   (N'&RETCODE LE 1).ZG433A  CK NUM            01295100
&ZMS                  SETC  '"RETCODE='                                 01295200
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01295300
&ZMS                  SETC  '&ZMS "RETCODE"'                            01295400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01295500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01295600
.ZG433A               ANOP  ,                                           01295700
.*-------------------------------------------------------------------   01295800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01295900
                      AIF   (K'&RETCODE(1) LE 0).ZG433C  NO PARM        01296000
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      01296100
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           01296200
                      AIF   (N'&RETCODE GT 1).ZG433C                    01296300
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   01296400
.ZG433C               ANOP  ,                                           01296500
.*-------------------------------------------------------------------   01296600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01296700
                      AIF   (K'&ZXRETCODE LE 0).ZG433R  NOT I/O         01296800
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG433R            01296900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01297000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG433P               01297100
                      AIF   (K'&ZCGPR GT 2).ZG433Q                      01297200
                      AIF   ('&ZCGPR' EQ '0').ZG433Q                    01297300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01297400
                      AIF   (T'&ZCGPR NE 'N').ZG433Q  INVALID REG NAME  01297500
.ZG433P               ANOP  ,                                           01297600
                      AIF   (T'&ZCGPR NE 'N').ZG433R  NON NUMERIC       01297700
                      AIF   ('&ZCGPR' EQ '15').ZG433R                   01297800
                      AIF   ('&ZCGPR' LT '2').ZG433Q                    01297900
                      AIF   ('&ZCGPR' LE '12').ZG433R                   01298000
.ZG433Q               ANOP  ,                                           01298100
&ZMS                  SETC  '"RETCODE='                                 01298200
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01298300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01298400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'    01298500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01298600
.ZG433R               ANOP  ,                                           01298700
.*----------------------------------------------------------------***   01298800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01298900
                      AIF   (N'&RSNCODE LE 1).ZG436A  CK NUM            01299000
&ZMS                  SETC  '"RSNCODE='                                 01299100
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01299200
&ZMS                  SETC  '&ZMS "RSNCODE"'                            01299300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01299400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01299500
.ZG436A               ANOP  ,                                           01299600
.*-------------------------------------------------------------------   01299700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01299800
                      AIF   (K'&RSNCODE(1) LE 0).ZG436C  NO PARM        01299900
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      01300000
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           01300100
                      AIF   (N'&RSNCODE GT 1).ZG436C                    01300200
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   01300300
.ZG436C               ANOP  ,                                           01300400
.*-------------------------------------------------------------------   01300500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01300600
                      AIF   (K'&ZXRSNCODE LE 0).ZG436R  NOT I/O         01300700
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG436R            01300800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01300900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG436P               01301000
                      AIF   (K'&ZCGPR GT 2).ZG436Q                      01301100
                      AIF   ('&ZCGPR' EQ '0').ZG436R                    01301200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01301300
                      AIF   (T'&ZCGPR NE 'N').ZG436Q  INVALID REG NAME  01301400
.ZG436P               ANOP  ,                                           01301500
                      AIF   (T'&ZCGPR NE 'N').ZG436R  NON NUMERIC       01301600
                      AIF   ('&ZCGPR' EQ '0').ZG436R                    01301700
                      AIF   ('&ZCGPR' LT '2').ZG436Q                    01301800
                      AIF   ('&ZCGPR' LE '12').ZG436R                   01301900
.ZG436Q               ANOP  ,                                           01302000
&ZMS                  SETC  '"RSNCODE='                                 01302100
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01302200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01302300
                      MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'     01302400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01302500
.ZG436R               ANOP  ,                                           01302600
.******************************************************************     01302700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01302800
.******************************************************************     01302900
                      ACTR  10000                                       01303000
.*----------------------------------------------------------------***   01303100
.***AH.P02 EXTRA POSITIONALS                                            01303200
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        01303300
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        01303400
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    01303500
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     01303600
.ZGLISTX1             ANOP  ,                                           01303700
&ZCVAL                SETC  ''          ERROR FIELD                     01303800
&ZAWRK                SETA  0           POSITIONAL NUMBER               01303900
.ZGLIST2              ANOP  ,                                           01304000
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 01304100
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        01304200
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             01304300
                      AGO   .ZGLIST2                                    01304400
.*                                                                      01304500
.ZGLIST3              ANOP  ,                                           01304600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          01304700
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'                   01304800
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             01304900
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      01305000
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              01305100
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      01305200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01305300
.ZGLISTX              ANOP  ,                                           01305400
&ZASYSLNDX            SETA  0                                           01305500
.*-------------------------------------------------------------------   01305600
.***AG.MF04 MF=(SLE)                                                    01305700
.ZGMFX                ANOP  ,           END OF FULL SYNTAX CHECK        01305800
.*******************************************************************    01305900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01306000
.*******************************************************************    01306100
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        01306200
.*******************************************************************    01306300
.***AE.01  START OF IXLLSTC MACRO CODE                                  01306400
.*******************************************************************    01306500
                      LCLC  &M0M0001                 NAME               01306600
&M0M0001              SETC  '&XLABEL'                SET NAME           01306700
                      AIF   (K'&XLABEL NE 0).XLAB2                      01306800
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       01306900
.*                                                                      01307000
.XLAB2                ANOP  ,                                           01307100
                      AIF   ('&XMF' EQ 'L').XLAB3                       01307200
&M0M0001 DS    0H                             IXLLSTC-5                 01307300
.XLAB3                ANOP  ,                                           01307400
.*******************************************************************    01307500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01307600
.*******************************************************************    01307700
              PUSH  PRINT                                               01307800
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  01307900
                      PRINT OFF         ++ PR01                         01308000
                      AGO   .ZPRNTXX                                    01308100
.ZPRINTX              PRINT ON                                          01308200
.ZPRNTXX              ANOP  ,                                           01308300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01308400
.**------------------------------------------------------------------** 01308500
.**  Start of user macasm code                                       ** 01308600
.**------------------------------------------------------------------** 01308700
.**------------------------------------------------------------------** 01308800
.**  Remove defaults for DriveExit                                   ** 01308900
.**------------------------------------------------------------------** 01309000
.*                                                                      01309100
.*      For Assembler,                                                  01309200
.*      AMG will have set DRIVEEXIT=YES by default for those requests   01309300
.*      where it can be specified (MONITOR_EVENTQ, MONITOR_LIST, and    01309400
.*      MONITOR_KEYRANGE) when ACTION=STOP was not specified.           01309500
.*      DRIVEEXIT is not syntactically allowed                          01309600
.*      for REQUEST=MONITOR_SUBLIST, but we want to set                 01309700
.*      maca.DriveExit.Yes for this case when ACTION=STOP is            01309800
.*      not specified.                                                  01309900
.*      The following code accomplishes this.                           01310000
.*                                                                      01310100
         AIF   ('&XREQUEST' NE 'MONITOR_SUBLIST' OR                    *01310200
                '&XACTION' EQ 'STOP').SKIPDREXITSETDEF                  01310300
&XDRIVEEXIT     SETC 'YES'                                              01310400
&ZXDRIVEEXIT    SETC 'INPUT'                                            01310500
.SKIPDREXITSETDEF ANOP ,                                                01310600
.*                                                                      01310700
.**  Start of code to validity check parameters                      ** 01310800
.**                                                                  ** 01310900
.**  This code is needed in addition to the checks which AMG         ** 01311000
.**  produces.                                                       ** 01311100
.**                                                                  ** 01311200
.**  Validity checking for mutually exclusive keys, required keys,   ** 01311300
.**  and dependent keys is performed for the standard and execute    ** 01311400
.**  forms.                                                          ** 01311500
.*                                                                      01311600
.**                                                                  ** 01311700
.**------------------------------------------------------------------** 01311800
.* Skip all validity checking for MF=L                                  01311900
         AIF   ('&MF(1)' EQ 'L').ENDPARMVALIDATION                      01312000
.**------------------------------------------------------------------** 01312100
.**  Validity checking for Mode                                      ** 01312200
.**                                                                  ** 01312300
.**    Mode(AsyncNoResponse) is mutually exclusive with              ** 01312400
.**    Request(Read_LControls), Request(Deq_EventQ),                 ** 01312500
.**    Request(Lock), Request(Monitor_List) Action(Start),           ** 01312600
.**    Request(Monitor_KeyRange) Action(Start)                  @L2A ** 01312700
.**                                                                  ** 01312800
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ASYNCNORESPONSENOTSPEC   01312900
.*                                                                      01313000
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01313100
                '&XREQUEST' NE 'DEQ_EVENTQ' AND                        *01313200
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01313300
                '&XREQUEST' NE 'LOCK').MODEERROR001                     01313400
         MNOTE 8,'IXLLSTC ---> MODE=&XMODE is mutually exclusive with R*01313500
               EQUEST=&XREQUEST'                                        01313600
&ZMACRET SETA  8                                                        01313700
.MODEERROR001 ANOP ,                                                    01313800
.*                                                                      01313900
         AIF   ('&XREQUEST' NE 'MONITOR_LIST' OR                       *01314000
                '&XACTION'  NE 'START').MODEERROR002                    01314100
         MNOTE 8,'IXLLSTC ---> MODE=&XMODE is mutually exclusive with R*01314200
               EQUEST=MONITOR_LIST when ACTION=START is specified'      01314300
&ZMACRET SETA  8                                                        01314400
.MODEERROR002 ANOP ,                                                    01314500
.*                                                                      01314600
         AIF   ('&XREQUEST' NE 'MONITOR_KEYRANGE' OR                   *01314700
                '&XACTION'  NE 'START').MODEERROR003                    01314800
         MNOTE 8,'IXLLSTC ---> MODE=&XMODE is mutually exclusive with R*01314900
               EQUEST=MONITOR_KEYRANGE when ACTION=START is specified'  01315000
&ZMACRET SETA  8                                                        01315100
.MODEERROR003 ANOP ,                                                    01315200
.ASYNCNORESPONSENOTSPEC ANOP ,                                          01315300
.**                                                                  ** 01315400
.**  End of validity checking for Mode                               ** 01315500
.**------------------------------------------------------------------** 01315600
.*                                                                      01315700
.**------------------------------------------------------------------** 01315800
.**                                                                  ** 01315900
.**  Validity checking for DriveExit and Notification                ** 01316000
.**                                                                  ** 01316100
.**    DriveExit(NO) and Notification(Every) for                     ** 01316200
.**    Request(Monitor_List) and Request(Monitor_KeyRange) are       ** 01316300
.**    mutually exclusive.                                           ** 01316400
.**                                                                  ** 01316500
.**    Rationale:  Notification(EVERY) causes the CF to generate     ** 01316600
.**    list notification commands to update a list notification      ** 01316700
.**    vector entry (and possibly the summary bit of a connector)    ** 01316800
.**    for every list entry added to a list or key-range while the   ** 01316900
.**    not-empty threshold is exceeded.                              ** 01317000
.**    If DriveExit(NO) is specified, the list notification commands ** 01317100
.**    are useless and a waste of processing overhead since the      ** 01317200
.**    command would in essence update the list notification vector  ** 01317300
.**    entry with a non-empty indication over and over again without ** 01317400
.**    updating the summary bit and not causing the list transition  ** 01317500
.**    exit to get scheduled. For this reason we disallow the        ** 01317600
.**    combination of DriveExit(NO) and Notification(EVERY) for      ** 01317700
.**    Monitor_List and Monitor_KeyRange requests.                   ** 01317800
.**                                                                  ** 01317900
.**    Specifying DriveExit(YES) and Notification(EVERY) is the      ** 01318000
.**    required specification to get "aggressive notifications" for  ** 01318100
.**    lists and key-ranges.                                    @L6A ** 01318200
.**                                                                  ** 01318300
         AIF   (('&XDRIVEEXIT' EQ 'NO' AND                             *01318400
                 '&XNOTIFICATION' EQ 'EVERY') AND                      *01318500
                ('&XREQUEST' EQ 'MONITOR_KEYRANGE' OR                  *01318600
                 '&XREQUEST' EQ 'MONITOR_LIST')).DRIVEERR1         @L6A 01318700
         AGO .ENDPARMVALIDATION                                    @L6A 01318800
.DRIVEERR1 ANOP ,                                                  @L6A 01318900
.*                                                                      01319000
         MNOTE 8,'IXLLSTC ---> DRIVEEXIT=&XDRIVEEXIT is mutually exclus*01319100
               ive with NOTIFICATION=EVERY for REQUEST=&XREQUEST.' @L6A 01319200
&ZMACRET SETA  8                                                   @L6A 01319300
.**                                                                  ** 01319400
.**  End of validity checking for DriveExit and Notification         ** 01319500
.**------------------------------------------------------------------** 01319600
.*                                                                      01319700
.ENDPARMVALIDATION ANOP ,                                               01319800
.*                                                                      01319900
.**------------------------------------------------------------------** 01320000
.**  End of code to validity check parameters                        ** 01320100
.**------------------------------------------------------------------** 01320200
.*                                                                      01320300
.**------------------------------------------------------------------** 01320400
.**  Determine the parameter list version                        @P1A** 01320500
.**                                                                  ** 01320600
.**  Note that AMG has already set &XPLISTVER to the highest value   ** 01320700
.**  of either the user specified value, or the value specified by   ** 01320800
.**  macplver on any keys that were specified. The following code    ** 01320900
.**  will set &XPLISTVER to a higher value if needed depending on    ** 01321000
.**  an analysis of special case keys that AMG does not handle.      ** 01321100
.**                                                                  ** 01321200
.**  Note that each of the new macros, IXLLSTC, IXLLSTE, and IXLLSTM,** 01321300
.**  provide a subset of the function originally provided for in     ** 01321400
.**  IXLLIST. As such, the parmlist version is set to the same       ** 01321500
.**  parmlist version that would have resulted had the request       ** 01321600
.**  been coded with IXLLIST. This is done to ensure that the        ** 01321700
.**  new macros can directly replace any of the IXLLIST invocations  ** 01321800
.**  compatibly. Since each macro provides a subset of IXLLIST       ** 01321900
.**  function, the possible parmlist version numbers in each macro   ** 01322000
.**  are not necessarily contiguous. Furthermore, the new macros     ** 01322100
.**  will have parmlist version numbers higher than those of         ** 01322200
.**  IXLLIST since the new macros add new function. In all cases,    ** 01322300
.**  the purpose of the parmlist version number is to ensure that    ** 01322400
.**  any new function is rejected on a downlevel system that does    ** 01322500
.**  not yet recognize the new function.                             ** 01322600
.**                                                                  ** 01322700
.**------------------------------------------------------------------** 01322800
.*                                                                      01322900
         LCLA  &LSTCPLVERS                                         @L2C 01323000
.*                                                                      01323100
.* Initialize LstcPlvers to whatever AMG thinks PLISTVER should be @L2A 01323200
.*                                                                      01323300
&LSTCPLVERS SETA  &XPLISTVER                                       @L2C 01323400
.*                                                                      01323500
.* If LstcPlVers already >= 2, no need to look at version 2 requests    01323600
         AIF  (&LSTCPLVERS GE 2).NOTPLVER2                         @L2A 01323700
.*                                                                      01323800
.* Determine whether REQUEST() requires PLISTVER of 2              @L2A 01323900
.*                                                                      01324000
         AIF  ('&XREQUEST'   EQ  'READ_EMCONTROLS'    OR               *01324100
               '&XREQUEST'   EQ  'READ_EQCONTROLS'    OR               *01324200
               '&XREQUEST'   EQ  'MONITOR_SUBLIST'    OR               *01324300
               '&XREQUEST'   EQ  'MONITOR_SUBLISTS'   OR               *01324400
               '&XREQUEST'   EQ  'MONITOR_EVENTQ'     OR               *01324500
               '&XREQUEST'   EQ  'DEQ_EVENTQ').SETPLVER2           @L2C 01324600
         AGO  .NOTPLVER2                                           @L2A 01324700
.SETPLVER2 ANOP ,                                                       01324800
&LSTCPLVERS SETA  2                                                @L2C 01324900
.NOTPLVER2 ANOP ,                                                  @P1A 01325000
.*                                                                      01325100
.* If LstcPlVers already >= 4, no need to look at version 4 requests    01325200
         AIF  (&LSTCPLVERS GE 4).NOTPLVER4                         @L2A 01325300
.*                                                                      01325400
.* Determine whether REQUEST() requires PLISTVER of 4              @L2A 01325500
.*                                                                      01325600
         AIF  ('&XREQUEST' EQ 'MONITOR_KEYRANGE').SETPLVER4        @L2A 01325700
         AIF  ('&XNOTIFICATION' EQ 'EVERY').SETPLVER4              @L2A 01325800
         AIF  ('&XKEYTYPE' EQ 'SECONDARY').SETPLVER4               @L2A 01325900
         AGO  .NOTPLVER4                                                01326000
.SETPLVER4 ANOP ,                                                       01326100
&LSTCPLVERS SETA  4                                                @L2C 01326200
.NOTPLVER4 ANOP ,                                                  @P1A 01326300
.*                                                                      01326400
.*  The NOTIFICATION keyword is a version 2 keyword, but introduced     01326500
.*  for MONITOR_LIST and MONITOR_KEYRANGE at version 5 as part of       01326600
.*  aggressive list and keyrange notification.  We need to set the      01326700
.*  PlistVer to 5 to prevent a down level system from accepting a       01326800
.*  parameter list with new functionality that it doesn't               01326900
.*  recognize                                                      @L6A 01327000
.*                                                                      01327100
         AIF   (&LSTCPLVERS GE 5).NOTPLVER5                        @L6A 01327200
         AIF   (('&XREQUEST' EQ 'MONITOR_KEYRANGE' OR                  *01327300
                 '&XREQUEST' EQ 'MONITOR_LIST') AND                    *01327400
               ('&XNOTIFICATION' EQ 'EVERY')).SETPLVER5            @L6A 01327500
         AGO  .NOTPLVER5                                                01327600
.SETPLVER5 ANOP ,                                                       01327700
&LSTCPLVERS SETA  5                                                @L6A 01327800
.NOTPLVER5 ANOP ,                                                       01327900
.*                                                                      01328000
.* if the user specified a plist version less than the version     @P1A 01328100
.* that was determined based on the specified keywords then        @P1A 01328200
.* issue an MNOTE                                                  @P1A 01328300
.*                                                                      01328400
         AIF   (K'&PLISTVER(1) LE 0                      OR            *01328500
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *01328600
                '&PLISTVER(1)' EQ 'MAX'                  OR            *01328700
                &XPLISTVER     GE &LSTCPLVERS).SETPLVERSUPDATE     @L2C 01328800
         MNOTE 8,'IXLLSTC ---> PLISTVER=&PLISTVER(1), BUT PLISTVER OF  *01328900
               &LSTCPLVERS IS REQUIRED'                            @L2C 01329000
.*                                                                      01329100
&ZMACRET SETA  8                                                   @P1A 01329200
         AGO   .SETPLVERSEND                                       @P1A 01329300
.*                                                                      01329400
.SETPLVERSUPDATE ANOP ,                                            @P1A 01329500
&XPLISTVER  SETA  &LSTCPLVERS                                      @L2C 01329600
.SETPLVERSEND ANOP ,                                               @P1A 01329700
.*                                                                      01329800
.**------------------------------------------------------------------** 01329900
.**  End determine the parameter list version                    @P1A** 01330000
.**------------------------------------------------------------------** 01330100
.*                                                                      01330200
.**------------------------------------------------------------------** 01330300
.**  End of user macasm code                                         ** 01330400
.**------------------------------------------------------------------** 01330500
.* @P3M                                                                 01330600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01330700
.********************************************************************   01330800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     01330900
.********************************************************************   01331000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01331100
                      LCLA  &ZOPN1         INVOCATION INDEX             01331200
                      LCLC  &ZOPL(4095)    LABEL                        01331300
                      LCLC  &ZOPO(4095)    OPERATION                    01331400
                      LCLC  &ZOPV(4095)    VALUE                        01331500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01331600
.*                                                                      01331700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01331800
.******************************************************************     01331900
.***AL.L10 IXLLSTC FMT=LIST MF=S!L PARAMETERS                           01332000
.******************************************************************     01332100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     01332200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     01332300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          01332400
&XMFATTR              SETC  '0D'                                        01332500
.*                                                                      01332600
&ZOPN                 SETA  &ZOPN+1                                     01332700
&ZOPL(&ZOPN)          SETC  ' '                                         01332800
                      AIF   (&SYSALVL NE 0).ZALVL6A                     01332900
&ZOPO(&ZOPN)          SETC  'B'                                         01333000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01333100
                      AGO   .ZALVL6B                                    01333200
.ZALVL6A              ANOP                                              01333300
&ZOPO(&ZOPN)          SETC  'CNOP'                                      01333400
&ZOPV(&ZOPN)          SETC  '4,8'                                       01333500
&ZOPN                 SETA  &ZOPN+1                                     01333600
&ZOPL(&ZOPN)          SETC  ' '                                         01333700
&ZOPO(&ZOPN)          SETC  'BRAS'                                      01333800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              01333900
.ZALVL6B              ANOP                                              01334000
&ZOPD(&ZOPN)          SETC  '++ IXLLSTC ARG PARMS'                      01334100
.*                                                                      01334200
&ZOPN                 SETA  &ZOPN+1                                     01334300
&ZOPL(&ZOPN)          SETC  ' '                                         01334400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     01334500
&ZOPV(&ZOPN)          SETC  '1'                                         01334600
&ZOPD(&ZOPN)          SETC  ' '                                         01334700
.*                                                                      01334800
.ZLMFSL2              ANOP  ,                                           01334900
.*-------------------------------------------------------------------   01335000
.***AM.L00  IXLLSTC FMT=LIST name                                       01335100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    01335200
&ZOPN                 SETA &ZOPN+1                                      01335300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   01335400
&ZOPO(&ZOPN)          SETC 'EQU'                                        01335500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   01335600
&ZOPD(&ZOPN)          SETC '++ IXLLSTC NAME'                            01335700
.ZLMFSL2M             ANOP  ,                                           01335800
.*-------------------------------------------------------------------   01335900
.***AM.L01  IXLLSTC FMT=LIST PARAMETERS                                 01336000
&ZOPN                 SETA &ZOPN+1                                      01336100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   01336200
&ZOPO(&ZOPN)          SETC 'DS'                                         01336300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   01336400
&ZOPD(&ZOPN)          SETC '++ IXLLSTC PARM LIST'                       01336500
.*-------------------------------------------------------------------   01336600
.***AM.L09  XSHL_DATA CL96                                              01336700
&ZOPN                 SETA &ZOPN+1                                      01336800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHL_DATA'                        01336900
&ZOPO(&ZOPN)          SETC 'DS'                                         01337000
&ZOPV(&ZOPN)          SETC 'CL96'                                       01337100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01337200
.*-------------------------------------------------------------------   01337300
.***AM.L09  XMOB_DATA CL4                                               01337400
&ZOPN                 SETA &ZOPN+1                                      01337500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOB_DATA'                        01337600
&ZOPO(&ZOPN)          SETC 'DS'                                         01337700
&ZOPV(&ZOPN)          SETC 'CL4'                                        01337800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01337900
.*-------------------------------------------------------------------   01338000
.***AM.L09  XMCB_DATA1 CL112                                            01338100
&ZOPN                 SETA &ZOPN+1                                      01338200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA1'                       01338300
&ZOPO(&ZOPN)          SETC 'DS'                                         01338400
&ZOPV(&ZOPN)          SETC 'CL112'                                      01338500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01338600
.*-------------------------------------------------------------------   01338700
.***AM.L09  XMCB_DATA2 CL20                                             01338800
&ZOPN                 SETA &ZOPN+1                                      01338900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA2'                       01339000
&ZOPO(&ZOPN)          SETC 'DS'                                         01339100
&ZOPV(&ZOPN)          SETC 'CL20'                                       01339200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01339300
.*-------------------------------------------------------------------   01339400
.***AM.MLM2 SAVED LOCATION COUNTER                                      01339500
                      AIF  (&XPLISTVER GE 1).ZL5LA                      01339600
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  01339700
&ZENDBASEPL           SETC 'YES'                                        01339800
&ZOPN                 SETA &ZOPN+1                                      01339900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01340000
&ZOPO(&ZOPN)          SETC 'EQU'                                        01340100
&ZOPV(&ZOPN)          SETC '*'                                          01340200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01340300
.ZL5LA                ANOP  ,                                           01340400
.*-------------------------------------------------------------------   01340500
.***AM.LVER1                                                            01340600
                      AIF  (&XPLISTVER LT 1).ZL5L                       01340700
.*-------------------------------------------------------------------   01340800
.*-------------------------------------------------------------------   01340900
.***AM.L09  XMCB_DATA3 CL44                                             01341000
&ZOPN                 SETA &ZOPN+1                                      01341100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA3'                       01341200
&ZOPO(&ZOPN)          SETC 'DS'                                         01341300
&ZOPV(&ZOPN)          SETC 'CL44'                                       01341400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01341500
.*-------------------------------------------------------------------   01341600
.***AM.LVER2                                                            01341700
.ZL5L                 ANOP  ,                                           01341800
.*-------------------------------------------------------------------   01341900
.*-------------------------------------------------------------------   01342000
.***AM.MLM2 SAVED LOCATION COUNTER                                      01342100
                      AIF  (&XPLISTVER GE 4).ZL6LA                      01342200
                      AIF  ('&ZENDBASEPL' NE '').ZL6LA                  01342300
&ZENDBASEPL           SETC 'YES'                                        01342400
&ZOPN                 SETA &ZOPN+1                                      01342500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01342600
&ZOPO(&ZOPN)          SETC 'EQU'                                        01342700
&ZOPV(&ZOPN)          SETC '*'                                          01342800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01342900
.ZL6LA                ANOP  ,                                           01343000
.*-------------------------------------------------------------------   01343100
.***AM.LVER1                                                            01343200
                      AIF  (&XPLISTVER LT 4).ZL6L                       01343300
.*-------------------------------------------------------------------   01343400
.*-------------------------------------------------------------------   01343500
.***AM.L09  XMCB_DATA4 CL64                                             01343600
&ZOPN                 SETA &ZOPN+1                                      01343700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA4'                       01343800
&ZOPO(&ZOPN)          SETC 'DS'                                         01343900
&ZOPV(&ZOPN)          SETC 'CL64'                                       01344000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01344100
.*-------------------------------------------------------------------   01344200
.***AM.LVER2                                                            01344300
.ZL6L                 ANOP  ,                                           01344400
.*-------------------------------------------------------------------   01344500
.*-------------------------------------------------------------------   01344600
.***AM.LVER1                                                            01344700
                      AIF  (&XPLISTVER LT 1).ZL7L                       01344800
.*-------------------------------------------------------------------   01344900
.*-------------------------------------------------------------------   01345000
.***AM.MLM1 SAVED LOCATION COUNTER                                      01345100
                      AIF  ('&ZENDBASEPL' NE '').ZL7LB                  01345200
&ZENDBASEPL           SETC 'YES'                                        01345300
&ZOPN                 SETA &ZOPN+1                                      01345400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01345500
&ZOPO(&ZOPN)          SETC 'EQU'                                        01345600
&ZOPV(&ZOPN)          SETC '*'                                          01345700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01345800
.ZL7LB                ANOP  ,                                           01345900
.*-------------------------------------------------------------------   01346000
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01346100
&ZOPN                 SETA &ZOPN+1                                      01346200
&ZOPL(&ZOPN)          SETC ' '                                          01346300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01346400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01346500
&ZOPD(&ZOPN)          SETC ' '                                          01346600
.*-------------------------------------------------------------------   01346700
.***AM.LVER2                                                            01346800
.ZL7L                 ANOP  ,                                           01346900
.*-------------------------------------------------------------------   01347000
.*-------------------------------------------------------------------   01347100
.***AM.LVER1                                                            01347200
                      AIF  (&XPLISTVER LT 1).ZL8L                       01347300
.*-------------------------------------------------------------------   01347400
.*-------------------------------------------------------------------   01347500
.***AM.L09  XMCB_DATA CL176                                             01347600
&ZOPN                 SETA &ZOPN+1                                      01347700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA'                        01347800
&ZOPO(&ZOPN)          SETC 'DS'                                         01347900
&ZOPV(&ZOPN)          SETC 'CL176'                                      01348000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01348100
.*-------------------------------------------------------------------   01348200
.***AM.LVER2                                                            01348300
.ZL8L                 ANOP  ,                                           01348400
.*-------------------------------------------------------------------   01348500
.*-------------------------------------------------------------------   01348600
.***AM.LVER1                                                            01348700
                      AIF  (&XPLISTVER LT 4).ZL9L                       01348800
.*-------------------------------------------------------------------   01348900
.*-------------------------------------------------------------------   01349000
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01349100
&ZOPN                 SETA &ZOPN+1                                      01349200
&ZOPL(&ZOPN)          SETC ' '                                          01349300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01349400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01349500
&ZOPD(&ZOPN)          SETC ' '                                          01349600
.*-------------------------------------------------------------------   01349700
.***AM.LVER2                                                            01349800
.ZL9L                 ANOP  ,                                           01349900
.*-------------------------------------------------------------------   01350000
.*-------------------------------------------------------------------   01350100
.***AM.LVER1                                                            01350200
                      AIF  (&XPLISTVER LT 4).ZL10L                      01350300
.*-------------------------------------------------------------------   01350400
.*-------------------------------------------------------------------   01350500
.***AM.L09  XMCB_DATAL CL240                                            01350600
&ZOPN                 SETA &ZOPN+1                                      01350700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATAL'                       01350800
&ZOPO(&ZOPN)          SETC 'DS'                                         01350900
&ZOPV(&ZOPN)          SETC 'CL240'                                      01351000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01351100
.*-------------------------------------------------------------------   01351200
.***AM.LVER2                                                            01351300
.ZL10L                ANOP  ,                                           01351400
.*-------------------------------------------------------------------   01351500
.*-------------------------------------------------------------------   01351600
.***AM.PJR1 DEFINED ON XSHL_DATA                                        01351700
&ZOPN                 SETA &ZOPN+1                                      01351800
&ZOPL(&ZOPN)          SETC ' '                                          01351900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01352000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+0'                                01352100
&ZOPD(&ZOPN)          SETC ' '                                          01352200
.*-------------------------------------------------------------------   01352300
.***AM.L02 XVERSION XL1                                                 01352400
&ZOPN                 SETA &ZOPN+1                                      01352500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         01352600
&ZOPO(&ZOPN)          SETC 'DS'                                         01352700
&ZOPV(&ZOPN)          SETC 'XL1'                                        01352800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          01352900
.*-------------------------------------------------------------------   01353000
.***AM.L09  XCMDCODE XL1                                                01353100
&ZOPN                 SETA &ZOPN+1                                      01353200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDCODE'                         01353300
&ZOPO(&ZOPN)          SETC 'DS'                                         01353400
&ZOPV(&ZOPN)          SETC 'XL1'                                        01353500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01353600
.*-------------------------------------------------------------------   01353700
.***AM.L09  XSHLFLGS CL4                                                01353800
&ZOPN                 SETA &ZOPN+1                                      01353900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS'                         01354000
&ZOPO(&ZOPN)          SETC 'DS'                                         01354100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01354200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01354300
.*-------------------------------------------------------------------   01354400
.***AM.L09  XRSV0101 CL2                                                01354500
&ZOPN                 SETA &ZOPN+1                                      01354600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0101'                         01354700
&ZOPO(&ZOPN)          SETC 'DS'                                         01354800
&ZOPV(&ZOPN)          SETC 'CL2'                                        01354900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01355000
.*-------------------------------------------------------------------   01355100
.***AM.L09  XCOMPCONID XL1                                              01355200
&ZOPN                 SETA &ZOPN+1                                      01355300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPCONID'                       01355400
&ZOPO(&ZOPN)          SETC 'DS'                                         01355500
&ZOPV(&ZOPN)          SETC 'XL1'                                        01355600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01355700
.*-------------------------------------------------------------------   01355800
.***AM.L09  XBUFSTGKEY BL.8                                             01355900
&ZOPN                 SETA &ZOPN+1                                      01356000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSTGKEY'                       01356100
&ZOPO(&ZOPN)          SETC 'DS'                                         01356200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01356300
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSTGKEY '                           01356400
.*-------------------------------------------------------------------   01356500
.***AM.L09  XANSLEN XL2                                                 01356600
&ZOPN                 SETA &ZOPN+1                                      01356700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          01356800
&ZOPO(&ZOPN)          SETC 'DS'                                         01356900
&ZOPV(&ZOPN)          SETC 'XL2'                                        01357000
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              01357100
.*-------------------------------------------------------------------   01357200
.***AM.L09  XCONTOKEN CL16                                              01357300
&ZOPN                 SETA &ZOPN+1                                      01357400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        01357500
&ZOPO(&ZOPN)          SETC 'DS'                                         01357600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01357700
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN '                            01357800
.*-------------------------------------------------------------------   01357900
.***AM.L09  XDATADDR CL12                                               01358000
&ZOPN                 SETA &ZOPN+1                                      01358100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADDR'                         01358200
&ZOPO(&ZOPN)          SETC 'DS'                                         01358300
&ZOPV(&ZOPN)          SETC 'CL12'                                       01358400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01358500
.*-------------------------------------------------------------------   01358600
.***AM.L09  XADJADDR CL8                                                01358700
&ZOPN                 SETA &ZOPN+1                                      01358800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJADDR'                         01358900
&ZOPO(&ZOPN)          SETC 'DS'                                         01359000
&ZOPV(&ZOPN)          SETC 'CL8'                                        01359100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01359200
.*-------------------------------------------------------------------   01359300
.***AM.L09  XANSADDR CL8                                                01359400
&ZOPN                 SETA &ZOPN+1                                      01359500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSADDR'                         01359600
&ZOPO(&ZOPN)          SETC 'DS'                                         01359700
&ZOPV(&ZOPN)          SETC 'CL8'                                        01359800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01359900
.*-------------------------------------------------------------------   01360000
.***AM.L09  XREQDATA CL8                                                01360100
&ZOPN                 SETA &ZOPN+1                                      01360200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQDATA'                         01360300
&ZOPO(&ZOPN)          SETC 'DS'                                         01360400
&ZOPV(&ZOPN)          SETC 'CL8'                                        01360500
&ZOPD(&ZOPN)          SETC '++ &ZXREQDATA '                             01360600
.*-------------------------------------------------------------------   01360700
.***AM.L09  XREQID CL8                                                  01360800
&ZOPN                 SETA &ZOPN+1                                      01360900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQID'                           01361000
&ZOPO(&ZOPN)          SETC 'DS'                                         01361100
&ZOPV(&ZOPN)          SETC 'CL8'                                        01361200
&ZOPD(&ZOPN)          SETC '++ &ZXREQID '                               01361300
.*-------------------------------------------------------------------   01361400
.***AM.L09  XLOCKDATA CL8                                               01361500
&ZOPN                 SETA &ZOPN+1                                      01361600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKDATA'                        01361700
&ZOPO(&ZOPN)          SETC 'DS'                                         01361800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01361900
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKDATA '                            01362000
.*-------------------------------------------------------------------   01362100
.***AM.L09  XRSV0102 CL8                                                01362200
&ZOPN                 SETA &ZOPN+1                                      01362300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0102'                         01362400
&ZOPO(&ZOPN)          SETC 'DS'                                         01362500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01362600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01362700
.*-------------------------------------------------------------------   01362800
.***AM.L09  XSHLFLGSA CL4                                               01362900
&ZOPN                 SETA &ZOPN+1                                      01363000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA'                        01363100
&ZOPO(&ZOPN)          SETC 'DS'                                         01363200
&ZOPV(&ZOPN)          SETC 'CL4'                                        01363300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01363400
.*-------------------------------------------------------------------   01363500
.***AM.L09  XRSV0103 CL4                                                01363600
&ZOPN                 SETA &ZOPN+1                                      01363700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0103'                         01363800
&ZOPO(&ZOPN)          SETC 'DS'                                         01363900
&ZOPV(&ZOPN)          SETC 'CL4'                                        01364000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01364100
.*-------------------------------------------------------------------   01364200
.***AM.PJR1 DEFINED ON XSHLFLGS                                         01364300
&ZOPN                 SETA &ZOPN+1                                      01364400
&ZOPL(&ZOPN)          SETC ' '                                          01364500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01364600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                01364700
&ZOPD(&ZOPN)          SETC ' '                                          01364800
.*-------------------------------------------------------------------   01364900
.***AM.L03 XSHLFLGS1 BL.8                                               01365000
&ZOPN                 SETA &ZOPN+1                                      01365100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS1'                        01365200
&ZOPO(&ZOPN)          SETC 'DS'                                         01365300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01365400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01365500
.*                                                                      01365600
&ZOPN                 SETA  &ZOPN+1                                     01365700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  01365800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01365900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01366000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01366100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       01366200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01366300
.*                                                                      01366400
&ZOPN                 SETA  &ZOPN+1                                     01366500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFLIST'                 01366600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01366700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01366800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01366900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFLIST'                      01367000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01367100
.*                                                                      01367200
&ZOPN                 SETA  &ZOPN+1                                     01367300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 01367400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01367500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01367600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01367700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      01367800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01367900
.*                                                                      01368000
&ZOPN                 SETA  &ZOPN+1                                     01368100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEABLE_NO'                    01368200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01368300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01368400
&ZOPD(&ZOPN)          SETC  '++ XPAGEABLE.'                             01368500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           01368600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01368700
.*                                                                      01368800
&ZOPN                 SETA  &ZOPN+1                                     01368900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFSTGKEY'               01369000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01369100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01369200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01369300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFSTGKEY'                    01369400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01369500
.*                                                                      01369600
&ZOPN                 SETA  &ZOPN+1                                     01369700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRTYPE_REAL'               01369800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01369900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01370000
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRTYPE.'                          01370100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REAL'                         01370200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01370300
.*-------------------------------------------------------------------   01370400
.***AM.L03 XSHLFLGS2 BL.8                                               01370500
&ZOPN                 SETA &ZOPN+1                                      01370600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS2'                        01370700
&ZOPO(&ZOPN)          SETC 'DS'                                         01370800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01370900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01371000
.*                                                                      01371100
&ZOPN                 SETA  &ZOPN+1                                     01371200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCECB'                   01371300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01371400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01371500
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01371600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCECB'                      01371700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01371800
.*                                                                      01371900
&ZOPN                 SETA  &ZOPN+1                                     01372000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  01372100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01372200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01372300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01372400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     01372500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01372600
.*                                                                      01372700
&ZOPN                 SETA  &ZOPN+1                                     01372800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCTOKEN'                 01372900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01373000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01373100
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01373200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCTOKEN'                    01373300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01373400
.*                                                                      01373500
&ZOPN                 SETA  &ZOPN+1                                     01373600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCECB'                  01373700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01373800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01373900
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01374000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCECB'                     01374100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01374200
.*                                                                      01374300
&ZOPN                 SETA  &ZOPN+1                                     01374400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCEXIT'                 01374500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01374600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01374700
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01374800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCEXIT'                    01374900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01375000
.*                                                                      01375100
&ZOPN                 SETA  &ZOPN+1                                     01375200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCTOKEN'                01375300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01375400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01375500
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01375600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCTOKEN'                   01375700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01375800
.*                                                                      01375900
&ZOPN                 SETA  &ZOPN+1                                     01376000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCNORESPONSE'           01376100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01376200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01376300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01376400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCNORESPONSE'              01376500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01376600
.*-------------------------------------------------------------------   01376700
.***AM.L03 XSHLFLGS3 BL.8                                               01376800
&ZOPN                 SETA &ZOPN+1                                      01376900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS3'                        01377000
&ZOPO(&ZOPN)          SETC 'DS'                                         01377100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01377200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01377300
.*                                                                      01377400
&ZOPN                 SETA  &ZOPN+1                                     01377500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_SET'                   01377600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01377700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01377800
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01377900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SET'                          01378000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01378100
.*                                                                      01378200
&ZOPN                 SETA  &ZOPN+1                                     01378300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_RESET'                 01378400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01378500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01378600
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01378700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RESET'                        01378800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01378900
.*                                                                      01379000
&ZOPN                 SETA  &ZOPN+1                                     01379100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_TEST'                  01379200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01379300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01379400
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01379500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TEST'                         01379600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01379700
.*                                                                      01379800
&ZOPN                 SETA  &ZOPN+1                                     01379900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_READNEXT'              01380000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01380100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01380200
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01380300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READNEXT'                     01380400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01380500
.*                                                                      01380600
&ZOPN                 SETA  &ZOPN+1                                     01380700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKMODE_COND'                  01380800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01380900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01381000
&ZOPD(&ZOPN)          SETC  '++ XLOCKMODE.'                             01381100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COND'                         01381200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01381300
.*                                                                      01381400
&ZOPN                 SETA  &ZOPN+1                                     01381500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LOCKCOMP'                01381600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01381700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01381800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01381900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCKCOMP'                     01382000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01382100
.*-------------------------------------------------------------------   01382200
.***AM.L03 XSHLFLGS4 BL.8                                               01382300
&ZOPN                 SETA &ZOPN+1                                      01382400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS4'                        01382500
&ZOPO(&ZOPN)          SETC 'DS'                                         01382600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01382700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01382800
.*                                                                      01382900
&ZOPN                 SETA  &ZOPN+1                                     01383000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRSIZE_64'                 01383100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01383200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01383300
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRSIZE.'                          01383400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           01383500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01383600
.*                                                                      01383700
&ZOPN                 SETA  &ZOPN+1                                     01383800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYREQASYNC'                   01383900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01384000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01384100
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01384200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LIST'                         01384300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01384400
.*-------------------------------------------------------------------   01384500
.***AM.PJR1 DEFINED ON XCONTOKEN                                        01384600
&ZOPN                 SETA &ZOPN+1                                      01384700
&ZOPL(&ZOPN)          SETC ' '                                          01384800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01384900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+12'                               01385000
&ZOPD(&ZOPN)          SETC ' '                                          01385100
.*-------------------------------------------------------------------   01385200
.***AM.L09  XRSV0201 CL13                                               01385300
&ZOPN                 SETA &ZOPN+1                                      01385400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0201'                         01385500
&ZOPO(&ZOPN)          SETC 'DS'                                         01385600
&ZOPV(&ZOPN)          SETC 'CL13'                                       01385700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01385800
.*-------------------------------------------------------------------   01385900
.***AM.L09  XCONID XL1                                                  01386000
&ZOPN                 SETA &ZOPN+1                                      01386100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           01386200
&ZOPO(&ZOPN)          SETC 'DS'                                         01386300
&ZOPV(&ZOPN)          SETC 'XL1'                                        01386400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01386500
.*-------------------------------------------------------------------   01386600
.***AM.L09  XRSV0202 CL2                                                01386700
&ZOPN                 SETA &ZOPN+1                                      01386800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0202'                         01386900
&ZOPO(&ZOPN)          SETC 'DS'                                         01387000
&ZOPV(&ZOPN)          SETC 'CL2'                                        01387100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01387200
.*-------------------------------------------------------------------   01387300
.***AM.PJR1 DEFINED ON XDATADDR                                         01387400
&ZOPN                 SETA &ZOPN+1                                      01387500
&ZOPL(&ZOPN)          SETC ' '                                          01387600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01387700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01387800
&ZOPD(&ZOPN)          SETC ' '                                          01387900
.*-------------------------------------------------------------------   01388000
.***AM.L09 ALET XBUFFER F                                               01388100
&ZOPN                 SETA &ZOPN+1                                      01388200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     01388300
&ZOPO(&ZOPN)          SETC 'DS'                                         01388400
&ZOPV(&ZOPN)          SETC 'F'                                          01388500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET'                          01388600
.*-------------------------------------------------------------------   01388700
.***AM.L09  XBUFSIZE F                                                  01388800
&ZOPN                 SETA &ZOPN+1                                      01388900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         01389000
&ZOPO(&ZOPN)          SETC 'DS'                                         01389100
&ZOPV(&ZOPN)          SETC 'F'                                          01389200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE '                             01389300
.*-------------------------------------------------------------------   01389400
.***AM.L09  XBUFFER A                                                   01389500
&ZOPN                 SETA &ZOPN+1                                      01389600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER'                          01389700
&ZOPO(&ZOPN)          SETC 'DS'                                         01389800
&ZOPV(&ZOPN)          SETC 'A'                                          01389900
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER '                              01390000
.*-------------------------------------------------------------------   01390100
.***AM.PJR1 DEFINED ON XDATADDR                                         01390200
&ZOPN                 SETA &ZOPN+1                                      01390300
&ZOPL(&ZOPN)          SETC ' '                                          01390400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01390500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01390600
&ZOPD(&ZOPN)          SETC ' '                                          01390700
.*-------------------------------------------------------------------   01390800
.***AM.L09  XBUFALET F                                                  01390900
&ZOPN                 SETA &ZOPN+1                                      01391000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFALET'                         01391100
&ZOPO(&ZOPN)          SETC 'DS'                                         01391200
&ZOPV(&ZOPN)          SETC 'F'                                          01391300
&ZOPD(&ZOPN)          SETC '++ &ZXBUFALET '                             01391400
.*-------------------------------------------------------------------   01391500
.***AM.L09 ALET XBUFLIST F                                              01391600
&ZOPN                 SETA &ZOPN+1                                      01391700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST_ALET'                    01391800
&ZOPO(&ZOPN)          SETC 'DS'                                         01391900
&ZOPV(&ZOPN)          SETC 'F'                                          01392000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST ALET'                         01392100
.*-------------------------------------------------------------------   01392200
.***AM.L09  XBUFLIST A                                                  01392300
&ZOPN                 SETA &ZOPN+1                                      01392400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         01392500
&ZOPO(&ZOPN)          SETC 'DS'                                         01392600
&ZOPV(&ZOPN)          SETC 'A'                                          01392700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST '                             01392800
.*-------------------------------------------------------------------   01392900
.***AM.PJR1 DEFINED ON XADJADDR                                         01393000
&ZOPN                 SETA &ZOPN+1                                      01393100
&ZOPL(&ZOPN)          SETC ' '                                          01393200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01393300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01393400
&ZOPD(&ZOPN)          SETC ' '                                          01393500
.*-------------------------------------------------------------------   01393600
.***AM.L09 ALET XMOSVECTOR F                                            01393700
&ZOPN                 SETA &ZOPN+1                                      01393800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOSVECTOR_ALET'                  01393900
&ZOPO(&ZOPN)          SETC 'DS'                                         01394000
&ZOPV(&ZOPN)          SETC 'F'                                          01394100
&ZOPD(&ZOPN)          SETC '++ &ZXMOSVECTOR ALET'                       01394200
.*-------------------------------------------------------------------   01394300
.***AM.L09  XMOSVECTOR A                                                01394400
&ZOPN                 SETA &ZOPN+1                                      01394500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOSVECTOR'                       01394600
&ZOPO(&ZOPN)          SETC 'DS'                                         01394700
&ZOPV(&ZOPN)          SETC 'A'                                          01394800
&ZOPD(&ZOPN)          SETC '++ &ZXMOSVECTOR '                           01394900
.*-------------------------------------------------------------------   01395000
.***AM.PJR1 DEFINED ON XANSADDR                                         01395100
&ZOPN                 SETA &ZOPN+1                                      01395200
&ZOPL(&ZOPN)          SETC ' '                                          01395300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01395400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               01395500
&ZOPD(&ZOPN)          SETC ' '                                          01395600
.*-------------------------------------------------------------------   01395700
.***AM.L09 ALET XANSAREA F                                              01395800
&ZOPN                 SETA &ZOPN+1                                      01395900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    01396000
&ZOPO(&ZOPN)          SETC 'DS'                                         01396100
&ZOPV(&ZOPN)          SETC 'F'                                          01396200
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         01396300
.*-------------------------------------------------------------------   01396400
.***AM.L09  XANSAREA A                                                  01396500
&ZOPN                 SETA &ZOPN+1                                      01396600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA'                         01396700
&ZOPO(&ZOPN)          SETC 'DS'                                         01396800
&ZOPV(&ZOPN)          SETC 'A'                                          01396900
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA '                             01397000
.*-------------------------------------------------------------------   01397100
.***AM.PJR1 DEFINED ON XREQDATA                                         01397200
&ZOPN                 SETA &ZOPN+1                                      01397300
&ZOPL(&ZOPN)          SETC ' '                                          01397400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01397500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01397600
&ZOPD(&ZOPN)          SETC ' '                                          01397700
.*-------------------------------------------------------------------   01397800
.***AM.L09  XREQECB A                                                   01397900
&ZOPN                 SETA &ZOPN+1                                      01398000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQECB'                          01398100
&ZOPO(&ZOPN)          SETC 'DS'                                         01398200
&ZOPV(&ZOPN)          SETC 'A'                                          01398300
&ZOPD(&ZOPN)          SETC '++ &ZXREQECB '                              01398400
.*-------------------------------------------------------------------   01398500
.***AM.L09  XRSV0203 CL4                                                01398600
&ZOPN                 SETA &ZOPN+1                                      01398700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0203'                         01398800
&ZOPO(&ZOPN)          SETC 'DS'                                         01398900
&ZOPV(&ZOPN)          SETC 'CL4'                                        01399000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01399100
.*-------------------------------------------------------------------   01399200
.***AM.PJR1 DEFINED ON XREQDATA                                         01399300
&ZOPN                 SETA &ZOPN+1                                      01399400
&ZOPL(&ZOPN)          SETC ' '                                          01399500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01399600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01399700
&ZOPD(&ZOPN)          SETC ' '                                          01399800
.*-------------------------------------------------------------------   01399900
.***AM.L09 ALET XREQTOKEN F                                             01400000
&ZOPN                 SETA &ZOPN+1                                      01400100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN_ALET'                   01400200
&ZOPO(&ZOPN)          SETC 'DS'                                         01400300
&ZOPV(&ZOPN)          SETC 'F'                                          01400400
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN ALET'                        01400500
.*-------------------------------------------------------------------   01400600
.***AM.L09  XREQTOKEN A                                                 01400700
&ZOPN                 SETA &ZOPN+1                                      01400800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        01400900
&ZOPO(&ZOPN)          SETC 'DS'                                         01401000
&ZOPV(&ZOPN)          SETC 'A'                                          01401100
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN '                            01401200
.*-------------------------------------------------------------------   01401300
.***AM.PJR1 DEFINED ON XSHLFLGSA                                        01401400
&ZOPN                 SETA &ZOPN+1                                      01401500
&ZOPL(&ZOPN)          SETC ' '                                          01401600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01401700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               01401800
&ZOPD(&ZOPN)          SETC ' '                                          01401900
.*-------------------------------------------------------------------   01402000
.***AM.L03 XSHLFLGSA1 BL.8                                              01402100
&ZOPN                 SETA &ZOPN+1                                      01402200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA1'                       01402300
&ZOPO(&ZOPN)          SETC 'DS'                                         01402400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01402500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01402600
.*                                                                      01402700
&ZOPN                 SETA  &ZOPN+1                                     01402800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTC'                 01402900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01403000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01403100
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01403200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTC'                      01403300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01403400
.*                                                                      01403500
&ZOPN                 SETA  &ZOPN+1                                     01403600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTE'                 01403700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01403800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01403900
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01404000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTE'                      01404100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01404200
.*                                                                      01404300
&ZOPN                 SETA  &ZOPN+1                                     01404400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTM'                 01404500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01404600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01404700
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01404800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTM'                      01404900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01405000
.*-------------------------------------------------------------------   01405100
.***AM.L09  XSHLFLGSA2 BL.8                                             01405200
&ZOPN                 SETA &ZOPN+1                                      01405300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA2'                       01405400
&ZOPO(&ZOPN)          SETC 'DS'                                         01405500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01405600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01405700
.*-------------------------------------------------------------------   01405800
.***AM.PJR1 DEFINED ON XMOB_DATA                                        01405900
&ZOPN                 SETA &ZOPN+1                                      01406000
&ZOPL(&ZOPN)          SETC ' '                                          01406100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01406200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               01406300
&ZOPD(&ZOPN)          SETC ' '                                          01406400
.*-------------------------------------------------------------------   01406500
.***AM.L09  XCMDLEN XL2                                                 01406600
&ZOPN                 SETA &ZOPN+1                                      01406700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDLEN'                          01406800
&ZOPO(&ZOPN)          SETC 'DS'                                         01406900
&ZOPV(&ZOPN)          SETC 'XL2'                                        01407000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01407100
.*-------------------------------------------------------------------   01407200
.***AM.L09  XBUFNUM XL1                                                 01407300
&ZOPN                 SETA &ZOPN+1                                      01407400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          01407500
&ZOPO(&ZOPN)          SETC 'DS'                                         01407600
&ZOPV(&ZOPN)          SETC 'XL1'                                        01407700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM '                              01407800
.*-------------------------------------------------------------------   01407900
.***AM.L09  XBUFINCRNUM XL1                                             01408000
&ZOPN                 SETA &ZOPN+1                                      01408100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFINCRNUM'                      01408200
&ZOPO(&ZOPN)          SETC 'DS'                                         01408300
&ZOPV(&ZOPN)          SETC 'XL1'                                        01408400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFINCRNUM '                          01408500
.*-------------------------------------------------------------------   01408600
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01408700
&ZOPN                 SETA &ZOPN+1                                      01408800
&ZOPL(&ZOPN)          SETC ' '                                          01408900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01409000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01409100
&ZOPD(&ZOPN)          SETC ' '                                          01409200
.*-------------------------------------------------------------------   01409300
.***AM.L09  XCCA CL1                                                    01409400
&ZOPN                 SETA &ZOPN+1                                      01409500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCA'                             01409600
&ZOPO(&ZOPN)          SETC 'DS'                                         01409700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01409800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01409900
.*-------------------------------------------------------------------   01410000
.***AM.L09  XCCB CL1                                                    01410100
&ZOPN                 SETA &ZOPN+1                                      01410200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCB'                             01410300
&ZOPO(&ZOPN)          SETC 'DS'                                         01410400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01410500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01410600
.*-------------------------------------------------------------------   01410700
.***AM.L09  XDATA18 CL4                                                 01410800
&ZOPN                 SETA &ZOPN+1                                      01410900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA18'                          01411000
&ZOPO(&ZOPN)          SETC 'DS'                                         01411100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01411200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01411300
.*-------------------------------------------------------------------   01411400
.***AM.L03 XFL22 BL.8                                                   01411500
&ZOPN                 SETA &ZOPN+1                                      01411600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22'                            01411700
&ZOPO(&ZOPN)          SETC 'DS'                                         01411800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01411900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01412000
.*                                                                      01412100
&ZOPN                 SETA  &ZOPN+1                                     01412200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SECONDARYKEY'            01412300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01412400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01412500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01412600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARYKEY'                 01412700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01412800
.*-------------------------------------------------------------------   01412900
.***AM.L09  XUID23 XL1                                                  01413000
&ZOPN                 SETA &ZOPN+1                                      01413100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID23'                           01413200
&ZOPO(&ZOPN)          SETC 'DS'                                         01413300
&ZOPV(&ZOPN)          SETC 'XL1'                                        01413400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01413500
.*-------------------------------------------------------------------   01413600
.***AM.L09  XDATA24 CL8                                                 01413700
&ZOPN                 SETA &ZOPN+1                                      01413800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA24'                          01413900
&ZOPO(&ZOPN)          SETC 'DS'                                         01414000
&ZOPV(&ZOPN)          SETC 'CL8'                                        01414100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01414200
.*-------------------------------------------------------------------   01414300
.***AM.L09  XLISTNUM F                                                  01414400
&ZOPN                 SETA &ZOPN+1                                      01414500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUM'                         01414600
&ZOPO(&ZOPN)          SETC 'DS'                                         01414700
&ZOPV(&ZOPN)          SETC 'F'                                          01414800
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUM '                             01414900
.*-------------------------------------------------------------------   01415000
.***AM.L09  XDATA36 CL28                                                01415100
&ZOPN                 SETA &ZOPN+1                                      01415200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA36'                          01415300
&ZOPO(&ZOPN)          SETC 'DS'                                         01415400
&ZOPV(&ZOPN)          SETC 'CL28'                                       01415500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01415600
.*-------------------------------------------------------------------   01415700
.***AM.L09  XENTRYKEY CL16                                              01415800
&ZOPN                 SETA &ZOPN+1                                      01415900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEY'                        01416000
&ZOPO(&ZOPN)          SETC 'DS'                                         01416100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01416200
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYKEY '                            01416300
.*-------------------------------------------------------------------   01416400
.***AM.L09  XDATA80 CL16                                                01416500
&ZOPN                 SETA &ZOPN+1                                      01416600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA80'                          01416700
&ZOPO(&ZOPN)          SETC 'DS'                                         01416800
&ZOPV(&ZOPN)          SETC 'CL16'                                       01416900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01417000
.*-------------------------------------------------------------------   01417100
.***AM.L09  XSECONDARYKEY CL32                                          01417200
&ZOPN                 SETA &ZOPN+1                                      01417300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEY'                    01417400
&ZOPO(&ZOPN)          SETC 'DS'                                         01417500
&ZOPV(&ZOPN)          SETC 'CL32'                                       01417600
&ZOPD(&ZOPN)          SETC '++ &ZXSECONDARYKEY '                        01417700
.*-------------------------------------------------------------------   01417800
.***AM.LVER1                                                            01417900
                      AIF  (&XPLISTVER LT 4).ZL102L                     01418000
.*-------------------------------------------------------------------   01418100
.*-------------------------------------------------------------------   01418200
.***AM.PJR1 DEFINED ON XFL22                                            01418300
&ZOPN                 SETA &ZOPN+1                                      01418400
&ZOPL(&ZOPN)          SETC ' '                                          01418500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01418600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01418700
&ZOPD(&ZOPN)          SETC ' '                                          01418800
.*-------------------------------------------------------------------   01418900
.***AM.LVER2                                                            01419000
.ZL102L               ANOP  ,                                           01419100
.*-------------------------------------------------------------------   01419200
.*-------------------------------------------------------------------   01419300
.***AM.LVER1                                                            01419400
                      AIF  (&XPLISTVER LT 4).ZL103L                     01419500
.*-------------------------------------------------------------------   01419600
.*-------------------------------------------------------------------   01419700
.***AM.L03 XFL22KT BL.8                                                 01419800
&ZOPN                 SETA &ZOPN+1                                      01419900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22KT'                          01420000
&ZOPO(&ZOPN)          SETC 'DS'                                         01420100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01420200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01420300
.*-------------------------------------------------------------------   01420400
.***AM.LVER2                                                            01420500
.ZL103L               ANOP  ,                                           01420600
.*-------------------------------------------------------------------   01420700
.*-------------------------------------------------------------------   01420800
.***AM.LVER1                                                            01420900
                      AIF  (&XPLISTVER LT 4).ZL104L                     01421000
.*-------------------------------------------------------------------   01421100
.*                                                                      01421200
&ZOPN                 SETA  &ZOPN+1                                     01421300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYTYPE_SECONDARY'              01421400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01421500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01421600
&ZOPD(&ZOPN)          SETC  '++ XKEYTYPE.'                              01421700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARY'                    01421800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01421900
.*-------------------------------------------------------------------   01422000
.***AM.LVER2                                                            01422100
.ZL104L               ANOP  ,                                           01422200
.*-------------------------------------------------------------------   01422300
.*-------------------------------------------------------------------   01422400
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01422500
&ZOPN                 SETA &ZOPN+1                                      01422600
&ZOPL(&ZOPN)          SETC ' '                                          01422700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01422800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01422900
&ZOPD(&ZOPN)          SETC ' '                                          01423000
.*-------------------------------------------------------------------   01423100
.***AM.L09  XRSV16LK CL5                                                01423200
&ZOPN                 SETA &ZOPN+1                                      01423300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16LK'                         01423400
&ZOPO(&ZOPN)          SETC 'DS'                                         01423500
&ZOPV(&ZOPN)          SETC 'CL5'                                        01423600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01423700
.*-------------------------------------------------------------------   01423800
.***AM.L09  XFL21LK BL.8                                                01423900
&ZOPN                 SETA &ZOPN+1                                      01424000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL21LK'                          01424100
&ZOPO(&ZOPN)          SETC 'DS'                                         01424200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01424300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01424400
.*-------------------------------------------------------------------   01424500
.***AM.L09  XRSV22LK CL5                                                01424600
&ZOPN                 SETA &ZOPN+1                                      01424700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV22LK'                         01424800
&ZOPO(&ZOPN)          SETC 'DS'                                         01424900
&ZOPV(&ZOPN)          SETC 'CL5'                                        01425000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01425100
.*-------------------------------------------------------------------   01425200
.***AM.L09  XCGLM XL1                                                   01425300
&ZOPN                 SETA &ZOPN+1                                      01425400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCGLM'                            01425500
&ZOPO(&ZOPN)          SETC 'DS'                                         01425600
&ZOPV(&ZOPN)          SETC 'XL1'                                        01425700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01425800
.*-------------------------------------------------------------------   01425900
.***AM.L09  XLOCKINDEX F                                                01426000
&ZOPN                 SETA &ZOPN+1                                      01426100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKINDEX'                       01426200
&ZOPO(&ZOPN)          SETC 'DS'                                         01426300
&ZOPV(&ZOPN)          SETC 'F'                                          01426400
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKINDEX '                           01426500
.*-------------------------------------------------------------------   01426600
.***AM.L09  XRSV32LK CL32                                               01426700
&ZOPN                 SETA &ZOPN+1                                      01426800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV32LK'                         01426900
&ZOPO(&ZOPN)          SETC 'DS'                                         01427000
&ZOPV(&ZOPN)          SETC 'CL32'                                       01427100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01427200
.*-------------------------------------------------------------------   01427300
.***AM.L09  XUID64 XL1                                                  01427400
&ZOPN                 SETA &ZOPN+1                                      01427500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID64'                           01427600
&ZOPO(&ZOPN)          SETC 'DS'                                         01427700
&ZOPV(&ZOPN)          SETC 'XL1'                                        01427800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01427900
.*-------------------------------------------------------------------   01428000
.***AM.L09  XRSV65LK CL31                                               01428100
&ZOPN                 SETA &ZOPN+1                                      01428200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV65LK'                         01428300
&ZOPO(&ZOPN)          SETC 'DS'                                         01428400
&ZOPV(&ZOPN)          SETC 'CL31'                                       01428500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01428600
.*-------------------------------------------------------------------   01428700
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01428800
&ZOPN                 SETA &ZOPN+1                                      01428900
&ZOPL(&ZOPN)          SETC ' '                                          01429000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01429100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01429200
&ZOPD(&ZOPN)          SETC ' '                                          01429300
.*-------------------------------------------------------------------   01429400
.***AM.L09  XRSV16LC CL4                                                01429500
&ZOPN                 SETA &ZOPN+1                                      01429600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16LC'                         01429700
&ZOPO(&ZOPN)          SETC 'DS'                                         01429800
&ZOPV(&ZOPN)          SETC 'CL4'                                        01429900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01430000
.*-------------------------------------------------------------------   01430100
.***AM.L03 XFL20LC BL.8                                                 01430200
&ZOPN                 SETA &ZOPN+1                                      01430300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL20LC'                          01430400
&ZOPO(&ZOPN)          SETC 'DS'                                         01430500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01430600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01430700
.*                                                                      01430800
&ZOPN                 SETA  &ZOPN+1                                     01430900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SET_LNT'                         01431000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01431100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01431200
&ZOPD(&ZOPN)          SETC  '++ XLISTSTATE.'                            01431300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEFINE'                       01431400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01431500
.*                                                                      01431600
&ZOPN                 SETA  &ZOPN+1                                     01431700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SET_KRNT'                        01431800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01431900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01432000
&ZOPD(&ZOPN)          SETC  '++ XKEYRANGESTATE.'                        01432100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEFINE'                       01432200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01432300
.*                                                                      01432400
&ZOPN                 SETA  &ZOPN+1                                     01432500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SET_KR'                          01432600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01432700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01432800
&ZOPD(&ZOPN)          SETC  '++ XKEYRANGE.'                             01432900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SET'                          01433000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01433100
.*-------------------------------------------------------------------   01433200
.***AM.L03 XFL21LC BL.8                                                 01433300
&ZOPN                 SETA &ZOPN+1                                      01433400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL21LC'                          01433500
&ZOPO(&ZOPN)          SETC 'DS'                                         01433600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01433700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01433800
.*                                                                      01433900
&ZOPN                 SETA  &ZOPN+1                                     01434000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_KEYRNOTIFYDELAY'         01434100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01434200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01434300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01434400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEYRNOTIFYDELAY'              01434500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01434600
.*                                                                      01434700
&ZOPN                 SETA  &ZOPN+1                                     01434800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTNOTIFYDELAY'         01434900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01435000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01435100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01435200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTNOTIFYDELAY'              01435300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01435400
.*                                                                      01435500
&ZOPN                 SETA  &ZOPN+1                                     01435600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTKEY'                 01435700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01435800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01435900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01436000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEY'                      01436100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01436200
.*                                                                      01436300
&ZOPN                 SETA  &ZOPN+1                                     01436400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MAXLISTKEY'              01436500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01436600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01436700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01436800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MAXLISTKEY'                   01436900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01437000
.*                                                                      01437100
&ZOPN                 SETA  &ZOPN+1                                     01437200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SETCURSOR'               01437300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01437400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01437500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01437600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SETCURSOR'                    01437700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01437800
.*                                                                      01437900
&ZOPN                 SETA  &ZOPN+1                                     01438000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTDESC'                01438100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01438200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01438300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01438400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTDESC'                     01438500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01438600
.*                                                                      01438700
&ZOPN                 SETA  &ZOPN+1                                     01438800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTLIMIT'               01438900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01439000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01439100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01439200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTLIMIT'                    01439300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01439400
.*-------------------------------------------------------------------   01439500
.***AM.L09  XRSV22LC CL1                                                01439600
&ZOPN                 SETA &ZOPN+1                                      01439700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV22LC'                         01439800
&ZOPO(&ZOPN)          SETC 'DS'                                         01439900
&ZOPV(&ZOPN)          SETC 'CL1'                                        01440000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01440100
.*-------------------------------------------------------------------   01440200
.***AM.L03 XFL23LC BL.8                                                 01440300
&ZOPN                 SETA &ZOPN+1                                      01440400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL23LC'                          01440500
&ZOPO(&ZOPN)          SETC 'DS'                                         01440600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01440700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01440800
.*                                                                      01440900
&ZOPN                 SETA  &ZOPN+1                                     01441000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSETCURSOR_TAIL'                 01441100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01441200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01441300
&ZOPD(&ZOPN)          SETC  '++ XSETCURSOR.'                            01441400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TAIL'                         01441500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01441600
.*                                                                      01441700
&ZOPN                 SETA  &ZOPN+1                                     01441800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYRNOTIFYDELAY_OFF'            01441900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01442000
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01442100
&ZOPD(&ZOPN)          SETC  '++ XKEYRNOTIFYDELAY.'                      01442200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OFF'                          01442300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01442400
.*                                                                      01442500
&ZOPN                 SETA  &ZOPN+1                                     01442600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTNOTIFYDELAY_OFF'            01442700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01442800
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01442900
&ZOPD(&ZOPN)          SETC  '++ XLISTNOTIFYDELAY.'                      01443000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OFF'                          01443100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01443200
.*-------------------------------------------------------------------   01443300
.***AM.L09  XRSV24LC CL8                                                01443400
&ZOPN                 SETA &ZOPN+1                                      01443500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24LC'                         01443600
&ZOPO(&ZOPN)          SETC 'DS'                                         01443700
&ZOPV(&ZOPN)          SETC 'CL8'                                        01443800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01443900
.*-------------------------------------------------------------------   01444000
.***AM.L09  XLISTNUMLC F                                                01444100
&ZOPN                 SETA &ZOPN+1                                      01444200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMLC'                       01444300
&ZOPO(&ZOPN)          SETC 'DS'                                         01444400
&ZOPV(&ZOPN)          SETC 'F'                                          01444500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01444600
.*-------------------------------------------------------------------   01444700
.***AM.L09  XLISTLIMIT F                                                01444800
&ZOPN                 SETA &ZOPN+1                                      01444900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTLIMIT'                       01445000
&ZOPO(&ZOPN)          SETC 'DS'                                         01445100
&ZOPV(&ZOPN)          SETC 'F'                                          01445200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTLIMIT '                           01445300
.*-------------------------------------------------------------------   01445400
.***AM.L09  XRSV40LC CL24                                               01445500
&ZOPN                 SETA &ZOPN+1                                      01445600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV40LC'                         01445700
&ZOPO(&ZOPN)          SETC 'DS'                                         01445800
&ZOPV(&ZOPN)          SETC 'CL24'                                       01445900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01446000
.*-------------------------------------------------------------------   01446100
.***AM.L09  XAUTHCOMP CL16                                              01446200
&ZOPN                 SETA &ZOPN+1                                      01446300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAUTHCOMP'                        01446400
&ZOPO(&ZOPN)          SETC 'DS'                                         01446500
&ZOPV(&ZOPN)          SETC 'CL16'                                       01446600
&ZOPD(&ZOPN)          SETC '++ &ZXAUTHCOMP '                            01446700
.*-------------------------------------------------------------------   01446800
.***AM.L09  XNEWAUTH CL16                                               01446900
&ZOPN                 SETA &ZOPN+1                                      01447000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWAUTH'                         01447100
&ZOPO(&ZOPN)          SETC 'DS'                                         01447200
&ZOPV(&ZOPN)          SETC 'CL16'                                       01447300
&ZOPD(&ZOPN)          SETC '++ &ZXNEWAUTH '                             01447400
.*-------------------------------------------------------------------   01447500
.***AM.L09  XLISTDESC CL32                                              01447600
&ZOPN                 SETA &ZOPN+1                                      01447700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTDESC'                        01447800
&ZOPO(&ZOPN)          SETC 'DS'                                         01447900
&ZOPV(&ZOPN)          SETC 'CL32'                                       01448000
&ZOPD(&ZOPN)          SETC '++ &ZXLISTDESC '                            01448100
.*-------------------------------------------------------------------   01448200
.***AM.LVER1                                                            01448300
                      AIF  (&XPLISTVER LT 1).ZL140L                     01448400
.*-------------------------------------------------------------------   01448500
.*-------------------------------------------------------------------   01448600
.***AM.L09  XLISTKEY CL16                                               01448700
&ZOPN                 SETA &ZOPN+1                                      01448800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEY'                         01448900
&ZOPO(&ZOPN)          SETC 'DS'                                         01449000
&ZOPV(&ZOPN)          SETC 'CL16'                                       01449100
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEY '                             01449200
.*-------------------------------------------------------------------   01449300
.***AM.LVER2                                                            01449400
.ZL140L               ANOP  ,                                           01449500
.*-------------------------------------------------------------------   01449600
.*-------------------------------------------------------------------   01449700
.***AM.LVER1                                                            01449800
                      AIF  (&XPLISTVER LT 1).ZL141L                     01449900
.*-------------------------------------------------------------------   01450000
.*-------------------------------------------------------------------   01450100
.***AM.L09  XMAXLISTKEY CL16                                            01450200
&ZOPN                 SETA &ZOPN+1                                      01450300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAXLISTKEY'                      01450400
&ZOPO(&ZOPN)          SETC 'DS'                                         01450500
&ZOPV(&ZOPN)          SETC 'CL16'                                       01450600
&ZOPD(&ZOPN)          SETC '++ &ZXMAXLISTKEY '                          01450700
.*-------------------------------------------------------------------   01450800
.***AM.LVER2                                                            01450900
.ZL141L               ANOP  ,                                           01451000
.*-------------------------------------------------------------------   01451100
.*-------------------------------------------------------------------   01451200
.***AM.LVER1                                                            01451300
                      AIF  (&XPLISTVER LT 4).ZL142L                     01451400
.*-------------------------------------------------------------------   01451500
.*-------------------------------------------------------------------   01451600
.***AM.L09  XRSV160LC CL16                                              01451700
&ZOPN                 SETA &ZOPN+1                                      01451800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV160LC'                        01451900
&ZOPO(&ZOPN)          SETC 'DS'                                         01452000
&ZOPV(&ZOPN)          SETC 'CL16'                                       01452100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01452200
.*-------------------------------------------------------------------   01452300
.***AM.LVER2                                                            01452400
.ZL142L               ANOP  ,                                           01452500
.*-------------------------------------------------------------------   01452600
.*-------------------------------------------------------------------   01452700
.***AM.LVER1                                                            01452800
                      AIF  (&XPLISTVER LT 4).ZL143L                     01452900
.*-------------------------------------------------------------------   01453000
.*-------------------------------------------------------------------   01453100
.***AM.L09  XKEYRANGESTART CL16                                         01453200
&ZOPN                 SETA &ZOPN+1                                      01453300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYRANGESTART'                   01453400
&ZOPO(&ZOPN)          SETC 'DS'                                         01453500
&ZOPV(&ZOPN)          SETC 'CL16'                                       01453600
&ZOPD(&ZOPN)          SETC '++ &ZXKEYRANGESTART '                       01453700
.*-------------------------------------------------------------------   01453800
.***AM.LVER2                                                            01453900
.ZL143L               ANOP  ,                                           01454000
.*-------------------------------------------------------------------   01454100
.*-------------------------------------------------------------------   01454200
.***AM.LVER1                                                            01454300
                      AIF  (&XPLISTVER LT 4).ZL144L                     01454400
.*-------------------------------------------------------------------   01454500
.*-------------------------------------------------------------------   01454600
.***AM.L09  XKEYRANGEEND CL16                                           01454700
&ZOPN                 SETA &ZOPN+1                                      01454800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYRANGEEND'                     01454900
&ZOPO(&ZOPN)          SETC 'DS'                                         01455000
&ZOPV(&ZOPN)          SETC 'CL16'                                       01455100
&ZOPD(&ZOPN)          SETC '++ &ZXKEYRANGEEND '                         01455200
.*-------------------------------------------------------------------   01455300
.***AM.LVER2                                                            01455400
.ZL144L               ANOP  ,                                           01455500
.*-------------------------------------------------------------------   01455600
.*-------------------------------------------------------------------   01455700
.***AM.LVER1                                                            01455800
                      AIF  (&XPLISTVER LT 4).ZL145L                     01455900
.*-------------------------------------------------------------------   01456000
.*-------------------------------------------------------------------   01456100
.***AM.L09  XKREMPTY F                                                  01456200
&ZOPN                 SETA &ZOPN+1                                      01456300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKREMPTY'                         01456400
&ZOPO(&ZOPN)          SETC 'DS'                                         01456500
&ZOPV(&ZOPN)          SETC 'F'                                          01456600
&ZOPD(&ZOPN)          SETC '++ &ZXKREMPTY '                             01456700
.*-------------------------------------------------------------------   01456800
.***AM.LVER2                                                            01456900
.ZL145L               ANOP  ,                                           01457000
.*-------------------------------------------------------------------   01457100
.*-------------------------------------------------------------------   01457200
.***AM.LVER1                                                            01457300
                      AIF  (&XPLISTVER LT 4).ZL146L                     01457400
.*-------------------------------------------------------------------   01457500
.*-------------------------------------------------------------------   01457600
.***AM.L09  XKRNOTEMPTY F                                               01457700
&ZOPN                 SETA &ZOPN+1                                      01457800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKRNOTEMPTY'                      01457900
&ZOPO(&ZOPN)          SETC 'DS'                                         01458000
&ZOPV(&ZOPN)          SETC 'F'                                          01458100
&ZOPD(&ZOPN)          SETC '++ &ZXKRNOTEMPTY '                          01458200
.*-------------------------------------------------------------------   01458300
.***AM.LVER2                                                            01458400
.ZL146L               ANOP  ,                                           01458500
.*-------------------------------------------------------------------   01458600
.*-------------------------------------------------------------------   01458700
.***AM.LVER1                                                            01458800
                      AIF  (&XPLISTVER LT 4).ZL147L                     01458900
.*-------------------------------------------------------------------   01459000
.*-------------------------------------------------------------------   01459100
.***AM.L09  XLISTEMPTY F                                                01459200
&ZOPN                 SETA &ZOPN+1                                      01459300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTEMPTY'                       01459400
&ZOPO(&ZOPN)          SETC 'DS'                                         01459500
&ZOPV(&ZOPN)          SETC 'F'                                          01459600
&ZOPD(&ZOPN)          SETC '++ &ZXLISTEMPTY '                           01459700
.*-------------------------------------------------------------------   01459800
.***AM.LVER2                                                            01459900
.ZL147L               ANOP  ,                                           01460000
.*-------------------------------------------------------------------   01460100
.*-------------------------------------------------------------------   01460200
.***AM.LVER1                                                            01460300
                      AIF  (&XPLISTVER LT 4).ZL148L                     01460400
.*-------------------------------------------------------------------   01460500
.*-------------------------------------------------------------------   01460600
.***AM.L09  XLISTNOTEMPTY F                                             01460700
&ZOPN                 SETA &ZOPN+1                                      01460800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNOTEMPTY'                    01460900
&ZOPO(&ZOPN)          SETC 'DS'                                         01461000
&ZOPV(&ZOPN)          SETC 'F'                                          01461100
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNOTEMPTY '                        01461200
.*-------------------------------------------------------------------   01461300
.***AM.LVER2                                                            01461400
.ZL148L               ANOP  ,                                           01461500
.*-------------------------------------------------------------------   01461600
.*-------------------------------------------------------------------   01461700
.***AM.LVER1                                                            01461800
                      AIF  (&XPLISTVER LT 2).ZL149L                     01461900
.*-------------------------------------------------------------------   01462000
.*-------------------------------------------------------------------   01462100
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01462200
&ZOPN                 SETA &ZOPN+1                                      01462300
&ZOPL(&ZOPN)          SETC ' '                                          01462400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01462500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01462600
&ZOPD(&ZOPN)          SETC ' '                                          01462700
.*-------------------------------------------------------------------   01462800
.***AM.LVER2                                                            01462900
.ZL149L               ANOP  ,                                           01463000
.*-------------------------------------------------------------------   01463100
.*-------------------------------------------------------------------   01463200
.***AM.LVER1                                                            01463300
                      AIF  (&XPLISTVER LT 2).ZL150L                     01463400
.*-------------------------------------------------------------------   01463500
.*-------------------------------------------------------------------   01463600
.***AM.L09  XRSV16REV CL6                                               01463700
&ZOPN                 SETA &ZOPN+1                                      01463800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16REV'                        01463900
&ZOPO(&ZOPN)          SETC 'DS'                                         01464000
&ZOPV(&ZOPN)          SETC 'CL6'                                        01464100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01464200
.*-------------------------------------------------------------------   01464300
.***AM.LVER2                                                            01464400
.ZL150L               ANOP  ,                                           01464500
.*-------------------------------------------------------------------   01464600
.*-------------------------------------------------------------------   01464700
.***AM.LVER1                                                            01464800
                      AIF  (&XPLISTVER LT 2).ZL151L                     01464900
.*-------------------------------------------------------------------   01465000
.*-------------------------------------------------------------------   01465100
.***AM.L09  XFL22REV BL.8                                               01465200
&ZOPN                 SETA &ZOPN+1                                      01465300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22REV'                         01465400
&ZOPO(&ZOPN)          SETC 'DS'                                         01465500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01465600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01465700
.*-------------------------------------------------------------------   01465800
.***AM.LVER2                                                            01465900
.ZL151L               ANOP  ,                                           01466000
.*-------------------------------------------------------------------   01466100
.*-------------------------------------------------------------------   01466200
.***AM.LVER1                                                            01466300
                      AIF  (&XPLISTVER LT 2).ZL152L                     01466400
.*-------------------------------------------------------------------   01466500
.*-------------------------------------------------------------------   01466600
.***AM.L09  XUIDREV XL1                                                 01466700
&ZOPN                 SETA &ZOPN+1                                      01466800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDREV'                          01466900
&ZOPO(&ZOPN)          SETC 'DS'                                         01467000
&ZOPV(&ZOPN)          SETC 'XL1'                                        01467100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01467200
.*-------------------------------------------------------------------   01467300
.***AM.LVER2                                                            01467400
.ZL152L               ANOP  ,                                           01467500
.*-------------------------------------------------------------------   01467600
.*-------------------------------------------------------------------   01467700
.***AM.LVER1                                                            01467800
                      AIF  (&XPLISTVER LT 2).ZL153L                     01467900
.*-------------------------------------------------------------------   01468000
.*-------------------------------------------------------------------   01468100
.***AM.L09  XRSV24REV CL8                                               01468200
&ZOPN                 SETA &ZOPN+1                                      01468300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24REV'                        01468400
&ZOPO(&ZOPN)          SETC 'DS'                                         01468500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01468600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01468700
.*-------------------------------------------------------------------   01468800
.***AM.LVER2                                                            01468900
.ZL153L               ANOP  ,                                           01469000
.*-------------------------------------------------------------------   01469100
.*-------------------------------------------------------------------   01469200
.***AM.LVER1                                                            01469300
                      AIF  (&XPLISTVER LT 2).ZL154L                     01469400
.*-------------------------------------------------------------------   01469500
.*-------------------------------------------------------------------   01469600
.***AM.L09  XLISTNUMREV F                                               01469700
&ZOPN                 SETA &ZOPN+1                                      01469800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMREV'                      01469900
&ZOPO(&ZOPN)          SETC 'DS'                                         01470000
&ZOPV(&ZOPN)          SETC 'F'                                          01470100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01470200
.*-------------------------------------------------------------------   01470300
.***AM.LVER2                                                            01470400
.ZL154L               ANOP  ,                                           01470500
.*-------------------------------------------------------------------   01470600
.*-------------------------------------------------------------------   01470700
.***AM.LVER1                                                            01470800
                      AIF  (&XPLISTVER LT 2).ZL155L                     01470900
.*-------------------------------------------------------------------   01471000
.*-------------------------------------------------------------------   01471100
.***AM.L09  XRSV36REV CL28                                              01471200
&ZOPN                 SETA &ZOPN+1                                      01471300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV36REV'                        01471400
&ZOPO(&ZOPN)          SETC 'DS'                                         01471500
&ZOPV(&ZOPN)          SETC 'CL28'                                       01471600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01471700
.*-------------------------------------------------------------------   01471800
.***AM.LVER2                                                            01471900
.ZL155L               ANOP  ,                                           01472000
.*-------------------------------------------------------------------   01472100
.*-------------------------------------------------------------------   01472200
.***AM.LVER1                                                            01472300
                      AIF  (&XPLISTVER LT 2).ZL156L                     01472400
.*-------------------------------------------------------------------   01472500
.*-------------------------------------------------------------------   01472600
.***AM.L09  XENTRYKEYREV CL16                                           01472700
&ZOPN                 SETA &ZOPN+1                                      01472800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEYREV'                     01472900
&ZOPO(&ZOPN)          SETC 'DS'                                         01473000
&ZOPV(&ZOPN)          SETC 'CL16'                                       01473100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01473200
.*-------------------------------------------------------------------   01473300
.***AM.LVER2                                                            01473400
.ZL156L               ANOP  ,                                           01473500
.*-------------------------------------------------------------------   01473600
.*-------------------------------------------------------------------   01473700
.***AM.LVER1                                                            01473800
                      AIF  (&XPLISTVER LT 2).ZL157L                     01473900
.*-------------------------------------------------------------------   01474000
.*-------------------------------------------------------------------   01474100
.***AM.L09  XRSV80REV CL16                                              01474200
&ZOPN                 SETA &ZOPN+1                                      01474300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV80REV'                        01474400
&ZOPO(&ZOPN)          SETC 'DS'                                         01474500
&ZOPV(&ZOPN)          SETC 'CL16'                                       01474600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01474700
.*-------------------------------------------------------------------   01474800
.***AM.LVER2                                                            01474900
.ZL157L               ANOP  ,                                           01475000
.*-------------------------------------------------------------------   01475100
.*-------------------------------------------------------------------   01475200
.***AM.LVER1                                                            01475300
                      AIF  (&XPLISTVER LT 2).ZL158L                     01475400
.*-------------------------------------------------------------------   01475500
.*-------------------------------------------------------------------   01475600
.***AM.L09  XSECONDARYKEYREV CL32                                       01475700
&ZOPN                 SETA &ZOPN+1                                      01475800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEYREV'                 01475900
&ZOPO(&ZOPN)          SETC 'DS'                                         01476000
&ZOPV(&ZOPN)          SETC 'CL32'                                       01476100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01476200
.*-------------------------------------------------------------------   01476300
.***AM.LVER2                                                            01476400
.ZL158L               ANOP  ,                                           01476500
.*-------------------------------------------------------------------   01476600
.*-------------------------------------------------------------------   01476700
.***AM.LVER1                                                            01476800
                      AIF  (&XPLISTVER LT 2).ZL159L                     01476900
.*-------------------------------------------------------------------   01477000
.*-------------------------------------------------------------------   01477100
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01477200
&ZOPN                 SETA &ZOPN+1                                      01477300
&ZOPL(&ZOPN)          SETC ' '                                          01477400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01477500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01477600
&ZOPD(&ZOPN)          SETC ' '                                          01477700
.*-------------------------------------------------------------------   01477800
.***AM.LVER2                                                            01477900
.ZL159L               ANOP  ,                                           01478000
.*-------------------------------------------------------------------   01478100
.*-------------------------------------------------------------------   01478200
.***AM.LVER1                                                            01478300
                      AIF  (&XPLISTVER LT 2).ZL160L                     01478400
.*-------------------------------------------------------------------   01478500
.*-------------------------------------------------------------------   01478600
.***AM.L09  XRSV16EQ CL6                                                01478700
&ZOPN                 SETA &ZOPN+1                                      01478800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16EQ'                         01478900
&ZOPO(&ZOPN)          SETC 'DS'                                         01479000
&ZOPV(&ZOPN)          SETC 'CL6'                                        01479100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01479200
.*-------------------------------------------------------------------   01479300
.***AM.LVER2                                                            01479400
.ZL160L               ANOP  ,                                           01479500
.*-------------------------------------------------------------------   01479600
.*-------------------------------------------------------------------   01479700
.***AM.LVER1                                                            01479800
                      AIF  (&XPLISTVER LT 2).ZL161L                     01479900
.*-------------------------------------------------------------------   01480000
.*-------------------------------------------------------------------   01480100
.***AM.L09  XFL22DEQ BL.8                                               01480200
&ZOPN                 SETA &ZOPN+1                                      01480300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22DEQ'                         01480400
&ZOPO(&ZOPN)          SETC 'DS'                                         01480500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01480600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01480700
.*-------------------------------------------------------------------   01480800
.***AM.LVER2                                                            01480900
.ZL161L               ANOP  ,                                           01481000
.*-------------------------------------------------------------------   01481100
.*-------------------------------------------------------------------   01481200
.***AM.LVER1                                                            01481300
                      AIF  (&XPLISTVER LT 2).ZL162L                     01481400
.*-------------------------------------------------------------------   01481500
.*-------------------------------------------------------------------   01481600
.***AM.L09  XUIDDEQ XL1                                                 01481700
&ZOPN                 SETA &ZOPN+1                                      01481800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDDEQ'                          01481900
&ZOPO(&ZOPN)          SETC 'DS'                                         01482000
&ZOPV(&ZOPN)          SETC 'XL1'                                        01482100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01482200
.*-------------------------------------------------------------------   01482300
.***AM.LVER2                                                            01482400
.ZL162L               ANOP  ,                                           01482500
.*-------------------------------------------------------------------   01482600
.*-------------------------------------------------------------------   01482700
.***AM.LVER1                                                            01482800
                      AIF  (&XPLISTVER LT 2).ZL163L                     01482900
.*-------------------------------------------------------------------   01483000
.*-------------------------------------------------------------------   01483100
.***AM.L09  XRSV24DEQ CL121                                             01483200
&ZOPN                 SETA &ZOPN+1                                      01483300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24DEQ'                        01483400
&ZOPO(&ZOPN)          SETC 'DS'                                         01483500
&ZOPV(&ZOPN)          SETC 'CL121'                                      01483600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01483700
.*-------------------------------------------------------------------   01483800
.***AM.LVER2                                                            01483900
.ZL163L               ANOP  ,                                           01484000
.*-------------------------------------------------------------------   01484100
.*-------------------------------------------------------------------   01484200
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01484300
&ZOPN                 SETA &ZOPN+1                                      01484400
&ZOPL(&ZOPN)          SETC ' '                                          01484500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01484600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01484700
&ZOPD(&ZOPN)          SETC ' '                                          01484800
.*-------------------------------------------------------------------   01484900
.***AM.L09  XRSV16LM CL4                                                01485000
&ZOPN                 SETA &ZOPN+1                                      01485100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16LM'                         01485200
&ZOPO(&ZOPN)          SETC 'DS'                                         01485300
&ZOPV(&ZOPN)          SETC 'CL4'                                        01485400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01485500
.*-------------------------------------------------------------------   01485600
.***AM.L09  XRSV20LM CL1                                                01485700
&ZOPN                 SETA &ZOPN+1                                      01485800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV20LM'                         01485900
&ZOPO(&ZOPN)          SETC 'DS'                                         01486000
&ZOPV(&ZOPN)          SETC 'CL1'                                        01486100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01486200
.*-------------------------------------------------------------------   01486300
.***AM.L03 XFL21LM BL.8                                                 01486400
&ZOPN                 SETA &ZOPN+1                                      01486500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL21LM'                          01486600
&ZOPO(&ZOPN)          SETC 'DS'                                         01486700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01486800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01486900
.*                                                                      01487000
&ZOPN                 SETA  &ZOPN+1                                     01487100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMONITORTYPE_NOTFULL'            01487200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01487300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01487400
&ZOPD(&ZOPN)          SETC  '++ XMONITORTYPE.'                          01487500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTFULL'                      01487600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01487700
.*-------------------------------------------------------------------   01487800
.***AM.L03 XFL22LM BL.8                                                 01487900
&ZOPN                 SETA &ZOPN+1                                      01488000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22LM'                          01488100
&ZOPO(&ZOPN)          SETC 'DS'                                         01488200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01488300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01488400
.*                                                                      01488500
&ZOPN                 SETA  &ZOPN+1                                     01488600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_MONITOR_SUBLIST'        01488700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01488800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01488900
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              01489000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MONITOR_SUBLIST'              01489100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01489200
.*                                                                      01489300
&ZOPN                 SETA  &ZOPN+1                                     01489400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_MONITOR_EVENTQ'         01489500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01489600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01489700
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              01489800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MONITOR_EVENTQ'               01489900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01490000
.*                                                                      01490100
&ZOPN                 SETA  &ZOPN+1                                     01490200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACTION_START'                   01490300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01490400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01490500
&ZOPD(&ZOPN)          SETC  '++ XACTION.'                               01490600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).START'                        01490700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01490800
.*                                                                      01490900
&ZOPN                 SETA  &ZOPN+1                                     01491000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XNOTIFICATION_EVERY'             01491100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01491200
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01491300
&ZOPD(&ZOPN)          SETC  '++ XNOTIFICATION.'                         01491400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EVERY'                        01491500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01491600
.*                                                                      01491700
&ZOPN                 SETA  &ZOPN+1                                     01491800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDRIVEEXIT_YES'                  01491900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01492000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01492100
&ZOPD(&ZOPN)          SETC  '++ XDRIVEEXIT.'                            01492200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          01492300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01492400
.*-------------------------------------------------------------------   01492500
.***AM.L09  XUIDLM CL1                                                  01492600
&ZOPN                 SETA &ZOPN+1                                      01492700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDLM'                           01492800
&ZOPO(&ZOPN)          SETC 'DS'                                         01492900
&ZOPV(&ZOPN)          SETC 'CL1'                                        01493000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01493100
.*-------------------------------------------------------------------   01493200
.***AM.L09  XRSV24LM CL4                                                01493300
&ZOPN                 SETA &ZOPN+1                                      01493400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24LM'                         01493500
&ZOPO(&ZOPN)          SETC 'DS'                                         01493600
&ZOPV(&ZOPN)          SETC 'CL4'                                        01493700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01493800
.*-------------------------------------------------------------------   01493900
.***AM.L09  XVECTORINDEX F                                              01494000
&ZOPN                 SETA &ZOPN+1                                      01494100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVECTORINDEX'                     01494200
&ZOPO(&ZOPN)          SETC 'DS'                                         01494300
&ZOPV(&ZOPN)          SETC 'F'                                          01494400
&ZOPD(&ZOPN)          SETC '++ &ZXVECTORINDEX '                         01494500
.*-------------------------------------------------------------------   01494600
.***AM.L09  XLISTNUMLM F                                                01494700
&ZOPN                 SETA &ZOPN+1                                      01494800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMLM'                       01494900
&ZOPO(&ZOPN)          SETC 'DS'                                         01495000
&ZOPV(&ZOPN)          SETC 'F'                                          01495100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01495200
.*-------------------------------------------------------------------   01495300
.***AM.LVER1                                                            01495400
                      AIF  (&XPLISTVER LT 2).ZL179L                     01495500
.*-------------------------------------------------------------------   01495600
.*-------------------------------------------------------------------   01495700
.***AM.L09  XRSV36LM CL28                                               01495800
&ZOPN                 SETA &ZOPN+1                                      01495900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV36LM'                         01496000
&ZOPO(&ZOPN)          SETC 'DS'                                         01496100
&ZOPV(&ZOPN)          SETC 'CL28'                                       01496200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01496300
.*-------------------------------------------------------------------   01496400
.***AM.LVER2                                                            01496500
.ZL179L               ANOP  ,                                           01496600
.*-------------------------------------------------------------------   01496700
.*-------------------------------------------------------------------   01496800
.***AM.LVER1                                                            01496900
                      AIF  (&XPLISTVER LT 2).ZL180L                     01497000
.*-------------------------------------------------------------------   01497100
.*-------------------------------------------------------------------   01497200
.***AM.L09  XENTRYKEYLM CL16                                            01497300
&ZOPN                 SETA &ZOPN+1                                      01497400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEYLM'                      01497500
&ZOPO(&ZOPN)          SETC 'DS'                                         01497600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01497700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01497800
.*-------------------------------------------------------------------   01497900
.***AM.LVER2                                                            01498000
.ZL180L               ANOP  ,                                           01498100
.*-------------------------------------------------------------------   01498200
.*-------------------------------------------------------------------   01498300
.***AM.LVER1                                                            01498400
                      AIF  (&XPLISTVER LT 2).ZL181L                     01498500
.*-------------------------------------------------------------------   01498600
.*-------------------------------------------------------------------   01498700
.***AM.L09  XRSV80LM CL16                                               01498800
&ZOPN                 SETA &ZOPN+1                                      01498900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV80LM'                         01499000
&ZOPO(&ZOPN)          SETC 'DS'                                         01499100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01499200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01499300
.*-------------------------------------------------------------------   01499400
.***AM.LVER2                                                            01499500
.ZL181L               ANOP  ,                                           01499600
.*-------------------------------------------------------------------   01499700
.*-------------------------------------------------------------------   01499800
.***AM.LVER1                                                            01499900
                      AIF  (&XPLISTVER LT 2).ZL182L                     01500000
.*-------------------------------------------------------------------   01500100
.*-------------------------------------------------------------------   01500200
.***AM.L09  XSECONDARYKEYLM CL32                                        01500300
&ZOPN                 SETA &ZOPN+1                                      01500400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEYLM'                  01500500
&ZOPO(&ZOPN)          SETC 'DS'                                         01500600
&ZOPV(&ZOPN)          SETC 'CL32'                                       01500700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01500800
.*-------------------------------------------------------------------   01500900
.***AM.LVER2                                                            01501000
.ZL182L               ANOP  ,                                           01501100
.*-------------------------------------------------------------------   01501200
.*-------------------------------------------------------------------   01501300
.***AM.LVER1                                                            01501400
                      AIF  (&XPLISTVER LT 2).ZL183L                     01501500
.*-------------------------------------------------------------------   01501600
.*-------------------------------------------------------------------   01501700
.***AM.L09  XRSV128LM CL32                                              01501800
&ZOPN                 SETA &ZOPN+1                                      01501900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV128LM'                        01502000
&ZOPO(&ZOPN)          SETC 'DS'                                         01502100
&ZOPV(&ZOPN)          SETC 'CL32'                                       01502200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01502300
.*-------------------------------------------------------------------   01502400
.***AM.LVER2                                                            01502500
.ZL183L               ANOP  ,                                           01502600
.*-------------------------------------------------------------------   01502700
.*-------------------------------------------------------------------   01502800
.***AM.LVER1                                                            01502900
                      AIF  (&XPLISTVER LT 2).ZL184L                     01503000
.*-------------------------------------------------------------------   01503100
.*-------------------------------------------------------------------   01503200
.***AM.L09  XUNC CL16                                                   01503300
&ZOPN                 SETA &ZOPN+1                                      01503400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUNC'                             01503500
&ZOPO(&ZOPN)          SETC 'DS'                                         01503600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01503700
&ZOPD(&ZOPN)          SETC '++ &ZXUNC '                                 01503800
.*-------------------------------------------------------------------   01503900
.***AM.LVER2                                                            01504000
.ZL184L               ANOP  ,                                           01504100
.*-------------------------------------------------------------------   01504200
.*-------------------------------------------------------------------   01504300
.***AM.LVER1                                                            01504400
                      AIF  (&XPLISTVER LT 3).ZL185L                     01504500
.*-------------------------------------------------------------------   01504600
.*-------------------------------------------------------------------   01504700
.***AM.L09  XRSV176LM CL4                                               01504800
&ZOPN                 SETA &ZOPN+1                                      01504900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV176LM'                        01505000
&ZOPO(&ZOPN)          SETC 'DS'                                         01505100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01505200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01505300
.*-------------------------------------------------------------------   01505400
.***AM.LVER2                                                            01505500
.ZL185L               ANOP  ,                                           01505600
.*-------------------------------------------------------------------   01505700
.*-------------------------------------------------------------------   01505800
.***AM.LVER1                                                            01505900
                      AIF  (&XPLISTVER LT 2).ZL186L                     01506000
.*-------------------------------------------------------------------   01506100
.*-------------------------------------------------------------------   01506200
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01506300
&ZOPN                 SETA &ZOPN+1                                      01506400
&ZOPL(&ZOPN)          SETC ' '                                          01506500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01506600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01506700
&ZOPD(&ZOPN)          SETC ' '                                          01506800
.*-------------------------------------------------------------------   01506900
.***AM.LVER2                                                            01507000
.ZL186L               ANOP  ,                                           01507100
.*-------------------------------------------------------------------   01507200
.*-------------------------------------------------------------------   01507300
.***AM.LVER1                                                            01507400
                      AIF  (&XPLISTVER LT 2).ZL187L                     01507500
.*-------------------------------------------------------------------   01507600
.*-------------------------------------------------------------------   01507700
.***AM.L09  XRSV16MS CL4                                                01507800
&ZOPN                 SETA &ZOPN+1                                      01507900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16MS'                         01508000
&ZOPO(&ZOPN)          SETC 'DS'                                         01508100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01508200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01508300
.*-------------------------------------------------------------------   01508400
.***AM.LVER2                                                            01508500
.ZL187L               ANOP  ,                                           01508600
.*-------------------------------------------------------------------   01508700
.*-------------------------------------------------------------------   01508800
.***AM.LVER1                                                            01508900
                      AIF  (&XPLISTVER LT 2).ZL188L                     01509000
.*-------------------------------------------------------------------   01509100
.*-------------------------------------------------------------------   01509200
.***AM.L09  XRSV20MS CL2                                                01509300
&ZOPN                 SETA &ZOPN+1                                      01509400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV20MS'                         01509500
&ZOPO(&ZOPN)          SETC 'DS'                                         01509600
&ZOPV(&ZOPN)          SETC 'CL2'                                        01509700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01509800
.*-------------------------------------------------------------------   01509900
.***AM.LVER2                                                            01510000
.ZL188L               ANOP  ,                                           01510100
.*-------------------------------------------------------------------   01510200
.*-------------------------------------------------------------------   01510300
.***AM.LVER1                                                            01510400
                      AIF  (&XPLISTVER LT 2).ZL189L                     01510500
.*-------------------------------------------------------------------   01510600
.*-------------------------------------------------------------------   01510700
.***AM.L03 XFL22MS BL.8                                                 01510800
&ZOPN                 SETA &ZOPN+1                                      01510900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22MS'                          01511000
&ZOPO(&ZOPN)          SETC 'DS'                                         01511100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01511200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01511300
.*-------------------------------------------------------------------   01511400
.***AM.LVER2                                                            01511500
.ZL189L               ANOP  ,                                           01511600
.*-------------------------------------------------------------------   01511700
.*-------------------------------------------------------------------   01511800
.***AM.LVER1                                                            01511900
                      AIF  (&XPLISTVER LT 2).ZL190L                     01512000
.*-------------------------------------------------------------------   01512100
.*                                                                      01512200
&ZOPN                 SETA  &ZOPN+1                                     01512300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MOSVECTOR'               01512400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01512500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01512600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01512700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MOSVECTOR'                    01512800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01512900
.*-------------------------------------------------------------------   01513000
.***AM.LVER2                                                            01513100
.ZL190L               ANOP  ,                                           01513200
.*-------------------------------------------------------------------   01513300
.*-------------------------------------------------------------------   01513400
.***AM.LVER1                                                            01513500
                      AIF  (&XPLISTVER LT 2).ZL191L                     01513600
.*-------------------------------------------------------------------   01513700
.*-------------------------------------------------------------------   01513800
.***AM.L09  XUIDMS XL1                                                  01513900
&ZOPN                 SETA &ZOPN+1                                      01514000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDMS'                           01514100
&ZOPO(&ZOPN)          SETC 'DS'                                         01514200
&ZOPV(&ZOPN)          SETC 'XL1'                                        01514300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01514400
.*-------------------------------------------------------------------   01514500
.***AM.LVER2                                                            01514600
.ZL191L               ANOP  ,                                           01514700
.*-------------------------------------------------------------------   01514800
.*-------------------------------------------------------------------   01514900
.***AM.LVER1                                                            01515000
                      AIF  (&XPLISTVER LT 2).ZL192L                     01515100
.*-------------------------------------------------------------------   01515200
.*-------------------------------------------------------------------   01515300
.***AM.L09  XSTARTINDEX XL2                                             01515400
&ZOPN                 SETA &ZOPN+1                                      01515500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTINDEX'                      01515600
&ZOPO(&ZOPN)          SETC 'DS'                                         01515700
&ZOPV(&ZOPN)          SETC 'XL2'                                        01515800
&ZOPD(&ZOPN)          SETC '++ &ZXSTARTINDEX '                          01515900
.*-------------------------------------------------------------------   01516000
.***AM.LVER2                                                            01516100
.ZL192L               ANOP  ,                                           01516200
.*-------------------------------------------------------------------   01516300
.*-------------------------------------------------------------------   01516400
.***AM.LVER1                                                            01516500
                      AIF  (&XPLISTVER LT 2).ZL193L                     01516600
.*-------------------------------------------------------------------   01516700
.*-------------------------------------------------------------------   01516800
.***AM.L09  XENDINDEX XL2                                               01516900
&ZOPN                 SETA &ZOPN+1                                      01517000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDINDEX'                        01517100
&ZOPO(&ZOPN)          SETC 'DS'                                         01517200
&ZOPV(&ZOPN)          SETC 'XL2'                                        01517300
&ZOPD(&ZOPN)          SETC '++ &ZXENDINDEX '                            01517400
.*-------------------------------------------------------------------   01517500
.***AM.LVER2                                                            01517600
.ZL193L               ANOP  ,                                           01517700
.*-------------------------------------------------------------------   01517800
&ZOPN                 SETA &ZOPN+1                                      01517900
&ZOPL(&ZOPN)          SETC ' '                                          01518000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01518100
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01518200
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     01518300
.*-------------------------------------------------------------------   01518400
.***AM.L10 END OF IXLLSTC LIST PARAMETERS                               01518500
&ZOPN                 SETA &ZOPN+1                                      01518600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 01518700
&ZOPO(&ZOPN)          SETC 'EQU'                                        01518800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 01518900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         01519000
.*                                                                      01519100
&ZOPN                 SETA &ZOPN+1                                      01519200
&ZOPL(&ZOPN)          SETC ' '                                          01519300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      01519400
&ZOPV(&ZOPN)          SETC '1'                                          01519500
&ZOPD(&ZOPN)          SETC ' '                                          01519600
.*-------------------------------------------------------------------   01519700
.***AL.L12 IXLLSTC FMT=LIST MF=S!L PARAMETERS                           01519800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         01519900
.*                                                                      01520000
&ZOPN                 SETA  &ZOPN+1                                     01520100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01520200
&ZOPO(&ZOPN)          SETC  'DC'                                        01520300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01520400
&ZOPD(&ZOPN)          SETC  '++ IXLLSTC ARG PARMS'                      01520500
.*                                                                      01520600
.ZLMFSLX              ANOP  ,                                           01520700
.*-------------------------------------------------------------------   01520800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          01520900
&ZPLLEN               SETA 232                                          01521000
.*                                                                      01521100
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    01521200
&ZPLLEN               SETA 276                                          01521300
.ZLLEN2Z              ANOP  ,                                           01521400
.*                                                                      01521500
                      AIF  (&XPLISTVER LT 4).ZLLEN3Z                    01521600
&ZPLLEN               SETA 340                                          01521700
.ZLLEN3Z              ANOP  ,                                           01521800
.*                                                                      01521900
.******************************************************************     01522000
.***AI.L01 IXLLSTC FMT=LIST FILL IN PARAMETER AREA                      01522100
.******************************************************************     01522200
                      ACTR  10000                                       01522300
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01522400
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    01522500
&ZCVAL                SETC  'LAE'          XAX MODE                     01522600
.ZIMFXA               ANOP ,                                            01522700
.*                                                                      01522800
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01522900
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01523000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01523100
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01523200
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01523300
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01523400
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01523500
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01523600
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01523700
&ZOPN                 SETA  &ZOPN+1                                     01523800
&ZOPL(&ZOPN)          SETC  ' '                                         01523900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01524000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01524100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01524200
                      AGO   .ZIMFNX                                     01524300
.*                                                                      01524400
.ZIMFN2               ANOP ,                                            01524500
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     01524600
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     01524700
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  01524800
&ZOPN                 SETA  &ZOPN+1                                     01524900
&ZOPL(&ZOPN)          SETC  ' '                                         01525000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01525100
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  01525200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01525300
                      AGO   .ZIMFNX                                     01525400
.ZIMFNX1              ANOP ,                                            01525500
&ZOPN                 SETA  &ZOPN+1                                     01525600
&ZOPL(&ZOPN)          SETC  ' '                                         01525700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01525800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01525900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01526000
.ZIMFNX               ANOP ,                                            01526100
.********************************************************************   01526200
.***AI.L02 IXLLSTC FMT=LIST INITIALIZE PARAMETER AREA                   01526300
.********************************************************************   01526400
.***AI.L03 MF=(SLE)                                                     01526500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01526600
&ZAWRK                SETA  0                                           01526700
&ZN                   SETA  &ZPLLEN                                     01526800
.ZCLRCONT             AIF   (&ZN LE 256).ZCLRX                          01526900
.*                                                                      01527000
&ZOPN                 SETA  &ZOPN+1                                     01527100
&ZOPL(&ZOPN)          SETC  ' '                                         01527200
&ZOPO(&ZOPN)          SETC  'XC'                                        01527300
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(256,1),&ZAWRK.(1)'                 01527400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01527500
.*                                                                      01527600
&ZAWRK                SETA &ZAWRK+256                                   01527700
&ZN                   SETA  &ZN-256                                     01527800
                      AGO   .ZCLRCONT                                   01527900
.*                                                                      01528000
.ZCLRX                ANOP  ,                                           01528100
.*                                                                      01528200
&ZOPN                 SETA  &ZOPN+1                                     01528300
&ZOPL(&ZOPN)          SETC  ' '                                         01528400
&ZOPO(&ZOPN)          SETC  'XC'                                        01528500
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(&ZN,1),&ZAWRK.(1)'                 01528600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01528700
.ZIMFLX               ANOP  ,                                           01528800
.*-------------------------------------------------------------------   01528900
.***AI.LVER01                                                           01529000
                      AIF  (&XPLISTVER LT 1).ZI5Z                       01529100
.*-------------------------------------------------------------------   01529200
.***AI.LVER02                                                           01529300
.ZI5Z                 ANOP  ,                                           01529400
.*-------------------------------------------------------------------   01529500
.***AI.LVER01                                                           01529600
                      AIF  (&XPLISTVER LT 4).ZI6Z                       01529700
.*-------------------------------------------------------------------   01529800
.***AI.LVER02                                                           01529900
.ZI6Z                 ANOP  ,                                           01530000
.*-------------------------------------------------------------------   01530100
.***AI.LVER01                                                           01530200
                      AIF  (&XPLISTVER LT 1).ZI8Z                       01530300
.*-------------------------------------------------------------------   01530400
.***AI.LVER02                                                           01530500
.ZI8Z                 ANOP  ,                                           01530600
.*-------------------------------------------------------------------   01530700
.***AI.LVER01                                                           01530800
                      AIF  (&XPLISTVER LT 4).ZI10Z                      01530900
.*-------------------------------------------------------------------   01531000
.***AI.LVER02                                                           01531100
.ZI10Z                ANOP  ,                                           01531200
.*-------------------------------------------------------------------   01531300
.***AI.L04B XVERSION XL1                                                01531400
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    01531500
&ZOPN                 SETA  &ZOPN+1                                     01531600
&ZOPL(&ZOPN)          SETC  ' '                                         01531700
&ZOPO(&ZOPN)          SETC  'MVI'                                       01531800
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           01531900
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     01532000
.ZIMFVZ               ANOP  ,                                           01532100
.*-------------------------------------------------------------------   01532200
.***AI.L18  XBUFSTGKEY XL1                                              01532300
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').ZI17                    01532400
&ZXBUFSTGKEY          SETC  ''             RESET INPUT/OUTPUT           01532500
.ZI17                 ANOP  ,                                           01532600
.*-------------------------------------------------------------------   01532700
.***AI.L25  XBUFSTGKEY XL1                                              01532800
                      AIF   ('&ZXBUFSTGKEY' EQ '').ZI17E                01532900
                      AIF   ('&ZXBUFSTGKEY' EQ 'OUTPUT').ZI17E          01533000
&ZCGPR                SETC  '&XBUFSTGKEY'                               01533100
.*                                                                      01533200
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZI17B           01533300
&ZCGPR   SETC  '0('.'&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2).')'                01533400
                      AGO   .ZI17D                                      01533500
.ZI17B                ANOP  ,                                           01533600
.*                                                                      01533700
&ZC                   SETC  '&XBUFSTGKEY'(1,1)                          01533800
                      AIF   (T'&ZC NE 'N').ZI17D                        01533900
&ZC                   SETC  '&XBUFSTGKEY'                               01534000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI17D               01534100
&ZCGPR                SETC  '=BL1''&XBUFSTGKEY'''                       01534200
.*                                                                      01534300
.ZI17D                ANOP  ,                                           01534400
.*                                                                      01534500
&ZOPN                 SETA  &ZOPN+1                                     01534600
&ZOPL(&ZOPN)          SETC  ' '                                         01534700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01534800
&ZOPV(&ZOPN)          SETC  '9(1,1),&ZCGPR'                             01534900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSTGKEY XBUFSTGKEY'                01535000
.*                                                                      01535100
.ZI17E                ANOP  ,                                           01535200
.*-------------------------------------------------------------------   01535300
.***AI.L25  XANSLEN XL2                                                 01535400
                      AIF   ('&ZXANSLEN' EQ '').ZI18E                   01535500
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI18E             01535600
&ZCGPR                SETC  '&XANSLEN'                                  01535700
.*                                                                      01535800
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI18B              01535900
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      01536000
                      AGO   .ZI18D                                      01536100
.ZI18B                ANOP  ,                                           01536200
.*                                                                      01536300
&ZC                   SETC  '&XANSLEN'(1,1)                             01536400
                      AIF   (T'&ZC NE 'N').ZI18D                        01536500
&ZC                   SETC  '&XANSLEN'                                  01536600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI18D               01536700
&ZCGPR                SETC  '=AL2(&XANSLEN)'                            01536800
.*                                                                      01536900
.ZI18D                ANOP  ,                                           01537000
.*                                                                      01537100
&ZOPN                 SETA  &ZOPN+1                                     01537200
&ZOPL(&ZOPN)          SETC  ' '                                         01537300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01537400
&ZOPV(&ZOPN)          SETC  '10(2,1),&ZCGPR'                            01537500
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      01537600
.*                                                                      01537700
.ZI18E                ANOP  ,                                           01537800
.*-------------------------------------------------------------------   01537900
.***AI.L25  XCONTOKEN CL16                                              01538000
                      AIF   ('&ZXCONTOKEN' EQ '').ZI19E                 01538100
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI19E           01538200
&ZCGPR                SETC  '&XCONTOKEN'                                01538300
.*                                                                      01538400
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI19B            01538500
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  01538600
.ZI19B                ANOP  ,                                           01538700
.*                                                                      01538800
&ZOPN                 SETA  &ZOPN+1                                     01538900
&ZOPL(&ZOPN)          SETC  ' '                                         01539000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01539100
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           01539200
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  01539300
.*                                                                      01539400
.ZI19E                ANOP  ,                                           01539500
.*-------------------------------------------------------------------   01539600
.***AI.L18  XREQDATA CL8                                                01539700
         AIF   ('&XREQDATA' NE 'NO_REQDATA').ZI23                       01539800
&ZXREQDATA            SETC  ''             RESET INPUT/OUTPUT           01539900
.ZI23                 ANOP  ,                                           01540000
.*-------------------------------------------------------------------   01540100
.***AI.L25  XREQDATA CL8                                                01540200
                      AIF   ('&ZXREQDATA' EQ '').ZI23E                  01540300
                      AIF   ('&ZXREQDATA' EQ 'OUTPUT').ZI23E            01540400
&ZCGPR                SETC  '&XREQDATA'                                 01540500
.*                                                                      01540600
                      AIF   ('&XREQDATA'(1,1) NE '(').ZI23B             01540700
&ZCGPR   SETC  '0('.'&XREQDATA'(2,K'&XREQDATA-2).')'                    01540800
.ZI23B                ANOP  ,                                           01540900
.*                                                                      01541000
&ZOPN                 SETA  &ZOPN+1                                     01541100
&ZOPL(&ZOPN)          SETC  ' '                                         01541200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01541300
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            01541400
&ZOPD(&ZOPN)          SETC  '++ &ZXREQDATA XREQDATA'                    01541500
.*                                                                      01541600
.ZI23E                ANOP  ,                                           01541700
.*-------------------------------------------------------------------   01541800
.***AI.L18  XREQID CL8                                                  01541900
         AIF   ('&XREQID' NE 'NO_REQID').ZI24                           01542000
&ZXREQID              SETC  ''             RESET INPUT/OUTPUT           01542100
.ZI24                 ANOP  ,                                           01542200
.*-------------------------------------------------------------------   01542300
.***AI.L25  XREQID CL8                                                  01542400
                      AIF   ('&ZXREQID' EQ '').ZI24E                    01542500
                      AIF   ('&ZXREQID' EQ 'OUTPUT').ZI24E              01542600
&ZCGPR                SETC  '&XREQID'                                   01542700
.*                                                                      01542800
                      AIF   ('&XREQID'(1,1) NE '(').ZI24B               01542900
&ZCGPR   SETC  '0('.'&XREQID'(2,K'&XREQID-2).')'                        01543000
.ZI24B                ANOP  ,                                           01543100
.*                                                                      01543200
&ZOPN                 SETA  &ZOPN+1                                     01543300
&ZOPL(&ZOPN)          SETC  ' '                                         01543400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01543500
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            01543600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQID XREQID'                        01543700
.*                                                                      01543800
.ZI24E                ANOP  ,                                           01543900
.*-------------------------------------------------------------------   01544000
.***AI.L18  XLOCKDATA CL8                                               01544100
         AIF   ('&XLOCKDATA' NE 'NO_LOCKDATA').ZI25                     01544200
&ZXLOCKDATA           SETC  ''             RESET INPUT/OUTPUT           01544300
.ZI25                 ANOP  ,                                           01544400
.*-------------------------------------------------------------------   01544500
.***AI.L25  XLOCKDATA CL8                                               01544600
                      AIF   ('&ZXLOCKDATA' EQ '').ZI25E                 01544700
                      AIF   ('&ZXLOCKDATA' EQ 'OUTPUT').ZI25E           01544800
&ZCGPR                SETC  '&XLOCKDATA'                                01544900
.*                                                                      01545000
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZI25B            01545100
&ZCGPR   SETC  '0('.'&XLOCKDATA'(2,K'&XLOCKDATA-2).')'                  01545200
.ZI25B                ANOP  ,                                           01545300
.*                                                                      01545400
&ZOPN                 SETA  &ZOPN+1                                     01545500
&ZOPL(&ZOPN)          SETC  ' '                                         01545600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01545700
&ZOPV(&ZOPN)          SETC  '72(8,1),&ZCGPR'                            01545800
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKDATA XLOCKDATA'                  01545900
.*                                                                      01546000
.ZI25E                ANOP  ,                                           01546100
.*-------------------------------------------------------------------   01546200
.***AI.L05 XSHLFLGS1 BL1                                                01546300
&ZW                   SETC  ''                                          01546400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01546500
.*-------------------------------------------------------------------   01546600
.***AI.L08 XSHLFLGS1 "BUFFER"                                           01546700
.***      BL1'1XXXXXXX'                                                 01546800
         AIF   ('&BUFFER' EQ '').ZI31A                                  01546900
         AIF   ('&BUFFER' EQ 'NO_LOCKDATA').ZI31A                       01547000
&ZW                   SETC  '&ZW.1'                                     01547100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01547200
                      AGO   .ZI31C                                      01547300
.*                                                                      01547400
.ZI31A                ANOP  ,                                           01547500
&ZW                   SETC  '&ZW.0'                                     01547600
.ZI31C                ANOP  ,                                           01547700
.*-------------------------------------------------------------------   01547800
.***AI.L08 XSHLFLGS1 "BUFLIST"                                          01547900
.***      BL1'X1XXXXXX'                                                 01548000
         AIF   ('&BUFLIST' EQ '').ZI32A                                 01548100
         AIF   ('&BUFLIST' EQ 'NO_LOCKDATA').ZI32A                      01548200
&ZW                   SETC  '&ZW.1'                                     01548300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01548400
                      AGO   .ZI32C                                      01548500
.*                                                                      01548600
.ZI32A                ANOP  ,                                           01548700
&ZW                   SETC  '&ZW.0'                                     01548800
.ZI32C                ANOP  ,                                           01548900
.*-------------------------------------------------------------------   01549000
.***AI.L08 XSHLFLGS1 "ANSAREA"                                          01549100
.***      BL1'XXX1XXXX'                                                 01549200
         AIF   ('&ANSAREA' EQ '').ZI33A                                 01549300
&ZW                   SETC  '&ZW.01'                                    01549400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01549500
                      AGO   .ZI33C                                      01549600
.*                                                                      01549700
.ZI33A                ANOP  ,                                           01549800
&ZW                   SETC  '&ZW.00'                                    01549900
.ZI33C                ANOP  ,                                           01550000
.*-------------------------------------------------------------------   01550100
.***AI.L08 XSHLFLGS1 "NO"                                               01550200
.***      BL1'XXXX1XXX'                                                 01550300
         AIF   ('&XPAGEABLE' NE 'NO').ZI34A                             01550400
&ZW                   SETC  '&ZW.1'                                     01550500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01550600
                      AGO   .ZI34C                                      01550700
.*                                                                      01550800
.ZI34A                ANOP  ,                                           01550900
&ZW                   SETC  '&ZW.0'                                     01551000
.ZI34C                ANOP  ,                                           01551100
.*-------------------------------------------------------------------   01551200
.***AI.L08 XSHLFLGS1 "BUFSTGKEY"                                        01551300
.***      BL1'XXXXX1XX'                                                 01551400
         AIF   ('&BUFSTGKEY' EQ '').ZI35A                               01551500
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01551600
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01551700
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01551800
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01551900
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01552000
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01552100
&ZW                   SETC  '&ZW.1'                                     01552200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01552300
                      AGO   .ZI35C                                      01552400
.*                                                                      01552500
.ZI35A                ANOP  ,                                           01552600
&ZW                   SETC  '&ZW.0'                                     01552700
.ZI35C                ANOP  ,                                           01552800
.*-------------------------------------------------------------------   01552900
.***AI.L08 XSHLFLGS1 "REAL"                                             01553000
.***      BL1'XXXXXX1X'                                                 01553100
         AIF   ('&XBUFADDRTYPE' NE 'REAL').ZI36A                        01553200
&ZW                   SETC  '&ZW.10'                                    01553300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01553400
                      AGO   .ZI36C                                      01553500
.*                                                                      01553600
.ZI36A                ANOP  ,                                           01553700
&ZW                   SETC  '&ZW.00'                                    01553800
.ZI36C                ANOP  ,                                           01553900
.*-------------------------------------------------------------------   01554000
.***AI.L11 XSHLFLGS1 BL1                                                01554100
                      AIF   ('&ZCLNG' NE 'YES').ZI36E  ALL ZERO BITS    01554200
&ZOPN                 SETA  &ZOPN+1                                     01554300
&ZOPL(&ZOPN)          SETC  ' '                                         01554400
&ZOPO(&ZOPN)          SETC  'OI'                                        01554500
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             01554600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01554700
.ZI36E                ANOP  ,                                           01554800
.*-------------------------------------------------------------------   01554900
.***AI.L05 XSHLFLGS2 BL1                                                01555000
&ZW                   SETC  ''                                          01555100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01555200
.*-------------------------------------------------------------------   01555300
.***AI.L08 XSHLFLGS2 "SYNCECB"                                          01555400
.***      BL1'1XXXXXXX'                                                 01555500
         AIF   ('&XMODE' NE 'SYNCECB').ZI38A                            01555600
&ZW                   SETC  '&ZW.1'                                     01555700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01555800
                      AGO   .ZI38C                                      01555900
.*                                                                      01556000
.ZI38A                ANOP  ,                                           01556100
&ZW                   SETC  '&ZW.0'                                     01556200
.ZI38C                ANOP  ,                                           01556300
.*-------------------------------------------------------------------   01556400
.***AI.L08 XSHLFLGS2 "SYNCEXIT"                                         01556500
.***      BL1'X1XXXXXX'                                                 01556600
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI39A                           01556700
&ZW                   SETC  '&ZW.1'                                     01556800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01556900
                      AGO   .ZI39C                                      01557000
.*                                                                      01557100
.ZI39A                ANOP  ,                                           01557200
&ZW                   SETC  '&ZW.0'                                     01557300
.ZI39C                ANOP  ,                                           01557400
.*-------------------------------------------------------------------   01557500
.***AI.L08 XSHLFLGS2 "SYNCTOKEN"                                        01557600
.***      BL1'XX1XXXXX'                                                 01557700
         AIF   ('&XMODE' NE 'SYNCTOKEN').ZI40A                          01557800
&ZW                   SETC  '&ZW.1'                                     01557900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01558000
                      AGO   .ZI40C                                      01558100
.*                                                                      01558200
.ZI40A                ANOP  ,                                           01558300
&ZW                   SETC  '&ZW.0'                                     01558400
.ZI40C                ANOP  ,                                           01558500
.*-------------------------------------------------------------------   01558600
.***AI.L08 XSHLFLGS2 "ASYNCECB"                                         01558700
.***      BL1'XXX1XXXX'                                                 01558800
         AIF   ('&XMODE' NE 'ASYNCECB').ZI41A                           01558900
&ZW                   SETC  '&ZW.1'                                     01559000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01559100
                      AGO   .ZI41C                                      01559200
.*                                                                      01559300
.ZI41A                ANOP  ,                                           01559400
&ZW                   SETC  '&ZW.0'                                     01559500
.ZI41C                ANOP  ,                                           01559600
.*-------------------------------------------------------------------   01559700
.***AI.L08 XSHLFLGS2 "ASYNCEXIT"                                        01559800
.***      BL1'XXXX1XXX'                                                 01559900
         AIF   ('&XMODE' NE 'ASYNCEXIT').ZI42A                          01560000
&ZW                   SETC  '&ZW.1'                                     01560100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01560200
                      AGO   .ZI42C                                      01560300
.*                                                                      01560400
.ZI42A                ANOP  ,                                           01560500
&ZW                   SETC  '&ZW.0'                                     01560600
.ZI42C                ANOP  ,                                           01560700
.*-------------------------------------------------------------------   01560800
.***AI.L08 XSHLFLGS2 "ASYNCTOKEN"                                       01560900
.***      BL1'XXXXX1XX'                                                 01561000
         AIF   ('&XMODE' NE 'ASYNCTOKEN').ZI43A                         01561100
&ZW                   SETC  '&ZW.1'                                     01561200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01561300
                      AGO   .ZI43C                                      01561400
.*                                                                      01561500
.ZI43A                ANOP  ,                                           01561600
&ZW                   SETC  '&ZW.0'                                     01561700
.ZI43C                ANOP  ,                                           01561800
.*-------------------------------------------------------------------   01561900
.***AI.L08 XSHLFLGS2 "ASYNCNORESPONSE"                                  01562000
.***      BL1'XXXXXX1X'                                                 01562100
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ZI44A                    01562200
&ZW                   SETC  '&ZW.10'                                    01562300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01562400
                      AGO   .ZI44C                                      01562500
.*                                                                      01562600
.ZI44A                ANOP  ,                                           01562700
&ZW                   SETC  '&ZW.00'                                    01562800
.ZI44C                ANOP  ,                                           01562900
.*-------------------------------------------------------------------   01563000
.***AI.L11 XSHLFLGS2 BL1                                                01563100
                      AIF   ('&ZCLNG' NE 'YES').ZI44E  ALL ZERO BITS    01563200
&ZOPN                 SETA  &ZOPN+1                                     01563300
&ZOPL(&ZOPN)          SETC  ' '                                         01563400
&ZOPO(&ZOPN)          SETC  'OI'                                        01563500
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             01563600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01563700
.ZI44E                ANOP  ,                                           01563800
.*-------------------------------------------------------------------   01563900
.***AI.L05 XSHLFLGS3 BL1                                                01564000
&ZW                   SETC  ''                                          01564100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01564200
.*-------------------------------------------------------------------   01564300
.***AI.L08 XSHLFLGS3 "SET"                                              01564400
.***      BL1'1XXXXXXX'                                                 01564500
         AIF   ('&XLOCKOPER' NE 'SET').ZI46A                            01564600
&ZW                   SETC  '&ZW.1'                                     01564700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01564800
                      AGO   .ZI46C                                      01564900
.*                                                                      01565000
.ZI46A                ANOP  ,                                           01565100
&ZW                   SETC  '&ZW.0'                                     01565200
.ZI46C                ANOP  ,                                           01565300
.*-------------------------------------------------------------------   01565400
.***AI.L08 XSHLFLGS3 "RESET"                                            01565500
.***      BL1'X1XXXXXX'                                                 01565600
         AIF   ('&XLOCKOPER' NE 'RESET').ZI47A                          01565700
&ZW                   SETC  '&ZW.1'                                     01565800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01565900
                      AGO   .ZI47C                                      01566000
.*                                                                      01566100
.ZI47A                ANOP  ,                                           01566200
&ZW                   SETC  '&ZW.0'                                     01566300
.ZI47C                ANOP  ,                                           01566400
.*-------------------------------------------------------------------   01566500
.***AI.L08 XSHLFLGS3 "TEST"                                             01566600
.***      BL1'XXXX1XXX'                                                 01566700
         AIF   ('&XLOCKOPER' NE 'TEST').ZI48A                           01566800
&ZW                   SETC  '&ZW.001'                                   01566900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01567000
                      AGO   .ZI48C                                      01567100
.*                                                                      01567200
.ZI48A                ANOP  ,                                           01567300
&ZW                   SETC  '&ZW.000'                                   01567400
.ZI48C                ANOP  ,                                           01567500
.*-------------------------------------------------------------------   01567600
.***AI.L08 XSHLFLGS3 "READNEXT"                                         01567700
.***      BL1'XXXXX1XX'                                                 01567800
         AIF   ('&XLOCKOPER' NE 'READNEXT').ZI49A                       01567900
&ZW                   SETC  '&ZW.1'                                     01568000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01568100
                      AGO   .ZI49C                                      01568200
.*                                                                      01568300
.ZI49A                ANOP  ,                                           01568400
&ZW                   SETC  '&ZW.0'                                     01568500
.ZI49C                ANOP  ,                                           01568600
.*-------------------------------------------------------------------   01568700
.***AI.L08 XSHLFLGS3 "COND"                                             01568800
.***      BL1'XXXXXX1X'                                                 01568900
         AIF   ('&XLOCKMODE' NE 'COND').ZI50A                           01569000
&ZW                   SETC  '&ZW.1'                                     01569100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01569200
                      AGO   .ZI50C                                      01569300
.*                                                                      01569400
.ZI50A                ANOP  ,                                           01569500
&ZW                   SETC  '&ZW.0'                                     01569600
.ZI50C                ANOP  ,                                           01569700
.*-------------------------------------------------------------------   01569800
.***AI.L08 XSHLFLGS3 "LOCKCOMP"                                         01569900
.***      BL1'XXXXXXX1'                                                 01570000
         AIF   ('&LOCKCOMP' EQ '').ZI51A                                01570100
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01570200
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01570300
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01570400
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01570500
&ZW                   SETC  '&ZW.1'                                     01570600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01570700
                      AGO   .ZI51C                                      01570800
.*                                                                      01570900
.ZI51A                ANOP  ,                                           01571000
&ZW                   SETC  '&ZW.0'                                     01571100
.ZI51C                ANOP  ,                                           01571200
.*-------------------------------------------------------------------   01571300
.***AI.L11 XSHLFLGS3 BL1                                                01571400
                      AIF   ('&ZCLNG' NE 'YES').ZI51E  ALL ZERO BITS    01571500
&ZOPN                 SETA  &ZOPN+1                                     01571600
&ZOPL(&ZOPN)          SETC  ' '                                         01571700
&ZOPO(&ZOPN)          SETC  'OI'                                        01571800
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             01571900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01572000
.ZI51E                ANOP  ,                                           01572100
.*-------------------------------------------------------------------   01572200
.***AI.L05 XSHLFLGS4 BL1                                                01572300
&ZW                   SETC  ''                                          01572400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01572500
.*-------------------------------------------------------------------   01572600
.***AI.L08 XSHLFLGS4 "64"                                               01572700
.***      BL1'XXX1XXXX'                                                 01572800
         AIF   ('&XBUFADDRSIZE' NE '64').ZI53A                          01572900
&ZW                   SETC  '&ZW.0001'                                  01573000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01573100
                      AGO   .ZI53C                                      01573200
.*                                                                      01573300
.ZI53A                ANOP  ,                                           01573400
&ZW                   SETC  '&ZW.0000'                                  01573500
.ZI53C                ANOP  ,                                           01573600
.*-------------------------------------------------------------------   01573700
.***AI.L08 XSHLFLGS4 "LIST"                                             01573800
.***      BL1'XXXXXXX1'                                                 01573900
&ZW                   SETC  '&ZW.0000'                                  01574000
.*-------------------------------------------------------------------   01574100
.***AI.L11 XSHLFLGS4 BL1                                                01574200
                      AIF   ('&ZCLNG' NE 'YES').ZI54E  ALL ZERO BITS    01574300
&ZOPN                 SETA  &ZOPN+1                                     01574400
&ZOPL(&ZOPN)          SETC  ' '                                         01574500
&ZOPO(&ZOPN)          SETC  'OI'                                        01574600
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             01574700
&ZOPD(&ZOPN)          SETC  '++ 459 BL1'                                01574800
.ZI54E                ANOP  ,                                           01574900
.*-------------------------------------------------------------------   01575000
.***AI.L23 ALET XBUFFER F                                               01575100
         AIF   ('&ZXBUFFER' EQ '').ZI60G                                01575200
         AIF   ('&SYSASCE' EQ 'P').ZI60G   SYSSTATE PRIMARY             01575300
&ZCLNG                SETC  '&XBUFFER'                                  01575400
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI60E  IN AR                    01575500
.*                                                                      01575600
&ZCGPR                SETC  '14'                                        01575700
&ZOPN                 SETA  &ZOPN+1                                     01575800
&ZOPL(&ZOPN)          SETC  ' '                                         01575900
&ZOPO(&ZOPN)          SETC  'LAE'                                       01576000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01576100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01576200
                      AGO   .ZI60F                                      01576300
.*                                                                      01576400
.ZI60E                ANOP  ,                                           01576500
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01576600
.*                                                                      01576700
.ZI60F                ANOP  ,                                           01576800
.*                                                                      01576900
&ZOPN                 SETA  &ZOPN+1                                     01577000
&ZOPL(&ZOPN)          SETC  ' '                                         01577100
&ZOPO(&ZOPN)          SETC  'STAM'                                      01577200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,28(1)'                       01577300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01577400
.*                                                                      01577500
.ZI60G                ANOP  ,                                           01577600
.*-------------------------------------------------------------------   01577700
.***AI.L25  XBUFSIZE F                                                  01577800
                      AIF   ('&ZXBUFSIZE' EQ '').ZI61E                  01577900
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI61E            01578000
&ZCGPR                SETC  '&XBUFSIZE'                                 01578100
.*                                                                      01578200
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI61B             01578300
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    01578400
                      AGO   .ZI61D                                      01578500
.ZI61B                ANOP  ,                                           01578600
.*                                                                      01578700
&ZC                   SETC  '&XBUFSIZE'(1,1)                            01578800
                      AIF   (T'&ZC NE 'N').ZI61D                        01578900
&ZC                   SETC  '&XBUFSIZE'                                 01579000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI61D               01579100
&ZCGPR                SETC  '=AL4(&XBUFSIZE)'                           01579200
.*                                                                      01579300
.ZI61D                ANOP  ,                                           01579400
.*                                                                      01579500
&ZOPN                 SETA  &ZOPN+1                                     01579600
&ZOPL(&ZOPN)          SETC  ' '                                         01579700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01579800
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            01579900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    01580000
.*                                                                      01580100
.ZI61E                ANOP  ,                                           01580200
.*-------------------------------------------------------------------   01580300
.***AI.L19  XBUFFER A                                                   01580400
                      AIF   ('&ZXBUFFER' EQ '').ZI62H                   01580500
&ZCLNG                SETC  '&XBUFFER'                                  01580600
&ZCGPR                SETC  '14'                                        01580700
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI62F  IN GPR                   01580800
.*                                                                      01580900
&ZOPN                 SETA  &ZOPN+1                                     01581000
&ZOPL(&ZOPN)          SETC  ' '                                         01581100
&ZOPO(&ZOPN)          SETC  'LA'                                        01581200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01581300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01581400
.*                                                                      01581500
                      AGO   .ZI62G                                      01581600
.*                                                                      01581700
.ZI62F                ANOP  ,                                           01581800
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01581900
.*                                                                      01582000
.ZI62G                ANOP  ,                                           01582100
.*                                                                      01582200
&ZOPN                 SETA  &ZOPN+1                                     01582300
&ZOPL(&ZOPN)          SETC  ' '                                         01582400
&ZOPO(&ZOPN)          SETC  'ST'                                        01582500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01582600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01582700
.*                                                                      01582800
.ZI62H                ANOP  ,                                           01582900
.*-------------------------------------------------------------------   01583000
.***AI.L18  XBUFALET F                                                  01583100
         AIF   ('&XBUFALET' NE 'NO_BUFALET').ZI64                       01583200
&ZXBUFALET            SETC  ''             RESET INPUT/OUTPUT           01583300
.ZI64                 ANOP  ,                                           01583400
.*-------------------------------------------------------------------   01583500
.***AI.L25  XBUFALET F                                                  01583600
                      AIF   ('&ZXBUFALET' EQ '').ZI64E                  01583700
                      AIF   ('&ZXBUFALET' EQ 'OUTPUT').ZI64E            01583800
&ZCGPR                SETC  '&XBUFALET'                                 01583900
.*                                                                      01584000
                      AIF   ('&XBUFALET'(1,1) NE '(').ZI64B             01584100
&ZCGPR   SETC  '0('.'&XBUFALET'(2,K'&XBUFALET-2).')'                    01584200
                      AGO   .ZI64D                                      01584300
.ZI64B                ANOP  ,                                           01584400
.*                                                                      01584500
&ZC                   SETC  '&XBUFALET'(1,1)                            01584600
                      AIF   (T'&ZC NE 'N').ZI64D                        01584700
&ZC                   SETC  '&XBUFALET'                                 01584800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI64D               01584900
&ZCGPR                SETC  '=AL4(&XBUFALET)'                           01585000
.*                                                                      01585100
.ZI64D                ANOP  ,                                           01585200
.*                                                                      01585300
&ZOPN                 SETA  &ZOPN+1                                     01585400
&ZOPL(&ZOPN)          SETC  ' '                                         01585500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01585600
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            01585700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFALET XBUFALET'                    01585800
.*                                                                      01585900
.ZI64E                ANOP  ,                                           01586000
.*-------------------------------------------------------------------   01586100
.***AI.L23 ALET XBUFLIST F                                              01586200
         AIF   ('&ZXBUFLIST' EQ '').ZI65G                               01586300
         AIF   ('&SYSASCE' EQ 'P').ZI65G   SYSSTATE PRIMARY             01586400
&ZCLNG                SETC  '&XBUFLIST'                                 01586500
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI65E  IN AR                   01586600
.*                                                                      01586700
&ZCGPR                SETC  '14'                                        01586800
&ZOPN                 SETA  &ZOPN+1                                     01586900
&ZOPL(&ZOPN)          SETC  ' '                                         01587000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01587100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01587200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01587300
                      AGO   .ZI65F                                      01587400
.*                                                                      01587500
.ZI65E                ANOP  ,                                           01587600
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01587700
.*                                                                      01587800
.ZI65F                ANOP  ,                                           01587900
.*                                                                      01588000
&ZOPN                 SETA  &ZOPN+1                                     01588100
&ZOPL(&ZOPN)          SETC  ' '                                         01588200
&ZOPO(&ZOPN)          SETC  'STAM'                                      01588300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,32(1)'                       01588400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01588500
.*                                                                      01588600
.ZI65G                ANOP  ,                                           01588700
.*-------------------------------------------------------------------   01588800
.***AI.L19  XBUFLIST A                                                  01588900
                      AIF   ('&ZXBUFLIST' EQ '').ZI66H                  01589000
&ZCLNG                SETC  '&XBUFLIST'                                 01589100
&ZCGPR                SETC  '14'                                        01589200
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI66F  IN GPR                  01589300
         AIF   ('&SYSASCE' NE 'P').ZI66G   SYSSTATE PRIMARY             01589400
.*                                                                      01589500
&ZOPN                 SETA  &ZOPN+1                                     01589600
&ZOPL(&ZOPN)          SETC  ' '                                         01589700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01589800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01589900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01590000
.*                                                                      01590100
                      AGO   .ZI66G                                      01590200
.*                                                                      01590300
.ZI66F                ANOP  ,                                           01590400
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01590500
.*                                                                      01590600
.ZI66G                ANOP  ,                                           01590700
.*                                                                      01590800
&ZOPN                 SETA  &ZOPN+1                                     01590900
&ZOPL(&ZOPN)          SETC  ' '                                         01591000
&ZOPO(&ZOPN)          SETC  'ST'                                        01591100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01591200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01591300
.*                                                                      01591400
.ZI66H                ANOP  ,                                           01591500
.*-------------------------------------------------------------------   01591600
.***AI.L23 ALET XMOSVECTOR F                                            01591700
         AIF   ('&ZXMOSVECTOR' EQ '').ZI68G                             01591800
         AIF   ('&SYSASCE' EQ 'P').ZI68G   SYSSTATE PRIMARY             01591900
&ZCLNG                SETC  '&XMOSVECTOR'                               01592000
         AIF   ('&XMOSVECTOR'(1,1) EQ '(').ZI68E  IN AR                 01592100
.*                                                                      01592200
&ZCGPR                SETC  '14'                                        01592300
&ZOPN                 SETA  &ZOPN+1                                     01592400
&ZOPL(&ZOPN)          SETC  ' '                                         01592500
&ZOPO(&ZOPN)          SETC  'LAE'                                       01592600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01592700
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01592800
                      AGO   .ZI68F                                      01592900
.*                                                                      01593000
.ZI68E                ANOP  ,                                           01593100
&ZCGPR   SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)                         01593200
.*                                                                      01593300
.ZI68F                ANOP  ,                                           01593400
.*                                                                      01593500
&ZOPN                 SETA  &ZOPN+1                                     01593600
&ZOPL(&ZOPN)          SETC  ' '                                         01593700
&ZOPO(&ZOPN)          SETC  'STAM'                                      01593800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01593900
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01594000
.*                                                                      01594100
.ZI68G                ANOP  ,                                           01594200
.*-------------------------------------------------------------------   01594300
.***AI.L19  XMOSVECTOR A                                                01594400
                      AIF   ('&ZXMOSVECTOR' EQ '').ZI69H                01594500
&ZCLNG                SETC  '&XMOSVECTOR'                               01594600
&ZCGPR                SETC  '14'                                        01594700
         AIF   ('&XMOSVECTOR'(1,1) EQ '(').ZI69F  IN GPR                01594800
         AIF   ('&SYSASCE' NE 'P').ZI69G   SYSSTATE PRIMARY             01594900
.*                                                                      01595000
&ZOPN                 SETA  &ZOPN+1                                     01595100
&ZOPL(&ZOPN)          SETC  ' '                                         01595200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01595300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01595400
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01595500
.*                                                                      01595600
                      AGO   .ZI69G                                      01595700
.*                                                                      01595800
.ZI69F                ANOP  ,                                           01595900
&ZCGPR   SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)                         01596000
.*                                                                      01596100
.ZI69G                ANOP  ,                                           01596200
.*                                                                      01596300
&ZOPN                 SETA  &ZOPN+1                                     01596400
&ZOPL(&ZOPN)          SETC  ' '                                         01596500
&ZOPO(&ZOPN)          SETC  'ST'                                        01596600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01596700
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01596800
.*                                                                      01596900
.ZI69H                ANOP  ,                                           01597000
.*-------------------------------------------------------------------   01597100
.***AI.L23 ALET XANSAREA F                                              01597200
         AIF   ('&ZXANSAREA' EQ '').ZI71G                               01597300
         AIF   ('&SYSASCE' EQ 'P').ZI71G   SYSSTATE PRIMARY             01597400
&ZCLNG                SETC  '&XANSAREA'                                 01597500
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI71E  IN AR                   01597600
.*                                                                      01597700
&ZCGPR                SETC  '14'                                        01597800
&ZOPN                 SETA  &ZOPN+1                                     01597900
&ZOPL(&ZOPN)          SETC  ' '                                         01598000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01598100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01598200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01598300
                      AGO   .ZI71F                                      01598400
.*                                                                      01598500
.ZI71E                ANOP  ,                                           01598600
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01598700
.*                                                                      01598800
.ZI71F                ANOP  ,                                           01598900
.*                                                                      01599000
&ZOPN                 SETA  &ZOPN+1                                     01599100
&ZOPL(&ZOPN)          SETC  ' '                                         01599200
&ZOPO(&ZOPN)          SETC  'STAM'                                      01599300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       01599400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01599500
.*                                                                      01599600
.ZI71G                ANOP  ,                                           01599700
.*-------------------------------------------------------------------   01599800
.***AI.L19  XANSAREA A                                                  01599900
                      AIF   ('&ZXANSAREA' EQ '').ZI72H                  01600000
&ZCLNG                SETC  '&XANSAREA'                                 01600100
&ZCGPR                SETC  '14'                                        01600200
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI72F  IN GPR                  01600300
         AIF   ('&SYSASCE' NE 'P').ZI72G   SYSSTATE PRIMARY             01600400
.*                                                                      01600500
&ZOPN                 SETA  &ZOPN+1                                     01600600
&ZOPL(&ZOPN)          SETC  ' '                                         01600700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01600800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01600900
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01601000
.*                                                                      01601100
                      AGO   .ZI72G                                      01601200
.*                                                                      01601300
.ZI72F                ANOP  ,                                           01601400
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01601500
.*                                                                      01601600
.ZI72G                ANOP  ,                                           01601700
.*                                                                      01601800
&ZOPN                 SETA  &ZOPN+1                                     01601900
&ZOPL(&ZOPN)          SETC  ' '                                         01602000
&ZOPO(&ZOPN)          SETC  'ST'                                        01602100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             01602200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01602300
.*                                                                      01602400
.ZI72H                ANOP  ,                                           01602500
.*-------------------------------------------------------------------   01602600
.***AI.L25  XREQECB AL4                                                 01602700
                      AIF   ('&ZXREQECB' EQ '').ZI74E                   01602800
                      AIF   ('&ZXREQECB' EQ 'OUTPUT').ZI74E             01602900
&ZCGPR                SETC  '&XREQECB'                                  01603000
.*                                                                      01603100
                      AIF   ('&XREQECB'(1,1) NE '(').ZI74B              01603200
&ZCGPR   SETC  '0('.'&XREQECB'(2,K'&XREQECB-2).')'                      01603300
                      AGO   .ZI74D                                      01603400
.ZI74B                ANOP  ,                                           01603500
.*                                                                      01603600
&ZC                   SETC  '&XREQECB'(1,1)                             01603700
                      AIF   (T'&ZC NE 'N').ZI74D                        01603800
&ZC                   SETC  '&XREQECB'                                  01603900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI74D               01604000
&ZCGPR                SETC  '=AL4(&XREQECB)'                            01604100
.*                                                                      01604200
.ZI74D                ANOP  ,                                           01604300
.*                                                                      01604400
&ZOPN                 SETA  &ZOPN+1                                     01604500
&ZOPL(&ZOPN)          SETC  ' '                                         01604600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01604700
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            01604800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQECB XREQECB'                      01604900
.*                                                                      01605000
.ZI74E                ANOP  ,                                           01605100
.*-------------------------------------------------------------------   01605200
.***AI.L23 ALET XREQTOKEN F                                             01605300
         AIF   ('&ZXREQTOKEN' EQ '').ZI77G                              01605400
         AIF   ('&SYSASCE' EQ 'P').ZI77G   SYSSTATE PRIMARY             01605500
&ZCLNG                SETC  '&XREQTOKEN'                                01605600
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI77E  IN AR                  01605700
.*                                                                      01605800
&ZCGPR                SETC  '14'                                        01605900
&ZOPN                 SETA  &ZOPN+1                                     01606000
&ZOPL(&ZOPN)          SETC  ' '                                         01606100
&ZOPO(&ZOPN)          SETC  'LAE'                                       01606200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01606300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01606400
                      AGO   .ZI77F                                      01606500
.*                                                                      01606600
.ZI77E                ANOP  ,                                           01606700
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01606800
.*                                                                      01606900
.ZI77F                ANOP  ,                                           01607000
.*                                                                      01607100
&ZOPN                 SETA  &ZOPN+1                                     01607200
&ZOPL(&ZOPN)          SETC  ' '                                         01607300
&ZOPO(&ZOPN)          SETC  'STAM'                                      01607400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       01607500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01607600
.*                                                                      01607700
.ZI77G                ANOP  ,                                           01607800
.*-------------------------------------------------------------------   01607900
.***AI.L19  XREQTOKEN A                                                 01608000
                      AIF   ('&ZXREQTOKEN' EQ '').ZI78H                 01608100
&ZCLNG                SETC  '&XREQTOKEN'                                01608200
&ZCGPR                SETC  '14'                                        01608300
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI78F  IN GPR                 01608400
         AIF   ('&SYSASCE' NE 'P').ZI78G   SYSSTATE PRIMARY             01608500
.*                                                                      01608600
&ZOPN                 SETA  &ZOPN+1                                     01608700
&ZOPL(&ZOPN)          SETC  ' '                                         01608800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01608900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01609000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01609100
.*                                                                      01609200
                      AGO   .ZI78G                                      01609300
.*                                                                      01609400
.ZI78F                ANOP  ,                                           01609500
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01609600
.*                                                                      01609700
.ZI78G                ANOP  ,                                           01609800
.*                                                                      01609900
&ZOPN                 SETA  &ZOPN+1                                     01610000
&ZOPL(&ZOPN)          SETC  ' '                                         01610100
&ZOPO(&ZOPN)          SETC  'ST'                                        01610200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             01610300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01610400
.*                                                                      01610500
.ZI78H                ANOP  ,                                           01610600
.*-------------------------------------------------------------------   01610700
.***AI.L05 XSHLFLGSA1 BL1                                               01610800
&ZW                   SETC  ''                                          01610900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01611000
.*-------------------------------------------------------------------   01611100
.***AI.L08 XSHLFLGSA1 "IXLLSTC"                                         01611200
.***      BL1'1XXXXXXX'                                                 01611300
&ZW                   SETC  '&ZW.1'                                     01611400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01611500
.*-------------------------------------------------------------------   01611600
.***AI.L08 XSHLFLGSA1 "IXLLSTE"                                         01611700
.***      BL1'X1XXXXXX'                                                 01611800
&ZW                   SETC  '&ZW.0'                                     01611900
.*-------------------------------------------------------------------   01612000
.***AI.L08 XSHLFLGSA1 "IXLLSTM"                                         01612100
.***      BL1'XX1XXXXX'                                                 01612200
&ZW                   SETC  '&ZW.000000'                                01612300
.*-------------------------------------------------------------------   01612400
.***AI.L11 XSHLFLGSA1 BL1                                               01612500
                      AIF   ('&ZCLNG' NE 'YES').ZI83E  ALL ZERO BITS    01612600
&ZOPN                 SETA  &ZOPN+1                                     01612700
&ZOPL(&ZOPN)          SETC  ' '                                         01612800
&ZOPO(&ZOPN)          SETC  'OI'                                        01612900
&ZOPV(&ZOPN)          SETC  '88(1),B''&ZW'''                            01613000
&ZOPD(&ZOPN)          SETC  '++ 459 BL1'                                01613100
.ZI83E                ANOP  ,                                           01613200
.*-------------------------------------------------------------------   01613300
.***AI.L25  XBUFNUM XL1                                                 01613400
                      AIF   ('&ZXBUFNUM' EQ '').ZI87E                   01613500
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI87E             01613600
&ZCGPR                SETC  '&XBUFNUM'                                  01613700
.*                                                                      01613800
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI87B              01613900
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      01614000
                      AGO   .ZI87D                                      01614100
.ZI87B                ANOP  ,                                           01614200
.*                                                                      01614300
&ZC                   SETC  '&XBUFNUM'(1,1)                             01614400
                      AIF   (T'&ZC NE 'N').ZI87D                        01614500
&ZC                   SETC  '&XBUFNUM'                                  01614600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI87D               01614700
&ZCGPR                SETC  '=AL1(&XBUFNUM)'                            01614800
.*                                                                      01614900
.ZI87D                ANOP  ,                                           01615000
.*                                                                      01615100
&ZOPN                 SETA  &ZOPN+1                                     01615200
&ZOPL(&ZOPN)          SETC  ' '                                         01615300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01615400
&ZOPV(&ZOPN)          SETC  '98(1,1),&ZCGPR'                            01615500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      01615600
.*                                                                      01615700
.ZI87E                ANOP  ,                                           01615800
.*-------------------------------------------------------------------   01615900
.***AI.L25  XBUFINCRNUM XL1                                             01616000
                      AIF   ('&ZXBUFINCRNUM' EQ '').ZI88E               01616100
                      AIF   ('&ZXBUFINCRNUM' EQ 'OUTPUT').ZI88E         01616200
&ZCGPR                SETC  '&XBUFINCRNUM'                              01616300
.*                                                                      01616400
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZI88B          01616500
&ZCGPR   SETC  '0('.'&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2).')'              01616600
                      AGO   .ZI88D                                      01616700
.ZI88B                ANOP  ,                                           01616800
.*                                                                      01616900
&ZC                   SETC  '&XBUFINCRNUM'(1,1)                         01617000
                      AIF   (T'&ZC NE 'N').ZI88D                        01617100
&ZC                   SETC  '&XBUFINCRNUM'                              01617200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI88D               01617300
&ZCGPR                SETC  '=AL1(&XBUFINCRNUM)'                        01617400
.*                                                                      01617500
.ZI88D                ANOP  ,                                           01617600
.*                                                                      01617700
&ZOPN                 SETA  &ZOPN+1                                     01617800
&ZOPL(&ZOPN)          SETC  ' '                                         01617900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01618000
&ZOPV(&ZOPN)          SETC  '99(1,1),&ZCGPR'                            01618100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFINCRNUM XBUFINCRNUM'              01618200
.*                                                                      01618300
.ZI88E                ANOP  ,                                           01618400
.*-------------------------------------------------------------------   01618500
.***AI.L05 XFL22 BL1                                                    01618600
&ZW                   SETC  ''                                          01618700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01618800
.*-------------------------------------------------------------------   01618900
.***AI.L08 XFL22 "SECONDARYKEY"                                         01619000
.***      BL1'1XXXXXXX'                                                 01619100
         AIF   ('&SECONDARYKEY' EQ '').ZI94A                            01619200
&ZW                   SETC  '&ZW.10000000'                              01619300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01619400
                      AGO   .ZI94C                                      01619500
.*                                                                      01619600
.ZI94A                ANOP  ,                                           01619700
&ZW                   SETC  '&ZW.00000000'                              01619800
.ZI94C                ANOP  ,                                           01619900
.*-------------------------------------------------------------------   01620000
.***AI.L11 XFL22 BL1                                                    01620100
                      AIF   ('&ZCLNG' NE 'YES').ZI94E  ALL ZERO BITS    01620200
&ZOPN                 SETA  &ZOPN+1                                     01620300
&ZOPL(&ZOPN)          SETC  ' '                                         01620400
&ZOPO(&ZOPN)          SETC  'OI'                                        01620500
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01620600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01620700
.ZI94E                ANOP  ,                                           01620800
.*-------------------------------------------------------------------   01620900
.***AI.L25  XLISTNUM F                                                  01621000
                      AIF   ('&ZXLISTNUM' EQ '').ZI97E                  01621100
                      AIF   ('&ZXLISTNUM' EQ 'OUTPUT').ZI97E            01621200
&ZCGPR                SETC  '&XLISTNUM'                                 01621300
.*                                                                      01621400
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZI97B             01621500
&ZCGPR   SETC  '0('.'&XLISTNUM'(2,K'&XLISTNUM-2).')'                    01621600
                      AGO   .ZI97D                                      01621700
.ZI97B                ANOP  ,                                           01621800
.*                                                                      01621900
&ZC                   SETC  '&XLISTNUM'(1,1)                            01622000
                      AIF   (T'&ZC NE 'N').ZI97D                        01622100
&ZC                   SETC  '&XLISTNUM'                                 01622200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI97D               01622300
&ZCGPR                SETC  '=AL4(&XLISTNUM)'                           01622400
.*                                                                      01622500
.ZI97D                ANOP  ,                                           01622600
.*                                                                      01622700
&ZOPN                 SETA  &ZOPN+1                                     01622800
&ZOPL(&ZOPN)          SETC  ' '                                         01622900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01623000
&ZOPV(&ZOPN)          SETC  '116(4,1),&ZCGPR'                           01623100
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUM XLISTNUM'                    01623200
.*                                                                      01623300
.ZI97E                ANOP  ,                                           01623400
.*-------------------------------------------------------------------   01623500
.***AI.L25  XENTRYKEY CL16                                              01623600
                      AIF   ('&ZXENTRYKEY' EQ '').ZI99E                 01623700
                      AIF   ('&ZXENTRYKEY' EQ 'OUTPUT').ZI99E           01623800
&ZCGPR                SETC  '&XENTRYKEY'                                01623900
.*                                                                      01624000
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZI99B            01624100
&ZCGPR   SETC  '0('.'&XENTRYKEY'(2,K'&XENTRYKEY-2).')'                  01624200
.ZI99B                ANOP  ,                                           01624300
.*                                                                      01624400
&ZOPN                 SETA  &ZOPN+1                                     01624500
&ZOPL(&ZOPN)          SETC  ' '                                         01624600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01624700
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          01624800
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYKEY XENTRYKEY'                  01624900
.*                                                                      01625000
.ZI99E                ANOP  ,                                           01625100
.*-------------------------------------------------------------------   01625200
.***AI.L25  XSECONDARYKEY CL32                                          01625300
                      AIF   ('&ZXSECONDARYKEY' EQ '').ZI101E            01625400
                      AIF   ('&ZXSECONDARYKEY' EQ 'OUTPUT').ZI101E      01625500
&ZCGPR                SETC  '&XSECONDARYKEY'                            01625600
.*                                                                      01625700
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZI101B       01625800
&ZCGPR   SETC  '0('.'&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2).')'          01625900
.ZI101B               ANOP  ,                                           01626000
.*                                                                      01626100
&ZOPN                 SETA  &ZOPN+1                                     01626200
&ZOPL(&ZOPN)          SETC  ' '                                         01626300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01626400
&ZOPV(&ZOPN)          SETC  '180(32,1),&ZCGPR'                          01626500
&ZOPD(&ZOPN)          SETC  '++ &ZXSECONDARYKEY XSECONDARYKEY'          01626600
.*                                                                      01626700
.ZI101E               ANOP  ,                                           01626800
.*-------------------------------------------------------------------   01626900
.***AI.LVER01                                                           01627000
                      AIF  (&XPLISTVER LT 4).ZI103Z                     01627100
.*-------------------------------------------------------------------   01627200
.***AI.L05 XFL22KT BL1                                                  01627300
&ZW                   SETC  ''                                          01627400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01627500
.*-------------------------------------------------------------------   01627600
.***AI.LVER02                                                           01627700
.ZI103Z               ANOP  ,                                           01627800
.*-------------------------------------------------------------------   01627900
.***AI.LVER01                                                           01628000
                      AIF  (&XPLISTVER LT 4).ZI104Z                     01628100
.*-------------------------------------------------------------------   01628200
.***AI.L08 XFL22KT "SECONDARY"                                          01628300
.***      BL1'1XXXXXXX'                                                 01628400
         AIF   ('&XKEYTYPE' NE 'SECONDARY').ZI104A                      01628500
&ZW                   SETC  '&ZW.10000000'                              01628600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01628700
                      AGO   .ZI104C                                     01628800
.*                                                                      01628900
.ZI104A               ANOP  ,                                           01629000
&ZW                   SETC  '&ZW.00000000'                              01629100
.ZI104C               ANOP  ,                                           01629200
.*-------------------------------------------------------------------   01629300
.***AI.L11 XFL22KT BL1                                                  01629400
                      AIF   ('&ZCLNG' NE 'YES').ZI104E  ALL ZERO BITS   01629500
&ZOPN                 SETA  &ZOPN+1                                     01629600
&ZOPL(&ZOPN)          SETC  ' '                                         01629700
&ZOPO(&ZOPN)          SETC  'OI'                                        01629800
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01629900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01630000
.ZI104E               ANOP  ,                                           01630100
.*-------------------------------------------------------------------   01630200
.***AI.LVER02                                                           01630300
.ZI104Z               ANOP  ,                                           01630400
.*-------------------------------------------------------------------   01630500
.***AI.L25  XLOCKINDEX F                                                01630600
                      AIF   ('&ZXLOCKINDEX' EQ '').ZI110E               01630700
                      AIF   ('&ZXLOCKINDEX' EQ 'OUTPUT').ZI110E         01630800
&ZCGPR                SETC  '&XLOCKINDEX'                               01630900
.*                                                                      01631000
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZI110B          01631100
&ZCGPR   SETC  '0('.'&XLOCKINDEX'(2,K'&XLOCKINDEX-2).')'                01631200
                      AGO   .ZI110D                                     01631300
.ZI110B               ANOP  ,                                           01631400
.*                                                                      01631500
&ZC                   SETC  '&XLOCKINDEX'(1,1)                          01631600
                      AIF   (T'&ZC NE 'N').ZI110D                       01631700
&ZC                   SETC  '&XLOCKINDEX'                               01631800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI110D              01631900
&ZCGPR                SETC  '=FL4''&XLOCKINDEX'''                       01632000
.*                                                                      01632100
.ZI110D               ANOP  ,                                           01632200
.*                                                                      01632300
&ZOPN                 SETA  &ZOPN+1                                     01632400
&ZOPL(&ZOPN)          SETC  ' '                                         01632500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01632600
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           01632700
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKINDEX XLOCKINDEX'                01632800
.*                                                                      01632900
.ZI110E               ANOP  ,                                           01633000
.*-------------------------------------------------------------------   01633100
.***AI.L05 XFL20LC BL1                                                  01633200
&ZW                   SETC  ''                                          01633300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01633400
.*-------------------------------------------------------------------   01633500
.***AI.L08 XFL20LC "DEFINE"                                             01633600
.***      BL1'XXXXX1XX'                                                 01633700
         AIF   ('&XLISTSTATE' NE 'DEFINE').ZI117A                       01633800
&ZW                   SETC  '&ZW.000001'                                01633900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01634000
                      AGO   .ZI117C                                     01634100
.*                                                                      01634200
.ZI117A               ANOP  ,                                           01634300
&ZW                   SETC  '&ZW.000000'                                01634400
.ZI117C               ANOP  ,                                           01634500
.*-------------------------------------------------------------------   01634600
.***AI.L08 XFL20LC "DEFINE"                                             01634700
.***      BL1'XXXXXX1X'                                                 01634800
         AIF   ('&XKEYRANGESTATE' NE 'DEFINE').ZI118A                   01634900
&ZW                   SETC  '&ZW.1'                                     01635000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01635100
                      AGO   .ZI118C                                     01635200
.*                                                                      01635300
.ZI118A               ANOP  ,                                           01635400
&ZW                   SETC  '&ZW.0'                                     01635500
.ZI118C               ANOP  ,                                           01635600
.*-------------------------------------------------------------------   01635700
.***AI.L08 XFL20LC "SET"                                                01635800
.***      BL1'XXXXXXX1'                                                 01635900
         AIF   ('&XKEYRANGE' NE 'SET').ZI119A                           01636000
&ZW                   SETC  '&ZW.1'                                     01636100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01636200
                      AGO   .ZI119C                                     01636300
.*                                                                      01636400
.ZI119A               ANOP  ,                                           01636500
&ZW                   SETC  '&ZW.0'                                     01636600
.ZI119C               ANOP  ,                                           01636700
.*-------------------------------------------------------------------   01636800
.***AI.L11 XFL20LC BL1                                                  01636900
                      AIF   ('&ZCLNG' NE 'YES').ZI119E  ALL ZERO BITS   01637000
&ZOPN                 SETA  &ZOPN+1                                     01637100
&ZOPL(&ZOPN)          SETC  ' '                                         01637200
&ZOPO(&ZOPN)          SETC  'OI'                                        01637300
&ZOPV(&ZOPN)          SETC  '104(1),B''&ZW'''                           01637400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01637500
.ZI119E               ANOP  ,                                           01637600
.*-------------------------------------------------------------------   01637700
.***AI.L05 XFL21LC BL1                                                  01637800
&ZW                   SETC  ''                                          01637900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01638000
.*-------------------------------------------------------------------   01638100
.***AI.L08 XFL21LC "KEYRNOTIFYDELAY"                                    01638200
.***      BL1'1XXXXXXX'                                                 01638300
         AIF   ('&KEYRNOTIFYDELAY' EQ '').ZI121A                        01638400
         AIF   ('&KEYRNOTIFYDELAY' EQ 'NO_CHANGE').ZI121A               01638500
&ZW                   SETC  '&ZW.1'                                     01638600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01638700
                      AGO   .ZI121C                                     01638800
.*                                                                      01638900
.ZI121A               ANOP  ,                                           01639000
&ZW                   SETC  '&ZW.0'                                     01639100
.ZI121C               ANOP  ,                                           01639200
.*-------------------------------------------------------------------   01639300
.***AI.L08 XFL21LC "LISTNOTIFYDELAY"                                    01639400
.***      BL1'X1XXXXXX'                                                 01639500
         AIF   ('&LISTNOTIFYDELAY' EQ '').ZI122A                        01639600
         AIF   ('&LISTNOTIFYDELAY' EQ 'NO_CHANGE').ZI122A               01639700
&ZW                   SETC  '&ZW.1'                                     01639800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01639900
                      AGO   .ZI122C                                     01640000
.*                                                                      01640100
.ZI122A               ANOP  ,                                           01640200
&ZW                   SETC  '&ZW.0'                                     01640300
.ZI122C               ANOP  ,                                           01640400
.*-------------------------------------------------------------------   01640500
.***AI.L08 XFL21LC "LISTKEY"                                            01640600
.***      BL1'XXX1XXXX'                                                 01640700
         AIF   ('&LISTKEY' EQ '').ZI123A                                01640800
         AIF   ('&LISTKEY' EQ 'NO_LISTKEY').ZI123A                      01640900
&ZW                   SETC  '&ZW.01'                                    01641000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01641100
                      AGO   .ZI123C                                     01641200
.*                                                                      01641300
.ZI123A               ANOP  ,                                           01641400
&ZW                   SETC  '&ZW.00'                                    01641500
.ZI123C               ANOP  ,                                           01641600
.*-------------------------------------------------------------------   01641700
.***AI.L08 XFL21LC "MAXLISTKEY"                                         01641800
.***      BL1'XXXX1XXX'                                                 01641900
         AIF   ('&MAXLISTKEY' EQ '').ZI124A                             01642000
         AIF   ('&MAXLISTKEY' EQ 'NO_MAXLISTKEY').ZI124A                01642100
&ZW                   SETC  '&ZW.1'                                     01642200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01642300
                      AGO   .ZI124C                                     01642400
.*                                                                      01642500
.ZI124A               ANOP  ,                                           01642600
&ZW                   SETC  '&ZW.0'                                     01642700
.ZI124C               ANOP  ,                                           01642800
.*-------------------------------------------------------------------   01642900
.***AI.L08 XFL21LC "SETCURSOR"                                          01643000
.***      BL1'XXXXX1XX'                                                 01643100
         AIF   ('&SETCURSOR' EQ '').ZI125A                              01643200
         AIF   ('&SETCURSOR' EQ 'NO_SETCURSOR').ZI125A                  01643300
&ZW                   SETC  '&ZW.1'                                     01643400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01643500
                      AGO   .ZI125C                                     01643600
.*                                                                      01643700
.ZI125A               ANOP  ,                                           01643800
&ZW                   SETC  '&ZW.0'                                     01643900
.ZI125C               ANOP  ,                                           01644000
.*-------------------------------------------------------------------   01644100
.***AI.L08 XFL21LC "LISTDESC"                                           01644200
.***      BL1'XXXXXX1X'                                                 01644300
         AIF   ('&LISTDESC' EQ '').ZI126A                               01644400
         AIF   ('&LISTDESC' EQ 'NO_LISTDESC').ZI126A                    01644500
&ZW                   SETC  '&ZW.1'                                     01644600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01644700
                      AGO   .ZI126C                                     01644800
.*                                                                      01644900
.ZI126A               ANOP  ,                                           01645000
&ZW                   SETC  '&ZW.0'                                     01645100
.ZI126C               ANOP  ,                                           01645200
.*-------------------------------------------------------------------   01645300
.***AI.L08 XFL21LC "LISTLIMIT"                                          01645400
.***      BL1'XXXXXXX1'                                                 01645500
         AIF   ('&LISTLIMIT' EQ '').ZI127A                              01645600
         AIF   ('&LISTLIMIT' EQ 'NO_LISTLIMIT').ZI127A                  01645700
&ZW                   SETC  '&ZW.1'                                     01645800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01645900
                      AGO   .ZI127C                                     01646000
.*                                                                      01646100
.ZI127A               ANOP  ,                                           01646200
&ZW                   SETC  '&ZW.0'                                     01646300
.ZI127C               ANOP  ,                                           01646400
.*-------------------------------------------------------------------   01646500
.***AI.L11 XFL21LC BL1                                                  01646600
                      AIF   ('&ZCLNG' NE 'YES').ZI127E  ALL ZERO BITS   01646700
&ZOPN                 SETA  &ZOPN+1                                     01646800
&ZOPL(&ZOPN)          SETC  ' '                                         01646900
&ZOPO(&ZOPN)          SETC  'OI'                                        01647000
&ZOPV(&ZOPN)          SETC  '105(1),B''&ZW'''                           01647100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01647200
.ZI127E               ANOP  ,                                           01647300
.*-------------------------------------------------------------------   01647400
.***AI.L05 XFL23LC BL1                                                  01647500
&ZW                   SETC  ''                                          01647600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01647700
.*-------------------------------------------------------------------   01647800
.***AI.L08 XFL23LC "TAIL"                                               01647900
.***      BL1'1XXXXXXX'                                                 01648000
         AIF   ('&XSETCURSOR' NE 'TAIL').ZI130A                         01648100
&ZW                   SETC  '&ZW.1'                                     01648200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01648300
                      AGO   .ZI130C                                     01648400
.*                                                                      01648500
.ZI130A               ANOP  ,                                           01648600
&ZW                   SETC  '&ZW.0'                                     01648700
.ZI130C               ANOP  ,                                           01648800
.*-------------------------------------------------------------------   01648900
.***AI.L08 XFL23LC "OFF"                                                01649000
.***      BL1'XXXXXX1X'                                                 01649100
         AIF   ('&XKEYRNOTIFYDELAY' NE 'OFF').ZI131A                    01649200
&ZW                   SETC  '&ZW.000001'                                01649300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01649400
                      AGO   .ZI131C                                     01649500
.*                                                                      01649600
.ZI131A               ANOP  ,                                           01649700
&ZW                   SETC  '&ZW.000000'                                01649800
.ZI131C               ANOP  ,                                           01649900
.*-------------------------------------------------------------------   01650000
.***AI.L08 XFL23LC "OFF"                                                01650100
.***      BL1'XXXXXXX1'                                                 01650200
         AIF   ('&XLISTNOTIFYDELAY' NE 'OFF').ZI132A                    01650300
&ZW                   SETC  '&ZW.1'                                     01650400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01650500
                      AGO   .ZI132C                                     01650600
.*                                                                      01650700
.ZI132A               ANOP  ,                                           01650800
&ZW                   SETC  '&ZW.0'                                     01650900
.ZI132C               ANOP  ,                                           01651000
.*-------------------------------------------------------------------   01651100
.***AI.L11 XFL23LC BL1                                                  01651200
                      AIF   ('&ZCLNG' NE 'YES').ZI132E  ALL ZERO BITS   01651300
&ZOPN                 SETA  &ZOPN+1                                     01651400
&ZOPL(&ZOPN)          SETC  ' '                                         01651500
&ZOPO(&ZOPN)          SETC  'OI'                                        01651600
&ZOPV(&ZOPN)          SETC  '107(1),B''&ZW'''                           01651700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01651800
.ZI132E               ANOP  ,                                           01651900
.*-------------------------------------------------------------------   01652000
.***AI.L18  XLISTLIMIT F                                                01652100
         AIF   ('&XLISTLIMIT' NE 'NO_LISTLIMIT').ZI135                  01652200
&ZXLISTLIMIT          SETC  ''             RESET INPUT/OUTPUT           01652300
.ZI135                ANOP  ,                                           01652400
.*-------------------------------------------------------------------   01652500
.***AI.L25  XLISTLIMIT F                                                01652600
                      AIF   ('&ZXLISTLIMIT' EQ '').ZI135E               01652700
                      AIF   ('&ZXLISTLIMIT' EQ 'OUTPUT').ZI135E         01652800
&ZCGPR                SETC  '&XLISTLIMIT'                               01652900
.*                                                                      01653000
                      AIF   ('&XLISTLIMIT'(1,1) NE '(').ZI135B          01653100
&ZCGPR   SETC  '0('.'&XLISTLIMIT'(2,K'&XLISTLIMIT-2).')'                01653200
                      AGO   .ZI135D                                     01653300
.ZI135B               ANOP  ,                                           01653400
.*                                                                      01653500
&ZC                   SETC  '&XLISTLIMIT'(1,1)                          01653600
                      AIF   (T'&ZC NE 'N').ZI135D                       01653700
&ZC                   SETC  '&XLISTLIMIT'                               01653800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI135D              01653900
&ZCGPR                SETC  '=AL4(&XLISTLIMIT)'                         01654000
.*                                                                      01654100
.ZI135D               ANOP  ,                                           01654200
.*                                                                      01654300
&ZOPN                 SETA  &ZOPN+1                                     01654400
&ZOPL(&ZOPN)          SETC  ' '                                         01654500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01654600
&ZOPV(&ZOPN)          SETC  '120(4,1),&ZCGPR'                           01654700
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTLIMIT XLISTLIMIT'                01654800
.*                                                                      01654900
.ZI135E               ANOP  ,                                           01655000
.*-------------------------------------------------------------------   01655100
.***AI.L25  XAUTHCOMP CL16                                              01655200
                      AIF   ('&ZXAUTHCOMP' EQ '').ZI137E                01655300
                      AIF   ('&ZXAUTHCOMP' EQ 'OUTPUT').ZI137E          01655400
&ZCGPR                SETC  '&XAUTHCOMP'                                01655500
.*                                                                      01655600
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZI137B           01655700
&ZCGPR   SETC  '0('.'&XAUTHCOMP'(2,K'&XAUTHCOMP-2).')'                  01655800
.ZI137B               ANOP  ,                                           01655900
.*                                                                      01656000
&ZOPN                 SETA  &ZOPN+1                                     01656100
&ZOPL(&ZOPN)          SETC  ' '                                         01656200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01656300
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          01656400
&ZOPD(&ZOPN)          SETC  '++ &ZXAUTHCOMP XAUTHCOMP'                  01656500
.*                                                                      01656600
.ZI137E               ANOP  ,                                           01656700
.*-------------------------------------------------------------------   01656800
.***AI.L18  XNEWAUTH CL16                                               01656900
         AIF   ('&XNEWAUTH' NE 'NO_NEWAUTH').ZI138                      01657000
&ZXNEWAUTH            SETC  ''             RESET INPUT/OUTPUT           01657100
.ZI138                ANOP  ,                                           01657200
.*-------------------------------------------------------------------   01657300
.***AI.L25  XNEWAUTH CL16                                               01657400
                      AIF   ('&ZXNEWAUTH' EQ '').ZI138E                 01657500
                      AIF   ('&ZXNEWAUTH' EQ 'OUTPUT').ZI138E           01657600
&ZCGPR                SETC  '&XNEWAUTH'                                 01657700
.*                                                                      01657800
                      AIF   ('&XNEWAUTH'(1,1) NE '(').ZI138B            01657900
&ZCGPR   SETC  '0('.'&XNEWAUTH'(2,K'&XNEWAUTH-2).')'                    01658000
.ZI138B               ANOP  ,                                           01658100
.*                                                                      01658200
&ZOPN                 SETA  &ZOPN+1                                     01658300
&ZOPL(&ZOPN)          SETC  ' '                                         01658400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01658500
&ZOPV(&ZOPN)          SETC  '164(16,1),&ZCGPR'                          01658600
&ZOPD(&ZOPN)          SETC  '++ &ZXNEWAUTH XNEWAUTH'                    01658700
.*                                                                      01658800
.ZI138E               ANOP  ,                                           01658900
.*-------------------------------------------------------------------   01659000
.***AI.L18  XLISTDESC CL32                                              01659100
         AIF   ('&XLISTDESC' NE 'NO_LISTDESC').ZI139                    01659200
&ZXLISTDESC           SETC  ''             RESET INPUT/OUTPUT           01659300
.ZI139                ANOP  ,                                           01659400
.*-------------------------------------------------------------------   01659500
.***AI.L25  XLISTDESC CL32                                              01659600
                      AIF   ('&ZXLISTDESC' EQ '').ZI139E                01659700
                      AIF   ('&ZXLISTDESC' EQ 'OUTPUT').ZI139E          01659800
&ZCGPR                SETC  '&XLISTDESC'                                01659900
.*                                                                      01660000
                      AIF   ('&XLISTDESC'(1,1) NE '(').ZI139B           01660100
&ZCGPR   SETC  '0('.'&XLISTDESC'(2,K'&XLISTDESC-2).')'                  01660200
.ZI139B               ANOP  ,                                           01660300
.*                                                                      01660400
&ZOPN                 SETA  &ZOPN+1                                     01660500
&ZOPL(&ZOPN)          SETC  ' '                                         01660600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01660700
&ZOPV(&ZOPN)          SETC  '180(32,1),&ZCGPR'                          01660800
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTDESC XLISTDESC'                  01660900
.*                                                                      01661000
.ZI139E               ANOP  ,                                           01661100
.*-------------------------------------------------------------------   01661200
.***AI.LVER01                                                           01661300
                      AIF  (&XPLISTVER LT 1).ZI140Z                     01661400
.*-------------------------------------------------------------------   01661500
.***AI.L18  XLISTKEY CL16                                               01661600
         AIF   ('&XLISTKEY' NE 'NO_LISTKEY').ZI140                      01661700
&ZXLISTKEY            SETC  ''             RESET INPUT/OUTPUT           01661800
.ZI140                ANOP  ,                                           01661900
.*-------------------------------------------------------------------   01662000
.***AI.L25  XLISTKEY CL16                                               01662100
                      AIF   ('&ZXLISTKEY' EQ '').ZI140E                 01662200
                      AIF   ('&ZXLISTKEY' EQ 'OUTPUT').ZI140E           01662300
&ZCGPR                SETC  '&XLISTKEY'                                 01662400
.*                                                                      01662500
                      AIF   ('&XLISTKEY'(1,1) NE '(').ZI140B            01662600
&ZCGPR   SETC  '0('.'&XLISTKEY'(2,K'&XLISTKEY-2).')'                    01662700
.ZI140B               ANOP  ,                                           01662800
.*                                                                      01662900
&ZOPN                 SETA  &ZOPN+1                                     01663000
&ZOPL(&ZOPN)          SETC  ' '                                         01663100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01663200
&ZOPV(&ZOPN)          SETC  '212(16,1),&ZCGPR'                          01663300
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEY XLISTKEY'                    01663400
.*                                                                      01663500
.ZI140E               ANOP  ,                                           01663600
.*-------------------------------------------------------------------   01663700
.***AI.LVER02                                                           01663800
.ZI140Z               ANOP  ,                                           01663900
.*-------------------------------------------------------------------   01664000
.***AI.LVER01                                                           01664100
                      AIF  (&XPLISTVER LT 1).ZI141Z                     01664200
.*-------------------------------------------------------------------   01664300
.***AI.L18  XMAXLISTKEY CL16                                            01664400
         AIF   ('&XMAXLISTKEY' NE 'NO_MAXLISTKEY').ZI141                01664500
&ZXMAXLISTKEY         SETC  ''             RESET INPUT/OUTPUT           01664600
.ZI141                ANOP  ,                                           01664700
.*-------------------------------------------------------------------   01664800
.***AI.L25  XMAXLISTKEY CL16                                            01664900
                      AIF   ('&ZXMAXLISTKEY' EQ '').ZI141E              01665000
                      AIF   ('&ZXMAXLISTKEY' EQ 'OUTPUT').ZI141E        01665100
&ZCGPR                SETC  '&XMAXLISTKEY'                              01665200
.*                                                                      01665300
                      AIF   ('&XMAXLISTKEY'(1,1) NE '(').ZI141B         01665400
&ZCGPR   SETC  '0('.'&XMAXLISTKEY'(2,K'&XMAXLISTKEY-2).')'              01665500
.ZI141B               ANOP  ,                                           01665600
.*                                                                      01665700
&ZOPN                 SETA  &ZOPN+1                                     01665800
&ZOPL(&ZOPN)          SETC  ' '                                         01665900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01666000
&ZOPV(&ZOPN)          SETC  '228(16,1),&ZCGPR'                          01666100
&ZOPD(&ZOPN)          SETC  '++ &ZXMAXLISTKEY XMAXLISTKEY'              01666200
.*                                                                      01666300
.ZI141E               ANOP  ,                                           01666400
.*-------------------------------------------------------------------   01666500
.***AI.LVER02                                                           01666600
.ZI141Z               ANOP  ,                                           01666700
.*-------------------------------------------------------------------   01666800
.***AI.LVER01                                                           01666900
                      AIF  (&XPLISTVER LT 4).ZI142Z                     01667000
.*-------------------------------------------------------------------   01667100
.***AI.LVER02                                                           01667200
.ZI142Z               ANOP  ,                                           01667300
.*-------------------------------------------------------------------   01667400
.***AI.LVER01                                                           01667500
                      AIF  (&XPLISTVER LT 4).ZI143Z                     01667600
.*-------------------------------------------------------------------   01667700
.***AI.L25  XKEYRANGESTART CL16                                         01667800
                      AIF   ('&ZXKEYRANGESTART' EQ '').ZI143E           01667900
                      AIF   ('&ZXKEYRANGESTART' EQ 'OUTPUT').ZI143E     01668000
&ZCGPR                SETC  '&XKEYRANGESTART'                           01668100
.*                                                                      01668200
                      AIF   ('&XKEYRANGESTART'(1,1) NE '(').ZI143B      01668300
&ZCGPR   SETC  '0('.'&XKEYRANGESTART'(2,K'&XKEYRANGESTART-2).')'        01668400
.ZI143B               ANOP  ,                                           01668500
.*                                                                      01668600
&ZOPN                 SETA  &ZOPN+1                                     01668700
&ZOPL(&ZOPN)          SETC  ' '                                         01668800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01668900
&ZOPV(&ZOPN)          SETC  '260(16,1),&ZCGPR'                          01669000
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYRANGESTART XKEYRANGESTART'        01669100
.*                                                                      01669200
.ZI143E               ANOP  ,                                           01669300
.*-------------------------------------------------------------------   01669400
.***AI.LVER02                                                           01669500
.ZI143Z               ANOP  ,                                           01669600
.*-------------------------------------------------------------------   01669700
.***AI.LVER01                                                           01669800
                      AIF  (&XPLISTVER LT 4).ZI144Z                     01669900
.*-------------------------------------------------------------------   01670000
.***AI.L25  XKEYRANGEEND CL16                                           01670100
                      AIF   ('&ZXKEYRANGEEND' EQ '').ZI144E             01670200
                      AIF   ('&ZXKEYRANGEEND' EQ 'OUTPUT').ZI144E       01670300
&ZCGPR                SETC  '&XKEYRANGEEND'                             01670400
.*                                                                      01670500
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZI144B        01670600
&ZCGPR   SETC  '0('.'&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2).')'            01670700
.ZI144B               ANOP  ,                                           01670800
.*                                                                      01670900
&ZOPN                 SETA  &ZOPN+1                                     01671000
&ZOPL(&ZOPN)          SETC  ' '                                         01671100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01671200
&ZOPV(&ZOPN)          SETC  '276(16,1),&ZCGPR'                          01671300
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYRANGEEND XKEYRANGEEND'            01671400
.*                                                                      01671500
.ZI144E               ANOP  ,                                           01671600
.*-------------------------------------------------------------------   01671700
.***AI.LVER02                                                           01671800
.ZI144Z               ANOP  ,                                           01671900
.*-------------------------------------------------------------------   01672000
.***AI.LVER01                                                           01672100
                      AIF  (&XPLISTVER LT 4).ZI145Z                     01672200
.*-------------------------------------------------------------------   01672300
.***AI.L25  XKREMPTY F                                                  01672400
                      AIF   ('&ZXKREMPTY' EQ '').ZI145E                 01672500
                      AIF   ('&ZXKREMPTY' EQ 'OUTPUT').ZI145E           01672600
&ZCGPR                SETC  '&XKREMPTY'                                 01672700
.*                                                                      01672800
                      AIF   ('&XKREMPTY'(1,1) NE '(').ZI145B            01672900
&ZCGPR   SETC  '0('.'&XKREMPTY'(2,K'&XKREMPTY-2).')'                    01673000
                      AGO   .ZI145D                                     01673100
.ZI145B               ANOP  ,                                           01673200
.*                                                                      01673300
&ZC                   SETC  '&XKREMPTY'(1,1)                            01673400
                      AIF   (T'&ZC NE 'N').ZI145D                       01673500
&ZC                   SETC  '&XKREMPTY'                                 01673600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI145D              01673700
&ZCGPR                SETC  '=AL4(&XKREMPTY)'                           01673800
.*                                                                      01673900
.ZI145D               ANOP  ,                                           01674000
.*                                                                      01674100
&ZOPN                 SETA  &ZOPN+1                                     01674200
&ZOPL(&ZOPN)          SETC  ' '                                         01674300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01674400
&ZOPV(&ZOPN)          SETC  '292(4,1),&ZCGPR'                           01674500
&ZOPD(&ZOPN)          SETC  '++ &ZXKREMPTY XKREMPTY'                    01674600
.*                                                                      01674700
.ZI145E               ANOP  ,                                           01674800
.*-------------------------------------------------------------------   01674900
.***AI.LVER02                                                           01675000
.ZI145Z               ANOP  ,                                           01675100
.*-------------------------------------------------------------------   01675200
.***AI.LVER01                                                           01675300
                      AIF  (&XPLISTVER LT 4).ZI146Z                     01675400
.*-------------------------------------------------------------------   01675500
.***AI.L25  XKRNOTEMPTY F                                               01675600
                      AIF   ('&ZXKRNOTEMPTY' EQ '').ZI146E              01675700
                      AIF   ('&ZXKRNOTEMPTY' EQ 'OUTPUT').ZI146E        01675800
&ZCGPR                SETC  '&XKRNOTEMPTY'                              01675900
.*                                                                      01676000
                      AIF   ('&XKRNOTEMPTY'(1,1) NE '(').ZI146B         01676100
&ZCGPR   SETC  '0('.'&XKRNOTEMPTY'(2,K'&XKRNOTEMPTY-2).')'              01676200
                      AGO   .ZI146D                                     01676300
.ZI146B               ANOP  ,                                           01676400
.*                                                                      01676500
&ZC                   SETC  '&XKRNOTEMPTY'(1,1)                         01676600
                      AIF   (T'&ZC NE 'N').ZI146D                       01676700
&ZC                   SETC  '&XKRNOTEMPTY'                              01676800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI146D              01676900
&ZCGPR                SETC  '=AL4(&XKRNOTEMPTY)'                        01677000
.*                                                                      01677100
.ZI146D               ANOP  ,                                           01677200
.*                                                                      01677300
&ZOPN                 SETA  &ZOPN+1                                     01677400
&ZOPL(&ZOPN)          SETC  ' '                                         01677500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01677600
&ZOPV(&ZOPN)          SETC  '296(4,1),&ZCGPR'                           01677700
&ZOPD(&ZOPN)          SETC  '++ &ZXKRNOTEMPTY XKRNOTEMPTY'              01677800
.*                                                                      01677900
.ZI146E               ANOP  ,                                           01678000
.*-------------------------------------------------------------------   01678100
.***AI.LVER02                                                           01678200
.ZI146Z               ANOP  ,                                           01678300
.*-------------------------------------------------------------------   01678400
.***AI.LVER01                                                           01678500
                      AIF  (&XPLISTVER LT 4).ZI147Z                     01678600
.*-------------------------------------------------------------------   01678700
.***AI.L25  XLISTEMPTY F                                                01678800
                      AIF   ('&ZXLISTEMPTY' EQ '').ZI147E               01678900
                      AIF   ('&ZXLISTEMPTY' EQ 'OUTPUT').ZI147E         01679000
&ZCGPR                SETC  '&XLISTEMPTY'                               01679100
.*                                                                      01679200
                      AIF   ('&XLISTEMPTY'(1,1) NE '(').ZI147B          01679300
&ZCGPR   SETC  '0('.'&XLISTEMPTY'(2,K'&XLISTEMPTY-2).')'                01679400
                      AGO   .ZI147D                                     01679500
.ZI147B               ANOP  ,                                           01679600
.*                                                                      01679700
&ZC                   SETC  '&XLISTEMPTY'(1,1)                          01679800
                      AIF   (T'&ZC NE 'N').ZI147D                       01679900
&ZC                   SETC  '&XLISTEMPTY'                               01680000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI147D              01680100
&ZCGPR                SETC  '=AL4(&XLISTEMPTY)'                         01680200
.*                                                                      01680300
.ZI147D               ANOP  ,                                           01680400
.*                                                                      01680500
&ZOPN                 SETA  &ZOPN+1                                     01680600
&ZOPL(&ZOPN)          SETC  ' '                                         01680700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01680800
&ZOPV(&ZOPN)          SETC  '300(4,1),&ZCGPR'                           01680900
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTEMPTY XLISTEMPTY'                01681000
.*                                                                      01681100
.ZI147E               ANOP  ,                                           01681200
.*-------------------------------------------------------------------   01681300
.***AI.LVER02                                                           01681400
.ZI147Z               ANOP  ,                                           01681500
.*-------------------------------------------------------------------   01681600
.***AI.LVER01                                                           01681700
                      AIF  (&XPLISTVER LT 4).ZI148Z                     01681800
.*-------------------------------------------------------------------   01681900
.***AI.L25  XLISTNOTEMPTY F                                             01682000
                      AIF   ('&ZXLISTNOTEMPTY' EQ '').ZI148E            01682100
                      AIF   ('&ZXLISTNOTEMPTY' EQ 'OUTPUT').ZI148E      01682200
&ZCGPR                SETC  '&XLISTNOTEMPTY'                            01682300
.*                                                                      01682400
                      AIF   ('&XLISTNOTEMPTY'(1,1) NE '(').ZI148B       01682500
&ZCGPR   SETC  '0('.'&XLISTNOTEMPTY'(2,K'&XLISTNOTEMPTY-2).')'          01682600
                      AGO   .ZI148D                                     01682700
.ZI148B               ANOP  ,                                           01682800
.*                                                                      01682900
&ZC                   SETC  '&XLISTNOTEMPTY'(1,1)                       01683000
                      AIF   (T'&ZC NE 'N').ZI148D                       01683100
&ZC                   SETC  '&XLISTNOTEMPTY'                            01683200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI148D              01683300
&ZCGPR                SETC  '=AL4(&XLISTNOTEMPTY)'                      01683400
.*                                                                      01683500
.ZI148D               ANOP  ,                                           01683600
.*                                                                      01683700
&ZOPN                 SETA  &ZOPN+1                                     01683800
&ZOPL(&ZOPN)          SETC  ' '                                         01683900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01684000
&ZOPV(&ZOPN)          SETC  '304(4,1),&ZCGPR'                           01684100
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNOTEMPTY XLISTNOTEMPTY'          01684200
.*                                                                      01684300
.ZI148E               ANOP  ,                                           01684400
.*-------------------------------------------------------------------   01684500
.***AI.LVER02                                                           01684600
.ZI148Z               ANOP  ,                                           01684700
.*-------------------------------------------------------------------   01684800
.***AI.LVER01                                                           01684900
                      AIF  (&XPLISTVER LT 2).ZI150Z                     01685000
.*-------------------------------------------------------------------   01685100
.***AI.LVER02                                                           01685200
.ZI150Z               ANOP  ,                                           01685300
.*-------------------------------------------------------------------   01685400
.***AI.LVER01                                                           01685500
                      AIF  (&XPLISTVER LT 2).ZI151Z                     01685600
.*-------------------------------------------------------------------   01685700
.***AI.LVER02                                                           01685800
.ZI151Z               ANOP  ,                                           01685900
.*-------------------------------------------------------------------   01686000
.***AI.LVER01                                                           01686100
                      AIF  (&XPLISTVER LT 2).ZI152Z                     01686200
.*-------------------------------------------------------------------   01686300
.***AI.LVER02                                                           01686400
.ZI152Z               ANOP  ,                                           01686500
.*-------------------------------------------------------------------   01686600
.***AI.LVER01                                                           01686700
                      AIF  (&XPLISTVER LT 2).ZI153Z                     01686800
.*-------------------------------------------------------------------   01686900
.***AI.LVER02                                                           01687000
.ZI153Z               ANOP  ,                                           01687100
.*-------------------------------------------------------------------   01687200
.***AI.LVER01                                                           01687300
                      AIF  (&XPLISTVER LT 2).ZI154Z                     01687400
.*-------------------------------------------------------------------   01687500
.***AI.LVER02                                                           01687600
.ZI154Z               ANOP  ,                                           01687700
.*-------------------------------------------------------------------   01687800
.***AI.LVER01                                                           01687900
                      AIF  (&XPLISTVER LT 2).ZI155Z                     01688000
.*-------------------------------------------------------------------   01688100
.***AI.LVER02                                                           01688200
.ZI155Z               ANOP  ,                                           01688300
.*-------------------------------------------------------------------   01688400
.***AI.LVER01                                                           01688500
                      AIF  (&XPLISTVER LT 2).ZI156Z                     01688600
.*-------------------------------------------------------------------   01688700
.***AI.LVER02                                                           01688800
.ZI156Z               ANOP  ,                                           01688900
.*-------------------------------------------------------------------   01689000
.***AI.LVER01                                                           01689100
                      AIF  (&XPLISTVER LT 2).ZI157Z                     01689200
.*-------------------------------------------------------------------   01689300
.***AI.LVER02                                                           01689400
.ZI157Z               ANOP  ,                                           01689500
.*-------------------------------------------------------------------   01689600
.***AI.LVER01                                                           01689700
                      AIF  (&XPLISTVER LT 2).ZI158Z                     01689800
.*-------------------------------------------------------------------   01689900
.***AI.LVER02                                                           01690000
.ZI158Z               ANOP  ,                                           01690100
.*-------------------------------------------------------------------   01690200
.***AI.LVER01                                                           01690300
                      AIF  (&XPLISTVER LT 2).ZI160Z                     01690400
.*-------------------------------------------------------------------   01690500
.***AI.LVER02                                                           01690600
.ZI160Z               ANOP  ,                                           01690700
.*-------------------------------------------------------------------   01690800
.***AI.LVER01                                                           01690900
                      AIF  (&XPLISTVER LT 2).ZI161Z                     01691000
.*-------------------------------------------------------------------   01691100
.***AI.LVER02                                                           01691200
.ZI161Z               ANOP  ,                                           01691300
.*-------------------------------------------------------------------   01691400
.***AI.LVER01                                                           01691500
                      AIF  (&XPLISTVER LT 2).ZI162Z                     01691600
.*-------------------------------------------------------------------   01691700
.***AI.LVER02                                                           01691800
.ZI162Z               ANOP  ,                                           01691900
.*-------------------------------------------------------------------   01692000
.***AI.LVER01                                                           01692100
                      AIF  (&XPLISTVER LT 2).ZI163Z                     01692200
.*-------------------------------------------------------------------   01692300
.***AI.LVER02                                                           01692400
.ZI163Z               ANOP  ,                                           01692500
.*-------------------------------------------------------------------   01692600
.***AI.L05 XFL21LM BL1                                                  01692700
&ZW                   SETC  ''                                          01692800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01692900
.*-------------------------------------------------------------------   01693000
.***AI.L08 XFL21LM "NOTFULL"                                            01693100
.***      BL1'X1XXXXXX'                                                 01693200
         AIF   ('&XMONITORTYPE' NE 'NOTFULL').ZI168A                    01693300
&ZW                   SETC  '&ZW.01000000'                              01693400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01693500
                      AGO   .ZI168C                                     01693600
.*                                                                      01693700
.ZI168A               ANOP  ,                                           01693800
&ZW                   SETC  '&ZW.00000000'                              01693900
.ZI168C               ANOP  ,                                           01694000
.*-------------------------------------------------------------------   01694100
.***AI.L11 XFL21LM BL1                                                  01694200
                      AIF   ('&ZCLNG' NE 'YES').ZI168E  ALL ZERO BITS   01694300
&ZOPN                 SETA  &ZOPN+1                                     01694400
&ZOPL(&ZOPN)          SETC  ' '                                         01694500
&ZOPO(&ZOPN)          SETC  'OI'                                        01694600
&ZOPV(&ZOPN)          SETC  '105(1),B''&ZW'''                           01694700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01694800
.ZI168E               ANOP  ,                                           01694900
.*-------------------------------------------------------------------   01695000
.***AI.L05 XFL22LM BL1                                                  01695100
&ZW                   SETC  ''                                          01695200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01695300
.*-------------------------------------------------------------------   01695400
.***AI.L08 XFL22LM "MONITOR_SUBLIST"                                    01695500
.***      BL1'X1XXXXXX'                                                 01695600
         AIF   ('&XREQUEST' NE 'MONITOR_SUBLIST').ZI170A                01695700
&ZW                   SETC  '&ZW.01'                                    01695800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01695900
                      AGO   .ZI170C                                     01696000
.*                                                                      01696100
.ZI170A               ANOP  ,                                           01696200
&ZW                   SETC  '&ZW.00'                                    01696300
.ZI170C               ANOP  ,                                           01696400
.*-------------------------------------------------------------------   01696500
.***AI.L08 XFL22LM "MONITOR_EVENTQ"                                     01696600
.***      BL1'XX1XXXXX'                                                 01696700
         AIF   ('&XREQUEST' NE 'MONITOR_EVENTQ').ZI171A                 01696800
&ZW                   SETC  '&ZW.1'                                     01696900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01697000
                      AGO   .ZI171C                                     01697100
.*                                                                      01697200
.ZI171A               ANOP  ,                                           01697300
&ZW                   SETC  '&ZW.0'                                     01697400
.ZI171C               ANOP  ,                                           01697500
.*-------------------------------------------------------------------   01697600
.***AI.L08 XFL22LM "START"                                              01697700
.***      BL1'XXX1XXXX'                                                 01697800
         AIF   ('&XACTION' NE 'START').ZI172A                           01697900
&ZW                   SETC  '&ZW.1'                                     01698000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01698100
                      AGO   .ZI172C                                     01698200
.*                                                                      01698300
.ZI172A               ANOP  ,                                           01698400
&ZW                   SETC  '&ZW.0'                                     01698500
.ZI172C               ANOP  ,                                           01698600
.*-------------------------------------------------------------------   01698700
.***AI.L08 XFL22LM "EVERY"                                              01698800
.***      BL1'XXXX1XXX'                                                 01698900
         AIF   ('&XNOTIFICATION' NE 'EVERY').ZI173A                     01699000
&ZW                   SETC  '&ZW.1'                                     01699100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01699200
                      AGO   .ZI173C                                     01699300
.*                                                                      01699400
.ZI173A               ANOP  ,                                           01699500
&ZW                   SETC  '&ZW.0'                                     01699600
.ZI173C               ANOP  ,                                           01699700
.*-------------------------------------------------------------------   01699800
.***AI.L08 XFL22LM "YES"                                                01699900
.***      BL1'XXXXXXX1'                                                 01700000
         AIF   ('&XDRIVEEXIT' NE 'YES').ZI174A                          01700100
&ZW                   SETC  '&ZW.001'                                   01700200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01700300
                      AGO   .ZI174C                                     01700400
.*                                                                      01700500
.ZI174A               ANOP  ,                                           01700600
&ZW                   SETC  '&ZW.000'                                   01700700
.ZI174C               ANOP  ,                                           01700800
.*-------------------------------------------------------------------   01700900
.***AI.L11 XFL22LM BL1                                                  01701000
                      AIF   ('&ZCLNG' NE 'YES').ZI174E  ALL ZERO BITS   01701100
&ZOPN                 SETA  &ZOPN+1                                     01701200
&ZOPL(&ZOPN)          SETC  ' '                                         01701300
&ZOPO(&ZOPN)          SETC  'OI'                                        01701400
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01701500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01701600
.ZI174E               ANOP  ,                                           01701700
.*-------------------------------------------------------------------   01701800
.***AI.L25  XVECTORINDEX F                                              01701900
                      AIF   ('&ZXVECTORINDEX' EQ '').ZI177E             01702000
                      AIF   ('&ZXVECTORINDEX' EQ 'OUTPUT').ZI177E       01702100
&ZCGPR                SETC  '&XVECTORINDEX'                             01702200
.*                                                                      01702300
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZI177B        01702400
&ZCGPR   SETC  '0('.'&XVECTORINDEX'(2,K'&XVECTORINDEX-2).')'            01702500
                      AGO   .ZI177D                                     01702600
.ZI177B               ANOP  ,                                           01702700
.*                                                                      01702800
&ZC                   SETC  '&XVECTORINDEX'(1,1)                        01702900
                      AIF   (T'&ZC NE 'N').ZI177D                       01703000
&ZC                   SETC  '&XVECTORINDEX'                             01703100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI177D              01703200
&ZCGPR                SETC  '=FL4''&XVECTORINDEX'''                     01703300
.*                                                                      01703400
.ZI177D               ANOP  ,                                           01703500
.*                                                                      01703600
&ZOPN                 SETA  &ZOPN+1                                     01703700
&ZOPL(&ZOPN)          SETC  ' '                                         01703800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01703900
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           01704000
&ZOPD(&ZOPN)          SETC  '++ &ZXVECTORINDEX XVECTORINDEX'            01704100
.*                                                                      01704200
.ZI177E               ANOP  ,                                           01704300
.*-------------------------------------------------------------------   01704400
.***AI.LVER01                                                           01704500
                      AIF  (&XPLISTVER LT 2).ZI179Z                     01704600
.*-------------------------------------------------------------------   01704700
.***AI.LVER02                                                           01704800
.ZI179Z               ANOP  ,                                           01704900
.*-------------------------------------------------------------------   01705000
.***AI.LVER01                                                           01705100
                      AIF  (&XPLISTVER LT 2).ZI180Z                     01705200
.*-------------------------------------------------------------------   01705300
.***AI.LVER02                                                           01705400
.ZI180Z               ANOP  ,                                           01705500
.*-------------------------------------------------------------------   01705600
.***AI.LVER01                                                           01705700
                      AIF  (&XPLISTVER LT 2).ZI181Z                     01705800
.*-------------------------------------------------------------------   01705900
.***AI.LVER02                                                           01706000
.ZI181Z               ANOP  ,                                           01706100
.*-------------------------------------------------------------------   01706200
.***AI.LVER01                                                           01706300
                      AIF  (&XPLISTVER LT 2).ZI182Z                     01706400
.*-------------------------------------------------------------------   01706500
.***AI.LVER02                                                           01706600
.ZI182Z               ANOP  ,                                           01706700
.*-------------------------------------------------------------------   01706800
.***AI.LVER01                                                           01706900
                      AIF  (&XPLISTVER LT 2).ZI183Z                     01707000
.*-------------------------------------------------------------------   01707100
.***AI.LVER02                                                           01707200
.ZI183Z               ANOP  ,                                           01707300
.*-------------------------------------------------------------------   01707400
.***AI.LVER01                                                           01707500
                      AIF  (&XPLISTVER LT 2).ZI184Z                     01707600
.*-------------------------------------------------------------------   01707700
.***AI.L25  XUNC CL16                                                   01707800
                      AIF   ('&ZXUNC' EQ '').ZI184E                     01707900
                      AIF   ('&ZXUNC' EQ 'OUTPUT').ZI184E               01708000
&ZCGPR                SETC  '&XUNC'                                     01708100
.*                                                                      01708200
                      AIF   ('&XUNC'(1,1) NE '(').ZI184B                01708300
&ZCGPR   SETC  '0('.'&XUNC'(2,K'&XUNC-2).')'                            01708400
.ZI184B               ANOP  ,                                           01708500
.*                                                                      01708600
&ZOPN                 SETA  &ZOPN+1                                     01708700
&ZOPL(&ZOPN)          SETC  ' '                                         01708800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01708900
&ZOPV(&ZOPN)          SETC  '244(16,1),&ZCGPR'                          01709000
&ZOPD(&ZOPN)          SETC  '++ &ZXUNC XUNC'                            01709100
.*                                                                      01709200
.ZI184E               ANOP  ,                                           01709300
.*-------------------------------------------------------------------   01709400
.***AI.LVER02                                                           01709500
.ZI184Z               ANOP  ,                                           01709600
.*-------------------------------------------------------------------   01709700
.***AI.LVER01                                                           01709800
                      AIF  (&XPLISTVER LT 3).ZI185Z                     01709900
.*-------------------------------------------------------------------   01710000
.***AI.LVER02                                                           01710100
.ZI185Z               ANOP  ,                                           01710200
.*-------------------------------------------------------------------   01710300
.***AI.LVER01                                                           01710400
                      AIF  (&XPLISTVER LT 2).ZI187Z                     01710500
.*-------------------------------------------------------------------   01710600
.***AI.LVER02                                                           01710700
.ZI187Z               ANOP  ,                                           01710800
.*-------------------------------------------------------------------   01710900
.***AI.LVER01                                                           01711000
                      AIF  (&XPLISTVER LT 2).ZI188Z                     01711100
.*-------------------------------------------------------------------   01711200
.***AI.LVER02                                                           01711300
.ZI188Z               ANOP  ,                                           01711400
.*-------------------------------------------------------------------   01711500
.***AI.LVER01                                                           01711600
                      AIF  (&XPLISTVER LT 2).ZI189Z                     01711700
.*-------------------------------------------------------------------   01711800
.***AI.L05 XFL22MS BL1                                                  01711900
&ZW                   SETC  ''                                          01712000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01712100
.*-------------------------------------------------------------------   01712200
.***AI.LVER02                                                           01712300
.ZI189Z               ANOP  ,                                           01712400
.*-------------------------------------------------------------------   01712500
.***AI.LVER01                                                           01712600
                      AIF  (&XPLISTVER LT 2).ZI190Z                     01712700
.*-------------------------------------------------------------------   01712800
.***AI.L08 XFL22MS "MOSVECTOR"                                          01712900
.***      BL1'XXX1XXXX'                                                 01713000
         AIF   ('&MOSVECTOR' EQ '').ZI190A                              01713100
&ZW                   SETC  '&ZW.00010000'                              01713200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01713300
                      AGO   .ZI190C                                     01713400
.*                                                                      01713500
.ZI190A               ANOP  ,                                           01713600
&ZW                   SETC  '&ZW.00000000'                              01713700
.ZI190C               ANOP  ,                                           01713800
.*-------------------------------------------------------------------   01713900
.***AI.L11 XFL22MS BL1                                                  01714000
                      AIF   ('&ZCLNG' NE 'YES').ZI190E  ALL ZERO BITS   01714100
&ZOPN                 SETA  &ZOPN+1                                     01714200
&ZOPL(&ZOPN)          SETC  ' '                                         01714300
&ZOPO(&ZOPN)          SETC  'OI'                                        01714400
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01714500
&ZOPD(&ZOPN)          SETC  '++ OUTPUT BL1'                             01714600
.ZI190E               ANOP  ,                                           01714700
.*-------------------------------------------------------------------   01714800
.***AI.LVER02                                                           01714900
.ZI190Z               ANOP  ,                                           01715000
.*-------------------------------------------------------------------   01715100
.***AI.LVER01                                                           01715200
                      AIF  (&XPLISTVER LT 2).ZI191Z                     01715300
.*-------------------------------------------------------------------   01715400
.***AI.LVER02                                                           01715500
.ZI191Z               ANOP  ,                                           01715600
.*-------------------------------------------------------------------   01715700
.***AI.LVER01                                                           01715800
                      AIF  (&XPLISTVER LT 2).ZI192Z                     01715900
.*-------------------------------------------------------------------   01716000
.***AI.L25  XSTARTINDEX XL2                                             01716100
                      AIF   ('&ZXSTARTINDEX' EQ '').ZI192E              01716200
                      AIF   ('&ZXSTARTINDEX' EQ 'OUTPUT').ZI192E        01716300
&ZCGPR                SETC  '&XSTARTINDEX'                              01716400
.*                                                                      01716500
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZI192B         01716600
&ZCGPR   SETC  '0('.'&XSTARTINDEX'(2,K'&XSTARTINDEX-2).')'              01716700
                      AGO   .ZI192D                                     01716800
.ZI192B               ANOP  ,                                           01716900
.*                                                                      01717000
&ZC                   SETC  '&XSTARTINDEX'(1,1)                         01717100
                      AIF   (T'&ZC NE 'N').ZI192D                       01717200
&ZC                   SETC  '&XSTARTINDEX'                              01717300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI192D              01717400
&ZCGPR                SETC  '=AL2(&XSTARTINDEX)'                        01717500
.*                                                                      01717600
.ZI192D               ANOP  ,                                           01717700
.*                                                                      01717800
&ZOPN                 SETA  &ZOPN+1                                     01717900
&ZOPL(&ZOPN)          SETC  ' '                                         01718000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01718100
&ZOPV(&ZOPN)          SETC  '108(2,1),&ZCGPR'                           01718200
&ZOPD(&ZOPN)          SETC  '++ &ZXSTARTINDEX XSTARTINDEX'              01718300
.*                                                                      01718400
.ZI192E               ANOP  ,                                           01718500
.*-------------------------------------------------------------------   01718600
.***AI.LVER02                                                           01718700
.ZI192Z               ANOP  ,                                           01718800
.*-------------------------------------------------------------------   01718900
.***AI.LVER01                                                           01719000
                      AIF  (&XPLISTVER LT 2).ZI193Z                     01719100
.*-------------------------------------------------------------------   01719200
.***AI.L25  XENDINDEX XL2                                               01719300
                      AIF   ('&ZXENDINDEX' EQ '').ZI193E                01719400
                      AIF   ('&ZXENDINDEX' EQ 'OUTPUT').ZI193E          01719500
&ZCGPR                SETC  '&XENDINDEX'                                01719600
.*                                                                      01719700
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZI193B           01719800
&ZCGPR   SETC  '0('.'&XENDINDEX'(2,K'&XENDINDEX-2).')'                  01719900
                      AGO   .ZI193D                                     01720000
.ZI193B               ANOP  ,                                           01720100
.*                                                                      01720200
&ZC                   SETC  '&XENDINDEX'(1,1)                           01720300
                      AIF   (T'&ZC NE 'N').ZI193D                       01720400
&ZC                   SETC  '&XENDINDEX'                                01720500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI193D              01720600
&ZCGPR                SETC  '=AL2(&XENDINDEX)'                          01720700
.*                                                                      01720800
.ZI193D               ANOP  ,                                           01720900
.*                                                                      01721000
&ZOPN                 SETA  &ZOPN+1                                     01721100
&ZOPL(&ZOPN)          SETC  ' '                                         01721200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01721300
&ZOPV(&ZOPN)          SETC  '110(2,1),&ZCGPR'                           01721400
&ZOPD(&ZOPN)          SETC  '++ &ZXENDINDEX XENDINDEX'                  01721500
.*                                                                      01721600
.ZI193E               ANOP  ,                                           01721700
.*-------------------------------------------------------------------   01721800
.***AI.LVER02                                                           01721900
.ZI193Z               ANOP  ,                                           01722000
.*-------------------------------------------------------------------   01722100
&ZOPN1                SETA &ZOPN                                        01722200
.*******************************************************************    01722300
.***  PROCESS IXLLSTC OUTPUT PARAMETERS                                 01722400
.*******************************************************************    01722500
                      ACTR  10000                                       01722600
.*******************************************************************    01722700
.***AO.X02  RETURN CODE PROCESSING                                      01722800
.*******************************************************************    01722900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01723000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01723100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01723200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01723300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01723400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01723500
&ZOPN                 SETA  &ZOPN+1                                     01723600
&ZOPL(&ZOPN)          SETC  ' '                                         01723700
&ZOPO(&ZOPN)          SETC  'ST'                                        01723800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01723900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01724000
                      AGO   .ZMRETX                                     01724100
.*                                                                      01724200
.ZMRET2               ANOP  ,                                           01724300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01724400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01724500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01724600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01724700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01724800
&ZOPN                 SETA  &ZOPN+1                                     01724900
&ZOPL(&ZOPN)          SETC  ' '                                         01725000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01725100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01725200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01725300
.ZMRETX               ANOP  ,                                           01725400
.*******************************************************************    01725500
.***AO.X03  REASON CODE PROCESSING                                      01725600
.*******************************************************************    01725700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    01725800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            01725900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              01726000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             01726100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              01726200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             01726300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                01726400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 01726500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                01726600
&ZOPN                 SETA  &ZOPN+1                                     01726700
&ZOPL(&ZOPN)          SETC  ' '                                         01726800
&ZOPO(&ZOPN)          SETC  'ST'                                        01726900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               01727000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01727100
                      AGO   .ZMRSNX                                     01727200
.*                                                                      01727300
.ZMRSN2               ANOP  ,                                           01727400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01727500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 01727600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                01727700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 01727800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                01727900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   01728000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    01728100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   01728200
&ZOPN                 SETA  &ZOPN+1                                     01728300
&ZOPL(&ZOPN)          SETC  ' '                                         01728400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01728500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  01728600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01728700
.ZMRSNX               ANOP  ,                                           01728800
.*******************************************************************    01728900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01729000
.*******************************************************************    01729100
.ZMFLX                ANOP  ,              MF=L PROCESSING              01729200
.*******************************************************************    01729300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01729400
.*******************************************************************    01729500
                      ACTR  10000                                       01729600
.*                                                                      01729700
                      LCLA  &ZLC           COLUMN POSITION              01729800
                      LCLA  &ZOPX          LIST TABLE INDEX             01729900
                      LCLC  &ZLL           LABEL                        01730000
                      LCLC  &ZLOP          OPERATION                    01730100
                      LCLC  &ZLV           VALUE                        01730200
                      LCLC  &ZLD           DESCRIPTION                  01730300
.*                                                                      01730400
&ZOPX                 SETA  1                                           01730500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01730600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01730700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01730800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01730900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01731000
                      AIF   (K'&ZLD LE 0).ZL5                           01731100
&ZLC                  SETA  35             COMMENT COLUMN               01731200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01731300
&ZLC                  SETA  33             COMMMENT COLUMN              01731400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01731500
&ZLV                  SETC  '&ZLV'.' '                                  01731600
                      AGO   .ZL3                                        01731700
.*                                                                      01731800
.ZL4                  ANOP  ,                                           01731900
&ZLV                  SETC  '&ZLV'.' '                                  01732000
.ZL5                  ANOP  ,                                           01732100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01732200
.*                                                                      01732300
&ZLL     &ZLOP &ZLV                                                     01732400
.*                                                                      01732500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01732600
                      AGO   .ZL2           CONTINUE LOOPING             01732700
.*                                                                      01732800
.ZLX                  ANOP  ,                                           01732900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01733000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01733100
.* @P3M                                                                 01733200
.**------------------------------------------------------------------** 01733300
.**  Start of user maclasm code                                      ** 01733400
.*                                                                      01733500
.*  Standard version - fill in parameter list in :maclasm section       01733600
.*                                                                      01733700
.*                                                                      01733800
.**  Only generate code if no errors have been found                 ** 01733900
.*                                                                      01734000
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            01734100
.*                                                                      01734200
.**------------------------------------------------------------------** 01734300
.**  Declares for macro constants                                    ** 01734400
.**------------------------------------------------------------------** 01734500
.*                                                                      01734600
.**  Command codes                                                   ** 01734700
.*                                                                      01734800
               LCLC  &KLISTCMDRLTE                                      01734900
               LCLC  &KLISTCMDWLTE                                      01735000
               LCLC  &KLISTCMDRLC                                       01735100
               LCLC  &KLISTCMDWLC                                       01735200
               LCLC  &KLISTCMDRLM                                       01735300
               LCLC  &KLISTCMDDLM                                       01735400
               LCLC  &KLISTCMDRNLTE                                     01735500
               LCLC  &KLISTCMDREQC                                      01735600
               LCLC  &KLISTCMDREMC                                      01735700
               LCLC  &KLISTCMDDEMC                                      01735800
               LCLC  &KLISTCMDREMS                                      01735900
               LCLC  &KLISTCMDRLSC                                      01736000
.*                                                                      01736100
&KLISTCMDRLTE  SETC  '44'                                               01736200
&KLISTCMDWLTE  SETC  '48'                                               01736300
&KLISTCMDRLC   SETC  '52'                                               01736400
&KLISTCMDWLC   SETC  '56'                                               01736500
&KLISTCMDRLM   SETC  '60'                                               01736600
&KLISTCMDDLM   SETC  '64'                                               01736700
&KLISTCMDRNLTE SETC  '68'                                               01736800
&KLISTCMDREQC  SETC  '72'                                               01736900
&KLISTCMDREMC  SETC  '76'                                               01737000
&KLISTCMDDEMC  SETC  '80'                                               01737100
&KLISTCMDREMS  SETC  '84'                                               01737200
&KLISTCMDRLSC  SETC  '96'                                               01737300
.*                                                                      01737400
.*                                                                      01737500
.**  List command type                                               ** 01737600
.*                                                                      01737700
               LCLC  &KLISTCMDTYPE                                      01737800
&KLISTCMDTYPE  SETC  'X''03'''                                          01737900
.*                                                                      01738000
.*                                                                      01738100
.**  Command opcodes                                                 ** 01738200
.*                                                                      01738300
               LCLC  &KLISTOPRLSC                                       01738400
               LCLC  &KLISTOPRLTE                                       01738500
               LCLC  &KLISTOPWLTE                                       01738600
               LCLC  &KLISTOPRLC                                        01738700
               LCLC  &KLISTOPWLC                                        01738800
               LCLC  &KLISTOPRLM                                        01738900
               LCLC  &KLISTOPDLM                                        01739000
               LCLC  &KLISTOPRNLTE                                      01739100
               LCLC  &KLISTOPREQC                                       01739200
               LCLC  &KLISTOPREMC                                       01739300
               LCLC  &KLISTOPDEMC                                       01739400
               LCLC  &KLISTOPREMS                                       01739500
.*                                                                      01739600
&KLISTOPRLSC   SETC  'X''03'''                                          01739700
&KLISTOPRLTE   SETC  'X''0A'''                                          01739800
&KLISTOPWLTE   SETC  'X''0B'''                                          01739900
&KLISTOPRLC    SETC  'X''04'''                                          01740000
&KLISTOPWLC    SETC  'X''05'''                                          01740100
&KLISTOPRLM    SETC  'X''08'''                                          01740200
&KLISTOPDLM    SETC  'X''09'''                                          01740300
&KLISTOPRNLTE  SETC  'X''0C'''                                          01740400
&KLISTOPREQC   SETC  'X''1D'''                                          01740500
&KLISTOPREMC   SETC  'X''1C'''                                          01740600
&KLISTOPDEMC   SETC  'X''1F'''                                          01740700
&KLISTOPREMS   SETC  'X''9E'''                                          01740800
.*                                                                      01740900
.*                                                                      01741000
.**  Command lengths                                                 ** 01741100
.*                                                                      01741200
               LCLC  &KLISTRLTELEN                                      01741300
               LCLC  &KLISTWLTELEN                                      01741400
               LCLC  &KLISTRLCLEN                                       01741500
               LCLC  &KLISTWLCLEN                                       01741600
               LCLC  &KLISTRLMLEN                                       01741700
               LCLC  &KLISTDLMLEN                                       01741800
               LCLC  &KLISTRNLTELEN                                     01741900
               LCLC  &KLISTREQCLEN                                      01742000
               LCLC  &KLISTREMCLEN                                      01742100
               LCLC  &KLISTDEMCLEN                                      01742200
               LCLC  &KLISTREMSLEN                                      01742300
               LCLC  &KLISTRLSCLEN                                      01742400
.*                                                                      01742500
.*                                                                      01742600
         AIF   (&XPLISTVER GE 4).DCLCMDLENV4                            01742700
.*                                                                      01742800
.* Command lengths for Version <4 parameter lists                       01742900
.*                                                                      01743000
&KLISTRLTELEN  SETC   '32'                                              01743100
&KLISTWLTELEN  SETC   '68'                                              01743200
&KLISTRLCLEN   SETC   '36'                                              01743300
&KLISTWLCLEN   SETC  '160'                                              01743400
&KLISTRLMLEN   SETC  '176'                                              01743500
&KLISTDLMLEN   SETC   '80'                                              01743600
&KLISTRNLTELEN SETC   '32'                                              01743700
&KLISTREQCLEN  SETC   '24'                                              01743800
&KLISTREMCLEN  SETC   '80'                                              01743900
&KLISTDEMCLEN  SETC   '28'                                              01744000
&KLISTREMSLEN  SETC   '28'                                              01744100
&KLISTRLSCLEN  SETC   '24'                                              01744200
        AGO   .DIDCMDLENDCL                                             01744300
.*                                                                      01744400
.* Command lengths for Version >= 4 parameter lists                     01744500
.*                                                                      01744600
.DCLCMDLENV4  ANOP ,                                               @L2A 01744700
&KLISTRLTELEN  SETC   '32'                                              01744800
&KLISTWLTELEN  SETC   '68'                                              01744900
&KLISTRLCLEN   SETC   '36'                                              01745000
&KLISTWLCLEN   SETC  '224'                                         @L2C 01745100
&KLISTRLMLEN   SETC  '180'                                         @L2C 01745200
&KLISTDLMLEN   SETC  '128'                                         @L2C 01745300
&KLISTRNLTELEN SETC   '32'                                              01745400
&KLISTREQCLEN  SETC   '24'                                              01745500
&KLISTREMCLEN  SETC  '128'                                         @L2C 01745600
&KLISTDEMCLEN  SETC   '28'                                              01745700
&KLISTREMSLEN  SETC   '28'                                              01745800
&KLISTRLSCLEN  SETC   '24'                                              01745900
.DIDCMDLENDCL ANOP ,                                               @L2A 01746000
.*                                                                      01746100
.*                                                                      01746200
.**  Parameter list offsets                                          ** 01746300
.*                                                                      01746400
.*  Offsets of parameter list sections                                  01746500
.*                                                                      01746600
                   LCLA  &PLOFF_XSHL_DATA                               01746700
                   LCLA  &PLOFF_XMOB_DATA                               01746800
                   LCLA  &PLOFF_XMCB_DATA                               01746900
.*                                                                      01747000
&PLOFF_XSHL_DATA   SETA  0                                              01747100
&PLOFF_XMOB_DATA   SETA  96                                             01747200
&PLOFF_XMCB_DATA   SETA  100                                            01747300
.*                                                                      01747400
.*  Offsets within the shell data section                               01747500
.*                                                                      01747600
                     LCLA  &PLOFF_XVERSION                              01747700
                     LCLA  &PLOFF_XCMDCODE                              01747800
                     LCLA  &PLOFF_XSHLFLGS2                             01747900
                     LCLA  &PLOFF_XCOMPCONID                            01748000
                     LCLA  &PLOFF_XCONID                                01748100
                     LCLA  &PLOFF_XBUFSIZE                              01748200
                     LCLA  &PLOFF_XANSAREA_ALET                         01748300
                     LCLA  &PLOFF_XANSAREA                              01748400
.*                                                                      01748500
&PLOFF_XVERSION      SETA  &PLOFF_XSHL_DATA+0                           01748600
&PLOFF_XCMDCODE      SETA  &PLOFF_XSHL_DATA+1                           01748700
&PLOFF_XSHLFLGS2     SETA  &PLOFF_XSHL_DATA+3                           01748800
&PLOFF_XCOMPCONID    SETA  &PLOFF_XSHL_DATA+8                           01748900
&PLOFF_XCONID        SETA  &PLOFF_XSHL_DATA+25                          01749000
&PLOFF_XBUFSIZE      SETA  &PLOFF_XSHL_DATA+32                          01749100
&PLOFF_XANSAREA_ALET SETA  &PLOFF_XSHL_DATA+48                          01749200
&PLOFF_XANSAREA      SETA  &PLOFF_XSHL_DATA+52                          01749300
.*                                                                      01749400
.*  Offsets within the MOB section                                      01749500
.*                                                                      01749600
                   LCLA  &PLOFF_XCMDLEN                                 01749700
                   LCLA  &PLOFF_XBUFNUM                                 01749800
                   LCLA  &PLOFF_XBUFINCRNUM                             01749900
.*                                                                      01750000
&PLOFF_XCMDLEN     SETA  &PLOFF_XMOB_DATA+0                             01750100
&PLOFF_XBUFNUM     SETA  &PLOFF_XMOB_DATA+2                             01750200
&PLOFF_XBUFINCRNUM SETA  &PLOFF_XMOB_DATA+3                             01750300
.*                                                                      01750400
.*  Offsets within the MCB section                                      01750500
.*                                                                      01750600
                   LCLA  &PLOFF_XCCA                                    01750700
                   LCLA  &PLOFF_XCCB                                    01750800
                   LCLA  &PLOFF_XFL21LK                                 01750900
                   LCLA  &PLOFF_XFL22LM                                 01751000
                   LCLA  &PLOFF_XUID23                                  01751100
                   LCLA  &PLOFF_XCGLM                                   01751200
                   LCLA  &PLOFF_XUID64                                  01751300
                   LCLA  &PLOFF_XAUTHCOMP                               01751400
                   LCLA  &PLOFF_XNEWAUTH                                01751500
.*                                                                      01751600
.* Note these offsets are taken from the beginning of the MCB_DATA      01751700
.* area in the plist.  Add 16 to get offsets that account for the       01751800
.* message header that is omitted from the plist.                       01751900
.*                                                                      01752000
&PLOFF_XCCA        SETA  &PLOFF_XMCB_DATA+0                             01752100
&PLOFF_XCCB        SETA  &PLOFF_XMCB_DATA+1                             01752200
&PLOFF_XFL21LK     SETA  &PLOFF_XMCB_DATA+5                             01752300
&PLOFF_XFL22LM     SETA  &PLOFF_XMCB_DATA+6                             01752400
&PLOFF_XUID23      SETA  &PLOFF_XMCB_DATA+7                             01752500
&PLOFF_XCGLM       SETA  &PLOFF_XMCB_DATA+11                            01752600
&PLOFF_XUID64      SETA  &PLOFF_XMCB_DATA+48                            01752700
&PLOFF_XAUTHCOMP   SETA  &PLOFF_XMCB_DATA+48                            01752800
&PLOFF_XNEWAUTH    SETA  &PLOFF_XMCB_DATA+64                            01752900
.*                                                                      01753000
.**  Answer area offsets                                             ** 01753100
.*                                                                      01753200
                   LCLC  &AAOFF_LEVEL                                   01753300
                   LCLC  &AAOFF_OFFSET                                  01753400
                   LCLC  &AAOFF_LENGTH                                  01753500
                   LCLC  &AAOFF_RETCODE                                 01753600
                   LCLC  &AAOFF_RSNCODE                                 01753700
.*                                                                      01753800
&AAOFF_LEVEL       SETC  '0'                                            01753900
&AAOFF_OFFSET      SETC  '4'                                            01754000
&AAOFF_LENGTH      SETC  '8'                                            01754100
&AAOFF_RETCODE     SETC  '12'                                           01754200
&AAOFF_RSNCODE     SETC  '16'                                           01754300
.*                                                                      01754400
.**  Answer area values                                              ** 01754500
.*                                                                      01754600
                   LCLC  &AAVAL_LEVEL                                   01754700
                   LCLC  &AAVAL_OFFSET                                  01754800
                   LCLC  &AAVAL_LENGTH                                  01754900
                   LCLC  &AAVAL_RETCODE                                 01755000
                   LCLC  &AAVAL_RSNCODE                                 01755100
.*                                                                      01755200
&AAVAL_LEVEL       SETC  '0'                                            01755300
&AAVAL_OFFSET      SETC  '12'                                           01755400
&AAVAL_LENGTH      SETC  '8'                                            01755500
&AAVAL_RETCODE     SETC  '12'                                           01755600
&AAVAL_RSNCODE     SETC  'X''0C13'''                                    01755700
.*                                                                      01755800
.*                                                                      01755900
.**------------------------------------------------------------------** 01756000
.**  Declares for macro variables                                    ** 01756100
.**                                                                  ** 01756200
.**  The following AMG-declared variables are also used in this      ** 01756300
.**  section:                                                        ** 01756400
.**                                                                  ** 01756500
.**    AMG "x" and "zx" variables corresponding to interface keys    ** 01756600
.**    ZCGPR                                                         ** 01756700
.**    ZCLNG                                                         ** 01756800
.**    ZMACRET                                                       ** 01756900
.**    ZNDX                                                          ** 01757000
.**    ZW                                                            ** 01757100
.**                                                                  ** 01757200
.**------------------------------------------------------------------** 01757300
.*                                                                      01757400
               LCLC  &LISTCMD                                           01757500
               LCLC  &LISTOPCODE                                        01757600
               LCLC  &LISTCMDLEN                                        01757700
.*                                                                      01757800
.*                                                                      01757900
.**------------------------------------------------------------------** 01758000
.**  Start of code to fill in the parameter list                     ** 01758100
.**------------------------------------------------------------------** 01758200
.*                                                                      01758300
.*--------------------------------------------------------------------- 01758400
.*                                                                      01758500
.**------------------------------------------------------------------** 01758600
.**  Initialize the answer area                                      ** 01758700
.**------------------------------------------------------------------** 01758800
.*                                                                      01758900
               AIF   ('&ANSAREA(1)' EQ '').SKIPINITANSAREA              01759000
               AIF   ('&SYSASCE'  EQ 'P').SKIPINITANSALET               01759100
         L     14,&PLOFF_XANSAREA_ALET.(,1)                             01759200
         SAR   14,14                                                    01759300
.SKIPINITANSALET ANOP ,                                                 01759400
         L     14,&PLOFF_XANSAREA.(,1)                                  01759500
         LA    15,&AAVAL_LEVEL.                                         01759600
         ST    15,&AAOFF_LEVEL.(,14)                                    01759700
         LA    15,&AAVAL_OFFSET.                                        01759800
         ST    15,&AAOFF_OFFSET.(,14)                                   01759900
         LA    15,&AAVAL_LENGTH.                                        01760000
         ST    15,&AAOFF_LENGTH.(,14)                                   01760100
         LA    15,&AAVAL_RETCODE.                                       01760200
         ST    15,&AAOFF_RETCODE.(,14)                                  01760300
         LA    15,&AAVAL_RSNCODE.                                       01760400
         ST    15,&AAOFF_RSNCODE.(,14)                                  01760500
.SKIPINITANSAREA ANOP ,                                                 01760600
.*                                                                      01760700
.*                                                                      01760800
.**------------------------------------------------------------------** 01760900
.**  Find the command code, opcode, and length                       ** 01761000
.**                                                                  ** 01761100
.**  The length is set to the maximum length required for the        ** 01761200
.**  specified command.  The command code and opcode are set from    ** 01761300
.**  the combination of keys specified on the invocation.            ** 01761400
.**                                                                  ** 01761500
.**------------------------------------------------------------------** 01761600
.*                                                                      01761700
               AIF   ('&XREQUEST' NE 'READ_STRCOUNTS').LISTCMDNOTRLSC   01761800
.*                                                                      01761900
&LISTCMD       SETC  '&KLISTCMDRLSC'                                    01762000
&LISTOPCODE    SETC  '&KLISTOPRLSC'                                     01762100
&LISTCMDLEN    SETC  '&KLISTRLSCLEN'                                    01762200
               AGO   .LISTCMDENDSELECT                                  01762300
.*                                                              @02A    01762400
.LISTCMDNOTRLSC ANOP ,                                                  01762500
.*                                                                      01762600
               AIF   ('&XREQUEST' NE 'READ_EQCONTROLS').LISTCMDNOTREQC  01762700
.*                                                                      01762800
&LISTCMD       SETC  '&KLISTCMDREQC'                                    01762900
&LISTOPCODE    SETC  '&KLISTOPREQC'                                     01763000
&LISTCMDLEN    SETC  '&KLISTREQCLEN'                                    01763100
               AGO   .LISTCMDENDSELECT                                  01763200
.*                                                                      01763300
.LISTCMDNOTREQC ANOP ,                                                  01763400
.*                                                                      01763500
               AIF   ('&XREQUEST' NE 'READ_EMCONTROLS').LISTCMDNOTREMC  01763600
.*                                                                      01763700
&LISTCMD       SETC  '&KLISTCMDREMC'                                    01763800
&LISTOPCODE    SETC  '&KLISTOPREMC'                                     01763900
&LISTCMDLEN    SETC  '&KLISTREMCLEN'                                    01764000
               AGO   .LISTCMDENDSELECT                                  01764100
.*                                                                      01764200
.LISTCMDNOTREMC ANOP ,                                                  01764300
.*                                                                      01764400
               AIF   ('&XREQUEST' NE 'DEQ_EVENTQ').LISTCMDNOTDEMC       01764500
.*                                                                      01764600
&LISTCMD       SETC  '&KLISTCMDDEMC'                                    01764700
&LISTOPCODE    SETC  '&KLISTOPDEMC'                                     01764800
&LISTCMDLEN    SETC  '&KLISTDEMCLEN'                                    01764900
               AGO   .LISTCMDENDSELECT                                  01765000
.*                                                                      01765100
.LISTCMDNOTDEMC ANOP ,                                                  01765200
.*                                                                      01765300
               AIF   ('&XREQUEST' NE 'MONITOR_SUBLISTS').LISTCMDNOTREMS 01765400
.*                                                                      01765500
&LISTCMD       SETC  '&KLISTCMDREMS'                                    01765600
&LISTOPCODE    SETC  '&KLISTOPREMS'                                     01765700
&LISTCMDLEN    SETC  '&KLISTREMSLEN'                                    01765800
               AGO   .LISTCMDENDSELECT                                  01765900
.*                                                                      01766000
.LISTCMDNOTREMS ANOP ,                                                  01766100
.*                                                                      01766200
               AIF   ('&XREQUEST' NE 'LOCK').LISTCMDNOTLOCK             01766300
.*                                                                      01766400
               AIF   ('&XLOCKOPER' NE 'TEST').LISTCMDLOCKNOTTEST        01766500
&LISTCMD       SETC  '&KLISTCMDRLTE'                                    01766600
&LISTOPCODE    SETC  '&KLISTOPRLTE'                                     01766700
&LISTCMDLEN    SETC  '&KLISTRLTELEN'                                    01766800
               AGO   .LISTCMDLOCKEND                                    01766900
.LISTCMDLOCKNOTTEST ANOP ,                                              01767000
.*                                                                      01767100
               AIF   ('&XLOCKOPER' NE 'READNEXT').LISTCMDLOCKNOTREADNXT 01767200
&LISTCMD       SETC  '&KLISTCMDRNLTE'                                   01767300
&LISTOPCODE    SETC  '&KLISTOPRNLTE'                                    01767400
&LISTCMDLEN    SETC  '&KLISTRNLTELEN'                                   01767500
               AGO   .LISTCMDLOCKEND                                    01767600
.LISTCMDLOCKNOTREADNXT ANOP ,                                           01767700
.*                                                                      01767800
               AIF   ('&XLOCKOPER' NE 'SET'    AND                     *01767900
                      '&XLOCKOPER' NE 'RESET').LISTCMDLOCKNOTSETRESET   01768000
&LISTCMD       SETC  '&KLISTCMDWLTE'                                    01768100
&LISTOPCODE    SETC  '&KLISTOPWLTE'                                     01768200
&LISTCMDLEN    SETC  '&KLISTWLTELEN'                                    01768300
               AGO   .LISTCMDLOCKEND                                    01768400
.LISTCMDLOCKNOTSETRESET ANOP ,                                          01768500
.*                                                                   ** 01768600
.LISTCMDLOCKEND ANOP ,                                                  01768700
               AGO   .LISTCMDENDSELECT                                  01768800
.*                                                                      01768900
.LISTCMDNOTLOCK ANOP ,                                                  01769000
.*                                                                      01769100
               AIF   ('&XREQUEST' NE 'READ_LCONTROLS').LISTCMDNOTREADLC*01769200
               ONTROLS                                                  01769300
.*                                                                      01769400
&LISTCMD       SETC  '&KLISTCMDRLC'                                     01769500
&LISTOPCODE    SETC  '&KLISTOPRLC'                                      01769600
&LISTCMDLEN    SETC  '&KLISTRLCLEN'                                     01769700
               AGO   .LISTCMDENDSELECT                                  01769800
.*                                                                      01769900
.LISTCMDNOTREADLCONTROLS ANOP ,                                         01770000
.*                                                                      01770100
               AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS').LISTCMDNOTWRITE*01770200
               LCONTROLS                                                01770300
.*                                                                      01770400
&LISTCMD       SETC  '&KLISTCMDWLC'                                     01770500
&LISTOPCODE    SETC  '&KLISTOPWLC'                                      01770600
&LISTCMDLEN    SETC  '&KLISTWLCLEN'                                     01770700
               AGO   .LISTCMDENDSELECT                                  01770800
.*                                                                      01770900
.LISTCMDNOTWRITELCONTROLS ANOP ,                                        01771000
.*                                                                      01771100
               AIF   ('&XREQUEST' NE 'MONITOR_EVENTQ'  AND             *01771200
                      '&XREQUEST' NE 'MONITOR_SUBLIST' AND             *01771300
                      '&XREQUEST' NE 'MONITOR_KEYRANGE' AND            *01771400
                      '&XREQUEST' NE 'MONITOR_LIST').LISTCMDNOTMONITORL*01771500
               IST                                                      01771600
.*                                                                      01771700
               AIF   ('&XACTION' NE 'START').LISTCMDMONITORLISTNOTSTART 01771800
&LISTCMD       SETC  '&KLISTCMDRLM'                                     01771900
&LISTOPCODE    SETC  '&KLISTOPRLM'                                      01772000
&LISTCMDLEN    SETC  '&KLISTRLMLEN'                                     01772100
               AGO   .LISTCMDMONITORLISTEND                             01772200
.LISTCMDMONITORLISTNOTSTART ANOP ,                                      01772300
.*                                                                      01772400
.* ACTION=STOP                                                          01772500
&LISTCMD       SETC  '&KLISTCMDDLM'                                     01772600
&LISTOPCODE    SETC  '&KLISTOPDLM'                                      01772700
&LISTCMDLEN    SETC  '&KLISTDLMLEN'                                     01772800
.LISTCMDMONITORLISTEND ANOP ,                                           01772900
               AGO   .LISTCMDENDSELECT                                  01773000
.*                                                                      01773100
.LISTCMDNOTMONITORLIST ANOP ,                                           01773200
.*                                                                      01773300
.LISTCMDENDSELECT ANOP ,                                                01773400
.*                                                                      01773500
.*                                                                      01773600
.**------------------------------------------------------------------** 01773700
.**  Fill in shell layer parameter fields                            ** 01773800
.**------------------------------------------------------------------** 01773900
.*                                                                      01774000
.**  Set the command code                                            ** 01774100
.*                                                                      01774200
.*   _xCmdCode                                                          01774300
         MVI   &PLOFF_XCMDCODE.(1),&LISTCMD                             01774400
.*                                                                      01774500
.*                                                                      01774600
.**------------------------------------------------------------------** 01774700
.**  Fill in MOB parameter fields                                    ** 01774800
.**------------------------------------------------------------------** 01774900
.*                                                                      01775000
.**  Set the command data length                                     ** 01775100
.*                                                                      01775200
         LA    14,&LISTCMDLEN                                           01775300
.*                                                                      01775400
.*   _xCmdLen                                                           01775500
         STH   14,&PLOFF_XCMDLEN.(,1)                                   01775600
.*                                                                      01775700
.**  Set the BufNum value                                            ** 01775800
.*                                                                      01775900
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'       AND              *01776000
                '&XREQUEST' NE 'DEQ_EVENTQ').SKIPSETBUFNUM1             01776100
.*                                                                      01776200
.*   _xBufNum                                                           01776300
         MVI   &PLOFF_XBUFNUM.(1),1                                     01776400
.*                                                                      01776500
.SKIPSETBUFNUM1 ANOP ,                                                  01776600
.*                                                                      01776700
.**  Set the BufIncrNum value                                        ** 01776800
.*                                                                      01776900
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01777000
                '&XREQUEST' NE 'DEQ_EVENTQ').SKIPSETBUFINUM             01777100
.*                                                                      01777200
.*   _xBufIncrNum                                                       01777300
         MVI   &PLOFF_XBUFINCRNUM.(1),16                                01777400
.*                                                                      01777500
.SKIPSETBUFINUM ANOP ,                                                  01777600
.*                                                                      01777700
.*                                                                      01777800
.**------------------------------------------------------------------** 01777900
.**  Fill in MCB parameter fields                                    ** 01778000
.**------------------------------------------------------------------** 01778100
.*                                                                      01778200
.**  Set the command opcode                                          ** 01778300
.**  - The command opcode is stored in two pieces to allow the       ** 01778400
.**    MVI instruction to be used for efficiency.                    ** 01778500
.*                                                                      01778600
.*   _xCcA                                                              01778700
         MVI   &PLOFF_XCCA.(1),&KLISTCMDTYPE                            01778800
.*                                                                      01778900
.*   _xCcB                                                              01779000
         MVI   &PLOFF_XCCB.(1),&LISTOPCODE                              01779100
.*                                                                      01779200
.**------------------------------------------------------------------** 01779300
.**  Set the command flags                                           ** 01779400
.**  - The command flags are stored as individual bytes to allow the ** 01779500
.**    MVI instruction to be used for efficiency.                    ** 01779600
.*                                                                      01779700
.**  Set the command flags second byte                               ** 01779800
.*                                                                      01779900
&ZW      SETC  ''                                                       01780000
&ZCLNG   SETC  ''                                                       01780100
.*                                                                      01780200
.*                                                                      01780300
         AIF   ('&XREQUEST' NE 'LOCK').PLNOFL21LK                       01780400
.*                                                                      01780500
.*                                                                      01780600
&ZW      SETC  '&ZW.0'                                                  01780700
.* LockOper(Set) or LockOper(Reset)                                     01780800
.*                                                                      01780900
         AIF   ('&XLOCKOPER' NE 'SET' AND                              *01781000
                '&XLOCKOPER' NE 'RESET').PLLRTLOCKOPERNOTSETRESET       01781100
.*                                                                      01781200
&ZW      SETC  '&ZW.101'                                                01781300
&ZCLNG   SETC  'YES'                                                    01781400
         AGO   .PLLRTLOCKOPEREND                                        01781500
.*                                                                      01781600
.PLLRTLOCKOPERNOTSETRESET ANOP ,                                        01781700
.* LockOper(ReadNext) w(Lockcomp)                                       01781800
.*                                                                      01781900
         AIF   ('&XLOCKOPER' NE 'READNEXT').PLLRTLOCKOPERNOTREADNEXT    01782000
.*                                                                      01782100
         AIF   ('&XLOCKCOMP' EQ ''        OR                           *01782200
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLLRTREADNEXTNOCOMP      01782300
.*                                                                      01782400
&ZW      SETC  '&ZW.100'                                                01782500
&ZCLNG   SETC  'YES'                                                    01782600
         AGO   .PLLRTLOCKOPERREADNEXTEND                                01782700
.*                                                                      01782800
.PLLRTREADNEXTNOCOMP ANOP ,                                             01782900
.* LockOper(ReadNext) without(Lockcomp)                                 01783000
.*                                                                      01783100
&ZW      SETC  '&ZW.000'                                                01783200
.*                                                                      01783300
.PLLRTLOCKOPERREADNEXTEND ANOP ,                                        01783400
.*                                                                      01783500
         AGO   .PLLRTLOCKOPEREND                                        01783600
.*                                                                      01783700
.PLLRTLOCKOPERNOTREADNEXT ANOP ,                                        01783800
.* LockOper(Test)                                                       01783900
.*                                                                      01784000
&ZW      SETC  '&ZW.000'                                                01784100
.*                                                                      01784200
.PLLRTLOCKOPEREND ANOP ,                                                01784300
.*                                                                      01784400
&ZW      SETC  '&ZW.0000'                                               01784500
.*                                                                      01784600
.*                                                                      01784700
&ZW      SETC  'B''&ZW.'''                                              01784800
.*                                                                      01784900
.*                                                                      01785000
         AIF   ('&ZCLNG' NE 'YES').PLNOFL21LK                           01785100
.*                                                                      01785200
.*   _XFL21LK                                                           01785300
         OI    &PLOFF_XFL21LK.(1),&ZW                                   01785400
.*                                                                      01785500
.PLNOFL21LK ANOP ,                                                      01785600
.*                                                                      01785700
.*                                                                      01785800
.*                                                                      01785900
.**  End of code to set command flags                                ** 01786000
.**------------------------------------------------------------------** 01786100
.*                                                                      01786200
         AIF   ('&XREQUEST' NE 'MONITOR_LIST'     AND                  *01786300
                '&XREQUEST' NE 'MONITOR_KEYRANGE' AND                  *01786400
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01786500
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01786600
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01786700
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01786800
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01786900
                '&XREQUEST' NE 'DEQ_EVENTQ').PLMONITORLISTNOTSPEC       01787000
.*                                                                      01787100
.*   _xUid23, _xConId                                                   01787200
         MVC   &PLOFF_XUID23.(1,1),&PLOFF_XCONID.(1)                    01787300
.*                                                                      01787400
         AGO   .PLMONITORLISTEND                                        01787500
.*                                                                      01787600
.PLMONITORLISTNOTSPEC ANOP ,                                            01787700
.PLMONITORLISTEND ANOP ,                                                01787800
.*                                                                      01787900
         AIF   ('&XREQUEST' NE 'MONITOR_KEYRANGE').KTNOTKEYRANGE        01788000
.*   _xFL22LM                                                           01788100
         OI    &PLOFF_XFL22LM.(1),B'01100000'                           01788200
.KTNOTKEYRANGE   ANOP ,                                                 01788300
                                                                        01788400
.*                                                                      01788500
         AIF   ('&XREQUEST' NE 'LOCK').PLLOCKOPEREND                    01788600
.* Handle the LockComp specification.                                   01788700
.*                                                                      01788800
.* There are four ways it can be specified:                             01788900
.*  1) LOCKCOMP=(reg)       --> "reg" contains the address of the value 01789000
.*  2) LOCKCOMP=offset(reg) --> explicit basing specification           01789100
.*  3) LOCKCOMP=name        --> variable name                           01789200
.*  4) LOCKCOMP=value       --> hard-coded value                        01789300
.*                                                                      01789400
         AIF   ('&XLOCKCOMP' EQ ''              OR                     *01789500
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLNOLOCKCOMP             01789600
         AIF   ('&XLOCKCOMP'(1,1) NE '(').PLLOCKCOMPNOTREG              01789700
&ZCGPR   SETC  '0('.'&XLOCKCOMP'(2,K'&XLOCKCOMP-2).')'                  01789800
         AGO   .PLENDLOCKCOMPSETUP                                      01789900
.PLLOCKCOMPNOTREG ANOP ,                                                01790000
&ZCGPR   SETC  '&XLOCKCOMP'                                             01790100
&ZC      SETC  '&XLOCKCOMP'(1,1)                                        01790200
         AIF   (T'&ZC NE 'N').PLENDLOCKCOMPSETUP                        01790300
&ZC      SETC  '&XLOCKCOMP'                                             01790400
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDLOCKCOMPSETUP               01790500
&ZCGPR   SETC  '=FL1''&XLOCKCOMP'''                                     01790600
.PLENDLOCKCOMPSETUP ANOP ,                                              01790700
.PLNOLOCKCOMP  ANOP ,                                                   01790800
.*                                                                      01790900
         AIF   ('&XLOCKOPER' NE 'RESET').PLLOCKOPERNOTRESET             01791000
.*                                                                      01791100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01791200
                '&XLOCKCOMP' EQ '').PLRESETNOTLOCKCOMP                  01791300
.*                                                                      01791400
.*   _xCglm                                                             01791500
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                01791600
.*                                                                      01791700
         AGO   .PLRESETEND                                              01791800
.*                                                                      01791900
.PLRESETNOTLOCKCOMP ANOP ,                                              01792000
.*                                                                      01792100
.*   _xCglm, _xConId                                                    01792200
         MVC   &PLOFF_XCGLM.(1,1),&PLOFF_XCONID.(1)                     01792300
.*                                                                      01792400
.PLRESETEND ANOP ,                                                      01792500
.*                                                                      01792600
         AGO   .PLLOCKOPEREND                                           01792700
.*                                                                      01792800
.PLLOCKOPERNOTRESET ANOP ,                                              01792900
.*                                                                      01793000
         AIF   ('&XLOCKOPER' NE 'SET').PLLOCKOPERNOTSET                 01793100
.*                                                                      01793200
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01793300
                '&XLOCKCOMP' EQ '').PLSETNOTLOCKCOMP                    01793400
.*                                                                      01793500
.*   _xCglm                                                             01793600
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                01793700
.*                                                                      01793800
.PLSETNOTLOCKCOMP ANOP ,                                                01793900
.*                                                                      01794000
.*                                                                      01794100
.*   _xUid64, _xConId                                                   01794200
         MVC   &PLOFF_XUID64.(1,1),&PLOFF_XCONID.(1)                    01794300
.*                                                                      01794400
         AGO   .PLLOCKOPEREND                                           01794500
.*                                                                      01794600
.PLLOCKOPERNOTSET ANOP ,                                                01794700
.*                                                                      01794800
         AIF   ('&XLOCKOPER' NE 'TEST').PLLOCKOPERNOTTEST               01794900
.*                                                                      01795000
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01795100
                '&XLOCKCOMP' EQ '').PLTESTNOTLOCKCOMP                   01795200
.*                                                                      01795300
.*   _xCompConId                                                        01795400
         MVC   &PLOFF_XCOMPCONID.(1,1),&ZCGPR                           01795500
.*                                                                      01795600
         AGO   .PLTESTLOCKCOMPEND                                       01795700
.*                                                                      01795800
.PLTESTNOTLOCKCOMP ANOP ,                                               01795900
.*                                                                      01796000
.*   _xCompConId, _xConId                                               01796100
         MVC   &PLOFF_XCOMPCONID.(1,1),&PLOFF_XCONID.(1)                01796200
.*                                                                      01796300
.PLTESTLOCKCOMPEND ANOP ,                                               01796400
.*                                                                      01796500
         AGO   .PLLOCKOPEREND                                           01796600
.*                                                                      01796700
.PLLOCKOPERNOTTEST ANOP ,                                               01796800
.*                                                                      01796900
         AIF   ('&XLOCKOPER' NE 'READNEXT').PLREADNEXTEND               01797000
.*                                                                      01797100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01797200
                '&XLOCKCOMP' EQ '').PLREADNEXTEND                       01797300
.*                                                                      01797400
.*   _xCglm                                                             01797500
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                01797600
.*                                                                      01797700
.PLREADNEXTEND ANOP ,                                                   01797800
.*                                                                      01797900
         AGO   .PLLOCKOPEREND                                           01798000
.*                                                                      01798100
.PLLOCKOPERNOTSPEC ANOP ,                                               01798200
.PLLOCKOPEREND ANOP ,                                                   01798300
.*                                                                      01798400
.**  Set the AuthComp and NewAuth fields                             ** 01798500
.*                                                                      01798600
.*   With IXLLSTC, there is but one AUTHCOMP field in the parameter     01798700
.*   list.  With IXLLIST prior to JBB6609, there were two places in the 01798800
.*   parameter list where AUTHCOMP might be put, and hand coding to set 01798900
.*   the appropriate field was required.  With IXLLSTC, no such hand    01799000
.*   coding is required.                                           @L2A 01799100
.*                                                                      01799200
.*   Similarly, we can now let AMG set the NEWAUTH field.  However,     01799300
.*   the coupling facility always updates the authority if the          01799400
.*   WRITE_LCONTROLS operation passes the AUTHCOMP check.               01799500
.*   Thus if the user does not want the authority                       01799600
.*   to change, we must ensure that the NEWAUTH field has the same      01799700
.*   contents as the AUTHCOMP field.                               @L2A 01799800
.*                                                                      01799900
         AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS').PLNEWAUTH             01800000
         AIF   ('&NEWAUTH(1)'  NE 'NO_NEWAUTH'  AND                    *01800100
                '&NEWAUTH(1)'  NE '').PLNEWAUTH                         01800200
         MVC   &PLOFF_XNEWAUTH.(16,1),&PLOFF_XAUTHCOMP.(1)              01800300
.PLNEWAUTH ANOP ,                                                       01800400
.*                                                                      01800500
.*                                                                      01800600
.*                                                                      01800700
.**------------------------------------------------------------------** 01800800
.**  End of code to fill in the parameter list                       ** 01800900
.**------------------------------------------------------------------** 01801000
.*                                                                      01801100
.**------------------------------------------------------------------** 01801200
.**  Ensure AR1 is 0 for primary callers                             ** 01801300
.**------------------------------------------------------------------** 01801400
.*                                                                      01801500
.**  This code is necessary because the entry linkage of the called  ** 01801600
.**  routine needs to reference fields in the parameter list while   ** 01801700
.**  executing in AR mode without knowing the mode of the caller.    ** 01801800
.*                                                                      01801900
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    01802000
         LAE   1,0(1,0)                 Make sure AR1 is cleared        01802100
.CALLSKIPSETAR1 ANOP ,                                                  01802200
.*                                                                      01802300
.*                                                                      01802400
.**------------------------------------------------------------------** 01802500
.**  Generate the linkage to the list routine                        ** 01802600
.**------------------------------------------------------------------** 01802700
.*                                                                      01802800
.**  Note that in the following instructions the index register is   ** 01802900
.**  used instead of the base register so that ALET translation is   ** 01803000
.**  not performed and the code works the same in both primary and   ** 01803100
.**  AR mode.                                                        ** 01803200
.*                                                                      01803300
         L     15,16(0,0)               Get CVT address                 01803400
         L     15,140(15,0)             Get ECVT address                01803500
         L     15,256(15,0)             Get XRAT address                01803600
         L     15,36(15,0)              List mainline routine           01803700
         BALR  14,15                    Branch to routine               01803800
.*                                                                      01803900
.*                                                                      01804000
.ENDGENLINKAGE ANOP ,                                                   01804100
.*                                                                      01804200
.**------------------------------------------------------------------** 01804300
.**  End of user maclasm code                                        ** 01804400
.**------------------------------------------------------------------** 01804500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01804600
.ZLINKX               ANOP  ,                                           01804700
.*******************************************************************    01804800
.***AP.X01  FORMAT GENERATED CODE                                       01804900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01805000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01805100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01805200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01805300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01805400
                      AIF   (K'&ZLD LE 0).ZL51                          01805500
&ZLC                  SETA  35             COMMENT COLUMN               01805600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01805700
&ZLC                  SETA  33             COMMENT COLUMN               01805800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01805900
&ZLV                  SETC  '&ZLV'.' '                                  01806000
                      AGO   .ZL31                                       01806100
.*                                                                      01806200
.ZL41                 ANOP  ,                                           01806300
&ZLV                  SETC  '&ZLV'.' '                                  01806400
.ZL51                 ANOP  ,                                           01806500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01806600
.*                                                                      01806700
&ZLL     &ZLOP &ZLV                                                     01806800
.*                                                                      01806900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01807000
                      AGO   .ZL21          CONTINUE LOOPING             01807100
.*                                                                      01807200
.ZLX1                 ANOP  ,                                           01807300
.*******************************************************************    01807400
.***AP.X02  END OF IXLLSTC MACRO                                        01807500
&ZIXLLSTC             SETC  'YES'          SET IXLLSTC USED             01807600
         POP   PRINT                                                    01807700
*                                            IXLLSTC-5                  01807800
         SPACE 1                                                        01807900
.ZLX2                 ANOP  ,                                           01808000
         MEND                                                           01808100
**********************************************************************/ 01808200
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  01808300
*%IXLLSTC: MACRO KEYS(CONTOKEN,REQID,REQUEST,LOCKINDEX,LOCKOPER,        01808400
*                 LOCKMODE,LOCKCOMP,LOCKDATA,LISTNUM,BUFLIST,           01808500
*                 BUFADDRTYPE,PAGEABLE,BUFSTGKEY,BUFALET,BUFADDRSIZE,   01808600
*                 BUFFER,AUTHCOMP,NEWAUTH,LISTLIMIT,LISTDESC,LISTKEY,   01808700
*                 MAXLISTKEY,SETCURSOR,KEYRANGE,KEYRANGESTART,          01808800
*                 KEYRANGEEND,KEYRANGESTATE,KREMPTY,KRNOTEMPTY,         01808900
*                 LISTSTATE,LISTEMPTY,LISTNOTEMPTY,KEYRNOTIFYDELAY,     01809000
*                 LISTNOTIFYDELAY,KEYTYPE,ENTRYKEY,SECONDARYKEY,        01809100
*                 ACTION,VECTORINDEX,DRIVEEXIT,MONITORTYPE,             01809200
*                 NOTIFICATION,UNC,STARTINDEX,ENDINDEX,MOSVECTOR,       01809300
*                 BUFNUM,BUFINCRNUM,BUFSIZE,MODE,ANSAREA,ANSLEN,        01809400
*                 REQECB,REQDATA,REQTOKEN,FUNCTION,LOCKVALUE,           01809500
*                 RETURNDUPFAIL,RETCODE,RSNCODE,PLISTVER,MF);           01809600
*  ANS('?'!!MACLABEL!!' '!!'IXLLSTCP '!!MACLIST!!                       01809700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              01809800
*%END IXLLSTC;                                                          01809900
