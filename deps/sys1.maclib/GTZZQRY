*                                                                       00001000
* %DCL GTZZQRY_INCLUDED CHAR EXT;                                       00002000
* %DEACTIVATE GTZZQRY_INCLUDED;                                         00003000
* %IF GTZZQRY_INCLUDED = '' %THEN                                       00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 21063. CBGEN compile date 20027         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         GTZZQRY &DSECT=YES,&LIST=YES,&TITLE=YES,&GTZQUAAHEADER=YES,   *00009000
               &GTZQUAASTATUS=COND,&GTZQUAASGTZPRMSUFFIXES=COND,       *00010000
               &GTZQUAAFILTER=COND,&GTZQUAAEXCLUDE=COND,               *00011000
               &GTZQUAADEBUG=COND,&GTZQUAATRACKDATA=COND                00012000
                      GBLC  &GTZZQRY_INCLUDED                           00013000
                      GBLC  &ZCBPRINT                                   00014000
&GTZZQRY_INCLUDED     SETC  'YES'                                       00015000
                      AIF   ('&LIST' EQ 'NONE').P0                      00016000
                      AIF   ('&TITLE' EQ 'NO').P5                       00017000
 TITLE                'GTZZQRY  - GTZQUERY area mappings and constants *00018000
                         '                                              00019000
.P5                   ANOP                                              00020000
**/ GTZZQRY_1:;                                                         00021000
*/* START OF SPECIFICATIONS ******************************************* 00022000
*                                                                       00023000
*01* PROPRIETARY STATEMENT=                                             00024000
*                                                                       00025000
*   LICENSED MATERIALS - PROPERTY OF IBM                                00026000
*   5650-ZOS                                                            00027000
*   COPYRIGHT IBM CORP. 2013,2017                                       00028000
*                                                                       00029000
*01* STATUS = HBB77B0                                                   00030000
*                                                                       00031000
*01* END OF PROPRIETARY STATEMENT                                       00032000
*                                                                       00033000
*01* EXTERNAL CLASSIFICATION: PI                                        00034000
*01* END OF EXTERNAL CLASSIFICATION:                                    00035000
*                                                                       00036000
*01* DESCRIPTIVE NAME:  GTZQUERY area mappings and constants            00037000
*                                                                       00038000
*01* MACRO NAME:  GTZZQRY                                               00039000
*                                                                       00040000
*01* DSECT NAME:                                                        00041000
*     GTZQUAAHDR                                                        00042000
*     GTZQUAASTATUS                                                     00043000
*     GTZQUAATRACKDATA                                                  00044000
*     GTZQUAAFILTER                                                     00045000
*     GTZQUAAEXCLUDE                                                    00046000
*     GTZQUAADEBUG                                                      00047000
*                                                                       00048000
*01* COMPONENT:  IBM Generic Tracker for z/OS (SCGTZ)                   00049000
*                                                                       00050000
*01* EYE-CATCHER:  GTZQUAAH                                             00051000
*02*  OFFSET: 0                                                         00052000
*02*  LENGTH: 8                                                         00053000
*                                                                       00054000
*01* STORAGE ATTRIBUTES:                                                00055000
*02*  SUBPOOL:  Caller-supplied                                         00056000
*02*  KEY:  Caller-supplied                                             00057000
*02*  RESIDENCY:  Caller-supplied                                       00058000
*                                                                       00059000
*01* SIZE:                                                              00060000
*            GTZQUAAHEADER          -- X'0100' bytes                    00061000
*            GTZQUAASTATUS          -- X'0100' bytes                    00062000
*            GTZQUAASGTZPRMSUFFIXES -- X'0002' bytes                    00063000
*            GTZQUAAFILTER          -- X'0068' bytes                    00064000
*            GTZQUAAEXCLUDE         -- X'0080' bytes                    00065000
*            GTZQUAADEBUG           -- X'0080' bytes                    00066000
*            GTZQUAATRACKDATA       -- X'00B0' bytes                    00067000
*    Variable, with minimum required = GtzQuaaMinAnsLen                 00068000
*                                                                       00069000
*01* CREATED BY:                                                        00070000
*     Caller and passed as parameter on ANSAREA keyword on GTZQUERY     00071000
*     to be filled in qith query results.                               00072000
*                                                                       00073000
*01* POINTED TO BY:                                                     00074000
*     GTZQUERY parameter list                                           00075000
*                                                                       00076000
*01* SERIALIZATION:                                                     00077000
*     None required                                                     00078000
*                                                                       00079000
*01* FUNCTION:                                                          00080000
*02* The returned ANSAREA output consists of a header (GTZQUAAHDR)      00081000
*    and optionally one or more sections for                            00082000
*    STATUS (GTZQUAASTATUS),                                            00083000
*    TRACKDATA (GTZQUAATRACKDATA),                                      00084000
*    EXCLUDE (GTZQUAAEXCLUDE), and                                      00085000
*    DEBUG (GTZQUAADEBUG)                                               00086000
*    as indicated by the appropriate fields in the header.              00087000
*                                                                       00088000
*01* METHOD OF ACCESS:                                                  00089000
*02*  ASM:                                                              00090000
*      GTZQUAA                                                          00091000
*           DSECT=YES!NO  -- Request DSECT definition                   00092000
*           GTZQUAAHEADER=YES!NO!COND -- Request mapping of             00093000
*                            GTZQUAAHEADER                              00094000
*           GTZQUAASTATUS=YES!NO!COND -- Request mapping of             00095000
*                            GTZQUAASTATUS                              00096000
*           GTZQUAATRACKDATA=YES!NO!COND -- Request mapping of          00097000
*                            GTZQUAATRACKDATA                           00098000
*           GTZQUAAFILTER=YES!NO!COND -- Request mapping of             00099000
*                            GTZQUAAFILTER, required for                00100000
*                            GTZQUAAEXCLUDE and GTZQUAADEBUG            00101000
*           GTZQUAAEXCLUDE=YES!NO!COND -- Request mapping of            00102000
*                            GTZQUAAEXCLUDE                             00103000
*           GTZQUAADEBUG=YES!NO!COND -- Request mapping of              00104000
*                            GTZQUAADEBUG                               00105000
*     Default: DSECT=YES,GTZQUAAHEADER=COND,GTZQUAASTATUS=COND,         00106000
*              GTZQUAATRACKDATA=COND,GTZQUAAFILTER=COND,                00107000
*              GTZQUAAEXCLUDE=COND,GTZQUAADEBUG=COND                    00108000
*     Notes: name=YES  => expand                                        00109000
*            name=NO   => do not expand                                 00110000
*            name=COND => expand only if DSECT=YES                      00111000
*                                                                       00112000
*02*  PL/X:                                                             00113000
*      %INCLUDE SYSLIB(GTZZQRY)                                         00114000
*                                                                       00115000
*01* DELETED BY:                                                        00116000
*      Caller of GTZQUERY                                               00117000
*                                                                       00118000
*01* FREQUENCY:  Created for response from GTZQUERY                     00119000
*                                                                       00120000
*01* DEPENDENCIES:                                                      00121000
*      GTZQUERY.amg, as source for RC/RSN via AMGRET                    00122000
*      gtzhqry.h, corresponding C header file GtzQuaa mappings          00123000
*                                                                       00124000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00125000
*                                                                       00126000
*01* CHANGE ACTIVITY:                                                   00127000
*                                                                       00128000
*   $L0=GENTRKR  ,HBB7790,110523,RD00UT: Initial create                 00129000
*   $L1=GENTRKR  ,HBB7790,110712,RD00UT: versions                       00130000
*   $L2=GENTRKR  ,HBB7790,110722,RD00UT: EXCLUDE                        00131000
*   $L3=GENTRKR  ,HBB7790,110817,RD00UT: Filter offsets                 00132000
*   $L4=GENTRKR  ,HBB7790,120221,RD00UT: Merge constants                00133000
*   $L5=GENTRKR  ,HBB7790,121030,RD00UT: EVENTJOB, HOMEJOB              00134000
*   $L6=GENTRKR  ,HBB77A0,131111,RD00UT: BadLen (16->8)                 00135000
*   $L7=ME27436  ,HBB77A0,140415,RD00UT: PERSIST                        00136000
*   $L8=GENTRKR  ,HBB77B0,150826,RD00UT: RACLIST reason for 088F        00137000
*   $L9=GENTRKR  ,HBB77B0,170305,RD00UT: DIRLOAD                        00138000
*                                                                       00139000
* END OF SPECIFICATIONS *********************************************/  00140000
*% /*                                                                   00141000
.P0                   ANOP                                              00142000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00143000
                      AIF   ('&LIST' EQ 'YES').P2                       00144000
.P1                   ANOP                                              00145000
                      PUSH  PRINT                                       00146000
                      PRINT OFF                                         00147000
.P2                   ANOP                                              00148000
*                                                                       00149000
* ****************************************************************** *  00150000
* * Answer area related constants                                    *  00151000
* ****************************************************************** *  00152000
*                                                                       00153000
*                                                                       00154000
GTZQUAAEYECATCHER_HEADER_0TO3 EQU C'GTZQ' This is the first 4-byte     *00155000
                                   segment of an 8-byte constant.       00156000
GTZQUAAEYECATCHER_HEADER_4TO7 EQU C'UAAH' This is the second 4-byte    *00157000
                                   segment of an 8-byte constant.       00158000
GTZQUAAEYECATCHER_STATUS_0TO3 EQU C'GTZQ' This is the first 4-byte     *00159000
                                   segment of an 8-byte constant.       00160000
GTZQUAAEYECATCHER_STATUS_4TO7 EQU C'UAAS' This is the second 4-byte    *00161000
                                   segment of an 8-byte constant.       00162000
GTZQUAAEYECATCHER_TRACKDATA_0TO3 EQU C'GTZQ' This is the first 4-byte  *00163000
                                   segment of an 8-byte constant.       00164000
GTZQUAAEYECATCHER_TRACKDATA_4TO7 EQU C'UAAT' This is the second 4-byte *00165000
                                   segment of an 8-byte constant.       00166000
GTZQUAAEYECATCHER_EXCLUDE_0TO3 EQU C'GTZQ' This is the first 4-byte    *00167000
                                   segment of an 8-byte constant.       00168000
GTZQUAAEYECATCHER_EXCLUDE_4TO7 EQU C'UAAE' This is the second 4-byte   *00169000
                                   segment of an 8-byte constant.       00170000
GTZQUAAEYECATCHER_DEBUG_0TO3 EQU C'GTZQ' This is the first 4-byte      *00171000
                                   segment of an 8-byte constant.       00172000
GTZQUAAEYECATCHER_DEBUG_4TO7 EQU C'UAAD' This is the second 4-byte     *00173000
                                   segment of an 8-byte constant.       00174000
GTZQUAAHVERSION1      EQU   1                                           00175000
GTZQUAAHCURRENTVERSION EQU  1                                           00176000
GTZQUAAMINANSLEN      EQU   256                                         00177000
GTZQUAAHEADERLEN      EQU   256    SIZE(GtzQuaaHeader)                  00178000
GTZQUAAMINSTATUSLEN   EQU   256    Fixed portion,                      *00179000
                                   (=SIZE(GtzQuaaStatus))               00180000
GTZQUAAMAXSTATUSLEN   EQU   512    Fixed+GTZPRMxx suffixes              00181000
GTZQUAAMAXPATHLEN     EQU   1024                                        00182000
GTZQUAAMAXEVENTDESCLEN EQU  64                                          00183000
*                                                                       00184000
*   The following two size constants are for a single GtzQuaaExclude    00185000
*   area. Note, that there can be more than one such area available.    00186000
*                                                                       00187000
*                                                                       00188000
GTZQUAAMINEXCLUDELEN  EQU   144    Fixed portion,                      *00189000
                                   (=SIZE(GtzQuaaExclude))              00190000
GTZQUAAMAXEXCLUDELEN  EQU   2256                                        00191000
*                                                                       00192000
*   The following two size constants are for a single GtzQuaaDebug      00193000
*   area. Note, that there can be more than one such area available.    00194000
*                                                                       00195000
*                                                                       00196000
GTZQUAAMINDEBUGLEN    EQU   144    Fixed portion,                      *00197000
                                   (=SIZE(GtzQuaaDebug))                00198000
GTZQUAAMAXDEBUGLEN    EQU   2256                                        00199000
*                                                                       00200000
*   The following two size constants are for a single GtzQuaaTrackData  00201000
*   area. Note, that there can be more than one such area available.    00202000
*                                                                       00203000
*                                                                       00204000
GTZQUAAMINTRACKDATALEN EQU  176    Fixed portion,                      *00205000
                                   (=SIZE(GtzQuaaTrackData))            00206000
GTZQUAAMAXTRACKDATALEN EQU  2288                                        00207000
                      AIF   ('&GTZQUAAHEADER' EQ 'NO').L0002            00208000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00209000
                      AIF   ('&GTZQUAAHEADER' NE 'YES').L0002           00210000
.L0003                ANOP                                              00211000
*                                                                       00212000
* ****************************************************************** *  00213000
* * Header section mapping the start of the ANSAREA specified on     *  00214000
* * GTZQUERY:                                                        *  00215000
* ****************************************************************** *  00216000
*                                                                       00217000
*                                                                       00218000
                      AIF   ('&DSECT' EQ 'YES').L0004                   00219000
GTZQUAAHEADER         DS    0D                                          00220000
                      AGO   .L0005                                      00221000
.L0004                ANOP                                              00222000
GTZQUAAHEADER         DSECT                                             00223000
.L0005                ANOP                                              00224000
GTZQUAAHEYECATCHER    DS    CL8                                         00225000
GTZQUAAHVERSION       DS    X                                           00226000
                      DS    CL3    reserved                             00227000
GTZQUAAHFLAGS         DS    BL4                                         00228000
*  Bit definitions:                                                     00229000
GTZQUAAHSTATUSVALID   EQU   X'40'  If ON ('1'b), STATUS data was       *00230000
                                   requested and GtzQuaaHStatusOffset  *00231000
                                   contains a valid value               00232000
GTZQUAAHTRACKDATAVALID EQU  X'20'  If ON ('1'b), TRACKDATA was         *00233000
                                   requested and                       *00234000
                                   GtzQuaaHTrackDataOffset, GtzQu      *00235000
                                   aaHTrackDataEntriesAvailable, and   *00236000
                                   GtzQuaaHTrackDataEntriesPr ovided   *00237000
                                   contain valid values                 00238000
GTZQUAAHEXCLUDEVALID  EQU   X'10'  If ON ('1'b), EXCLUDE data was      *00239000
                                   requested and                       *00240000
                                   GtzQuaaHExcludeOffset, GtzQuaa      *00241000
                                   HExcludeEntriesAvailable, and       *00242000
                                   GtzQuaaHExcludeEntriesProvided      *00243000
                                   contain valid values                 00244000
GTZQUAAHDEBUGVALID    EQU   X'08'  If ON ('1'b), DEBUG data was        *00245000
                                   requested and GtzQuaaHDebugOffset,  *00246000
                                   GtzQuaaHDebugEntriesAvailable, and  *00247000
                                   GtzQuaaHDebugEntriesProvided        *00248000
                                   contain valid values                 00249000
                      DS    BL.026                                      00250000
                      ORG   GTZQUAAHFLAGS+4                             00251000
GTZQUAAHBYTESAVAILABLE DS   FL8    Total number of bytes needed in the *00252000
                                   answer area to contain all of the   *00253000
                                   requested information. If this      *00254000
                                   number is larger than               *00255000
                                   GtzQuaaHBytesProvided then some     *00256000
                                   requested information did not fit   *00257000
                                   and some of the following           *00258000
                                   ...EntriesProvided counts might be  *00259000
                                   different than the corresponding    *00260000
                                   ...EntriesAvailable, indicating      00261000
*                                  where only a subset of available    *00262000
                                   information was returned from this  *00263000
                                   call.                                00264000
GTZQUAAHBYTESPROVIDED DS    FL8    Total number of bytes in the answer *00265000
                                   area that were used to fill in the  *00266000
                                   requested information.               00267000
GTZQUAAHSTATUSOFFSET  DS    FL8    Offset from the start of the answer *00268000
                                   area to the GtzQuaaStatus section.  *00269000
                                   Only valid for use, if the          *00270000
                                   GtzQuaaHStatusValid flag is ON      *00271000
                                   ('1'b).                              00272000
GTZQUAAHTRACKDATAOFFSET DS  FL8    Offset from the start of the answer *00273000
                                   area to the first GtzQuaaTrackData  *00274000
                                   entry. Will contain zero for G      *00275000
                                   tzQuaaHTrackDataEntriesProvide d=0. *00276000
                                   Only valid for use, if the          *00277000
                                   GtzQuaaHTrackDataValid flag is ON   *00278000
                                   ('1'b).                              00279000
GTZQUAAHTRACKDATAENTRIESPROVIDED DS FL8 Count of GtzQuaaTrackData      *00280000
                                   entries provided in this answer     *00281000
                                   area, starting at offset            *00282000
                                   GtzQuaaHTrackDataOffset. Only valid *00283000
                                   for use, if the                     *00284000
                                   GtzQuaaHTrackDataValid flag is ON   *00285000
                                   ('1'b).                              00286000
GTZQUAAHTRACKDATAENTRIESAVAILABLE DS FL8 Total count of                *00287000
                                   GtzQuaaTrackData entries that could *00288000
                                   have been returned if the answer    *00289000
                                   area would have been large enough.  *00290000
                                   If all available entries fit, this  *00291000
                                   number will be equal to G           *00292000
                                   tzQuaaHTrackDataEntriesProvide d.   *00293000
                                   Only valid, if the                  *00294000
                                   GtzQuaaHTrackDataValid flag is ON   *00295000
                                   ('1'b).                              00296000
GTZQUAAHEXCLUDEOFFSET DS    FL8    Offset from the start of the answer *00297000
                                   area to the first GtzQuaaExclude    *00298000
                                   entry. Will be set to zero for      *00299000
                                   GtzQua aHExcludeEntriesProvided=0.  *00300000
                                   Only valid for use, if the          *00301000
                                   GtzQuaaHExcludeValid flag is ON     *00302000
                                   ('1'b).                              00303000
GTZQUAAHEXCLUDEENTRIESPROVIDED DS FL8 Count of GtzQuaaExclude entries  *00304000
                                   provided in this answer area,       *00305000
                                   starting at offset                  *00306000
                                   GtzQuaaHExcludeOffset. Only valid   *00307000
                                   for use, if the                     *00308000
                                   GtzQuaaHExcludeValid flag is ON     *00309000
                                   ('1'b).                              00310000
GTZQUAAHEXCLUDEENTRIESAVAILABLE DS FL8 Total count of GtzQuaaExclude   *00311000
                                   entries that could have been        *00312000
                                   returned if the answer area would   *00313000
                                   have been large enough. If all      *00314000
                                   available entries fit, this number  *00315000
                                   will be equal to GtzQua             *00316000
                                   aHExcludeEntriesProvided. Only      *00317000
                                   valid, if the GtzQuaaHExcludeValid  *00318000
                                   flag is ON ('1'b).                   00319000
GTZQUAAHDEBUGOFFSET   DS    FL8    Offset from the start of the answer *00320000
                                   area to the first GtzQuaaDebug      *00321000
                                   entry. Will be set to zero for      *00322000
                                   GtzQuaaHDeb ugEntriesProvided=0.    *00323000
                                   Only valid for use, if the          *00324000
                                   GtzQuaaHDebugValid flag is ON       *00325000
                                   ('1'b).                              00326000
GTZQUAAHDEBUGENTRIESPROVIDED DS FL8 Count of GtzQuaaDebug entries      *00327000
                                   provided in this answer area,       *00328000
                                   starting at offset                  *00329000
                                   GtzQuaaHDebugOffset. Only valid for *00330000
                                   use, if the GtzQuaaHDebugValid flag *00331000
                                   is ON ('1'b).                        00332000
GTZQUAAHDEBUGENTRIESAVAILABLE DS FL8 Total count of GtzQuaaDebug       *00333000
                                   entries that could have been        *00334000
                                   returned if the answer area would   *00335000
                                   have been large enough. If all      *00336000
                                   available entries fit, this number  *00337000
                                   will be equal to                    *00338000
                                   GtzQuaaHDebugEntriesProvided. Only  *00339000
                                   valid, if the GtzQuaaHDebugValid    *00340000
                                   flag is ON ('1'b).                   00341000
                      DS    FL8                                         00342000
                      DS    CL136  Reserved                             00343000
GTZQUAAHEADER_LEN     EQU   *-GTZQUAAHEADER                             00344000
.L0002                ANOP                                              00345000
                      AIF   ('&GTZQUAASTATUS' EQ 'NO').L0006            00346000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00347000
                      AIF   ('&GTZQUAASTATUS' NE 'YES').L0006           00348000
.L0007                ANOP                                              00349000
*                                                                       00350000
* ****************************************************************** *  00351000
* * Mapping of the Status Information section of the ANSAREA, at     *  00352000
* * offset GtzQuaaHStatusOffset (see GtzQuaaHeader) from the         *  00353000
* * beginning of the answer area filled in by GTZQUERY:              *  00354000
* ****************************************************************** *  00355000
*                                                                       00356000
*                                                                       00357000
                      AIF   ('&DSECT' EQ 'YES').L0008                   00358000
GTZQUAASTATUS         DS    0D                                          00359000
                      AGO   .L0009                                      00360000
.L0008                ANOP                                              00361000
GTZQUAASTATUS         DSECT                                             00362000
.L0009                ANOP                                              00363000
GTZQUAASEYECATCHER    DS    CL8                                         00364000
GTZQUAASFLAGS         DS    BL4                                         00365000
                      ORG   GTZQUAASFLAGS                               00366000
GTZQUAASFLAGS1        DS    X                                           00367000
*  Bit definitions:                                                     00368000
GTZQUAASTRACKENABLED  EQU   X'80'  ON ('1'b), if tracking is currently *00369000
                                   enabled. Compare command SETGTZ     *00370000
                                   TRACKING=ON                          00371000
GTZQUAASFULL          EQU   X'40'  ON ('1'b), if the tracking facility *00372000
                                   is 'full' and therefore might be    *00373000
                                   unable to store additional unique   *00374000
                                   tracked instances or other          *00375000
                                   information. Compare also           *00376000
                                   GtzQuaaSMemAvailPercent.             00377000
GTZQUAASEXCLUDENOPRM  EQU   X'20'  ON ('1'b), if some EXCLUDE          *00378000
                                   statements did not originate from a *00379000
                                   GTZPRMxx parmlib member, but from   *00380000
                                   other sources (like the SETGTZ      *00381000
                                   EXCLUDE command).                    00382000
GTZQUAASDEBUGNOPRM    EQU   X'10'  ON ('1'b), if some DEBUG statements *00383000
                                   did not originate from a GTZPRMxx   *00384000
                                   parmlib member, but from other      *00385000
                                   sources (like the SETGTZ DEBUG      *00386000
                                   command).                            00387000
GTZQUAASGTZPRMFULL    EQU   X'08'  ON ('1'b), if some GTZPRMxx         *00388000
                                   suffixes could not be recorded      *00389000
                                   centrally and are not reported via  *00390000
                                   GtzQuaaSGtzPrmSuf fixesAvailable    *00391000
                                   below. Those GTZPRMxx members were  *00392000
                                   still processed and their suffixes  *00393000
                                   are still reported for EXCLUDE or   *00394000
                                   DEBUG statements, with              *00395000
                                   ORIGIN(PARMLIB), but their suffixes *00396000
                                   just didn't fit into the centrally   00397000
*                                  kept list of suffixes.               00398000
GTZQUAASCLEAREDALL    EQU   X'04'  ON ('1'b), if CLEAR=ALL has been    *00399000
                                   used for this instance of Generic   *00400000
                                   Tracker. If ON, the other "cleared" *00401000
                                   bits (GtzQuaaSClearedTRACKDATA,     *00402000
                                   GtzQuaaSClearedEXCLUDE, and         *00403000
                                   GtzQuaaSClearedDEBUG) will be set   *00404000
                                   to ON as well, if the appropriate   *00405000
                                   collection was not empty to begin   *00406000
                                   with, since a CLEAR=ALL includes    *00407000
                                   clearing all such data.              00408000
GTZQUAASCLEAREDTRACKDATA EQU X'02' ON ('1'b), if CLEAR=ALL or          *00409000
                                   CLEAR=TRACKDATA has been used for   *00410000
                                   this instance of Generic Tracker    *00411000
                                   and if there was any track data to  *00412000
                                   be cleared.                          00413000
GTZQUAASCLEAREDEXCLUDE EQU  X'01'  ON ('1'b), if CLEAR=ALL or          *00414000
                                   CLEAR=EXCLUDE has been used for     *00415000
                                   this instance of Generic Tracker    *00416000
                                   and if there were any EXLCUDEs to   *00417000
                                   be cleared.                          00418000
GTZQUAASFLAGS2        DS    X                                           00419000
*  Bit definitions:                                                     00420000
GTZQUAASCLEAREDDEBUG  EQU   X'80'  ON ('1'b), if CLEAR=ALL or          *00421000
                                   CLEAR=DEBUG has been used for this  *00422000
                                   instance of Generic Tracker and if  *00423000
                                   there were any DEBUGs to be         *00424000
                                   cleared.                             00425000
GTZQUAASPERSISTSMF    EQU   X'40'  ON ('1'b), if data persistence via  *00426000
                                   SMF records is enabled.              00427000
GTZQUAASDIRLOADYES    EQU   X'20'  ON ('1'b), if CSVQUERY DIRLOAD=YES  *00428000
                                   is in use.                           00429000
GTZQUAASFLAGS3        DS    X                                           00430000
                      ORG   GTZQUAASFLAGS3                              00431000
                      DS    B                                           00432000
GTZQUAASFLAGS4        DS    X                                           00433000
                      ORG   GTZQUAASFLAGS4                              00434000
                      DS    B                                           00435000
GTZQUAASENABLEDCOUNT  DS    F      Total number of times the tracking  *00436000
                                   status moved from disabled to       *00437000
                                   enabled, since the tracking         *00438000
                                   facility started (disabled by       *00439000
                                   default).                            00440000
GTZQUAASTRACKDATAENTRIESAVAILABLE DS FL8 Total number of unique        *00441000
                                   tracked instances currently known   *00442000
                                   to the tracking facility             00443000
GTZQUAASEXCLUDEENTRIESAVAILABLE DS FL8 Total number of exclusion       *00444000
                                   statements currently known to the   *00445000
                                   tracking facility. Compare the      *00446000
                                   GTZPRMxx EXCLUDE statement.          00447000
GTZQUAASDEBUGENTRIESAVAILABLE DS FL8 Total number of DEBUG statements  *00448000
                                   currently known to the tracking     *00449000
                                   facility. Compare the GTZPRMxx      *00450000
                                   DEBUG statement.                     00451000
                      DS    FL8                                         00452000
GTZQUAASTRACKDATAENTRIESENCOUNTERED DS FL8 Total number of non-unique  *00453000
                                   tracked instances currently known   *00454000
                                   to the tracking facility             00455000
GTZQUAASEXCLUDEREJECTCOUNT DS FL8  Total number of GTZTRACK requests   *00456000
                                   rejected due to a matching EXCLUDE  *00457000
                                   statement. This counter is reset    *00458000
                                   when the EXCLUDE statements are     *00459000
                                   cleared.                             00460000
GTZQUAASDEBUGACTIONCOUNT DS FL8    Total number of GTZTRACK requests   *00461000
                                   which triggered a DEBUG action as   *00462000
                                   specified by a matching DEBUG       *00463000
                                   statement (with its LIMIT not       *00464000
                                   exceeded yet). This counter is      *00465000
                                   reset when the DEBUG statements are *00466000
                                   cleared.                             00467000
GTZQUAASGTZPRMSUFFIXESAVAILABLE DS H Total number of GTZPRMxx members  *00468000
                                   currently known to the tracking     *00469000
                                   facility.                            00470000
GTZQUAASGTZPRMSUFFIXESPROVIDED DS H Number of GTZPRMxx suffixes        *00471000
                                   actually returned in this           *00472000
                                   GtzQuaaStatus area. This might be   *00473000
                                   less than                           *00474000
                                   GtzQuaaSGtzPrmSuffixesAvailabl e,   *00475000
                                   if the provided ANSAREA is too      *00476000
                                   small to hold all information.       00477000
GTZQUAASGTZPRMSUFFIXESOFFSET DS H  Offset from the start of this       *00478000
                                   GtzQuaaStatus area to the start of  *00479000
                                   a list of                           *00480000
                                   GtzQuaaSGtzPrmSuffixesProvided      *00481000
                                   number of suffixes of the GTZPRMxx  *00482000
                                   parmlib members currently known to  *00483000
                                   the tracking facility. The list is  *00484000
                                   a simple 'array' of consecutive     *00485000
                                   two-character suffixes and can be   *00486000
                                   mapped by GtzQuaaSGtzPrmSuffixes.    00487000
GTZQUAASGTZPRMIPLSUFFIXESAVAILABLE DS H Total number of GTZPRMxx       *00488000
                                   member suffixes specified at IPL    *00489000
                                   time via system parameter GTZPRM,   *00490000
                                   e.g. in IEASYSxx. The currently     *00491000
                                   known GTZPRMxx suffix list might be *00492000
                                   different than this IPL-time list,  *00493000
                                   if suffixes have been added or      *00494000
                                   cleared in between.                  00495000
GTZQUAASGTZPRMIPLSUFFIXESPROVIDED DS H Number of IPL-time GTZPRMxx     *00496000
                                   suffixes actually returned in this  *00497000
                                   GtzQuaaStatus area. This might be   *00498000
                                   less than GtzQuaaSGtzPrmIpl         *00499000
                                   SuffixesAvailable, if the provided  *00500000
                                   ANSAREA is too small to hold all    *00501000
                                   information.                         00502000
GTZQUAASGTZPRMIPLSUFFIXESOFFSET DS H Offset from the start of this     *00503000
                                   GtzQuaaStatus area to the start of  *00504000
                                   a list of GtzQuaaSGtz               *00505000
                                   PrmIplSuffixesProvided number of    *00506000
                                   suffixes of the GTZPRMxx parmlib    *00507000
                                   members specified at IPL-time. The  *00508000
                                   list is a simple 'array' of         *00509000
                                   consecutive two-character suffixes  *00510000
                                   and can be mapped by                *00511000
                                   GtzQuaaSGtzPrmSuffixes.              00512000
GTZQUAASMEMAVAILPERCENT DS  X      How much (in percent) of our total  *00513000
                                   dynamic memory is still available   *00514000
                                   to store track data etc. When       *00515000
                                   GtzQuaaSFull is ON this will be     *00516000
                                   zero.                                00517000
                      DS    CL3    Reserved                             00518000
GTZQUAASSYSTEMNAME    DS    CL8    The name of the system the (unique  *00519000
                                   per system) tracking facility is    *00520000
                                   running on.                          00521000
                      DS    B                                           00522000
GTZQUAASENABLEDTOD    DS    BL8    The timestamp when tracking was     *00523000
                                   last enabled (if                    *00524000
                                   GtzQuaaSTrackEnabled=ON), or when   *00525000
                                   tracking was last disabled (if      *00526000
                                   GtzQuaaSTrackEnabled=OFF), where    *00527000
                                   the latter might be the time of     *00528000
                                   when the facility started, if       *00529000
                                   tracking has not been enabled       *00530000
                                   since. See also                     *00531000
                                   GtzQuaaSEnabledCount.                00532000
                      DS    BL7                                         00533000
                      DS    CL144  Reserved                             00534000
GTZQUAASTATUS_LEN     EQU   *-GTZQUAASTATUS                             00535000
.L0006                ANOP                                              00536000
                      AIF   ('&GTZQUAASGTZPRMSUFFIXES' EQ 'NO').L000A   00537000
                      AIF   ('&DSECT' EQ 'YES').L000B                   00538000
                      AIF   ('&GTZQUAASGTZPRMSUFFIXES' NE 'YES').L000A  00539000
.L000B                ANOP                                              00540000
*                                                                       00541000
*                                      PLX-ONLY                         00542000
*                                                                       00543000
                      AIF   ('&DSECT' EQ 'YES').L000C                   00544000
GTZQUAASGTZPRMSUFFIXES DS   0H                                          00545000
                      AGO   .L000D                                      00546000
.L000C                ANOP                                              00547000
GTZQUAASGTZPRMSUFFIXES DSECT                                            00548000
.L000D                ANOP                                              00549000
GTZQUAASGTZPRMSUFFIX  DS    CL2                                         00550000
GTZQUAASGTZPRMSUFFIXES_LEN EQU *-GTZQUAASGTZPRMSUFFIXES                 00551000
.L000A                ANOP                                              00552000
                      AIF   ('&GTZQUAAFILTER' EQ 'NO').L000E            00553000
                      AIF   ('&DSECT' EQ 'YES').L000F                   00554000
                      AIF   ('&GTZQUAAFILTER' NE 'YES').L000E           00555000
.L000F                ANOP                                              00556000
*                                                                       00557000
* ****************************************************************** *  00558000
* * Mapping of a single filter structure, shared by GTZQUAAEXCLUDE   *  00559000
* * and GTZQUAADEBUG.                                                *  00560000
*                                                                       00561000
*                                                                       00562000
                      AIF   ('&DSECT' EQ 'YES').L0010                   00563000
GTZQUAAFILTER         DS    0D                                          00564000
                      AGO   .L0011                                      00565000
.L0010                ANOP                                              00566000
GTZQUAAFILTER         DSECT                                             00567000
.L0011                ANOP                                              00568000
GTZQUAAFFILTEREDFLAGS1 DS   B                                           00569000
*  Bit definitions:                                                     00570000
GTZQUAAFOWNERFILTERED EQU   X'80'  ON, if filtering by OWNER            00571000
GTZQUAAFSOURCEFILTERED EQU  X'40'  ON, if filtering by SOURCE. Only    *00572000
                                   valid for SOURCETYPE=NOPATH          00573000
GTZQUAAFSOURCEPATHFILTERED EQU X'20' ON, if filtering by SOURCEPATH.   *00574000
                                   Only valid for SOURCETYPE=PATH       00575000
GTZQUAAFEVENTDESCFILTERED EQU X'10' ON, if filtering by EVENTDESC       00576000
GTZQUAAFEVENTDATAFILTERED EQU X'08' ON, if filtering by EVENTDATA       00577000
GTZQUAAFEVENTJOBFILTERED EQU X'04' ON, if filtering by EVENTJOB         00578000
GTZQUAAFHOMEJOBFILTERED EQU X'02'  ON, if filtering by HOMEJOB          00579000
GTZQUAAFPROGRAMFILTERED EQU X'01'  ON, if filtering by PROGRAM. Only   *00580000
                                   valid for PROGRAMTYPE=NOPATH         00581000
GTZQUAAFFILTEREDFLAGS2 DS   B                                           00582000
*  Bit definitions:                                                     00583000
GTZQUAAFPROGRAMPATHFILTERED EQU X'80' ON, if filtering by PROGRAMPATH. *00584000
                                   Only valid for PROGRAMTYPE=PATH      00585000
GTZQUAAFPROGRAMOFFSETFILTERED EQU X'40' ON, if filtering by            *00586000
                                   PROGRAMOFFSET                        00587000
GTZQUAAFEVENTASIDFILTERED EQU X'20' ON, if filtering by EVENTASID       00588000
GTZQUAAFHOMEASIDFILTERED EQU X'10' ON, if filtering by HOMEASID         00589000
GTZQUAAFSOURCETYPEFILTERED EQU X'08' ON, if SOURCETYPE <> ALL           00590000
GTZQUAAFPROGRAMTYPEFILTERED EQU X'04' ON, if PROGRAMTYPE <> ALL         00591000
GTZQUAAFSOURCETYPE    DS    X      Indicates what type of source this  *00592000
                                   filter is defined to match: SOURCE, *00593000
                                   SOURCEPATH, or both. See the        *00594000
                                   corresponding GtzQuaaSourceType     *00595000
                                   equates.                             00596000
GTZQUAAFPROGRAMTYPE   DS    X      Indicates what type of program this *00597000
                                   filter is defined to match:         *00598000
                                   PROGRAM, PROGRAMPATH, or both. See  *00599000
                                   the corresponding                   *00600000
                                   GtzQuaaProgramType equates.          00601000
                      DS    CL4    reserved                             00602000
GTZQUAAFOWNER         DS    CL16   OWNER filter value. Only valid if   *00603000
                                   GtzQuaaFOwnerFiltered is ON          00604000
GTZQUAAFSOURCE        DS    CL8    SOURCE filter value. Only valid if  *00605000
                                   GtzQuaaFSourceFiltered is ON         00606000
GTZQUAAFSOURCEPATHLEN DS    H      length of the SOURCEPATH filter     *00607000
                                   value. Only valid if                *00608000
                                   GtzQuaaFSourcePathFiltered is ON     00609000
GTZQUAAFSOURCEPATHOFFSET DS H      Offset from the start of this       *00610000
                                   GtzQuaaFilter area to the           *00611000
                                   SOURCEPATH filter value of the      *00612000
                                   above length. Only valid if         *00613000
                                   GtzQuaaFSourcePathFiltered is ON     00614000
GTZQUAAFEVENTDESCLEN  DS    H      length of the EVENTDESC filter      *00615000
                                   value. Only valid if                *00616000
                                   GtzQuaaFEventDescFiltered is ON      00617000
GTZQUAAFEVENTDESCOFFSET DS  H      Offset from the start of this       *00618000
                                   GtzQuaaFilter area to the EVENTDESC *00619000
                                   filter value of the above length.   *00620000
                                   Only valid if                       *00621000
                                   GtzQuaaFEventDescFiltered is ON      00622000
GTZQUAAFEVENTDATA     DS    CL16   EVENTDATA filter value. Only valid  *00623000
                                   if GtzQuaaFEventDataFiltered is ON   00624000
                      ORG   GTZQUAAFEVENTDATA                           00625000
GTZQUAAFEVENTDATA1    DS    FL8                                         00626000
GTZQUAAFEVENTDATA2    DS    FL8                                         00627000
GTZQUAAFEVENTJOB      DS    CL8    EVENTJOB filter value. Only valid   *00628000
                                   if GtzQuaaFEventJobFiltered is ON    00629000
GTZQUAAFHOMEJOB       DS    CL8    HOMEJOB filter value. Only valid if *00630000
                                   GtzQuaaFHomeJobFiltered is ON        00631000
GTZQUAAFPROGRAM       DS    CL8    PROGRAM filter value. Only valid if *00632000
                                   GtzQuaaFProgramFiltered is ON        00633000
GTZQUAAFPROGRAMOFFSET DS    FL8    PROGRAMOFFSET filter value. Only    *00634000
                                   valid if                            *00635000
                                   GtzQuaaFProgramOffsetFiltered is ON  00636000
GTZQUAAFPROGRAMPATHLEN DS   H      length of the PROGRAMPATH filter    *00637000
                                   value. Only valid if                *00638000
                                   GtzQuaaFProgramPathFiltered is ON    00639000
GTZQUAAFPROGRAMPATHOFFSET DS H     Offset from the start of this       *00640000
                                   GtzQuaaFilter area to the           *00641000
                                   PROGRAMPATH filter value of the     *00642000
                                   above length. Only valid if         *00643000
                                   GtzQuaaFProgramPathFiltered is ON    00644000
GTZQUAAFEVENTASID     DS    H      EVENTASID filter value. Only valid  *00645000
                                   if GtzQuaaFEventASIDFiltered is ON   00646000
GTZQUAAFHOMEASID      DS    H      HOMEASID filter value. Only valid   *00647000
                                   if GtzQuaaFHomeASIDFiltered is ON    00648000
                      DS    CL8    reserved                             00649000
GTZQUAASOURCETYPEALL  EQU   0                                           00650000
GTZQUAASOURCETYPENOPATH EQU 1                                           00651000
GTZQUAASOURCETYPEPATH EQU   2                                           00652000
GTZQUAAPROGRAMTYPEALL EQU   0                                           00653000
GTZQUAAPROGRAMTYPENOPATH EQU 1                                          00654000
GTZQUAAPROGRAMTYPEPATH EQU  2                                           00655000
GTZQUAAORIGINTYPEPARMLIB EQU 1                                          00656000
GTZQUAAORIGINTYPECOMMAND EQU 2                                          00657000
GTZQUAAORIGINTYPEPROGRAM EQU 4                                          00658000
GTZQUAAFILTER_LEN     EQU   *-GTZQUAAFILTER                             00659000
.L000E                ANOP                                              00660000
                      AIF   ('&GTZQUAAEXCLUDE' EQ 'NO').L0012           00661000
                      AIF   ('&DSECT' EQ 'YES').L0013                   00662000
                      AIF   ('&GTZQUAAEXCLUDE' NE 'YES').L0012          00663000
.L0013                ANOP                                              00664000
*                                                                       00665000
* ****************************************************************** *  00666000
* * Mapping of a single EXCLUDE statement within the ANSAREA,        *  00667000
* * starting with the first statement at offset                      *  00668000
* * GtzQuaaHExcludeOffset (see GtzQuaaHeader) from the               *  00669000
* * beginning of the answer area filled in by GTZQUERY.              *  00670000
* * Any additional EXCLUDE statements can be reached via             *  00671000
* * GtzQuaaEOffsetNext within a current GtzQuaaExclude structure.    *  00672000
* ****************************************************************** *  00673000
*                                                                       00674000
*                                                                       00675000
                      AIF   ('&DSECT' EQ 'YES').L0014                   00676000
GTZQUAAEXCLUDE        DS    0D                                          00677000
                      AGO   .L0015                                      00678000
.L0014                ANOP                                              00679000
GTZQUAAEXCLUDE        DSECT                                             00680000
.L0015                ANOP                                              00681000
GTZQUAAEEYECATCHER    DS    CL8                                         00682000
GTZQUAAEOFFSETNEXT    DS    H      Offset to the next GtzQuaaExclude   *00683000
                                   area, or zero, if no more such      *00684000
                                   areas available. The offset is      *00685000
                                   zero-based and is relative to the   *00686000
                                   beginning of this GtzQuaaExclude    *00687000
                                   area here.                           00688000
GTZQUAAEORIGINSUFFIX  DS    CL2    If this EXCLUDE was specified via a *00689000
                                   GTZPRMxx parmlib member, as         *00690000
                                   indicated by a GtzQuaaEOriginType   *00691000
                                   value of GtzQuaaOriginTypePARMLIB,  *00692000
                                   this field here contains the xx     *00693000
                                   suffix.                              00694000
GTZQUAAEORIGINTYPE    DS    X      Indicates where this EXCLUDE        *00695000
                                   originated from: A GTZPRMxx parmlib *00696000
                                   member, a SETGTZ EXCLUDE command,   *00697000
                                   or a program interface. See the     *00698000
                                   corresponding GtzQuaaOriginTyp      *00699000
                                   ePARMLIB/COMMAND/PROGRAM equates.    00700000
                      DS    CL3    reserved                             00701000
                      DS    CL8    reserved                             00702000
GTZQUAAEFLT           DS    CL104  The filter values used for this     *00703000
                                   EXCLUDE                              00704000
*                                                                       00705000
* ****************************************************************** *  00706000
* * Mapping of a single DEBUG  statement within the ANSAREA,         *  00707000
* * starting with the first statement at offset                      *  00708000
* * GtzQuaaHDebugOffset (see GtzQuaaHeader) from the                 *  00709000
* * beginning of the answer area filled in by GTZQUERY.              *  00710000
* * Any additional DEBUG statements can be reached via               *  00711000
* * GtzQuaaDOffsetNext within a current GtzQuaaDebug structure.      *  00712000
* ****************************************************************** *  00713000
*                                                                       00714000
*                                                                       00715000
GTZQUAADACTIONABEND   EQU   1                                           00716000
GTZQUAADACTIONDUMP    EQU   2                                           00717000
GTZQUAADACTIONNOLIMIT EQU   0                                           00718000
GTZQUAAEXCLUDE_LEN    EQU   *-GTZQUAAEXCLUDE                            00719000
.L0012                ANOP                                              00720000
                      AIF   ('&GTZQUAADEBUG' EQ 'NO').L0016             00721000
                      AIF   ('&DSECT' EQ 'YES').L0017                   00722000
                      AIF   ('&GTZQUAADEBUG' NE 'YES').L0016            00723000
GTZQUAADEBUG          DS    0D                                          00724000
                      AGO   .L0018                                      00725000
.L0017                ANOP                                              00726000
GTZQUAADEBUG          DSECT                                             00727000
.L0018                ANOP                                              00728000
GTZQUAADEYECATCHER    DS    CL8                                         00729000
GTZQUAADOFFSETNEXT    DS    H      Offset to the next GtzQuaaDebug     *00730000
                                   area, or zero, if no more such      *00731000
                                   areas available. The offset is      *00732000
                                   zero-based and is relative to the   *00733000
                                   beginning of this GtzQuaaDebug area *00734000
                                   here.                                00735000
GTZQUAADREASON        DS    H      DEBUG REASON-code                    00736000
GTZQUAADACTIONLIMIT   DS    H      How often the system is allowed to  *00737000
                                   trigger the action for this DEBUG   *00738000
                                   statement (when matched by a new    *00739000
                                   tracked instance candidate). A      *00740000
                                   value of GtzQuaaDActionNOLIMIT      *00741000
                                   means "no limit".                    00742000
GTZQUAADACTION        DS    X      See GtzQuaaDActionDUMP!ABEND         00743000
GTZQUAADORIGINTYPE    DS    X      Indicates where this DEBUG          *00744000
                                   originated from: A GTZPRMxx parmlib *00745000
                                   member, a SETGTZ DEBUG command, or  *00746000
                                   a program interface. See the        *00747000
                                   corresponding GtzQuaaOriginTyp      *00748000
                                   ePARMLIB/COMMAND/PROGRAM equates.    00749000
GTZQUAADORIGINSUFFIX  DS    CL2    If this DEBUG was specified via a   *00750000
                                   GTZPRMxx parmlib member, as         *00751000
                                   indicated by a GtzQuaaDOriginType   *00752000
                                   value of GtzQuaaOriginTypePARMLIB,  *00753000
                                   this field here contains the xx     *00754000
                                   suffix.                              00755000
GTZQUAADACTIONCOUNT   DS    H      How often this DEBUG statement      *00756000
                                   triggered an action so far. Counts  *00757000
                                   towards the ActionLimit, unless     *00758000
                                   GtzQuaaDActionNOLIMIT                00759000
                      DS    CL4    reserved                             00760000
GTZQUAADFLT           DS    CL104  The filter values used for this     *00761000
                                   DEBUG                                00762000
GTZQUAADEBUG_LEN      EQU   *-GTZQUAADEBUG                              00763000
.L0016                ANOP                                              00764000
                      AIF   ('&GTZQUAATRACKDATA' EQ 'NO').L0019         00765000
                      AIF   ('&DSECT' EQ 'YES').L001A                   00766000
                      AIF   ('&GTZQUAATRACKDATA' NE 'YES').L0019        00767000
.L001A                ANOP                                              00768000
*                                                                       00769000
* ****************************************************************** *  00770000
* * Mapping of a single TRACKDATA structure (tracked instance)       *  00771000
* * within the ANSAREA, starting with the first instance at offset   *  00772000
* * GtzQuaaHTrackDataOffset (see GtzQuaaHeader) from the             *  00773000
* * beginning of the answer area filled in by GTZQUERY.              *  00774000
* * Any additional TRACKDATA instances can be reached via            *  00775000
* * GtzQuaaTOffsetNext within a current GtzQuaaTrackData structure.  *  00776000
* ****************************************************************** *  00777000
*                                                                       00778000
*                                                                       00779000
                      AIF   ('&DSECT' EQ 'YES').L001B                   00780000
GTZQUAATRACKDATA      DS    0D                                          00781000
                      AGO   .L001C                                      00782000
.L001B                ANOP                                              00783000
GTZQUAATRACKDATA      DSECT                                             00784000
.L001C                ANOP                                              00785000
GTZQUAATEYECATCHER    DS    CL8                                         00786000
GTZQUAATOFFSETNEXT    DS    H      Offset to the next GtzQuaaTrackData *00787000
                                   area, or zero, if no more such      *00788000
                                   areas available. The offset is      *00789000
                                   zero-based and is relative to the   *00790000
                                   beginning of this GtzQuaaTrackData  *00791000
                                   area here.                           00792000
GTZQUAATFLAGS1        DS    B                                           00793000
*  Bit definitions:                                                     00794000
GTZQUAATISSOURCEPATH  EQU   X'80'  if ON, use SOURCEPATH, not SOURCE    00795000
GTZQUAATISPROGRAMPATH EQU   X'40'  if ON, use PROGRAMPATH, not PROGRAM  00796000
GTZQUAATISAUTHORIZED  EQU   X'20'  if ON, the tracked EVENT ran        *00797000
                                   authorized                           00798000
GTZQUAATISCNZTRKR     EQU   X'10'  not a part of the intended          *00799000
                                   interface                            00800000
                      DS    CL5                                         00801000
                      DS    B                                           00802000
GTZQUAATFIRSTTOD      DS    BL8    The timestamp when the first        *00803000
                                   instance of this (unique) tracked   *00804000
                                   instance was recorded (all others   *00805000
                                   just had the occurrence count       *00806000
                                   incremented).                        00807000
                      DS    BL7                                         00808000
GTZQUAATCOUNT         DS    FL8    How often this (unique) tracked     *00809000
                                   instance was recorded.               00810000
                      DS    CL16                                        00811000
GTZQUAATOWNER         DS    CL16   OWNER value.                         00812000
GTZQUAATSOURCE        DS    CL8    SOURCE value. Only valid if         *00813000
                                   GtzQuaaTisSourcePath is OFF          00814000
GTZQUAATSOURCEPATHLEN DS    H      length of the SOURCEPATH value.     *00815000
                                   Only valid if GtzQuaaTisSourcePath  *00816000
                                   is ON                                00817000
GTZQUAATSOURCEPATHOFFSET DS H      Offset from the start of this       *00818000
                                   GtzQuaaTrackData area to the        *00819000
                                   SOURCEPATH value of the above       *00820000
                                   length. Only valid if               *00821000
                                   GtzQuaaTisSourcePath is ON           00822000
GTZQUAATEVENTDESCLEN  DS    H      length of the EVENTDESC value.       00823000
GTZQUAATEVENTDESCOFFSET DS  H      Offset from the start of this       *00824000
                                   GtzQuaaTrackData area to the        *00825000
                                   EVENTDESC value of the above        *00826000
                                   length.                              00827000
GTZQUAATEVENTDATA     DS    CL16   EVENTDATA value                      00828000
                      ORG   GTZQUAATEVENTDATA                           00829000
GTZQUAATEVENTDATA1    DS    FL8                                         00830000
GTZQUAATEVENTDATA2    DS    FL8                                         00831000
GTZQUAATEVENTJOB      DS    CL8    derived EVENTJOB-name value.         00832000
GTZQUAATHOMEJOB       DS    CL8    derived HOMEJOB-name value.          00833000
GTZQUAATPROGRAM       DS    CL8    derived PROGRAM-name value. Only    *00834000
                                   valid if GtzQuaaTisProgramPath is   *00835000
                                   OFF                                  00836000
GTZQUAATPROGRAMOFFSET DS    FL8    derived PROGRAMOFFSET value.         00837000
GTZQUAATPROGRAMPATHLEN DS   H      length of the PROGRAMPATH value.    *00838000
                                   Only valid if GtzQuaaTisProgramPath *00839000
                                   is ON                                00840000
GTZQUAATPROGRAMPATHOFFSET DS H     Offset from the start of this       *00841000
                                   GtzQuaaTrackData area to the        *00842000
                                   derived PROGRAMPATH value of the    *00843000
                                   above length. Only valid if         *00844000
                                   GtzQuaaTisProgramPath is ON          00845000
GTZQUAATEVENTASID     DS    H      EVENTASID value.                     00846000
GTZQUAATHOMEASID      DS    H      HOMEASID value.                      00847000
                      DS    CL32   reserved                             00848000
*                                                                       00849000
* ****************************************************************** *  00850000
* * GTZQUERY return and reason codes                                 *  00851000
* ****************************************************************** *  00852000
* * Reason code format: ddddrrxy, with rr= return code, x=8..A, y=0..F  00853000
*   and dddd = component diagnostic data, which must not be assumed     00854000
*   to be 0. Apply GtzQueryRsnCodeMask to an actual reason code value   00855000
*   to derive a value listed below.                                     00856000
*                                                                    *  00857000
*                                                                       00858000
*                                                                       00859000
GTZQUERYRSNCODEMASK   EQU   X'0000FFFF' Use this mask to isolate the   *00860000
                                   non component-diagnostic portion of *00861000
                                   the reason code or abend reason     *00862000
                                   code                                 00863000
*                                                                       00864000
* *** AMGRET - START (RC 0-16, RSNs for RC=4,8,12) **                *  00865000
*                                                                       00866000
*                                                                       00867000
GTZQUERYRC_OK         EQU   X'00000000' Meaning: Successfully returned *00868000
                                   requested information. Action: None *00869000
                                   required                             00870000
GTZQUERYRC_ERROR      EQU   X'00000008' Meaning: Error Action: Refer   *00871000
                                   to action under the individual      *00872000
                                   reason code.                         00873000
GTZQUERYRSN_BADREQUEST EQU  X'00000880' Meaning: A bad REQUEST type    *00874000
                                   has been specified. Action: Use one *00875000
                                   of the supported request types.      00876000
GTZQUERYRSN_BADPARMLISTALET EQU X'00000881' Meaning: Bad parameter     *00877000
                                   list ALET. Action: Make sure that   *00878000
                                   the ALET associated with the        *00879000
                                   parameter list is valid. The access *00880000
                                   register might not have been set up *00881000
                                   correctly.                           00882000
GTZQUERYRSN_BADPARMLIST EQU X'00000882' Meaning: Error accessing       *00883000
                                   parameter list. Action: Make sure   *00884000
                                   that the provided parameter list is *00885000
                                   valid.                               00886000
GTZQUERYRSN_BADPARMLISTVERSION EQU X'00000883' Meaning: The specified  *00887000
                                   version of the macro is not         *00888000
                                   compatible with the current version *00889000
                                   of IBM Generic Tracker for z/OS.    *00890000
                                   Action: Avoid requesting parameters *00891000
                                   that are not supported by this      *00892000
                                   version of IBM Generic Tracker for  *00893000
                                   z/OS.                                00894000
GTZQUERYRSN_BADANSAREAALET EQU X'00000884' Meaning: Bad ANSAREA ALET.  *00895000
                                   Action: Make sure that the ALET     *00896000
                                   associated with the answer area is  *00897000
                                   valid. The access register might    *00898000
                                   not have been set up correctly.      00899000
GTZQUERYRSN_BADANSAREAADDRNULL EQU X'00000885' Meaning: ANSAREA        *00900000
                                   address is NULL. Action: Check the  *00901000
                                   location of your answer area.       *00902000
                                   Typically address zero is not a     *00903000
                                   valid address.                       00904000
GTZQUERYRSN_BADANSAREAADDRALIGN EQU X'00000886'                         00905000
*                                                                       00906000
*                                      Meaning: The ANSAREA has a bad   00907000
*                                      alignment. Action: The ANSAREA   00908000
*                                      has to start at a double-word    00909000
*                                      boundary.                        00910000
*                                                                       00911000
GTZQUERYRSN_BADANSLEN EQU   X'00000887' Meaning: Bad ANSLEN value.     *00912000
                                   Action: Provide an answer area      *00913000
                                   which is at least GtzQuaaMinAnsLen  *00914000
                                   bytes long.                          00915000
GTZQUERYRSN_BADANSAREA EQU  X'00000888' Meaning: Error accessing       *00916000
                                   answer area. Action: Make sure that *00917000
                                   the provided answer area is valid.   00918000
GTZQUERYRSN_BADSECCHECKVALUE EQU X'00000889' Meaning: Bad SECCHECK     *00919000
                                   value. Action: Specify a support    *00920000
                                   SECCHECK value.                      00921000
GTZQUERYRSN_BADENVNOTENABLED EQU X'0000088A' Meaning: Not enabled.     *00922000
                                   Action: Avoid using GTZQUERY when   *00923000
                                   not enabled for I/O and external    *00924000
                                   interrupts                           00925000
GTZQUERYRSN_BADENVLOCKED EQU X'0000088B' Meaning: Locked. Action:      *00926000
                                   Avoid using GTZQUERY when a lock is *00927000
                                   held.                                00928000
GTZQUERYRSN_BADENVSRBMODE EQU X'0000088C' Meaning: SRB mode. Action:   *00929000
                                   Avoid issuing GTZQUERY in SRB mode.  00930000
GTZQUERYRSN_BADENVFRR EQU   X'0000088D' Meaning: The caller had an EUT *00931000
                                   FRR established. Action: Avoid      *00932000
                                   using HZSPWRIT when an EUT FRR is   *00933000
                                   established.                         00934000
GTZQUERYRSN_BADENVNOTINGTZ EQU X'0000088E' Meaning: The processing     *00935000
                                   module for GTZQUERY has been        *00936000
                                   invoked outside of the GTZ address  *00937000
                                   space. Action: Use the provided     *00938000
                                   GTZQUERY macro to call the          *00939000
                                   processing module.                   00940000
GTZQUERYRSN_NOTAUTHORIZED EQU X'0000088F' Meaning: Not authorized.     *00941000
                                   Action: Ensure you are authorized   *00942000
                                   to perform the requested operation  *00943000
                                   and that the XFACILIT class has     *00944000
                                   been RACLISTed.                      00945000
GTZQUERYRSN_BADOWNERCHARSET EQU X'00000891' Meaning: The OWNER         *00946000
                                   parameter value contains bad        *00947000
                                   characters. Action: Use only        *00948000
                                   allowed characters as documented    *00949000
                                   for the OWNER parameter.             00950000
GTZQUERYRSN_BADSOURCEPATHALET EQU X'00000892' Meaning: Bad SOURCEPATH  *00951000
                                   ALET. Action: Make sure that the    *00952000
                                   ALET associated with the SOURCEPATH *00953000
                                   parameter is valid. The access      *00954000
                                   register might not have been set up *00955000
                                   correctly.                           00956000
GTZQUERYRSN_BADSOURCEPATH EQU X'00000893' Meaning: Error accessing     *00957000
                                   SOURCEPATH. Action: Make sure that  *00958000
                                   the provided SOURCEPATH is properly *00959000
                                   addressable.                         00960000
GTZQUERYRSN_BADPROGRAMPATHALET EQU X'00000894' Meaning: Bad            *00961000
                                   PROGRAMPATH ALET. Action: Make sure *00962000
                                   that the ALET associated with the   *00963000
                                   PROGRAMPATH parameter is valid. The *00964000
                                   access register might not have been *00965000
                                   set up correctly.                    00966000
GTZQUERYRSN_BADPROGRAMPATH EQU X'00000895' Meaning: Error accessing    *00967000
                                   PROGRAMPATH. Action: Make sure that *00968000
                                   the provided PROGRAMPATH is         *00969000
                                   properly addressable.                00970000
GTZQUERYRSN_BADEVENTDESCALET EQU X'00000896' Meaning: Bad EVENTDESC    *00971000
                                   ALET. Action: Make sure that the    *00972000
                                   ALET associated with the EVENTDESC  *00973000
                                   parameter is valid. The access      *00974000
                                   register might not have been set up *00975000
                                   correctly.                           00976000
GTZQUERYRSN_BADEVENTDESC EQU X'00000897' Meaning: Error accessing      *00977000
                                   EVENTDESC. Action: Make sure that   *00978000
                                   the provided EVENTDESC is properly  *00979000
                                   addressable.                         00980000
GTZQUERYRSN_BADPROGRAMCHARSET EQU X'00000898' Meaning: The PROGRAM     *00981000
                                   parameter value contains bad        *00982000
                                   characters. Action: Use only        *00983000
                                   allowed characters as documented    *00984000
                                   for the PROGRAM parameter.           00985000
GTZQUERYRSN_BADPROGRAMPATHCHARSET EQU X'00000899'                       00986000
*                                                                       00987000
*                                      Meaning: The PROGRAMPATH         00988000
*                                      parameter value contains bad     00989000
*                                      characters. Action: Use only     00990000
*                                      allowed characters as            00991000
*                                      documented for the PROGRAMPATH   00992000
*                                      parameter.                       00993000
*                                                                       00994000
GTZQUERYRSN_BADSOURCECHARSET EQU X'0000089A' Meaning: The SOURCE       *00995000
                                   parameter value contains bad        *00996000
                                   characters. Action: Use only        *00997000
                                   allowed characters as documented    *00998000
                                   for the SOURCE parameter.            00999000
GTZQUERYRSN_BADSOURCEPATHCHARSET EQU X'0000089B'                        01000000
*                                                                       01001000
*                                      Meaning: The SOURCEPATH          01002000
*                                      parameter value contains bad     01003000
*                                      characters. Action: Use only     01004000
*                                      allowed characters as            01005000
*                                      documented for the SOURCEPATH    01006000
*                                      parameter.                       01007000
*                                                                       01008000
GTZQUERYRSN_BADEVENTDESCCHARSET EQU X'0000089C'                         01009000
*                                                                       01010000
*                                      Meaning: The EVENTDESC           01011000
*                                      parameter value contains bad     01012000
*                                      characters. Action: Use only     01013000
*                                      allowed characters as            01014000
*                                      documented for the EVENTDESC     01015000
*                                      parameter.                       01016000
*                                                                       01017000
GTZQUERYRSN_BADEVENTDESCLEN EQU X'0000089D' Meaning: The EVENTDESCLEN  *01018000
                                   parameter value is out of range.    *01019000
                                   Action: Specify an EVENTDESCLEN in  *01020000
                                   the documented allowed range.        01021000
GTZQUERYRSN_BADSOURCEPATHLEN EQU X'0000089E' Meaning: The              *01022000
                                   SOURCEPATHLEN parameter value is    *01023000
                                   out of range. Action: Specify an    *01024000
                                   SOURCEPATHLEN in the documented     *01025000
                                   allowed range.                       01026000
GTZQUERYRSN_BADPROGRAMPATHLEN EQU X'0000089F' Meaning: The             *01027000
                                   PROGRAMPATHLEN parameter value is   *01028000
                                   out of range. Action: Specify an    *01029000
                                   PROGRAMPATHLEN in the documented    *01030000
                                   allowed range.                       01031000
GTZQUERYRSN_BADPROGRAMTYPE EQU X'000008A0' Meaning: Invalid            *01032000
                                   PROGRAMTYPE. Action: Use only       *01033000
                                   documented PROGRAMTYPE values.       01034000
GTZQUERYRSN_BADSOURCETYPE EQU X'000008A1' Meaning: Invalid SOURCETYPE. *01035000
                                   Action: Use only documented         *01036000
                                   SOURCETYPE values.                   01037000
GTZQUERYRSN_BADHOMEJOBCHARSET EQU X'000008A2' Meaning: The HOMEJOB     *01038000
                                   parameter value contains bad        *01039000
                                   characters. Action: Use only        *01040000
                                   allowed characters as documented    *01041000
                                   for the HOMEJOB parameter.           01042000
GTZQUERYRSN_BADEVENTJOBCHARSET EQU X'000008A3' Meaning: The EVENTJOB   *01043000
                                   parameter value contains bad        *01044000
                                   characters. Action: Use only        *01045000
                                   allowed characters as documented    *01046000
                                   for the EVENTJOB parameter.          01047000
GTZQUERYRSN_BADSOURCELEN EQU X'000008A4' Meaning: The SOURCE parameter *01048000
                                   value has an invalid length.        *01049000
                                   Action: Specify a valid SOURCE      *01050000
                                   value with a length between 1 and 8 *01051000
                                   characters.                          01052000
GTZQUERYRSN_BADPROGRAMLEN EQU X'000008A5' Meaning: The PROGRAM         *01053000
                                   parameter value has an invalid      *01054000
                                   length. Action: Specify a valid     *01055000
                                   PROGRAM value with a length between *01056000
                                   1 and 8 characters.                  01057000
GTZQUERYRSN_BADHOMEJOBLEN EQU X'000008A6' Meaning: The HOMEJOB         *01058000
                                   parameter value has an invalid      *01059000
                                   length. Action: Specify a valid     *01060000
                                   HOMEJOB value with a length between *01061000
                                   1 and 8 characters.                  01062000
GTZQUERYRSN_BADEVENTJOBLEN EQU X'000008A7' Meaning: The EVENTJOB       *01063000
                                   parameter value has an invalid      *01064000
                                   length. Action: Specify a valid     *01065000
                                   EVENTJOB value with a length        *01066000
                                   between 1 and 8 characters.          01067000
GTZQUERYRSN_BADOWNERLEN EQU X'000008A8' Meaning: The OWNER parameter   *01068000
                                   value has an invalid length.        *01069000
                                   Action: Specify a valid OWNER value *01070000
                                   with a length between 1 and 16      *01071000
                                   characters.                          01072000
GTZQUERYRC_SEVEREERROR EQU  X'0000000C' Meaning: Severe Error /        *01073000
                                   Environment Error Action: Refer to  *01074000
                                   action under the individual reason  *01075000
                                   code.                                01076000
GTZQUERYRSN_FACILITYNOTAVAILABLE EQU X'00000C90'                        01077000
*                                                                       01078000
*                                      Meaning: Generic Tracker is      01079000
*                                      not available. Action: This      01080000
*                                      might be a temporary             01081000
*                                      situation. See the description   01082000
*                                      of message GTZ1000I for          01083000
*                                      further information.             01084000
*                                                                       01085000
GTZQUERYRC_OUTOFMEMORY EQU  X'0000000D' Meaning: Tracking facility is  *01086000
                                   low on memory. Action: See the      *01087000
                                   description of message GTZ0004E.    *01088000
                                   Try also to omit any filters, for   *01089000
                                   example for REQUEST(TRACKDATA).      01090000
GTZQUERYRC_COMPERROR  EQU   X'00000010' Meaning: Component error.      *01091000
                                   Action: Report the associated       *01092000
                                   reason code to the system           *01093000
                                   programmer to contact IBM Service.   01094000
GTZQUAATRACKDATA_LEN  EQU   *-GTZQUAATRACKDATA                          01095000
.L0019                ANOP                                              01096000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    01097000
                      AIF   ('&LIST' EQ 'YES').P4                       01098000
.P3                   ANOP                                              01099000
                      POP   PRINT                                       01100000
.P4                   ANOP                                              01101000
.P_EXIT               ANOP                                              01102000
                      MEND                                              01103000
**/ GTZZQRY_2:;                                                         01104000
* %GTZZQRY_INCLUDED = 'YES';                                            01105000
* %DCL ZCBPRINT CHAR EXT;                                               01106000
* %DEACTIVATE ZCBPRINT;                                                 01107000
* %DCL GTZZQRY_LIST CHAR EXT;                                           01108000
* %DEACTIVATE GTZZQRY_LIST;                                             01109000
* %IF GTZZQRY_LIST = 'NO' !                                             01110000
*    ZCBPRINT = 'NO' %THEN                                              01111000
* %DO;                                                                  01112000
*   @LIST PUSH NOECHO;                                                  01113000
*   @LIST NOASSEMBLE NOECHO;                                            01114000
*   @LIST OFF C NOECHO;                                                 01115000
* %END;                                                                 01116000
*/* Start of PL/X Source                                             */ 01117000
*/* Start of PL/X Source                                            */  01118000
*/*******************************************************************/  01119000
*/* Answer area related constants                                   */  01120000
*/*******************************************************************/  01121000
*                                                                       01122000
*Dcl GtzQuaaEyeCatcher_HEADER    Char(8) Constant('GTZQUAAH');          01123000
*Dcl GtzQuaaEyeCatcher_STATUS    Char(8) Constant('GTZQUAAS');          01124000
*Dcl GtzQuaaEyeCatcher_DIAGNOSE  Char(8) Constant('GTZQUAAG');          01125000
*Dcl GtzQuaaEyeCatcher_TRACKDATA Char(8) Constant('GTZQUAAT');          01126000
*Dcl GtzQuaaEyeCatcher_EXCLUDE   Char(8) Constant('GTZQUAAE');          01127000
*Dcl GtzQuaaEyeCatcher_DEBUG     Char(8) Constant('GTZQUAAD');          01128000
*                                                                       01129000
*Dcl GtzQuaaHVersion1       Fixed(8) Constant(1);                       01130000
*Dcl GtzQuaaHCurrentVersion Fixed(8) Constant(GtzQuaaHVersion1);        01131000
*                                                                       01132000
*Dcl GtzQuaaMinAnsLen    Constant(256);                                 01133000
*Dcl GtzQuaaHeaderLen    Constant(256);  /* SIZE(GtzQuaaHeader) */      01134000
*Dcl GtzQuaaMinStatusLen Constant(256);  /* Fixed portion,              01135000
*                                           (=SIZE(GtzQuaaStatus)) */   01136000
*Dcl GtzQuaaMaxStatusLen Constant(512);  /*Fixed+GTZPRMxx suffixes*/    01137000
*                                                                       01138000
*Dcl GtzQuaaMaxDiagnoseLen Constant(512);  /* PLX-ONLY */               01139000
*                                                                       01140000
*Dcl GtzQuaaMaxPathLen Constant(1024);                                  01141000
*Dcl GtzQuaaMaxEventDescLen Constant(64);                               01142000
*                                                                       01143000
*/* The following two size constants are for a single GtzQuaaExclude    01144000
*   area. Note, that there can be more than one such area available.*/  01145000
*Dcl GtzQuaaMinExcludeLen Constant(144);  /* Fixed portion,             01146000
*                                           (=SIZE(GtzQuaaExclude)) */  01147000
*Dcl GtzQuaaMaxExcludeLen Constant(GtzQuaaMinExcludeLen                 01148000
*                                + GtzQuaaMaxPathLen                    01149000
*                                + GtzQuaaMaxPathLen                    01150000
*                                + GtzQuaaMaxEventDescLen);             01151000
*                                                                       01152000
*/* The following two size constants are for a single GtzQuaaDebug      01153000
*   area. Note, that there can be more than one such area available.*/  01154000
*Dcl GtzQuaaMinDebugLen Constant(144);  /* Fixed portion,               01155000
*                                           (=SIZE(GtzQuaaDebug)) */    01156000
*Dcl GtzQuaaMaxDebugLen Constant(GtzQuaaMinDebugLen                     01157000
*                                + GtzQuaaMaxPathLen                    01158000
*                                + GtzQuaaMaxPathLen                    01159000
*                                + GtzQuaaMaxEventDescLen);             01160000
*                                                                       01161000
*                                                                       01162000
*/* The following two size constants are for a single GtzQuaaTrackData  01163000
*   area. Note, that there can be more than one such area available.*/  01164000
*Dcl GtzQuaaMinTrackDataLen Constant(176);  /* Fixed portion,           01165000
*                                          (=SIZE(GtzQuaaTrackData))*/  01166000
*Dcl GtzQuaaMaxTrackDataLen Constant(GtzQuaaMinTrackDataLen             01167000
*                                + GtzQuaaMaxPathLen                    01168000
*                                + GtzQuaaMaxPathLen                    01169000
*                                + GtzQuaaMaxEventDescLen);             01170000
*                                                                       01171000
*/*******************************************************************/  01172000
*/* Header section mapping the start of the ANSAREA specified on    */  01173000
*/* GTZQUERY:                                                       */  01174000
*/*******************************************************************/  01175000
*Dcl 1 GtzQuaaHeader Type Bdy(Dword)                                    01176000
*    ,3 GtzQuaaHEyeCatcher Char(8)                                      01177000
*    ,3 GtzQuaaHVersion    Fixed(8)                                     01178000
*    ,3 *                  Char(3)   /* reserved */                     01179000
*    ,3 GtzQuaaHFlags      Bit(32)                                      01180000
*       ,5 * Bit(1) /* reserved */                                      01181000
*       ,5 GtzQuaaHStatusValid      Bit(1) /* If ON ('1'b), STATUS      01182000
*           data was requested and                                      01183000
*           GtzQuaaHStatusOffset contains a valid value */              01184000
*       ,5 GtzQuaaHTrackDataValid   Bit(1) /* If ON ('1'b), TRACKDATA   01185000
*           was requested and                                           01186000
*           GtzQuaaHTrackDataOffset,                                    01187000
*           GtzQuaaHTrackDataEntriesAvailable, and                      01188000
*           GtzQuaaHTrackDataEntriesProvided                            01189000
*           contain valid values */                                     01190000
*       ,5 GtzQuaaHExcludeValid     Bit(1) /* If ON ('1'b), EXCLUDE     01191000
*           data was requested and                                      01192000
*           GtzQuaaHExcludeOffset,                                      01193000
*           GtzQuaaHExcludeEntriesAvailable, and                        01194000
*           GtzQuaaHExcludeEntriesProvided                              01195000
*           contain valid values */                                     01196000
*       ,5 GtzQuaaHDebugValid        Bit(1) /* If ON ('1'b), DEBUG      01197000
*           data was requested and                                      01198000
*           GtzQuaaHDebugOffset,                                        01199000
*           GtzQuaaHDebugEntriesAvailable, and                          01200000
*           GtzQuaaHDebugEntriesProvided                                01201000
*           contain valid values */                                     01202000
*       ,5 * Bit(1)                                                     01203000
*           ,7 GtzQuaaHDiagnoseValid Bit(1) /* PLX-ONLY.                01204000
*           If ON ('1'b),                                               01205000
*           DIAGNOSE data was requested and                             01206000
*           GtzQuaaHDiagnoseOffset contains a valid value */            01207000
*       ,5 * Bit(26)                                                    01208000
*    ,3 GtzQuaaHBytesAvailable Fixed(64) /* Total number of bytes       01209000
*           needed in the answer area to contain all of the requested   01210000
*           information.                                                01211000
*           If this number is larger than GtzQuaaHBytesProvided         01212000
*           then some requested information did not fit and some of     01213000
*           the following ...EntriesProvided counts might be different  01214000
*           than the corresponding ...EntriesAvailable, indicating      01215000
*           where only a subset of available information was returned   01216000
*           from this call.                                             01217000
*           */                                                          01218000
*    ,3 GtzQuaaHBytesProvided Fixed(64) /* Total number of bytes        01219000
*           in the answer area that were used to fill in the            01220000
*           requested information.                                      01221000
*           */                                                          01222000
*    ,3 GtzQuaaHStatusOffset Fixed(64) /* Offset from the start of      01223000
*           the answer area to the GtzQuaaStatus section.               01224000
*           Only valid for use, if the GtzQuaaHStatusValid flag         01225000
*           is ON ('1'b).                                               01226000
*           */                                                          01227000
*    ,3 GtzQuaaHTrackDataOffset Fixed(64) /* Offset from the start of   01228000
*           the answer area to the first GtzQuaaTrackData entry.        01229000
*           Will contain zero for GtzQuaaHTrackDataEntriesProvided=0.   01230000
*           Only valid for use, if the GtzQuaaHTrackDataValid flag      01231000
*           is ON ('1'b).                                               01232000
*           */                                                          01233000
*    ,3 GtzQuaaHTrackDataEntriesProvided Fixed(64) /* Count of          01234000
*           GtzQuaaTrackData entries provided in this answer area,      01235000
*           starting at offset GtzQuaaHTrackDataOffset.                 01236000
*           Only valid for use, if the GtzQuaaHTrackDataValid flag      01237000
*           is ON ('1'b).                                               01238000
*           */                                                          01239000
*    ,3 GtzQuaaHTrackDataEntriesAvailable Fixed(64) /* Total count of   01240000
*           GtzQuaaTrackData entries that could have been returned      01241000
*           if the answer area would have been large enough.            01242000
*           If all available entries fit, this number will              01243000
*           be equal to GtzQuaaHTrackDataEntriesProvided.               01244000
*           Only valid, if the GtzQuaaHTrackDataValid flag              01245000
*           is ON ('1'b).                                               01246000
*           */                                                          01247000
*    ,3 GtzQuaaHExcludeOffset Fixed(64) /* Offset from the start of     01248000
*           the answer area to the first GtzQuaaExclude entry.          01249000
*           Will be set to zero for GtzQuaaHExcludeEntriesProvided=0.   01250000
*           Only valid for use, if the GtzQuaaHExcludeValid flag        01251000
*           is ON ('1'b).                                               01252000
*           */                                                          01253000
*    ,3 GtzQuaaHExcludeEntriesProvided Fixed(64) /* Count of            01254000
*           GtzQuaaExclude entries provided in this answer area,        01255000
*           starting at offset GtzQuaaHExcludeOffset.                   01256000
*           Only valid for use, if the GtzQuaaHExcludeValid flag        01257000
*           is ON ('1'b).                                               01258000
*           */                                                          01259000
*    ,3 GtzQuaaHExcludeEntriesAvailable Fixed(64) /* Total count of     01260000
*           GtzQuaaExclude entries that could have been returned        01261000
*           if the answer area would have been large enough.            01262000
*           If all available entries fit, this number will              01263000
*           be equal to GtzQuaaHExcludeEntriesProvided.                 01264000
*           Only valid, if the GtzQuaaHExcludeValid flag                01265000
*           is ON ('1'b).                                               01266000
*           */                                                          01267000
*    ,3 GtzQuaaHDebugOffset Fixed(64) /* Offset from the start of       01268000
*           the answer area to the first GtzQuaaDebug entry.            01269000
*           Will be set to zero for GtzQuaaHDebugEntriesProvided=0.     01270000
*           Only valid for use, if the GtzQuaaHDebugValid flag          01271000
*           is ON ('1'b).                                               01272000
*           */                                                          01273000
*    ,3 GtzQuaaHDebugEntriesProvided Fixed(64) /* Count of              01274000
*           GtzQuaaDebug entries provided in this answer area,          01275000
*           starting at offset GtzQuaaHDebugOffset.                     01276000
*           Only valid for use, if the GtzQuaaHDebugValid flag          01277000
*           is ON ('1'b).                                               01278000
*           */                                                          01279000
*    ,3 GtzQuaaHDebugEntriesAvailable Fixed(64) /* Total count of       01280000
*           GtzQuaaDebug entries that could have been returned          01281000
*           if the answer area would have been large enough.            01282000
*           If all available entries fit, this number will              01283000
*           be equal to GtzQuaaHDebugEntriesProvided.                   01284000
*           Only valid, if the GtzQuaaHDebugValid flag                  01285000
*           is ON ('1'b).                                               01286000
*           */                                                          01287000
*    ,3 * Fixed(64)                                                     01288000
*       , 5 GtzQuaaHDiagnoseOffset Fixed(64) /* PLX-ONLY.               01289000
*           Offset from the start                                       01290000
*           of the answer area to the GtzQuaaDiagnose section.          01291000
*           Only valid for use, if the GtzQuaaHDiagnoseValid flag       01292000
*           is ON ('1'b).                                               01293000
*           */                                                          01294000
*    ,3 * Char(136) /* Reserved */                                      01295000
*    ;                                                                  01296000
*                                                                       01297000
*/*******************************************************************/  01298000
*/* Mapping of the Status Information section of the ANSAREA, at    */  01299000
*/* offset GtzQuaaHStatusOffset (see GtzQuaaHeader) from the        */  01300000
*/* beginning of the answer area filled in by GTZQUERY:             */  01301000
*/*******************************************************************/  01302000
*Dcl 1 GtzQuaaStatus Type Bdy(Dword)                                    01303000
*    ,3 GtzQuaaSEyeCatcher Char(8)                                      01304000
*    ,3 GtzQuaaSFlags Bit(32)                                           01305000
*     ,4 GtzQuaaSFlags1 Fixed(8)                                        01306000
*       ,5 GtzQuaaSTrackEnabled Bit(1) /* ON ('1'b), if tracking is     01307000
*           currently enabled. Compare command SETGTZ TRACKING=ON */    01308000
*       ,5 GtzQuaaSFull Bit(1) /* ON ('1'b), if the tracking facility   01309000
*           is 'full' and therefore might be unable to store            01310000
*           additional unique tracked instances or other information.   01311000
*           Compare also GtzQuaaSMemAvailPercent. */                    01312000
*       ,5 GtzQuaaSExcludeNoPrm Bit(1) /* ON ('1'b), if some EXCLUDE    01313000
*           statements did not originate from a GTZPRMxx parmlib        01314000
*           member, but from other sources (like the SETGTZ EXCLUDE     01315000
*           command). */                                                01316000
*       ,5 GtzQuaaSDebugNoPrm Bit(1) /* ON ('1'b), if some DEBUG        01317000
*           statements did not originate from a GTZPRMxx parmlib        01318000
*           member, but from other sources (like the SETGTZ DEBUG       01319000
*           command). */                                                01320000
*       ,5 GtzQuaaSGtzPrmFull Bit(1) /* ON ('1'b), if some GTZPRMxx     01321000
*           suffixes could not be recorded centrally and are not        01322000
*           reported via GtzQuaaSGtzPrmSuffixesAvailable below.         01323000
*           Those GTZPRMxx members were still processed and their       01324000
*           suffixes are still reported for EXCLUDE or DEBUG            01325000
*           statements, with ORIGIN(PARMLIB), but their suffixes        01326000
*           just didn't fit into the centrally kept list of suffixes.   01327000
*           */                                                          01328000
*       ,5 GtzQuaaSClearedALL Bit(1) /* ON ('1'b), if CLEAR=ALL         01329000
*           has been used for this instance of Generic Tracker.         01330000
*           If ON, the other "cleared"                                  01331000
*           bits (GtzQuaaSClearedTRACKDATA, GtzQuaaSClearedEXCLUDE,     01332000
*           and GtzQuaaSClearedDEBUG) will be set to ON as well,        01333000
*           if the appropriate collection was not empty to begin        01334000
*           with, since a CLEAR=ALL includes clearing all such data.*/  01335000
*       ,5 GtzQuaaSClearedTRACKDATA Bit(1) /* ON ('1'b), if CLEAR=ALL   01336000
*           or CLEAR=TRACKDATA has been used for this instance          01337000
*           of Generic Tracker and if there was any track data          01338000
*           to be cleared. */                                           01339000
*       ,5 GtzQuaaSClearedEXCLUDE Bit(1) /* ON ('1'b), if CLEAR=ALL     01340000
*           or CLEAR=EXCLUDE has been used for this instance            01341000
*           of Generic Tracker and if there were any EXLCUDEs           01342000
*           to be cleared. */                                           01343000
*     ,4 GtzQuaaSFlags2 Fixed(8)                                        01344000
*       ,5 GtzQuaaSClearedDEBUG Bit(1) /* ON ('1'b), if CLEAR=ALL       01345000
*           or CLEAR=DEBUG has been used for this instance              01346000
*           of Generic Tracker and if there were any DEBUGs             01347000
*           to be cleared. */                                           01348000
*       ,5 GtzQuaaSPersistSMF Bit(1) /* ON ('1'b), if data persistence  01349000
*           via SMF records is enabled.                        @L7A */  01350000
*       ,5 GtzQuaaSDirloadYes Bit(1) /* ON ('1'b), if                   01351000
*           CSVQUERY DIRLOAD=YES is in use.                    @L9A */  01352000
*       ,5 * Bit(5)                                         /* @L9C */  01353000
*     ,4 GtzQuaaSFlags3 Fixed(8)                                        01354000
*       ,5 * Bit(8)                                                     01355000
*     ,4 GtzQuaaSFlags4 Fixed(8)                                        01356000
*       ,5 * Bit(8)                                                     01357000
*    ,3 GtzQuaaSEnabledCount Fixed(32) /* Total number of times the     01358000
*       tracking status moved from disabled to enabled, since the       01359000
*       tracking facility started (disabled by default). */             01360000
*    ,3 GtzQuaaSTrackDataEntriesAvailable Fixed(64) /* Total number     01361000
*           of unique tracked instances currently known to the          01362000
*           tracking facility */                                        01363000
*    ,3 GtzQuaaSExcludeEntriesAvailable Fixed(64) /* Total number       01364000
*           of exclusion statements currently known to the              01365000
*           tracking facility.                                          01366000
*           Compare the GTZPRMxx EXCLUDE statement. */                  01367000
*    ,3 GtzQuaaSDebugEntriesAvailable Fixed(64) /* Total number         01368000
*           of DEBUG statements currently known to the                  01369000
*           tracking facility.                                          01370000
*           Compare the GTZPRMxx DEBUG statement. */                    01371000
*    ,3 * Fixed(64)                                                     01372000
*    ,3 GtzQuaaSTrackDataEntriesEncountered Fixed(64) /* Total number   01373000
*           of non-unique tracked instances currently known to the      01374000
*           tracking facility */                                        01375000
*    ,3 GtzQuaaSExcludeRejectCount Fixed(64) /* Total number            01376000
*           of GTZTRACK requests rejected due to a matching EXCLUDE     01377000
*           statement. This counter is reset when the EXCLUDE           01378000
*           statements are cleared. */                                  01379000
*    ,3 GtzQuaaSDebugActionCount Fixed(64) /* Total number              01380000
*           of GTZTRACK requests which triggered a DEBUG action as      01381000
*           specified by a matching DEBUG statement (with its LIMIT     01382000
*           not exceeded yet). This counter is reset when the DEBUG     01383000
*           statements are cleared. */                                  01384000
*    ,3 GtzQuaaSGtzPrmSuffixesAvailable Fixed(16) /* Total number       01385000
*           of GTZPRMxx members currently known to the tracking         01386000
*           facility. */                                                01387000
*    ,3 GtzQuaaSGtzPrmSuffixesProvided Fixed(16) /* Number              01388000
*           of GTZPRMxx suffixes actually returned in this              01389000
*           GtzQuaaStatus area. This might be less than                 01390000
*           GtzQuaaSGtzPrmSuffixesAvailable, if the provided ANSAREA    01391000
*           is too small to hold all information. */                    01392000
*    ,3 GtzQuaaSGtzPrmSuffixesOffset Fixed(16) /* Offset from           01393000
*           the start of this GtzQuaaStatus area to                     01394000
*           the start of a list of GtzQuaaSGtzPrmSuffixesProvided       01395000
*           number of suffixes of the GTZPRMxx parmlib members          01396000
*           currently known to the tracking facility.                   01397000
*           The list is a simple 'array' of consecutive                 01398000
*           two-character suffixes and can be mapped by                 01399000
*           GtzQuaaSGtzPrmSuffixes. */                                  01400000
*    ,3 GtzQuaaSGtzPrmIplSuffixesAvailable Fixed(16) /* Total number    01401000
*           of GTZPRMxx member suffixes specified at IPL time via       01402000
*           system parameter GTZPRM, e.g. in IEASYSxx.                  01403000
*           The currently known GTZPRMxx suffix list might be different 01404000
*           than this IPL-time list, if suffixes have been added or     01405000
*           cleared in between. */                                      01406000
*    ,3 GtzQuaaSGtzPrmIplSuffixesProvided Fixed(16) /* Number           01407000
*           of IPL-time GTZPRMxx suffixes actually returned in this     01408000
*           GtzQuaaStatus area. This might be less than                 01409000
*           GtzQuaaSGtzPrmIplSuffixesAvailable, if the provided ANSAREA 01410000
*           is too small to hold all information. */                    01411000
*    ,3 GtzQuaaSGtzPrmIplSuffixesOffset Fixed(16) /* Offset from        01412000
*           the start of this GtzQuaaStatus area to                     01413000
*           the start of a list of GtzQuaaSGtzPrmIplSuffixesProvided    01414000
*           number of suffixes of the GTZPRMxx parmlib members          01415000
*           specified at IPL-time.                                      01416000
*           The list is a simple 'array' of consecutive                 01417000
*           two-character suffixes and can be mapped by                 01418000
*           GtzQuaaSGtzPrmSuffixes. */                                  01419000
*    ,3 GtzQuaaSMemAvailPercent Fixed(8) /* How much (in percent)       01420000
*           of our total dynamic memory is still available to store     01421000
*           track data etc. When GtzQuaaSFull is ON this will be zero.  01422000
*           */                                                          01423000
*    ,3 * Char(3)                  /* Reserved */                       01424000
*    ,3 GtzQuaaSSystemName Char(8) /* The name of the system the        01425000
*           (unique per system) tracking facility is running on. */     01426000
*    ,3 * Bit(8)                                                        01427000
*    ,3 GtzQuaaSEnabledTOD Bit(64) /*  The timestamp when               01428000
*        tracking was last enabled (if GtzQuaaSTrackEnabled=ON), or     01429000
*        when tracking was last disabled (if GtzQuaaSTrackEnabled=OFF), 01430000
*        where the latter might be the time of when the facility        01431000
*        started, if tracking has not been enabled since.               01432000
*        See also GtzQuaaSEnabledCount. */                              01433000
*    ,3 * Bit(56)                                                       01434000
*    ,3 * Char(144)                         /* Reserved */              01435000
*    ;                                                                  01436000
*                                                                       01437000
*Dcl 1 GtzQuaaDiagnose Type Char(GtzQuaaMaxDiagnoseLen)                 01438000
*               Bdy(Dword) /* PLX-ONLY */                               01439000
*    ,3 GtzQuaaDgEyeCatcher Char(8)                                     01440000
*    ,3 GtzQuaaDgWorkQStats Char(16) ] isa(tGtzWorkQueueStats)          01441000
*    ,3 GtzQuaaDgUniqueUnAuth Fixed(64)                                 01442000
*    ,3 GtzQuaaDgBits Fixed(64) /* FCT access to GTZTABLE DIAGNOSE      01443000
*                                 bits, when GTZ is up */               01444000
*    ,3 GtzQuaaDgStorageStats Char(376) ] isa(tGtzStorageStats)         01445000
*    ,3 * Char(96)                                                      01446000
*    ,3 * Char(0) Bdy(Dword)                                            01447000
*    ;                                                                  01448000
*                                                                       01449000
*/*******************************************************************/  01450000
*/* Mapping of a GTZPRMxx parmlib member suffix array.              */  01451000
*/*******************************************************************/  01452000
*Dcl 1 GtzQuaaSGtzPrmSuffixes(*) Bdy(HWord) Based                       01453000
*    , 3 GtzQuaaSGtzPrmSuffix Char(2);                                  01454000
*                                                                       01455000
*/*******************************************************************/  01456000
*/* Mapping of a single filter structure, shared by GTZQUAAEXCLUDE  */  01457000
*/* and GTZQUAADEBUG.                                               */  01458000
*                                                                       01459000
*Dcl 1 GtzQuaaFilter Type Bdy(Dword)                                    01460000
*    , 3 GtzQuaaFFilteredFlags1 Bit(8)                                  01461000
*      , 5 GtzQuaaFOwnerFiltered Bit(1) /*                              01462000
*                       ON, if filtering by OWNER */                    01463000
*      , 5 GtzQuaaFSourceFiltered Bit(1) /*                             01464000
*                       ON, if filtering by SOURCE.                     01465000
*                       Only valid for SOURCETYPE=NOPATH */             01466000
*      , 5 GtzQuaaFSourcePathFiltered Bit(1) /*                         01467000
*                       ON, if filtering by SOURCEPATH.                 01468000
*                       Only valid for SOURCETYPE=PATH */               01469000
*      , 5 GtzQuaaFEventDescFiltered Bit(1) /*                          01470000
*                       ON, if filtering by EVENTDESC */                01471000
*      , 5 GtzQuaaFEventDataFiltered Bit(1) /*                          01472000
*                       ON, if filtering by EVENTDATA */                01473000
*      , 5 GtzQuaaFEventJobFiltered Bit(1) /*                           01474000
*                       ON, if filtering by EVENTJOB */                 01475000
*      , 5 GtzQuaaFHomeJobFiltered Bit(1) /*                            01476000
*                       ON, if filtering by HOMEJOB */                  01477000
*      , 5 GtzQuaaFProgramFiltered Bit(1) /*                            01478000
*                       ON, if filtering by PROGRAM.                    01479000
*                       Only valid for PROGRAMTYPE=NOPATH */            01480000
*    , 3 GtzQuaaFFilteredFlags2 Bit(8)                                  01481000
*      , 5 GtzQuaaFProgramPathFiltered Bit(1) /*                        01482000
*                       ON, if filtering by PROGRAMPATH.                01483000
*                       Only valid for PROGRAMTYPE=PATH */              01484000
*      , 5 GtzQuaaFProgramOffsetFiltered Bit(1) /*                      01485000
*                       ON, if filtering by PROGRAMOFFSET */            01486000
*      , 5 GtzQuaaFEventASIDFiltered Bit(1) /*                          01487000
*                       ON, if filtering by EVENTASID */                01488000
*      , 5 GtzQuaaFHomeASIDFiltered Bit(1) /*                           01489000
*                       ON, if filtering by HOMEASID */                 01490000
*      , 5 GtzQuaaFSourceTypeFiltered Bit(1) /*                         01491000
*                       ON, if SOURCETYPE <> ALL */                     01492000
*      , 5 GtzQuaaFProgramTypeFiltered Bit(1) /*                        01493000
*                       ON, if PROGRAMTYPE <> ALL */                    01494000
*      , 5 * Bit(2)                                                     01495000
*                                                                       01496000
*    , 3 GtzQuaaFSourceType Fixed(8) /* Indicates what type of          01497000
*                       source this filter is defined to match:         01498000
*                       SOURCE, SOURCEPATH, or both. See the            01499000
*                       corresponding GtzQuaaSourceType equates. */     01500000
*    , 3 GtzQuaaFProgramType Fixed(8) /* Indicates what type of         01501000
*                       program this filter is defined to match:        01502000
*                       PROGRAM, PROGRAMPATH, or both. See the          01503000
*                       corresponding GtzQuaaProgramType equates. */    01504000
*    , 3 * Char(4)   /* reserved */                                     01505000
*    , 3 GtzQuaaFOwner Char(16) /* OWNER filter value.                  01506000
*               Only valid if GtzQuaaFOwnerFiltered is ON */            01507000
*    , 3 GtzQuaaFSource Char(8) /* SOURCE filter value.                 01508000
*              Only valid if GtzQuaaFSourceFiltered is ON */            01509000
*    , 3 GtzQuaaFSourcePathLen Fixed(16) /* length of the SOURCEPATH    01510000
*              filter value.                                            01511000
*              Only valid if GtzQuaaFSourcePathFiltered is ON */        01512000
*    , 3 GtzQuaaFSourcePathOffset Fixed(16) /* Offset from              01513000
*              the start of this GtzQuaaFilter area to the              01514000
*              SOURCEPATH filter value of the above length.             01515000
*              Only valid if GtzQuaaFSourcePathFiltered is ON */        01516000
*    , 3 GtzQuaaFEventDescLen Fixed(16) /* length of the EVENTDESC      01517000
*              filter value.                                            01518000
*              Only valid if GtzQuaaFEventDescFiltered is ON */         01519000
*    , 3 GtzQuaaFEventDescOffset Fixed(16) /* Offset from               01520000
*              the start of this GtzQuaaFilter area to the              01521000
*              EVENTDESC filter value of the above length.              01522000
*              Only valid if GtzQuaaFEventDescFiltered is ON */         01523000
*    , 3 GtzQuaaFEventData Char(16) Bdy(DWORD) /* EVENTDATA filter      01524000
*              value. Only valid if GtzQuaaFEventDataFiltered is ON */  01525000
*    ,   5 GtzQuaaFEventData1 Fixed(64)                                 01526000
*    ,   5 GtzQuaaFEventData2 Fixed(64)                                 01527000
*    , 3 GtzQuaaFEventJob Char(8) /* EVENTJOB filter value.             01528000
*              Only valid if GtzQuaaFEventJobFiltered is ON */          01529000
*    , 3 GtzQuaaFHomeJob Char(8) /* HOMEJOB filter value.               01530000
*              Only valid if GtzQuaaFHomeJobFiltered is ON */           01531000
*    , 3 GtzQuaaFProgram Char(8) /* PROGRAM filter value.               01532000
*              Only valid if GtzQuaaFProgramFiltered is ON */           01533000
*    , 3 GtzQuaaFProgramOffset Fixed(64) /* PROGRAMOFFSET filter value. 01534000
*              Only valid if GtzQuaaFProgramOffsetFiltered is ON */     01535000
*    , 3 GtzQuaaFProgramPathLen Fixed(16) /* length of the PROGRAMPATH  01536000
*              filter value.                                            01537000
*              Only valid if GtzQuaaFProgramPathFiltered is ON*/        01538000
*    , 3 GtzQuaaFProgramPathOffset Fixed(16) /* Offset from             01539000
*              the start of this GtzQuaaFilter area to the              01540000
*              PROGRAMPATH filter value of the above length.            01541000
*              Only valid if GtzQuaaFProgramPathFiltered is ON */       01542000
*    , 3 GtzQuaaFEventASID Fixed(16) /* EVENTASID filter value.         01543000
*              Only valid if GtzQuaaFEventASIDFiltered is ON */         01544000
*    , 3 GtzQuaaFHomeASID Fixed(16) /* HOMEASID filter value.           01545000
*              Only valid if GtzQuaaFHomeASIDFiltered is ON */          01546000
*    , 3 * Char(8) /* reserved */                                       01547000
*    ;                                                                  01548000
*                                                                       01549000
*Dcl GtzQuaaSourceTypeALL     Fixed(8) Constant(0);                     01550000
*Dcl GtzQuaaSourceTypeNOPATH  Fixed(8) Constant(1);                     01551000
*Dcl GtzQuaaSourceTypePATH    Fixed(8) Constant(2);                     01552000
*                                                                       01553000
*Dcl GtzQuaaProgramTypeALL    Fixed(8) Constant(0);                     01554000
*Dcl GtzQuaaProgramTypeNOPATH Fixed(8) Constant(1);                     01555000
*Dcl GtzQuaaProgramTypePATH   Fixed(8) Constant(2);                     01556000
*                                                                       01557000
*Dcl GtzQuaaOriginTypePARMLIB Fixed(8) Constant(1);                     01558000
*Dcl GtzQuaaOriginTypeCOMMAND Fixed(8) Constant(2);                     01559000
*Dcl GtzQuaaOriginTypePROGRAM Fixed(8) Constant(4);                     01560000
*                                                                       01561000
*/*******************************************************************/  01562000
*/* Mapping of a single EXCLUDE statement within the ANSAREA,       */  01563000
*/* starting with the first statement at offset                     */  01564000
*/* GtzQuaaHExcludeOffset (see GtzQuaaHeader) from the              */  01565000
*/* beginning of the answer area filled in by GTZQUERY.             */  01566000
*/* Any additional EXCLUDE statements can be reached via            */  01567000
*/* GtzQuaaEOffsetNext within a current GtzQuaaExclude structure.   */  01568000
*/*******************************************************************/  01569000
*Dcl 1 GtzQuaaExclude Type Bdy(Dword)                                   01570000
*    , 3 GtzQuaaEEyeCatcher Char(8)                                     01571000
*    , 3 GtzQuaaEOffsetNext Fixed(16) /* Offset to the next             01572000
*               GtzQuaaExclude area, or zero, if no more such areas     01573000
*               available. The offset is zero-based and is relative     01574000
*               to the beginning of this GtzQuaaExclude area here. */   01575000
*    , 3 GtzQuaaEOriginSuffix Char(2) /* If this EXCLUDE was            01576000
*               specified via a GTZPRMxx parmlib member, as indicated   01577000
*               by a GtzQuaaEOriginType value of                        01578000
*               GtzQuaaOriginTypePARMLIB, this field here contains      01579000
*               the xx suffix. */                                       01580000
*    , 3 GtzQuaaEOriginType Fixed(8) /* Indicates where this EXCLUDE    01581000
*               originated from: A GTZPRMxx parmlib member, a SETGTZ    01582000
*               EXCLUDE command, or a program interface. See the        01583000
*               corresponding GtzQuaaOriginTypePARMLIB/COMMAND/PROGRAM  01584000
*               equates. */                                             01585000
*    , 3 * Char(3) /* reserved */                                       01586000
*    , 3 * Char(8) /* reserved */                                       01587000
*    , 3 GtzQuaaEFlt Char(Length(GtzQuaaFilter)) Bdy(Dword) /* The      01588000
*               filter values used for this EXCLUDE */                  01589000
*      , 5 GtzQuaaEFilter isA(GtzQuaaFilter) /* PLX-only */             01590000
*    ;                                                                  01591000
*                                                                       01592000
*/*******************************************************************/  01593000
*/* Mapping of a single DEBUG  statement within the ANSAREA,        */  01594000
*/* starting with the first statement at offset                     */  01595000
*/* GtzQuaaHDebugOffset (see GtzQuaaHeader) from the                */  01596000
*/* beginning of the answer area filled in by GTZQUERY.             */  01597000
*/* Any additional DEBUG statements can be reached via              */  01598000
*/* GtzQuaaDOffsetNext within a current GtzQuaaDebug structure.     */  01599000
*/*******************************************************************/  01600000
*Dcl GtzQuaaDActionABEND Constant(1);                                   01601000
*Dcl GtzQuaaDActionDUMP Constant(2);                                    01602000
*                                                                       01603000
*Dcl GtzQuaaDActionNOLIMIT Constant(0);                                 01604000
*                                                                       01605000
*Dcl 1 GtzQuaaDebug Type Bdy(Dword)                                     01606000
*    , 3 GtzQuaaDEyeCatcher Char(8)                                     01607000
*    , 3 GtzQuaaDOffsetNext Fixed(16) /* Offset to the next             01608000
*               GtzQuaaDebug area, or zero, if no more such areas       01609000
*               available. The offset is zero-based and is relative     01610000
*               to the beginning of this GtzQuaaDebug area here. */     01611000
*    , 3 GtzQuaaDReason Fixed(16) /* DEBUG REASON-code */               01612000
*    , 3 GtzQuaaDActionLimit Fixed(16) /* How often the system is       01613000
*               allowed to trigger the action for this DEBUG statement  01614000
*               (when matched by a new tracked instance candidate).     01615000
*               A value of GtzQuaaDActionNOLIMIT means "no limit". */   01616000
*    , 3 GtzQuaaDAction Fixed(8) /* See GtzQuaaDActionDUMP!ABEND */     01617000
*    , 3 GtzQuaaDOriginType Fixed(8) /* Indicates where this DEBUG      01618000
*               originated from: A GTZPRMxx parmlib member, a SETGTZ    01619000
*               DEBUG command, or a program interface. See the          01620000
*               corresponding GtzQuaaOriginTypePARMLIB/COMMAND/PROGRAM  01621000
*               equates. */                                             01622000
*    , 3 GtzQuaaDOriginSuffix Char(2) /* If this DEBUG was              01623000
*               specified via a GTZPRMxx parmlib member, as indicated   01624000
*               by a GtzQuaaDOriginType value of                        01625000
*               GtzQuaaOriginTypePARMLIB, this field here contains      01626000
*               the xx suffix. */                                       01627000
*    , 3 GtzQuaaDActionCount Fixed(16) /* How often this DEBUG          01628000
*               statement triggered an action so far. Counts towards    01629000
*               the ActionLimit, unless GtzQuaaDActionNOLIMIT */        01630000
*    , 3 * Char(4) /* reserved */                                       01631000
*    , 3 GtzQuaaDFlt Char(Length(GtzQuaaFilter)) Bdy(Dword) /* The      01632000
*               filter values used for this DEBUG */                    01633000
*      , 5 GtzQuaaDFilter isA(GtzQuaaFilter) /* PLX-only */             01634000
*    ;                                                                  01635000
*                                                                       01636000
*/*******************************************************************/  01637000
*/* Mapping of a single TRACKDATA structure (tracked instance)      */  01638000
*/* within the ANSAREA, starting with the first instance at offset  */  01639000
*/* GtzQuaaHTrackDataOffset (see GtzQuaaHeader) from the            */  01640000
*/* beginning of the answer area filled in by GTZQUERY.             */  01641000
*/* Any additional TRACKDATA instances can be reached via           */  01642000
*/* GtzQuaaTOffsetNext within a current GtzQuaaTrackData structure. */  01643000
*/*******************************************************************/  01644000
*                                                                       01645000
*Dcl 1 GtzQuaaTrackData Type Bdy(Dword)                                 01646000
*    , 3 GtzQuaaTEyeCatcher Char(8)                                     01647000
*    , 3 GtzQuaaTOffsetNext Fixed(16) /* Offset to the next             01648000
*               GtzQuaaTrackData area, or zero, if no more such areas   01649000
*               available. The offset is zero-based and is relative     01650000
*               to the beginning of this GtzQuaaTrackData area here. */ 01651000
*    , 3 GtzQuaaTFlags1 Bit(8)                                          01652000
*      , 5 GtzQuaaTisSourcePath Bit(1) /*                               01653000
*                       if ON, use SOURCEPATH, not SOURCE */            01654000
*      , 5 GtzQuaaTisProgramPath Bit(1) /*                              01655000
*                       if ON, use PROGRAMPATH, not PROGRAM */          01656000
*      , 5 GtzQuaaTisAuthorized Bit(1) /*                               01657000
*                       if ON, the tracked EVENT ran authorized */      01658000
*      , 5 GtzQuaaTisCNZTRKR Bit(1) /* not a part of the intended       01659000
*                                       interface */                    01660000
*      , 5 * Bit(4)                                                     01661000
*    , 3 * Char(5)                                                      01662000
*     ,3 * Bit(8)                                                       01663000
*     ,3 GtzQuaaTFirstTOD Bit(64)  /*  The timestamp when the           01664000
*               first instance of this (unique) tracked instance was    01665000
*               recorded (all others just had the occurrence count      01666000
*               incremented). */                                        01667000
*     ,3 * Bit(56)                                                      01668000
*    , 3 GtzQuaaTCount Fixed(64) /* How often this (unique) tracked     01669000
*               instance was recorded. */                               01670000
*    , 3 * Char(16)                                                     01671000
*    , 3 GtzQuaaTOwner Char(16) /* OWNER value. */                      01672000
*    , 3 GtzQuaaTSource Char(8) /* SOURCE value.                        01673000
*              Only valid if GtzQuaaTisSourcePath is OFF */             01674000
*    , 3 GtzQuaaTSourcePathLen Fixed(16) /* length of the SOURCEPATH    01675000
*              value.                                                   01676000
*              Only valid if GtzQuaaTisSourcePath is ON */              01677000
*    , 3 GtzQuaaTSourcePathOffset Fixed(16) /* Offset from              01678000
*              the start of this GtzQuaaTrackData area to the           01679000
*              SOURCEPATH value of the above length.                    01680000
*              Only valid if GtzQuaaTisSourcePath is ON */              01681000
*    , 3 GtzQuaaTEventDescLen Fixed(16) /* length of the EVENTDESC      01682000
*              value. */                                                01683000
*    , 3 GtzQuaaTEventDescOffset Fixed(16) /* Offset from               01684000
*              the start of this GtzQuaaTrackData area to the           01685000
*              EVENTDESC value of the above length. */                  01686000
*    , 3 GtzQuaaTEventData Char(16) Bdy(DWORD) /* EVENTDATA value */    01687000
*    ,   5 GtzQuaaTEventData1 Fixed(64)                                 01688000
*    ,   5 GtzQuaaTEventData2 Fixed(64)                                 01689000
*    , 3 GtzQuaaTEventJob Char(8) /* derived EVENTJOB-name value. */    01690000
*    , 3 GtzQuaaTHomeJob  Char(8) /* derived HOMEJOB-name value. */     01691000
*    , 3 GtzQuaaTProgram Char(8) /* derived PROGRAM-name value.         01692000
*              Only valid if GtzQuaaTisProgramPath is OFF */            01693000
*    , 3 GtzQuaaTProgramOffset Fixed(64)/* derived PROGRAMOFFSET value. 01694000
*                                                                   */  01695000
*    , 3 GtzQuaaTProgramPathLen Fixed(16) /* length of the PROGRAMPATH  01696000
*              value.                                                   01697000
*              Only valid if GtzQuaaTisProgramPath is ON*/              01698000
*    , 3 GtzQuaaTProgramPathOffset Fixed(16) /* Offset from             01699000
*              the start of this GtzQuaaTrackData area to the           01700000
*              derived PROGRAMPATH value of the above length.           01701000
*              Only valid if GtzQuaaTisProgramPath is ON */             01702000
*    , 3 GtzQuaaTEventASID Fixed(16) /* EVENTASID value. */             01703000
*    , 3 GtzQuaaTHomeASID Fixed(16) /* HOMEASID value. */               01704000
*    , 3 * Char(32) /* reserved */                                      01705000
*    ;                                                                  01706000
*                                                                       01707000
*/*******************************************************************/  01708000
*/* GTZQUERY return and reason codes                                */  01709000
*/*******************************************************************/  01710000
*                                                                       01711000
*/* Reason code format: ddddrrxy, with rr= return code, x=8..A, y=0..F  01712000
*   and dddd = component diagnostic data, which must not be assumed     01713000
*   to be 0. Apply GtzQueryRsnCodeMask to an actual reason code value   01714000
*   to derive a value listed below.                                     01715000
* */                                                                    01716000
*Dcl GtzQueryRsnCodeMask Bit(32) Constant('0000FFFF'x); /* Use this     01717000
*               mask to isolate the non component-diagnostic portion    01718000
*               of the reason code or abend reason code */              01719000
*                                                                       01720000
*                                                                       01721000
*/*** AMGRET - START (RC 0-16, RSNs for RC=4,8,12) ***/                 01722000
*DCL GtzQueryRc_OK BIT(32) Constant('00000000'X) ; /*                   01723000
*                        Meaning: Successfully returned requested       01724000
*                        information.                                   01725000
*                        Action: None required                       */ 01726000
*DCL GtzQueryRc_Error BIT(32) Constant('00000008'X) ; /*                01727000
*                        Meaning: Error                                 01728000
*                        Action: Refer to action under the individual   01729000
*                        reason code.                                */ 01730000
*DCL GtzQueryRsn_BadRequest BIT(32) Constant('00000880'X) ; /*          01731000
*                        Meaning: A bad REQUEST type has been           01732000
*                        specified.                                     01733000
*                        Action: Use one of the supported request       01734000
*                        types.                                      */ 01735000
*DCL GtzQueryRsn_BadParmlistALET BIT(32) Constant('00000881'X) ; /*     01736000
*                        Meaning: Bad parameter list ALET.              01737000
*                        Action: Make sure that the ALET associated     01738000
*                        with the parameter list is valid. The access   01739000
*                        register might not have been set up correctly. 01740000
*                                                                    */ 01741000
*DCL GtzQueryRsn_BadParmlist BIT(32) Constant('00000882'X) ; /*         01742000
*                        Meaning: Error accessing parameter list.       01743000
*                        Action: Make sure that the provided parameter  01744000
*                        list is valid.                              */ 01745000
*DCL GtzQueryRsn_BadParmlistVersion BIT(32) Constant('00000883'X) ; /*  01746000
*                        Meaning: The specified version of the macro is 01747000
*                        not compatible with the current version of IBM 01748000
*                        Generic Tracker for z/OS.                      01749000
*                        Action: Avoid requesting parameters that are   01750000
*                        not supported by this version of IBM Generic   01751000
*                        Tracker for z/OS.                           */ 01752000
*DCL GtzQueryRsn_BadAnsAreaALET BIT(32) Constant('00000884'X) ; /*      01753000
*                        Meaning: Bad ANSAREA ALET.                     01754000
*                        Action: Make sure that the ALET associated     01755000
*                        with the answer area is valid. The access      01756000
*                        register might not have been set up correctly. 01757000
*                                                                    */ 01758000
*DCL GtzQueryRsn_BadAnsAreaAddrNull BIT(32) Constant('00000885'X) ; /*  01759000
*                        Meaning: ANSAREA address is NULL.              01760000
*                        Action: Check the location of your answer      01761000
*                        area. Typically address zero is not a valid    01762000
*                        address.                                    */ 01763000
*DCL GtzQueryRsn_BadAnsAreaAddrAlign BIT(32) Constant('00000886'X) ; /* 01764000
*                        Meaning: The ANSAREA has a bad alignment.      01765000
*                        Action: The ANSAREA has to start at a          01766000
*                        double-word boundary.                       */ 01767000
*DCL GtzQueryRsn_BadAnsLen BIT(32) Constant('00000887'X) ; /*           01768000
*                        Meaning: Bad ANSLEN value.                     01769000
*                        Action: Provide an answer area which is at     01770000
*                        least GtzQuaaMinAnsLen bytes long.          */ 01771000
*DCL GtzQueryRsn_BadAnsArea BIT(32) Constant('00000888'X) ; /*          01772000
*                        Meaning: Error accessing answer area.          01773000
*                        Action: Make sure that the provided answer     01774000
*                        area is valid.                              */ 01775000
*DCL GtzQueryRsn_BadSecCheckValue BIT(32) Constant('00000889'X) ; /*    01776000
*                        Meaning: Bad SECCHECK value.                   01777000
*                        Action: Specify a support SECCHECK value.   */ 01778000
*DCL GtzQueryRsn_BadEnvNotEnabled BIT(32) Constant('0000088A'X) ; /*    01779000
*                        Meaning: Not enabled.                          01780000
*                        Action: Avoid using GTZQUERY when not enabled  01781000
*                        for I/O and external interrupts                01782000
*                                                                    */ 01783000
*DCL GtzQueryRsn_BadEnvLocked BIT(32) Constant('0000088B'X) ; /*        01784000
*                        Meaning: Locked.                               01785000
*                        Action: Avoid using GTZQUERY when a lock is    01786000
*                        held.                                       */ 01787000
*DCL GtzQueryRsn_BadEnvSrbmode BIT(32) Constant('0000088C'X) ; /*       01788000
*                        Meaning: SRB mode.                             01789000
*                        Action: Avoid issuing GTZQUERY in SRB mode. */ 01790000
*DCL GtzQueryRsn_BadEnvFRR BIT(32) Constant('0000088D'X) ; /*           01791000
*                        Meaning: The caller had an EUT FRR             01792000
*                        established.                                   01793000
*                        Action: Avoid using HZSPWRIT when an EUT FRR   01794000
*                        is established.                             */ 01795000
*DCL GtzQueryRsn_BadEnvNotInGtz BIT(32) Constant('0000088E'X) ; /*      01796000
*                        Meaning: The processing module for GTZQUERY    01797000
*                        has been invoked outside of the GTZ address    01798000
*                        space.                                         01799000
*                        Action: Use the provided GTZQUERY macro to     01800000
*                        call the processing module.                 */ 01801000
*DCL GtzQueryRsn_NotAuthorized BIT(32) Constant('0000088F'X) ; /*       01802000
*                        Meaning: Not authorized.                       01803000
*                        Action: Ensure you are authorized to perform   01804000
*                        the requested operation and that the XFACILIT  01805000
*                        class has been RACLISTed.                   */ 01806000
*DCL GtzQueryRsn_BadOwnerCharset BIT(32) Constant('00000891'X) ; /*     01807000
*                        Meaning: The OWNER parameter value contains    01808000
*                        bad characters.                                01809000
*                        Action: Use only allowed characters as         01810000
*                        documented for the OWNER parameter.         */ 01811000
*DCL GtzQueryRsn_BadSourcePathALET BIT(32) Constant('00000892'X) ; /*   01812000
*                        Meaning: Bad SOURCEPATH ALET.                  01813000
*                        Action: Make sure that the ALET associated     01814000
*                        with the SOURCEPATH parameter is valid. The    01815000
*                        access register might not have been set up     01816000
*                        correctly.                                  */ 01817000
*DCL GtzQueryRsn_BadSourcePath BIT(32) Constant('00000893'X) ; /*       01818000
*                        Meaning: Error accessing SOURCEPATH.           01819000
*                        Action: Make sure that the provided SOURCEPATH 01820000
*                        is properly addressable.                    */ 01821000
*DCL GtzQueryRsn_BadProgramPathALET BIT(32) Constant('00000894'X) ; /*  01822000
*                        Meaning: Bad PROGRAMPATH ALET.                 01823000
*                        Action: Make sure that the ALET associated     01824000
*                        with the PROGRAMPATH parameter is valid. The   01825000
*                        access register might not have been set up     01826000
*                        correctly.                                  */ 01827000
*DCL GtzQueryRsn_BadProgramPath BIT(32) Constant('00000895'X) ; /*      01828000
*                        Meaning: Error accessing PROGRAMPATH.          01829000
*                        Action: Make sure that the provided            01830000
*                        PROGRAMPATH is properly addressable.        */ 01831000
*DCL GtzQueryRsn_BadEventDescALET BIT(32) Constant('00000896'X) ; /*    01832000
*                        Meaning: Bad EVENTDESC ALET.                   01833000
*                        Action: Make sure that the ALET associated     01834000
*                        with the EVENTDESC parameter is valid. The     01835000
*                        access register might not have been set up     01836000
*                        correctly.                                  */ 01837000
*DCL GtzQueryRsn_BadEventDesc BIT(32) Constant('00000897'X) ; /*        01838000
*                        Meaning: Error accessing EVENTDESC.            01839000
*                        Action: Make sure that the provided EVENTDESC  01840000
*                        is properly addressable.                    */ 01841000
*DCL GtzQueryRsn_BadProgramCharset BIT(32) Constant('00000898'X) ; /*   01842000
*                        Meaning: The PROGRAM parameter value contains  01843000
*                        bad characters.                                01844000
*                        Action: Use only allowed characters as         01845000
*                        documented for the PROGRAM parameter.       */ 01846000
*DCL GtzQueryRsn_BadProgramPathCharset BIT(32) Constant('00000899'X)    01847000
*                        ; /*                                           01848000
*                        Meaning: The PROGRAMPATH parameter value       01849000
*                        contains bad characters.                       01850000
*                        Action: Use only allowed characters as         01851000
*                        documented for the PROGRAMPATH parameter.   */ 01852000
*DCL GtzQueryRsn_BadSourceCharset BIT(32) Constant('0000089A'X) ; /*    01853000
*                        Meaning: The SOURCE parameter value contains   01854000
*                        bad characters.                                01855000
*                        Action: Use only allowed characters as         01856000
*                        documented for the SOURCE parameter.        */ 01857000
*DCL GtzQueryRsn_BadSourcePathCharset BIT(32) Constant('0000089B'X)     01858000
*                        ; /*                                           01859000
*                        Meaning: The SOURCEPATH parameter value        01860000
*                        contains bad characters.                       01861000
*                        Action: Use only allowed characters as         01862000
*                        documented for the SOURCEPATH parameter.    */ 01863000
*DCL GtzQueryRsn_BadEventDescCharset BIT(32) Constant('0000089C'X) ; /* 01864000
*                        Meaning: The EVENTDESC parameter value         01865000
*                        contains bad characters.                       01866000
*                        Action: Use only allowed characters as         01867000
*                        documented for the EVENTDESC parameter.     */ 01868000
*DCL GtzQueryRsn_BadEventDescLen BIT(32) Constant('0000089D'X) ; /*     01869000
*                        Meaning: The EVENTDESCLEN parameter value is   01870000
*                        out of range.                                  01871000
*                        Action: Specify an EVENTDESCLEN in the         01872000
*                        documented allowed range.                   */ 01873000
*DCL GtzQueryRsn_BadSourcePathLen BIT(32) Constant('0000089E'X) ; /*    01874000
*                        Meaning: The SOURCEPATHLEN parameter value is  01875000
*                        out of range.                                  01876000
*                        Action: Specify an SOURCEPATHLEN in the        01877000
*                        documented allowed range.                   */ 01878000
*DCL GtzQueryRsn_BadProgramPathLen BIT(32) Constant('0000089F'X) ; /*   01879000
*                        Meaning: The PROGRAMPATHLEN parameter value is 01880000
*                        out of range.                                  01881000
*                        Action: Specify an PROGRAMPATHLEN in the       01882000
*                        documented allowed range.                   */ 01883000
*DCL GtzQueryRsn_BadProgramType BIT(32) Constant('000008A0'X) ; /*      01884000
*                        Meaning: Invalid PROGRAMTYPE.                  01885000
*                        Action: Use only documented PROGRAMTYPE        01886000
*                        values.                                     */ 01887000
*DCL GtzQueryRsn_BadSourceType BIT(32) Constant('000008A1'X) ; /*       01888000
*                        Meaning: Invalid SOURCETYPE.                   01889000
*                        Action: Use only documented SOURCETYPE values. 01890000
*                                                                    */ 01891000
*DCL GtzQueryRsn_BadHomeJobCharset BIT(32) Constant('000008A2'X) ; /*   01892000
*                        Meaning: The HOMEJOB parameter value contains  01893000
*                        bad characters.                                01894000
*                        Action: Use only allowed characters as         01895000
*                        documented for the HOMEJOB parameter.       */ 01896000
*DCL GtzQueryRsn_BadEventJobCharset BIT(32) Constant('000008A3'X) ; /*  01897000
*                        Meaning: The EVENTJOB parameter value contains 01898000
*                        bad characters.                                01899000
*                        Action: Use only allowed characters as         01900000
*                        documented for the EVENTJOB parameter.      */ 01901000
*DCL GtzQueryRsn_BadSourceLen BIT(32) Constant('000008A4'X) ; /*        01902000
*                        Meaning: The SOURCE parameter value has an     01903000
*                        invalid length.                                01904000
*                        Action: Specify a valid SOURCE value with      01905000
*                        a length between 1 and 8 characters. */        01906000
*DCL GtzQueryRsn_BadProgramLen BIT(32) Constant('000008A5'X) ; /*       01907000
*                        Meaning: The PROGRAM parameter value has an    01908000
*                        invalid length.                                01909000
*                        Action: Specify a valid PROGRAM value with     01910000
*                        a length between 1 and 8 characters. */        01911000
*DCL GtzQueryRsn_BadHOMEJOBLen BIT(32) Constant('000008A6'X) ; /*       01912000
*                        Meaning: The HOMEJOB parameter value has an    01913000
*                        invalid length.                                01914000
*                        Action: Specify a valid HOMEJOB value with     01915000
*                        a length between 1 and 8 characters. */        01916000
*DCL GtzQueryRsn_BadEVENTJOBLen BIT(32) Constant('000008A7'X) ; /*      01917000
*                        Meaning: The EVENTJOB parameter value has an   01918000
*                        invalid length.                                01919000
*                        Action: Specify a valid EVENTJOB value with    01920000
*                        a length between 1 and 8 characters. */        01921000
*DCL GtzQueryRsn_BadOWNERLen BIT(32) Constant('000008A8'X) ; /*         01922000
*                        Meaning: The OWNER parameter value has an      01923000
*                        invalid length.                                01924000
*                        Action: Specify a valid OWNER value with       01925000
*                        a length between 1 and 16 characters. */       01926000
*DCL GtzQueryRc_SevereError BIT(32) Constant('0000000C'X) ; /*          01927000
*                        Meaning: Severe Error / Environment Error      01928000
*                        Action: Refer to action under the individual   01929000
*                        reason code.                                */ 01930000
*DCL GtzQueryRsn_FacilityNotAvailable BIT(32) Constant('00000C90'X)     01931000
*                        ; /*                                           01932000
*                        Meaning: Generic Tracker is not available.     01933000
*                        Action: This might be a temporary situation.   01934000
*                        See the description of message GTZ1000I for    01935000
*                        further information.                        */ 01936000
*DCL GtzQueryRc_OutOfMemory BIT(32) Constant('0000000D'X) ; /*          01937000
*                        Meaning: Tracking facility is low on memory.   01938000
*                        Action: See the description of message         01939000
*                        GTZ0004E. Try also to omit any filters, for    01940000
*                        example for REQUEST(TRACKDATA).             */ 01941000
*DCL GtzQueryRc_CompError BIT(32) Constant('00000010'X) ; /*            01942000
*                        Meaning: Component error.                      01943000
*                        Action: Report the associated reason code to   01944000
*                        the system programmer to contact IBM Service.  01945000
*                                                                    */ 01946000
*/*** AMGRET - END (RC 0-16, RSNs for RC=4,8,12) ***/                   01947000
*                                                                       01948000
*@LOGIC;                                                                01949000
*#PRAGMA TOOL=CBGEN.                                                    01950000
*#DELETE.GtzQuaaEyeCatcher_DIAGNOSE                                     01951000
*#DELETE.GtzQuaaHDiagnoseValid                                          01952000
*#DELETE.GtzQuaaHDiagnoseOffset                                         01953000
*#DELETE.GtzQuaaDiagnose                                                01954000
*#DELETE.GtzQuaaMaxDiagnoseLen                                          01955000
*#DELETE.GtzQuaaEFilter                                                 01956000
*#DELETE.GtzQuaaDFilter                                                 01957000
*#ALIGNOP.                                                              01958000
*#EPRAGMA.                                                              01959000
*@ENDLOGIC;                                                             01960000
*/* End of PL/X Source                                               */ 01961000
*/* End of PL/X Source                                               */ 01962000
* %IF GTZZQRY_LIST = 'NO' !                                             01963000
*    ZCBPRINT = 'NO' %THEN                                              01964000
* %DO;                                                                  01965000
*   @LIST POP NOECHO;                                                   01966000
* %END;                                                                 01967000
* %END;                                                                 01968000
