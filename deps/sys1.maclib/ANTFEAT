* %GOTO FEATPLAS1; /*                                                   00010490
         MACRO                                                          00010980
&LAB     ANTFEAT                                                        00011470
.*/ %FEATPLAS1:;                                                        00011960
*/** Start of Specifications *****************************************/ 00012450
*/*                                                                  */ 00012940
*/* $MAC(ANTFEAT) COMP(DF117) PROD(SDM):                             */ 00013430
*/*                                                                  */ 00013920
*/* Descriptive Name = ANTRQST FEATURE CODE OUTPUT                   */ 00014410
*/*                    DATA MAP STRUCTURE                            */ 00014900
*/*                                                                  */ 00015390
*/********************************************************************/ 00015880
*/*                                                                  */ 00016370
*/*PROPRIETARY V3 STATEMENT                                          */ 00016860
*/*Licensed Materials - Property of IBM                              */ 00017350
*/*"Restricted Materials of IBM"                                     */ 00017840
*/*5650-ZOS                                                          */ 00018330
*/*Copyright IBM Corp. 2017,2022                                     */ 00019240
*/*END PROPRIETARY V3 STATEMENT                                      */ 00019310
*/*                                                                  */ 00019800
*/********************************************************************/ 00020290
*/*                                                                  */ 00020780
*/* Function =  This macro maps the data returned in the RETINFO     */ 00021270
*/*             field from a LEVEL request.  The feature bit         */ 00021760
*/*             string returned is unique to each ILK request.       */ 00022250
*/*                                                                  */ 00022740
*/* Notes =     The total length of returned data is limited by      */ 00023230
*/*             the length of the RETINFO field (100 bytes).         */ 00023720
*/*                                                                  */ 00024210
*/* Method of access                                                 */ 00024700
*/*                                                                  */ 00025190
*/*    PL/X =                                                        */ 00025680
*/*       %ANTFEAT_BASE = 'Based(Addr(RetInfo))'                     */ 00026170
*/*       %INCLUDE SYSLIB(ANTFEAT)                                   */ 00026660
*/*                                                                  */ 00027150
*/*       ANTFEAT_BASE can be used to change the default basing      */ 00027640
*/*       attribute of the control block.                            */ 00028130
*/*                                                                  */ 00028620
*/*    Assembler =                                                   */ 00029110
*/*       LABEL   ANTFEAT                                            */ 00029600
*/*                                                                  */ 00030090
*/*       If LABEL is specified, it will be the label on the         */ 00030580
*/*       DSECT statement.                                           */ 00031070
*/*                                                                  */ 00031560
*/*                                                                  */ 00032050
*/* Sample code using ANTFEAT macro:                                 */ 00032540
*/*                                                                  */ 00033030
*/*           ANTRQST ILK=PPRC,REQUEST=LEVEL,RETINFO=RETINFO         */ 00033520
*/*           C     R15,=A(ANTFEAT_RETURNED)                         */ 00034010
*/*           BNE   NO_BITS                                          */ 00034500
*/*           LA    R1,RETINFO                                       */ 00034990
*/*           USING ANTFEAT,R1                                       */ 00035480
*/*  *        TEST IF PPRC MULTI-TARGET IS AVAILABLE                 */ 00035970
*/*           TM    ANTFEAT_PPRC2,ANTFEAT_PPRC2_MT_PPRC              */ 00036460
*/*           BNO   NO_BITS                                          */ 00036950
*/*           .                                                      */ 00037440
*/*           .                                                      */ 00037930
*/*           .                                                      */ 00038420
*/*           .                                                      */ 00038910
*/*           .                                                      */ 00039400
*/*  NO_BITS  DS    0H                                               */ 00039890
*/*           .                                                      */ 00040380
*/*           .                                                      */ 00040870
*/*  RETINFO  DC    XL100'00'                                        */ 00041360
*/*           LTORG                                                  */ 00041850
*/*           ANTFEAT                                                */ 00042340
*/*                                                                  */ 00042830
*/*                                                                  */ 00043320
*/* Change Activity =                                                */ 00043810
*/*                                                                  */ 00044300
*/*  $FB=OA44414,HDZ2210,170210,POKMJS: Initial support              */ 00044790
*/*  $RE=OA51308,HDZ2210,170407,POKMJS: Suppress msg ANTU2515I   @REA*/ 00044990
*/*  $FB=OA52534,HDZ2210,170504,TUCCGS: FBA                      @FBA*/ 00045090
*/*  $CF=OA52394,HDZ2210,170404,TUCCGS: Cascading FlashCopy      @CFA*/ 00045180
*/*  $MH=OA52386,HDZ2210,170701,RUSCGS: OBJSTORE HyperSwap       @MHA*/ 00045230
*/*  $LC=OA54432,HDZ2220,171115,TUCCGS: LCP                      @LCA*/ 00045250
*/*  $X3=OA51707,HDZ2210,170321,TUCNPS: Offline iteration 3      @X3A*/ 00045260
*/*  $CL=OA56849,HDZ2220,190319,TUCNPS: XEND DRAIN CLIP          @CLA*/ 00045270
*/*  $XQ=OA56085,HDZ2220,180618,TUCNPS: XQUERY UNFORMAT          @XQA*/ 00045275
*/*  $SG=OA56518,HDZ2220,190110,TUCCGS: Safe Guarded Copy        @SGA*/ 00045277
*/*  $SP=OA59169,HDZ2220,200307,TUCCGS: SGC Persistent Recover   @SPA*/ 00045278
*/*  $RC=OA57209,HDZ2220,190402,TUCCGS: RESETRSV CKD             @RCA*/ 00045279
*/*  $RP=OA61072,HDZ2230,210501,TUCCGS: SGC Restore Production   @RPA*/         
*/*  $MU=OA62809,HDZ2250,220222,INDUDA: Multipl GM Session on LSS@MUA*/         
*/*  $EM=OA63501,HDZ2250,220712,INDUDA: Perf Event Monitor Action@EMA*/         
*/*                                                                  */ 00045280
*/** End of Specifications *******************************************/ 00045770
*   %GOTO FEATPLAS2;               /*                                   00046260
         LCLC  &L                  DEFINE LOCAL CHAR VARIABLE           00046750
&L       SETC  'ANTFEAT'                                                00047240
         AIF   ('&LAB' EQ '').SKIP1                                     00047730
&L       SETC  '&LAB'                                                   00048220
.SKIP1   ANOP                                                           00048710
&L                  DSECT                                               00049200
*                                                                       00049690
*    MAP THE FRONT MATTER SECTION OF THE FEATURE DATA                   00050180
*                                                                       00050670
ANTFEAT_LEVEL_NUM  DS    F         A level number of 200 indicates      00051160
*                                  the ANTFEAT data is returned         00051650
ANTFEAT_REAS       DS    F         Set to zero                          00052140
ANTFEAT_EYE        DS    CL8       Eye catcher C'ANTFEAT '              00052630
ANTFEAT_FOR_ILK    DS    CL8       Feature bits for ILK                 00053120
ANTFEAT_TOTAL_LEN  DS    F         Total length of returned data (100)  00053610
                   DS    XL16      Reserved                             00054100
ANTFEAT_BIT_STRING DS    XL56      Feature bit string                   00054590
*                                                                       00055080
*    ILK=XRC FEATURE CODES                                              00055570
*                                                                       00056060
                   ORG   ANTFEAT_BIT_STRING                             00056550
ANTFEAT_XRC1              DS  XL1                                       00057040
ANTFEAT_XRC1_XSET_REFRESHP EQU X'80' XSET Refresh capabilities          00057530
ANTFEAT_XRC1_XSET_DVCBLOCK EQU X'40' XSET Device blocking               00058020
ANTFEAT_XRC1_XADD_DVCBLOCK EQU X'20' XADD Device blocking               00058510
ANTFEAT_XRC1_XQUERY_ETYPE EQU X'10'  XQUERY Etype                       00059000
ANTFEAT_XRC1_XSET_SUSLBUSY EQU X'08' XSET Suspend on Long Busy          00059490
ANTFEAT_XRC1_XSTATUS      EQU X'04'  XSTATUS                            00059980
ANTFEAT_XRC1_XQUERY_VOLLIST EQU X'02' XQUERY Volser List                00060470
ANTFEAT_XRC1_XSTART_MODE  EQU X'01'  XSTART mode                        00060960
*                                                                       00061450
ANTFEAT_XRC2              DS  XL1                                       00061940
ANTFEAT_XRC2_XSWAP        EQU X'80'  XSWAP                              00062430
ANTFEAT_XRC2_XADD_SWAPDEV EQU X'40'  XADD SwapDev                       00062920
ANTFEAT_XRC2_XADD_PDEVNUM EQU X'20'  XADD PDevNum                       00063410
ANTFEAT_XRC2_XADD_SDEVNUM EQU X'10'  XADD SDevNum                       00063900
ANTFEAT_XRC2_XRECOVER_TER EQU X'08'  XRECOVER Tertiary                  00064390
ANTFEAT_XRC2_XMAINT       EQU X'04'  XMAINT                             00064880
ANTFEAT_XRC2_XRECOVER_FORCE EQU X'02' XRECOVER Force                    00065370
ANTFEAT_XRC2_XRECOVER_CHECK EQU X'01' XRECOVER Check                    00065860
*                                                                       00066350
ANTFEAT_XRC3              DS  XL1                                       00066840
ANTFEAT_XRC3_XFEATURES    EQU X'80'  XQUERY Storage Control Xfeatures   00067330
ANTFEAT_XRC3_CREFRESH     EQU X'40'  XCOUPLE Cluster Refresh            00067820
ANTFEAT_XRC3_XSET_REFRESHS EQU X'20' XSET Refresh secondary             00068310
ANTFEAT_XRC3_XQUERY_OPTION EQU X'10' XQUERY Option                      00068800
ANTFEAT_XRC3_SUPPRESS_ACK EQU X'08'  Suppress ACK msg ANTU2515I  @REA   00069000
ANTFEAT_XRC3_XSET_XQUERY_DEVNUM EQU X'04' XSET PDEVNUM/            @X3A 00069090
*                                    XQUERY DEVNUM                 @X3A 00069180
ANTFEAT_XRC3_XEND_CLIP    EQU X'02'  XEND DRAIN CLIP               @CLA 00069230
ANTFEAT_XRC3_XQUERY_UNF   EQU X'01'  XQUERY UNFORMAT               @XQA 00069260
*                                                                       00069290
*    ILK=PPRC FEATURE CODES                                             00069780
*                                                                       00070270
                   ORG   ANTFEAT_BIT_STRING                             00070760
ANTFEAT_PPRC1             DS  XL1                                       00071250
ANTFEAT_PPRC1_FAILOVER    EQU X'80'  PESTPAIR Failover                  00071740
ANTFEAT_PPRC1_FAILBACK    EQU X'40'  PESTPAIR Failback                  00072230
ANTFEAT_PPRC1_ANTPQMAP    EQU X'20'                                     00072720
ANTFEAT_PPRC1_INCRESYNC   EQU X'10'  PESTPAIR Incremental Resync        00073210
ANTFEAT_PPRC1_SETGTOK     EQU X'08'  PESTPAIR Setgtox                   00073700
ANTFEAT_PPRC1_XRCONSEC    EQU X'04'  PESTPAIR XRConSec                  00074190
ANTFEAT_PPRC1_AUTORESYNC  EQU X'02'  PESTPAIR AutoResync                00074680
ANTFEAT_PPRC1_SUBCHANNEL  EQU X'01'  Multiple subchannel                00075170
*                                                                       00075660
ANTFEAT_PPRC2             DS  XL1                                       00076150
ANTFEAT_PPRC2_PQSCSTAT    EQU X'80'  Pqscstat Storage Synergy           00076640
ANTFEAT_PPRC2_RESET_RESERVE EQU X'40' PESTPAIR Reset reserve            00077130
ANTFEAT_PPRC2_PQUERY_LNK  EQU X'20'  PQUERY Paths(Lnk)                  00077620
ANTFEAT_PPRC2_SOFT_FENCE  EQU X'10'  Soft fence                         00078110
ANTFEAT_PPRC2_SPID_FENCE  EQU X'08'  SPID fence                         00078600
ANTFEAT_PPRC2_MT_PPRC     EQU X'04'  Multi-Target PPRC                  00079090
ANTFEAT_PPRC2_QUIESCED_IO EQU X'02'  PQUERY AOMSERV NoWait              00079580
ANTFEAT_PPRC2_ZFBA        EQU X'01'  ZFBA support                 @FBA  00079780
*                                                                       00079850
ANTFEAT_PPRC3             DS  XL1                                 @RCA  00079920
ANTFEAT_PPRC3_RESETRSV_CKD EQU X'80'  PESTPAIR Reset reserve CKD  @RCA  00079990
ANTFEAT_PPRC3_SGC_RES_PROD EQU X'40'  SGC Restore to Production   @RPA          
ANTFEAT_PPRC3_MLT_GM_SESS_PER_LSS EQU X'20' Multiple GM sess /lss @MUA          
*                                                                       00080070
*    ILK=ESSRVCS FEATURE CODES                                          00080560
*                                                                       00081050
                   ORG   ANTFEAT_BIT_STRING                             00081540
ANTFEAT_ESSRVCS1          DS  XL1                                       00082030
ANTFEAT_ESSRVCS1_RSESSION EQU X'80'  Controlling Global Mirror sessions 00082520
ANTFEAT_ESSRVCS1_RVOLUME  EQU X'40'  Control volumes                    00083010
ANTFEAT_ESSRVCS1_RQUERY   EQU X'20'  Query Global Mirror status         00083500
ANTFEAT_ESSRVCS1_ASYNC    EQU X'10'  FCESTABLISH ASYNC                  00083990
ANTFEAT_ESSRVCS1_FRR      EQU X'08'  Fast Reverse Restore               00084480
ANTFEAT_ESSRVCS1_REVERT   EQU X'04'  Requests a rollback                00084970
ANTFEAT_ESSRVCS1_COMMIT   EQU X'02'  Request command be made permanent  00085460
ANTFEAT_ESSRVCS1_CGROUPS  EQU X'01'  FLASHCOPY Consistency Groups       00085950
*                                                                       00086440
ANTFEAT_ESSRVCS2          DS  XL1                                       00086930
ANTFEAT_ESSRVCS2_XQRYFULL EQU X'80'                                     00087420
ANTFEAT_ESSRVCS2_ANTFQMAP EQU X'40'  FQMAP formating available          00087910
ANTFEAT_ESSRVCS2_TGTUCB   EQU X'20'  Target by device number            00088400
ANTFEAT_ESSRVCS2_SETGTOK  EQU X'10'  Space efficient volume             00088890
ANTFEAT_ESSRVCS2_SEFLC    EQU X'08'                                     00089380
ANTFEAT_ESSRVCS2_SPACEREL EQU X'04'  Release space on Space Efficient   00089870
ANTFEAT_ESSRVCS2_PM       EQU X'02'  Preserve Mirror                    00090360
ANTFEAT_ESSRVCS2_MSS1     EQU X'01'  Multiple Subchannel                00090850
*                                                                       00091340
ANTFEAT_ESSRVCS3          DS  XL1                                       00091830
ANTFEAT_ESSRVCS3_STATESAVE EQU X'80' Non-disruptive state save          00092320
ANTFEAT_ESSRVCS3_QHA      EQU X'40'  Query Host Access                  00092810
ANTFEAT_ESSRVCS3_TIME_SYNC EQU X'20' SYSPLEX/DS8K TIME SYNCHRONIZATION  00093300
ANTFEAT_ESSRVCS3_32DISK   EQU X'10'  32 Disk subsystems                 00093790
ANTFEAT_ESSRVCS3_RPFC     EQU X'08'  RPFC for XRC - FC                  00094280
ANTFEAT_ESSRVCS3_SPACEREL EQU X'04'  Space Release Tool                 00094770
ANTFEAT_ESSRVCS3_ZFBA     EQU X'02'  ZFBA Support                  @FBA 00094970
ANTFEAT_ESSRVCS3_CASFC    EQU X'01'  Cascading FlashCopy           @CFA 00095070
*                                                                       00095260
ANTFEAT_ESSRVCS4          DS  XL1                                  @LCA 00095360
ANTFEAT_ESSRVCS4_LCP      EQU X'80'  Logical Corruption Protection @LCA 00095460
ANTFEAT_ESSRVCS4_SGC      EQU X'40'  Safe Guarded Copy             @SGA 00095510
ANTFEAT_ESSRVCS4_SGC_PER  EQU X'20'  SGC Persistent Recover        @SPA 00095530
ANTFEAT_ESSRVCS4_SGC_RP   EQU X'10'  SGC Restore to Production     @RPA         
ANTFEAT_ESSRVCS4_MLT_GM_SESS_PER_LSS EQU X'08' Multi GM sess /lss  @MUA         
ANTFEAT_ESSRVCS4_EVNT_MNTR EQU X'04' Event Monitoring Enhancement  @EMA         
*                                                                       00095560
*    ILK=MAIN FEATURE CODES                                             00095750
*                                                                       00096240
                   ORG   ANTFEAT_BIT_STRING                             00096730
ANTFEAT_MAIN1             DS  XL1                                       00097220
ANTFEAT_MAIN1_CCSTOR      EQU X'80'  Storage used by CC jobs            00097710
ANTFEAT_MAIN1_REFRESHWS   EQU X'40'  Working Storage Data Sets          00098200
ANTFEAT_MAIN1_RELEASEWS   EQU X'20'  Release enqueue on WS Data Sets    00098690
ANTFEAT_MAIN1_LISTWS      EQU X'10'  List Working Storage Data Sets     00099180
ANTFEAT_MAIN1_SETPARMLIB  EQU X'08'  Manage ANTMAIN tuning table        00099670
*                                                                       00100160
*    ILK=SNAPSHOT FEATURE CODES                                         00100650
*                                                                       00101140
                   ORG   ANTFEAT_BIT_STRING                             00101630
ANTFEAT_SS1               DS  XL1                                       00102120
*                                                                       00102610
*    ILK=OBJSTORE FEATURE CODES                                         00103100
*                                                                       00103590
                   ORG   ANTFEAT_BIT_STRING                             00104080
ANTFEAT_OBJSTORE1         DS  XL1                                       00104570
ANTFEAT_OBJSTORE1_INITIAL EQU X'80'  Initial support for object store   00105060
ANTFEAT_OBJSTORE1_TCTCS   EQU X'40'  TCT with Copy Services       @MHA  00105260
*                                                                       00105550
*    Constants                                                          00106040
*                                                                       00106530
ANTFEAT_RETURNED          EQU 200                                       00107020
*                                                                       00107510
         MEND                                                           00108000
**** End ASM version *************************************************/ 00108490
*/** Begin PL/X version **********************************************/ 00108980
*%FEATPLAS2:;                                                           00109470
*                                                                       00109960
*DECLARE                                                                00110450
*%IF ANTFEAT_BASE = '' %THEN                                            00110940
*  %DO;                                                                 00111430
*  1 ANTFEAT BASED CHAR(100) BDY(DWORD),                                00111920
*  %END;                                                                00112410
*%ELSE                                                                  00112900
*  %DO;                                                                 00113390
*  1 ANTFEAT ANTFEAT_BASE CHAR(100) BDY(DWORD),                         00113880
*  %END;                                                                00114370
*    3 ANTFEAT_HEADER,                                                  00114860
*      5 ANTFEAT_LEVEL_NUM FIXED(31) EINIT(ANTFEAT_RETURNED),           00115350
*      5 ANTFEAT_REAS    FIXED(31) EINIT(0),                            00115840
*      5 ANTFEAT_EYE     CHAR(8)   EINIT('ANTFEAT '),                   00116330
*      5 ANTFEAT_FOR_ILK CHAR(8)   EINIT(''),                           00116820
*      5 ANTFEAT_TOTAL_LEN FIXED(31) EINIT(100),                        00117310
*      5 *               CHAR(16)  EINIT(''X),                          00117800
*      5 ANTFEAT_BIT_STRING CHAR(56) EINIT(''X),                        00118290
*                                                                       00118780
*    /* ILK=XRC FEATURE CODES                                        */ 00119270
*                                                                       00119760
*  1 ANTFEAT_XRC DEFINED(ANTFEAT_BIT_STRING),                           00120250
*    3 ANTFEAT_XRC1      FIXED(8),                                      00120740
*      5 ANTFEAT_XRC1_XSET_REFRESHP BIT(1) EINIT(1B),                   00121230
*      5 ANTFEAT_XRC1_XSET_DVCBLOCK BIT(1) EINIT(1B),                   00121720
*      5 ANTFEAT_XRC1_XADD_DVCBLOCK BIT(1) EINIT(1B),                   00122210
*      5 ANTFEAT_XRC1_XQUERY_ETYPE BIT(1) EINIT(1B),                    00122700
*      5 ANTFEAT_XRC1_XSET_SUSLBUSY BIT(1) EINIT(1B),                   00123190
*      5 ANTFEAT_XRC1_XSTATUS     BIT(1) EINIT(1B),                     00123680
*      5 ANTFEAT_XRC1_XQUERY_VOLLIST BIT(1) EINIT(1B),                  00124170
*      5 ANTFEAT_XRC1_XSTART_MODE BIT(1) EINIT(1B),                     00124660
*    3 ANTFEAT_XRC2      FIXED(8),                                      00125150
*      5 ANTFEAT_XRC2_XSWAP       BIT(1) EINIT(1B),                     00125640
*      5 ANTFEAT_XRC2_XADD_SWAPDEV BIT(1) EINIT(1B),                    00126130
*      5 ANTFEAT_XRC2_XADD_PDEVNUM BIT(1) EINIT(1B),                    00126620
*      5 ANTFEAT_XRC2_XADD_SDEVNUM BIT(1) EINIT(1B),                    00127110
*      5 ANTFEAT_XRC2_XRECOVER_TER BIT(1) EINIT(1B),                    00127600
*      5 ANTFEAT_XRC2_XMAINT      BIT(1) EINIT(1B),                     00128090
*      5 ANTFEAT_XRC2_XRECOVER_FORCE BIT(1) EINIT(1B),                  00128580
*      5 ANTFEAT_XRC2_XRECOVER_CHECK BIT(1) EINIT(1B),                  00129070
*    3 ANTFEAT_XRC3      FIXED(8),                                      00129560
*      5 ANTFEAT_XRC3_XFEATURES   BIT(1) EINIT(1B),                     00130050
*      5 ANTFEAT_XRC3_CREFRESH    BIT(1) EINIT(1B),                     00130540
*      5 ANTFEAT_XRC3_XSET_REFRESHS BIT(1) EINIT(1B),                   00131030
*      5 ANTFEAT_XRC3_XQUERY_OPTION BIT(1) EINIT(1B),                   00131520
*      5 ANTFEAT_XRC3_SUPPRESS_ACK BIT(1) EINIT(1B),              ]@REA 00131720
*      5 ANTFEAT_XRC3_XSET_XQUERY_DEVNUM BIT(1) EINIT(1B),       ] @X3A 00131820
*      5 ANTFEAT_XRC3_XEND_CLIP   BIT(1) EINIT(1B),              ] @CLA 00131910
*      5 ANTFEAT_XRC3_XQUERY_UNF  BIT(1) EINIT(1B),              ] @XQA 00131960
*                                                                       00132010
*    /* ILK=PPRC FEATURE CODES                                       */ 00132500
*                                                                       00132990
*  1 ANTFEAT_PPRC DEFINED(ANTFEAT_BIT_STRING),                          00133480
*    3 ANTFEAT_PPRC1      FIXED(8),                                     00133970
*      5 ANTFEAT_PPRC1_FAILOVER   BIT(1) EINIT(1B),                     00134460
*      5 ANTFEAT_PPRC1_FAILBACK   BIT(1) EINIT(1B),                     00134950
*      5 ANTFEAT_PPRC1_ANTPQMAP   BIT(1) EINIT(1B),                     00135440
*      5 ANTFEAT_PPRC1_INCRESYNC  BIT(1) EINIT(1B),                     00135930
*      5 ANTFEAT_PPRC1_SETGTOK    BIT(1) EINIT(1B),                     00136420
*      5 ANTFEAT_PPRC1_XRCONSEC   BIT(1) EINIT(1B),                     00136910
*      5 ANTFEAT_PPRC1_AUTORESYNC BIT(1) EINIT(1B),                     00137400
*      5 ANTFEAT_PPRC1_SUBCHANNEL BIT(1) EINIT(1B),                     00137890
*    3 ANTFEAT_PPRC2      FIXED(8),                                     00138380
*      5 ANTFEAT_PPRC2_PQSCSTAT   BIT(1) EINIT(1B),                     00138870
*      5 ANTFEAT_PPRC2_RESET_RESERVE BIT(1) EINIT(1B),                  00139360
*      5 ANTFEAT_PPRC2_PQUERY_LNK BIT(1) EINIT(1B),                     00139850
*      5 ANTFEAT_PPRC2_SOFT_FENCE BIT(1) EINIT(1B),                     00140340
*      5 ANTFEAT_PPRC2_SPID_FENCE BIT(1) EINIT(1B),                     00140830
*      5 ANTFEAT_PPRC2_MT_PPRC    BIT(1) EINIT(1B),                     00141320
*      5 ANTFEAT_PPRC2_QUIESCED_IO BIT(1) EINIT(1B),                    00141810
*      5 ANTFEAT_PPRC2_ZFBA        BIT(1) EINIT(1B),             ] @FBA 00142010
*    3 ANTFEAT_PPRC3      FIXED(8),                              ] @RCA 00142100
*      5 ANTFEAT_PPRC3_RESETRSV_CKD BIT(1) EINIT(1B),            ] @RCA 00142190
*      5 ANTFEAT_PPRC3_SGC_RES_PROD BIT(1) EINIT(1B),            ] @RPA         
*      5 ANTFEAT_PPRC3_MLT_GM_SESS_PER_LSS BIT(1) EINIT(1B),     ] @MUA         
*                                                                       00142300
*     /* ILK=ESSRVCS FEATURE CODES                                   */ 00142790
*                                                                       00143280
*  1 ANTFEAT_ESSRVCS DEFINED(ANTFEAT_BIT_STRING),                       00143770
*    3 ANTFEAT_ESSRVCS1   FIXED(8),                                     00144260
*      5 ANTFEAT_ESSRVCS1_RSESSION BIT(1) EINIT(1B),                    00144750
*      5 ANTFEAT_ESSRVCS1_RVOLUME BIT(1) EINIT(1B),                     00145240
*      5 ANTFEAT_ESSRVCS1_RQUERY  BIT(1) EINIT(1B),                     00145730
*      5 ANTFEAT_ESSRVCS1_ASYNC   BIT(1) EINIT(1B),                     00146220
*      5 ANTFEAT_ESSRVCS1_FRR     BIT(1) EINIT(1B),                     00146710
*      5 ANTFEAT_ESSRVCS1_REVERT  BIT(1) EINIT(1B),                     00147200
*      5 ANTFEAT_ESSRVCS1_COMMIT  BIT(1) EINIT(1B),                     00147690
*      5 ANTFEAT_ESSRVCS1_CGROUPS BIT(1) EINIT(1B),                     00148180
*    3 ANTFEAT_ESSRVCS2   FIXED(8),                                     00148670
*      5 ANTFEAT_ESSRVCS2_XQRYFULL BIT(1) EINIT(1B),                    00149160
*      5 ANTFEAT_ESSRVCS2_ANTFQMAP BIT(1) EINIT(1B),                    00149650
*      5 ANTFEAT_ESSRVCS2_TGTUCB  BIT(1) EINIT(1B),                     00150140
*      5 ANTFEAT_ESSRVCS2_SETGTOK BIT(1) EINIT(1B),                     00150630
*      5 ANTFEAT_ESSRVCS2_SEFLC   BIT(1) EINIT(1B),                     00151120
*      5 ANTFEAT_ESSRVCS2_SPACEREL BIT(1) EINIT(1B),                    00151610
*      5 ANTFEAT_ESSRVCS2_PM      BIT(1) EINIT(1B),                     00152100
*      5 ANTFEAT_ESSRVCS2_MSS1    BIT(1) EINIT(1B),                     00152590
*    3 ANTFEAT_ESSRVCS3   FIXED(8),                                     00153080
*      5 ANTFEAT_ESSRVCS3_STATESAVE BIT(1) EINIT(1B),                   00153570
*      5 ANTFEAT_ESSRVCS3_QHA     BIT(1) EINIT(1B),                     00154060
*      5 ANTFEAT_ESSRVCS3_TIME_SYNC BIT(1) EINIT(1B),                   00154550
*      5 ANTFEAT_ESSRVCS3_32DISK  BIT(1) EINIT(1B),                     00155040
*      5 ANTFEAT_ESSRVCS3_RPFC    BIT(1) EINIT(1B),                     00155530
*      5 ANTFEAT_ESSRVCS3_SPACEREL BIT(1) EINIT(1B),                    00156020
*      5 ANTFEAT_ESSRVCS3_ZFBA     BIT(1) EINIT(1B),             ] @FBA 00156220
*      5 ANTFEAT_ESSRVCS3_CASFC    BIT(1) EINIT(1B),             ] @CFA 00156320
*    3 ANTFEAT_ESSRVCS4   FIXED(8),                              ] @LCA 00156380
*      5 ANTFEAT_ESSRVCS4_LCP      BIT(1) EINIT(1B),             ] @LCA 00156440
*      5 ANTFEAT_ESSRVCS4_SGC      BIT(1) EINIT(1B),             ] @SGA 00156470
*      5 ANTFEAT_ESSRVCS4_SGC_PER  BIT(1) EINIT(1B),             ] @SPA 00156490
*      5 ANTFEAT_ESSRVCS4_SGC_RP   BIT(1) EINIT(1B),             ] @RPA 00156490
*      5 ANTFEAT_ESSRVCS4_MLT_GM_SESS_PER_LSS BIT(1) EINIT(1B),  ] @MUA         
*      5 ANTFEAT_ESSRVCS4_EVNT_MNTR BIT(1) EINIT(1B),            ] @EMA         
*                                                                       00156510
*     /* ILK=MAIN FEATURE CODES                                      */ 00157000
*                                                                       00157490
*  1 ANTFEAT_MAIN   DEFINED(ANTFEAT_BIT_STRING),                        00157980
*    3 ANTFEAT_MAIN1      FIXED(8),                                     00158470
*      5 ANTFEAT_MAIN1_CCSTOR     BIT(1) EINIT(1B),                     00158960
*      5 ANTFEAT_MAIN1_REFRESHWS  BIT(1) EINIT(1B),                     00159450
*      5 ANTFEAT_MAIN1_RELEASEWS  BIT(1) EINIT(1B),                     00159940
*      5 ANTFEAT_MAIN1_LISTWS     BIT(1) EINIT(1B),                     00160430
*      5 ANTFEAT_MAIN1_SETPARMLIB BIT(1) EINIT(1B),                     00160920
*                                                                       00161410
*     /* ILK=SNAPSHOT FEATURE CODES                                  */ 00161900
*                                                                       00162390
*  1 ANTFEAT_SS     DEFINED(ANTFEAT_BIT_STRING),                        00162880
*    3 ANTFEAT_SS1        FIXED(8) EINIT(0),                            00163370
*                                                                       00163860
*     /* ILK=OBJSTORE FEATURE CODES                                  */ 00164350
*                                                                       00164840
*  1 ANTFEAT_OBJSTORE DEFINED(ANTFEAT_BIT_STRING),                      00165330
*    3 ANTFEAT_OBJSTORE1  FIXED(8),                                     00165820
*      5 ANTFEAT_OBJSTORE1_INITIAL BIT(1) EINIT(1B),                    00166310
*      5 ANTFEAT_OBJSTORE1_TCTCS   BIT(1) EINIT(1B),             ] @MHA 00166510
*                                                                       00166800
*     /* Constants                                                   */ 00167290
*                                                                       00167780
*  ANTFEAT_RETURNED Fixed(31) CONSTANT(200),                            00168270
*  ANTFEAT_ILK_XRC  CHAR(8) CONSTANT('XRC     '),                       00168760
*  ANTFEAT_ILK_PPRC CHAR(8) CONSTANT('PPRC    '),                       00169250
*  ANTFEAT_ILK_MAIN CHAR(8) CONSTANT('MAIN    '),                       00169740
*  ANTFEAT_ILK_SS   CHAR(8) CONSTANT('SNAPSHOT'),                       00170230
*  ANTFEAT_ILK_ESSRVCS CHAR(8) CONSTANT('ESSRVCS '),                    00170720
*  ANTFEAT_ILK_OBJSTORE CHAR(8) CONSTANT('OBJSTORE');                   00171210
*                                                                       00171700
