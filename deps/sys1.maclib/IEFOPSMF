*                                                                       00001000
* %DCL IEFOPSMF_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IEFOPSMF_INCLUDED;                                        00003000
* %IF IEFOPSMF_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 19035. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IEFOPSMF &DSECT=YES,&LIST=YES,&TITLE=YES,&SMF90T38=YES,       *00009000
               &SMF90T38_OLDNEW=COND,&SMF90T38_DDJOBNAME=COND           00010000
         GBLC  &IEFOPSMF_INCLUDED                                       00011000
         GBLC  &ZCBPRINT                                                00012000
&IEFOPSMF_INCLUDED SETC 'YES'                                           00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'IEFOPSMF  - IEFOPZ SMF record 90 subtype 38                '  00016000
.P5      ANOP                                                           00017000
**/ IEFOPSMF_1:;                                                        00018000
*/* START OF SPECIFICATIONS ******************************************* 00019000
*                                                                       00020000
*  **PROPRIETARY_STATEMENT********************************************  00021000
***01* PROPRIETARY STATEMENT=                                        *  00022000
*                                                                    *  00023000
*                                                                    *  00024000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00025000
*   5650-ZOS COPYRIGHT IBM CORP. 2015                                *  00026000
*                                                                    *  00027000
*   STATUS= HBB77A0                                                  *  00028000
*                                                                    *  00029000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00030000
*                                                                       00031000
*01* DESCRIPTIVE NAME:  IEFOPZ SMF record 90 subtype 38                 00032000
*02*  ACRONYM:  OPSM                                                    00033000
*                                                                       00034000
*01* MACRO NAME:  IEFOPSMF                                              00035000
*                                                                       00036000
*01* EXTERNAL CLASSIFICATION: PI                                        00037000
*01* END OF EXTERNAL CLASSIFICATION:                                    00038000
*                                                                       00039000
*01* DSECT NAME:                                                        00040000
*     SMF90T38                                                          00041000
*     SMF90T38_OldNew                                                   00042000
*     SMF90T38_DDJobname                                                00043000
*                                                                       00044000
*01* COMPONENT:  Allocaton (SC1B4)                                      00045000
*                                                                       00046000
*01* EYE-CATCHER:  NONE                                                 00047000
*                                                                       00048000
*01* STORAGE ATTRIBUTES:                                                00049000
*02*  SUBPOOL:  N/A                                                     00050000
*02*  KEY:  N/A                                                         00051000
*02*  RESIDENCY:  N/A                                                   00052000
*                                                                       00053000
*01* SIZE:                                                              00054000
*     SMF90T38_OLDNEW    -- X'00C4' bytes                               00055000
*     SMF90T38_DDJOBNAME -- X'0014' bytes                               00056000
*     SMF90T38           -- X'0098' bytes                               00057000
*     SMF90T38_OldNew    -- X'00C4' bytes                               00058000
*     SMF90T38_DDJobname -- X'0014' bytes                               00059000
*                                                                       00060000
*01* CREATED BY:                                                        00061000
*     IEFOPZ processing, and written to SMF data set                    00062000
*     upon change to the IEFOPZ configuration                           00063000
*                                                                       00064000
*01* POINTED TO BY:                                                     00065000
*     N/A                                                               00066000
*                                                                       00067000
*01* SERIALIZATION:                                                     00068000
*     None required                                                     00069000
*                                                                       00070000
*01* FUNCTION:                                                          00071000
*02* Maps the data provided for SMF record type 90 subtype 38           00072000
*                                                                       00073000
*                                                                       00074000
*                                                                       00075000
*01* METHOD OF ACCESS:                                                  00076000
*02*  IFASMFR ,  <or> IEFOPSMF ,                                        00077000
*     Notes:                                                            00078000
*          - To find the address of the SMF90T38 area, add the address  00079000
*            of the SMF record plus field SMF90DOF                      00080000
*          - To find the address of the first SMF90T38_OldNew, add      00081000
*            the address of the SMF record plus field                   00082000
*            SMF90T38_OldNew_Offset                                     00083000
*          - To get from one SMF90T38_OldNew to the next, add           00084000
*            the value in field SMF90T38_OldNew_Len                     00085000
*          - To find the address of the first SMF90T38_DDJobname, add   00086000
*            the address of the SMF record plus field                   00087000
*            SMF90T38_DDJobname_Offset                                  00088000
*          - To get from one SMF90T38_DDJobname to the next, add        00089000
*            the value in field SMF90T38_DDJobname_Len                  00090000
*                                                                       00091000
*                                                                       00092000
*02*  PL/AS:                                                            00093000
*      %INCLUDE SYSLIB(IFASMFR)                                         00094000
*                                                                       00095000
*01* DELETED BY:  SMF processing                                        00096000
*                                                                       00097000
*01* FREQUENCY:  Created for SET IEFOPZ                                 00098000
*                                                                       00099000
*01* DEPENDENCIES:  None                                                00100000
*                                                                       00101000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00102000
*                                                                       00103000
*01* CHANGE ACTIVITY:                                                   00104000
*   $L0=IEFOPZCB ,HBB77A0 150108 PD00XB: IEFOPZ                         00105000
*   $L1=IEFOPZ   ,HBB77A0 150108 PD00XB: IEFOPZ                         00106000
*   $01=OA47689  ,HBB77A0 151001 PD00XB: IEFOPZ                         00107000
*                                                                       00108000
* END OF SPECIFICATIONS *********************************************/  00109000
*% /*                                                                   00110000
.P0      ANOP                                                           00111000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00112000
         AIF   ('&LIST' EQ 'YES').P2                                    00113000
.P1      ANOP                                                           00114000
         PUSH  PRINT                                                    00115000
         PRINT OFF                                                      00116000
.P2      ANOP                                                           00117000
         AIF   ('&SMF90T38' EQ 'NO').L0002                              00118000
         AIF   ('&DSECT' EQ 'YES').L0003                                00119000
         AIF   ('&SMF90T38' NE 'YES').L0002                             00120000
SMF90T38 DS    0D        SMF record (type 90 subtype 38) data           00121000
         AGO   .L0004                                                   00122000
.L0003   ANOP                                                           00123000
SMF90T38 DSECT           SMF record (type 90 subtype 38) data           00124000
.L0004   ANOP                                                           00125000
SMF90T38FLAGS DS 0B      Flags                                          00126000
SMF90T38_SET_IEFOPZ EQU X'80' Update from SET IEFOPZ command            00127000
SMF90T38_MSI EQU X'40'   Master Scheduler Init processing               00128000
SMF90T38_MORE EQU X'02'  On if not all of the data fits, so a          *00129000
                         subsequent record will be produced. That      *00130000
                         record will have bit SMF90T38_Continuation    *00131000
                         on, and may have bit SMF90T38_More on.         00132000
SMF90T38_CONTINUATION EQU X'01' On if this is a continuation of the    *00133000
                         previous record                                00134000
         ORG   SMF90T38FLAGS+1                                          00135000
         DS    CL1       Reserved                                       00136000
SMF90T38_CONTINUATIONNUMBER DS H 0 for a record that is not a          *00137000
                         continuation, incremented by 1 for each       *00138000
                         continuation of a not-continuation record      00139000
SMF90T38_MAXARCH DS H    MAXARCH value                                  00140000
SMF90T38_MAXARCHIEFOPZXXSUFFIX DS CL2 The "xx" of the IEFOPZxx parmlib *00141000
                         member name in which the MaxArch was defined. *00142000
                         Binary zeroes if MaxArch was not specified    *00143000
                         (so that the default was taken)                00144000
         DS    CL4       Reserved                                       00145000
SMF90T38_CONSID DS F     Console ID of issuer of the SET IEFOPZ        *00146000
                         command                                        00147000
SMF90T38_CONSNAME DS CL8 Console name of issuer of the SET IEFOPZ      *00148000
                         command. Zeroes if there is no console name    00149000
SMF90T38_TIMESTAMP DS CL8 Time value (from STCK) of the update.        *00150000
                         Continuations of this record will have the    *00151000
                         same TimeStamp                                 00152000
SMF90T38_JOBNAME DS CL8  The jobname of issuer of the IEFOPZ request.  *00153000
                         For SET IEFOPZ, this will be the job name of  *00154000
                         the ASID processing the command (ASID 1 -     *00155000
                         *MASTER*)                                      00156000
SMF90T38_CHKEY DS CL8    The CHKEY field from the CSCB (for a started  *00157000
                         task, this is the stepname). Zeroes if there  *00158000
                         is no CSCB.                                    00159000
SMF90T38_UTOKEN DS 0CL80 Security product user token for the IEFOPZ    *00160000
                         request, mapped by ICHRUTKN                    00161000
         DS    CL64      Part of user token                             00162000
SMF90T38_UTOKENUSERID DS CL8 TOKUSER (userid) field of user token       00163000
         ORG   SMF90T38_UTOKEN+80                                       00164000
SMF90T38_NUM_OLDNEW DS F Number of OldNew entries in this record        00165000
SMF90T38_OLDNEW_OFFSET DS F Offset from SMFRCD90 to first OldNew       *00166000
                         entry. Entry is mapped by SMF90T38_OldNew      00167000
SMF90T38_OLDNEW_LEN DS F Length of an OldNew. Use this length to       *00168000
                         navigate from one OldNew to the next           00169000
SMF90T38_NUM_DDJOBNAME DS F Number of DDJobname entries in this record  00170000
SMF90T38_DDJOBNAME_OFFSET DS F Offset from SMFRCD90 to first DDJobname *00171000
                         entry. Entry is mapped by SMF90T38_DDJobname  *00172000
                         L1A                                            00173000
SMF90T38_DDJOBNAME_LEN DS F Length of a DDJobname. Use this length to  *00174000
                         navigate from one DDJobname to the next        00175000
SMF90T38_LEN_EQU EQU *-SMF90T38                                         00176000
.L0002   ANOP                                                           00177000
         AIF   ('&SMF90T38_OLDNEW' EQ 'NO').L0005                       00178000
         AIF   ('&DSECT' EQ 'YES').L0006                                00179000
         AIF   ('&SMF90T38_OLDNEW' NE 'YES').L0005                      00180000
SMF90T38_OLDNEW DS 0F    An OldNew entry                                00181000
         AGO   .L0007                                                   00182000
.L0006   ANOP                                                           00183000
SMF90T38_OLDNEW DSECT    An OldNew entry                                00184000
.L0007   ANOP                                                           00185000
SMF90T38ON_FLAGS DS 0B   Flags                                          00186000
SMF90T38ON_OVOLPROVIDED EQU X'80' When on, the OLD data set was        *00187000
                         specified with volume                          00188000
SMF90T38ON_NVOLPROVIDED EQU X'40' When on, the NEW data set was        *00189000
                         specified with volume                          00190000
         ORG   SMF90T38ON_FLAGS+1                                       00191000
         DS    CL1       Reserved                                       00192000
SMF90T38ON_IEFOPZXXSUFFIX DS CL2 The "xx" of the IEFOPZxx parmlib      *00193000
                         member name in which the OldNew was defined    00194000
SMF90T38ON_ODSNAME DS CL44 OLD DSName                                   00195000
SMF90T38ON_ORDSNAME DS CL44 Real OLD DSName (if OLD is an alias). Will *00196000
                         match preceding field if OLD is not an        *00197000
                         alias).                                        00198000
SMF90T38ON_OVOLUME DS CL6 OLD Volume. This is the value when the data  *00199000
                         set was last allocated by IEFOPZ processing.   00200000
SMF90T38ON_NDSNAME DS CL44 The NEW data set that will be used.          00201000
SMF90T38ON_NRDSNAME DS CL44 Real NEW data set (if NEW is an alias).    *00202000
                         Will match preceding field if NEW is not an   *00203000
                         alias).                                        00204000
SMF90T38ON_NVOLUME DS CL6 NEW Volume that will be used. This is the    *00205000
                         value when the data set was last allocated by *00206000
                         IEFOPZ processing.                             00207000
SMF90T38ON_NARCH DS H    The ARCH value of the NEW data set             00208000
         DS    CL2       Reserved                                       00209000
SMF90T38_OLDNEW_LEN_EQU EQU *-SMF90T38_OLDNEW                           00210000
.L0005   ANOP                                                           00211000
         AIF   ('&SMF90T38_DDJOBNAME' EQ 'NO').L0008                    00212000
         AIF   ('&DSECT' EQ 'YES').L0009                                00213000
         AIF   ('&SMF90T38_DDJOBNAME' NE 'YES').L0008                   00214000
SMF90T38_DDJOBNAME DS 0F An DDJobname entry                             00215000
         AGO   .L000A                                                   00216000
.L0009   ANOP                                                           00217000
SMF90T38_DDJOBNAME DSECT   An DDJobname entry                           00218000
.L000A   ANOP                                                           00219000
SMF90T38DDJ_IEFOPZXXSUFFIX DS CL2 The "xx" of the IEFOPZxx parmlib     *00220000
                         member name in which the DDName/Jobname pair  *00221000
                         was defined                                    00222000
         DS    CL2       Reserved                                       00223000
SMF90T38DDJ_DDNAME DS CL8 DDName                                        00224000
SMF90T38DDJ_JOBNAME DS CL8 Jobname                                      00225000
SMF90T38_DDJOBNAME_LEN_EQU EQU *-SMF90T38_DDJOBNAME                     00226000
.L0008   ANOP                                                           00227000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00228000
         AIF   ('&LIST' EQ 'YES').P4                                    00229000
.P3      ANOP                                                           00230000
         POP   PRINT                                                    00231000
.P4      ANOP                                                           00232000
.P_EXIT  ANOP                                                           00233000
         MEND                                                           00234000
**/ IEFOPSMF_2:;                                                        00235000
* %IEFOPSMF_INCLUDED = 'YES';                                           00236000
* %DCL ZCBPRINT CHAR EXT;                                               00237000
* %DEACTIVATE ZCBPRINT;                                                 00238000
* %DCL IEFOPSMF_LIST CHAR EXT;                                          00239000
* %DEACTIVATE IEFOPSMF_LIST;                                            00240000
* %IF IEFOPSMF_LIST ^= 'NO' &                                           00241000
*    ZCBPRINT ^= 'NO' %THEN                                             00242000
*   %GOTO IEFOPSMF_3;                                                   00243000
*   @LIST PUSH NOECHO;                                                  00244000
*   @LIST NOASSEMBLE NOECHO;                                            00245000
*   @LIST OFF C NOECHO;                                                 00246000
* %IEFOPSMF_3:;                                                         00247000
*/* Start of PL/X Source                                             */ 00248000
* %SELECT(OPSMF_BASED);            /*                            @L1A*/ 00249000
*   %WHEN('')                      /* Not specified?             @L1A*/ 00250000
*     %OPSMF_BASED = 'BASED(ADDR(SMFRCD90)+SMF90DOF)'; /*               00251000
*                                   Default to simply based      @L1A*/ 00252000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 00253000
*     %OPSMF_BASED = '';           /* Nullify the basing expression     00254000
*                                                                @L1A*/ 00255000
*   %OTHERWISE %;                  /* Else leave what user supplied     00256000
*                                                                @L1A*/ 00257000
* %END SELECT;                     /*                            @L1A*/ 00258000
*   DECLARE                                                             00259000
*     1    SMF90T38 OPSMF_BASED,      /* SMF record (type 90 subtype    00260000
*                                   38) data                     @L1A*/ 00261000
*       3    SMF90T38Flags BIT(8),    /* Flags                   @L1A*/ 00262000
*         5 SMF90T38_SET_IEFOPZ Bit(1), /* Update from SET IEFOPZ       00263000
*                     command                                    @L1A*/ 00264000
*         5 SMF90T38_MSI Bit(1),        /* Master Scheduler Init        00265000
*                     processing                                 @L1A*/ 00266000
*         5 * Bit(4),              /* Reserved                   @L1A*/ 00267000
*         5 SMF90T38_More Bit(1),     /* On if not all of the data      00268000
*                     fits, so a subsequent record will be              00269000
*                     produced. That record will have bit               00270000
*                     SMF90T38_Continuation on, and may have bit        00271000
*                     SMF90T38_More on.                          @L1A*/ 00272000
*         5 SMF90T38_Continuation Bit(1),  /* On if this is a           00273000
*                     continuation of the previous record        @L1A*/ 00274000
*       3    * Char(1),               /* Reserved                @L1A*/ 00275000
*       3    SMF90T38_ContinuationNumber Fixed(15), /*                  00276000
*                     0 for a record that is not a continuation,        00277000
*                     incremented by 1 for each continuation of a       00278000
*                     not-continuation record                    @L1A*/ 00279000
*       3    SMF90T38_MaxArch Fixed(15),  /* MAXARCH value       @L1A*/ 00280000
*       3    SMF90T38_MaxArchIEFOPZxxSuffix Char(2),  /* The "xx" of    00281000
*                     the IEFOPZxx parmlib member name in which the     00282000
*                     MaxArch was defined. Binary zeroes if             00283000
*                     MaxArch was not specified (so that the            00284000
*                     default was taken)                         @L1A*/ 00285000
*       3    * Char(4),               /* Reserved                @L1A*/ 00286000
*       3    SMF90T38_Consid FIXED(32), /* Console ID of issuer of      00287000
*                     the SET IEFOPZ command                     @L1A*/ 00288000
*       3    SMF90T38_ConsName CHAR(8),  /* Console name of issuer of   00289000
*                     the SET IEFOPZ command. Zeroes if there is        00290000
*                     no console name                            @L1A*/ 00291000
*       3    SMF90T38_TimeStamp CHAR(8), /* Time value (from STCK) of   00292000
*                     the update. Continuations of this record          00293000
*                     will have the same TimeStamp               @L1A*/ 00294000
*       3    SMF90T38_Jobname CHAR(8), /* The jobname of issuer of the  00295000
*                                    IEFOPZ request. For SET IEFOPZ,    00296000
*                                    this will be the job name of the   00297000
*                                    ASID processing the command (ASID  00298000
*                                    1 - *MASTER*)               @L1A*/ 00299000
*       3    SMF90T38_CHKey CHAR(8),  /* The CHKEY field from the       00300000
*                                    CSCB (for a started task, this     00301000
*                                    is the stepname). Zeroes if        00302000
*                                    there is no CSCB.           @L1A*/ 00303000
*       3    SMF90T38_UToken CHAR(80),  /* Security product user token  00304000
*                     for the IEFOPZ request, mapped by ICHRUTKN @L1A*/ 00305000
*         5  * CHAR(64),              /* Part of user token      @L1A*/ 00306000
*         5  SMF90T38_UTokenUserid Char(8), /* TOKUSER (userid) field   00307000
*                                   of user token                @L1A*/ 00308000
*       3    SMF90T38_Num_OldNew Fixed(32),  /* Number of               00309000
*                     OldNew entries in this record              @L1A*/ 00310000
*       3    SMF90T38_OldNew_Offset Fixed(32), /* Offset from SMFRCD90  00311000
*                     to first OldNew entry. Entry is mapped            00312000
*                     by SMF90T38_OldNew                         @L1A*/ 00313000
*       3    SMF90T38_OldNew_Len Fixed(32),  /* Length of an            00314000
*                     OldNew. Use this length to navigate from          00315000
*                     one OldNew to the next                     @L1A*/ 00316000
*       3    SMF90T38_Num_DDJobname Fixed(32), /* Number of             00317000
*                     DDJobname entries in this record           @L1A*/ 00318000
*       3    SMF90T38_DDJobname_Offset Fixed(32), /* Offset from        00319000
*                     SMFRCD90 to first DDJobname entry. Entry is       00320000
*                     mapped by SMF90T38_DDJobname                L1A*/ 00321000
*       3    SMF90T38_DDJobname_Len Fixed(32), /* Length of a           00322000
*                     DDJobname. Use this length to navigate from       00323000
*                     one DDJobname to the next                  @L1A*/ 00324000
*       3    * CHAR(0) Bdy(DWORD);    /* End of SMF area         @L1A*/ 00325000
*                                                                       00326000
* %SELECT(OPSMF_OldNew_BASED);     /*                            @L1A*/ 00327000
*   %WHEN('')                      /* Not specified?             @L1A*/ 00328000
*     %OPSMF_OldNew_BASED =                                             00329000
*       'BASED(ADDR(SMFRCD90)+SMF90T38_OldNew_Offset)'; /*              00330000
*                                   Default to simply based      @L1A*/ 00331000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 00332000
*     %OPSMF_OldNew_BASED = '';    /* Nullify the basing expression     00333000
*                                                                @L1A*/ 00334000
*   %OTHERWISE %;                  /* Else leave what user supplied     00335000
*                                                                @L1A*/ 00336000
* %END SELECT;                     /*                            @L1A*/ 00337000
*   DECLARE                                                             00338000
*     1    SMF90T38_OldNew OPSMF_BASED,  /* An OldNew entry      @L1A*/ 00339000
*                                                                       00340000
*       3    SMF90T38ON_Flags Bit(8),      /* Flags              @L1A*/ 00341000
*         5  SMF90T38ON_OVolProvided Bit(1),/* When on, the OLD         00342000
*                     data set was specified with volume         @L1A*/ 00343000
*         5  SMF90T38ON_NVolProvided Bit(1),/* When on, the NEW         00344000
*                     data set was specified with volume         @L1A*/ 00345000
*       3    * Char(1),                    /* Reserved           @L1A*/ 00346000
*       3    SMF90T38ON_IEFOPZxxSuffix Char(2),  /* The "xx" of the     00347000
*                     IEFOPZxx parmlib member name in which the         00348000
*                     OldNew was defined                         @L1A*/ 00349000
*       3    SMF90T38ON_ODSName CHAR(44),  /* OLD DSName         @L1A*/ 00350000
*       3    SMF90T38ON_ORDSName CHAR(44), /* Real OLD DSName (if       00351000
*                     OLD is an alias). Will match preceding field      00352000
*                     if OLD is not an alias).                   @L1A*/ 00353000
*       3    SMF90T38ON_OVolume CHAR(6),   /* OLD Volume. This is the   00354000
*                     value when the data set was last allocated by     00355000
*                     IEFOPZ processing.                         @L1A*/ 00356000
*       3    SMF90T38ON_NDSName CHAR(44),  /* The NEW data set          00357000
*                     that will be used.                         @L1A*/ 00358000
*       3    SMF90T38ON_NRDSName CHAR(44),  /* Real NEW data set (if    00359000
*                     NEW is an alias). Will match preceding field      00360000
*                     if NEW is not an alias).                   @L1A*/ 00361000
*       3    SMF90T38ON_NVolume CHAR(6),   /* NEW Volume                00362000
*                     that will be used. This is the value when         00363000
*                     the data set was last allocated by IEFOPZ         00364000
*                     processing.                                @L1A*/ 00365000
*       3    SMF90T38ON_NArch Fixed(15),   /* The ARCH value of the     00366000
*                     NEW data set                               @L1A*/ 00367000
*       3    * Char(2),                    /* Reserved           @L1A*/ 00368000
*       3    * CHAR(0) Bdy(Word);     /* End of SMF area         @L1A*/ 00369000
*                                                                       00370000
* %SELECT(OPSMF_DDJobname_BASED);  /*                            @L1A*/ 00371000
*   %WHEN('')                      /* Not specified?             @L1A*/ 00372000
*     %OPSMF_DDJobname_BASED =                                          00373000
*       'BASED(ADDR(SMFRCD90)+SMF90T38_DDJobname_Offset)'; /*           00374000
*                                   Default to simply based      @L1A*/ 00375000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 00376000
*     %OPSMF_DDJobname_BASED = ''; /* Nullify the basing expression     00377000
*                                                                @L1A*/ 00378000
*   %OTHERWISE %;                  /* Else leave what user supplied     00379000
*                                                                @L1A*/ 00380000
* %END SELECT;                     /*                            @L1A*/ 00381000
*   DECLARE                                                             00382000
*     1    SMF90T38_DDJobname OPSMF_BASED, /* An DDJobname entry @L1A*/ 00383000
*                                                                       00384000
*       3    SMF90T38DDJ_IEFOPZxxSuffix Char(2), /* The "xx" of the     00385000
*                     IEFOPZxx parmlib member name in which the         00386000
*                     DDName/Jobname pair was defined            @L1A*/ 00387000
*       3    * Char(2),            /* Reserved                   @L1A*/ 00388000
*       3    SMF90T38DDJ_DDName Char(8),   /* DDName             @L1A*/ 00389000
*       3    SMF90T38DDJ_Jobname Char(8),  /* Jobname            @L1A*/ 00390000
*       3    * CHAR(0) Bdy(Word);     /* End of SMF area         @L1A*/ 00391000
*                                                                       00392000
* @LOGIC;                                                               00393000
* #PRAGMA TOOL=CBGEN.                                                   00394000
* #USEORG.                                                              00395000
* #AlignOp.                                                             00396000
* #NotUpper.                                                            00397000
* #LengthSuffix._Len_EQU                                                00398000
* #EPRAGMA.                                                             00399000
* @ENDLOGIC;                                                            00400000
*/* End of PL/X Source                                               */ 00401000
* %IF IEFOPSMF_LIST ^= 'NO' &                                           00402000
*    ZCBPRINT ^= 'NO' %THEN                                             00403000
*   %GOTO IEFOPSMF_4;                                                   00404000
*   @LIST POP NOECHO;                                                   00405000
* %IEFOPSMF_4:;                                                         00406000
* %END;                                                                 00407000
