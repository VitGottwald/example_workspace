*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  FXECTRLI                              -10/22/16-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Function Registry inline utility services     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2017, 2017                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77B0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      This macro provides miscellaneous, inline utility services for * 00002000
*      the IBM Function Registry for z/OS.                            * 00002100
*                                                                     * 00002200
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00002300
*                                                                     * 00002400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002500
*                                                                     * 00002600
*01* ENVIRONMENT:                                                     * 00002700
*                                                                     * 00002800
*                                                                     * 00002900
*      Minimum authorization: Zero PSW key.                           * 00003000
*                                                                     * 00003100
*      Dispatchable unit mode: Task or SRB mode.                      * 00003200
*                                                                     * 00003300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00003400
*                                                                     * 00003500
*      AMODE:            64-bit.                                      * 00003600
*                                                                     * 00003700
*                        Also specify SYSSTATE AMODE64=YES before     * 00003800
*                        invoking this macro.                         * 00003900
*                                                                     * 00004000
*      ASC mode:         Primary.                                     * 00004100
*                                                                     * 00004200
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004300
*                                                                     * 00004400
*      Locks:            No locks held.                               * 00004500
*                                                                     * 00004600
*                        For REQUEST=CREATEAREA, see service IARST64  * 00004700
*                        for lock considerations.                     * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*01* PROGRAMMING REQUIREMENTS:                                        * 00005200
*                                                                     * 00005300
*    Include mapping macro FXEFR to get a mapping of the Function     * 00005400
*    Registry Anchor Table, Vendor Areas, Product Areas, and Function * 00005500
*    Entries that the provided services operate on.                   * 00005600
*                                                                     * 00005700
*01* RESTRICTIONS:                                                    * 00005800
*                                                                     * 00005900
*    None.                                                            * 00006000
*                                                                     * 00006100
*01* INPUT REGISTER INFORMATION:                                      * 00006200
*                                                                     * 00006300
*    Before issuing the FXECTRLI macro, the caller does not have to   * 00006400
*    place any information into any register unless using it in       * 00006500
*    register notation for a particular parameter, or using it as a   * 00006600
*    base register.                                                   * 00006700
*                                                                     * 00006800
*01* OUTPUT REGISTER INFORMATION:                                     * 00006900
*                                                                     * 00007000
*    When control returns to the caller, the GPRs contain:            * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*    REGISTER  CONTENTS                                               * 00007400
*                                                                     * 00007500
*    0         Reason code, when register 15 is not 0.                * 00007600
*                                                                     * 00007700
*    0-1       Used as work registers by the system                   * 00007800
*                                                                     * 00007900
*    2-13      Unchanged                                              * 00008000
*                                                                     * 00008100
*    14        Used as work registers by the system                   * 00008200
*                                                                     * 00008300
*    15        Return code                                            * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*    Some callers depend on register contents remaining the same      * 00008700
*    before and after issuing a service.  If the system changes the   * 00008800
*    contents of registers on which the caller depends, the caller    * 00008900
*    must save them before issuing the service, and restore them      * 00009000
*    after the system returns control.                                * 00009100
*                                                                     * 00009200
*01* PERFORMANCE IMPLICATIONS:                                        * 00009300
*                                                                     * 00009400
*    None.                                                            * 00009500
*                                                                     * 00009600
*01* SYNTAX:                                                          * 00009700
*                                                                     * 00009800
*Ýxlabel¨  FXECTRLI  Ð  REQUEST=CREATEAREA                            * 00009900
*                    !     ,AREASIZE=xareasize                        * 00010000
*                    !     ,AREAADDR=xareaaddr                        * 00010100
*                    ¿ ,REQUEST=INITVENDORAREA                        * 00010200
*                          ,AREAADDR=xareaaddr                        * 00010300
*                         Ý,AREASIZE=»xareasize!0º¨                   * 00010400
*                          ,AREANAME=xareaname                        * 00010500
*                          ,AREADESC=xareadesc                        * 00010600
*                          ,AREADESCLEN=xareadesclen                  * 00010700
*                          ,PRODUCTCOUNT=xproductcount                * 00010800
*                          ,PRODUCTSLOTSIZE                           * 00010900
*                                           =xproductslotsize         * 00011000
*                          ,ATTRIBUTECOUNT=xattributecount            * 00011100
*                          ,ATTRSDYNSIZE=xattrsdynsize                * 00011200
*                          ,PRIVATEDATASIZE                           * 00011300
*                                           =xprivatedatasize         * 00011400
*                     Ý,RETCODE=xretcode¨                             * 00011500
*                     Ý,RSNCODE=xrsncode¨                             * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*      Where:                                                         * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*      Ýxlabel¨                                                       * 00012200
*          is an optional symbol, starting in column 1, that is the   * 00012300
*          name on the FXECTRLI macro invocation.  The name must      * 00012400
*          conform to the rules for an ordinary assembler language    * 00012500
*          symbol.                                                    * 00012600
*          DEFAULT: No name.                                          * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*      REQUEST=»CREATEAREA!INITVENDORAREAº                            * 00013200
*          is a required keyword input which identifies the type of   * 00013300
*          service to perform.                                        * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*          REQUEST=CREATEAREA                                         * 00013700
*              Allocate storage for a new area to become part of the  * 00013800
*              Function Registry, in a later step. The storage        * 00013900
*              attributes of the returned area are as recommended for * 00014000
*              Function Registry Vendor Areas and Product Areas:      * 00014100
*                                                                     * 00014200
*              64-bit Common, Fixed, Key 0, not fetch protected.      * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*              AREASIZE=xareasize                                     * 00014600
*                  is the name (RS-type), or address in register      * 00014700
*                  (2)-(12), of a required fullword input that        * 00014800
*                  indicates the size of the area to create, in       * 00014900
*                  number of bytes. Do not specify a size greater     * 00015000
*                  than 128KB.                                        * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*              AREAADDR=xareaaddr                                     * 00015600
*                  is the name (RS-type), or address in register      * 00015700
*                  (2)-(12), of a required 8 byte output that will    * 00015800
*                  contain the address of the allocated area.         * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*          REQUEST=INITVENDORAREA                                     * 00016300
*              Initialize a raw storage area to a valid, empty state  * 00016400
*              vendor area, for example after having allocated        * 00016500
*              storage either on your own or via FXECTRLI             * 00016600
*              REQUEST=CREATEAREA.                                    * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*              AREAADDR=xareaaddr                                     * 00017000
*                  is the name (RS-type), or address in register      * 00017100
*                  (2)-(12), of a required 8 byte input that contains * 00017200
*                  the address of the raw storage that is to be       * 00017300
*                  initialized.                                       * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*              ÝAREASIZE=»xareasize!0º¨                               * 00017900
*                  is the name (RS-type), or address in register      * 00018000
*                  (2)-(12), of an optional fullword input that       * 00018100
*                  indicates the size, in number of bytes, of the raw * 00018200
*                  storage area referenced by the AREAADDR parameter. * 00018300
*                  If provided, the service will use this value for   * 00018400
*                  buffer overflow checking.                          * 00018500
*                  DEFAULT: 0                                         * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*              AREANAME=xareaname                                     * 00019100
*                  is the name (RS-type), or address in register      * 00019200
*                  (2)-(12), of a required 32 character input that    * 00019300
*                  indicates the text to be copied into the vendor    * 00019400
*                  area's FXEFRVA_Name field.                         * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*              AREADESC=xareadesc                                     * 00020000
*                  is the name (RS-type), or address in register      * 00020100
*                  (2)-(12), of a required character input that       * 00020200
*                  indicates the text to be copied into the vendor    * 00020300
*                  area as the vendor description text. The service   * 00020400
*                  uses this value and the value of parameter         * 00020500
*                  AREADESCLEN to set up the  vendor area structure   * 00020600
*                  FXEFRVA_Desc_Anchor.                               * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*              AREADESCLEN=xareadesclen                               * 00021200
*                  is the name (RS-type), or address in register      * 00021300
*                  (2)-(12), of a required halfword input that        * 00021400
*                  indicates the length of the text to be copied into * 00021500
*                  the vendor area as the vendor description text.    * 00021600
*                  The service uses this value and the value of       * 00021700
*                  parameter AREADESC to set up the vendor area       * 00021800
*                  structure FXEFRVA_Desc_Anchor.                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*              PRODUCTCOUNT=xproductcount                             * 00022400
*                  is the name (RS-type), or address in register      * 00022500
*                  (2)-(12), of a required halfword input that        * 00022600
*                  indicates how many product slots should be         * 00022700
*                  reserved in the vendor area. The service uses this * 00022800
*                  value and the value of parameter PRODUCTSLOTSIZE   * 00022900
*                  to set up the  vendor area structure               * 00023000
*                  FXEFRVA_ProdSlotsAnchor.                           * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*              PRODUCTSLOTSIZE=xproductslotsize                       * 00023600
*                  is the name (RS-type), or address in register      * 00023700
*                  (2)-(12), of a required halfword input that        * 00023800
*                  indicates how many bytes to reserve for each       * 00023900
*                  product slot in the vendor area. The service uses  * 00024000
*                  this value and the value of parameter PRODUCTCOUNT * 00024100
*                  to set up the  vendor area structure               * 00024200
*                  FXEFRVA_ProdSlotsAnchor. The PRODUCTSLOTSIZE must  * 00024300
*                  be a multiple of eight to ensure double-word       * 00024400
*                  alignment of the individual product slots.         * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*              ATTRIBUTECOUNT=xattributecount                         * 00025000
*                  is the name (RS-type), or address in register      * 00025100
*                  (2)-(12), of a required halfword input that        * 00025200
*                  indicates how many attribute entries should be     * 00025300
*                  reserved in the vendor area. The service uses this * 00025400
*                  value to set up the vendor area structure          * 00025500
*                  FXEFRVA_AttrsAnchor.                               * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*              ATTRSDYNSIZE=xattrsdynsize                             * 00026100
*                  is the name (RS-type), or address in register      * 00026200
*                  (2)-(12), of a required halfword input that        * 00026300
*                  indicates how many bytes have been reserved for    * 00026400
*                  the dynamic portion of the attributes, i.e. their  * 00026500
*                  names and values. Note that this value should      * 00026600
*                  already be part of the AREASIZE value. It is       * 00026700
*                  required here again to layout the dynamic pieces   * 00026800
*                  of the vendor area appropriately. There are        * 00026900
*                  multiple dynamic areas in the layout that FXECTRLI * 00027000
*                  provides:                                          * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                  o   Vendor area description - as referenced by     * 00027400
*                      FXEFRVA_Desc_Anchor, will be located right     * 00027500
*                      after FXEFRVA_Header.                          * 00027600
*                                                                     * 00027700
*                  o   Product slots  - as referenced by              * 00027800
*                      FXEFRVA_ProdSlotsAnchor, will be located right * 00027900
*                      after the area description (with the           * 00028000
*                      description length rounded up to a multiple of * 00028100
*                      eight).                                        * 00028200
*                                                                     * 00028300
*                  o   Vendor area attributes - as referenced by      * 00028400
*                      FXEFRVA_AttrsAnchor, will be located right     * 00028500
*                      after the product slot array. First will be    * 00028600
*                      the fixed length FXEFRAttr structures,         * 00028700
*                      followed by a reserved area of ATTRSDYNSIZE.   * 00028800
*                      The user is expected to use this area to fill  * 00028900
*                      in the dynamic portions, the actual name and   * 00029000
*                      value, of the indviudal attributes.            * 00029100
*                                                                     * 00029200
*                  o   Private data - as referenced by                * 00029300
*                      FXEFRPA_PrivateData_Anchor, will be located    * 00029400
*                      right after all function entries.              * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*              PRIVATEDATASIZE=xprivatedatasize                       * 00030200
*                  is the name (RS-type), or address in register      * 00030300
*                  (2)-(12), of a required halfword input that        * 00030400
*                  indicates how many bytes of private data should be * 00030500
*                  reserved in the vendor area. The service uses this * 00030600
*                  value to set up the vendor area structure          * 00030700
*                  FXEFRVA_PrivateData_Anchor.                        * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*      ÝRETCODE=xretcode¨                                             * 00031700
*          is the name (RS-type) of an optional fullword output       * 00031800
*          variable, or register (2)-(12) or (15), into which the     * 00031900
*          return code is to be copied from GPR 15.  If you specify   * 00032000
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00032100
*          the value will be left in GPR 15.                          * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*      ÝRSNCODE=xrsncode¨                                             * 00032700
*          is the name (RS-type) of an optional fullword output       * 00032800
*          variable into which the reason code is to be copied from   * 00032900
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00033000
*          R0 (within or without parentheses), the value will be left * 00033100
*          in GPR 0.                                                  * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*01* ABEND CODES:  None.                                              * 00033600
*                                                                     * 00033700
*01* RETURN CODES:                                                    * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                 For REQUEST=CREATEAREA see the documentation of     * 00034100
*                 service IARST64.                                    * 00034200
*                                                                     * 00034300
*                 For REQUEST=INITVENDORAREA:                         * 00034400
*                                                                     * 00034500
*       0         Name: <>                                            * 00034600
*                                                                     * 00034700
*                 Meaning: Successful request.                        * 00034800
*                                                                     * 00034900
*                 Action:  None required                              * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*       8         Name: <>                                            * 00035300
*                                                                     * 00035400
*                 Meaning: Error                                      * 00035500
*                                                                     * 00035600
*                 Action:  Refer to action under the individual       * 00035700
*                 reason code.                                        * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                 HEX REASON  MEANING/ACTION                          * 00036100
*                 CODE                                                * 00036200
*                                                                     * 00036300
*                 nnnn0801    Name: <>                                * 00036400
*                                                                     * 00036500
*                             Meaning: Parameter AREASIZE was         * 00036600
*                             specified and its value indicated that  * 00036700
*                             the given area is not large enough to   * 00036800
*                             hold all the requested data.            * 00036900
*                                                                     * 00037000
*                             Action:  Ensure that a large enough     * 00037100
*                             storage area is allocated or choose     * 00037200
*                             lower values for the INITVENDORAREA     * 00037300
*                             input parameters. The top two bytes of  * 00037400
*                             the reason code, nnnn, contain a        * 00037500
*                             suggested area size that would be large * 00037600
*                             enough to hold the requested data.      * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*01* REASON CODES:                                                    * 00038600
*                                                                     * 00038700
*       For non-zero reason codes from REQUEST=CREATEAREA see the     * 00038800
*       documentation of service IARST64.                             * 00038900
*                                                                     * 00039000
*       For other REQUESTs the reason codes are defined under their   * 00039100
*       corresponding return code.                                    * 00039200
*                                                                     * 00039300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00039400
*                                                                     * 00039500
*02*   PROCESSOR:  ASSEM                                              * 00039600
*                                                                     * 00039700
*01* COMPONENT:  SCFXE                                                * 00039800
*                                                                     * 00039900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00040000
*                                                                     * 00040100
*01* MACRO USAGE NOTES:                                               * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00040500
*        global macro variable.  Any value other than 'NO' will       * 00040600
*        result in the macro expansion being printed.  The default is * 00040700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00040800
*        variable should be set.                                      * 00040900
*                                                                     * 00041000
*                    GBLC &ZPRINT                                     * 00041100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*01* CHANGE ACTIVITY:                                                 * 00041600
*                                                                     * 00041700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00041800
*                                                                     * 00041900
*    $L0=FXEV2R3  HBB77B0 160815 RD00UT:  Initial Create              * 00042000
****** END OF SPECIFICATIONS *****************************************/ 00042100
*/********************************************************************* 00042200
         MACRO                                                          00042300
&XLABEL  FXECTRLI &REQUEST=,&AREASIZE=,&AREAADDR=,&AREANAME=,          *00042400
               &AREADESC=,&AREADESCLEN=,&PRODUCTCOUNT=,                *00042500
               &PRODUCTSLOTSIZE=,&ATTRIBUTECOUNT=,&ATTRSDYNSIZE=,      *00042600
               &PRIVATEDATASIZE=,&RETCODE=,&RSNCODE=                    00042700
.*                                                                      00042800
*                     MACDATE -10/22/16-<0>                             00042900
.*                                                                      00043000
.*******************************************************************    00043100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00043200
.*******************************************************************    00043300
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00043400
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00043500
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00043600
.*                                                                      00043700
                     GBLC  &ZFXECTRLI  YES=MACRO USED AT LEAST ONCE     00043800
.*******************************************************************    00043900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00044000
.*******************************************************************    00044100
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00044200
                     LCLC  &ZCNDX      SYSNDX CHARACTERS                00044300
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00044400
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00044500
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00044600
                     LCLA  &ZAWRK      USED AS A WORK AREA              00044700
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00044800
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00044900
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00045000
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00045100
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00045200
                     LCLC  &ZMAC_G     "G" or null                      00045300
&ZMAC_G              SETC  ''                                           00045400
                     LCLC  &ZMAC_LR                                     00045500
&ZMAC_LR             SETC  'LR'                                         00045600
                     LCLC  &ZMAC_L                                      00045700
&ZMAC_L              SETC  'L'                                          00045800
                     LCLC  &ZMAC_ST                                     00045900
&ZMAC_ST             SETC  'ST'                                         00046000
                     LCLC  &ZMAC_LLGT                                   00046100
&ZMAC_LLGT           SETC  'L'                                          00046200
                     LCLC  &ZMAC_LGR                                    00046300
&ZMAC_LGR            SETC  'LR'                                         00046400
                     LCLC  &ZMAC_LG                                     00046500
&ZMAC_LG             SETC  'L'                                          00046600
                     LCLC  &ZMAC_STG                                    00046700
&ZMAC_STG            SETC  'ST'                                         00046800
                     LCLA  &ZMACRET    MACRO RETURN CODE                00046900
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00047000
.*                                                                      00047100
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00047200
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00047300
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00047400
                     LCLC  &ZENDBASEPL          End of base PL          00047500
.*******************************************************************    00047600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00047700
.*******************************************************************    00047800
                     LCLA  &ZI         INDEX FOR ARRAY                  00047900
                     LCLA  &ZJ         INDEX FOR PARMS                  00048000
                     LCLA  &ZK         INDEX FOR PARSE                  00048100
                     LCLA  &ZLO        LOW RANGE VALUE                  00048200
                     LCLA  &ZHI        HIGH RANGE VALUE                 00048300
                     LCLC  &ZW         WORK AREA FOR PARM               00048400
.*******************************************************************    00048500
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00048600
.*******************************************************************    00048700
                     LCLC  &XREQUEST   ++ VALUE                         00048800
                     LCLC  &XAREASIZE  ++ NAME                          00048900
                     LCLC  &XAREAADDR  ++ NAME                          00049000
                     LCLC  &XAREANAME  ++ NAME                          00049100
                     LCLC  &XAREADESC  ++ NAME                          00049200
                     LCLC  &XAREADESCLEN        ++ NAME                 00049300
                     LCLC  &XPRODUCTCOUNT       ++ NAME                 00049400
                     LCLC  &XPRODUCTSLOTSIZE    ++ NAME                 00049500
                     LCLC  &XATTRIBUTECOUNT     ++ NAME                 00049600
                     LCLC  &XATTRSDYNSIZE       ++ NAME                 00049700
                     LCLC  &XPRIVATEDATASIZE    ++ NAME                 00049800
                     LCLC  &XRETCODE   ++ NAME                          00049900
                     LCLC  &XRSNCODE   ++ NAME                          00050000
.*******************************************************************    00050100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00050200
.*******************************************************************    00050300
                     LCLC  &ZXREQUEST  ++ INPUT VALUE                   00050400
                     LCLC  &ZXAREASIZE          ++ INPUT NAME           00050500
                     LCLC  &ZXAREAADDR          ++ OUTPUT NAME          00050600
                     LCLC  &ZXAREANAME          ++ INPUT NAME           00050700
                     LCLC  &ZXAREADESC          ++ INPUT NAME           00050800
                     LCLC  &ZXAREADESCLEN       ++ INPUT NAME           00050900
                     LCLC  &ZXPRODUCTCOUNT      ++ INPUT NAME           00051000
                     LCLC  &ZXPRODUCTSLOTSIZE   ++ INPUT NAME           00051100
                     LCLC  &ZXATTRIBUTECOUNT    ++ INPUT NAME           00051200
                     LCLC  &ZXATTRSDYNSIZE      ++ INPUT NAME           00051300
                     LCLC  &ZXPRIVATEDATASIZE   ++ INPUT NAME           00051400
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00051500
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00051600
.********************************************************************   00051700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00051800
.********************************************************************   00051900
                     ACTR  10000                                        00052000
.*------------------------------------------------------------------    00052100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00052200
&XREQUEST            SETC  ''          INITIALIZE XVARIABLE             00052300
.*-------------------------------------------------------------------   00052400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00052500
.ZG3                 ANOP  ,                                            00052600
                     AIF   (K'&REQUEST(1) LE 0).ZG3A                    00052700
&ZTLC                SETC 'CREATEAREA'                                  00052800
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG10              00052900
&XREQUEST            SETC  'CREATEAREA'         SET KEYWORD             00053000
                     AIF   (N'&REQUEST LE 1).ZG3A  CK NUM               00053100
&ZMS                 SETC  '"REQUEST='                                  00053200
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00053300
&ZMS                 SETC  '&ZMS "REQUEST"'                             00053400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00053500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00053600
.ZG3A                ANOP  ,                                            00053700
.*------------------------------------------------------------------    00053800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00054000
.ZG3A0               AIF   (K'&AREANAME LE 0).ZG3A1  OK                 00054100
&ZCVAL               SETC '&ZCVAL AREANAME'     INCORRECT KEY USED      00054200
.ZG3A1               AIF   (K'&AREADESC LE 0).ZG3A2  OK                 00054300
&ZCVAL               SETC '&ZCVAL AREADESC'     INCORRECT KEY USED      00054400
.ZG3A2               AIF   (K'&AREADESCLEN LE 0).ZG3A3  OK              00054500
&ZCVAL               SETC '&ZCVAL AREADESCLEN'  INCORRECT KEY USED      00054600
.ZG3A3               AIF   (K'&PRODUCTCOUNT LE 0).ZG3A4  OK             00054700
&ZCVAL               SETC '&ZCVAL PRODUCTCOUNT'  INCORRECT KEY USED     00054800
.ZG3A4               AIF   (K'&PRODUCTSLOTSIZE LE 0).ZG3A5  OK          00054900
&ZCVAL               SETC '&ZCVAL PRODUCTSLOTSIZE'  INCORRECT KEY USED  00055000
.ZG3A5               AIF   (K'&ATTRIBUTECOUNT LE 0).ZG3A6  OK           00055100
&ZCVAL               SETC '&ZCVAL ATTRIBUTECOUNT'  INCORRECT KEY USED   00055200
.ZG3A6               AIF   (K'&ATTRSDYNSIZE LE 0).ZG3A7  OK             00055300
&ZCVAL               SETC '&ZCVAL ATTRSDYNSIZE'  INCORRECT KEY USED     00055400
.ZG3A7               AIF   (K'&PRIVATEDATASIZE LE 0).ZG3A8  OK          00055500
&ZCVAL               SETC '&ZCVAL PRIVATEDATASIZE'  INCORRECT KEY USED  00055600
.ZG3A8               AIF   (K'&ZCVAL LE 0).ZG3A9  OK                    00055700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00055800
&ZMS                 SETC  '"REQUEST'                                   00055900
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00056000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00056100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00056200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00056300
.ZG3A9               ANOP  ,                                            00056400
.*----------------------------------------------------------------***   00056500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00056600
                     AIF   (N'&AREASIZE LE 1).ZG5A  CK NUM              00056700
&ZMS                 SETC  '"AREASIZE='                                 00056800
&ZMS                 SETC  '&ZMS.&AREASIZE"'                            00056900
&ZMS                 SETC  '&ZMS "AREASIZE"'                            00057000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00057100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00057200
.ZG5A                ANOP  ,                                            00057300
.*-------------------------------------------------------------------   00057400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00057500
&ZXAREASIZE          SETC  'INPUT'     SET IN/OUTPUT                    00057600
&XAREASIZE           SETC  '&AREASIZE(1)'       SET XVARIABLE           00057700
                     AIF   (N'&AREASIZE GT 1).ZG5B  MULTI               00057800
&XAREASIZE           SETC  '&AREASIZE'          SET XVARIABLE           00057900
.ZG5B                AIF   (K'&AREASIZE(1) GT 0).ZG5C                   00058000
&ZXAREASIZE          SETC  ''          RESET IN/OUTPUT                  00058100
&ZMS                 SETC  ' '                                          00058200
&ZMS                 SETC  '&ZMS "AREASIZE" KEY AND ITS'                00058300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00058400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00058500
.ZG5C                ANOP  ,                                            00058600
.*-------------------------------------------------------------------   00058700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00058800
                     AIF   (K'&ZXAREASIZE LE 0).ZG5R  NOT I/O           00058900
                     AIF   ('&XAREASIZE'(1,1) NE '(').ZG5R              00059000
&ZCGPR               SETC  '&XAREASIZE'(2,K'&XAREASIZE-2)               00059100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                  00059200
                     AIF   (K'&ZCGPR GT 2).ZG5Q                         00059300
                     AIF   ('&ZCGPR' EQ '0').ZG5Q                       00059400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00059500
                     AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME     00059600
.ZG5P                ANOP  ,                                            00059700
                     AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC          00059800
                     AIF   ('&ZCGPR' LT '2').ZG5Q                       00059900
                     AIF   ('&ZCGPR' LE '12').ZG5R                      00060000
.ZG5Q                ANOP  ,                                            00060100
&ZMS                 SETC  '"AREASIZE='                                 00060200
&ZMS                 SETC  '&ZMS.&AREASIZE"'                            00060300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00060400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00060500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00060600
.ZG5R                ANOP  ,                                            00060700
.*----------------------------------------------------------------***   00060800
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00060900
                     AIF   (N'&AREAADDR LE 1).ZG8A  CK NUM              00061000
&ZMS                 SETC  '"AREAADDR='                                 00061100
&ZMS                 SETC  '&ZMS.&AREAADDR"'                            00061200
&ZMS                 SETC  '&ZMS "AREAADDR"'                            00061300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00061400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00061500
.ZG8A                ANOP  ,                                            00061600
.*-------------------------------------------------------------------   00061700
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00061800
&ZXAREAADDR          SETC  'OUTPUT'    SET IN/OUTPUT                    00061900
&XAREAADDR           SETC  '&AREAADDR(1)'       SET XVARIABLE           00062000
                     AIF   (N'&AREAADDR GT 1).ZG8B  MULTI               00062100
&XAREAADDR           SETC  '&AREAADDR'          SET XVARIABLE           00062200
.ZG8B                AIF   (K'&AREAADDR(1) GT 0).ZG8C                   00062300
&ZXAREAADDR          SETC  ''          RESET IN/OUTPUT                  00062400
&ZMS                 SETC  ' '                                          00062500
&ZMS                 SETC  '&ZMS "AREAADDR" KEY AND ITS'                00062600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00062700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00062800
.ZG8C                ANOP  ,                                            00062900
.*-------------------------------------------------------------------   00063000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00063100
                     AIF   (K'&ZXAREAADDR LE 0).ZG8R  NOT I/O           00063200
                     AIF   ('&XAREAADDR'(1,1) NE '(').ZG8R              00063300
&ZCGPR               SETC  '&XAREAADDR'(2,K'&XAREAADDR-2)               00063400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                  00063500
                     AIF   (K'&ZCGPR GT 2).ZG8Q                         00063600
                     AIF   ('&ZCGPR' EQ '0').ZG8Q                       00063700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00063800
                     AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME     00063900
.ZG8P                ANOP  ,                                            00064000
                     AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC          00064100
                     AIF   ('&ZCGPR' LT '2').ZG8Q                       00064200
                     AIF   ('&ZCGPR' LE '12').ZG8R                      00064300
.ZG8Q                ANOP  ,                                            00064400
&ZMS                 SETC  '"AREAADDR='                                 00064500
&ZMS                 SETC  '&ZMS.&AREAADDR"'                            00064600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00064700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00064800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00064900
.ZG8R                ANOP  ,                                            00065000
.*-------------------------------------------------------------------   00065100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065200
.ZG10                ANOP  ,                                            00065300
&ZTLC                SETC 'INITVENDORAREA'                              00065400
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG41              00065500
&XREQUEST            SETC  'INITVENDORAREA'     SET KEYWORD             00065600
                     AIF   (N'&REQUEST LE 1).ZG10A  CK NUM              00065700
&ZMS                 SETC  '"REQUEST='                                  00065800
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00065900
&ZMS                 SETC  '&ZMS "REQUEST"'                             00066000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00066100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00066200
.ZG10A               ANOP  ,                                            00066300
.*----------------------------------------------------------------***   00066400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00066500
                     AIF   (N'&AREAADDR LE 1).ZG12A  CK NUM             00066600
&ZMS                 SETC  '"AREAADDR='                                 00066700
&ZMS                 SETC  '&ZMS.&AREAADDR"'                            00066800
&ZMS                 SETC  '&ZMS "AREAADDR"'                            00066900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00067000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00067100
.ZG12A               ANOP  ,                                            00067200
.*-------------------------------------------------------------------   00067300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00067400
&ZXAREAADDR          SETC  'INPUT'     SET IN/OUTPUT                    00067500
&XAREAADDR           SETC  '&AREAADDR(1)'       SET XVARIABLE           00067600
                     AIF   (N'&AREAADDR GT 1).ZG12B  MULTI              00067700
&XAREAADDR           SETC  '&AREAADDR'          SET XVARIABLE           00067800
.ZG12B               AIF   (K'&AREAADDR(1) GT 0).ZG12C                  00067900
&ZXAREAADDR          SETC  ''          RESET IN/OUTPUT                  00068000
&ZMS                 SETC  ' '                                          00068100
&ZMS                 SETC  '&ZMS "AREAADDR" KEY AND ITS'                00068200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00068300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00068400
.ZG12C               ANOP  ,                                            00068500
.*-------------------------------------------------------------------   00068600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00068700
                     AIF   (K'&ZXAREAADDR LE 0).ZG12R  NOT I/O          00068800
                     AIF   ('&XAREAADDR'(1,1) NE '(').ZG12R             00068900
&ZCGPR               SETC  '&XAREAADDR'(2,K'&XAREAADDR-2)               00069000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG12P                 00069100
                     AIF   (K'&ZCGPR GT 2).ZG12Q                        00069200
                     AIF   ('&ZCGPR' EQ '0').ZG12Q                      00069300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00069400
                     AIF   (T'&ZCGPR NE 'N').ZG12Q  INVALID REG NAME    00069500
.ZG12P               ANOP  ,                                            00069600
                     AIF   (T'&ZCGPR NE 'N').ZG12R  NON NUMERIC         00069700
                     AIF   ('&ZCGPR' LT '2').ZG12Q                      00069800
                     AIF   ('&ZCGPR' LE '12').ZG12R                     00069900
.ZG12Q               ANOP  ,                                            00070000
&ZMS                 SETC  '"AREAADDR='                                 00070100
&ZMS                 SETC  '&ZMS.&AREAADDR"'                            00070200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00070300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00070400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00070500
.ZG12R               ANOP  ,                                            00070600
.*----------------------------------------------------------------***   00070700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00070800
                     AIF   (N'&AREASIZE LE 1).ZG15A  CK NUM             00070900
&ZMS                 SETC  '"AREASIZE='                                 00071000
&ZMS                 SETC  '&ZMS.&AREASIZE"'                            00071100
&ZMS                 SETC  '&ZMS "AREASIZE"'                            00071200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00071300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00071400
.ZG15A               ANOP  ,                                            00071500
.*-------------------------------------------------------------------   00071600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00071700
&ZXAREASIZE          SETC  'INPUT'     SET IN/OUTPUT                    00071800
&XAREASIZE           SETC  '0'                                          00071900
                     AIF   (K'&AREASIZE(1) LE 0).ZG15B  PARM            00072000
&XAREASIZE           SETC  '&AREASIZE(1)'       SET XVARIABLE           00072100
                     AIF   (N'&AREASIZE GT 1).ZG15B  MULTI              00072200
&XAREASIZE           SETC  '&AREASIZE'          SET XVARIABLE           00072300
.ZG15B               ANOP  ,                                            00072400
.*-------------------------------------------------------------------   00072500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00072600
                     AIF   (K'&ZXAREASIZE LE 0).ZG15R  NOT I/O          00072700
                     AIF   ('&XAREASIZE'(1,1) NE '(').ZG15R             00072800
&ZCGPR               SETC  '&XAREASIZE'(2,K'&XAREASIZE-2)               00072900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                 00073000
                     AIF   (K'&ZCGPR GT 2).ZG15Q                        00073100
                     AIF   ('&ZCGPR' EQ '0').ZG15Q                      00073200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00073300
                     AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME    00073400
.ZG15P               ANOP  ,                                            00073500
                     AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC         00073600
                     AIF   ('&ZCGPR' LT '2').ZG15Q                      00073700
                     AIF   ('&ZCGPR' LE '12').ZG15R                     00073800
.ZG15Q               ANOP  ,                                            00073900
&ZMS                 SETC  '"AREASIZE='                                 00074000
&ZMS                 SETC  '&ZMS.&AREASIZE"'                            00074100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00074200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00074300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00074400
.ZG15R               ANOP  ,                                            00074500
.*----------------------------------------------------------------***   00074600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00074700
                     AIF   (N'&AREANAME LE 1).ZG18A  CK NUM             00074800
&ZMS                 SETC  '"AREANAME='                                 00074900
&ZMS                 SETC  '&ZMS.&AREANAME"'                            00075000
&ZMS                 SETC  '&ZMS "AREANAME"'                            00075100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00075200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00075300
.ZG18A               ANOP  ,                                            00075400
.*-------------------------------------------------------------------   00075500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00075600
&ZXAREANAME          SETC  'INPUT'     SET IN/OUTPUT                    00075700
&XAREANAME           SETC  '&AREANAME(1)'       SET XVARIABLE           00075800
                     AIF   (N'&AREANAME GT 1).ZG18B  MULTI              00075900
&XAREANAME           SETC  '&AREANAME'          SET XVARIABLE           00076000
.ZG18B               AIF   (K'&AREANAME(1) GT 0).ZG18C                  00076100
&ZXAREANAME          SETC  ''          RESET IN/OUTPUT                  00076200
&ZMS                 SETC  ' '                                          00076300
&ZMS                 SETC  '&ZMS "AREANAME" KEY AND ITS'                00076400
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00076500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00076600
.ZG18C               ANOP  ,                                            00076700
.*-------------------------------------------------------------------   00076800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00076900
                     AIF   (K'&ZXAREANAME LE 0).ZG18R  NOT I/O          00077000
                     AIF   ('&XAREANAME'(1,1) NE '(').ZG18R             00077100
&ZCGPR               SETC  '&XAREANAME'(2,K'&XAREANAME-2)               00077200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                 00077300
                     AIF   (K'&ZCGPR GT 2).ZG18Q                        00077400
                     AIF   ('&ZCGPR' EQ '0').ZG18Q                      00077500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00077600
                     AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME    00077700
.ZG18P               ANOP  ,                                            00077800
                     AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC         00077900
                     AIF   ('&ZCGPR' LT '2').ZG18Q                      00078000
                     AIF   ('&ZCGPR' LE '12').ZG18R                     00078100
.ZG18Q               ANOP  ,                                            00078200
&ZMS                 SETC  '"AREANAME='                                 00078300
&ZMS                 SETC  '&ZMS.&AREANAME"'                            00078400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00078500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00078600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00078700
.ZG18R               ANOP  ,                                            00078800
.*----------------------------------------------------------------***   00078900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00079000
                     AIF   (N'&AREADESC LE 1).ZG21A  CK NUM             00079100
&ZMS                 SETC  '"AREADESC='                                 00079200
&ZMS                 SETC  '&ZMS.&AREADESC"'                            00079300
&ZMS                 SETC  '&ZMS "AREADESC"'                            00079400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00079500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00079600
.ZG21A               ANOP  ,                                            00079700
.*-------------------------------------------------------------------   00079800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00079900
&ZXAREADESC          SETC  'INPUT'     SET IN/OUTPUT                    00080000
&XAREADESC           SETC  '&AREADESC(1)'       SET XVARIABLE           00080100
                     AIF   (N'&AREADESC GT 1).ZG21B  MULTI              00080200
&XAREADESC           SETC  '&AREADESC'          SET XVARIABLE           00080300
.ZG21B               AIF   (K'&AREADESC(1) GT 0).ZG21C                  00080400
&ZXAREADESC          SETC  ''          RESET IN/OUTPUT                  00080500
&ZMS                 SETC  ' '                                          00080600
&ZMS                 SETC  '&ZMS "AREADESC" KEY AND ITS'                00080700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00080800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00080900
.ZG21C               ANOP  ,                                            00081000
.*-------------------------------------------------------------------   00081100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00081200
                     AIF   (K'&ZXAREADESC LE 0).ZG21R  NOT I/O          00081300
                     AIF   ('&XAREADESC'(1,1) NE '(').ZG21R             00081400
&ZCGPR               SETC  '&XAREADESC'(2,K'&XAREADESC-2)               00081500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                 00081600
                     AIF   (K'&ZCGPR GT 2).ZG21Q                        00081700
                     AIF   ('&ZCGPR' EQ '0').ZG21Q                      00081800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00081900
                     AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME    00082000
.ZG21P               ANOP  ,                                            00082100
                     AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC         00082200
                     AIF   ('&ZCGPR' LT '2').ZG21Q                      00082300
                     AIF   ('&ZCGPR' LE '12').ZG21R                     00082400
.ZG21Q               ANOP  ,                                            00082500
&ZMS                 SETC  '"AREADESC='                                 00082600
&ZMS                 SETC  '&ZMS.&AREADESC"'                            00082700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00082800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00082900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00083000
.ZG21R               ANOP  ,                                            00083100
.*----------------------------------------------------------------***   00083200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00083300
                     AIF   (N'&AREADESCLEN LE 1).ZG24A  CK NUM          00083400
&ZMS                 SETC  '"AREADESCLEN='                              00083500
&ZMS                 SETC  '&ZMS.&AREADESCLEN"'                         00083600
&ZMS                 SETC  '&ZMS "AREADESCLEN"'                         00083700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00083800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00083900
.ZG24A               ANOP  ,                                            00084000
.*-------------------------------------------------------------------   00084100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00084200
&ZXAREADESCLEN       SETC  'INPUT'     SET IN/OUTPUT                    00084300
&XAREADESCLEN        SETC  '&AREADESCLEN(1)'    SET XVARIABLE           00084400
                     AIF   (N'&AREADESCLEN GT 1).ZG24B  MULTI           00084500
&XAREADESCLEN        SETC  '&AREADESCLEN'       SET XVARIABLE           00084600
.ZG24B               AIF   (K'&AREADESCLEN(1) GT 0).ZG24C               00084700
&ZXAREADESCLEN       SETC  ''          RESET IN/OUTPUT                  00084800
&ZMS                 SETC  ' '                                          00084900
&ZMS                 SETC  '&ZMS "AREADESCLEN" KEY AND ITS'             00085000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00085100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00085200
.ZG24C               ANOP  ,                                            00085300
.*-------------------------------------------------------------------   00085400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00085500
                     AIF   (K'&ZXAREADESCLEN LE 0).ZG24R  NOT I/O       00085600
                     AIF   ('&XAREADESCLEN'(1,1) NE '(').ZG24R          00085700
&ZCGPR               SETC  '&XAREADESCLEN'(2,K'&XAREADESCLEN-2)         00085800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                 00085900
                     AIF   (K'&ZCGPR GT 2).ZG24Q                        00086000
                     AIF   ('&ZCGPR' EQ '0').ZG24Q                      00086100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00086200
                     AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME    00086300
.ZG24P               ANOP  ,                                            00086400
                     AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC         00086500
                     AIF   ('&ZCGPR' LT '2').ZG24Q                      00086600
                     AIF   ('&ZCGPR' LE '12').ZG24R                     00086700
.ZG24Q               ANOP  ,                                            00086800
&ZMS                 SETC  '"AREADESCLEN='                              00086900
&ZMS                 SETC  '&ZMS.&AREADESCLEN"'                         00087000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00087100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00087200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00087300
.ZG24R               ANOP  ,                                            00087400
.*----------------------------------------------------------------***   00087500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00087600
                     AIF   (N'&PRODUCTCOUNT LE 1).ZG27A  CK NUM         00087700
&ZMS                 SETC  '"PRODUCTCOUNT='                             00087800
&ZMS                 SETC  '&ZMS.&PRODUCTCOUNT"'                        00087900
&ZMS                 SETC  '&ZMS "PRODUCTCOUNT"'                        00088000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00088100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00088200
.ZG27A               ANOP  ,                                            00088300
.*-------------------------------------------------------------------   00088400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00088500
&ZXPRODUCTCOUNT      SETC  'INPUT'     SET IN/OUTPUT                    00088600
&XPRODUCTCOUNT       SETC  '&PRODUCTCOUNT(1)'   SET XVARIABLE           00088700
                     AIF   (N'&PRODUCTCOUNT GT 1).ZG27B  MULTI          00088800
&XPRODUCTCOUNT       SETC  '&PRODUCTCOUNT'      SET XVARIABLE           00088900
.ZG27B               AIF   (K'&PRODUCTCOUNT(1) GT 0).ZG27C              00089000
&ZXPRODUCTCOUNT      SETC  ''          RESET IN/OUTPUT                  00089100
&ZMS                 SETC  ' '                                          00089200
&ZMS                 SETC  '&ZMS "PRODUCTCOUNT" KEY AND ITS'            00089300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00089400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00089500
.ZG27C               ANOP  ,                                            00089600
.*-------------------------------------------------------------------   00089700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00089800
                     AIF   (K'&ZXPRODUCTCOUNT LE 0).ZG27R  NOT I/O      00089900
                     AIF   ('&XPRODUCTCOUNT'(1,1) NE '(').ZG27R         00090000
&ZCGPR               SETC  '&XPRODUCTCOUNT'(2,K'&XPRODUCTCOUNT-2)       00090100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                 00090200
                     AIF   (K'&ZCGPR GT 2).ZG27Q                        00090300
                     AIF   ('&ZCGPR' EQ '0').ZG27Q                      00090400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00090500
                     AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME    00090600
.ZG27P               ANOP  ,                                            00090700
                     AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC         00090800
                     AIF   ('&ZCGPR' LT '2').ZG27Q                      00090900
                     AIF   ('&ZCGPR' LE '12').ZG27R                     00091000
.ZG27Q               ANOP  ,                                            00091100
&ZMS                 SETC  '"PRODUCTCOUNT='                             00091200
&ZMS                 SETC  '&ZMS.&PRODUCTCOUNT"'                        00091300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00091400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00091500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00091600
.ZG27R               ANOP  ,                                            00091700
.*----------------------------------------------------------------***   00091800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00091900
                     AIF   (N'&PRODUCTSLOTSIZE LE 1).ZG30A  CK NUM      00092000
&ZMS                 SETC  '"PRODUCTSLOTSIZE='                          00092100
&ZMS                 SETC  '&ZMS.&PRODUCTSLOTSIZE"'                     00092200
&ZMS                 SETC  '&ZMS "PRODUCTSLOTSIZE"'                     00092300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00092400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00092500
.ZG30A               ANOP  ,                                            00092600
.*-------------------------------------------------------------------   00092700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00092800
&ZXPRODUCTSLOTSIZE   SETC  'INPUT'     SET IN/OUTPUT                    00092900
&XPRODUCTSLOTSIZE    SETC  '&PRODUCTSLOTSIZE(1)'  SET XVARIABLE         00093000
                     AIF   (N'&PRODUCTSLOTSIZE GT 1).ZG30B  MULTI       00093100
&XPRODUCTSLOTSIZE    SETC  '&PRODUCTSLOTSIZE'   SET XVARIABLE           00093200
.ZG30B               AIF   (K'&PRODUCTSLOTSIZE(1) GT 0).ZG30C           00093300
&ZXPRODUCTSLOTSIZE   SETC  ''          RESET IN/OUTPUT                  00093400
&ZMS                 SETC  ' '                                          00093500
&ZMS                 SETC  '&ZMS "PRODUCTSLOTSIZE" KEY AND ITS'         00093600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00093700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00093800
.ZG30C               ANOP  ,                                            00093900
.*-------------------------------------------------------------------   00094000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00094100
                     AIF   (K'&ZXPRODUCTSLOTSIZE LE 0).ZG30R  NOT I/O   00094200
                     AIF   ('&XPRODUCTSLOTSIZE'(1,1) NE '(').ZG30R      00094300
&ZCGPR               SETC  '&XPRODUCTSLOTSIZE'(2,K'&XPRODUCTSLOTSIZE-2) 00094400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                 00094500
                     AIF   (K'&ZCGPR GT 2).ZG30Q                        00094600
                     AIF   ('&ZCGPR' EQ '0').ZG30Q                      00094700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00094800
                     AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME    00094900
.ZG30P               ANOP  ,                                            00095000
                     AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC         00095100
                     AIF   ('&ZCGPR' LT '2').ZG30Q                      00095200
                     AIF   ('&ZCGPR' LE '12').ZG30R                     00095300
.ZG30Q               ANOP  ,                                            00095400
&ZMS                 SETC  '"PRODUCTSLOTSIZE='                          00095500
&ZMS                 SETC  '&ZMS.&PRODUCTSLOTSIZE"'                     00095600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00095700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00095800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00095900
.ZG30R               ANOP  ,                                            00096000
.*----------------------------------------------------------------***   00096100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00096200
                     AIF   (N'&ATTRIBUTECOUNT LE 1).ZG33A  CK NUM       00096300
&ZMS                 SETC  '"ATTRIBUTECOUNT='                           00096400
&ZMS                 SETC  '&ZMS.&ATTRIBUTECOUNT"'                      00096500
&ZMS                 SETC  '&ZMS "ATTRIBUTECOUNT"'                      00096600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00096700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00096800
.ZG33A               ANOP  ,                                            00096900
.*-------------------------------------------------------------------   00097000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00097100
&ZXATTRIBUTECOUNT    SETC  'INPUT'     SET IN/OUTPUT                    00097200
&XATTRIBUTECOUNT     SETC  '&ATTRIBUTECOUNT(1)'  SET XVARIABLE          00097300
                     AIF   (N'&ATTRIBUTECOUNT GT 1).ZG33B  MULTI        00097400
&XATTRIBUTECOUNT     SETC  '&ATTRIBUTECOUNT'    SET XVARIABLE           00097500
.ZG33B               AIF   (K'&ATTRIBUTECOUNT(1) GT 0).ZG33C            00097600
&ZXATTRIBUTECOUNT    SETC  ''          RESET IN/OUTPUT                  00097700
&ZMS                 SETC  ' '                                          00097800
&ZMS                 SETC  '&ZMS "ATTRIBUTECOUNT" KEY AND ITS'          00097900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00098000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00098100
.ZG33C               ANOP  ,                                            00098200
.*-------------------------------------------------------------------   00098300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00098400
                     AIF   (K'&ZXATTRIBUTECOUNT LE 0).ZG33R  NOT I/O    00098500
                     AIF   ('&XATTRIBUTECOUNT'(1,1) NE '(').ZG33R       00098600
&ZCGPR               SETC  '&XATTRIBUTECOUNT'(2,K'&XATTRIBUTECOUNT-2)   00098700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                 00098800
                     AIF   (K'&ZCGPR GT 2).ZG33Q                        00098900
                     AIF   ('&ZCGPR' EQ '0').ZG33Q                      00099000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00099100
                     AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME    00099200
.ZG33P               ANOP  ,                                            00099300
                     AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC         00099400
                     AIF   ('&ZCGPR' LT '2').ZG33Q                      00099500
                     AIF   ('&ZCGPR' LE '12').ZG33R                     00099600
.ZG33Q               ANOP  ,                                            00099700
&ZMS                 SETC  '"ATTRIBUTECOUNT='                           00099800
&ZMS                 SETC  '&ZMS.&ATTRIBUTECOUNT"'                      00099900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00100000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00100100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00100200
.ZG33R               ANOP  ,                                            00100300
.*----------------------------------------------------------------***   00100400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00100500
                     AIF   (N'&ATTRSDYNSIZE LE 1).ZG36A  CK NUM         00100600
&ZMS                 SETC  '"ATTRSDYNSIZE='                             00100700
&ZMS                 SETC  '&ZMS.&ATTRSDYNSIZE"'                        00100800
&ZMS                 SETC  '&ZMS "ATTRSDYNSIZE"'                        00100900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00101000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00101100
.ZG36A               ANOP  ,                                            00101200
.*-------------------------------------------------------------------   00101300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00101400
&ZXATTRSDYNSIZE      SETC  'INPUT'     SET IN/OUTPUT                    00101500
&XATTRSDYNSIZE       SETC  '&ATTRSDYNSIZE(1)'   SET XVARIABLE           00101600
                     AIF   (N'&ATTRSDYNSIZE GT 1).ZG36B  MULTI          00101700
&XATTRSDYNSIZE       SETC  '&ATTRSDYNSIZE'      SET XVARIABLE           00101800
.ZG36B               AIF   (K'&ATTRSDYNSIZE(1) GT 0).ZG36C              00101900
&ZXATTRSDYNSIZE      SETC  ''          RESET IN/OUTPUT                  00102000
&ZMS                 SETC  ' '                                          00102100
&ZMS                 SETC  '&ZMS "ATTRSDYNSIZE" KEY AND ITS'            00102200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00102300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00102400
.ZG36C               ANOP  ,                                            00102500
.*-------------------------------------------------------------------   00102600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00102700
                     AIF   (K'&ZXATTRSDYNSIZE LE 0).ZG36R  NOT I/O      00102800
                     AIF   ('&XATTRSDYNSIZE'(1,1) NE '(').ZG36R         00102900
&ZCGPR               SETC  '&XATTRSDYNSIZE'(2,K'&XATTRSDYNSIZE-2)       00103000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                 00103100
                     AIF   (K'&ZCGPR GT 2).ZG36Q                        00103200
                     AIF   ('&ZCGPR' EQ '0').ZG36Q                      00103300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00103400
                     AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME    00103500
.ZG36P               ANOP  ,                                            00103600
                     AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC         00103700
                     AIF   ('&ZCGPR' LT '2').ZG36Q                      00103800
                     AIF   ('&ZCGPR' LE '12').ZG36R                     00103900
.ZG36Q               ANOP  ,                                            00104000
&ZMS                 SETC  '"ATTRSDYNSIZE='                             00104100
&ZMS                 SETC  '&ZMS.&ATTRSDYNSIZE"'                        00104200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00104300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00104400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00104500
.ZG36R               ANOP  ,                                            00104600
.*----------------------------------------------------------------***   00104700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00104800
                     AIF   (N'&PRIVATEDATASIZE LE 1).ZG39A  CK NUM      00104900
&ZMS                 SETC  '"PRIVATEDATASIZE='                          00105000
&ZMS                 SETC  '&ZMS.&PRIVATEDATASIZE"'                     00105100
&ZMS                 SETC  '&ZMS "PRIVATEDATASIZE"'                     00105200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00105300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00105400
.ZG39A               ANOP  ,                                            00105500
.*-------------------------------------------------------------------   00105600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00105700
&ZXPRIVATEDATASIZE   SETC  'INPUT'     SET IN/OUTPUT                    00105800
&XPRIVATEDATASIZE    SETC  '&PRIVATEDATASIZE(1)'  SET XVARIABLE         00105900
                     AIF   (N'&PRIVATEDATASIZE GT 1).ZG39B  MULTI       00106000
&XPRIVATEDATASIZE    SETC  '&PRIVATEDATASIZE'   SET XVARIABLE           00106100
.ZG39B               AIF   (K'&PRIVATEDATASIZE(1) GT 0).ZG39C           00106200
&ZXPRIVATEDATASIZE   SETC  ''          RESET IN/OUTPUT                  00106300
&ZMS                 SETC  ' '                                          00106400
&ZMS                 SETC  '&ZMS "PRIVATEDATASIZE" KEY AND ITS'         00106500
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00106600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00106700
.ZG39C               ANOP  ,                                            00106800
.*-------------------------------------------------------------------   00106900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00107000
                     AIF   (K'&ZXPRIVATEDATASIZE LE 0).ZG39R  NOT I/O   00107100
                     AIF   ('&XPRIVATEDATASIZE'(1,1) NE '(').ZG39R      00107200
&ZCGPR               SETC  '&XPRIVATEDATASIZE'(2,K'&XPRIVATEDATASIZE-2) 00107300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                 00107400
                     AIF   (K'&ZCGPR GT 2).ZG39Q                        00107500
                     AIF   ('&ZCGPR' EQ '0').ZG39Q                      00107600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00107700
                     AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME    00107800
.ZG39P               ANOP  ,                                            00107900
                     AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC         00108000
                     AIF   ('&ZCGPR' LT '2').ZG39Q                      00108100
                     AIF   ('&ZCGPR' LE '12').ZG39R                     00108200
.ZG39Q               ANOP  ,                                            00108300
&ZMS                 SETC  '"PRIVATEDATASIZE='                          00108400
&ZMS                 SETC  '&ZMS.&PRIVATEDATASIZE"'                     00108500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00108600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00108700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00108800
.ZG39R               ANOP  ,                                            00108900
.*------------------------------------------------------------------    00109000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00109100
.ZG41                ANOP  ,                                            00109200
&ZXREQUEST           SETC  'INPUT'     SET IN/OUTPUT                    00109300
                     AIF   (K'&XREQUEST GT 0).ZG41E  VALID ARG          00109400
                     AIF   (T'&REQUEST EQ 'O').ZG41D  OMITTED           00109500
&ZASYSLNDX           SETA  0                                            00109600
.ZG41A               ANOP  ,           POSITIONAL MACRO KEY             00109700
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00109800
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG41C             00109900
&ZTLC                SETC 'REQUEST'                                     00110000
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG41A    00110100
.ZG41B               ANOP  ,                                            00110200
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00110300
&ZMS                 SETC  'THE "REQUEST" KEY'                          00110400
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00110500
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00110600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00110700
                     AGO   .ZG41E                                       00110800
.ZG41C               ANOP  ,                                            00110900
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00111000
&ZMS                 SETC  '"REQUEST='                                  00111100
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00111200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00111300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00111400
&ZMS                 SETC  '&ZMS "CREATEAREA"'                          00111500
&ZMS                 SETC  '&ZMS OR "INITVENDORAREA".'                  00111600
                     MNOTE 8,' &ZMS '                                   00111700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00111800
                     AGO   .ZG41E                                       00111900
.ZG41D               ANOP  ,                                            00112000
&XREQUEST            SETC  'CREATEAREA'         SET DEFAULT KEYWORD     00112100
.ZG41E               ANOP  ,                                            00112200
.*------------------------------------------------------------------    00112300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00112400
                     AIF   (K'&REQUEST(1) GT 0).ZG41F  PARM             00112500
&XREQUEST            SETC  ''          ENSURE NULL KEYWORD              00112600
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00112700
&ZMS                 SETC  'THE'                                        00112800
&ZMS                 SETC  '&ZMS "REQUEST" KEY AND ITS'                 00112900
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00113000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00113100
&ZMS                 SETC  '&ZMS "CREATEAREA"'                          00113200
&ZMS                 SETC  '&ZMS OR "INITVENDORAREA".'                  00113300
                     MNOTE 8,' &ZMS '                                   00113400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00113500
.ZG41F               ANOP  ,                                            00113600
.*----------------------------------------------------------------***   00113700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00113800
                     AIF   (N'&RETCODE LE 1).ZG43A  CK NUM              00113900
&ZMS                 SETC  '"RETCODE='                                  00114000
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00114100
&ZMS                 SETC  '&ZMS "RETCODE"'                             00114200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00114300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00114400
.ZG43A               ANOP  ,                                            00114500
.*-------------------------------------------------------------------   00114600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00114700
                     AIF   (K'&RETCODE(1) LE 0).ZG43C  NO PARM          00114800
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00114900
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00115000
                     AIF   (N'&RETCODE GT 1).ZG43C                      00115100
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00115200
.ZG43C               ANOP  ,                                            00115300
.*-------------------------------------------------------------------   00115400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00115500
                     AIF   (K'&ZXRETCODE LE 0).ZG43R  NOT I/O           00115600
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG43R              00115700
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00115800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                 00115900
                     AIF   (K'&ZCGPR GT 2).ZG43Q                        00116000
                     AIF   ('&ZCGPR' EQ '0').ZG43Q                      00116100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00116200
                     AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME    00116300
.ZG43P               ANOP  ,                                            00116400
                     AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC         00116500
                     AIF   ('&ZCGPR' EQ '15').ZG43R                     00116600
                     AIF   ('&ZCGPR' LT '2').ZG43Q                      00116700
                     AIF   ('&ZCGPR' LE '12').ZG43R                     00116800
.ZG43Q               ANOP  ,                                            00116900
&ZMS                 SETC  '"RETCODE='                                  00117000
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00117100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00117200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'     00117300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00117400
.ZG43R               ANOP  ,                                            00117500
.*----------------------------------------------------------------***   00117600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00117700
                     AIF   (N'&RSNCODE LE 1).ZG46A  CK NUM              00117800
&ZMS                 SETC  '"RSNCODE='                                  00117900
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00118000
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00118100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00118200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00118300
.ZG46A               ANOP  ,                                            00118400
.*-------------------------------------------------------------------   00118500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00118600
                     AIF   (K'&RSNCODE(1) LE 0).ZG46C  NO PARM          00118700
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00118800
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00118900
                     AIF   (N'&RSNCODE GT 1).ZG46C                      00119000
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00119100
.ZG46C               ANOP  ,                                            00119200
.*-------------------------------------------------------------------   00119300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00119400
                     AIF   (K'&ZXRSNCODE LE 0).ZG46R  NOT I/O           00119500
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG46R              00119600
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00119700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                 00119800
                     AIF   (K'&ZCGPR GT 2).ZG46Q                        00119900
                     AIF   ('&ZCGPR' EQ '0').ZG46R                      00120000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00120100
                     AIF   (T'&ZCGPR NE 'N').ZG46Q  INVALID REG NAME    00120200
.ZG46P               ANOP  ,                                            00120300
                     AIF   (T'&ZCGPR NE 'N').ZG46R  NON NUMERIC         00120400
                     AIF   ('&ZCGPR' EQ '0').ZG46R                      00120500
                     AIF   ('&ZCGPR' LT '2').ZG46Q                      00120600
                     AIF   ('&ZCGPR' LE '12').ZG46R                     00120700
.ZG46Q               ANOP  ,                                            00120800
&ZMS                 SETC  '"RSNCODE='                                  00120900
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00121000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00121100
                     MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'      00121200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00121300
.ZG46R               ANOP  ,                                            00121400
.******************************************************************     00121500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00121600
.******************************************************************     00121700
                     ACTR  10000                                        00121800
.*----------------------------------------------------------------***   00121900
.***AH.P02 EXTRA POSITIONALS                                            00122000
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00122100
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00122200
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00122300
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00122400
.ZGLISTX1            ANOP  ,                                            00122500
&ZCVAL               SETC  ''          ERROR FIELD                      00122600
&ZAWRK               SETA  0           POSITIONAL NUMBER                00122700
.ZGLIST2             ANOP  ,                                            00122800
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00122900
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00123000
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00123100
                     AGO   .ZGLIST2                                     00123200
.*                                                                      00123300
.ZGLIST3             ANOP  ,                                            00123400
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00123500
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'                    00123600
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00123700
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00123800
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00123900
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00124000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00124100
.ZGLISTX             ANOP  ,                                            00124200
&ZASYSLNDX           SETA  0                                            00124300
.*******************************************************************    00124400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00124500
.*******************************************************************    00124600
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00124700
.*******************************************************************    00124800
.***AE.01  START OF FXECTRLI MACRO CODE                                 00124900
.*******************************************************************    00125000
                     LCLC  &M0M0001                 NAME                00125100
&M0M0001             SETC  '&XLABEL'                SET NAME            00125200
                     AIF   (K'&XLABEL NE 0).XLAB2                       00125300
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00125400
.*                                                                      00125500
.XLAB2               ANOP  ,                                            00125600
&M0M0001 DS    0H                             FXECTRLI-0                00125700
.*******************************************************************    00125800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00125900
.*******************************************************************    00126000
              PUSH  PRINT                                               00126100
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00126200
                     PRINT OFF         ++ PR01                          00126300
                     AGO   .ZPRNTXX                                     00126400
.ZPRINTX             PRINT ON                                           00126500
.ZPRNTXX             ANOP  ,                                            00126600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00126700
         PUSH  PRINT                                                    00126800
         PRINT ON                                                       00126900
         MNOTE 8,'ASAXMACI is not YET supported for HLASM'              00127000
         POP   PRINT                                                    00127100
         POP   PRINT                                                    00127200
         MEXIT                                                          00127300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00127400
.********************************************************************   00127500
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00127600
.********************************************************************   00127700
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00127800
                      LCLA  &ZOPN1         INVOCATION INDEX             00127900
                      LCLC  &ZOPL(4095)    LABEL                        00128000
                      LCLC  &ZOPO(4095)    OPERATION                    00128100
                      LCLC  &ZOPV(4095)    VALUE                        00128200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00128300
.*                                                                      00128400
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00128500
.*******************************************************************    00128600
.***AO.X02  RETURN CODE PROCESSING                                      00128700
.*******************************************************************    00128800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00128900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00129000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00129100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00129200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00129300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00129400
&ZOPN                 SETA  &ZOPN+1                                     00129500
&ZOPL(&ZOPN)          SETC  ' '                                         00129600
&ZOPO(&ZOPN)          SETC  'ST'                                        00129700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00129800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00129900
                      AGO   .ZMRETX                                     00130000
.*                                                                      00130100
.ZMRET2               ANOP  ,                                           00130200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00130300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00130400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00130500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00130600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00130700
&ZOPN                 SETA  &ZOPN+1                                     00130800
&ZOPL(&ZOPN)          SETC  ' '                                         00130900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00131000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00131100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00131200
.ZMRETX               ANOP  ,                                           00131300
.*******************************************************************    00131400
.***AO.X03  REASON CODE PROCESSING                                      00131500
.*******************************************************************    00131600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00131700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00131800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00131900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00132000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00132100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00132200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00132300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00132400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00132500
&ZOPN                 SETA  &ZOPN+1                                     00132600
&ZOPL(&ZOPN)          SETC  ' '                                         00132700
&ZOPO(&ZOPN)          SETC  'ST'                                        00132800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00132900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00133000
                      AGO   .ZMRSNX                                     00133100
.*                                                                      00133200
.ZMRSN2               ANOP  ,                                           00133300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00133400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00133500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00133600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00133700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00133800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00133900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00134000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00134100
&ZOPN                 SETA  &ZOPN+1                                     00134200
&ZOPL(&ZOPN)          SETC  ' '                                         00134300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00134400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00134500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00134600
.ZMRSNX               ANOP  ,                                           00134700
.*******************************************************************    00134800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00134900
.*******************************************************************    00135000
                      ACTR  10000                                       00135100
.*                                                                      00135200
                      LCLA  &ZLC           COLUMN POSITION              00135300
                      LCLA  &ZOPX          LIST TABLE INDEX             00135400
                      LCLC  &ZLL           LABEL                        00135500
                      LCLC  &ZLOP          OPERATION                    00135600
                      LCLC  &ZLV           VALUE                        00135700
                      LCLC  &ZLD           DESCRIPTION                  00135800
.*                                                                      00135900
&ZOPX                 SETA  1                                           00136000
.*******************************************************************    00136100
.***AP.X01  FORMAT GENERATED CODE                                       00136200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00136300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00136400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00136500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00136600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00136700
                      AIF   (K'&ZLD LE 0).ZL51                          00136800
&ZLC                  SETA  35             COMMENT COLUMN               00136900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00137000
&ZLC                  SETA  33             COMMENT COLUMN               00137100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00137200
&ZLV                  SETC  '&ZLV'.' '                                  00137300
                      AGO   .ZL31                                       00137400
.*                                                                      00137500
.ZL41                 ANOP  ,                                           00137600
&ZLV                  SETC  '&ZLV'.' '                                  00137700
.ZL51                 ANOP  ,                                           00137800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00137900
.*                                                                      00138000
&ZLL     &ZLOP &ZLV                                                     00138100
.*                                                                      00138200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00138300
                      AGO   .ZL21          CONTINUE LOOPING             00138400
.*                                                                      00138500
.ZLX1                 ANOP  ,                                           00138600
.*******************************************************************    00138700
.***AP.X02  END OF FXECTRLI MACRO                                       00138800
&ZFXECTRLI            SETC  'YES'          SET FXECTRLI USED            00138900
         POP   PRINT                                                    00139000
*                                            FXECTRLI-0                 00139100
         SPACE 1                                                        00139200
.ZLX2                 ANOP  ,                                           00139300
         MEND                                                           00139400
**********************************************************************/ 00139500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00139600
*%FXECTRLI: MACRO KEYS(REQUEST,AREASIZE,AREAADDR,AREANAME,AREADESC,     00139700
*                 AREADESCLEN,PRODUCTCOUNT,PRODUCTSLOTSIZE,             00139800
*                 ATTRIBUTECOUNT,ATTRSDYNSIZE,PRIVATEDATASIZE,RETCODE,  00139900
*                 RSNCODE);                                             00140000
*  ANS('?'!!MACLABEL!!' '!!'FXECTRIP '!!MACLIST!!                       00140100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00140200
*%END FXECTRLI;                                                         00140300
