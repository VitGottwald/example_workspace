*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLLOCK                               -05/05/22-<4> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES Lock Structure Services                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1994, 2021                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77D0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IXLLOCK provides an interface to request lock structure        * 00002100
*      services against user-defined logical resources on a           * 00002200
*      sysplex-wide scope.                                            * 00002300
*                                                                     * 00002400
*      The following services are provided:                           * 00002500
*                                                                     * 00002600
*                                                                     * 00002700
*      OBTAIN   OBTAIN shared or exclusive ownership of a resource    * 00002800
*               that is not currently owned or pending ownership by   * 00002900
*               this connected user and optionally assign additional  * 00003000
*               user-defined ownership attributes.                    * 00003100
*                                                                     * 00003200
*      ALTER    ALTER the attributes of an owned resource or replace  * 00003300
*               a previous OBTAIN or ALTER request which is pending   * 00003400
*               on the CONTENTION exit resource request queue with a  * 00003500
*               more current request.                                 * 00003600
*                                                                     * 00003700
*      RELEASE  RELEASE ownership of a resource. Similar to the ALTER * 00003800
*               option, a connected user may request to RELEASE a     * 00003900
*               resource for which it has not yet received the        * 00004000
*               results of a previous request to OBTAIN or ALTER. If  * 00004100
*               an outstanding request has been left pending on the   * 00004200
*               CONTENTION exit resource request queue, it may be     * 00004300
*               replaced by the more current request to RELEASE.      * 00004400
*                                                                     * 00004500
*      PROCESSMULT Process multiple resource requests with a single   * 00004600
*               IXLLOCK invocation. The individual requests are       * 00004700
*               specified via Lock Request Blocks which are passed in * 00004800
*               an input buffer. Note, only a subset of the options   * 00004900
*               supported on the IXLLOCK interface are supported by   * 00005000
*               the PROCESSMULT option. Please consult the IXLYLRB    * 00005100
*               mapping macro for information on valid requests and   * 00005200
*               options.                                              * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*      o   RELATED USER EXITS                                         * 00005800
*                                                                     * 00005900
*          While the IXLLOCK service is the vehicle by which          * 00006000
*          connected users can request the use of logical resources,  * 00006100
*          XES may require the input of selected connected users in   * 00006200
*          order to complete request processing. This communication   * 00006300
*          is achieved via the execution of predefined user-exits,    * 00006400
*          the addresses of which are required inputs to the IXLCONN  * 00006500
*          service. The following provides an overview of the user    * 00006600
*          exits and the associated processing required to accomplish * 00006700
*          locking functions.                                         * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*          -   Contention Exit                                        * 00007100
*                                                                     * 00007200
*               A resource request queue is defined as a resource and * 00007300
*              the set of owners/requestors for that resource along   * 00007400
*              with their respective owned/requested states.  The     * 00007500
*              composite state of the request queue is defined in     * 00007600
*              relation to the entries on the request queue. The      * 00007700
*              composite state of the request queue can be said to be * 00007800
*              in one of the following states:                        * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*              1.  Free                                               * 00008200
*                                                                     * 00008300
*                   The request queue for a resource is said to be in * 00008400
*                  the "Free" state if there are currently no owners  * 00008500
*                  or requests to own the specified resource.         * 00008600
*                                                                     * 00008700
*              2.  Shared                                             * 00008800
*                                                                     * 00008900
*                   The composite state is said to be "Shared" when   * 00009000
*                  all ownership and requests to own the resource are * 00009100
*                  in the shared state.                               * 00009200
*                                                                     * 00009300
*              3.  Exclusive                                          * 00009400
*                                                                     * 00009500
*                  If the composite state is not "Free" or "Shared",  * 00009600
*                  the request queue is considered to be in the       * 00009700
*                  "Exclusive" state.                                 * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*              When a connected user requests to own a resource in a  * 00010200
*              state that is incompatible with the current composite  * 00010300
*              state of the resource request queue, the resource is   * 00010400
*              said to be "in contention".  Upon recognizing a        * 00010500
*              resource to be "in contention", XES chooses a          * 00010600
*              connected user to manage the resource and percolates   * 00010700
*              management responsibilities to that connector.         * 00010800
*              Percolation is defined as the process of presenting a  * 00010900
*              resource request and the associated request queue to a * 00011000
*              connected user via executing the user's CONTENTION     * 00011100
*              exit.  Please see the Contention exit parameter list,  * 00011200
*              mapped by IXLYCEPL, for further info regarding input   * 00011300
*              to and usage of the CONTENTION exit.  Once a connected * 00011400
*              user has been chosen to manage a resource, that user   * 00011500
*              will remain the manager of that resource until the "in * 00011600
*              contention" condition is relieved. If a connected user * 00011700
*              should disconnect or terminate abnormally while it is  * 00011800
*              the manager of an "in contention" resource, management * 00011900
*              responsibilities will be re-assigned to another        * 00012000
*              connected user by XES.                                 * 00012100
*                                                                     * 00012200
*              The following matrix illustrates the rules used by XES * 00012300
*              for determining compatibility when considering the     * 00012400
*              effect of a new request in regard to the current       * 00012500
*              composite state of the resource request queue. Please  * 00012600
*              note, a "C" indicates a compatible state and an "X"    * 00012700
*              indicates an incompatible state:                       * 00012800
*                                                                     * 00012900
*                     ---------------------------------------         * 00013000
*                     !Composite -->  ! FREE ! SHARE ! EXCL !         * 00013100
*                     ! State         !      !       !      !         * 00013200
*                     !---------------!------!-------!------!         * 00013300
*                     !Requested      !      !       !      !         * 00013400
*                     ! State#        !      !       !      !         * 00013500
*                     !      !        !      !       !      !         * 00013600
*                     !      v        !      !       !      !         * 00013700
*                     !---------------!------!-------!------!         * 00013800
*                     !        SHARE  !  C   !   C   !  X   !         * 00013900
*                     !---------------!------!-------!------!         * 00014000
*                     !         EXCL  !  C   !   X   !  X   !         * 00014100
*                     ---------------------------------------         * 00014200
*                                                                     * 00014300
*              Once assigned resource management responsibilities, a  * 00014400
*              connected user's CONTENTION exit could potentially     * 00014500
*              elect to perform one or more of the following          * 00014600
*              actions...                                             * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*              --  Grant or Deny pending request(s) to obtain or      * 00015000
*                  alter the resource.                                * 00015100
*                                                                     * 00015200
*                  Although a resource request has been determined to * 00015300
*                  be incompatible according to the rules enforced by * 00015400
*                  XES, the connected user may determine after        * 00015500
*                  examining the user data associated with the        * 00015600
*                  resources on the request queue that the request is * 00015700
*                  indeed compatible within the rules of the          * 00015800
*                  connected users protocol.  Through the             * 00015900
*                  exploitation of user data capabilities, connected  * 00016000
*                  users can implement locking protocols supporting   * 00016100
*                  user-defined states exceeding the XES supported    * 00016200
*                  states of shared and exclusive.                    * 00016300
*                                                                     * 00016400
*                  Please note, along with the ability to grant or    * 00016500
*                  deny resource requests, the CONTENTION exit may    * 00016600
*                  also modify the attributes of the request (i.e.    * 00016700
*                  grant a request with user data different than what * 00016800
*                  was requested on the IXLLOCK invocation).          * 00016900
*                                                                     * 00017000
*              --  Modify the ownership characteristics of one or     * 00017100
*                  more of the current resource owners                * 00017200
*                                                                     * 00017300
*                  The CONTENTION exit may choose to update the state * 00017400
*                  and/or user data in which a connected user         * 00017500
*                  currently owns the resource. Any connected user    * 00017600
*                  whose ownership of a resource has been regranted   * 00017700
*                  in this fashion will be informed of the update via * 00017800
*                  execution of its COMPLETE exit.                    * 00017900
*                                                                     * 00018000
*              --  Notify a current resource owner that contention    * 00018100
*                  exists                                             * 00018200
*                                                                     * 00018300
*                  The CONTENTION exit may choose to notify one or    * 00018400
*                  more connected users that contention exists for a  * 00018500
*                  resource that it currently owns by executing the   * 00018600
*                  NOTIFY exit(s) of those users.  Services are       * 00018700
*                  provided which allow connected users to modify     * 00018800
*                  their ownership interest from within the  NOTIFY   * 00018900
*                  exit. After the specified NOTIFY exits have been   * 00019000
*                  executed, the resultant resource request queue is  * 00019100
*                  presented to the CONTENTION exit.  Through the use * 00019200
*                  of the NOTIFY exit, connected users can implement  * 00019300
*                  protocols which allow for negotiation of lock      * 00019400
*                  ownership among owners and requestors.             * 00019500
*                                                                     * 00019600
*              --  Take no action on the pending request              * 00019700
*                                                                     * 00019800
*                  At the time the contention exit is presented with  * 00019900
*                  a new request, the connected user may decide not   * 00020000
*                  to grant or deny the request immediately. In this  * 00020100
*                  case, the contention exit can leave the request    * 00020200
*                  pending on the resource request queue. The user    * 00020300
*                  may decide to take action on the request during a  * 00020400
*                  subsequent invocation of the exit.  Please see the * 00020500
*                  Contention exit parameter list, mapped by          * 00020600
*                  IXLYCEPL, for further info regarding when the      * 00020700
*                  CONTENTION exit is invoked.                        * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*          -   Notify Exit                                            * 00021200
*                                                                     * 00021300
*              A connected user's NOTIFY exit may be executed to      * 00021400
*              inform the user that contention exists for a resource  * 00021500
*              that it currently owns. Execution of the NOTIFY exit   * 00021600
*              may only be requested by the CONTENTION exit of the    * 00021700
*              connected user who has been chosen to manage           * 00021800
*              contention of the specified resource. The NOTIFY exit  * 00021900
*              receives as input a copy of the resource request queue * 00022000
*              containing information regarding all the current       * 00022100
*              owners and requestors of the resource.  Please see the * 00022200
*              Notify exit parameter list, mapped by IXLYNEPL, for    * 00022300
*              further info regarding input to the NOTIFY exit.       * 00022400
*              Although not required to do so, the connected user may * 00022500
*              choose to invoke the IXLSYNCH service to synchronously * 00022600
*              update its interest in the resource and possibly       * 00022700
*              eliminate the contention.                              * 00022800
*                                                                     * 00022900
*          -   Complete Exit                                          * 00023000
*                                                                     * 00023100
*              The IXLLOCK service allows a connected user to specify * 00023200
*              via the MODE keyword how a request is to be processed  * 00023300
*              if it is not able to be immediately completed by XES.  * 00023400
*              When a connected user specifies MODE(SYNCEXIT) and the * 00023500
*              request is unable to be completed immediately, XES     * 00023600
*              processes the request asynchronously and reports the   * 00023700
*              results to the connected user's COMPLETE exit.  The    * 00023800
*              COMPLETE exit is also executed to inform a connected   * 00023900
*              user that its ownership interest has been regranted by * 00024000
*              the CONTENTION exit of the connected user who has been * 00024100
*              assigned contention management responsibilities by     * 00024200
*              XES.  Please see the Complete exit parameter list,     * 00024300
*              mapped by IXLYCMPL, for further info regarding input   * 00024400
*              to the COMPLETE exit.                                  * 00024500
*                                                                     * 00024600
*          -   Event Exit                                             * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*              The EVENT exit is the mechanism by which error and     * 00025000
*              status conditions are reported to connected users.     * 00025100
*              Unlike the previously described user exits,            * 00025200
*              locking-specific functions are not performed by the    * 00025300
*              EVENT exit, however, the use of this exit should be    * 00025400
*              considered when designing a locking protocol. To be    * 00025500
*              more specific, XES requires that active connectors     * 00025600
*              acknowledge the termination of a related connected     * 00025700
*              user before performing cleanup functions for that      * 00025800
*              user. This implies that XES will not be able to        * 00025900
*              re-assign resource management responsibilities for a   * 00026000
*              connector who terminates while assigned these          * 00026100
*              responsibilities until all the appropriate responses   * 00026200
*              have been received.  This further implies that any     * 00026300
*              outstanding IXLLOCK requests for resources being       * 00026400
*              managed by the terminating connected user may not be   * 00026500
*              able to be completed until management of those         * 00026600
*              resources is able to be re-assigned to an active       * 00026700
*              connected user.  For the above stated reason, a        * 00026800
*              connected user should be aware that delaying           * 00026900
*              confirmation of XES events while awaiting completion   * 00027000
*              of outstanding requests may result in deadlock         * 00027100
*              scenarios.  Please note, XES does not support the      * 00027200
*              detection or resolution of deadlock scenarios and the  * 00027300
*              prevention of such occurrences is the responsibility   * 00027400
*              of the connected users of XES services.                * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*      o   Miscellaneous information                                  * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*          -   XES always attempts to process IXLLOCK requests        * 00028200
*              immediately, regardless of the value supplied by the   * 00028300
*              user on the MODE or MODEVAL keyword, however, this is  * 00028400
*              not always possible. The reasons why request           * 00028500
*              processing may experience delays range from            * 00028600
*              connected-user-controlled conditions (such as resource * 00028700
*              contention) to conditions which are not controllable   * 00028800
*              by the connected user (such as internal XES            * 00028900
*              serialization could not immediately be obtained).      * 00029000
*                                                                     * 00029100
*              The phrases "when request completion is reported       * 00029200
*              synchronously" and "the request is completed           * 00029300
*              synchronously" are used throughout the descriptions of * 00029400
*              the IXLLOCK service keywords. These terms refer to the * 00029500
*              following:                                             * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*              --  IXLLOCK requests specifying MODE(SYNCSUSPEND) or   * 00029900
*                  MODEVAL(IXLMODESYNCSUSPEND).                       * 00030000
*                                                                     * 00030100
*                  If XES experiences delays while processing these   * 00030200
*                  type of requests, the caller will be suspended     * 00030300
*                  until the request is able to be completed. Callers * 00030400
*                  using these keywords will always receive control   * 00030500
*                  at the next sequential instruction with the        * 00030600
*                  request complete and the final disposition         * 00030700
*                  determined.                                        * 00030800
*                                                                     * 00030900
*              --  IXLLOCK requests specifying MODE(SYNCEXIT),        * 00031000
*                  MODEVAL(IXLMODESYNCEXIT), MODE(NORESPONSE) or      * 00031100
*                  MODEVAL(IXLMODENORESPONSE) which were not required * 00031200
*                  to be processed asynchronously.                    * 00031300
*                                                                     * 00031400
*                  If XES experiences a delay while processing        * 00031500
*                  requests of these types, return and reason codes   * 00031600
*                  are provided to the invoker indicating that the    * 00031700
*                  request will be processed asynchronously and       * 00031800
*                  request completion will be reported via the        * 00031900
*                  specified mechanism (i.e. COMPLETE exit) as        * 00032000
*                  appropriate.  If no such delays are experienced,   * 00032100
*                  control is returned to the caller at the next      * 00032200
*                  sequential instruction following the IXLLOCK       * 00032300
*                  invocation with the request complete and the final * 00032400
*                  disposition determined.                            * 00032500
*                                                                     * 00032600
*              --  IXLLOCK requests specifying MODE(SYNCFAIL) or      * 00032700
*                  MODEVAL(IXLMODESYNCFAIL) which were not required   * 00032800
*                  to be processed asynchronously.                    * 00032900
*                                                                     * 00033000
*                  If XES experiences a delay while processing a      * 00033100
*                  request of this type, the request is cancelled and * 00033200
*                  return and reason codes are provided to the        * 00033300
*                  invoker indicating that the request was unable to  * 00033400
*                  be completed without delays.                       * 00033500
*                                                                     * 00033600
*                  If no such delays are experienced, control is      * 00033700
*                  returned to the caller at the next sequential      * 00033800
*                  instruction following the IXLLOCK invocation with  * 00033900
*                  the request complete and the final disposition     * 00034000
*                  determined.                                        * 00034100
*                                                                     * 00034200
*                  Note that SYNCFAILDELAY may be used to further     * 00034300
*                  control which delays may be tolerated by the       * 00034400
*                  requestor.                                         * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00035300
*                                                                     * 00035400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00035500
*                                                                     * 00035600
*01* ENVIRONMENT:                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*      Dispatchable unit mode: Task or SRB mode.                      * 00036000
*                                                                     * 00036100
*      Minimum authorization: Supervisor State and PSW key 0.         * 00036200
*                                                                     * 00036300
*      AMODE:            31-bit.                                      * 00036400
*                                                                     * 00036500
*      ASC mode:         Primary or Access Register.                  * 00036600
*                                                                     * 00036700
*                        Addressability notes:                        * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                        1.  Primary equal to the requestor's primary * 00037100
*                            at the time of the connect to the lock   * 00037200
*                            structure.                               * 00037300
*                                                                     * 00037400
*                        2.  Any secondary or home address spaces are * 00037500
*                            allowed.                                 * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*      Serialization:                                                 * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                        o   Enabled and unlocked.                    * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*      Restrictions:                                                  * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*                        1.  The caller's parameter list must be      * 00039000
*                            addressable in the caller's primary      * 00039100
*                            address space.                           * 00039200
*                                                                     * 00039300
*                        2.  The caller must provide a 144-byte       * 00039400
*                            savearea that starts on a word boundary  * 00039500
*                            and is addressable in the caller's       * 00039600
*                            primary address space.                   * 00039700
*                                                                     * 00039800
*                        3.  If the caller is running in Access       * 00039900
*                            Register ASC mode and specifies a macro  * 00040000
*                            parameter using explicit register        * 00040100
*                            notation the access register             * 00040200
*                            corresponding to the general register    * 00040300
*                            must appropriately qualify the general   * 00040400
*                            register.                                * 00040500
*                                                                     * 00040600
*                        4.  The REQBUFFER storage must exist in      * 00040700
*                            fixed or disabled reference storage that * 00040800
*                            is addressable from the invokers primary * 00040900
*                            address space.                           * 00041000
*                                                                     * 00041100
*                        5.  When the Rnamelen keyword is used, the   * 00041200
*                            input RNAME must exist in storage within * 00041300
*                            the caller's primary address space.      * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*01* PROGRAMMING REQUIREMENTS:                                        * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*    1.  Access Register mode invokers must specify SYSSTATE          * 00042300
*        ASCENV=AR prior to invoking this macro.                      * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*01* INPUT REGISTER INFORMATION:                                      * 00042800
*                                                                     * 00042900
*    Upon invocation, general purpose register (GPR) 13 must contain  * 00043000
*    the address of a 144-byte savearea to be used by XES. With the   * 00043100
*    exception of register (GPR) 13, the caller does not have to      * 00043200
*    place any information into any register (GPR) or access register * 00043300
*    (AR) unless using it in register notation for a particular       * 00043400
*    parameter, or using it as a base register.                       * 00043500
*                                                                     * 00043600
*    If the caller is running in Access Register ASC mode then it is  * 00043700
*    the responsibility of that caller to insure that access register * 00043800
*    (AR) 13 correctly qualifies the savearea contained in register   * 00043900
*    (GPR) 13.  This implies that Access Register (AR) mode callers   * 00044000
*    must insure that access register (AR) 13 contains zero           * 00044100
*    (indicating that the savearea is addressable in the primary      * 00044200
*    address space) prior to invocation.                              * 00044300
*                                                                     * 00044400
*01* OUTPUT REGISTER INFORMATION:                                     * 00044500
*                                                                     * 00044600
*    When control returns to the caller, the GPRs contain:            * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*    REGISTER  CONTENTS                                               * 00045000
*                                                                     * 00045100
*    0         Reason code                                            * 00045200
*                                                                     * 00045300
*    1         Used as work register by the system                    * 00045400
*                                                                     * 00045500
*    2-13      Unchanged                                              * 00045600
*                                                                     * 00045700
*    14        Used as work register by the system.                   * 00045800
*                                                                     * 00045900
*    15        Return code                                            * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*    When control returns to the caller, the ARs contain:             * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*    REGISTER  CONTENTS                                               * 00046700
*                                                                     * 00046800
*    0-1       Used as work registers by the system                   * 00046900
*                                                                     * 00047000
*    2-12      Unchanged                                              * 00047100
*                                                                     * 00047200
*    13        Used as work register by the system when invoked by    * 00047300
*              Primary mode caller. Unchanged when invoked by Access  * 00047400
*              Register (AR) mode caller.                             * 00047500
*                                                                     * 00047600
*    14-15     Used as work registers by the system.                  * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*01* PERFORMANCE IMPLICATIONS:                                        * 00048100
*                                                                     * 00048200
*    None                                                             * 00048300
*                                                                     * 00048400
*01* SYNTAX:                                                          * 00048500
*                                                                     * 00048600
*Ýxlabel¨  IXLLOCK     CONTOKEN=xcontoken                             * 00048700
*                   Ð ,REQUEST=OBTAIN                                 * 00048800
*                   !     ,RNAME=xrname                               * 00048900
*                   !    Ý,RNAMELEN=»xrnamelen!NO_RNAMELENº¨          * 00049000
*                   !     ,HASHVAL=xhashval                           * 00049100
*                   !    Ý,LOCKDATA=»xlockdata!ALL_ZEROESº¨           * 00049200
*                   !   ÐÝ,STATE=SHR¨                                 * 00049300
*                   !   ÔÝ,STATE=EXCL¨                                * 00049400
*                   !   ¿Ý,STATE=VALUE                                * 00049500
*                   !         ,STATEVAL=xstateval¨                    * 00049600
*                   !    Ý,UDATAVAL=»xudataval!ALL_ZEROESº¨           * 00049700
*                   !   ÐÝ,RDATA=NORDATA¨                             * 00049800
*                   !   ÔÝ,RDATA=WRITE                                * 00049900
*                   !   !     ,RDATAVAL=xrdataval                     * 00050000
*                   !   !    Ý,ENTRYID=xentryid¨                      * 00050100
*                   !   !    Ý,ENTRYCOUNT=xentrycount¨                * 00050200
*                   !   !    Ý,ALLOWUSERSV=»xallowusersv!0º¨¨         * 00050300
*                   !   ¿Ý,RDATA=REACQUIRE                            * 00050400
*                   !         ,ENTRYID=xentryid                       * 00050500
*                   !        Ý,CONID=»xconid!NO_CONIDº¨               * 00050600
*                   !       ÐÝ,UPDATERDATA=NO¨                        * 00050700
*                   !       ¿Ý,UPDATERDATA=YES                        * 00050800
*                   !             ,RDATAVAL=xrdataval¨¨               * 00050900
*                   !   ÐÝ,MODE=SYNCSUSPEND¨                          * 00051000
*                   !   ÔÝ,MODE=SYNCEXIT¨                             * 00051100
*                   !   ÔÝ,MODE=SYNCFAIL                              * 00051200
*                   !   !    Ý,SYNCFAILDELAY=»xsyncfaildelay!0º¨¨     * 00051300
*                   !   ¿Ý,MODE=VALUE                                 * 00051400
*                   !         ,MODEVAL=xmodeval                       * 00051500
*                   !        Ý,SYNCFAILDELAY=»xsyncfaildelay!0º¨¨     * 00051600
*                   !    Ý,CRITICALREQUEST=»xcriticalrequest!0º¨      * 00051700
*                   !    Ý,ADUPREQSEQNUM=xadupreqseqnum¨              * 00051800
*                   Ô ,REQUEST=ALTER                                  * 00051900
*                   !     ,RNAME=xrname                               * 00052000
*                   !    Ý,RNAMELEN=»xrnamelen!NO_RNAMELENº¨          * 00052100
*                   !     ,HASHVAL=xhashval                           * 00052200
*                   !   ÐÝ,STATE=SHR¨                                 * 00052300
*                   !   ÔÝ,STATE=EXCL¨                                * 00052400
*                   !   ¿Ý,STATE=VALUE                                * 00052500
*                   !         ,STATEVAL=xstateval¨                    * 00052600
*                   !    Ý,UDATAVAL=»xudataval!ALL_ZEROESº¨           * 00052700
*                   !   ÐÝ,RDATA=UNCHANGED¨                           * 00052800
*                   !   ÔÝ,RDATA=DELETE¨                              * 00052900
*                   !   ¿Ý,RDATA=WRITE                                * 00053000
*                   !         ,RDATAVAL=xrdataval                     * 00053100
*                   !         ,ENTRYID=xentryid                       * 00053200
*                   !        Ý,ENTRYCOUNT=xentrycount¨                * 00053300
*                   !        Ý,ALLOWUSERSV=»xallowusersv!0º¨¨         * 00053400
*                   !   ÐÝ,MODE=SYNCSUSPEND¨                          * 00053500
*                   !   ÔÝ,MODE=SYNCEXIT¨                             * 00053600
*                   !   ÔÝ,MODE=SYNCFAIL                              * 00053700
*                   !   !    Ý,SYNCFAILDELAY=»xsyncfaildelay!0º¨¨     * 00053800
*                   !   ¿Ý,MODE=VALUE                                 * 00053900
*                   !         ,MODEVAL=xmodeval                       * 00054000
*                   !        Ý,SYNCFAILDELAY=»xsyncfaildelay!0º¨¨     * 00054100
*                   !    Ý,CRITICALREQUEST=»xcriticalrequest!0º¨      * 00054200
*                   !    Ý,ADUPREQSEQNUM=xadupreqseqnum¨              * 00054300
*                   Ô ,REQUEST=RELEASE                                * 00054400
*                   !     ,RNAME=xrname                               * 00054500
*                   !    Ý,RNAMELEN=»xrnamelen!NO_RNAMELENº¨          * 00054600
*                   !     ,HASHVAL=xhashval                           * 00054700
*                   !    Ý,UDATAVAL=»xudataval!ALL_ZEROESº¨           * 00054800
*                   !   ÐÝ,RDATA=DELETE¨                              * 00054900
*                   !   ¿Ý,RDATA=KEEP                                 * 00055000
*                   !       ÐÝ,UPDATERDATA=NO¨                        * 00055100
*                   !       ¿Ý,UPDATERDATA=YES                        * 00055200
*                   !             ,RDATAVAL=xrdataval¨¨               * 00055300
*                   !   ÐÝ,MODE=SYNCSUSPEND¨                          * 00055400
*                   !   ÔÝ,MODE=SYNCEXIT¨                             * 00055500
*                   !   ÔÝ,MODE=NORESPONSE¨                           * 00055600
*                   !   ¿Ý,MODE=VALUE                                 * 00055700
*                   !         ,MODEVAL=xmodeval¨                      * 00055800
*                   !    Ý,ADUPREQSEQNUM=xadupreqseqnum¨              * 00055900
*                   ¿ ,REQUEST=PROCESSMULT                            * 00056000
*                         ,REQBUFFER=xreqbuffer                       * 00056100
*                         ,REQNUM=xreqnum                             * 00056200
*                        Ý,REQVERSION=»xreqversion!0º¨                * 00056300
*                        Ý,REQPROC=xreqproc¨                          * 00056400
*                       ÐÝ,MODE=SYNCSUSPEND¨                          * 00056500
*                       ÔÝ,MODE=NORESPONSE¨                           * 00056600
*                       ¿Ý,MODE=VALUE                                 * 00056700
*                             ,MODEVAL=xmodeval¨                      * 00056800
*                    Ý,RETCODE=xretcode¨                              * 00056900
*                    Ý,RSNCODE=xrsncode¨                              * 00057000
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00057100
*                   ÐÝ,MF=S¨                                          * 00057200
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00057300
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*      Where:                                                         * 00057700
*                                                                     * 00057800
*                                                                     * 00057900
*      Ýxlabel¨                                                       * 00058000
*          is an optional symbol, starting in column 1, that is the   * 00058100
*          name on the IXLLOCK macro invocation.  The name must       * 00058200
*          conform to the rules for an ordinary assembler language    * 00058300
*          symbol.                                                    * 00058400
*          DEFAULT: No name.                                          * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*      CONTOKEN=xcontoken                                             * 00059000
*          is the name (RS-type), or address in register (2)-(12), of * 00059100
*          a required 16 character input field that contains the      * 00059200
*          CONNECT token returned in the answer area by the IXLCONN   * 00059300
*          service. The CONTOKEN uniquely identifies the user's       * 00059400
*          connection to a lock structure.                            * 00059500
*                                                                     * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*      REQUEST=»OBTAIN!ALTER!RELEASE!PROCESSMULTº                     * 00060000
*          is a required keyword input that indicates the type of     * 00060100
*          operation requested.                                       * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*          REQUEST=OBTAIN                                             * 00060500
*              specifies that the connected user is requesting to     * 00060600
*              obtain ownership of the resource identified by the     * 00060700
*              input Resource Name, Length, and Hash Value.           * 00060800
*                                                                     * 00060900
*                                                                     * 00061000
*              RNAME=xrname                                           * 00061100
*                  is the name (RS-type), or address in register      * 00061200
*                  (2)-(12), of a required character input containing * 00061300
*                  the resource name for which this request is being  * 00061400
*                  processed. The resource name and length along with * 00061500
*                  the hash value serve to fully qualify an IXLLOCK   * 00061600
*                  resource.                                          * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*              ÝRNAMELEN=»xrnamelen!NO_RNAMELENº¨                     * 00062200
*                  is the name (RS-type), or address in register      * 00062300
*                  (2)-(12), of an optional fullword input that       * 00062400
*                  specifies the length in bytes of the resource name * 00062500
*                  for which this request is being processed. The     * 00062600
*                  resource name and length along with the hash value * 00062700
*                  serve to fully qualify an IXLLOCK resource.        * 00062800
*                  Please note, the Rnamelen keyword is only valid    * 00062900
*                  for requests that are issued against a lock        * 00063000
*                  structure which has variable length resource names * 00063100
*                  in effect (see the RNAMELEN keyword on the IXLCONN * 00063200
*                  macro for details on allocating a lock structure   * 00063300
*                  with variable length resource names). Requests     * 00063400
*                  which specify this keyword against lock structures * 00063500
*                  which do not have variable length resource names   * 00063600
*                  in effect will be rejected with return and reason  * 00063700
*                  codes indicating the error.  When specified, the   * 00063800
*                  value supplied for RNAMELEN must be between 1 and  * 00063900
*                  300 inclusive. When the RNAMELEN keyword is not    * 00064000
*                  specified the length of the resource name defaults * 00064100
*                  to 64 bytes.                                       * 00064200
*                  DEFAULT: NO_RNAMELEN                               * 00064300
*                                                                     * 00064400
*                                                                     * 00064500
*                                                                     * 00064600
*                                                                     * 00064700
*              HASHVAL=xhashval                                       * 00064800
*                  is the name (RS-type), or address in register      * 00064900
*                  (2)-(12), of a required fullword input that        * 00065000
*                  specifies the hash value associated with the       * 00065100
*                  resource name.  The hash value along with the      * 00065200
*                  resource name and length serve to fully qualify an * 00065300
*                  IXLLOCK resource.  The method of producing the     * 00065400
*                  hash value is completely at the discretion of the  * 00065500
*                  connected user.  Typically, the value provided for * 00065600
*                  this keyword is the output of a user-defined       * 00065700
*                  hashing algorithm that receives a Resource name as * 00065800
*                  input.                                             * 00065900
*                                                                     * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*              ÝLOCKDATA=»xlockdata!ALL_ZEROESº¨                      * 00066400
*                  is the name (RS-type), or address in register      * 00066500
*                  (2)-(12), of an optional 8 character input         * 00066600
*                  variable that contains user-defined data to be     * 00066700
*                  associated with this resource.  The contents of    * 00066800
*                  LOCKDATA is at the discretion of the connected     * 00066900
*                  user and has no meaning to the system.  The        * 00067000
*                  associated LOCKDATA is presented to this connected * 00067100
*                  user's COMPLETE exit if the OBTAIN request is      * 00067200
*                  processed asynchronously. The LOCKDATA is also     * 00067300
*                  presented to the COMPLETE and NOTIFY exits as they * 00067400
*                  are invoked to inform the user of subsequent       * 00067500
*                  updates (i.e. Completion of requests to alter this * 00067600
*                  resource) and status regarding the owned resource. * 00067700
*                  DEFAULT: ALL_ZEROES                                * 00067800
*                                                                     * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*              ÝSTATE=»SHR!EXCL!VALUEº¨                               * 00068300
*                  is an optional keyword input indicating the STATE  * 00068400
*                  in which the connected user is requesting to own   * 00068500
*                  the resource. Please note, the OBTAIN request may  * 00068600
*                  be granted by the CONTENTION exit with a STATE     * 00068700
*                  different than what was requested.  If a user's    * 00068800
*                  protocol is exploiting the capability for the      * 00068900
*                  CONTENTION exit to grant requests with a STATE     * 00069000
*                  different than requested, it is recommended that   * 00069100
*                  STATE(VALUE) be specified for this option to       * 00069200
*                  insure that an output variable will be available   * 00069300
*                  to contain the resultant state when request        * 00069400
*                  completion is reported synchronously.              * 00069500
*                  DEFAULT: SHR                                       * 00069600
*                                                                     * 00069700
*                                                                     * 00069800
*                  ÝSTATE=SHR¨                                        * 00069900
*                      specifies that the connected user is           * 00070000
*                      requesting to own the resource in a shared     * 00070100
*                      state.                                         * 00070200
*                                                                     * 00070300
*                  ÝSTATE=EXCL¨                                       * 00070400
*                      specifies that the connected user is           * 00070500
*                      requesting to own the resource in an exclusive * 00070600
*                      state.                                         * 00070700
*                                                                     * 00070800
*                  ÝSTATE=VALUE                                       * 00070900
*                      The user will provide a value, via the         * 00071000
*                      STATEVAL keyword, indicating the requested     * 00071100
*                      ownership state.                               * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*                      STATEVAL=xstateval¨                            * 00071500
*                          is the name (RS-type), or address in       * 00071600
*                          register (2)-(12), of a required byte      * 00071700
*                          input/output variable that contains a      * 00071800
*                          value indicating the desired ownership     * 00071900
*                          state.  The value provided must be         * 00072000
*                          equivalent to the constants provided in    * 00072100
*                          the IXLYCON macro indicating Shared or     * 00072200
*                          Exclusive state. (See IXLSTATE...          * 00072300
*                          constants in the IXLYCON macro for more    * 00072400
*                          information). Please note, if a value      * 00072500
*                          other than the IXLYCON constants for       * 00072600
*                          Shared or Exclusive is specified, the      * 00072700
*                          resource will be requested in the default  * 00072800
*                          STATE of Share.                            * 00072900
*                                                                     * 00073000
*                          Upon successful, synchronous request       * 00073100
*                          completion, the input variable will        * 00073200
*                          contain the state in which ownership of    * 00073300
*                          the resource was granted.                  * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                                                                     * 00073800
*                                                                     * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*              ÝUDATAVAL=»xudataval!ALL_ZEROESº¨                      * 00074300
*                  is the name (RS-type), or address in register      * 00074400
*                  (2)-(12), of an optional 64 character input/output * 00074500
*                  variable that contains user-defined data to be     * 00074600
*                  associated with the resource.  The contents of     * 00074700
*                  UDATAVAL is at the discretion of the connected     * 00074800
*                  user and has no meaning to the system.  Please     * 00074900
*                  note, the contents of the UDATAVAL may be modified * 00075000
*                  by the CONTENTION exit as part of granting or      * 00075100
*                  denying the request.                               * 00075200
*                                                                     * 00075300
*                  If request completion is reported to the connected * 00075400
*                  user synchronously, the input variable (if         * 00075500
*                  specified) will contain the resultant user data    * 00075600
*                  value.                                             * 00075700
*                  DEFAULT: ALL_ZEROES                                * 00075800
*                                                                     * 00075900
*                                                                     * 00076000
*                                                                     * 00076100
*                                                                     * 00076200
*              ÝRDATA=»NORDATA!WRITE!REACQUIREº                       * 00076300
*                  is an optional keyword input that specifies what   * 00076400
*                  record data operation, if any, is to be performed  * 00076500
*                  as part of obtaining the specified resource.       * 00076600
*                  Please note, specification of the WRITE or         * 00076700
*                  REACQUIRE options will result in a parameter error * 00076800
*                  if the lock structure indicated by the input       * 00076900
*                  CONTOKEN does not provide recording capabilities.  * 00077000
*                  DEFAULT: NORDATA                                   * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*                  ÝRDATA=NORDATA¨                                    * 00077400
*                      indicates that no record data entry is to be   * 00077500
*                      allocated and associated with the specified    * 00077600
*                      resource.                                      * 00077700
*                                                                     * 00077800
*                  ÝRDATA=WRITE                                       * 00077900
*                      indicates to allocate a record data entry to   * 00078000
*                      be associated with the owned resource.  Note   * 00078100
*                      that the record data entry will be created     * 00078200
*                      with a record data type (RDATATYPE) of zero.   * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*                      RDATAVAL=xrdataval                             * 00078600
*                          is the name (RS-type), or address in       * 00078700
*                          register (2)-(12), of a required 64        * 00078800
*                          character input/output variable that       * 00078900
*                          contains user-defined data to be written   * 00079000
*                          to the record data entry. The contents of  * 00079100
*                          RDATAVAL is at the discretion of the       * 00079200
*                          connected user and has no meaning to the   * 00079300
*                          system.  The CONTENTION exit may modify    * 00079400
*                          the value that is to be written to the     * 00079500
*                          record data entry as part of granting the  * 00079600
*                          request.                                   * 00079700
*                                                                     * 00079800
*                          If completion of the OBTAIN request is     * 00079900
*                          presented to the user synchronously, the   * 00080000
*                          input variable will contain the resultant  * 00080100
*                          record data value.                         * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*                                                                     * 00080500
*                                                                     * 00080600
*                      ÝENTRYID=xentryid¨                             * 00080700
*                          is the name (RS-type), or address in       * 00080800
*                          register (2)-(12), of an optional 12       * 00080900
*                          character output variable which will upon  * 00081000
*                          successful, synchronous request completion * 00081100
*                          contain the unique identifier assigned to  * 00081200
*                          the record data entry. If the request is   * 00081300
*                          unsuccessful or being processed            * 00081400
*                          asynchronously (in which case the results  * 00081500
*                          will be presented to the user's COMPLETE   * 00081600
*                          exit) the content of this output variable  * 00081700
*                          is not valid.                              * 00081800
*                                                                     * 00081900
*                                                                     * 00082000
*                                                                     * 00082100
*                                                                     * 00082200
*                      ÝENTRYCOUNT=xentrycount¨                       * 00082300
*                          is the name (RS-type), or address in       * 00082400
*                          register (2)-(12), of an optional fullword * 00082500
*                          output variable that upon successful,      * 00082600
*                          synchronous request completion contains    * 00082700
*                          the number of record data entries in the   * 00082800
*                          structure which are currently in-use. This * 00082900
*                          value is analogous to the IXLYAMDSTRL_LSEC * 00083000
*                          field that is returned by the XES          * 00083100
*                          Accounting and Measurement service, IXLMG. * 00083200
*                          The value returned in the ENTRYCOUNT area  * 00083300
*                          can be used in conjunction with the value  * 00083400
*                          indicating the maximum number of record    * 00083500
*                          data entries which is supported by the     * 00083600
*                          allocated Lock Structure to monitor        * 00083700
*                          structure capacity and anticipate          * 00083800
*                          "structure full" conditions.  The maximum  * 00083900
*                          number of record data entries supported by * 00084000
*                          the lock structure is returned in the      * 00084100
*                          answer area by the IXLCONN service and is  * 00084200
*                          also retrievable via the IXLMG service.    * 00084300
*                          Please note, if the request is             * 00084400
*                          unsuccessful or being processed            * 00084500
*                          asynchronously (in which case the results  * 00084600
*                          will be presented to the user's COMPLETE   * 00084700
*                          exit) the content of this output variable  * 00084800
*                          is not valid.                              * 00084900
*                                                                     * 00085000
*                                                                     * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*                      ÝALLOWUSERSV=»xallowusersv!0º¨¨                * 00085400
*                          is the name (RS-type), or address in       * 00085500
*                          register (2)-(12), of an optional byte     * 00085600
*                          input which indicates whether to allow a   * 00085700
*                          request that attempts to create a record   * 00085800
*                          data entry to proceed if the resulting     * 00085900
*                          percentage of free (unused) entries at the * 00086000
*                          completion of the request would be less    * 00086100
*                          than the established percent entry         * 00086200
*                          reserved threshold (if any) for the        * 00086300
*                          structure.                                 * 00086400
*                                                                     * 00086500
*                          The ALLOWUSERSV parameter is meaningful    * 00086600
*                          only when the PCTENTRYRSV parameter is     * 00086700
*                          used on an IXLCONN service invocation to   * 00086800
*                          establish a non-zero percent entry         * 00086900
*                          reserved threshold for the lock structure  * 00087000
*                          and the lock structure is allocated in a   * 00087100
*                          CFLEVEL=25 or higher coupling facility.    * 00087200
*                                                                     * 00087300
*                          A value of 0 (IxlLockAllowUseRsvNo)        * 00087400
*                          indicates that if request processing       * 00087500
*                          creates an entry and the resulting         * 00087600
*                          percentage of free entries at the          * 00087700
*                          completion of the request would be less    * 00087800
*                          than the established percent entry         * 00087900
*                          reserved threshold for the structure, the  * 00088000
*                          request is not permitted to create the     * 00088100
*                          record data entry and the request will     * 00088200
*                          fail with a return code of                 * 00088300
*                          IxlRetCodeEnvError, reason code of         * 00088400
*                          IxlRsnCodeRtFull.                          * 00088500
*                                                                     * 00088600
*                          A value of 1 (IxlLockAllowUseRsvYes)       * 00088700
*                          indicates that the established percent     * 00088800
*                          entry reserved threshold for the structure * 00088900
*                          should be ignored for this request and an  * 00089000
*                          entry should be created as long as there   * 00089100
*                          is a free record data entry to satisfy the * 00089200
*                          request.  Use IxlLockAllowUseRsvYes as the * 00089300
*                          value for AllowUseRsv during application   * 00089400
*                          and connector recovery scenarios when      * 00089500
*                          using reserve to create a record data      * 00089600
*                          entry is deemed necessary.                 * 00089700
*                                                                     * 00089800
*                          Any other specified value will have the    * 00089900
*                          same behavior as specifying a value of 0   * 00090000
*                          (IxlLockAllowUseRsvNo).                    * 00090100
*                                                                     * 00090200
*                          DEFAULT: 0                                 * 00090300
*                                                                     * 00090400
*                                                                     * 00090500
*                                                                     * 00090600
*                  ÝRDATA=REACQUIRE                                   * 00090700
*                      indicates to reacquire the record data entry   * 00090800
*                      identified by the ENTRYID keyword. Although    * 00090900
*                      the use of this option is not limited to       * 00091000
*                      recovery scenarios, it is intended to aid in   * 00091100
*                      recovery of resources during such instances.   * 00091200
*                      For example...                                 * 00091300
*                                                                     * 00091400
*                                                                     * 00091500
*                      o   Upon re-connecting, a previously           * 00091600
*                          failed-persistent connected user of        * 00091700
*                          locking services may re-obtain resources   * 00091800
*                          that were held by its previous instance    * 00091900
*                          and reacquire the existing record table    * 00092000
*                          entries to be associated with the new      * 00092100
*                          instances of ownership. The user could     * 00092200
*                          potentially use the UPDATERDATA suboption  * 00092300
*                          to update the contents of the reacquired   * 00092400
*                          record data entries to reflect updated     * 00092500
*                          state information.                         * 00092600
*                                                                     * 00092700
*                      o   A connected user of locking services fails * 00092800
*                          such that the related surviving users wish * 00092900
*                          to recover the resources held by the       * 00093000
*                          failing user. The survivors may wish to    * 00093100
*                          obtain the specified resources while       * 00093200
*                          reacquiring the associated record data     * 00093300
*                          entries from the failed connector. The     * 00093400
*                          surviving connectors could potentially     * 00093500
*                          exploit the CONID suboption to coordinate  * 00093600
*                          their processing.                          * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*                                                                     * 00094100
*                      ENTRYID=xentryid                               * 00094200
*                          is the name (RS-type), or address in       * 00094300
*                          register (2)-(12), of a required 12        * 00094400
*                          character input variable containing the    * 00094500
*                          unique identifier of the record data entry * 00094600
*                          to be reacquired.  The entry with this     * 00094700
*                          identifier must already exist. Information * 00094800
*                          about Record data Entries (including entry * 00094900
*                          identifiers) is retrievable via the XES    * 00095000
*                          Record Table service, IXLRT.               * 00095100
*                                                                     * 00095200
*                                                                     * 00095300
*                                                                     * 00095400
*                                                                     * 00095500
*                      ÝCONID=»xconid!NO_CONIDº¨                      * 00095600
*                          is the name (RS-type), or address in       * 00095700
*                          register (2)-(12), of an optional byte     * 00095800
*                          input variable that contains the           * 00095900
*                          connection identifier that is to be used   * 00096000
*                          to identify the connection from whom the   * 00096100
*                          record data entry is being reacquired. If  * 00096200
*                          the record data entry designated by the    * 00096300
*                          ENTRYID keyword is not associated with the * 00096400
*                          connection specified by the CONID keyword, * 00096500
*                          the IXLLOCK request will fail.  When a     * 00096600
*                          record data entry is successfully          * 00096700
*                          reacquired, it will become associated with * 00096800
*                          the reacquiring connected user.            * 00096900
*                          DEFAULT: NO_CONID                          * 00097000
*                                                                     * 00097100
*                                                                     * 00097200
*                                                                     * 00097300
*                                                                     * 00097400
*                      ÝUPDATERDATA=»NO!YESº¨¨                        * 00097500
*                          is an optional keyword input that          * 00097600
*                          indicates whether to update the contents   * 00097700
*                          of the record data entry at the time it is * 00097800
*                          reacquired.                                * 00097900
*                          DEFAULT: NO                                * 00098000
*                                                                     * 00098100
*                                                                     * 00098200
*                          ÝUPDATERDATA=NO¨                           * 00098300
*                              indicates to not update the record     * 00098400
*                              data entry                             * 00098500
*                                                                     * 00098600
*                          ÝUPDATERDATA=YES                           * 00098700
*                              indicates to update the record data    * 00098800
*                              entry with the data specified by the   * 00098900
*                              RDATAVAL keyword                       * 00099000
*                                                                     * 00099100
*                                                                     * 00099200
*                              RDATAVAL=xrdataval¨¨                   * 00099300
*                                  is the name (RS-type), or address  * 00099400
*                                  in register (2)-(12), of a         * 00099500
*                                  required 64 character input/output * 00099600
*                                  variable that contains             * 00099700
*                                  user-defined data to be written to * 00099800
*                                  the record data entry. The         * 00099900
*                                  contents of RDATAVAL is at the     * 00100000
*                                  discretion of the connected user   * 00100100
*                                  and has no meaning to the system.  * 00100200
*                                  The CONTENTION exit may modify the * 00100300
*                                  value that is to be written to the * 00100400
*                                  record data entry as part of       * 00100500
*                                  granting the request.              * 00100600
*                                                                     * 00100700
*                                  If completion of the request is    * 00100800
*                                  presented to the user              * 00100900
*                                  synchronously, the input variable  * 00101000
*                                  will contain the resultant record  * 00101100
*                                  data value.                        * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                                                                     * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*                                                                     * 00102400
*              ÝMODE=»SYNCSUSPEND!SYNCEXIT!SYNCFAIL!VALUEº¨           * 00102500
*                  is an optional keyword input that specifies how    * 00102600
*                  the request should be processed if it is not able  * 00102700
*                  to be serviced immediately. If the request is able * 00102800
*                  to be processed immediately, the MODE keyword is   * 00102900
*                  ignored and control is returned to the invoker     * 00103000
*                  with all information regarding the completed       * 00103100
*                  request.                                           * 00103200
*                  DEFAULT: SYNCSUSPEND                               * 00103300
*                                                                     * 00103400
*                                                                     * 00103500
*                  ÝMODE=SYNCSUSPEND¨                                 * 00103600
*                      requests that the OBTAIN request be processed  * 00103700
*                      synchronously.  Control is not returned to the * 00103800
*                      invoker until the request is complete.  If     * 00103900
*                      necessary the caller will be suspended until   * 00104000
*                      the request completes.                         * 00104100
*                                                                     * 00104200
*                  ÝMODE=SYNCEXIT¨                                    * 00104300
*                      requests that the OBTAIN request be processed  * 00104400
*                      asynchronously.  Return and reason codes are   * 00104500
*                      returned to the invoker indicating that the    * 00104600
*                      request will be processed in this manner.      * 00104700
*                      Request completion is reported via the         * 00104800
*                      connected user's Complete Exit.  The connected * 00104900
*                      user-specified COMPLETE exit may be  given     * 00105000
*                      control before  control  returns  to the next  * 00105100
*                      sequential instruction after the connected     * 00105200
*                      user's IXLLOCK request.                        * 00105300
*                                                                     * 00105400
*                  ÝMODE=SYNCFAIL                                     * 00105500
*                      requests that the OBTAIN request be cancelled. * 00105600
*                      Return and reason codes are returned to the    * 00105700
*                      invoker indicating that the request was unable * 00105800
*                      to be processed without delays.                * 00105900
*                                                                     * 00106000
*                                                                     * 00106100
*                      ÝSYNCFAILDELAY=»xsyncfaildelay!0º¨¨            * 00106200
*                          is the name (RS-type), or address in       * 00106300
*                          register (2)-(12), of an optional byte     * 00106400
*                          input which further qualifies how to       * 00106500
*                          handle delay conditions for MODE(SYNCFAIL) * 00106600
*                          requests.  The IxlSyncFailDelayForLatchNo  * 00106700
*                          and IxlSyncFailDelayForLatchYes constants  * 00106800
*                          declared in IXLYCON are available to       * 00106900
*                          supply this value.                         * 00107000
*                                                                     * 00107100
*                          A value of 0 (IxlSyncFailDelayForLatchNo)  * 00107200
*                          specifies that if the request encounters   * 00107300
*                          delays for internal XES serialization, it  * 00107400
*                          will be cancelled with the                 * 00107500
*                          IxlRetCodeEnvError (x'0C') return code and * 00107600
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00107700
*                                                                     * 00107800
*                          A value of 1 (IxlSyncFailDelayForLatchYes) * 00107900
*                          specifies that if the request encounters   * 00108000
*                          delays for internal XES serialization, it  * 00108100
*                          will NOT be cancelled with the             * 00108200
*                          IxlRetCodeEnvError (x'0C') return code and * 00108300
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00108400
*                                                                     * 00108500
*                          Note that IXLCONN ALLOWAUTO(YES)           * 00108600
*                          SUSPEND(YES) behavior is not changed as    * 00108700
*                          part of the SYNCFAILDELAY specification.   * 00108800
*                          If the system receives an IXLLOCK OBTAIN   * 00108900
*                          or ALTER SYNCFAIL request while the target * 00109000
*                          structure is delayed because of            * 00109100
*                          system-managed rebuild processing, the     * 00109200
*                          request is not deferred regardless of what * 00109300
*                          is specified for SYNCFAILDELAY. The system * 00109400
*                          will fail the request with the             * 00109500
*                          IxlRsnCodeNoDelay reason code.             * 00109600
*                          DEFAULT: 0                                 * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*                                                                     * 00110000
*                  ÝMODE=VALUE                                        * 00110100
*                      The user will provide a value, via the MODEVAL * 00110200
*                      keyword, indicating the requested mode.        * 00110300
*                                                                     * 00110400
*                                                                     * 00110500
*                      MODEVAL=xmodeval                               * 00110600
*                          is the name (RS-type), or address in       * 00110700
*                          register (2)-(12), of a required byte      * 00110800
*                          input variable that contains a value       * 00110900
*                          indicating the desired mode.  The value    * 00111000
*                          provided must be equivalent to the         * 00111100
*                          constants provided in the IXLYCON macro    * 00111200
*                          indicating the mode.  (See IXLMODE...      * 00111300
*                          constants in the IXLYCON macro for more    * 00111400
*                          information).                              * 00111500
*                                                                     * 00111600
*                                                                     * 00111700
*                                                                     * 00111800
*                                                                     * 00111900
*                      ÝSYNCFAILDELAY=»xsyncfaildelay!0º¨¨            * 00112000
*                          is the name (RS-type), or address in       * 00112100
*                          register (2)-(12), of an optional byte     * 00112200
*                          input which further qualifies how to       * 00112300
*                          handle delay conditions for MODE(VALUE)    * 00112400
*                          MODEVAL(IxlModeSyncFail) requests.  This   * 00112500
*                          option is ignored for all other types of   * 00112600
*                          requests.  The IxlSyncFailDelayForLatchNo  * 00112700
*                          and IxlSyncFailDelayForLatchYes constants  * 00112800
*                          declared in IXLYCON are available to       * 00112900
*                          supply this value.  This option only has   * 00113000
*                          meaning when MODEVAL(IxlModeSyncFail) is   * 00113100
*                          also specified.                            * 00113200
*                                                                     * 00113300
*                          A value of 0 (IxlSyncFailDelayForLatchNo)  * 00113400
*                          specifies that if the request encounters   * 00113500
*                          delays for internal XES serialization, it  * 00113600
*                          will be cancelled with the                 * 00113700
*                          IxlRetCodeEnvError (x'0C') return code and * 00113800
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00113900
*                                                                     * 00114000
*                          A value of 1 (IxlSyncFailDelayForLatchYes) * 00114100
*                          specifies that if the request encounters   * 00114200
*                          delays for internal XES serialization, it  * 00114300
*                          will NOT be cancelled with the             * 00114400
*                          IxlRetCodeEnvError (x'0C') return code and * 00114500
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00114600
*                                                                     * 00114700
*                          Note that IXLCONN ALLOWAUTO(YES)           * 00114800
*                          SUSPEND(YES) behavior is not changed as    * 00114900
*                          part of the SYNCFAILDELAY specification.   * 00115000
*                          If the system receives an IXLLOCK OBTAIN   * 00115100
*                          or ALTER SYNCFAIL request while the target * 00115200
*                          structure is delayed because of            * 00115300
*                          system-managed rebuild processing, the     * 00115400
*                          request is not deferred regardless of what * 00115500
*                          is specified for SYNCFAILDELAY. The system * 00115600
*                          will fail the request with the             * 00115700
*                          IxlRsnCodeNoDelay reason code.             * 00115800
*                          DEFAULT: 0                                 * 00115900
*                                                                     * 00116000
*                                                                     * 00116100
*                                                                     * 00116200
*                                                                     * 00116300
*                                                                     * 00116400
*                                                                     * 00116500
*                                                                     * 00116600
*                                                                     * 00116700
*              ÝCRITICALREQUEST=»xcriticalrequest!0º¨                 * 00116800
*                  is the name (RS-type), or address in register      * 00116900
*                  (2)-(12), of an optional byte input which          * 00117000
*                  indicates if monitoring of storage is to be        * 00117100
*                  honored for this request.  The                     * 00117200
*                  IxllockCriticalRequestNo and                       * 00117300
*                  IxllockCriticalRequestYes constants declared in    * 00117400
*                  IXLYCON are available to supply this value.  This  * 00117500
*                  option only has meaning when MONITORSTORAGE=1      * 00117600
*                  (IxlconnMonitorStorageYes) is also specified on    * 00117700
*                  the IXLCONN request.                               * 00117800
*                                                                     * 00117900
*                  A value of 0 (IxllockCriticalRequestNo) specifies  * 00118000
*                  to monitor storage usage whenever MONITORSTORAGE=1 * 00118100
*                  (IxlconnMonitorStorageYes) is also specified on    * 00118200
*                  the IXLCONN request. When the amount of in-use     * 00118300
*                  storage reaches a preestablished threshold, the    * 00118400
*                  request will be rejected with a return code of     * 00118500
*                  IxlRetCodeEnvError and a reason code of            * 00118600
*                  IxlRsnCodeResourcesConstrained.                    * 00118700
*                                                                     * 00118800
*                  A value of 1 (IxllockCriticalRequestYes) specifies * 00118900
*                  not to monitor storage usage.  Preestablished      * 00119000
*                  thresholds for the amount of in-use storage will   * 00119100
*                  be ignored for this request.  If this request      * 00119200
*                  exhausts connector-related control block storage,  * 00119300
*                  the XES storage manager will issue an ABEND        * 00119400
*                  x'026'.                                            * 00119500
*                                                                     * 00119600
*                  Any other specified value will have the same       * 00119700
*                  behavior as specifying a value of 0                * 00119800
*                  (IxllockCriticalRequestNo).                        * 00119900
*                  DEFAULT: 0                                         * 00120000
*                                                                     * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*              ÝADUPREQSEQNUM=xadupreqseqnum¨                         * 00120500
*                  is the name (RS-type), or address in register      * 00120600
*                  (2)-(12), of an optional 16 character output       * 00120700
*                  variable which may contain the asynchronous        * 00120800
*                  duplexing request sequence number assigned to this * 00120900
*                  request.  An asynchronous duplexing request        * 00121000
*                  sequence number is only generated for the request  * 00121100
*                  if                                                 * 00121200
*                                                                     * 00121300
*                                                                     * 00121400
*                  o   the request completes successfully, and        * 00121500
*                                                                     * 00121600
*                  o   the structure is duplexed by system-managed    * 00121700
*                      asynchronous duplexing when the request        * 00121800
*                      completes, and                                 * 00121900
*                                                                     * 00122000
*                  o   the request includes a record data update      * 00122100
*                      (write or reacquire), and                      * 00122200
*                                                                     * 00122300
*                  o   the request might not have been committed in   * 00122400
*                      the secondary instance of the structure        * 00122500
*                                                                     * 00122600
*                                                                     * 00122700
*                                                                     * 00122800
*                  If an asynchronous duplexing request sequence      * 00122900
*                  number is generated and the request returns with a * 00123000
*                  return code of IxlRetCodeOk, the asynchronous      * 00123100
*                  duplexing request sequence number will be returned * 00123200
*                  in the ADUPREQSEQNUM area. Otherwise the content   * 00123300
*                  of this output variable will be zero.              * 00123400
*                                                                     * 00123500
*                  If the request returns with a return code of       * 00123600
*                  IxlRetCodeWarning and a reason code of             * 00123700
*                  IxlRsnCodeAsynch, and the request specifies        * 00123800
*                  MODE=SYNCEXIT or MODEVAL=IXLMODESYNCEXIT, any      * 00123900
*                  asynchronous duplexing request sequence number     * 00124000
*                  generated upon successful completion will be       * 00124100
*                  presented to the user's COMPLETE exit.             * 00124200
*                                                                     * 00124300
*                  The asynchronous duplexing request sequence number * 00124400
*                  may be used on a subsequent invocation of IXLADUPX * 00124500
*                  to ensure the request is committed in the          * 00124600
*                  secondary instance of the asynchronously duplexed  * 00124700
*                  structure.                                         * 00124800
*                                                                     * 00124900
*                  Specifying ADUPREQSEQNUM will result in the        * 00125000
*                  generation of at least a version 4 parameter list. * 00125100
*                  A version 4 parameter list requires system-managed * 00125200
*                  asynchronous duplexing support. If a version 4     * 00125300
*                  parameter list is used on a system that does not   * 00125400
*                  support it, the request is rejected for the        * 00125500
*                  unsupported parameter list version                 * 00125600
*                  (IxlRsnCodeBadVersion#). Macro IXCYQUAA defines    * 00125700
*                  the QuReqRfAsyncDuplex bit in the QuReqFeatures    * 00125800
*                  string that can be used to test for system-managed * 00125900
*                  asynchronous duplexing support. Use IXCQUERY       * 00126000
*                  REQINFO=FEATURES to get the QuReqFeatures string.  * 00126100
*                                                                     * 00126200
*                                                                     * 00126300
*                                                                     * 00126400
*          REQUEST=ALTER                                              * 00126500
*              specifies that the connected user is requesting to     * 00126600
*              alter one or more of the attributes of a resource that * 00126700
*              it currently owns. The ALTER option may also be used   * 00126800
*              to replace a previous OBTAIN or ALTER request that is  * 00126900
*              currently pending on the CONTENTION exit resource      * 00127000
*              request queue with a more current request.             * 00127100
*                                                                     * 00127200
*                                                                     * 00127300
*              RNAME=xrname                                           * 00127400
*                  is the name (RS-type), or address in register      * 00127500
*                  (2)-(12), of a required character input containing * 00127600
*                  the name of the resource in which the user is      * 00127700
*                  requesting to Alter its interest.  The resource    * 00127800
*                  name and length along with the hash value serve to * 00127900
*                  fully qualify an IXLLOCK resource.                 * 00128000
*                                                                     * 00128100
*                                                                     * 00128200
*                                                                     * 00128300
*                                                                     * 00128400
*              ÝRNAMELEN=»xrnamelen!NO_RNAMELENº¨                     * 00128500
*                  is the name (RS-type), or address in register      * 00128600
*                  (2)-(12), of an optional fullword input that       * 00128700
*                  specifies the length in bytes of the resource name * 00128800
*                  for which this request is being processed. The     * 00128900
*                  resource name and length along with the hash value * 00129000
*                  serve to fully qualify an IXLLOCK resource.        * 00129100
*                  Please note, the Rnamelen keyword is only valid    * 00129200
*                  for requests that are issued against a lock        * 00129300
*                  structure which has variable length resource names * 00129400
*                  in effect (see the RNAMELEN keyword on the IXLCONN * 00129500
*                  macro for details on allocating a lock structure   * 00129600
*                  with variable length resource names). Requests     * 00129700
*                  which specify this keyword against lock structures * 00129800
*                  which do not have variable length resource names   * 00129900
*                  in effect will be rejected with return and reason  * 00130000
*                  codes indicating the error.  When specified, the   * 00130100
*                  value supplied for RNAMELEN must be between 1 and  * 00130200
*                  300 inclusive. When the RNAMELEN keyword is not    * 00130300
*                  specified the length of the resource name defaults * 00130400
*                  to 64 bytes.                                       * 00130500
*                  DEFAULT: NO_RNAMELEN                               * 00130600
*                                                                     * 00130700
*                                                                     * 00130800
*                                                                     * 00130900
*                                                                     * 00131000
*              HASHVAL=xhashval                                       * 00131100
*                  is the name (RS-type), or address in register      * 00131200
*                  (2)-(12), of a required fullword input that        * 00131300
*                  specifies the hash value associated with the       * 00131400
*                  resource name.  The hash value along with the      * 00131500
*                  resource name and length serves to fully qualify   * 00131600
*                  an IXLLOCK resource.  The method of producing the  * 00131700
*                  hash value is completely at the discretion of the  * 00131800
*                  connected user.  Typically, the value provided for * 00131900
*                  this keyword is the output of a user-defined       * 00132000
*                  hashing algorithm that receives a Resource name as * 00132100
*                  input.                                             * 00132200
*                                                                     * 00132300
*                                                                     * 00132400
*                                                                     * 00132500
*                                                                     * 00132600
*              ÝSTATE=»SHR!EXCL!VALUEº¨                               * 00132700
*                  is an optional keyword input indicating the STATE  * 00132800
*                  in which the connected user is requesting to own   * 00132900
*                  the resource. Please note, the ALTER request may   * 00133000
*                  be granted by the CONTENTION exit with a STATE     * 00133100
*                  different than what was requested.  If a user's    * 00133200
*                  protocol is exploiting the capability for the      * 00133300
*                  CONTENTION exit to grant a request with a STATE    * 00133400
*                  different than requested, it is recommended that   * 00133500
*                  STATE(VALUE) be specified for this option to       * 00133600
*                  insure that an output variable will be available   * 00133700
*                  to contain the resultant state when request        * 00133800
*                  completion is reported synchronously.              * 00133900
*                  DEFAULT: SHR                                       * 00134000
*                                                                     * 00134100
*                                                                     * 00134200
*                  ÝSTATE=SHR¨                                        * 00134300
*                      specifies that the connected user is           * 00134400
*                      requesting to own the resource in a shared     * 00134500
*                      state.                                         * 00134600
*                                                                     * 00134700
*                  ÝSTATE=EXCL¨                                       * 00134800
*                      specifies that the connected user is           * 00134900
*                      requesting to own the resource in an exclusive * 00135000
*                      state.                                         * 00135100
*                                                                     * 00135200
*                  ÝSTATE=VALUE                                       * 00135300
*                      The STATEVAL key was used, instead, to specify * 00135400
*                      the ownership state.                           * 00135500
*                                                                     * 00135600
*                                                                     * 00135700
*                      STATEVAL=xstateval¨                            * 00135800
*                          is the name (RS-type), or address in       * 00135900
*                          register (2)-(12), of a required byte      * 00136000
*                          input/output that specifies a value        * 00136100
*                          indicating the desired ownership state.    * 00136200
*                          The value of this field must be equivalent * 00136300
*                          to the constants provided in the IXLYCON   * 00136400
*                          macro indicating Shared or Exclusive       * 00136500
*                          state. (See IXLSTATE... constants in the   * 00136600
*                          IXLYCON macro for more information).       * 00136700
*                          Please note, if a value not equal to       * 00136800
*                          Shared or Exclusive is specified, the      * 00136900
*                          resource will be requested in the default  * 00137000
*                          STATE of Share.                            * 00137100
*                                                                     * 00137200
*                          If request completion is reported          * 00137300
*                          synchronously, the input variable will     * 00137400
*                          contain the state in which ownership of    * 00137500
*                          the resource was granted.                  * 00137600
*                                                                     * 00137700
*                                                                     * 00137800
*                                                                     * 00137900
*                                                                     * 00138000
*                                                                     * 00138100
*                                                                     * 00138200
*                                                                     * 00138300
*                                                                     * 00138400
*              ÝUDATAVAL=»xudataval!ALL_ZEROESº¨                      * 00138500
*                  is the name (RS-type), or address in register      * 00138600
*                  (2)-(12), of an optional 64 character input/output * 00138700
*                  variable that contains user-defined data to be     * 00138800
*                  associated with the resource.  The contents of     * 00138900
*                  UDATAVAL is at the discretion of the connected     * 00139000
*                  user and has no meaning to the system.  Please     * 00139100
*                  note, the contents of the UDATAVAL may be modified * 00139200
*                  by the CONTENTION exit as part of granting or      * 00139300
*                  denying the request.                               * 00139400
*                                                                     * 00139500
*                  If request completion is reported to the connected * 00139600
*                  user synchronously, the input variable (if         * 00139700
*                  specified) will contain the resultant user data    * 00139800
*                  value.                                             * 00139900
*                  DEFAULT: ALL_ZEROES                                * 00140000
*                                                                     * 00140100
*                                                                     * 00140200
*                                                                     * 00140300
*                                                                     * 00140400
*              ÝRDATA=»UNCHANGED!DELETE!WRITEº¨                       * 00140500
*                  is an optional keyword input that specifies what   * 00140600
*                  record data operation, if any, is to be performed  * 00140700
*                  as part of altering the specified resource.        * 00140800
*                  Please note, specification of the WRITE or DELETE  * 00140900
*                  options will result in a parameter error if the    * 00141000
*                  lock structure indicated by the input CONTOKEN     * 00141100
*                  does not provide recording capabilities.           * 00141200
*                  DEFAULT: UNCHANGED                                 * 00141300
*                                                                     * 00141400
*                                                                     * 00141500
*                  ÝRDATA=UNCHANGED¨                                  * 00141600
*                      indicates that the record data associated with * 00141700
*                      this resource, if any, is not to be changed.   * 00141800
*                                                                     * 00141900
*                  ÝRDATA=DELETE¨                                     * 00142000
*                      indicates to delete the record data entry      * 00142100
*                      associated with this resource. If no record    * 00142200
*                      data entry is currently allocated and          * 00142300
*                      associated with this resource, this keyword is * 00142400
*                      ignored.                                       * 00142500
*                                                                     * 00142600
*                  ÝRDATA=WRITE                                       * 00142700
*                      indicates to update the record data entry with * 00142800
*                      the data specified by the RDATAVAL keyword.    * 00142900
*                      If a record data entry is currently associated * 00143000
*                      with the resource, its contents will be        * 00143100
*                      updated. Otherwise a new entry will be         * 00143200
*                      allocated.  Note that, when a record data      * 00143300
*                      entry is created,  it will be created with a   * 00143400
*                      record data type (RDATATYPE) of zero.          * 00143500
*                                                                     * 00143600
*                                                                     * 00143700
*                      RDATAVAL=xrdataval                             * 00143800
*                          is the name (RS-type), or address in       * 00143900
*                          register (2)-(12), of a required 64        * 00144000
*                          character input/output variable that       * 00144100
*                          contains user-defined data to be written   * 00144200
*                          to the record data entry. The contents of  * 00144300
*                          RDATAVAL is at the discretion of the       * 00144400
*                          connected user and has no meaning to the   * 00144500
*                          system.  The CONTENTION exit may modify    * 00144600
*                          the value that is to be written to the     * 00144700
*                          record data entry as part of granting the  * 00144800
*                          request.                                   * 00144900
*                                                                     * 00145000
*                          If completion of the request is presented  * 00145100
*                          to the user synchronously, the input       * 00145200
*                          variable will contain the resultant record * 00145300
*                          data value.                                * 00145400
*                                                                     * 00145500
*                                                                     * 00145600
*                                                                     * 00145700
*                                                                     * 00145800
*                      ENTRYID=xentryid                               * 00145900
*                          is the name (RS-type), or address in       * 00146000
*                          register (2)-(12), of a required 12        * 00146100
*                          character output variable which will upon  * 00146200
*                          successful, synchronous request completion * 00146300
*                          contain the unique identifier assigned to  * 00146400
*                          the record data entry.  If a new record    * 00146500
*                          data entry was allocated by this request,  * 00146600
*                          the identifier indicates the newly         * 00146700
*                          allocated entry.  If the request resulted  * 00146800
*                          in the update of an existing record data   * 00146900
*                          entry that had been associated with this   * 00147000
*                          resource via a previous OBTAIN or ALTER    * 00147100
*                          request, the identifier indicates the      * 00147200
*                          updated entry.  If the request is          * 00147300
*                          unsuccessful or being processed            * 00147400
*                          asynchronously (in which case the results  * 00147500
*                          will be presented to the user's COMPLETE   * 00147600
*                          exit) the content of this output variable  * 00147700
*                          is not valid.                              * 00147800
*                                                                     * 00147900
*                                                                     * 00148000
*                                                                     * 00148100
*                                                                     * 00148200
*                      ÝENTRYCOUNT=xentrycount¨                       * 00148300
*                          is the name (RS-type), or address in       * 00148400
*                          register (2)-(12), of an optional fullword * 00148500
*                          output variable that contains the number   * 00148600
*                          of record data entries in the structure    * 00148700
*                          which are currently in-use.  This value is * 00148800
*                          only returned if a new record data entry   * 00148900
*                          was allocated by this request and its      * 00149000
*                          value is analogous to the IXLYAMDSTRL_LSEC * 00149100
*                          field that is returned by the XES          * 00149200
*                          Accounting and Measurement service, IXLMG. * 00149300
*                          The value returned in the ENTRYCOUNT area  * 00149400
*                          can be used in conjunction with the        * 00149500
*                          maximum number of record data entries      * 00149600
*                          supported by the Lock structure value to   * 00149700
*                          monitor capacity.  The maximum number of   * 00149800
*                          record data entries is returned in the     * 00149900
*                          answer area by the IXLCONN service and is  * 00150000
*                          also retrievable via the IXLMG service.    * 00150100
*                                                                     * 00150200
*                                                                     * 00150300
*                                                                     * 00150400
*                                                                     * 00150500
*                      ÝALLOWUSERSV=»xallowusersv!0º¨¨                * 00150600
*                          is the name (RS-type), or address in       * 00150700
*                          register (2)-(12), of an optional byte     * 00150800
*                          input which indicates whether to allow a   * 00150900
*                          request that attempts to create a record   * 00151000
*                          data entry to proceed if the resulting     * 00151100
*                          percentage of free (unused) entries at the * 00151200
*                          completion of the request would be less    * 00151300
*                          than the established percent entry         * 00151400
*                          reserved threshold (if any) for the        * 00151500
*                          structure.                                 * 00151600
*                                                                     * 00151700
*                          The ALLOWUSERSV parameter is meaningful    * 00151800
*                          only when the PCTENTRYRSV parameter is     * 00151900
*                          used on an IXLCONN service invocation to   * 00152000
*                          establish a non-zero percent entry         * 00152100
*                          reserved threshold for the lock structure  * 00152200
*                          and the lock structure is allocated in a   * 00152300
*                          CFLEVEL=25 or higher coupling facility.    * 00152400
*                                                                     * 00152500
*                          A value of 0 (IxlLockAllowUseRsvNo)        * 00152600
*                          indicates that if request processing       * 00152700
*                          creates an entry and the resulting         * 00152800
*                          percentage of free entries at the          * 00152900
*                          completion of the request would be less    * 00153000
*                          than the established percent entry         * 00153100
*                          reserved threshold for the structure, the  * 00153200
*                          request is not permitted to create the     * 00153300
*                          record data entry and the request will     * 00153400
*                          fail with a return code of                 * 00153500
*                          IxlRetCodeEnvError, reason code of         * 00153600
*                          IxlRsnCodeRtFull.                          * 00153700
*                                                                     * 00153800
*                          A value of 1 (IxlLockAllowUseRsvYes)       * 00153900
*                          indicates that the structure reserved      * 00154000
*                          entries percentage should be ignored for   * 00154100
*                          this request and an entry should be        * 00154200
*                          created as long as there is a free record  * 00154300
*                          data entry to satisfy the request.  Use    * 00154400
*                          IxlLockAllowUseRsvYes as the value for     * 00154500
*                          AllowUseRsv during application and         * 00154600
*                          connector recovery scenarios when using    * 00154700
*                          reserve to create a record data entry is   * 00154800
*                          deemed necessary.                          * 00154900
*                                                                     * 00155000
*                          Any other specified value will have the    * 00155100
*                          same behavior as specifying a value of 0   * 00155200
*                          (IxlLockAllowUseRsvNo).                    * 00155300
*                                                                     * 00155400
*                          DEFAULT: 0                                 * 00155500
*                                                                     * 00155600
*                                                                     * 00155700
*                                                                     * 00155800
*                                                                     * 00155900
*                                                                     * 00156000
*                                                                     * 00156100
*                                                                     * 00156200
*                                                                     * 00156300
*              ÝMODE=»SYNCSUSPEND!SYNCEXIT!SYNCFAIL!VALUEº¨           * 00156400
*                  is an optional keyword input that specifies how    * 00156500
*                  the request should be processed if it is not able  * 00156600
*                  to be serviced immediately. If the request is able * 00156700
*                  to be processed immediately, the MODE keyword is   * 00156800
*                  ignored and control is returned to the invoker     * 00156900
*                  with all information regarding the completed       * 00157000
*                  request.                                           * 00157100
*                  DEFAULT: SYNCSUSPEND                               * 00157200
*                                                                     * 00157300
*                                                                     * 00157400
*                  ÝMODE=SYNCSUSPEND¨                                 * 00157500
*                      requests that the ALTER request be processed   * 00157600
*                      synchronously.  Control is not returned to the * 00157700
*                      invoker until the request is complete.  If     * 00157800
*                      necessary the caller will be suspended until   * 00157900
*                      the request completes.                         * 00158000
*                                                                     * 00158100
*                  ÝMODE=SYNCEXIT¨                                    * 00158200
*                      requests that the ALTER request be processed   * 00158300
*                      asynchronously.  Return and reason codes are   * 00158400
*                      returned to the invoker indicating that the    * 00158500
*                      request will be processed in this manner.      * 00158600
*                      Request completion is reported via the         * 00158700
*                      connected user's Complete Exit.  The connected * 00158800
*                      user-specified COMPLETE exit may be  given     * 00158900
*                      control before  control  returns  to the next  * 00159000
*                      sequential instruction after the connected     * 00159100
*                      user's IXLLOCK request.                        * 00159200
*                                                                     * 00159300
*                  ÝMODE=SYNCFAIL                                     * 00159400
*                      requests that the ALTER request be cancelled.  * 00159500
*                      Return and reason codes are returned to the    * 00159600
*                      invoker indicating that the request was unable * 00159700
*                      to be processed without delays.                * 00159800
*                                                                     * 00159900
*                                                                     * 00160000
*                      ÝSYNCFAILDELAY=»xsyncfaildelay!0º¨¨            * 00160100
*                          is the name (RS-type), or address in       * 00160200
*                          register (2)-(12), of an optional byte     * 00160300
*                          input which further qualifies how to       * 00160400
*                          handle delay conditions for MODE(SYNCFAIL) * 00160500
*                          requests.  The IxlSyncFailDelayForLatchNo  * 00160600
*                          and IxlSyncFailDelayForLatchYes constants  * 00160700
*                          declared in IXLYCON are available to       * 00160800
*                          supply this value.                         * 00160900
*                                                                     * 00161000
*                          A value of 0 (IxlSyncFailDelayForLatchNo)  * 00161100
*                          specifies that if the request encounters   * 00161200
*                          delays for internal XES serialization, it  * 00161300
*                          will be cancelled with the                 * 00161400
*                          IxlRetCodeEnvError (x'0C') return code and * 00161500
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00161600
*                                                                     * 00161700
*                          A value of 1 (IxlSyncFailDelayForLatchYes) * 00161800
*                          specifies that if the request encounters   * 00161900
*                          delays for internal XES serialization, it  * 00162000
*                          will NOT be cancelled with the             * 00162100
*                          IxlRetCodeEnvError (x'0C') return code and * 00162200
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00162300
*                                                                     * 00162400
*                          Note that IXLCONN ALLOWAUTO(YES)           * 00162500
*                          SUSPEND(YES) behavior is not changed as    * 00162600
*                          part of the SYNCFAILDELAY specification.   * 00162700
*                          If the system receives an IXLLOCK OBTAIN   * 00162800
*                          or ALTER SYNCFAIL request while the target * 00162900
*                          structure is delayed because of            * 00163000
*                          system-managed rebuild processing, the     * 00163100
*                          request is not deferred regardless of what * 00163200
*                          is specified for SYNCFAILDELAY. The system * 00163300
*                          will fail the request with the             * 00163400
*                          IxlRsnCodeNoDelay reason code.             * 00163500
*                          DEFAULT: 0                                 * 00163600
*                                                                     * 00163700
*                                                                     * 00163800
*                                                                     * 00163900
*                  ÝMODE=VALUE                                        * 00164000
*                      The user will provide a value, via the MODEVAL * 00164100
*                      keyword, indicating the requested mode.        * 00164200
*                                                                     * 00164300
*                                                                     * 00164400
*                      MODEVAL=xmodeval                               * 00164500
*                          is the name (RS-type), or address in       * 00164600
*                          register (2)-(12), of a required byte      * 00164700
*                          input variable that contains a value       * 00164800
*                          indicating the desired mode.  The value    * 00164900
*                          provided must be equivalent to the         * 00165000
*                          constants provided in the IXLYCON macro    * 00165100
*                          indicating the mode.  (See IXLMODE...      * 00165200
*                          constants in the IXLYCON macro for more    * 00165300
*                          information).                              * 00165400
*                                                                     * 00165500
*                                                                     * 00165600
*                                                                     * 00165700
*                                                                     * 00165800
*                      ÝSYNCFAILDELAY=»xsyncfaildelay!0º¨¨            * 00165900
*                          is the name (RS-type), or address in       * 00166000
*                          register (2)-(12), of an optional byte     * 00166100
*                          input which further qualifies how to       * 00166200
*                          handle delay conditions for MODE(VALUE)    * 00166300
*                          MODEVAL(IxlModeSyncFail) requests.  This   * 00166400
*                          option is ignored for all other types of   * 00166500
*                          requests.  The IxlSyncFailDelayForLatchNo  * 00166600
*                          and IxlSyncFailDelayForLatchYes constants  * 00166700
*                          declared in IXLYCON are available to       * 00166800
*                          supply this value.  This option only has   * 00166900
*                          meaning when MODEVAL(IxlModeSyncFail) is   * 00167000
*                          also specified.                            * 00167100
*                                                                     * 00167200
*                          A value of 0 (IxlSyncFailDelayForLatchNo)  * 00167300
*                          specifies that if the request encounters   * 00167400
*                          delays for internal XES serialization, it  * 00167500
*                          will be cancelled with the                 * 00167600
*                          IxlRetCodeEnvError (x'0C') return code and * 00167700
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00167800
*                                                                     * 00167900
*                          A value of 1 (IxlSyncFailDelayForLatchYes) * 00168000
*                          specifies that if the request encounters   * 00168100
*                          delays for internal XES serialization, it  * 00168200
*                          will NOT be cancelled with the             * 00168300
*                          IxlRetCodeEnvError (x'0C') return code and * 00168400
*                          IxlRsnCodeNoDelay (x'0C69') reason code.   * 00168500
*                                                                     * 00168600
*                          Note that IXLCONN ALLOWAUTO(YES)           * 00168700
*                          SUSPEND(YES) behavior is not changed as    * 00168800
*                          part of the SYNCFAILDELAY specification.   * 00168900
*                          If the system receives an IXLLOCK OBTAIN   * 00169000
*                          or ALTER SYNCFAIL request while the target * 00169100
*                          structure is delayed because of            * 00169200
*                          system-managed rebuild processing, the     * 00169300
*                          request is not deferred regardless of what * 00169400
*                          is specified for SYNCFAILDELAY. The system * 00169500
*                          will fail the request with the             * 00169600
*                          IxlRsnCodeNoDelay reason code.             * 00169700
*                          DEFAULT: 0                                 * 00169800
*                                                                     * 00169900
*                                                                     * 00170000
*                                                                     * 00170100
*                                                                     * 00170200
*                                                                     * 00170300
*                                                                     * 00170400
*                                                                     * 00170500
*                                                                     * 00170600
*              ÝCRITICALREQUEST=»xcriticalrequest!0º¨                 * 00170700
*                  is the name (RS-type), or address in register      * 00170800
*                  (2)-(12), of an optional byte input which          * 00170900
*                  indicates if monitoring of storage is to be        * 00171000
*                  honored for this request.  The                     * 00171100
*                  IxllockCriticalRequestNo and                       * 00171200
*                  IxllockCriticalRequestYes constants declared in    * 00171300
*                  IXLYCON are available to supply this value.  This  * 00171400
*                  option only has meaning when MONITORSTORAGE=1      * 00171500
*                  (IxlconnMonitorStorageYes) is also specified on    * 00171600
*                  the IXLCONN request.                               * 00171700
*                                                                     * 00171800
*                  A value of 0 (IxllockCriticalRequestNo) specifies  * 00171900
*                  to monitor storage usage whenever MONITORSTORAGE=1 * 00172000
*                  (IxlconnMonitorStorageYes) is also specified on    * 00172100
*                  the IXLCONN request. When the amount of in-use     * 00172200
*                  storage reaches a preestablished threshold, the    * 00172300
*                  request will be rejected with a return code of     * 00172400
*                  IxlRetCodeEnvError and a reason code of            * 00172500
*                  IxlRsnCodeResourcesConstrained.                    * 00172600
*                                                                     * 00172700
*                  A value of 1 (IxllockCriticalRequestYes) specifies * 00172800
*                  not to monitor storage usage.  Preestablished      * 00172900
*                  thresholds for the amount of in-use storage will   * 00173000
*                  be ignored for this request.  If this request      * 00173100
*                  exhausts connector-related control block storage,  * 00173200
*                  the XES storage manager will issue an ABEND        * 00173300
*                  x'026'.                                            * 00173400
*                                                                     * 00173500
*                  Any other specified value will have the same       * 00173600
*                  behavior as specifying a value of 0                * 00173700
*                  (IxllockCriticalRequestNo).                        * 00173800
*                  DEFAULT: 0                                         * 00173900
*                                                                     * 00174000
*                                                                     * 00174100
*                                                                     * 00174200
*                                                                     * 00174300
*              ÝADUPREQSEQNUM=xadupreqseqnum¨                         * 00174400
*                  is the name (RS-type), or address in register      * 00174500
*                  (2)-(12), of an optional 16 character output       * 00174600
*                  variable which may contain the asynchronous        * 00174700
*                  duplexing request sequence number assigned to this * 00174800
*                  request.  An asynchronous duplexing request        * 00174900
*                  sequence number is only generated for the request  * 00175000
*                  if                                                 * 00175100
*                                                                     * 00175200
*                                                                     * 00175300
*                  o   the request completes successfully, and        * 00175400
*                                                                     * 00175500
*                  o   the structure is duplexed by system-managed    * 00175600
*                      asynchronous duplexing when the request        * 00175700
*                      completes, and                                 * 00175800
*                                                                     * 00175900
*                  o   the request includes a record data update      * 00176000
*                      (write or delete), and                         * 00176100
*                                                                     * 00176200
*                  o   the request might not have been committed in   * 00176300
*                      the secondary instance of the structure        * 00176400
*                                                                     * 00176500
*                                                                     * 00176600
*                                                                     * 00176700
*                  If an asynchronous duplexing request sequence      * 00176800
*                  number is generated and the request returns with a * 00176900
*                  return code of IxlRetCodeOk, the asynchronous      * 00177000
*                  duplexing request sequence number will be returned * 00177100
*                  in the ADUPREQSEQNUM area. Otherwise the content   * 00177200
*                  of this output variable will be zero.              * 00177300
*                                                                     * 00177400
*                  If the request returns with a return code of       * 00177500
*                  IxlRetCodeWarning and a reason code of             * 00177600
*                  IxlRsnCodeAsynch, and the request specifies        * 00177700
*                  MODE=SYNCEXIT or MODEVAL=IXLMODESYNCEXIT, any      * 00177800
*                  asynchronous duplexing request sequence number     * 00177900
*                  generated upon successful completion will be       * 00178000
*                  presented to the user's COMPLETE exit.             * 00178100
*                                                                     * 00178200
*                  The asynchronous duplexing request sequence number * 00178300
*                  may be used on a subsequent invocation of IXLADUPX * 00178400
*                  to ensure the request is committed in the          * 00178500
*                  secondary instance of the asynchronously duplexed  * 00178600
*                  structure.                                         * 00178700
*                                                                     * 00178800
*                  Specifying ADUPREQSEQNUM will result in the        * 00178900
*                  generation of at least a version 4 parameter list. * 00179000
*                  A version 4 parameter list requires system-managed * 00179100
*                  asynchronous duplexing support. If a version 4     * 00179200
*                  parameter list is used on a system that does not   * 00179300
*                  support it, the request is rejected for the        * 00179400
*                  unsupported parameter list version                 * 00179500
*                  (IxlRsnCodeBadVersion#). Macro IXCYQUAA defines    * 00179600
*                  the QuReqRfAsyncDuplex bit in the QuReqFeatures    * 00179700
*                  string that can be used to test for system-managed * 00179800
*                  asynchronous duplexing support. Use IXCQUERY       * 00179900
*                  REQINFO=FEATURES to get the QuReqFeatures string.  * 00180000
*                                                                     * 00180100
*                                                                     * 00180200
*                                                                     * 00180300
*          REQUEST=RELEASE                                            * 00180400
*              specifies that the connected user is requesting to     * 00180500
*              release ownership of the resource.                     * 00180600
*                                                                     * 00180700
*                                                                     * 00180800
*              RNAME=xrname                                           * 00180900
*                  is the name (RS-type), or address in register      * 00181000
*                  (2)-(12), of a required character input containing * 00181100
*                  the resource name for which this request is being  * 00181200
*                  processed. The resource name and length along with * 00181300
*                  the hash value serves to fully qualify an IXLLOCK  * 00181400
*                  resource.                                          * 00181500
*                                                                     * 00181600
*                                                                     * 00181700
*                                                                     * 00181800
*                                                                     * 00181900
*              ÝRNAMELEN=»xrnamelen!NO_RNAMELENº¨                     * 00182000
*                  is the name (RS-type), or address in register      * 00182100
*                  (2)-(12), of an optional fullword input that       * 00182200
*                  specifies the length in bytes of the resource name * 00182300
*                  for which this request is being processed. The     * 00182400
*                  resource name and length along with the hash value * 00182500
*                  serve to fully qualify an IXLLOCK resource.        * 00182600
*                  Please note, the Rnamelen keyword is only valid    * 00182700
*                  for requests that are issued against a lock        * 00182800
*                  structure which has variable length resource names * 00182900
*                  in effect (see the RNAMELEN keyword on the IXLCONN * 00183000
*                  macro for details on allocating a lock structure   * 00183100
*                  with variable length resource names). Requests     * 00183200
*                  which specify this keyword against lock structures * 00183300
*                  which do not have variable length resource names   * 00183400
*                  in effect will be rejected with return and reason  * 00183500
*                  codes indicating the error.  When specified, the   * 00183600
*                  value supplied for RNAMELEN must be between 1 and  * 00183700
*                  300 inclusive. When the RNAMELEN keyword is not    * 00183800
*                  specified the length of the resource name defaults * 00183900
*                  to 64 bytes.                                       * 00184000
*                  DEFAULT: NO_RNAMELEN                               * 00184100
*                                                                     * 00184200
*                                                                     * 00184300
*                                                                     * 00184400
*                                                                     * 00184500
*              HASHVAL=xhashval                                       * 00184600
*                  is the name (RS-type), or address in register      * 00184700
*                  (2)-(12), of a required fullword input that        * 00184800
*                  specifies the hash value associated with the       * 00184900
*                  resource name.  The hash value along with the      * 00185000
*                  resource name and length serves to fully qualify   * 00185100
*                  an IXLLOCK resource.  The method of producing the  * 00185200
*                  hash value is completely at the discretion of the  * 00185300
*                  connected user.  Typically, the value provided for * 00185400
*                  this keyword is the output of a user-defined       * 00185500
*                  hashing algorithm that receives a Resource name as * 00185600
*                  input.                                             * 00185700
*                                                                     * 00185800
*                                                                     * 00185900
*                                                                     * 00186000
*                                                                     * 00186100
*              ÝUDATAVAL=»xudataval!ALL_ZEROESº¨                      * 00186200
*                  is the name (RS-type), or address in register      * 00186300
*                  (2)-(12), of an optional 64 character input/output * 00186400
*                  variable that contains user-defined data to be     * 00186500
*                  associated with the resource.  The contents of     * 00186600
*                  UDATAVAL is at the discretion of the connected     * 00186700
*                  user and has no meaning to the system.  While a    * 00186800
*                  RELEASE request can not be denied by the           * 00186900
*                  CONTENTION exit, the contents of the user data     * 00187000
*                  associated with the request may be modified.       * 00187100
*                                                                     * 00187200
*                  If request completion is reported to the connected * 00187300
*                  user synchronously, the input variable (if         * 00187400
*                  specified) will contain the resultant user data    * 00187500
*                  value.                                             * 00187600
*                  DEFAULT: ALL_ZEROES                                * 00187700
*                                                                     * 00187800
*                                                                     * 00187900
*                                                                     * 00188000
*                                                                     * 00188100
*              ÝRDATA=»DELETE!KEEPº                                   * 00188200
*                  is an optional keyword input that specifies the    * 00188300
*                  disposition of the record data entry associated    * 00188400
*                  with this resource                                 * 00188500
*                  DEFAULT: DELETE                                    * 00188600
*                                                                     * 00188700
*                                                                     * 00188800
*                  ÝRDATA=DELETE¨                                     * 00188900
*                      indicates to delete the record data entry      * 00189000
*                      associated with this resource. If no record    * 00189100
*                      data entry is associated with this resource,   * 00189200
*                      this keyword is ignored.                       * 00189300
*                                                                     * 00189400
*                  ÝRDATA=KEEP                                        * 00189500
*                      indicates to keep the record data entry        * 00189600
*                      associated with this resource even though      * 00189700
*                      ownership of the resource is being             * 00189800
*                      relinquished.  Please note, the record data    * 00189900
*                      entry that was kept may eventually be          * 00190000
*                      re-associated with a new resource via the      * 00190100
*                      REACQUIRE option of IXLLOCK REQUEST(OBTAIN) or * 00190200
*                      manipulated via the XES record data service,   * 00190300
*                      IXLRT. If the KEEP option is specified and no  * 00190400
*                      associated record data entry exists,           * 00190500
*                      informational return and reason codes will be  * 00190600
*                      returned to the invoker.                       * 00190700
*                                                                     * 00190800
*                                                                     * 00190900
*                      ÝUPDATERDATA=»NO!YESº¨¨                        * 00191000
*                          is an optional keyword input that          * 00191100
*                          indicates whether to update the contents   * 00191200
*                          of the record data entry that has been     * 00191300
*                          kept                                       * 00191400
*                          DEFAULT: NO                                * 00191500
*                                                                     * 00191600
*                                                                     * 00191700
*                          ÝUPDATERDATA=NO¨                           * 00191800
*                              indicates to not update the record     * 00191900
*                              data entry                             * 00192000
*                                                                     * 00192100
*                          ÝUPDATERDATA=YES                           * 00192200
*                              indicates to update the record data    * 00192300
*                              entry with the data specified by the   * 00192400
*                              RDATAVAL keyword                       * 00192500
*                                                                     * 00192600
*                                                                     * 00192700
*                              RDATAVAL=xrdataval¨¨                   * 00192800
*                                  is the name (RS-type), or address  * 00192900
*                                  in register (2)-(12), of a         * 00193000
*                                  required 64 character input/output * 00193100
*                                  variable that contains             * 00193200
*                                  user-defined data to be written to * 00193300
*                                  the record data entry. The         * 00193400
*                                  contents of RDATAVAL is at the     * 00193500
*                                  discretion of the connected user   * 00193600
*                                  and has no meaning to the system.  * 00193700
*                                  The CONTENTION exit may modify the * 00193800
*                                  value that is to be written to the * 00193900
*                                  record data entry as part of       * 00194000
*                                  granting the request.              * 00194100
*                                                                     * 00194200
*                                  If completion of the request is    * 00194300
*                                  presented to the user              * 00194400
*                                  synchronously, the RDATAVAL area   * 00194500
*                                  will be updated with the resultant * 00194600
*                                  record data value.                 * 00194700
*                                                                     * 00194800
*                                                                     * 00194900
*                                                                     * 00195000
*                                                                     * 00195100
*                                                                     * 00195200
*                                                                     * 00195300
*                                                                     * 00195400
*                                                                     * 00195500
*                                                                     * 00195600
*                                                                     * 00195700
*                                                                     * 00195800
*                                                                     * 00195900
*              ÝMODE=»SYNCSUSPEND!SYNCEXIT!NORESPONSE!VALUEº¨         * 00196000
*                  is an optional keyword input that specifies how    * 00196100
*                  the request should be processed if it is not able  * 00196200
*                  to be serviced immediately. If the request is able * 00196300
*                  to be processed immediately, the MODE keyword is   * 00196400
*                  ignored and control is returned to the invoker     * 00196500
*                  with all information regarding the completed       * 00196600
*                  request.                                           * 00196700
*                  DEFAULT: SYNCSUSPEND                               * 00196800
*                                                                     * 00196900
*                                                                     * 00197000
*                  ÝMODE=SYNCSUSPEND¨                                 * 00197100
*                      requests that the RELEASE request be processed * 00197200
*                      synchronously.  Control is not returned to the * 00197300
*                      invoker until the request is complete.  If     * 00197400
*                      necessary the caller will be suspended until   * 00197500
*                      the request completes.                         * 00197600
*                                                                     * 00197700
*                  ÝMODE=SYNCEXIT¨                                    * 00197800
*                      requests that the RELEASE request be processed * 00197900
*                      asynchronously.  Return and reason codes are   * 00198000
*                      returned to the invoker indicating that the    * 00198100
*                      request will be processed in this manner.      * 00198200
*                      Request completion is reported via the         * 00198300
*                      connected user's Complete Exit.  The connected * 00198400
*                      user-specified COMPLETE exit may be  given     * 00198500
*                      control before  control  returns  to the next  * 00198600
*                      sequential instruction after the connected     * 00198700
*                      user's IXLLOCK request.                        * 00198800
*                                                                     * 00198900
*                  ÝMODE=NORESPONSE¨                                  * 00199000
*                      indicates that the requestor does not want to  * 00199100
*                      be informed when the RELEASE request is        * 00199200
*                      complete.  Return and reason codes are         * 00199300
*                      returned to the invoker indicating that the    * 00199400
*                      request will be processed asynchronously,      * 00199500
*                      however, the connected user's COMPLETE exit    * 00199600
*                      will NOT be invoked to report request          * 00199700
*                      completion.                                    * 00199800
*                                                                     * 00199900
*                  ÝMODE=VALUE                                        * 00200000
*                      The user will provide a value, via the MODEVAL * 00200100
*                      keyword, indicating the requested mode.        * 00200200
*                                                                     * 00200300
*                                                                     * 00200400
*                      MODEVAL=xmodeval¨                              * 00200500
*                          is the name (RS-type), or address in       * 00200600
*                          register (2)-(12), of a required byte      * 00200700
*                          input variable that contains a value       * 00200800
*                          indicating the desired mode.  The value    * 00200900
*                          provided must be equivalent to the         * 00201000
*                          constants provided in the IXLYCON macro    * 00201100
*                          indicating the mode.  (See IXLMODE...      * 00201200
*                          constants in the IXLYCON macro for more    * 00201300
*                          information).                              * 00201400
*                                                                     * 00201500
*                                                                     * 00201600
*                                                                     * 00201700
*                                                                     * 00201800
*                                                                     * 00201900
*                                                                     * 00202000
*                                                                     * 00202100
*                                                                     * 00202200
*              ÝADUPREQSEQNUM=xadupreqseqnum¨                         * 00202300
*                  is the name (RS-type), or address in register      * 00202400
*                  (2)-(12), of an optional 16 character output       * 00202500
*                  variable which may contain the asynchronous        * 00202600
*                  duplexing request sequence number assigned to this * 00202700
*                  request.  An asynchronous duplexing request        * 00202800
*                  sequence number is only generated for the request  * 00202900
*                  if                                                 * 00203000
*                                                                     * 00203100
*                                                                     * 00203200
*                  o   the request completes successfully, and        * 00203300
*                                                                     * 00203400
*                  o   the structure is duplexed by system-managed    * 00203500
*                      asynchronous duplexing when the request        * 00203600
*                      completes, and                                 * 00203700
*                                                                     * 00203800
*                  o   the request includes a record data update      * 00203900
*                      (write or delete), and                         * 00204000
*                                                                     * 00204100
*                  o   the request might not have been committed in   * 00204200
*                      the secondary instance of the structure        * 00204300
*                                                                     * 00204400
*                                                                     * 00204500
*                                                                     * 00204600
*                  If an asynchronous duplexing request sequence      * 00204700
*                  number is generated and the request returns with a * 00204800
*                  return code of IxlRetCodeOk, the asynchronous      * 00204900
*                  duplexing request sequence number will be returned * 00205000
*                  in the ADUPREQSEQNUM area. Otherwise the content   * 00205100
*                  of this output variable will be zero.              * 00205200
*                                                                     * 00205300
*                  If the request returns with a return code of       * 00205400
*                  IxlRetCodeWarning and a reason code of             * 00205500
*                  IxlRsnCodeAsynch, and the request specifies        * 00205600
*                  MODE=SYNCEXIT or MODEVAL=IXLMODESYNCEXIT, any      * 00205700
*                  asynchronous duplexing request sequence number     * 00205800
*                  generated upon successful completion will be       * 00205900
*                  presented to the user's COMPLETE exit.             * 00206000
*                                                                     * 00206100
*                  The asynchronous duplexing request sequence number * 00206200
*                  may be used on a subsequent invocation of IXLADUPX * 00206300
*                  to ensure the request is committed in the          * 00206400
*                  secondary instance of the asynchronously duplexed  * 00206500
*                  structure.                                         * 00206600
*                                                                     * 00206700
*                  Specifying ADUPREQSEQNUM will result in the        * 00206800
*                  generation of at least a version 4 parameter list. * 00206900
*                  A version 4 parameter list requires system-managed * 00207000
*                  asynchronous duplexing support. If a version 4     * 00207100
*                  parameter list is used on a system that does not   * 00207200
*                  support it, the request is rejected for the        * 00207300
*                  unsupported parameter list version                 * 00207400
*                  (IxlRsnCodeBadVersion#). Macro IXCYQUAA defines    * 00207500
*                  the QuReqRfAsyncDuplex bit in the QuReqFeatures    * 00207600
*                  string that can be used to test for system-managed * 00207700
*                  asynchronous duplexing support. Use IXCQUERY       * 00207800
*                  REQINFO=FEATURES to get the QuReqFeatures string.  * 00207900
*                                                                     * 00208000
*                                                                     * 00208100
*                                                                     * 00208200
*          REQUEST=PROCESSMULT                                        * 00208300
*              specifies that multiple resource requests be           * 00208400
*              performed. The individual requests are specified via   * 00208500
*              Lock Request Blocks, mapped by IXLYLRB, which are      * 00208600
*              contained in the REQBUFFER storage area.  Note, only a * 00208700
*              subset of the request types supported on the IXLLOCK   * 00208800
*              interface are supported by the PROCESSMULT option.     * 00208900
*              Please consult the IXLYLRB mapping macro for           * 00209000
*              information on valid request options.                  * 00209100
*                                                                     * 00209200
*              Each request in the REQBUFFER will be processed in the * 00209300
*              order in which it appears in the list.                 * 00209400
*                                                                     * 00209500
*              The PROCESSMULT request type is valid only for a       * 00209600
*              structure allocated in a CFLEVEL=2 coupling facility.  * 00209700
*                                                                     * 00209800
*              If XES encounters an error while accessing a Lock      * 00209900
*              Request Block then processing for the command will be  * 00210000
*              halted and return and reason codes will be provided to * 00210100
*              the invoker indicating this occurrence. The number of  * 00210200
*              Lock Request Blocks that were processed by XES may be  * 00210300
*              optionally obtained via the REQPROC keyword when the   * 00210400
*              PROCESSMULT request is completed synchronously.        * 00210500
*                                                                     * 00210600
*              Return and reason codes indicating the disposition of  * 00210700
*              each processed request in the REQBUFFER is returned in * 00210800
*              the Lock Request Block corresponding to that request.  * 00210900
*                                                                     * 00211000
*                                                                     * 00211100
*              REQBUFFER=xreqbuffer                                   * 00211200
*                  is a required input.  It is the name (RS-type), or * 00211300
*                  address in register (2)-(12), of a virtual storage * 00211400
*                  area containing a list of Lock Request Blocks      * 00211500
*                  corresponding to resource requests. The REQBUFFER  * 00211600
*                  storage area must exist in fixed or disabled       * 00211700
*                  reference storage.  There may be 1 to 128 Lock     * 00211800
*                  Request Blocks passed in the list.  The REQBUFFER  * 00211900
*                  storage must exist in fixed or disabled reference  * 00212000
*                  storage that is addressable from the invokers      * 00212100
*                  primary address space.                             * 00212200
*                                                                     * 00212300
*                                                                     * 00212400
*                                                                     * 00212500
*                                                                     * 00212600
*              REQNUM=xreqnum                                         * 00212700
*                  is the name (RS-type), or address in register      * 00212800
*                  (2)-(12), of a required halfword input variable    * 00212900
*                  specifying the number of Lock Request Blocks in    * 00213000
*                  the REQBUFFER list.                                * 00213100
*                                                                     * 00213200
*                  REQNUM values must be in the range of 1 to 128.    * 00213300
*                                                                     * 00213400
*                                                                     * 00213500
*                                                                     * 00213600
*                                                                     * 00213700
*              ÝREQVERSION=»xreqversion!0º¨                           * 00213800
*                  is the name (RS-type), or address in register      * 00213900
*                  (2)-(12), of an optional byte input variable       * 00214000
*                  specifying the version number of the Lock Request  * 00214100
*                  Blocks (LRB) in the REQBUFFER list.                * 00214200
*                                                                     * 00214300
*                  REQVERSION values must be in the range of 0 to 1.  * 00214400
*                  A value of 0 indicates that the LRBs are mapped by * 00214500
*                  LRB_Release_Ver0.  A value of 1 indicates that the * 00214600
*                  LRBs are mapped by LRB_Release_Ver1.  Please       * 00214700
*                  consult the IXLYLRB mapping macro for information  * 00214800
*                  on the data to be returned for each version.       * 00214900
*                                                                     * 00215000
*                  Specifying REQVERSION will result in the           * 00215100
*                  generation of at least a version 4 parameter list. * 00215200
*                  A version 4 parameter list requires system-managed * 00215300
*                  asynchronous duplexing support. If a version 4     * 00215400
*                  parameter list is used on a system that does not   * 00215500
*                  support it, the request is rejected for the        * 00215600
*                  unsupported parameter list version                 * 00215700
*                  (IxlRsnCodeBadVersion#). Macro IXCYQUAA defines    * 00215800
*                  the QuReqRfAsyncDuplex bit in the QuReqFeatures    * 00215900
*                  string that can be used to test for system-managed * 00216000
*                  asynchronous duplexing support. Use IXCQUERY       * 00216100
*                  REQINFO=FEATURES to get the QuReqFeatures string.  * 00216200
*                  DEFAULT: 0                                         * 00216300
*                                                                     * 00216400
*                                                                     * 00216500
*                                                                     * 00216600
*                                                                     * 00216700
*              ÝREQPROC=xreqproc¨                                     * 00216800
*                  is the name (RS-type), or address in register      * 00216900
*                  (2)-(12), of an optional halfword output variable  * 00217000
*                  that indicates the number of Lock Request Blocks   * 00217100
*                  that were processed by XES. If XES is forced to    * 00217200
*                  terminate its processing of the request list (i.e. * 00217300
*                  error accessing REQBUFFER, etc.)  then the number  * 00217400
*                  of Lock Request Blocks that were processed prior   * 00217500
*                  to the error is returned. If all Lock Request      * 00217600
*                  Blocks were processed then this variable will be   * 00217700
*                  equal to the value specified by the REQNUM         * 00217800
*                  keyword.  The state of the Lock Request Blocks     * 00217900
*                  after REQPROC are in an indeterminate state.       * 00218000
*                                                                     * 00218100
*                  When the PROCESSMULT request is completed          * 00218200
*                  synchronously, the input variable (if specified)   * 00218300
*                  will contain the resultant number of Lock Request  * 00218400
*                  Blocks processed by XES.  When the PROCESSMULT     * 00218500
*                  request is completed asynchronously, the input     * 00218600
*                  variable (if specified) will contain zero.         * 00218700
*                                                                     * 00218800
*                                                                     * 00218900
*                                                                     * 00219000
*                                                                     * 00219100
*              ÝMODE=»SYNCSUSPEND!NORESPONSE!VALUEº¨                  * 00219200
*                  is an optional keyword input that specifies how    * 00219300
*                  the request should be processed if it is not able  * 00219400
*                  to be serviced immediately. If the request is able * 00219500
*                  to be processed immediately, the MODE keyword is   * 00219600
*                  ignored and control is returned to the invoker     * 00219700
*                  with all information regarding the completed       * 00219800
*                  request.                                           * 00219900
*                  DEFAULT: SYNCSUSPEND                               * 00220000
*                                                                     * 00220100
*                                                                     * 00220200
*                  ÝMODE=SYNCSUSPEND¨                                 * 00220300
*                      requests that the PROCESSMULT request be       * 00220400
*                      processed synchronously. Control is not        * 00220500
*                      returned to the invoker until the request is   * 00220600
*                      complete. If necessary the caller will be      * 00220700
*                      suspended until the request completes.         * 00220800
*                                                                     * 00220900
*                  ÝMODE=NORESPONSE¨                                  * 00221000
*                      indicates that the requestor does not want to  * 00221100
*                      be informed when the PROCESSMULT request is    * 00221200
*                      complete.  Return and reason codes are         * 00221300
*                      returned to the invoker indicating that the    * 00221400
*                      request will be processed asynchronously,      * 00221500
*                      however, the connected user's COMPLETE exit    * 00221600
*                      will NOT be invoked to report request          * 00221700
*                      completion.                                    * 00221800
*                                                                     * 00221900
*                  ÝMODE=VALUE                                        * 00222000
*                      The user will provide a value, via the MODEVAL * 00222100
*                      keyword, indicating the requested mode.        * 00222200
*                                                                     * 00222300
*                                                                     * 00222400
*                      MODEVAL=xmodeval¨                              * 00222500
*                          is the name (RS-type), or address in       * 00222600
*                          register (2)-(12), of a required byte      * 00222700
*                          input variable that contains a value       * 00222800
*                          indicating the desired mode.  The value    * 00222900
*                          provided must be equivalent to the         * 00223000
*                          constants provided in the IXLYCON macro    * 00223100
*                          indicating the mode.  (See IXLMODE...      * 00223200
*                          constants in the IXLYCON macro for more    * 00223300
*                          information).  Note that only MODEVAL      * 00223400
*                          values IxlModeSyncSuspend and              * 00223500
*                          IxlModeNoResponse are currently supported  * 00223600
*                          for REQUEST(PROCESSMULT).                  * 00223700
*                                                                     * 00223800
*                                                                     * 00223900
*                                                                     * 00224000
*                                                                     * 00224100
*                                                                     * 00224200
*                                                                     * 00224300
*                                                                     * 00224400
*                                                                     * 00224500
*                                                                     * 00224600
*                                                                     * 00224700
*                                                                     * 00224800
*                                                                     * 00224900
*      ÝRETCODE=xretcode¨                                             * 00225000
*          is the name (RS-type) of an optional fullword output       * 00225100
*          variable, or register (2)-(12) or (15), into which the     * 00225200
*          return code is to be copied from GPR 15.  If you specify   * 00225300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00225400
*          the value will be left in GPR 15.                          * 00225500
*                                                                     * 00225600
*                                                                     * 00225700
*                                                                     * 00225800
*                                                                     * 00225900
*      ÝRSNCODE=xrsncode¨                                             * 00226000
*          is the name (RS-type) of an optional fullword output       * 00226100
*          variable into which the reason code is to be copied from   * 00226200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00226300
*          R0 (within or without parentheses), the value will be left * 00226400
*          in GPR 0.                                                  * 00226500
*                                                                     * 00226600
*                                                                     * 00226700
*                                                                     * 00226800
*                                                                     * 00226900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00227000
*          is an optional byte input decimal value in the "0-4" range * 00227100
*          that specifies the macro version.  PLISTVER is the only    * 00227200
*          key allowed on the list form of MF and determines which    * 00227300
*          parameter list is generated.  The macro keys associated    * 00227400
*          with each supported version of the macro are listed in     * 00227500
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00227600
*          instead of a number, and the parameter list will be of the * 00227700
*          largest size currently supported. This size may grow from  * 00227800
*          release to release (thus possibly affecting the amount of  * 00227900
*          storage needed by your program).  If your program can      * 00228000
*          tolerate this, IBM recommends that you always specify MAX  * 00228100
*          when creating the list form parameter list as that will    * 00228200
*          ensure that the list form parameter list is always long    * 00228300
*          enough to hold whatever parameters might be specified on   * 00228400
*          the execute form.                                          * 00228500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00228600
*          default is the lowest version which allows all of the      * 00228700
*          parameters specified on the invocation to be processed.    * 00228800
*                                                                     * 00228900
*                                                                     * 00229000
*                                                                     * 00229100
*                                                                     * 00229200
*      ÝMF=»S!L!Eº¨                                                   * 00229300
*          is an optional keyword input which specifies the macro     * 00229400
*          form.                                                      * 00229500
*          DEFAULT: S                                                 * 00229600
*                                                                     * 00229700
*                                                                     * 00229800
*          ÝMF=S¨                                                     * 00229900
*              specifies the standard form of the macro.  The "S"     * 00230000
*              form generates code to put the parameters into an      * 00230100
*              in-line parameter list and invoke the desired service. * 00230200
*              Full checking for required macro keys is done along    * 00230300
*              with supplying defaults for omitted optional           * 00230400
*              parameters.                                            * 00230500
*                                                                     * 00230600
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00230700
*              specifies the list form of the macro.  The "L" form    * 00230800
*              defines an area to be used for the parameter list.     * 00230900
*              Only the PLISTVER key may be specified on the          * 00231000
*              invocation.  All other macro parameters are flagged as * 00231100
*              errors.  If PLISTVER is not specified, the original    * 00231200
*              parameter list definition is used.                     * 00231300
*                                                                     * 00231400
*            ,xmfctrl                                                 * 00231500
*              is a required input.  It is the name of a storage area * 00231600
*              for the parameter list.                                * 00231700
*                                                                     * 00231800
*            »,xmfattr!0Dº                                            * 00231900
*              is an optional 60 character input string that varies   * 00232000
*              from 1 to 60 characters. Use it to force boundary      * 00232100
*              alignment of the parameter list. Use only 0F or 0D.    * 00232200
*              DEFAULT: 0D which forces the parameter list to a       * 00232300
*              doubleword boundary.                                   * 00232400
*                                                                     * 00232500
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00232600
*              specifies the execute form of the macro.  The "E" form * 00232700
*              generates code to put the parameters into the          * 00232800
*              parameter list specified by xmfctrl and provides full  * 00232900
*              syntax checking with default setting.                  * 00233000
*                                                                     * 00233100
*            ,xmfctrl                                                 * 00233200
*              is a required input.  It is the name (RS-type), or     * 00233300
*              address in register (1)-(12), of a storage area for    * 00233400
*              the parameter list.                                    * 00233500
*                                                                     * 00233600
*            »,COMPLETEº                                              * 00233700
*              is an optional keyword input which specifies the       * 00233800
*              degree of macro parameter syntax checking.             * 00233900
*              DEFAULT: COMPLETE                                      * 00234000
*                                                                     * 00234100
*                                                                     * 00234200
*              COMPLETE                                               * 00234300
*                  Checking for required macro keys is done and       * 00234400
*                  defaults are supplied for omitted optional         * 00234500
*                  parameters.                                        * 00234600
*                                                                     * 00234700
*                                                                     * 00234800
*                                                                     * 00234900
*                                                                     * 00235000
*                                                                     * 00235100
*                                                                     * 00235200
*                                                                     * 00235300
*01* RETURN CODES:                                                    * 00235400
*                                                                     * 00235500
*                                                                     * 00235600
*       0         IxlRetCodeOk:  Successful completion. IXLLOCK       * 00235700
*                 request successful.                                 * 00235800
*                                                                     * 00235900
*                                                                     * 00236000
*                                                                     * 00236100
*       4         IxlRetCodeWarning:  Warning.  The request           * 00236200
*                 completed, but with exceptional circumstances.      * 00236300
*                                                                     * 00236400
*                 HEX REASON   MEANING                                * 00236500
*                 CODE                                                * 00236600
*                                                                     * 00236700
*                                                                     * 00236800
*                 xxxx0402    IxlRsnCodeAsynch:  Request will be      * 00236900
*                             completed asynchronously. If            * 00237000
*                             MODE(SYNCEXIT) or                       * 00237100
*                             MODEVAL(IXLMODESYNCEXIT) was specified, * 00237200
*                             request completion will be reported via * 00237300
*                             the connected user's COMPLETE exit. For * 00237400
*                             IXLLOCK RELEASE and IXLLOCK PROCESSMULT * 00237500
*                             requests that specified                 * 00237600
*                             MODE(NORESPONSE) or                     * 00237700
*                             MODEVAL(IXLMODENORESPONSE), request     * 00237800
*                             completion will NOT be reported to the  * 00237900
*                             connected user.                         * 00238000
*                                                                     * 00238100
*                 xxxx0418    IxlRsnCodeNoElementToKeep:  The IXLLOCK * 00238200
*                             RELEASE request is successful. The User * 00238300
*                             specified to KEEP the record data entry * 00238400
*                             associated with the resource, but there * 00238500
*                             was no entry to KEEP.                   * 00238600
*                                                                     * 00238700
*                 xxxx0419    IxlRsnCodeNoUpDateOnKeep:  The IXLLOCK  * 00238800
*                             RELEASE request is successful. The User * 00238900
*                             specified to keep the associated record * 00239000
*                             data entry and update its contents.     * 00239100
*                             The entry was kept but its contents     * 00239200
*                             were unable to be updated.              * 00239300
*                                                                     * 00239400
*                 xxxx0424    IxlRsncodeNoDeleteOnRelease:  The       * 00239500
*                             IXLLOCK RELEASE request is successful.  * 00239600
*                             The User specified to delete the        * 00239700
*                             associated record data entry, but the   * 00239800
*                             entry was unable to be deleted.         * 00239900
*                                                                     * 00240000
*                                                                     * 00240100
*                                                                     * 00240200
*                                                                     * 00240300
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00240400
*                 completed due to a user error.                      * 00240500
*                                                                     * 00240600
*                 HEX REASON   MEANING                                * 00240700
*                 CODE                                                * 00240800
*                                                                     * 00240900
*                                                                     * 00241000
*                 xxxx0801    IxlRsnCodeBadParmlist:  Unable to       * 00241100
*                             access caller's parameter list          * 00241200
*                                                                     * 00241300
*                 xxxx0804    IxlRsnCodeBadVersion#:  The version     * 00241400
*                             number in the parameter list is not     * 00241500
*                             valid.  This usually indicates that the * 00241600
*                             level of the macro is incompatible with * 00241700
*                             the level of the XES service code.      * 00241800
*                                                                     * 00241900
*                 xxxx0807    IxlRsnCodeNotEnabled: Caller was not    * 00242000
*                             enabled.                                * 00242100
*                                                                     * 00242200
*                 xxxx080A    IxlRsnCodeBadContoken:  The input       * 00242300
*                             contoken is not valid. The contoken may * 00242400
*                             no longer be valid for one of the       * 00242500
*                             following reasons:  disconnect has      * 00242600
*                             occurred, EOT of the connector's task,  * 00242700
*                             input contoken is not the contoken      * 00242800
*                             returned from IXLCONN, the request was  * 00242900
*                             issued outside the connector's address  * 00243000
*                             space, or the contoken has been         * 00243100
*                             invalidated for rebuild.                * 00243200
*                                                                     * 00243300
*                 xxxx0810    IxlRsnCodeResourceNotFound:  Resource   * 00243400
*                             specified on REQUEST(ALTER) or          * 00243500
*                             REQUEST(RELEASE) is not owned or        * 00243600
*                             pending ownership.  Please note, this   * 00243700
*                             condition can occur when the request to * 00243800
*                             Obtain ownership failed or was denied   * 00243900
*                             by the CONTENTION exit of the connected * 00244000
*                             user who has been selected to manage    * 00244100
*                             the resource contention.                * 00244200
*                                                                     * 00244300
*                 xxxx0812    IxlRsnCodeAlreadyOwned:  Resource       * 00244400
*                             specified on REQUEST(OBTAIN) is already * 00244500
*                             owned.                                  * 00244600
*                                                                     * 00244700
*                 xxxx0813    IxlRsnCodeAlreadyPending:  Resource     * 00244800
*                             specified on REQUEST(OBTAIN) is already * 00244900
*                             pending ownership.                      * 00245000
*                                                                     * 00245100
*                 xxxx0816    IxlRsnCodeNoRtExists:  A request which  * 00245200
*                             indicated to WRITE or REACQUIRE a       * 00245300
*                             record data entry was unable to be      * 00245400
*                             processed due to recording not being    * 00245500
*                             active in the lock structure indicated  * 00245600
*                             by the input contoken. For recording to * 00245700
*                             be active, the first user to connect to * 00245800
*                             the lock structure must have specified  * 00245900
*                             RECORD(YES) on its IXLCONN invocation.  * 00246000
*                                                                     * 00246100
*                 xxxx0817    IxlRsnCodeBadConId:  The request to     * 00246200
*                             conditionally reacquire an existing     * 00246300
*                             record data entry based on the          * 00246400
*                             connection in which it is associated    * 00246500
*                             has failed because the record data      * 00246600
*                             entry to be reacquired was not          * 00246700
*                             associated with the connection          * 00246800
*                             indicated by the input CONID keyword.   * 00246900
*                                                                     * 00247000
*                 xxxx0818    IxlRsnCodeNotLockStr:  The contoken     * 00247100
*                             specified does not represent a lock     * 00247200
*                             structure                               * 00247300
*                                                                     * 00247400
*                 xxxx0844    IxlRsnCodeBadId:  The attempt to        * 00247500
*                             REACQUIRE and existing record data      * 00247600
*                             entry has failed because the input      * 00247700
*                             ENTRYID does not designate an existing  * 00247800
*                             record data entry.                      * 00247900
*                                                                     * 00248000
*                 xxxx0876    IxlRsnCodeBadReqNum:  The REQNUM value  * 00248100
*                             specified on an IXLLOCK                 * 00248200
*                             REQUEST(PROCESSMULT) invocation is not  * 00248300
*                             valid. The value must be between 1 and  * 00248400
*                             128 inclusive.  Processing is halted    * 00248500
*                             with no entries in the REQBUFFER having * 00248600
*                             been processed.                         * 00248700
*                                                                     * 00248800
*                 xxxx0877    IxlRsnCodeBadLRBType:  A Lock Request   * 00248900
*                             Block that was inputted on an IXLLOCK   * 00249000
*                             REQUEST(PROCESSMULT) has a value in the * 00249100
*                             LRB_XType field that is not supported   * 00249200
*                             by this level of the service routine.   * 00249300
*                             Processing of the LRBs in the REQBUFFER * 00249400
*                             is halted. If specified, REQPROC will   * 00249500
*                             contain the number of Lock Request      * 00249600
*                             Blocks that were processed completely   * 00249700
*                             when the PROCESSMULT request is         * 00249800
*                             completed synchronously.                * 00249900
*                                                                     * 00250000
*                 xxxx0878    IxlRsnCodeBadReqBuffer:  XES            * 00250100
*                             encountered an error while attempting   * 00250200
*                             to access storage in the REQBUFFER. If  * 00250300
*                             specified, REQPROC will contain the     * 00250400
*                             number of Lock Request Blocks that were * 00250500
*                             processed completely when the           * 00250600
*                             PROCESSMULT request is completed        * 00250700
*                             synchronously.                          * 00250800
*                                                                     * 00250900
*                 xxxx0879    IxlRsnCodeBadModeVal:  The MODEVAL      * 00251000
*                             value specified on an IXLLOCK           * 00251100
*                             invocation is not valid.  The value     * 00251200
*                             provided must be equivalent to the      * 00251300
*                             constants provided in the IXLYCON macro * 00251400
*                             indicating possible modes.  (See        * 00251500
*                             IXLMODE... constants in the IXLYCON     * 00251600
*                             macro for more information).  Note that * 00251700
*                             only MODEVAL values IxlModeSyncSuspend  * 00251800
*                             and IxlModeNoResponse are currently     * 00251900
*                             supported for REQUEST(PROCESSMULT).     * 00252000
*                                                                     * 00252100
*                 xxxx087A    IxlRsnCodeBadRnameLen:  The RNAMELEN    * 00252200
*                             specified on an IXLLOCK invocation is   * 00252300
*                             not valid. Valid lengths are 1 to 300.  * 00252400
*                                                                     * 00252500
*                 xxxx087B    IxlRsnCodeNoVarRname:  An IXLLOCK       * 00252600
*                             request which specified a variable      * 00252700
*                             length resource name is not valid       * 00252800
*                             because the variable length name        * 00252900
*                             feature is not in effect for the lock   * 00253000
*                             structure represented by the input      * 00253100
*                             contoken.  Please consult the RNAMELEN  * 00253200
*                             keyword on the IXLCONN macro for        * 00253300
*                             information on allocating a lock        * 00253400
*                             structure with this attribute.          * 00253500
*                                                                     * 00253600
*                 xxxx087C    IxlRsnCodeBadSyncFailDelay:  The        * 00253700
*                             SYNCFAILDELAY value specified on an     * 00253800
*                             IXLLOCK invocation is not valid.  The   * 00253900
*                             value provided must be equivalent to    * 00254000
*                             the constants provided in the IXLYCON   * 00254100
*                             macro indicating possible delays that   * 00254200
*                             may be tolerated by the requestor.      * 00254300
*                             (See IxlSyncFailDelay... constants in   * 00254400
*                             the IXLYCON macro for more              * 00254500
*                             information).                           * 00254600
*                                                                     * 00254700
*                 xxxx088F    IxlRsnCodeBadReqVersion:  The           * 00254800
*                             REQVERSION value specified on an        * 00254900
*                             IXLLOCK invocation is not valid.  Valid * 00255000
*                             values are in the range of 0 to 1.      * 00255100
*                                                                     * 00255200
*                                                                     * 00255300
*                                                                     * 00255400
*                                                                     * 00255500
*       C         IxlRetCodeEnvError:  Environmental problem.         * 00255600
*                                                                     * 00255700
*                 HEX REASON  MEANING                                 * 00255800
*                                                                     * 00255900
*                 CODE                                                * 00256000
*                                                                     * 00256100
*                                                                     * 00256200
*                 xxxx0C06    IxlRsnCodeNoConn:  No Connectivity to   * 00256300
*                             the Lock structure.  This may occur due * 00256400
*                             to operator commands such as VARY PATH  * 00256500
*                             OFFLINE or CONFIG CHP OFFLINE or        * 00256600
*                             hardware errors such as facility or     * 00256700
*                             path failures.  The contoken will be    * 00256800
*                             invalidated.  The user should           * 00256900
*                             disconnect or rebuild.                  * 00257000
*                                                                     * 00257100
*                 xxxx0C0B    IxlRsnCodeRtFull:  Record portion of    * 00257200
*                             the lock structure is full.  This       * 00257300
*                             reason code may also be issued when the * 00257400
*                             creation of a record data entry would   * 00257500
*                             result in the percentage of free        * 00257600
*                             entries being less than the percent     * 00257700
*                             entry reserved value in effect for the  * 00257800
*                             structure.                              * 00257900
*                                                                     * 00258000
*                 xxxx0C0D    IxlRsnCodeSuperseded:  Obtain or Alter  * 00258100
*                             request has been superseded (i.e.       * 00258200
*                             cancelled) by a more current request    * 00258300
*                             for the resource.                       * 00258400
*                                                                     * 00258500
*                 xxxx0C0F    IxlRsnCodeDenied:  Obtain or Alter      * 00258600
*                             request is not granted.  Resource       * 00258700
*                             request is denied (i.e., cancelled) by  * 00258800
*                             a related connected user that is        * 00258900
*                             managing the contention environment for * 00259000
*                             the resource.                           * 00259100
*                                                                     * 00259200
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 00259300
*                             completion of the request, the request  * 00259400
*                             was purged.  Reasons: the connector     * 00259500
*                             failed, the connector disconnected, the * 00259600
*                             requestor failed, the request was       * 00259700
*                             purged by IXLPURGE, or requests were    * 00259800
*                             purged when the connector provided an   * 00259900
*                             IXLEERSP response for the Rebuild Stop  * 00260000
*                             or Rebuild Cleanup event.               * 00260100
*                                                                     * 00260200
*                 xxxx0C20    IxlRsnCodeResourcesConstrained:  The    * 00260300
*                             amount of in-use storage is above a     * 00260400
*                             preestablished threshold.  Incoming     * 00260500
*                             obtain and alter requests are being     * 00260600
*                             rejected until sufficient storage is    * 00260700
*                             reclaimed to fall below the threshold.  * 00260800
*                                                                     * 00260900
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 00261000
*                             completion of the request, the lock     * 00261100
*                             structure failed.                       * 00261200
*                                                                     * 00261300
*                 xxxx0C4C    IxlRsnCodeResourceNoLongerOwned:  An    * 00261400
*                             Ixllock Alter or Ixllock Release        * 00261500
*                             request for a resource failed because   * 00261600
*                             the resource is no longer owned.        * 00261700
*                                                                     * 00261800
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 00261900
*                             type is not permitted for the level of  * 00262000
*                             coupling facility in which the target   * 00262100
*                             structure is allocated.                 * 00262200
*                                                                     * 00262300
*                 xxxx0C69    IxlRsnCodeNoDelay:  An IXLLOCK request  * 00262400
*                             in which the user specified             * 00262500
*                             MODE(SYNCFAIL) encountered a delay. The * 00262600
*                             request is cancelled.                   * 00262700
*                                                                     * 00262800
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00262900
*                             are not available.  This can be because * 00263000
*                             the hardware necessary to provide XES   * 00263100
*                             functions is not present.               * 00263200
*                                                                     * 00263300
*                                                                     * 00263400
*                                                                     * 00263500
*                                                                     * 00263600
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00263700
*                 state of the involved structure and the disposition * 00263800
*                 of the request are unpredictable.                   * 00263900
*                                                                     * 00264000
*                                                                     * 00264100
*                                                                     * 00264200
*01* REASON CODES:                                                    * 00264300
*                                                                     * 00264400
*       Reason codes, as appropriate, are defined under their         * 00264500
*       corresponding return code.  Reason code and return code       * 00264600
*       constants are defined within the IXLYCON macro.               * 00264700
*                                                                     * 00264800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00264900
*                                                                     * 00265000
*02*   PROCESSOR:  ASSEM                                              * 00265100
*                                                                     * 00265200
*01* COMPONENT:  SCIXL                                                * 00265300
*                                                                     * 00265400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00265500
*                                                                     * 00265600
*01* MACRO USAGE NOTES:                                               * 00265700
*                                                                     * 00265800
*                                                                     * 00265900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00266000
*        global macro variable.  Any value other than 'NO' will       * 00266100
*        result in the macro expansion being printed.  The default is * 00266200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00266300
*        variable should be set.                                      * 00266400
*                                                                     * 00266500
*                    GBLC &ZPRINT                                     * 00266600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00266700
*                                                                     * 00266800
*                                                                     * 00266900
*    2.  The  IXLLOCK macro supports multiple versions. The macro key * 00267000
*        list  below  contains the version level in which the key was * 00267100
*        first  introduced.  Positionals  are  identified by the word * 00267200
*        'Positional'  followed by the numeric value of its position. * 00267300
*        Nested  positionals  are  preceded  by their outer key.  The * 00267400
*        lowest value represents the original version and the highest * 00267500
*        value  represents  the  most  recent  version of the IXLLOCK * 00267600
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00267700
*        least  as high as the highest version number of all the keys * 00267800
*        being used.                                                  * 00267900
*                                                                     * 00268000
*        VERSION   KEY                                                * 00268100
*                                                                     * 00268200
*              0      ALLOWUSERSV                                     * 00268300
*                     CONID                                           * 00268400
*                     CONTOKEN                                        * 00268500
*                     CRITICALREQUEST                                 * 00268600
*                     ENTRYCOUNT                                      * 00268700
*                     ENTRYID                                         * 00268800
*                     HASHVAL                                         * 00268900
*                     LOCKDATA                                        * 00269000
*                     MODE                                            * 00269100
*                     RDATA                                           * 00269200
*                     RDATAVAL                                        * 00269300
*                     REQUEST                                         * 00269400
*                     RNAME                                           * 00269500
*                     STATE                                           * 00269600
*                     STATEVAL                                        * 00269700
*                     SYNCFAILDELAY                                   * 00269800
*                     UDATAVAL                                        * 00269900
*                     UPDATERDATA                                     * 00270000
*              1      MODEVAL                                         * 00270100
*                     REQBUFFER                                       * 00270200
*                     REQNUM                                          * 00270300
*                     REQPROC                                         * 00270400
*              2      RNAMELEN                                        * 00270500
*              4      ADUPREQSEQNUM                                   * 00270600
*                     REQVERSION                                      * 00270700
*                                                                     * 00270800
*    3.  Specification  of  REQUEST(PROCESSMULT) or MODE(SYNCFAIL) or * 00270900
*        MODE(VALUE)  on  an  IXLLOCK  invocation  will result in the * 00271000
*        generation  of  at  least  a version 1 level parameter list. * 00271100
*        Users who explicitly specify a PLISTVER should consider this * 00271200
*        when supplying a value for that keyword.                     * 00271300
*                                                                     * 00271400
*                                                                     * 00271500
*                                                                     * 00271600
*01* CHANGE ACTIVITY:                                                 * 00271700
*                                                                     * 00271800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00271900
*                                                                     * 00272000
*    $L0=SYSLKSMG HBB5510 900112 PD00XB:  Locking support             * 00272100
*    $L2=SYSLKSRQ HBB5510 910920 PD00T8:  Increase size of udataval   * 00272200
*                                         to 64 bytes per spec review * 00272300
*                                         comments                    * 00272400
*    $D2=DIG0018  HBB5510 920401 PD00EO:  Change Lockmode keyword to  * 00272500
*                                         MODE to be consistent with  * 00272600
*                                         other IXL external macros   * 00272700
*                                         per >4k support             * 00272800
*    $D3=DIG0018  HBB5510 930325 PD00T8:  Change linkage to branch    * 00272900
*                                         entered                     * 00273000
*    $L1=SYSLKSRQ HBB5510 930325 PD00EO:  Restructure Plist for       * 00273100
*                                         performance. Add Event      * 00273200
*                                         field to Plist.  Provide    * 00273300
*                                         mappings of multiple fields * 00273400
*                                         to aid in copying.          * 00273500
*    $D4=DIG0039  HBB5510 930325 PD00EO:  Update keywords in support  * 00273600
*                                         of ability to change        * 00273700
*                                         rdataval in the contention  * 00273800
*                                         exit.                       * 00273900
*    $D5=DIG0162  HBB5510 930909 PD00EO:  Add EntryCount keyword      * 00274000
*    $P1=PIG3706  HBB5510 931119 PD00AO:  Expand RsnCode descriptions * 00274100
*    $P2=PIG5106  HBB5510 940124 PD00CJ:  Added SYSSTATE to prologue  * 00274200
*    $L2=SYSLKSRQ HBB5510 940121 PD00EO:  Have macro switch to AR     * 00274300
*                                         mode rather than letting    * 00274400
*                                         service routine do this     * 00274500
*    $P3=PIG5178  HBB5510 940314 PD00EO:  Performance                 * 00274600
*    $01=OW11619  HBB5510 950415 PD00EO:  Must clear AR13 when        * 00274700
*                                         invoked by Primary Mode     * 00274800
*                                         Callers                     * 00274900
*    $02=OW15590  HBB5520 950909 PD00EO:  Add MODE(SYNCFAIL),         * 00275000
*                                         REQUEST(PROCESSMULT) and    * 00275100
*                                         MODEVAL keywords.           * 00275200
*    $P4=PSD0647  JBB6602 960201 PD00EO:  Add IxlRsncodeNoVarRname    * 00275300
*                                         return code to prolog.      * 00275400
*    $P5=PSD0633  JBB6602 960201 PD00EO:  Further updates for         * 00275500
*                                         Rnamelen.                   * 00275600
*    $P6=PSD1087  JBB6602 960601 PD00EO:  Handle specification of     * 00275700
*                                         default for rnamelen        * 00275800
*                                         keyword.                    * 00275900
*    $03=OW33342  HBB5520 980414 PD00FR:  VSAM RT support             * 00276000
*    $P7=PWK0016  HBB6608 980818 PD00S7:  Add                         * 00276100
*                                         IxlRsnCodeResourceNoLongerO * 00276200
*                                         wned return code to prolog. * 00276300
*    $P8=PWK0178  HBB6608 980818 PD00S7:  Fix for PWK0016             * 00276400
*    $P9=PX00158  HBB7705 000501 PD00BN:  Remove non-printable        * 00276500
*                                         characters                  * 00276600
*    $04=OW55305  HBB7705 020722 PD00WK:  Locking mainline request    * 00276700
*                                         mode not properly restored  * 00276800
*                                         after being suspended for a * 00276900
*                                         connector quiesced for a    * 00277000
*                                         system-managed process      * 00277100
*    $L3=XESLCR   HBB7720 040401 PD00WK:  OA01511: Fence IXLLOCK      * 00277200
*                                         requests in dataspace       * 00277300
*                                         storage constrained         * 00277400
*                                         environment                 * 00277500
*    $05=OA10242  HBB7707 050111 PD00WK:  REQUEST(PROCESSMULT) MODE   * 00277600
*                                         support                     * 00277700
*    $06=OA26986  HBB7740 080924 PD00WK:  SYNCFAILDELAY support       * 00277800
*    $PA=ME17746  HBB7780 100813 PD00WK:  DICE/LICE removal           * 00277900
*    $L4=LCKHANG  HBB77A0 130819 PD00WK:  XES Lock hang detect        * 00278000
*    $L5=ADUPLX   HBB77A0 150331 PD0JES:  Asynch duplexing            * 00278100
*    $L6=64LOCKDS HBB77B0 170910 PD00BN:  Locking control blocks      * 00278200
*                                         above the bar               * 00278300
*    $L7=333129   HBB77D0 190930 PD00C9:  V2R5                        * 00278400
*    $PC=379320   HBB77D0 200630 PD00C9:  ISV                         * 00278500
*    $L8=OA60650  HBB77B0 210331 PD00C9:  AllowUseRsv                 * 00278600
****** END OF SPECIFICATIONS *****************************************/ 00278700
*/********************************************************************* 00278800
         MACRO                                                          00278900
&XLABEL  IXLLOCK &CONTOKEN=,&REQUEST=,&RNAME=,&RNAMELEN=,&HASHVAL=,    *00279000
               &LOCKDATA=,&STATE=,&STATEVAL=,&UDATAVAL=,&RDATA=,       *00279100
               &RDATAVAL=,&ENTRYID=,&ENTRYCOUNT=,&ALLOWUSERSV=,&CONID=,*00279200
               &UPDATERDATA=,&MODE=,&SYNCFAILDELAY=,&MODEVAL=,         *00279300
               &CRITICALREQUEST=,&ADUPREQSEQNUM=,&REQBUFFER=,&REQNUM=, *00279400
               &REQVERSION=,&REQPROC=,&RETCODE=,&RSNCODE=,&PLISTVER=,  *00279500
               &MF=                                                     00279600
.*                                                                      00279700
*                     MACDATE -05/05/22-<4>                             00279800
.*                                                                      00279900
.*******************************************************************    00280000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00280100
.*******************************************************************    00280200
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00280300
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00280400
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00280500
.*                                                                      00280600
                     GBLC  &ZIXLLOCK   YES=MACRO USED AT LEAST ONCE     00280700
.*******************************************************************    00280800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00280900
.*******************************************************************    00281000
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00281100
                     LCLC  &ZCNDX      SYSNDX CHARACTERS                00281200
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00281300
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00281400
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00281500
                     LCLA  &ZAWRK      USED AS A WORK AREA              00281600
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00281700
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00281800
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00281900
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00282000
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00282100
                     LCLC  &ZMAC_G     "G" or null                      00282200
&ZMAC_G              SETC  ''                                           00282300
                     LCLC  &ZMAC_LR                                     00282400
&ZMAC_LR             SETC  'LR'                                         00282500
                     LCLC  &ZMAC_L                                      00282600
&ZMAC_L              SETC  'L'                                          00282700
                     LCLC  &ZMAC_ST                                     00282800
&ZMAC_ST             SETC  'ST'                                         00282900
                     LCLC  &ZMAC_LLGT                                   00283000
&ZMAC_LLGT           SETC  'L'                                          00283100
                     LCLC  &ZMAC_LGR                                    00283200
&ZMAC_LGR            SETC  'LR'                                         00283300
                     LCLC  &ZMAC_LG                                     00283400
&ZMAC_LG             SETC  'L'                                          00283500
                     LCLC  &ZMAC_STG                                    00283600
&ZMAC_STG            SETC  'ST'                                         00283700
                     LCLA  &ZMACRET    MACRO RETURN CODE                00283800
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00283900
.*                                                                      00284000
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00284100
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00284200
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00284300
                     LCLC  &ZENDBASEPL          End of base PL          00284400
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00284500
.*******************************************************************    00284600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00284700
.*******************************************************************    00284800
                     LCLA  &ZI         INDEX FOR ARRAY                  00284900
                     LCLA  &ZJ         INDEX FOR PARMS                  00285000
                     LCLA  &ZK         INDEX FOR PARSE                  00285100
                     LCLA  &ZLO        LOW RANGE VALUE                  00285200
                     LCLA  &ZHI        HIGH RANGE VALUE                 00285300
                     LCLC  &ZW         WORK AREA FOR PARM               00285400
.********************************************************************   00285500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00285600
.********************************************************************   00285700
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00285800
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00285900
                     GBLA  &SYSALVL    SYSSTATE ARCHLVL                 00286000
                     GBLC  &SYSAM64    SYSSTATE AMODE64                 00286100
.*                                                                      00286200
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00286300
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00286400
                     SPLEVEL  TEST                                      00286500
.ZSYS2               ANOP  ,                                            00286600
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00286700
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00286800
                     SYSSTATE TEST                                      00286900
                     AGO   .ZSYS4                                       00287000
.ZSYS3               ANOP  ,                                            00287100
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00287200
.ZSYS4               ANOP  ,                                            00287300
                     AIF   ('&SYSAM64' NE 'YES').ZSYSN64                00287400
&ZMAC_LLGT           SETC 'LLGT'                                        00287500
&ZMAC_LGR            SETC 'LGR'                                         00287600
&ZMAC_LG             SETC 'LG'                                          00287700
&ZMAC_STG            SETC 'STG'                                         00287800
.ZSYSN64             ANOP  ,                                            00287900
.*******************************************************************    00288000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00288100
.*******************************************************************    00288200
                     LCLC  &XCONTOKEN  ++ NAME                          00288300
                     LCLC  &XREQUEST   ++ VALUE                         00288400
                     LCLC  &XRNAME     ++ NAME                          00288500
                     LCLC  &XRNAMELEN  ++ NAME                          00288600
                     LCLC  &XHASHVAL   ++ NAME                          00288700
                     LCLC  &XLOCKDATA  ++ NAME                          00288800
                     LCLC  &XSTATE     ++ VALUE                         00288900
                     LCLC  &XSTATEVAL  ++ NAME                          00289000
                     LCLC  &XUDATAVAL  ++ NAME                          00289100
                     LCLC  &XRDATA     ++ VALUE                         00289200
                     LCLC  &XRDATAVAL  ++ NAME                          00289300
                     LCLC  &XENTRYID   ++ NAME                          00289400
                     LCLC  &XENTRYCOUNT         ++ NAME                 00289500
                     LCLC  &XALLOWUSERSV        ++ NAME                 00289600
                     LCLC  &XCONID     ++ NAME                          00289700
                     LCLC  &XUPDATERDATA        ++ VALUE                00289800
                     LCLC  &XMODE      ++ VALUE                         00289900
                     LCLC  &XSYNCFAILDELAY      ++ NAME                 00290000
                     LCLC  &XMODEVAL   ++ NAME                          00290100
                     LCLC  &XCRITICALREQUEST    ++ NAME                 00290200
                     LCLC  &XADUPREQSEQNUM      ++ NAME                 00290300
                     LCLC  &XREQBUFFER          ++ NAME                 00290400
                     LCLC  &XREQNUM    ++ NAME                          00290500
                     LCLC  &XREQVERSION         ++ NAME                 00290600
                     LCLC  &XREQPROC   ++ NAME                          00290700
                     LCLC  &XRETCODE   ++ NAME                          00290800
                     LCLC  &XRSNCODE   ++ NAME                          00290900
                     LCLA  &XPLISTVER  ++ VALUE                         00291000
                     LCLC  &XMF        ++ VALUE                         00291100
                     LCLC  &XMFCTRL    ++ NAME                          00291200
                     LCLC  &XMFATTR    ++ VALUE                         00291300
                     LCLC  &XMFSCK     ++ VALUE                         00291400
.*******************************************************************    00291500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00291600
.*******************************************************************    00291700
                     LCLC  &ZXCONTOKEN          ++ INPUT NAME           00291800
                     LCLC  &ZXREQUEST  ++ INPUT VALUE                   00291900
                     LCLC  &ZXRNAME    ++ INPUT NAME                    00292000
                     LCLC  &ZXRNAMELEN          ++ INPUT NAME           00292100
                     LCLC  &ZXHASHVAL  ++ INPUT NAME                    00292200
                     LCLC  &ZXLOCKDATA          ++ INPUT NAME           00292300
                     LCLC  &ZXSTATE    ++ INPUT VALUE                   00292400
                     LCLC  &ZXSTATEVAL          ++ INOUT NAME           00292500
                     LCLC  &ZXUDATAVAL          ++ INOUT NAME           00292600
                     LCLC  &ZXRDATA    ++ INPUT VALUE                   00292700
                     LCLC  &ZXRDATAVAL          ++ INOUT NAME           00292800
                     LCLC  &ZXENTRYID  ++ OUTPUT NAME                   00292900
                     LCLC  &ZXENTRYCOUNT        ++ OUTPUT NAME          00293000
                     LCLC  &ZXALLOWUSERSV       ++ INPUT NAME           00293100
                     LCLC  &ZXCONID    ++ INPUT NAME                    00293200
                     LCLC  &ZXUPDATERDATA       ++ INPUT VALUE          00293300
                     LCLC  &ZXMODE     ++ INPUT VALUE                   00293400
                     LCLC  &ZXSYNCFAILDELAY     ++ INPUT NAME           00293500
                     LCLC  &ZXMODEVAL  ++ INPUT NAME                    00293600
                     LCLC  &ZXCRITICALREQUEST   ++ INPUT NAME           00293700
                     LCLC  &ZXADUPREQSEQNUM     ++ OUTPUT NAME          00293800
                     LCLC  &ZXREQBUFFER         ++ INPUT NAME           00293900
                     LCLC  &ZXREQNUM   ++ INPUT NAME                    00294000
                     LCLC  &ZXREQVERSION        ++ INPUT NAME           00294100
                     LCLC  &ZXREQPROC  ++ OUTPUT NAME                   00294200
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00294300
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00294400
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00294500
                     LCLC  &ZXMF       ++ INPUT VALUE                   00294600
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00294700
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00294800
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00294900
.********************************************************************   00295000
.***AC.PLV01  PROCESS PLISTVER                                      *   00295100
.********************************************************************   00295200
&XPLISTVER      SETA  0                                                 00295300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00295400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00295500
&XPLISTVER      SETA  4                                                 00295600
.ZPLV0          ANOP  ,                                                 00295700
.*                                                                      00295800
                AIF   ('&RNAMELEN' EQ '').ZPLV1E                        00295900
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00296000
&XPLISTVER      SETA  2                                                 00296100
.ZPLV1E         ANOP  ,                                                 00296200
.*                                                                      00296300
                AIF   ('&MODEVAL' EQ '').ZPLV2E                         00296400
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00296500
&XPLISTVER      SETA  1                                                 00296600
.ZPLV2E         ANOP  ,                                                 00296700
.*                                                                      00296800
                AIF   ('&ADUPREQSEQNUM' EQ '').ZPLV3E                   00296900
                AIF   (&XPLISTVER GE 4).ZPLV3E                          00297000
&XPLISTVER      SETA  4                                                 00297100
.ZPLV3E         ANOP  ,                                                 00297200
.*                                                                      00297300
                AIF   ('&RNAMELEN' EQ '').ZPLV4E                        00297400
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00297500
&XPLISTVER      SETA  2                                                 00297600
.ZPLV4E         ANOP  ,                                                 00297700
.*                                                                      00297800
                AIF   ('&MODEVAL' EQ '').ZPLV5E                         00297900
                AIF   (&XPLISTVER GE 1).ZPLV5E                          00298000
&XPLISTVER      SETA  1                                                 00298100
.ZPLV5E         ANOP  ,                                                 00298200
.*                                                                      00298300
                AIF   ('&ADUPREQSEQNUM' EQ '').ZPLV6E                   00298400
                AIF   (&XPLISTVER GE 4).ZPLV6E                          00298500
&XPLISTVER      SETA  4                                                 00298600
.ZPLV6E         ANOP  ,                                                 00298700
.*                                                                      00298800
                AIF   ('&RNAMELEN' EQ '').ZPLV7E                        00298900
                AIF   (&XPLISTVER GE 2).ZPLV7E                          00299000
&XPLISTVER      SETA  2                                                 00299100
.ZPLV7E         ANOP  ,                                                 00299200
.*                                                                      00299300
                AIF   ('&MODEVAL' EQ '').ZPLV8E                         00299400
                AIF   (&XPLISTVER GE 1).ZPLV8E                          00299500
&XPLISTVER      SETA  1                                                 00299600
.ZPLV8E         ANOP  ,                                                 00299700
.*                                                                      00299800
                AIF   ('&ADUPREQSEQNUM' EQ '').ZPLV9E                   00299900
                AIF   (&XPLISTVER GE 4).ZPLV9E                          00300000
&XPLISTVER      SETA  4                                                 00300100
.ZPLV9E         ANOP  ,                                                 00300200
.*                                                                      00300300
                AIF   ('&REQBUFFER' EQ '').ZPLV10E                      00300400
                AIF   (&XPLISTVER GE 1).ZPLV10E                         00300500
&XPLISTVER      SETA  1                                                 00300600
.ZPLV10E        ANOP  ,                                                 00300700
.*                                                                      00300800
                AIF   ('&REQNUM' EQ '').ZPLV11E                         00300900
                AIF   (&XPLISTVER GE 1).ZPLV11E                         00301000
&XPLISTVER      SETA  1                                                 00301100
.ZPLV11E        ANOP  ,                                                 00301200
.*                                                                      00301300
                AIF   ('&REQVERSION' EQ '').ZPLV12E                     00301400
                AIF   (&XPLISTVER GE 4).ZPLV12E                         00301500
&XPLISTVER      SETA  4                                                 00301600
.ZPLV12E        ANOP  ,                                                 00301700
.*                                                                      00301800
                AIF   ('&REQPROC' EQ '').ZPLV13E                        00301900
                AIF   (&XPLISTVER GE 1).ZPLV13E                         00302000
&XPLISTVER      SETA  1                                                 00302100
.ZPLV13E        ANOP  ,                                                 00302200
.*                                                                      00302300
                AIF   ('&MODEVAL' EQ '').ZPLV14E                        00302400
                AIF   (&XPLISTVER GE 1).ZPLV14E                         00302500
&XPLISTVER      SETA  1                                                 00302600
.ZPLV14E        ANOP  ,                                                 00302700
.*                                                                      00302800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00302900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00303000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00303100
.*-------------------------------------------------------------------   00303200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00303300
&ZMS            SETC  '"PLISTVER='                                      00303400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00303500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00303600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00303700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00303800
                AGO   .ZPVCK2                                           00303900
.ZPVCK3         ANOP  ,                                                 00304000
.*-------------------------------------------------------------------   00304100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00304200
&ZMS            SETC  '"PLISTVER='                                      00304300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00304400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00304500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00304600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00304700
                AGO   .ZPVCKE                                           00304800
.ZPVCK2         ANOP  ,                                                 00304900
.*-------------------------------------------------------------------   00305000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00305100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00305200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00305300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00305400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00305500
                AIF   (&ZN LE 4).ZPVCK4A   NOT HIGH                     00305600
.ZPVCK6         ANOP  ,                                                 00305700
&ZMS            SETC  '"PLISTVER='                                      00305800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00305900
&ZMS            SETC  '&ZMS THE RANGE IS "0-4"'                         00306000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00306100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00306200
&XPLISTVER      SETA  4                                                 00306300
                AGO   .ZPVCKE                                           00306400
.*-------------------------------------------------------------------   00306500
.ZPVCK4A        ANOP  ,                                                 00306600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00306700
&ZMS            SETC  'PLISTVER='                                       00306800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00306900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00307000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00307100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00307200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00307300
                AGO   .ZPVCK5                                           00307400
.ZPVCK4         ANOP  ,                                                 00307500
&XPLISTVER      SETA  &PLISTVER(1)                                      00307600
.ZPVCK5         ANOP  ,                                                 00307700
.ZPVCKE         ANOP  ,                                                 00307800
.********************************************************************   00307900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00308000
.********************************************************************   00308100
                     ACTR  10000                                        00308200
.*------------------------------------------------------------------    00308300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00308400
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00308500
.*-------------------------------------------------------------------   00308600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00308700
.ZG220               ANOP  ,                                            00308800
&ZTLC                SETC 'S'                                           00308900
                     AIF   ('&MF(1)' NE '&ZTLC').ZG221                  00309000
&XMF                 SETC  'S'         SET KEYWORD                      00309100
                     AIF   (N'&MF LE 1).ZG220A  CK NUM                  00309200
&ZMS                 SETC  '"MF='                                       00309300
&ZMS                 SETC  '&ZMS.&MF"'                                  00309400
&ZMS                 SETC  '&ZMS "MF"'                                  00309500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00309600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00309700
.ZG220A              ANOP  ,                                            00309800
.*-------------------------------------------------------------------   00309900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00310000
.ZG221               ANOP  ,                                            00310100
&ZTLC                SETC 'L'                                           00310200
                     AIF   ('&MF(1)' NE '&ZTLC').ZG228                  00310300
&XMF                 SETC  'L'         SET KEYWORD                      00310400
                     AIF   (N'&MF LE 3).ZG221A  CK NUM                  00310500
&ZMS                 SETC  '"MF='                                       00310600
&ZMS                 SETC  '&ZMS.&MF"'                                  00310700
&ZMS                 SETC  '&ZMS "MF"'                                  00310800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00310900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00311000
.ZG221A              ANOP  ,                                            00311100
.*-------------------------------------------------------------------   00311200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00311300
                     AIF   (N'&SYSLIST NE 0).ZG221B  POSITIONALS?       00311400
                     AIF   ('&CONTOKEN' NE '').ZG221B  KEYS?            00311500
                     AIF   ('&REQUEST' NE '').ZG221B  KEYS?             00311600
                     AIF   ('&RNAME' NE '').ZG221B  KEYS?               00311700
                     AIF   ('&RNAMELEN' NE '').ZG221B  KEYS?            00311800
                     AIF   ('&HASHVAL' NE '').ZG221B  KEYS?             00311900
                     AIF   ('&LOCKDATA' NE '').ZG221B  KEYS?            00312000
                     AIF   ('&STATE' NE '').ZG221B  KEYS?               00312100
                     AIF   ('&STATEVAL' NE '').ZG221B  KEYS?            00312200
                     AIF   ('&UDATAVAL' NE '').ZG221B  KEYS?            00312300
                     AIF   ('&RDATA' NE '').ZG221B  KEYS?               00312400
                     AIF   ('&RDATAVAL' NE '').ZG221B  KEYS?            00312500
                     AIF   ('&ENTRYID' NE '').ZG221B  KEYS?             00312600
                     AIF   ('&ENTRYCOUNT' NE '').ZG221B  KEYS?          00312700
                     AIF   ('&ALLOWUSERSV' NE '').ZG221B  KEYS?         00312800
                     AIF   ('&CONID' NE '').ZG221B  KEYS?               00312900
                     AIF   ('&UPDATERDATA' NE '').ZG221B  KEYS?         00313000
                     AIF   ('&MODE' NE '').ZG221B  KEYS?                00313100
                     AIF   ('&SYNCFAILDELAY' NE '').ZG221B  KEYS?       00313200
                     AIF   ('&MODEVAL' NE '').ZG221B  KEYS?             00313300
                     AIF   ('&CRITICALREQUEST' NE '').ZG221B  KEYS?     00313400
                     AIF   ('&ADUPREQSEQNUM' NE '').ZG221B  KEYS?       00313500
                     AIF   ('&REQBUFFER' NE '').ZG221B  KEYS?           00313600
                     AIF   ('&REQNUM' NE '').ZG221B  KEYS?              00313700
                     AIF   ('&REQVERSION' NE '').ZG221B  KEYS?          00313800
                     AIF   ('&REQPROC' NE '').ZG221B  KEYS?             00313900
                     AIF   ('&RETCODE' NE '').ZG221B  KEYS?             00314000
                     AIF   ('&RSNCODE' NE '').ZG221B  KEYS?             00314100
                     AGO    .ZG221C    INVOCATION OKAY                  00314200
.ZG221B              ANOP  ,                                            00314300
&ZMS                 SETC  'THE "L" FORM OF "MF"'                       00314400
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00314500
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00314600
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00314700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00314800
.ZG221C              ANOP  ,                                            00314900
.*-------------------------------------------------------------------   00315000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00315100
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00315200
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00315300
                     AIF   (N'&MF(2) GT 1).ZG223B  MULTI                00315400
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00315500
.ZG223B              AIF   (K'&MF(2) GT 0).ZG223C                       00315600
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00315700
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'                      00315800
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00315900
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00316000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00316100
.ZG223C              ANOP  ,                                            00316200
.*-------------------------------------------------------------------   00316300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00316400
                     AIF   (K'&ZXMFCTRL LE 0).ZG223P  NOT I/O           00316500
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG223P              00316600
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00316700
&ZMS                 SETC  '"MF='                                       00316800
&ZMS                 SETC  '&ZMS.&MF"'                                  00316900
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00317000
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00317100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00317200
.ZG223P              ANOP  ,                                            00317300
.*-------------------------------------------------------------------   00317400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00317500
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00317600
&XMFATTR             SETC  '0D'                                         00317700
                     AIF   (K'&MF(3) LE 0).ZG226B  PARM                 00317800
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00317900
                     AIF   (N'&MF(3) GT 1).ZG226B  MULTI                00318000
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00318100
.ZG226B              ANOP  ,                                            00318200
.*-------------------------------------------------------------------   00318300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00318400
                     AIF   (K'&ZXMFATTR LE 0).ZG226P  NOT I/O           00318500
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG226P              00318600
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00318700
&ZMS                 SETC  '"MF='                                       00318800
&ZMS                 SETC  '&ZMS.&MF"'                                  00318900
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00319000
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00319100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00319200
.ZG226P              ANOP  ,                                            00319300
.*-------------------------------------------------------------------   00319400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00319500
                     AIF   (K'&ZXMFATTR LE 0).ZG226S  NOT I/O           00319600
                     AIF   (K'&XMFATTR LE 60).ZG226S  LNG OK            00319700
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00319800
&ZMS                 SETC  '"MF='                                       00319900
&ZMS                 SETC  '&ZMS.&MF"'                                  00320000
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00320100
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00320200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00320300
.ZG226S              ANOP  ,                                            00320400
.*-------------------------------------------------------------------   00320500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00320600
.ZG228               ANOP  ,                                            00320700
&ZTLC                SETC 'E'                                           00320800
                     AIF   ('&MF(1)' NE '&ZTLC').ZG236                  00320900
&XMF                 SETC  'E'         SET KEYWORD                      00321000
                     AIF   (N'&MF LE 3).ZG228A  CK NUM                  00321100
&ZMS                 SETC  '"MF='                                       00321200
&ZMS                 SETC  '&ZMS.&MF"'                                  00321300
&ZMS                 SETC  '&ZMS "MF"'                                  00321400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00321500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00321600
.ZG228A              ANOP  ,                                            00321700
.*-------------------------------------------------------------------   00321800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00321900
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00322000
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00322100
                     AIF   (N'&MF(2) GT 1).ZG230B  MULTI                00322200
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00322300
.ZG230B              AIF   (K'&MF(2) GT 0).ZG230C                       00322400
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00322500
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'                      00322600
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00322700
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00322800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00322900
.ZG230C              ANOP  ,                                            00323000
.*-------------------------------------------------------------------   00323100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00323200
                     AIF   (K'&ZXMFCTRL LE 0).ZG230R  NOT I/O           00323300
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG230R              00323400
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00323500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG230P                00323600
                     AIF   (K'&ZCGPR GT 2).ZG230Q                       00323700
                     AIF   ('&ZCGPR' EQ '0').ZG230Q                     00323800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00323900
                     AIF   (T'&ZCGPR NE 'N').ZG230Q  INVALID REG NAME   00324000
.ZG230P              ANOP  ,                                            00324100
                     AIF   (T'&ZCGPR NE 'N').ZG230R  NON NUMERIC        00324200
                     AIF   ('&ZCGPR' LT '1').ZG230Q                     00324300
                     AIF   ('&ZCGPR' LE '12').ZG230R                    00324400
.ZG230Q              ANOP  ,                                            00324500
&ZMS                 SETC  '"MF='                                       00324600
&ZMS                 SETC  '&ZMS.&MF"'                                  00324700
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00324800
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00324900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00325000
.ZG230R              ANOP  ,                                            00325100
.*-------------------------------------------------------------------   00325200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00325300
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00325400
.ZG234A   AIF   ('&MF(3)' NE 'COMPLETE').ZG235A                         00325500
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00325600
.*-------------------------------------------------------------------   00325700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00325800
.ZG235A              AIF   (K'&XMFSCK GT 0).ZG235C  KEYWORD             00325900
                     AIF   (K'&MF(3) LE 0).ZG235B                       00326000
&ZMS                 SETC  '"MF='                                       00326100
&ZMS                 SETC  '&ZMS.&MF"'                                  00326200
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00326300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00326400
&ZMS                 SETC  '&ZMS "COMPLETE".'                           00326500
                     MNOTE 8,' &ZMS '                                   00326600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00326700
.ZG235B              ANOP  ,                                            00326800
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00326900
.ZG235C              ANOP  ,                                            00327000
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00327100
.*------------------------------------------------------------------    00327200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00327300
.ZG236               ANOP  ,                                            00327400
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00327500
                     AIF   (K'&XMF GT 0).ZG236E  VALID ARG              00327600
                     AIF   (T'&MF EQ 'O').ZG236D  OMITTED               00327700
&ZASYSLNDX           SETA  0                                            00327800
.ZG236A              ANOP  ,           POSITIONAL MACRO KEY             00327900
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00328000
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG236C            00328100
&ZTLC                SETC 'MF'                                          00328200
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG236A   00328300
.ZG236B              ANOP  ,                                            00328400
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00328500
&ZMS                 SETC  'THE "MF" KEY'                               00328600
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00328700
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00328800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00328900
                     AGO   .ZG236E                                      00329000
.ZG236C              ANOP  ,                                            00329100
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00329200
&ZMS                 SETC  '"MF='                                       00329300
&ZMS                 SETC  '&ZMS.&MF"'                                  00329400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00329500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00329600
&ZMS                 SETC  '&ZMS "S",'                                  00329700
&ZMS                 SETC  '&ZMS "L",'                                  00329800
&ZMS                 SETC  '&ZMS OR "E".'                               00329900
                     MNOTE 8,' &ZMS '                                   00330000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00330100
                     AGO   .ZG236E                                      00330200
.ZG236D              ANOP  ,                                            00330300
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00330400
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00330500
.ZG236E              ANOP  ,                                            00330600
.********************************************************************   00330700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00330800
.********************************************************************   00330900
                     ACTR  10000                                        00331000
.*-------------------------------------------------------------------   00331100
.***AG.MF03 MF=(SLE)                                                    00331200
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00331300
.*----------------------------------------------------------------***   00331400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00331500
                     AIF   (N'&CONTOKEN LE 1).ZG2A  CK NUM              00331600
&ZMS                 SETC  '"CONTOKEN='                                 00331700
&ZMS                 SETC  '&ZMS.&CONTOKEN"'                            00331800
&ZMS                 SETC  '&ZMS "CONTOKEN"'                            00331900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00332000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00332100
.ZG2A                ANOP  ,                                            00332200
.*-------------------------------------------------------------------   00332300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00332400
&ZXCONTOKEN          SETC  'INPUT'     SET IN/OUTPUT                    00332500
&XCONTOKEN           SETC  '&CONTOKEN(1)'       SET XVARIABLE           00332600
                     AIF   (N'&CONTOKEN GT 1).ZG2B  MULTI               00332700
&XCONTOKEN           SETC  '&CONTOKEN'          SET XVARIABLE           00332800
.ZG2B                AIF   (K'&CONTOKEN(1) GT 0).ZG2C                   00332900
&ZXCONTOKEN          SETC  ''          RESET IN/OUTPUT                  00333000
&ZMS                 SETC  ' '                                          00333100
&ZMS                 SETC  '&ZMS "CONTOKEN" KEY AND ITS'                00333200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00333300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00333400
.ZG2C                ANOP  ,                                            00333500
.*-------------------------------------------------------------------   00333600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00333700
                     AIF   (K'&ZXCONTOKEN LE 0).ZG2R  NOT I/O           00333800
                     AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R              00333900
&ZCGPR               SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)               00334000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                  00334100
                     AIF   (K'&ZCGPR GT 2).ZG2Q                         00334200
                     AIF   ('&ZCGPR' EQ '0').ZG2Q                       00334300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00334400
                     AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME     00334500
.ZG2P                ANOP  ,                                            00334600
                     AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC          00334700
                     AIF   ('&ZCGPR' LT '2').ZG2Q                       00334800
                     AIF   ('&ZCGPR' LE '12').ZG2R                      00334900
.ZG2Q                ANOP  ,                                            00335000
&ZMS                 SETC  '"CONTOKEN='                                 00335100
&ZMS                 SETC  '&ZMS.&CONTOKEN"'                            00335200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00335300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00335400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00335500
.ZG2R                ANOP  ,                                            00335600
.*------------------------------------------------------------------    00335700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00335800
&XREQUEST            SETC  ''          INITIALIZE XVARIABLE             00335900
.*-------------------------------------------------------------------   00336000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00336100
.ZG6                 ANOP  ,                                            00336200
                     AIF   (K'&REQUEST(1) LE 0).ZG6A                    00336300
&ZTLC                SETC 'OBTAIN'                                      00336400
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG85              00336500
&XREQUEST            SETC  'OBTAIN'    SET KEYWORD                      00336600
                     AIF   (N'&REQUEST LE 1).ZG6A  CK NUM               00336700
&ZMS                 SETC  '"REQUEST='                                  00336800
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00336900
&ZMS                 SETC  '&ZMS "REQUEST"'                             00337000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00337100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00337200
.ZG6A                ANOP  ,                                            00337300
.*------------------------------------------------------------------    00337400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00337500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00337600
.ZG6A0               AIF   (K'&REQBUFFER LE 0).ZG6A1  OK                00337700
&ZCVAL               SETC '&ZCVAL REQBUFFER'    INCORRECT KEY USED      00337800
.ZG6A1               AIF   (K'&REQNUM LE 0).ZG6A2  OK                   00337900
&ZCVAL               SETC '&ZCVAL REQNUM'       INCORRECT KEY USED      00338000
.ZG6A2               AIF   (K'&REQVERSION LE 0).ZG6A3  OK               00338100
&ZCVAL               SETC '&ZCVAL REQVERSION'   INCORRECT KEY USED      00338200
.ZG6A3               AIF   (K'&REQPROC LE 0).ZG6A4  OK                  00338300
&ZCVAL               SETC '&ZCVAL REQPROC'      INCORRECT KEY USED      00338400
.ZG6A4               AIF   (K'&ZCVAL LE 0).ZG6A5  OK                    00338500
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00338600
&ZMS                 SETC  '"REQUEST'                                   00338700
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00338800
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00338900
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00339000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00339100
.ZG6A5               ANOP  ,                                            00339200
.*----------------------------------------------------------------***   00339300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00339400
                     AIF   (N'&RNAME LE 1).ZG8A  CK NUM                 00339500
&ZMS                 SETC  '"RNAME='                                    00339600
&ZMS                 SETC  '&ZMS.&RNAME"'                               00339700
&ZMS                 SETC  '&ZMS "RNAME"'                               00339800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00339900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00340000
.ZG8A                ANOP  ,                                            00340100
.*-------------------------------------------------------------------   00340200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00340300
&ZXRNAME             SETC  'INPUT'     SET IN/OUTPUT                    00340400
&XRNAME              SETC  '&RNAME(1)'          SET XVARIABLE           00340500
                     AIF   (N'&RNAME GT 1).ZG8B  MULTI                  00340600
&XRNAME              SETC  '&RNAME'    SET XVARIABLE                    00340700
.ZG8B                AIF   (K'&RNAME(1) GT 0).ZG8C                      00340800
&ZXRNAME             SETC  ''          RESET IN/OUTPUT                  00340900
&ZMS                 SETC  ' '                                          00341000
&ZMS                 SETC  '&ZMS "RNAME" KEY AND ITS'                   00341100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00341200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00341300
.ZG8C                ANOP  ,                                            00341400
.*-------------------------------------------------------------------   00341500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00341600
                     AIF   (K'&ZXRNAME LE 0).ZG8R  NOT I/O              00341700
                     AIF   ('&XRNAME'(1,1) NE '(').ZG8R                 00341800
&ZCGPR               SETC  '&XRNAME'(2,K'&XRNAME-2)                     00341900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                  00342000
                     AIF   (K'&ZCGPR GT 2).ZG8Q                         00342100
                     AIF   ('&ZCGPR' EQ '0').ZG8Q                       00342200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00342300
                     AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME     00342400
.ZG8P                ANOP  ,                                            00342500
                     AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC          00342600
                     AIF   ('&ZCGPR' LT '2').ZG8Q                       00342700
                     AIF   ('&ZCGPR' LE '12').ZG8R                      00342800
.ZG8Q                ANOP  ,                                            00342900
&ZMS                 SETC  '"RNAME='                                    00343000
&ZMS                 SETC  '&ZMS.&RNAME"'                               00343100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00343200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00343300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00343400
.ZG8R                ANOP  ,                                            00343500
.*----------------------------------------------------------------***   00343600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00343700
                     AIF   (N'&RNAMELEN LE 1).ZG11A  CK NUM             00343800
&ZMS                 SETC  '"RNAMELEN='                                 00343900
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00344000
&ZMS                 SETC  '&ZMS "RNAMELEN"'                            00344100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00344200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00344300
.ZG11A               ANOP  ,                                            00344400
.*-------------------------------------------------------------------   00344500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00344600
&ZXRNAMELEN          SETC  'INPUT'     SET IN/OUTPUT                    00344700
&XRNAMELEN           SETC  'NO_RNAMELEN'                                00344800
                     AIF   (K'&RNAMELEN(1) LE 0).ZG11B  PARM            00344900
&XRNAMELEN           SETC  '&RNAMELEN(1)'       SET XVARIABLE           00345000
                     AIF   (N'&RNAMELEN GT 1).ZG11B  MULTI              00345100
&XRNAMELEN           SETC  '&RNAMELEN'          SET XVARIABLE           00345200
.ZG11B               ANOP  ,                                            00345300
.*-------------------------------------------------------------------   00345400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00345500
                     AIF   (K'&ZXRNAMELEN LE 0).ZG11R  NOT I/O          00345600
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').ZG11R                    00345700
                     AIF   ('&XRNAMELEN'(1,1) NE '(').ZG11R             00345800
&ZCGPR               SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)               00345900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                 00346000
                     AIF   (K'&ZCGPR GT 2).ZG11Q                        00346100
                     AIF   ('&ZCGPR' EQ '0').ZG11Q                      00346200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00346300
                     AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME    00346400
.ZG11P               ANOP  ,                                            00346500
                     AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC         00346600
                     AIF   ('&ZCGPR' LT '2').ZG11Q                      00346700
                     AIF   ('&ZCGPR' LE '12').ZG11R                     00346800
.ZG11Q               ANOP  ,                                            00346900
&ZMS                 SETC  '"RNAMELEN='                                 00347000
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00347100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00347200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00347300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00347400
.ZG11R               ANOP  ,                                            00347500
.*----------------------------------------------------------------***   00347600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00347700
                     AIF   (N'&HASHVAL LE 1).ZG14A  CK NUM              00347800
&ZMS                 SETC  '"HASHVAL='                                  00347900
&ZMS                 SETC  '&ZMS.&HASHVAL"'                             00348000
&ZMS                 SETC  '&ZMS "HASHVAL"'                             00348100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00348200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00348300
.ZG14A               ANOP  ,                                            00348400
.*-------------------------------------------------------------------   00348500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00348600
&ZXHASHVAL           SETC  'INPUT'     SET IN/OUTPUT                    00348700
&XHASHVAL            SETC  '&HASHVAL(1)'        SET XVARIABLE           00348800
                     AIF   (N'&HASHVAL GT 1).ZG14B  MULTI               00348900
&XHASHVAL            SETC  '&HASHVAL'  SET XVARIABLE                    00349000
.ZG14B               AIF   (K'&HASHVAL(1) GT 0).ZG14C                   00349100
&ZXHASHVAL           SETC  ''          RESET IN/OUTPUT                  00349200
&ZMS                 SETC  ' '                                          00349300
&ZMS                 SETC  '&ZMS "HASHVAL" KEY AND ITS'                 00349400
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00349500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00349600
.ZG14C               ANOP  ,                                            00349700
.*-------------------------------------------------------------------   00349800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00349900
                     AIF   (K'&ZXHASHVAL LE 0).ZG14R  NOT I/O           00350000
                     AIF   ('&XHASHVAL'(1,1) NE '(').ZG14R              00350100
&ZCGPR               SETC  '&XHASHVAL'(2,K'&XHASHVAL-2)                 00350200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                 00350300
                     AIF   (K'&ZCGPR GT 2).ZG14Q                        00350400
                     AIF   ('&ZCGPR' EQ '0').ZG14Q                      00350500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00350600
                     AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME    00350700
.ZG14P               ANOP  ,                                            00350800
                     AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC         00350900
                     AIF   ('&ZCGPR' LT '2').ZG14Q                      00351000
                     AIF   ('&ZCGPR' LE '12').ZG14R                     00351100
.ZG14Q               ANOP  ,                                            00351200
&ZMS                 SETC  '"HASHVAL='                                  00351300
&ZMS                 SETC  '&ZMS.&HASHVAL"'                             00351400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00351500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00351600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00351700
.ZG14R               ANOP  ,                                            00351800
.*----------------------------------------------------------------***   00351900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00352000
                     AIF   (N'&LOCKDATA LE 1).ZG17A  CK NUM             00352100
&ZMS                 SETC  '"LOCKDATA='                                 00352200
&ZMS                 SETC  '&ZMS.&LOCKDATA"'                            00352300
&ZMS                 SETC  '&ZMS "LOCKDATA"'                            00352400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00352500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00352600
.ZG17A               ANOP  ,                                            00352700
.*-------------------------------------------------------------------   00352800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00352900
&ZXLOCKDATA          SETC  'INPUT'     SET IN/OUTPUT                    00353000
&XLOCKDATA           SETC  'ALL_ZEROES'                                 00353100
                     AIF   (K'&LOCKDATA(1) LE 0).ZG17B  PARM            00353200
&XLOCKDATA           SETC  '&LOCKDATA(1)'       SET XVARIABLE           00353300
                     AIF   (N'&LOCKDATA GT 1).ZG17B  MULTI              00353400
&XLOCKDATA           SETC  '&LOCKDATA'          SET XVARIABLE           00353500
.ZG17B               ANOP  ,                                            00353600
.*-------------------------------------------------------------------   00353700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00353800
                     AIF   (K'&ZXLOCKDATA LE 0).ZG17R  NOT I/O          00353900
         AIF   ('&XLOCKDATA' EQ 'ALL_ZEROES').ZG17R                     00354000
                     AIF   ('&XLOCKDATA'(1,1) NE '(').ZG17R             00354100
&ZCGPR               SETC  '&XLOCKDATA'(2,K'&XLOCKDATA-2)               00354200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                 00354300
                     AIF   (K'&ZCGPR GT 2).ZG17Q                        00354400
                     AIF   ('&ZCGPR' EQ '0').ZG17Q                      00354500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00354600
                     AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME    00354700
.ZG17P               ANOP  ,                                            00354800
                     AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC         00354900
                     AIF   ('&ZCGPR' LT '2').ZG17Q                      00355000
                     AIF   ('&ZCGPR' LE '12').ZG17R                     00355100
.ZG17Q               ANOP  ,                                            00355200
&ZMS                 SETC  '"LOCKDATA='                                 00355300
&ZMS                 SETC  '&ZMS.&LOCKDATA"'                            00355400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00355500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00355600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00355700
.ZG17R               ANOP  ,                                            00355800
.*------------------------------------------------------------------    00355900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00356000
&XSTATE              SETC  ''          INITIALIZE XVARIABLE             00356100
.*-------------------------------------------------------------------   00356200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00356300
.ZG21                ANOP  ,                                            00356400
                     AIF   (K'&STATE(1) LE 0).ZG21A                     00356500
&ZTLC                SETC 'SHR'                                         00356600
                     AIF   ('&STATE(1)' NE '&ZTLC').ZG22                00356700
&XSTATE              SETC  'SHR'       SET KEYWORD                      00356800
                     AIF   (N'&STATE LE 1).ZG21A  CK NUM                00356900
&ZMS                 SETC  '"STATE='                                    00357000
&ZMS                 SETC  '&ZMS.&STATE"'                               00357100
&ZMS                 SETC  '&ZMS "STATE"'                               00357200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00357300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00357400
.ZG21A               ANOP  ,                                            00357500
.*------------------------------------------------------------------    00357600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00357700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00357800
.ZG21A0              AIF   (K'&STATEVAL LE 0).ZG21A1  OK                00357900
&ZCVAL               SETC '&ZCVAL STATEVAL'     INCORRECT KEY USED      00358000
.ZG21A1              AIF   (K'&ZCVAL LE 0).ZG21A2  OK                   00358100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00358200
&ZMS                 SETC  '"STATE'                                     00358300
&ZMS                 SETC  '&ZMS.=&STATE"'                              00358400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00358500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00358600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00358700
.ZG21A2              ANOP  ,                                            00358800
.*-------------------------------------------------------------------   00358900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00359000
.ZG22                ANOP  ,                                            00359100
&ZTLC                SETC 'EXCL'                                        00359200
                     AIF   ('&STATE(1)' NE '&ZTLC').ZG23                00359300
&XSTATE              SETC  'EXCL'      SET KEYWORD                      00359400
                     AIF   (N'&STATE LE 1).ZG22A  CK NUM                00359500
&ZMS                 SETC  '"STATE='                                    00359600
&ZMS                 SETC  '&ZMS.&STATE"'                               00359700
&ZMS                 SETC  '&ZMS "STATE"'                               00359800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00359900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00360000
.ZG22A               ANOP  ,                                            00360100
.*------------------------------------------------------------------    00360200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00360300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00360400
.ZG22A0              AIF   (K'&STATEVAL LE 0).ZG22A1  OK                00360500
&ZCVAL               SETC '&ZCVAL STATEVAL'     INCORRECT KEY USED      00360600
.ZG22A1              AIF   (K'&ZCVAL LE 0).ZG22A2  OK                   00360700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00360800
&ZMS                 SETC  '"STATE'                                     00360900
&ZMS                 SETC  '&ZMS.=&STATE"'                              00361000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00361100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00361200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00361300
.ZG22A2              ANOP  ,                                            00361400
.*-------------------------------------------------------------------   00361500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00361600
.ZG23                ANOP  ,                                            00361700
&ZTLC                SETC 'VALUE'                                       00361800
                     AIF   ('&STATE(1)' NE '&ZTLC').ZG27                00361900
&XSTATE              SETC  'VALUE'     SET KEYWORD                      00362000
                     AIF   (N'&STATE LE 1).ZG23A  CK NUM                00362100
&ZMS                 SETC  '"STATE='                                    00362200
&ZMS                 SETC  '&ZMS.&STATE"'                               00362300
&ZMS                 SETC  '&ZMS "STATE"'                               00362400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00362500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00362600
.ZG23A               ANOP  ,                                            00362700
.*----------------------------------------------------------------***   00362800
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00362900
                     AIF   (N'&STATEVAL LE 1).ZG25A  CK NUM             00363000
&ZMS                 SETC  '"STATEVAL='                                 00363100
&ZMS                 SETC  '&ZMS.&STATEVAL"'                            00363200
&ZMS                 SETC  '&ZMS "STATEVAL"'                            00363300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00363400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00363500
.ZG25A               ANOP  ,                                            00363600
.*-------------------------------------------------------------------   00363700
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00363800
&ZXSTATEVAL          SETC  'INOUT'     SET IN/OUTPUT                    00363900
&XSTATEVAL           SETC  '&STATEVAL(1)'       SET XVARIABLE           00364000
                     AIF   (N'&STATEVAL GT 1).ZG25B  MULTI              00364100
&XSTATEVAL           SETC  '&STATEVAL'          SET XVARIABLE           00364200
.ZG25B               AIF   (K'&STATEVAL(1) GT 0).ZG25C                  00364300
&ZXSTATEVAL          SETC  ''          RESET IN/OUTPUT                  00364400
&ZMS                 SETC  'WHEN "VALUE" IS SPECIFIED'                  00364500
&ZMS                 SETC  '&ZMS , "STATEVAL" KEY AND ITS'              00364600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00364700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00364800
.ZG25C               ANOP  ,                                            00364900
.*-------------------------------------------------------------------   00365000
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00365100
                     AIF   (K'&ZXSTATEVAL LE 0).ZG25R  NOT I/O          00365200
                     AIF   ('&XSTATEVAL'(1,1) NE '(').ZG25R             00365300
&ZCGPR               SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)               00365400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                 00365500
                     AIF   (K'&ZCGPR GT 2).ZG25Q                        00365600
                     AIF   ('&ZCGPR' EQ '0').ZG25Q                      00365700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00365800
                     AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME    00365900
.ZG25P               ANOP  ,                                            00366000
                     AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC         00366100
                     AIF   ('&ZCGPR' LT '2').ZG25Q                      00366200
                     AIF   ('&ZCGPR' LE '12').ZG25R                     00366300
.ZG25Q               ANOP  ,                                            00366400
&ZMS                 SETC  '"STATEVAL='                                 00366500
&ZMS                 SETC  '&ZMS.&STATEVAL"'                            00366600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00366700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00366800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00366900
.ZG25R               ANOP  ,                                            00367000
.*------------------------------------------------------------------    00367100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00367200
.ZG27                ANOP  ,                                            00367300
&ZXSTATE             SETC  'INPUT'     SET IN/OUTPUT                    00367400
                     AIF   (K'&XSTATE GT 0).ZG27E  VALID ARG            00367500
                     AIF   (T'&STATE EQ 'O').ZG27D  OMITTED             00367600
&ZASYSLNDX           SETA  0                                            00367700
.ZG27A               ANOP  ,           POSITIONAL MACRO KEY             00367800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00367900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG27C             00368000
&ZTLC                SETC 'STATE'                                       00368100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG27A    00368200
.ZG27B               ANOP  ,                                            00368300
&ZXSTATE             SETC  ''          RESET IN/OUTPUT                  00368400
&ZMS                 SETC  'THE "STATE" KEY'                            00368500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00368600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00368700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00368800
                     AGO   .ZG27E                                       00368900
.ZG27C               ANOP  ,                                            00369000
&ZXSTATE             SETC  ''          RESET IN/OUTPUT                  00369100
&ZMS                 SETC  '"STATE='                                    00369200
&ZMS                 SETC  '&ZMS.&STATE"'                               00369300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00369400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00369500
&ZMS                 SETC  '&ZMS "SHR",'                                00369600
&ZMS                 SETC  '&ZMS "EXCL",'                               00369700
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00369800
                     MNOTE 8,' &ZMS '                                   00369900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00370000
                     AGO   .ZG27E                                       00370100
.ZG27D               ANOP  ,                                            00370200
&XSTATE              SETC  'SHR'       SET DEFAULT KEYWORD              00370300
.ZG27E               ANOP  ,                                            00370400
.*----------------------------------------------------------------***   00370500
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00370600
                     AIF   (N'&UDATAVAL LE 1).ZG29A  CK NUM             00370700
&ZMS                 SETC  '"UDATAVAL='                                 00370800
&ZMS                 SETC  '&ZMS.&UDATAVAL"'                            00370900
&ZMS                 SETC  '&ZMS "UDATAVAL"'                            00371000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00371100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00371200
.ZG29A               ANOP  ,                                            00371300
.*-------------------------------------------------------------------   00371400
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00371500
&ZXUDATAVAL          SETC  'INOUT'     SET IN/OUTPUT                    00371600
&XUDATAVAL           SETC  'ALL_ZEROES'                                 00371700
                     AIF   (K'&UDATAVAL(1) LE 0).ZG29B  PARM            00371800
&XUDATAVAL           SETC  '&UDATAVAL(1)'       SET XVARIABLE           00371900
                     AIF   (N'&UDATAVAL GT 1).ZG29B  MULTI              00372000
&XUDATAVAL           SETC  '&UDATAVAL'          SET XVARIABLE           00372100
.ZG29B               ANOP  ,                                            00372200
.*-------------------------------------------------------------------   00372300
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00372400
                     AIF   (K'&ZXUDATAVAL LE 0).ZG29R  NOT I/O          00372500
         AIF   ('&XUDATAVAL' EQ 'ALL_ZEROES').ZG29R                     00372600
                     AIF   ('&XUDATAVAL'(1,1) NE '(').ZG29R             00372700
&ZCGPR               SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)               00372800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                 00372900
                     AIF   (K'&ZCGPR GT 2).ZG29Q                        00373000
                     AIF   ('&ZCGPR' EQ '0').ZG29Q                      00373100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00373200
                     AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME    00373300
.ZG29P               ANOP  ,                                            00373400
                     AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC         00373500
                     AIF   ('&ZCGPR' LT '2').ZG29Q                      00373600
                     AIF   ('&ZCGPR' LE '12').ZG29R                     00373700
.ZG29Q               ANOP  ,                                            00373800
&ZMS                 SETC  '"UDATAVAL='                                 00373900
&ZMS                 SETC  '&ZMS.&UDATAVAL"'                            00374000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00374100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00374200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00374300
.ZG29R               ANOP  ,                                            00374400
.*------------------------------------------------------------------    00374500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00374600
&XRDATA              SETC  ''          INITIALIZE XVARIABLE             00374700
.*-------------------------------------------------------------------   00374800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00374900
.ZG33                ANOP  ,                                            00375000
                     AIF   (K'&RDATA(1) LE 0).ZG33A                     00375100
&ZTLC                SETC 'NORDATA'                                     00375200
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG34                00375300
&XRDATA              SETC  'NORDATA'   SET KEYWORD                      00375400
                     AIF   (N'&RDATA LE 1).ZG33A  CK NUM                00375500
&ZMS                 SETC  '"RDATA='                                    00375600
&ZMS                 SETC  '&ZMS.&RDATA"'                               00375700
&ZMS                 SETC  '&ZMS "RDATA"'                               00375800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00375900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00376000
.ZG33A               ANOP  ,                                            00376100
.*------------------------------------------------------------------    00376200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00376300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00376400
.ZG33A0              AIF   (K'&RDATAVAL LE 0).ZG33A1  OK                00376500
&ZCVAL               SETC '&ZCVAL RDATAVAL'     INCORRECT KEY USED      00376600
.ZG33A1              AIF   (K'&ENTRYID LE 0).ZG33A2  OK                 00376700
&ZCVAL               SETC '&ZCVAL ENTRYID'      INCORRECT KEY USED      00376800
.ZG33A2              AIF   (K'&ENTRYCOUNT LE 0).ZG33A3  OK              00376900
&ZCVAL               SETC '&ZCVAL ENTRYCOUNT'   INCORRECT KEY USED      00377000
.ZG33A3              AIF   (K'&ALLOWUSERSV LE 0).ZG33A4  OK             00377100
&ZCVAL               SETC '&ZCVAL ALLOWUSERSV'  INCORRECT KEY USED      00377200
.ZG33A4              AIF   (K'&CONID LE 0).ZG33A5  OK                   00377300
&ZCVAL               SETC '&ZCVAL CONID'        INCORRECT KEY USED      00377400
.ZG33A5              AIF   (K'&UPDATERDATA LE 0).ZG33A6  OK             00377500
&ZCVAL               SETC '&ZCVAL UPDATERDATA'  INCORRECT KEY USED      00377600
.ZG33A6              AIF   (K'&ZCVAL LE 0).ZG33A7  OK                   00377700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00377800
&ZMS                 SETC  '"RDATA'                                     00377900
&ZMS                 SETC  '&ZMS.=&RDATA"'                              00378000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00378100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00378200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00378300
.ZG33A7              ANOP  ,                                            00378400
.*-------------------------------------------------------------------   00378500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00378600
.ZG34                ANOP  ,                                            00378700
&ZTLC                SETC 'WRITE'                                       00378800
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG47                00378900
&XRDATA              SETC  'WRITE'     SET KEYWORD                      00379000
                     AIF   (N'&RDATA LE 1).ZG34A  CK NUM                00379100
&ZMS                 SETC  '"RDATA='                                    00379200
&ZMS                 SETC  '&ZMS.&RDATA"'                               00379300
&ZMS                 SETC  '&ZMS "RDATA"'                               00379400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00379500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00379600
.ZG34A               ANOP  ,                                            00379700
.*------------------------------------------------------------------    00379800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00379900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00380000
.ZG34A0              AIF   (K'&CONID LE 0).ZG34A1  OK                   00380100
&ZCVAL               SETC '&ZCVAL CONID'        INCORRECT KEY USED      00380200
.ZG34A1              AIF   (K'&UPDATERDATA LE 0).ZG34A2  OK             00380300
&ZCVAL               SETC '&ZCVAL UPDATERDATA'  INCORRECT KEY USED      00380400
.ZG34A2              AIF   (K'&ZCVAL LE 0).ZG34A3  OK                   00380500
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00380600
&ZMS                 SETC  '"RDATA'                                     00380700
&ZMS                 SETC  '&ZMS.=&RDATA"'                              00380800
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00380900
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00381000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00381100
.ZG34A3              ANOP  ,                                            00381200
.*----------------------------------------------------------------***   00381300
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00381400
                     AIF   (N'&RDATAVAL LE 1).ZG36A  CK NUM             00381500
&ZMS                 SETC  '"RDATAVAL='                                 00381600
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00381700
&ZMS                 SETC  '&ZMS "RDATAVAL"'                            00381800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00381900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00382000
.ZG36A               ANOP  ,                                            00382100
.*-------------------------------------------------------------------   00382200
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00382300
&ZXRDATAVAL          SETC  'INOUT'     SET IN/OUTPUT                    00382400
&XRDATAVAL           SETC  '&RDATAVAL(1)'       SET XVARIABLE           00382500
                     AIF   (N'&RDATAVAL GT 1).ZG36B  MULTI              00382600
&XRDATAVAL           SETC  '&RDATAVAL'          SET XVARIABLE           00382700
.ZG36B               AIF   (K'&RDATAVAL(1) GT 0).ZG36C                  00382800
&ZXRDATAVAL          SETC  ''          RESET IN/OUTPUT                  00382900
&ZMS                 SETC  ' '                                          00383000
&ZMS                 SETC  '&ZMS "RDATAVAL" KEY AND ITS'                00383100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00383200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00383300
.ZG36C               ANOP  ,                                            00383400
.*-------------------------------------------------------------------   00383500
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00383600
                     AIF   (K'&ZXRDATAVAL LE 0).ZG36R  NOT I/O          00383700
                     AIF   ('&XRDATAVAL'(1,1) NE '(').ZG36R             00383800
&ZCGPR               SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)               00383900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                 00384000
                     AIF   (K'&ZCGPR GT 2).ZG36Q                        00384100
                     AIF   ('&ZCGPR' EQ '0').ZG36Q                      00384200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00384300
                     AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME    00384400
.ZG36P               ANOP  ,                                            00384500
                     AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC         00384600
                     AIF   ('&ZCGPR' LT '2').ZG36Q                      00384700
                     AIF   ('&ZCGPR' LE '12').ZG36R                     00384800
.ZG36Q               ANOP  ,                                            00384900
&ZMS                 SETC  '"RDATAVAL='                                 00385000
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00385100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00385200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00385300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00385400
.ZG36R               ANOP  ,                                            00385500
.*----------------------------------------------------------------***   00385600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00385700
                     AIF   (N'&ENTRYID LE 1).ZG39A  CK NUM              00385800
&ZMS                 SETC  '"ENTRYID='                                  00385900
&ZMS                 SETC  '&ZMS.&ENTRYID"'                             00386000
&ZMS                 SETC  '&ZMS "ENTRYID"'                             00386100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00386200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00386300
.ZG39A               ANOP  ,                                            00386400
.*-------------------------------------------------------------------   00386500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00386600
                     AIF   (K'&ENTRYID(1) LE 0).ZG39C  NO PARM          00386700
&ZXENTRYID           SETC  'OUTPUT'    SET OUTPUT                       00386800
&XENTRYID            SETC  '&ENTRYID(1)'        SET XVARIABLE           00386900
                     AIF   (N'&ENTRYID GT 1).ZG39C                      00387000
&XENTRYID            SETC  '&ENTRYID'  SET XVARIABLE                    00387100
.ZG39C               ANOP  ,                                            00387200
.*-------------------------------------------------------------------   00387300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00387400
                     AIF   (K'&ZXENTRYID LE 0).ZG39R  NOT I/O           00387500
                     AIF   ('&XENTRYID'(1,1) NE '(').ZG39R              00387600
&ZCGPR               SETC  '&XENTRYID'(2,K'&XENTRYID-2)                 00387700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                 00387800
                     AIF   (K'&ZCGPR GT 2).ZG39Q                        00387900
                     AIF   ('&ZCGPR' EQ '0').ZG39Q                      00388000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00388100
                     AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME    00388200
.ZG39P               ANOP  ,                                            00388300
                     AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC         00388400
                     AIF   ('&ZCGPR' LT '2').ZG39Q                      00388500
                     AIF   ('&ZCGPR' LE '12').ZG39R                     00388600
.ZG39Q               ANOP  ,                                            00388700
&ZMS                 SETC  '"ENTRYID='                                  00388800
&ZMS                 SETC  '&ZMS.&ENTRYID"'                             00388900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00389000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00389100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00389200
.ZG39R               ANOP  ,                                            00389300
.*----------------------------------------------------------------***   00389400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00389500
                     AIF   (N'&ENTRYCOUNT LE 1).ZG42A  CK NUM           00389600
&ZMS                 SETC  '"ENTRYCOUNT='                               00389700
&ZMS                 SETC  '&ZMS.&ENTRYCOUNT"'                          00389800
&ZMS                 SETC  '&ZMS "ENTRYCOUNT"'                          00389900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00390000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00390100
.ZG42A               ANOP  ,                                            00390200
.*-------------------------------------------------------------------   00390300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00390400
                     AIF   (K'&ENTRYCOUNT(1) LE 0).ZG42C  NO PARM       00390500
&ZXENTRYCOUNT        SETC  'OUTPUT'    SET OUTPUT                       00390600
&XENTRYCOUNT         SETC  '&ENTRYCOUNT(1)'     SET XVARIABLE           00390700
                     AIF   (N'&ENTRYCOUNT GT 1).ZG42C                   00390800
&XENTRYCOUNT         SETC  '&ENTRYCOUNT'        SET XVARIABLE           00390900
.ZG42C               ANOP  ,                                            00391000
.*-------------------------------------------------------------------   00391100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00391200
                     AIF   (K'&ZXENTRYCOUNT LE 0).ZG42R  NOT I/O        00391300
                     AIF   ('&XENTRYCOUNT'(1,1) NE '(').ZG42R           00391400
&ZCGPR               SETC  '&XENTRYCOUNT'(2,K'&XENTRYCOUNT-2)           00391500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                 00391600
                     AIF   (K'&ZCGPR GT 2).ZG42Q                        00391700
                     AIF   ('&ZCGPR' EQ '0').ZG42Q                      00391800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00391900
                     AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME    00392000
.ZG42P               ANOP  ,                                            00392100
                     AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC         00392200
                     AIF   ('&ZCGPR' LT '2').ZG42Q                      00392300
                     AIF   ('&ZCGPR' LE '12').ZG42R                     00392400
.ZG42Q               ANOP  ,                                            00392500
&ZMS                 SETC  '"ENTRYCOUNT='                               00392600
&ZMS                 SETC  '&ZMS.&ENTRYCOUNT"'                          00392700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00392800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00392900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00393000
.ZG42R               ANOP  ,                                            00393100
.*----------------------------------------------------------------***   00393200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00393300
                     AIF   (N'&ALLOWUSERSV LE 1).ZG45A  CK NUM          00393400
&ZMS                 SETC  '"ALLOWUSERSV='                              00393500
&ZMS                 SETC  '&ZMS.&ALLOWUSERSV"'                         00393600
&ZMS                 SETC  '&ZMS "ALLOWUSERSV"'                         00393700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00393800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00393900
.ZG45A               ANOP  ,                                            00394000
.*-------------------------------------------------------------------   00394100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00394200
&ZXALLOWUSERSV       SETC  'INPUT'     SET IN/OUTPUT                    00394300
&XALLOWUSERSV        SETC  '0'                                          00394400
                     AIF   (K'&ALLOWUSERSV(1) LE 0).ZG45B  PARM         00394500
&XALLOWUSERSV        SETC  '&ALLOWUSERSV(1)'    SET XVARIABLE           00394600
                     AIF   (N'&ALLOWUSERSV GT 1).ZG45B  MULTI           00394700
&XALLOWUSERSV        SETC  '&ALLOWUSERSV'       SET XVARIABLE           00394800
.ZG45B               ANOP  ,                                            00394900
.*-------------------------------------------------------------------   00395000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00395100
                     AIF   (K'&ZXALLOWUSERSV LE 0).ZG45R  NOT I/O       00395200
         AIF   ('&XALLOWUSERSV' EQ '0').ZG45R                           00395300
                     AIF   ('&XALLOWUSERSV'(1,1) NE '(').ZG45R          00395400
&ZCGPR               SETC  '&XALLOWUSERSV'(2,K'&XALLOWUSERSV-2)         00395500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                 00395600
                     AIF   (K'&ZCGPR GT 2).ZG45Q                        00395700
                     AIF   ('&ZCGPR' EQ '0').ZG45Q                      00395800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00395900
                     AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME    00396000
.ZG45P               ANOP  ,                                            00396100
                     AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC         00396200
                     AIF   ('&ZCGPR' LT '2').ZG45Q                      00396300
                     AIF   ('&ZCGPR' LE '12').ZG45R                     00396400
.ZG45Q               ANOP  ,                                            00396500
&ZMS                 SETC  '"ALLOWUSERSV='                              00396600
&ZMS                 SETC  '&ZMS.&ALLOWUSERSV"'                         00396700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00396800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00396900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00397000
.ZG45R               ANOP  ,                                            00397100
.*-------------------------------------------------------------------   00397200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00397300
.ZG47                ANOP  ,                                            00397400
&ZTLC                SETC 'REACQUIRE'                                   00397500
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG62                00397600
&XRDATA              SETC  'REACQUIRE'          SET KEYWORD             00397700
                     AIF   (N'&RDATA LE 1).ZG47A  CK NUM                00397800
&ZMS                 SETC  '"RDATA='                                    00397900
&ZMS                 SETC  '&ZMS.&RDATA"'                               00398000
&ZMS                 SETC  '&ZMS "RDATA"'                               00398100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00398200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00398300
.ZG47A               ANOP  ,                                            00398400
.*------------------------------------------------------------------    00398500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00398600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00398700
.ZG47A0              AIF   (K'&ENTRYCOUNT LE 0).ZG47A1  OK              00398800
&ZCVAL               SETC '&ZCVAL ENTRYCOUNT'   INCORRECT KEY USED      00398900
.ZG47A1              AIF   (K'&ALLOWUSERSV LE 0).ZG47A2  OK             00399000
&ZCVAL               SETC '&ZCVAL ALLOWUSERSV'  INCORRECT KEY USED      00399100
.ZG47A2              AIF   (K'&ZCVAL LE 0).ZG47A3  OK                   00399200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00399300
&ZMS                 SETC  '"RDATA'                                     00399400
&ZMS                 SETC  '&ZMS.=&RDATA"'                              00399500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00399600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00399700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00399800
.ZG47A3              ANOP  ,                                            00399900
.*----------------------------------------------------------------***   00400000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00400100
                     AIF   (N'&ENTRYID LE 1).ZG49A  CK NUM              00400200
&ZMS                 SETC  '"ENTRYID='                                  00400300
&ZMS                 SETC  '&ZMS.&ENTRYID"'                             00400400
&ZMS                 SETC  '&ZMS "ENTRYID"'                             00400500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00400600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00400700
.ZG49A               ANOP  ,                                            00400800
.*-------------------------------------------------------------------   00400900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00401000
&ZXENTRYID           SETC  'INPUT'     SET IN/OUTPUT                    00401100
&XENTRYID            SETC  '&ENTRYID(1)'        SET XVARIABLE           00401200
                     AIF   (N'&ENTRYID GT 1).ZG49B  MULTI               00401300
&XENTRYID            SETC  '&ENTRYID'  SET XVARIABLE                    00401400
.ZG49B               AIF   (K'&ENTRYID(1) GT 0).ZG49C                   00401500
&ZXENTRYID           SETC  ''          RESET IN/OUTPUT                  00401600
&ZMS                 SETC  ' '                                          00401700
&ZMS                 SETC  '&ZMS "ENTRYID" KEY AND ITS'                 00401800
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00401900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00402000
.ZG49C               ANOP  ,                                            00402100
.*-------------------------------------------------------------------   00402200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00402300
                     AIF   (K'&ZXENTRYID LE 0).ZG49R  NOT I/O           00402400
                     AIF   ('&XENTRYID'(1,1) NE '(').ZG49R              00402500
&ZCGPR               SETC  '&XENTRYID'(2,K'&XENTRYID-2)                 00402600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                 00402700
                     AIF   (K'&ZCGPR GT 2).ZG49Q                        00402800
                     AIF   ('&ZCGPR' EQ '0').ZG49Q                      00402900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00403000
                     AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME    00403100
.ZG49P               ANOP  ,                                            00403200
                     AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC         00403300
                     AIF   ('&ZCGPR' LT '2').ZG49Q                      00403400
                     AIF   ('&ZCGPR' LE '12').ZG49R                     00403500
.ZG49Q               ANOP  ,                                            00403600
&ZMS                 SETC  '"ENTRYID='                                  00403700
&ZMS                 SETC  '&ZMS.&ENTRYID"'                             00403800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00403900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00404000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00404100
.ZG49R               ANOP  ,                                            00404200
.*----------------------------------------------------------------***   00404300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00404400
                     AIF   (N'&CONID LE 1).ZG52A  CK NUM                00404500
&ZMS                 SETC  '"CONID='                                    00404600
&ZMS                 SETC  '&ZMS.&CONID"'                               00404700
&ZMS                 SETC  '&ZMS "CONID"'                               00404800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00404900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00405000
.ZG52A               ANOP  ,                                            00405100
.*-------------------------------------------------------------------   00405200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00405300
&ZXCONID             SETC  'INPUT'     SET IN/OUTPUT                    00405400
&XCONID              SETC  'NO_CONID'                                   00405500
                     AIF   (K'&CONID(1) LE 0).ZG52B  PARM               00405600
&XCONID              SETC  '&CONID(1)'          SET XVARIABLE           00405700
                     AIF   (N'&CONID GT 1).ZG52B  MULTI                 00405800
&XCONID              SETC  '&CONID'    SET XVARIABLE                    00405900
.ZG52B               ANOP  ,                                            00406000
.*-------------------------------------------------------------------   00406100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00406200
                     AIF   (K'&ZXCONID LE 0).ZG52R  NOT I/O             00406300
         AIF   ('&XCONID' EQ 'NO_CONID').ZG52R                          00406400
                     AIF   ('&XCONID'(1,1) NE '(').ZG52R                00406500
&ZCGPR               SETC  '&XCONID'(2,K'&XCONID-2)                     00406600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                 00406700
                     AIF   (K'&ZCGPR GT 2).ZG52Q                        00406800
                     AIF   ('&ZCGPR' EQ '0').ZG52Q                      00406900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00407000
                     AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME    00407100
.ZG52P               ANOP  ,                                            00407200
                     AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC         00407300
                     AIF   ('&ZCGPR' LT '2').ZG52Q                      00407400
                     AIF   ('&ZCGPR' LE '12').ZG52R                     00407500
.ZG52Q               ANOP  ,                                            00407600
&ZMS                 SETC  '"CONID='                                    00407700
&ZMS                 SETC  '&ZMS.&CONID"'                               00407800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00407900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00408000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00408100
.ZG52R               ANOP  ,                                            00408200
.*------------------------------------------------------------------    00408300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00408400
&XUPDATERDATA        SETC  ''          INITIALIZE XVARIABLE             00408500
.*-------------------------------------------------------------------   00408600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00408700
.ZG56                ANOP  ,                                            00408800
                     AIF   (K'&UPDATERDATA(1) LE 0).ZG56A               00408900
&ZTLC                SETC 'NO'                                          00409000
                     AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG57          00409100
&XUPDATERDATA        SETC  'NO'        SET KEYWORD                      00409200
                     AIF   (N'&UPDATERDATA LE 1).ZG56A  CK NUM          00409300
&ZMS                 SETC  '"UPDATERDATA='                              00409400
&ZMS                 SETC  '&ZMS.&UPDATERDATA"'                         00409500
&ZMS                 SETC  '&ZMS "UPDATERDATA"'                         00409600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00409700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00409800
.ZG56A               ANOP  ,                                            00409900
.*------------------------------------------------------------------    00410000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00410100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00410200
.ZG56A0              AIF   (K'&RDATAVAL LE 0).ZG56A1  OK                00410300
&ZCVAL               SETC '&ZCVAL RDATAVAL'     INCORRECT KEY USED      00410400
.ZG56A1              AIF   (K'&ZCVAL LE 0).ZG56A2  OK                   00410500
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00410600
&ZMS                 SETC  '"UPDATERDATA'                               00410700
&ZMS                 SETC  '&ZMS.=&UPDATERDATA"'                        00410800
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00410900
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00411000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00411100
.ZG56A2              ANOP  ,                                            00411200
.*-------------------------------------------------------------------   00411300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00411400
.ZG57                ANOP  ,                                            00411500
&ZTLC                SETC 'YES'                                         00411600
                     AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG61          00411700
&XUPDATERDATA        SETC  'YES'       SET KEYWORD                      00411800
                     AIF   (N'&UPDATERDATA LE 1).ZG57A  CK NUM          00411900
&ZMS                 SETC  '"UPDATERDATA='                              00412000
&ZMS                 SETC  '&ZMS.&UPDATERDATA"'                         00412100
&ZMS                 SETC  '&ZMS "UPDATERDATA"'                         00412200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00412300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00412400
.ZG57A               ANOP  ,                                            00412500
.*----------------------------------------------------------------***   00412600
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00412700
                     AIF   (N'&RDATAVAL LE 1).ZG59A  CK NUM             00412800
&ZMS                 SETC  '"RDATAVAL='                                 00412900
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00413000
&ZMS                 SETC  '&ZMS "RDATAVAL"'                            00413100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00413200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00413300
.ZG59A               ANOP  ,                                            00413400
.*-------------------------------------------------------------------   00413500
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00413600
&ZXRDATAVAL          SETC  'INOUT'     SET IN/OUTPUT                    00413700
&XRDATAVAL           SETC  '&RDATAVAL(1)'       SET XVARIABLE           00413800
                     AIF   (N'&RDATAVAL GT 1).ZG59B  MULTI              00413900
&XRDATAVAL           SETC  '&RDATAVAL'          SET XVARIABLE           00414000
.ZG59B               AIF   (K'&RDATAVAL(1) GT 0).ZG59C                  00414100
&ZXRDATAVAL          SETC  ''          RESET IN/OUTPUT                  00414200
&ZMS                 SETC  ' '                                          00414300
&ZMS                 SETC  '&ZMS "RDATAVAL" KEY AND ITS'                00414400
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00414500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00414600
.ZG59C               ANOP  ,                                            00414700
.*-------------------------------------------------------------------   00414800
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00414900
                     AIF   (K'&ZXRDATAVAL LE 0).ZG59R  NOT I/O          00415000
                     AIF   ('&XRDATAVAL'(1,1) NE '(').ZG59R             00415100
&ZCGPR               SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)               00415200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                 00415300
                     AIF   (K'&ZCGPR GT 2).ZG59Q                        00415400
                     AIF   ('&ZCGPR' EQ '0').ZG59Q                      00415500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00415600
                     AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME    00415700
.ZG59P               ANOP  ,                                            00415800
                     AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC         00415900
                     AIF   ('&ZCGPR' LT '2').ZG59Q                      00416000
                     AIF   ('&ZCGPR' LE '12').ZG59R                     00416100
.ZG59Q               ANOP  ,                                            00416200
&ZMS                 SETC  '"RDATAVAL='                                 00416300
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00416400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00416500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00416600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00416700
.ZG59R               ANOP  ,                                            00416800
.*------------------------------------------------------------------    00416900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00417000
.ZG61                ANOP  ,                                            00417100
&ZXUPDATERDATA       SETC  'INPUT'     SET IN/OUTPUT                    00417200
                     AIF   (K'&XUPDATERDATA GT 0).ZG61E  VALID ARG      00417300
                     AIF   (T'&UPDATERDATA EQ 'O').ZG61D  OMITTED       00417400
&ZASYSLNDX           SETA  0                                            00417500
.ZG61A               ANOP  ,           POSITIONAL MACRO KEY             00417600
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00417700
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG61C             00417800
&ZTLC                SETC 'UPDATERDATA'                                 00417900
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG61A    00418000
.ZG61B               ANOP  ,                                            00418100
&ZXUPDATERDATA       SETC  ''          RESET IN/OUTPUT                  00418200
&ZMS                 SETC  'THE "UPDATERDATA" KEY'                      00418300
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00418400
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00418500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00418600
                     AGO   .ZG61E                                       00418700
.ZG61C               ANOP  ,                                            00418800
&ZXUPDATERDATA       SETC  ''          RESET IN/OUTPUT                  00418900
&ZMS                 SETC  '"UPDATERDATA='                              00419000
&ZMS                 SETC  '&ZMS.&UPDATERDATA"'                         00419100
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00419200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00419300
&ZMS                 SETC  '&ZMS "NO"'                                  00419400
&ZMS                 SETC  '&ZMS OR "YES".'                             00419500
                     MNOTE 8,' &ZMS '                                   00419600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00419700
                     AGO   .ZG61E                                       00419800
.ZG61D               ANOP  ,                                            00419900
&XUPDATERDATA        SETC  'NO'        SET DEFAULT KEYWORD              00420000
.ZG61E               ANOP  ,                                            00420100
.*------------------------------------------------------------------    00420200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00420300
.ZG62                ANOP  ,                                            00420400
&ZXRDATA             SETC  'INPUT'     SET IN/OUTPUT                    00420500
                     AIF   (K'&XRDATA GT 0).ZG62E  VALID ARG            00420600
                     AIF   (T'&RDATA EQ 'O').ZG62D  OMITTED             00420700
&ZASYSLNDX           SETA  0                                            00420800
.ZG62A               ANOP  ,           POSITIONAL MACRO KEY             00420900
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00421000
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG62C             00421100
&ZTLC                SETC 'RDATA'                                       00421200
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG62A    00421300
.ZG62B               ANOP  ,                                            00421400
&ZXRDATA             SETC  ''          RESET IN/OUTPUT                  00421500
&ZMS                 SETC  'THE "RDATA" KEY'                            00421600
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00421700
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00421800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00421900
                     AGO   .ZG62E                                       00422000
.ZG62C               ANOP  ,                                            00422100
&ZXRDATA             SETC  ''          RESET IN/OUTPUT                  00422200
&ZMS                 SETC  '"RDATA='                                    00422300
&ZMS                 SETC  '&ZMS.&RDATA"'                               00422400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00422500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00422600
&ZMS                 SETC  '&ZMS "NORDATA",'                            00422700
&ZMS                 SETC  '&ZMS "WRITE",'                              00422800
&ZMS                 SETC  '&ZMS OR "REACQUIRE".'                       00422900
                     MNOTE 8,' &ZMS '                                   00423000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00423100
                     AGO   .ZG62E                                       00423200
.ZG62D               ANOP  ,                                            00423300
&XRDATA              SETC  'NORDATA'   SET DEFAULT KEYWORD              00423400
.ZG62E               ANOP  ,                                            00423500
.*------------------------------------------------------------------    00423600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00423700
&XMODE               SETC  ''          INITIALIZE XVARIABLE             00423800
.*-------------------------------------------------------------------   00423900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00424000
.ZG65                ANOP  ,                                            00424100
                     AIF   (K'&MODE(1) LE 0).ZG65A                      00424200
&ZTLC                SETC 'SYNCSUSPEND'                                 00424300
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG66                 00424400
&XMODE               SETC  'SYNCSUSPEND'        SET KEYWORD             00424500
                     AIF   (N'&MODE LE 1).ZG65A  CK NUM                 00424600
&ZMS                 SETC  '"MODE='                                     00424700
&ZMS                 SETC  '&ZMS.&MODE"'                                00424800
&ZMS                 SETC  '&ZMS "MODE"'                                00424900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00425000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00425100
.ZG65A               ANOP  ,                                            00425200
.*------------------------------------------------------------------    00425300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00425400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00425500
.ZG65A0              AIF   (K'&SYNCFAILDELAY LE 0).ZG65A1  OK           00425600
&ZCVAL               SETC '&ZCVAL SYNCFAILDELAY'  INCORRECT KEY USED    00425700
.ZG65A1              AIF   (K'&MODEVAL LE 0).ZG65A2  OK                 00425800
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00425900
.ZG65A2              AIF   (K'&ZCVAL LE 0).ZG65A3  OK                   00426000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00426100
&ZMS                 SETC  '"MODE'                                      00426200
&ZMS                 SETC  '&ZMS.=&MODE"'                               00426300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00426400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00426500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00426600
.ZG65A3              ANOP  ,                                            00426700
.*-------------------------------------------------------------------   00426800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00426900
.ZG66                ANOP  ,                                            00427000
&ZTLC                SETC 'SYNCEXIT'                                    00427100
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG67                 00427200
&XMODE               SETC  'SYNCEXIT'  SET KEYWORD                      00427300
                     AIF   (N'&MODE LE 1).ZG66A  CK NUM                 00427400
&ZMS                 SETC  '"MODE='                                     00427500
&ZMS                 SETC  '&ZMS.&MODE"'                                00427600
&ZMS                 SETC  '&ZMS "MODE"'                                00427700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00427800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00427900
.ZG66A               ANOP  ,                                            00428000
.*------------------------------------------------------------------    00428100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00428200
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00428300
.ZG66A0              AIF   (K'&SYNCFAILDELAY LE 0).ZG66A1  OK           00428400
&ZCVAL               SETC '&ZCVAL SYNCFAILDELAY'  INCORRECT KEY USED    00428500
.ZG66A1              AIF   (K'&MODEVAL LE 0).ZG66A2  OK                 00428600
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00428700
.ZG66A2              AIF   (K'&ZCVAL LE 0).ZG66A3  OK                   00428800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00428900
&ZMS                 SETC  '"MODE'                                      00429000
&ZMS                 SETC  '&ZMS.=&MODE"'                               00429100
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00429200
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00429300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00429400
.ZG66A3              ANOP  ,                                            00429500
.*-------------------------------------------------------------------   00429600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00429700
.ZG67                ANOP  ,                                            00429800
&ZTLC                SETC 'SYNCFAIL'                                    00429900
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG71                 00430000
&XMODE               SETC  'SYNCFAIL'  SET KEYWORD                      00430100
                     AIF   (N'&MODE LE 1).ZG67A  CK NUM                 00430200
&ZMS                 SETC  '"MODE='                                     00430300
&ZMS                 SETC  '&ZMS.&MODE"'                                00430400
&ZMS                 SETC  '&ZMS "MODE"'                                00430500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00430600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00430700
.ZG67A               ANOP  ,                                            00430800
.*------------------------------------------------------------------    00430900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00431000
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00431100
.ZG67A0              AIF   (K'&MODEVAL LE 0).ZG67A1  OK                 00431200
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00431300
.ZG67A1              AIF   (K'&ZCVAL LE 0).ZG67A2  OK                   00431400
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00431500
&ZMS                 SETC  '"MODE'                                      00431600
&ZMS                 SETC  '&ZMS.=&MODE"'                               00431700
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00431800
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00431900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00432000
.ZG67A2              ANOP  ,                                            00432100
.*----------------------------------------------------------------***   00432200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00432300
                     AIF   (N'&SYNCFAILDELAY LE 1).ZG69A  CK NUM        00432400
&ZMS                 SETC  '"SYNCFAILDELAY='                            00432500
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00432600
&ZMS                 SETC  '&ZMS "SYNCFAILDELAY"'                       00432700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00432800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00432900
.ZG69A               ANOP  ,                                            00433000
.*-------------------------------------------------------------------   00433100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00433200
&ZXSYNCFAILDELAY     SETC  'INPUT'     SET IN/OUTPUT                    00433300
&XSYNCFAILDELAY      SETC  '0'                                          00433400
                     AIF   (K'&SYNCFAILDELAY(1) LE 0).ZG69B  PARM       00433500
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY(1)'  SET XVARIABLE           00433600
                     AIF   (N'&SYNCFAILDELAY GT 1).ZG69B  MULTI         00433700
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY'     SET XVARIABLE           00433800
.ZG69B               ANOP  ,                                            00433900
.*-------------------------------------------------------------------   00434000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00434100
                     AIF   (K'&ZXSYNCFAILDELAY LE 0).ZG69R  NOT I/O     00434200
         AIF   ('&XSYNCFAILDELAY' EQ '0').ZG69R                         00434300
                     AIF   ('&XSYNCFAILDELAY'(1,1) NE '(').ZG69R        00434400
&ZCGPR               SETC  '&XSYNCFAILDELAY'(2,K'&XSYNCFAILDELAY-2)     00434500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                 00434600
                     AIF   (K'&ZCGPR GT 2).ZG69Q                        00434700
                     AIF   ('&ZCGPR' EQ '0').ZG69Q                      00434800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00434900
                     AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME    00435000
.ZG69P               ANOP  ,                                            00435100
                     AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC         00435200
                     AIF   ('&ZCGPR' LT '2').ZG69Q                      00435300
                     AIF   ('&ZCGPR' LE '12').ZG69R                     00435400
.ZG69Q               ANOP  ,                                            00435500
&ZMS                 SETC  '"SYNCFAILDELAY='                            00435600
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00435700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00435800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00435900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00436000
.ZG69R               ANOP  ,                                            00436100
.*-------------------------------------------------------------------   00436200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00436300
.ZG71                ANOP  ,                                            00436400
&ZTLC                SETC 'VALUE'                                       00436500
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG78                 00436600
&XMODE               SETC  'VALUE'     SET KEYWORD                      00436700
                     AIF   (N'&MODE LE 1).ZG71A  CK NUM                 00436800
&ZMS                 SETC  '"MODE='                                     00436900
&ZMS                 SETC  '&ZMS.&MODE"'                                00437000
&ZMS                 SETC  '&ZMS "MODE"'                                00437100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00437200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00437300
.ZG71A               ANOP  ,                                            00437400
.*----------------------------------------------------------------***   00437500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00437600
                     AIF   (N'&MODEVAL LE 1).ZG73A  CK NUM              00437700
&ZMS                 SETC  '"MODEVAL='                                  00437800
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00437900
&ZMS                 SETC  '&ZMS "MODEVAL"'                             00438000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00438100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00438200
.ZG73A               ANOP  ,                                            00438300
.*-------------------------------------------------------------------   00438400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00438500
&ZXMODEVAL           SETC  'INPUT'     SET IN/OUTPUT                    00438600
&XMODEVAL            SETC  '&MODEVAL(1)'        SET XVARIABLE           00438700
                     AIF   (N'&MODEVAL GT 1).ZG73B  MULTI               00438800
&XMODEVAL            SETC  '&MODEVAL'  SET XVARIABLE                    00438900
.ZG73B               AIF   (K'&MODEVAL(1) GT 0).ZG73C                   00439000
&ZXMODEVAL           SETC  ''          RESET IN/OUTPUT                  00439100
&ZMS                 SETC  ' '                                          00439200
&ZMS                 SETC  '&ZMS "MODEVAL" KEY AND ITS'                 00439300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00439400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00439500
.ZG73C               ANOP  ,                                            00439600
.*-------------------------------------------------------------------   00439700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00439800
                     AIF   (K'&ZXMODEVAL LE 0).ZG73R  NOT I/O           00439900
                     AIF   ('&XMODEVAL'(1,1) NE '(').ZG73R              00440000
&ZCGPR               SETC  '&XMODEVAL'(2,K'&XMODEVAL-2)                 00440100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG73P                 00440200
                     AIF   (K'&ZCGPR GT 2).ZG73Q                        00440300
                     AIF   ('&ZCGPR' EQ '0').ZG73Q                      00440400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00440500
                     AIF   (T'&ZCGPR NE 'N').ZG73Q  INVALID REG NAME    00440600
.ZG73P               ANOP  ,                                            00440700
                     AIF   (T'&ZCGPR NE 'N').ZG73R  NON NUMERIC         00440800
                     AIF   ('&ZCGPR' LT '2').ZG73Q                      00440900
                     AIF   ('&ZCGPR' LE '12').ZG73R                     00441000
.ZG73Q               ANOP  ,                                            00441100
&ZMS                 SETC  '"MODEVAL='                                  00441200
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00441300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00441400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00441500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00441600
.ZG73R               ANOP  ,                                            00441700
.*----------------------------------------------------------------***   00441800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00441900
                     AIF   (N'&SYNCFAILDELAY LE 1).ZG76A  CK NUM        00442000
&ZMS                 SETC  '"SYNCFAILDELAY='                            00442100
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00442200
&ZMS                 SETC  '&ZMS "SYNCFAILDELAY"'                       00442300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00442400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00442500
.ZG76A               ANOP  ,                                            00442600
.*-------------------------------------------------------------------   00442700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00442800
&ZXSYNCFAILDELAY     SETC  'INPUT'     SET IN/OUTPUT                    00442900
&XSYNCFAILDELAY      SETC  '0'                                          00443000
                     AIF   (K'&SYNCFAILDELAY(1) LE 0).ZG76B  PARM       00443100
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY(1)'  SET XVARIABLE           00443200
                     AIF   (N'&SYNCFAILDELAY GT 1).ZG76B  MULTI         00443300
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY'     SET XVARIABLE           00443400
.ZG76B               ANOP  ,                                            00443500
.*-------------------------------------------------------------------   00443600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00443700
                     AIF   (K'&ZXSYNCFAILDELAY LE 0).ZG76R  NOT I/O     00443800
         AIF   ('&XSYNCFAILDELAY' EQ '0').ZG76R                         00443900
                     AIF   ('&XSYNCFAILDELAY'(1,1) NE '(').ZG76R        00444000
&ZCGPR               SETC  '&XSYNCFAILDELAY'(2,K'&XSYNCFAILDELAY-2)     00444100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                 00444200
                     AIF   (K'&ZCGPR GT 2).ZG76Q                        00444300
                     AIF   ('&ZCGPR' EQ '0').ZG76Q                      00444400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00444500
                     AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME    00444600
.ZG76P               ANOP  ,                                            00444700
                     AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC         00444800
                     AIF   ('&ZCGPR' LT '2').ZG76Q                      00444900
                     AIF   ('&ZCGPR' LE '12').ZG76R                     00445000
.ZG76Q               ANOP  ,                                            00445100
&ZMS                 SETC  '"SYNCFAILDELAY='                            00445200
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00445300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00445400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00445500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00445600
.ZG76R               ANOP  ,                                            00445700
.*------------------------------------------------------------------    00445800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00445900
.ZG78                ANOP  ,                                            00446000
&ZXMODE              SETC  'INPUT'     SET IN/OUTPUT                    00446100
                     AIF   (K'&XMODE GT 0).ZG78E  VALID ARG             00446200
                     AIF   (T'&MODE EQ 'O').ZG78D  OMITTED              00446300
&ZASYSLNDX           SETA  0                                            00446400
.ZG78A               ANOP  ,           POSITIONAL MACRO KEY             00446500
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00446600
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG78C             00446700
&ZTLC                SETC 'MODE'                                        00446800
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG78A    00446900
.ZG78B               ANOP  ,                                            00447000
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00447100
&ZMS                 SETC  'THE "MODE" KEY'                             00447200
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00447300
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00447400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00447500
                     AGO   .ZG78E                                       00447600
.ZG78C               ANOP  ,                                            00447700
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00447800
&ZMS                 SETC  '"MODE='                                     00447900
&ZMS                 SETC  '&ZMS.&MODE"'                                00448000
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00448100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00448200
&ZMS                 SETC  '&ZMS "SYNCSUSPEND",'                        00448300
&ZMS                 SETC  '&ZMS "SYNCEXIT",'                           00448400
&ZMS                 SETC  '&ZMS "SYNCFAIL",'                           00448500
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00448600
                     MNOTE 8,' &ZMS '                                   00448700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00448800
                     AGO   .ZG78E                                       00448900
.ZG78D               ANOP  ,                                            00449000
&XMODE               SETC  'SYNCSUSPEND'        SET DEFAULT KEYWORD     00449100
.ZG78E               ANOP  ,                                            00449200
.*----------------------------------------------------------------***   00449300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00449400
                     AIF   (N'&CRITICALREQUEST LE 1).ZG80A  CK NUM      00449500
&ZMS                 SETC  '"CRITICALREQUEST='                          00449600
&ZMS                 SETC  '&ZMS.&CRITICALREQUEST"'                     00449700
&ZMS                 SETC  '&ZMS "CRITICALREQUEST"'                     00449800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00449900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00450000
.ZG80A               ANOP  ,                                            00450100
.*-------------------------------------------------------------------   00450200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00450300
&ZXCRITICALREQUEST   SETC  'INPUT'     SET IN/OUTPUT                    00450400
&XCRITICALREQUEST    SETC  '0'                                          00450500
                     AIF   (K'&CRITICALREQUEST(1) LE 0).ZG80B  PARM     00450600
&XCRITICALREQUEST    SETC  '&CRITICALREQUEST(1)'  SET XVARIABLE         00450700
                     AIF   (N'&CRITICALREQUEST GT 1).ZG80B  MULTI       00450800
&XCRITICALREQUEST    SETC  '&CRITICALREQUEST'   SET XVARIABLE           00450900
.ZG80B               ANOP  ,                                            00451000
.*-------------------------------------------------------------------   00451100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00451200
                     AIF   (K'&ZXCRITICALREQUEST LE 0).ZG80R  NOT I/O   00451300
         AIF   ('&XCRITICALREQUEST' EQ '0').ZG80R                       00451400
                     AIF   ('&XCRITICALREQUEST'(1,1) NE '(').ZG80R      00451500
&ZCGPR               SETC  '&XCRITICALREQUEST'(2,K'&XCRITICALREQUEST-2) 00451600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                 00451700
                     AIF   (K'&ZCGPR GT 2).ZG80Q                        00451800
                     AIF   ('&ZCGPR' EQ '0').ZG80Q                      00451900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00452000
                     AIF   (T'&ZCGPR NE 'N').ZG80Q  INVALID REG NAME    00452100
.ZG80P               ANOP  ,                                            00452200
                     AIF   (T'&ZCGPR NE 'N').ZG80R  NON NUMERIC         00452300
                     AIF   ('&ZCGPR' LT '2').ZG80Q                      00452400
                     AIF   ('&ZCGPR' LE '12').ZG80R                     00452500
.ZG80Q               ANOP  ,                                            00452600
&ZMS                 SETC  '"CRITICALREQUEST='                          00452700
&ZMS                 SETC  '&ZMS.&CRITICALREQUEST"'                     00452800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00452900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00453000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00453100
.ZG80R               ANOP  ,                                            00453200
.*----------------------------------------------------------------***   00453300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00453400
                     AIF   (N'&ADUPREQSEQNUM LE 1).ZG83A  CK NUM        00453500
&ZMS                 SETC  '"ADUPREQSEQNUM='                            00453600
&ZMS                 SETC  '&ZMS.&ADUPREQSEQNUM"'                       00453700
&ZMS                 SETC  '&ZMS "ADUPREQSEQNUM"'                       00453800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00453900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00454000
.ZG83A               ANOP  ,                                            00454100
.*-------------------------------------------------------------------   00454200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00454300
                     AIF   (K'&ADUPREQSEQNUM(1) LE 0).ZG83C  NO PARM    00454400
&ZXADUPREQSEQNUM     SETC  'OUTPUT'    SET OUTPUT                       00454500
&XADUPREQSEQNUM      SETC  '&ADUPREQSEQNUM(1)'  SET XVARIABLE           00454600
                     AIF   (N'&ADUPREQSEQNUM GT 1).ZG83C                00454700
&XADUPREQSEQNUM      SETC  '&ADUPREQSEQNUM'     SET XVARIABLE           00454800
.ZG83C               ANOP  ,                                            00454900
.*-------------------------------------------------------------------   00455000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00455100
                     AIF   (K'&ZXADUPREQSEQNUM LE 0).ZG83R  NOT I/O     00455200
                     AIF   ('&XADUPREQSEQNUM'(1,1) NE '(').ZG83R        00455300
&ZCGPR               SETC  '&XADUPREQSEQNUM'(2,K'&XADUPREQSEQNUM-2)     00455400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                 00455500
                     AIF   (K'&ZCGPR GT 2).ZG83Q                        00455600
                     AIF   ('&ZCGPR' EQ '0').ZG83Q                      00455700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00455800
                     AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME    00455900
.ZG83P               ANOP  ,                                            00456000
                     AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC         00456100
                     AIF   ('&ZCGPR' LT '2').ZG83Q                      00456200
                     AIF   ('&ZCGPR' LE '12').ZG83R                     00456300
.ZG83Q               ANOP  ,                                            00456400
&ZMS                 SETC  '"ADUPREQSEQNUM='                            00456500
&ZMS                 SETC  '&ZMS.&ADUPREQSEQNUM"'                       00456600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00456700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00456800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00456900
.ZG83R               ANOP  ,                                            00457000
.*-------------------------------------------------------------------   00457100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00457200
.ZG85                ANOP  ,                                            00457300
&ZTLC                SETC 'ALTER'                                       00457400
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG147             00457500
&XREQUEST            SETC  'ALTER'     SET KEYWORD                      00457600
                     AIF   (N'&REQUEST LE 1).ZG85A  CK NUM              00457700
&ZMS                 SETC  '"REQUEST='                                  00457800
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00457900
&ZMS                 SETC  '&ZMS "REQUEST"'                             00458000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00458100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00458200
.ZG85A               ANOP  ,                                            00458300
.*------------------------------------------------------------------    00458400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00458500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00458600
.ZG85A0              AIF   (K'&LOCKDATA LE 0).ZG85A1  OK                00458700
&ZCVAL               SETC '&ZCVAL LOCKDATA'     INCORRECT KEY USED      00458800
.ZG85A1              AIF   (K'&CONID LE 0).ZG85A2  OK                   00458900
&ZCVAL               SETC '&ZCVAL CONID'        INCORRECT KEY USED      00459000
.ZG85A2              AIF   (K'&UPDATERDATA LE 0).ZG85A3  OK             00459100
&ZCVAL               SETC '&ZCVAL UPDATERDATA'  INCORRECT KEY USED      00459200
.ZG85A3              AIF   (K'&REQBUFFER LE 0).ZG85A4  OK               00459300
&ZCVAL               SETC '&ZCVAL REQBUFFER'    INCORRECT KEY USED      00459400
.ZG85A4              AIF   (K'&REQNUM LE 0).ZG85A5  OK                  00459500
&ZCVAL               SETC '&ZCVAL REQNUM'       INCORRECT KEY USED      00459600
.ZG85A5              AIF   (K'&REQVERSION LE 0).ZG85A6  OK              00459700
&ZCVAL               SETC '&ZCVAL REQVERSION'   INCORRECT KEY USED      00459800
.ZG85A6              AIF   (K'&REQPROC LE 0).ZG85A7  OK                 00459900
&ZCVAL               SETC '&ZCVAL REQPROC'      INCORRECT KEY USED      00460000
.ZG85A7              AIF   (K'&ZCVAL LE 0).ZG85A8  OK                   00460100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00460200
&ZMS                 SETC  '"REQUEST'                                   00460300
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00460400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00460500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00460600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00460700
.ZG85A8              ANOP  ,                                            00460800
.*----------------------------------------------------------------***   00460900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00461000
                     AIF   (N'&RNAME LE 1).ZG87A  CK NUM                00461100
&ZMS                 SETC  '"RNAME='                                    00461200
&ZMS                 SETC  '&ZMS.&RNAME"'                               00461300
&ZMS                 SETC  '&ZMS "RNAME"'                               00461400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00461500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00461600
.ZG87A               ANOP  ,                                            00461700
.*-------------------------------------------------------------------   00461800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00461900
&ZXRNAME             SETC  'INPUT'     SET IN/OUTPUT                    00462000
&XRNAME              SETC  '&RNAME(1)'          SET XVARIABLE           00462100
                     AIF   (N'&RNAME GT 1).ZG87B  MULTI                 00462200
&XRNAME              SETC  '&RNAME'    SET XVARIABLE                    00462300
.ZG87B               AIF   (K'&RNAME(1) GT 0).ZG87C                     00462400
&ZXRNAME             SETC  ''          RESET IN/OUTPUT                  00462500
&ZMS                 SETC  ' '                                          00462600
&ZMS                 SETC  '&ZMS "RNAME" KEY AND ITS'                   00462700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00462800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00462900
.ZG87C               ANOP  ,                                            00463000
.*-------------------------------------------------------------------   00463100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00463200
                     AIF   (K'&ZXRNAME LE 0).ZG87R  NOT I/O             00463300
                     AIF   ('&XRNAME'(1,1) NE '(').ZG87R                00463400
&ZCGPR               SETC  '&XRNAME'(2,K'&XRNAME-2)                     00463500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                 00463600
                     AIF   (K'&ZCGPR GT 2).ZG87Q                        00463700
                     AIF   ('&ZCGPR' EQ '0').ZG87Q                      00463800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00463900
                     AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME    00464000
.ZG87P               ANOP  ,                                            00464100
                     AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC         00464200
                     AIF   ('&ZCGPR' LT '2').ZG87Q                      00464300
                     AIF   ('&ZCGPR' LE '12').ZG87R                     00464400
.ZG87Q               ANOP  ,                                            00464500
&ZMS                 SETC  '"RNAME='                                    00464600
&ZMS                 SETC  '&ZMS.&RNAME"'                               00464700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00464800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00464900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00465000
.ZG87R               ANOP  ,                                            00465100
.*----------------------------------------------------------------***   00465200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00465300
                     AIF   (N'&RNAMELEN LE 1).ZG90A  CK NUM             00465400
&ZMS                 SETC  '"RNAMELEN='                                 00465500
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00465600
&ZMS                 SETC  '&ZMS "RNAMELEN"'                            00465700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00465800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00465900
.ZG90A               ANOP  ,                                            00466000
.*-------------------------------------------------------------------   00466100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00466200
&ZXRNAMELEN          SETC  'INPUT'     SET IN/OUTPUT                    00466300
&XRNAMELEN           SETC  'NO_RNAMELEN'                                00466400
                     AIF   (K'&RNAMELEN(1) LE 0).ZG90B  PARM            00466500
&XRNAMELEN           SETC  '&RNAMELEN(1)'       SET XVARIABLE           00466600
                     AIF   (N'&RNAMELEN GT 1).ZG90B  MULTI              00466700
&XRNAMELEN           SETC  '&RNAMELEN'          SET XVARIABLE           00466800
.ZG90B               ANOP  ,                                            00466900
.*-------------------------------------------------------------------   00467000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00467100
                     AIF   (K'&ZXRNAMELEN LE 0).ZG90R  NOT I/O          00467200
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').ZG90R                    00467300
                     AIF   ('&XRNAMELEN'(1,1) NE '(').ZG90R             00467400
&ZCGPR               SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)               00467500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                 00467600
                     AIF   (K'&ZCGPR GT 2).ZG90Q                        00467700
                     AIF   ('&ZCGPR' EQ '0').ZG90Q                      00467800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00467900
                     AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME    00468000
.ZG90P               ANOP  ,                                            00468100
                     AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC         00468200
                     AIF   ('&ZCGPR' LT '2').ZG90Q                      00468300
                     AIF   ('&ZCGPR' LE '12').ZG90R                     00468400
.ZG90Q               ANOP  ,                                            00468500
&ZMS                 SETC  '"RNAMELEN='                                 00468600
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00468700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00468800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00468900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00469000
.ZG90R               ANOP  ,                                            00469100
.*----------------------------------------------------------------***   00469200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00469300
                     AIF   (N'&HASHVAL LE 1).ZG93A  CK NUM              00469400
&ZMS                 SETC  '"HASHVAL='                                  00469500
&ZMS                 SETC  '&ZMS.&HASHVAL"'                             00469600
&ZMS                 SETC  '&ZMS "HASHVAL"'                             00469700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00469800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00469900
.ZG93A               ANOP  ,                                            00470000
.*-------------------------------------------------------------------   00470100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00470200
&ZXHASHVAL           SETC  'INPUT'     SET IN/OUTPUT                    00470300
&XHASHVAL            SETC  '&HASHVAL(1)'        SET XVARIABLE           00470400
                     AIF   (N'&HASHVAL GT 1).ZG93B  MULTI               00470500
&XHASHVAL            SETC  '&HASHVAL'  SET XVARIABLE                    00470600
.ZG93B               AIF   (K'&HASHVAL(1) GT 0).ZG93C                   00470700
&ZXHASHVAL           SETC  ''          RESET IN/OUTPUT                  00470800
&ZMS                 SETC  ' '                                          00470900
&ZMS                 SETC  '&ZMS "HASHVAL" KEY AND ITS'                 00471000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00471100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00471200
.ZG93C               ANOP  ,                                            00471300
.*-------------------------------------------------------------------   00471400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00471500
                     AIF   (K'&ZXHASHVAL LE 0).ZG93R  NOT I/O           00471600
                     AIF   ('&XHASHVAL'(1,1) NE '(').ZG93R              00471700
&ZCGPR               SETC  '&XHASHVAL'(2,K'&XHASHVAL-2)                 00471800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG93P                 00471900
                     AIF   (K'&ZCGPR GT 2).ZG93Q                        00472000
                     AIF   ('&ZCGPR' EQ '0').ZG93Q                      00472100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00472200
                     AIF   (T'&ZCGPR NE 'N').ZG93Q  INVALID REG NAME    00472300
.ZG93P               ANOP  ,                                            00472400
                     AIF   (T'&ZCGPR NE 'N').ZG93R  NON NUMERIC         00472500
                     AIF   ('&ZCGPR' LT '2').ZG93Q                      00472600
                     AIF   ('&ZCGPR' LE '12').ZG93R                     00472700
.ZG93Q               ANOP  ,                                            00472800
&ZMS                 SETC  '"HASHVAL='                                  00472900
&ZMS                 SETC  '&ZMS.&HASHVAL"'                             00473000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00473100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00473200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00473300
.ZG93R               ANOP  ,                                            00473400
.*------------------------------------------------------------------    00473500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00473600
&XSTATE              SETC  ''          INITIALIZE XVARIABLE             00473700
.*-------------------------------------------------------------------   00473800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00473900
.ZG97                ANOP  ,                                            00474000
                     AIF   (K'&STATE(1) LE 0).ZG97A                     00474100
&ZTLC                SETC 'SHR'                                         00474200
                     AIF   ('&STATE(1)' NE '&ZTLC').ZG98                00474300
&XSTATE              SETC  'SHR'       SET KEYWORD                      00474400
                     AIF   (N'&STATE LE 1).ZG97A  CK NUM                00474500
&ZMS                 SETC  '"STATE='                                    00474600
&ZMS                 SETC  '&ZMS.&STATE"'                               00474700
&ZMS                 SETC  '&ZMS "STATE"'                               00474800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00474900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00475000
.ZG97A               ANOP  ,                                            00475100
.*------------------------------------------------------------------    00475200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00475300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00475400
.ZG97A0              AIF   (K'&STATEVAL LE 0).ZG97A1  OK                00475500
&ZCVAL               SETC '&ZCVAL STATEVAL'     INCORRECT KEY USED      00475600
.ZG97A1              AIF   (K'&ZCVAL LE 0).ZG97A2  OK                   00475700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00475800
&ZMS                 SETC  '"STATE'                                     00475900
&ZMS                 SETC  '&ZMS.=&STATE"'                              00476000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00476100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00476200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00476300
.ZG97A2              ANOP  ,                                            00476400
.*-------------------------------------------------------------------   00476500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00476600
.ZG98                ANOP  ,                                            00476700
&ZTLC                SETC 'EXCL'                                        00476800
                     AIF   ('&STATE(1)' NE '&ZTLC').ZG99                00476900
&XSTATE              SETC  'EXCL'      SET KEYWORD                      00477000
                     AIF   (N'&STATE LE 1).ZG98A  CK NUM                00477100
&ZMS                 SETC  '"STATE='                                    00477200
&ZMS                 SETC  '&ZMS.&STATE"'                               00477300
&ZMS                 SETC  '&ZMS "STATE"'                               00477400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00477500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00477600
.ZG98A               ANOP  ,                                            00477700
.*------------------------------------------------------------------    00477800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00477900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00478000
.ZG98A0              AIF   (K'&STATEVAL LE 0).ZG98A1  OK                00478100
&ZCVAL               SETC '&ZCVAL STATEVAL'     INCORRECT KEY USED      00478200
.ZG98A1              AIF   (K'&ZCVAL LE 0).ZG98A2  OK                   00478300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00478400
&ZMS                 SETC  '"STATE'                                     00478500
&ZMS                 SETC  '&ZMS.=&STATE"'                              00478600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00478700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00478800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00478900
.ZG98A2              ANOP  ,                                            00479000
.*-------------------------------------------------------------------   00479100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00479200
.ZG99                ANOP  ,                                            00479300
&ZTLC                SETC 'VALUE'                                       00479400
                     AIF   ('&STATE(1)' NE '&ZTLC').ZG103               00479500
&XSTATE              SETC  'VALUE'     SET KEYWORD                      00479600
                     AIF   (N'&STATE LE 1).ZG99A  CK NUM                00479700
&ZMS                 SETC  '"STATE='                                    00479800
&ZMS                 SETC  '&ZMS.&STATE"'                               00479900
&ZMS                 SETC  '&ZMS "STATE"'                               00480000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00480100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00480200
.ZG99A               ANOP  ,                                            00480300
.*----------------------------------------------------------------***   00480400
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00480500
                     AIF   (N'&STATEVAL LE 1).ZG101A  CK NUM            00480600
&ZMS                 SETC  '"STATEVAL='                                 00480700
&ZMS                 SETC  '&ZMS.&STATEVAL"'                            00480800
&ZMS                 SETC  '&ZMS "STATEVAL"'                            00480900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00481000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00481100
.ZG101A              ANOP  ,                                            00481200
.*-------------------------------------------------------------------   00481300
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00481400
&ZXSTATEVAL          SETC  'INOUT'     SET IN/OUTPUT                    00481500
&XSTATEVAL           SETC  '&STATEVAL(1)'       SET XVARIABLE           00481600
                     AIF   (N'&STATEVAL GT 1).ZG101B  MULTI             00481700
&XSTATEVAL           SETC  '&STATEVAL'          SET XVARIABLE           00481800
.ZG101B              AIF   (K'&STATEVAL(1) GT 0).ZG101C                 00481900
&ZXSTATEVAL          SETC  ''          RESET IN/OUTPUT                  00482000
&ZMS                 SETC  ' '                                          00482100
&ZMS                 SETC  '&ZMS "STATEVAL" KEY AND ITS'                00482200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00482300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00482400
.ZG101C              ANOP  ,                                            00482500
.*-------------------------------------------------------------------   00482600
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00482700
                     AIF   (K'&ZXSTATEVAL LE 0).ZG101R  NOT I/O         00482800
                     AIF   ('&XSTATEVAL'(1,1) NE '(').ZG101R            00482900
&ZCGPR               SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)               00483000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                00483100
                     AIF   (K'&ZCGPR GT 2).ZG101Q                       00483200
                     AIF   ('&ZCGPR' EQ '0').ZG101Q                     00483300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00483400
                     AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME   00483500
.ZG101P              ANOP  ,                                            00483600
                     AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC        00483700
                     AIF   ('&ZCGPR' LT '2').ZG101Q                     00483800
                     AIF   ('&ZCGPR' LE '12').ZG101R                    00483900
.ZG101Q              ANOP  ,                                            00484000
&ZMS                 SETC  '"STATEVAL='                                 00484100
&ZMS                 SETC  '&ZMS.&STATEVAL"'                            00484200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00484300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00484400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00484500
.ZG101R              ANOP  ,                                            00484600
.*------------------------------------------------------------------    00484700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00484800
.ZG103               ANOP  ,                                            00484900
&ZXSTATE             SETC  'INPUT'     SET IN/OUTPUT                    00485000
                     AIF   (K'&XSTATE GT 0).ZG103E  VALID ARG           00485100
                     AIF   (T'&STATE EQ 'O').ZG103D  OMITTED            00485200
&ZASYSLNDX           SETA  0                                            00485300
.ZG103A              ANOP  ,           POSITIONAL MACRO KEY             00485400
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00485500
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG103C            00485600
&ZTLC                SETC 'STATE'                                       00485700
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG103A   00485800
.ZG103B              ANOP  ,                                            00485900
&ZXSTATE             SETC  ''          RESET IN/OUTPUT                  00486000
&ZMS                 SETC  'THE "STATE" KEY'                            00486100
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00486200
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00486300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00486400
                     AGO   .ZG103E                                      00486500
.ZG103C              ANOP  ,                                            00486600
&ZXSTATE             SETC  ''          RESET IN/OUTPUT                  00486700
&ZMS                 SETC  '"STATE='                                    00486800
&ZMS                 SETC  '&ZMS.&STATE"'                               00486900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00487000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00487100
&ZMS                 SETC  '&ZMS "SHR",'                                00487200
&ZMS                 SETC  '&ZMS "EXCL",'                               00487300
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00487400
                     MNOTE 8,' &ZMS '                                   00487500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00487600
                     AGO   .ZG103E                                      00487700
.ZG103D              ANOP  ,                                            00487800
&XSTATE              SETC  'SHR'       SET DEFAULT KEYWORD              00487900
.ZG103E              ANOP  ,                                            00488000
.*----------------------------------------------------------------***   00488100
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00488200
                     AIF   (N'&UDATAVAL LE 1).ZG105A  CK NUM            00488300
&ZMS                 SETC  '"UDATAVAL='                                 00488400
&ZMS                 SETC  '&ZMS.&UDATAVAL"'                            00488500
&ZMS                 SETC  '&ZMS "UDATAVAL"'                            00488600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00488700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00488800
.ZG105A              ANOP  ,                                            00488900
.*-------------------------------------------------------------------   00489000
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00489100
&ZXUDATAVAL          SETC  'INOUT'     SET IN/OUTPUT                    00489200
&XUDATAVAL           SETC  'ALL_ZEROES'                                 00489300
                     AIF   (K'&UDATAVAL(1) LE 0).ZG105B  PARM           00489400
&XUDATAVAL           SETC  '&UDATAVAL(1)'       SET XVARIABLE           00489500
                     AIF   (N'&UDATAVAL GT 1).ZG105B  MULTI             00489600
&XUDATAVAL           SETC  '&UDATAVAL'          SET XVARIABLE           00489700
.ZG105B              ANOP  ,                                            00489800
.*-------------------------------------------------------------------   00489900
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00490000
                     AIF   (K'&ZXUDATAVAL LE 0).ZG105R  NOT I/O         00490100
         AIF   ('&XUDATAVAL' EQ 'ALL_ZEROES').ZG105R                    00490200
                     AIF   ('&XUDATAVAL'(1,1) NE '(').ZG105R            00490300
&ZCGPR               SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)               00490400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG105P                00490500
                     AIF   (K'&ZCGPR GT 2).ZG105Q                       00490600
                     AIF   ('&ZCGPR' EQ '0').ZG105Q                     00490700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00490800
                     AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME   00490900
.ZG105P              ANOP  ,                                            00491000
                     AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC        00491100
                     AIF   ('&ZCGPR' LT '2').ZG105Q                     00491200
                     AIF   ('&ZCGPR' LE '12').ZG105R                    00491300
.ZG105Q              ANOP  ,                                            00491400
&ZMS                 SETC  '"UDATAVAL='                                 00491500
&ZMS                 SETC  '&ZMS.&UDATAVAL"'                            00491600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00491700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00491800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00491900
.ZG105R              ANOP  ,                                            00492000
.*------------------------------------------------------------------    00492100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492200
&XRDATA              SETC  ''          INITIALIZE XVARIABLE             00492300
.*-------------------------------------------------------------------   00492400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492500
.ZG109               ANOP  ,                                            00492600
                     AIF   (K'&RDATA(1) LE 0).ZG109A                    00492700
&ZTLC                SETC 'UNCHANGED'                                   00492800
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG110               00492900
&XRDATA              SETC  'UNCHANGED'          SET KEYWORD             00493000
                     AIF   (N'&RDATA LE 1).ZG109A  CK NUM               00493100
&ZMS                 SETC  '"RDATA='                                    00493200
&ZMS                 SETC  '&ZMS.&RDATA"'                               00493300
&ZMS                 SETC  '&ZMS "RDATA"'                               00493400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00493500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00493600
.ZG109A              ANOP  ,                                            00493700
.*------------------------------------------------------------------    00493800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00493900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00494000
.ZG109A0             AIF   (K'&RDATAVAL LE 0).ZG109A1  OK               00494100
&ZCVAL               SETC '&ZCVAL RDATAVAL'     INCORRECT KEY USED      00494200
.ZG109A1             AIF   (K'&ENTRYID LE 0).ZG109A2  OK                00494300
&ZCVAL               SETC '&ZCVAL ENTRYID'      INCORRECT KEY USED      00494400
.ZG109A2             AIF   (K'&ENTRYCOUNT LE 0).ZG109A3  OK             00494500
&ZCVAL               SETC '&ZCVAL ENTRYCOUNT'   INCORRECT KEY USED      00494600
.ZG109A3             AIF   (K'&ALLOWUSERSV LE 0).ZG109A4  OK            00494700
&ZCVAL               SETC '&ZCVAL ALLOWUSERSV'  INCORRECT KEY USED      00494800
.ZG109A4             AIF   (K'&ZCVAL LE 0).ZG109A5  OK                  00494900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00495000
&ZMS                 SETC  '"RDATA'                                     00495100
&ZMS                 SETC  '&ZMS.=&RDATA"'                              00495200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00495300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00495400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00495500
.ZG109A5             ANOP  ,                                            00495600
.*-------------------------------------------------------------------   00495700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00495800
.ZG110               ANOP  ,                                            00495900
&ZTLC                SETC 'DELETE'                                      00496000
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG111               00496100
&XRDATA              SETC  'DELETE'    SET KEYWORD                      00496200
                     AIF   (N'&RDATA LE 1).ZG110A  CK NUM               00496300
&ZMS                 SETC  '"RDATA='                                    00496400
&ZMS                 SETC  '&ZMS.&RDATA"'                               00496500
&ZMS                 SETC  '&ZMS "RDATA"'                               00496600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00496700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00496800
.ZG110A              ANOP  ,                                            00496900
.*------------------------------------------------------------------    00497000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00497100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00497200
.ZG110A0             AIF   (K'&RDATAVAL LE 0).ZG110A1  OK               00497300
&ZCVAL               SETC '&ZCVAL RDATAVAL'     INCORRECT KEY USED      00497400
.ZG110A1             AIF   (K'&ENTRYID LE 0).ZG110A2  OK                00497500
&ZCVAL               SETC '&ZCVAL ENTRYID'      INCORRECT KEY USED      00497600
.ZG110A2             AIF   (K'&ENTRYCOUNT LE 0).ZG110A3  OK             00497700
&ZCVAL               SETC '&ZCVAL ENTRYCOUNT'   INCORRECT KEY USED      00497800
.ZG110A3             AIF   (K'&ALLOWUSERSV LE 0).ZG110A4  OK            00497900
&ZCVAL               SETC '&ZCVAL ALLOWUSERSV'  INCORRECT KEY USED      00498000
.ZG110A4             AIF   (K'&ZCVAL LE 0).ZG110A5  OK                  00498100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00498200
&ZMS                 SETC  '"RDATA'                                     00498300
&ZMS                 SETC  '&ZMS.=&RDATA"'                              00498400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00498500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00498600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00498700
.ZG110A5             ANOP  ,                                            00498800
.*-------------------------------------------------------------------   00498900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00499000
.ZG111               ANOP  ,                                            00499100
&ZTLC                SETC 'WRITE'                                       00499200
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG124               00499300
&XRDATA              SETC  'WRITE'     SET KEYWORD                      00499400
                     AIF   (N'&RDATA LE 1).ZG111A  CK NUM               00499500
&ZMS                 SETC  '"RDATA='                                    00499600
&ZMS                 SETC  '&ZMS.&RDATA"'                               00499700
&ZMS                 SETC  '&ZMS "RDATA"'                               00499800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00499900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00500000
.ZG111A              ANOP  ,                                            00500100
.*----------------------------------------------------------------***   00500200
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00500300
                     AIF   (N'&RDATAVAL LE 1).ZG113A  CK NUM            00500400
&ZMS                 SETC  '"RDATAVAL='                                 00500500
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00500600
&ZMS                 SETC  '&ZMS "RDATAVAL"'                            00500700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00500800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00500900
.ZG113A              ANOP  ,                                            00501000
.*-------------------------------------------------------------------   00501100
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00501200
&ZXRDATAVAL          SETC  'INOUT'     SET IN/OUTPUT                    00501300
&XRDATAVAL           SETC  '&RDATAVAL(1)'       SET XVARIABLE           00501400
                     AIF   (N'&RDATAVAL GT 1).ZG113B  MULTI             00501500
&XRDATAVAL           SETC  '&RDATAVAL'          SET XVARIABLE           00501600
.ZG113B              AIF   (K'&RDATAVAL(1) GT 0).ZG113C                 00501700
&ZXRDATAVAL          SETC  ''          RESET IN/OUTPUT                  00501800
&ZMS                 SETC  'WHEN "WRITE" IS SPECIFIED'                  00501900
&ZMS                 SETC  '&ZMS , "RDATAVAL" KEY AND ITS'              00502000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00502100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00502200
.ZG113C              ANOP  ,                                            00502300
.*-------------------------------------------------------------------   00502400
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00502500
                     AIF   (K'&ZXRDATAVAL LE 0).ZG113R  NOT I/O         00502600
                     AIF   ('&XRDATAVAL'(1,1) NE '(').ZG113R            00502700
&ZCGPR               SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)               00502800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG113P                00502900
                     AIF   (K'&ZCGPR GT 2).ZG113Q                       00503000
                     AIF   ('&ZCGPR' EQ '0').ZG113Q                     00503100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00503200
                     AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME   00503300
.ZG113P              ANOP  ,                                            00503400
                     AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC        00503500
                     AIF   ('&ZCGPR' LT '2').ZG113Q                     00503600
                     AIF   ('&ZCGPR' LE '12').ZG113R                    00503700
.ZG113Q              ANOP  ,                                            00503800
&ZMS                 SETC  '"RDATAVAL='                                 00503900
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00504000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00504100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00504200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00504300
.ZG113R              ANOP  ,                                            00504400
.*----------------------------------------------------------------***   00504500
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                00504600
                     AIF   (N'&ENTRYID LE 1).ZG116A  CK NUM             00504700
&ZMS                 SETC  '"ENTRYID='                                  00504800
&ZMS                 SETC  '&ZMS.&ENTRYID"'                             00504900
&ZMS                 SETC  '&ZMS "ENTRYID"'                             00505000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00505100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00505200
.ZG116A              ANOP  ,                                            00505300
.*-------------------------------------------------------------------   00505400
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    00505500
&ZXENTRYID           SETC  'OUTPUT'    SET IN/OUTPUT                    00505600
&XENTRYID            SETC  '&ENTRYID(1)'        SET XVARIABLE           00505700
                     AIF   (N'&ENTRYID GT 1).ZG116B  MULTI              00505800
&XENTRYID            SETC  '&ENTRYID'  SET XVARIABLE                    00505900
.ZG116B              AIF   (K'&ENTRYID(1) GT 0).ZG116C                  00506000
&ZXENTRYID           SETC  ''          RESET IN/OUTPUT                  00506100
&ZMS                 SETC  'WHEN "WRITE" IS SPECIFIED'                  00506200
&ZMS                 SETC  '&ZMS , "ENTRYID" KEY AND ITS'               00506300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00506400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00506500
.ZG116C              ANOP  ,                                            00506600
.*-------------------------------------------------------------------   00506700
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               00506800
                     AIF   (K'&ZXENTRYID LE 0).ZG116R  NOT I/O          00506900
                     AIF   ('&XENTRYID'(1,1) NE '(').ZG116R             00507000
&ZCGPR               SETC  '&XENTRYID'(2,K'&XENTRYID-2)                 00507100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG116P                00507200
                     AIF   (K'&ZCGPR GT 2).ZG116Q                       00507300
                     AIF   ('&ZCGPR' EQ '0').ZG116Q                     00507400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00507500
                     AIF   (T'&ZCGPR NE 'N').ZG116Q  INVALID REG NAME   00507600
.ZG116P              ANOP  ,                                            00507700
                     AIF   (T'&ZCGPR NE 'N').ZG116R  NON NUMERIC        00507800
                     AIF   ('&ZCGPR' LT '2').ZG116Q                     00507900
                     AIF   ('&ZCGPR' LE '12').ZG116R                    00508000
.ZG116Q              ANOP  ,                                            00508100
&ZMS                 SETC  '"ENTRYID='                                  00508200
&ZMS                 SETC  '&ZMS.&ENTRYID"'                             00508300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00508400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00508500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00508600
.ZG116R              ANOP  ,                                            00508700
.*----------------------------------------------------------------***   00508800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00508900
                     AIF   (N'&ENTRYCOUNT LE 1).ZG119A  CK NUM          00509000
&ZMS                 SETC  '"ENTRYCOUNT='                               00509100
&ZMS                 SETC  '&ZMS.&ENTRYCOUNT"'                          00509200
&ZMS                 SETC  '&ZMS "ENTRYCOUNT"'                          00509300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00509400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00509500
.ZG119A              ANOP  ,                                            00509600
.*-------------------------------------------------------------------   00509700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00509800
                     AIF   (K'&ENTRYCOUNT(1) LE 0).ZG119C  NO PARM      00509900
&ZXENTRYCOUNT        SETC  'OUTPUT'    SET OUTPUT                       00510000
&XENTRYCOUNT         SETC  '&ENTRYCOUNT(1)'     SET XVARIABLE           00510100
                     AIF   (N'&ENTRYCOUNT GT 1).ZG119C                  00510200
&XENTRYCOUNT         SETC  '&ENTRYCOUNT'        SET XVARIABLE           00510300
.ZG119C              ANOP  ,                                            00510400
.*-------------------------------------------------------------------   00510500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00510600
                     AIF   (K'&ZXENTRYCOUNT LE 0).ZG119R  NOT I/O       00510700
                     AIF   ('&XENTRYCOUNT'(1,1) NE '(').ZG119R          00510800
&ZCGPR               SETC  '&XENTRYCOUNT'(2,K'&XENTRYCOUNT-2)           00510900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG119P                00511000
                     AIF   (K'&ZCGPR GT 2).ZG119Q                       00511100
                     AIF   ('&ZCGPR' EQ '0').ZG119Q                     00511200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00511300
                     AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME   00511400
.ZG119P              ANOP  ,                                            00511500
                     AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC        00511600
                     AIF   ('&ZCGPR' LT '2').ZG119Q                     00511700
                     AIF   ('&ZCGPR' LE '12').ZG119R                    00511800
.ZG119Q              ANOP  ,                                            00511900
&ZMS                 SETC  '"ENTRYCOUNT='                               00512000
&ZMS                 SETC  '&ZMS.&ENTRYCOUNT"'                          00512100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00512200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00512300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00512400
.ZG119R              ANOP  ,                                            00512500
.*----------------------------------------------------------------***   00512600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00512700
                     AIF   (N'&ALLOWUSERSV LE 1).ZG122A  CK NUM         00512800
&ZMS                 SETC  '"ALLOWUSERSV='                              00512900
&ZMS                 SETC  '&ZMS.&ALLOWUSERSV"'                         00513000
&ZMS                 SETC  '&ZMS "ALLOWUSERSV"'                         00513100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00513200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00513300
.ZG122A              ANOP  ,                                            00513400
.*-------------------------------------------------------------------   00513500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00513600
&ZXALLOWUSERSV       SETC  'INPUT'     SET IN/OUTPUT                    00513700
&XALLOWUSERSV        SETC  '0'                                          00513800
                     AIF   (K'&ALLOWUSERSV(1) LE 0).ZG122B  PARM        00513900
&XALLOWUSERSV        SETC  '&ALLOWUSERSV(1)'    SET XVARIABLE           00514000
                     AIF   (N'&ALLOWUSERSV GT 1).ZG122B  MULTI          00514100
&XALLOWUSERSV        SETC  '&ALLOWUSERSV'       SET XVARIABLE           00514200
.ZG122B              ANOP  ,                                            00514300
.*-------------------------------------------------------------------   00514400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00514500
                     AIF   (K'&ZXALLOWUSERSV LE 0).ZG122R  NOT I/O      00514600
         AIF   ('&XALLOWUSERSV' EQ '0').ZG122R                          00514700
                     AIF   ('&XALLOWUSERSV'(1,1) NE '(').ZG122R         00514800
&ZCGPR               SETC  '&XALLOWUSERSV'(2,K'&XALLOWUSERSV-2)         00514900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG122P                00515000
                     AIF   (K'&ZCGPR GT 2).ZG122Q                       00515100
                     AIF   ('&ZCGPR' EQ '0').ZG122Q                     00515200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00515300
                     AIF   (T'&ZCGPR NE 'N').ZG122Q  INVALID REG NAME   00515400
.ZG122P              ANOP  ,                                            00515500
                     AIF   (T'&ZCGPR NE 'N').ZG122R  NON NUMERIC        00515600
                     AIF   ('&ZCGPR' LT '2').ZG122Q                     00515700
                     AIF   ('&ZCGPR' LE '12').ZG122R                    00515800
.ZG122Q              ANOP  ,                                            00515900
&ZMS                 SETC  '"ALLOWUSERSV='                              00516000
&ZMS                 SETC  '&ZMS.&ALLOWUSERSV"'                         00516100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00516200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00516300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00516400
.ZG122R              ANOP  ,                                            00516500
.*------------------------------------------------------------------    00516600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00516700
.ZG124               ANOP  ,                                            00516800
&ZXRDATA             SETC  'INPUT'     SET IN/OUTPUT                    00516900
                     AIF   (K'&XRDATA GT 0).ZG124E  VALID ARG           00517000
                     AIF   (T'&RDATA EQ 'O').ZG124D  OMITTED            00517100
&ZASYSLNDX           SETA  0                                            00517200
.ZG124A              ANOP  ,           POSITIONAL MACRO KEY             00517300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00517400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG124C            00517500
&ZTLC                SETC 'RDATA'                                       00517600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG124A   00517700
.ZG124B              ANOP  ,                                            00517800
&ZXRDATA             SETC  ''          RESET IN/OUTPUT                  00517900
&ZMS                 SETC  'THE "RDATA" KEY'                            00518000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00518100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00518200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00518300
                     AGO   .ZG124E                                      00518400
.ZG124C              ANOP  ,                                            00518500
&ZXRDATA             SETC  ''          RESET IN/OUTPUT                  00518600
&ZMS                 SETC  '"RDATA='                                    00518700
&ZMS                 SETC  '&ZMS.&RDATA"'                               00518800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00518900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00519000
&ZMS                 SETC  '&ZMS "UNCHANGED",'                          00519100
&ZMS                 SETC  '&ZMS "DELETE",'                             00519200
&ZMS                 SETC  '&ZMS OR "WRITE".'                           00519300
                     MNOTE 8,' &ZMS '                                   00519400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00519500
                     AGO   .ZG124E                                      00519600
.ZG124D              ANOP  ,                                            00519700
&XRDATA              SETC  'UNCHANGED'          SET DEFAULT KEYWORD     00519800
.ZG124E              ANOP  ,                                            00519900
.*------------------------------------------------------------------    00520000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00520100
&XMODE               SETC  ''          INITIALIZE XVARIABLE             00520200
.*-------------------------------------------------------------------   00520300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00520400
.ZG127               ANOP  ,                                            00520500
                     AIF   (K'&MODE(1) LE 0).ZG127A                     00520600
&ZTLC                SETC 'SYNCSUSPEND'                                 00520700
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG128                00520800
&XMODE               SETC  'SYNCSUSPEND'        SET KEYWORD             00520900
                     AIF   (N'&MODE LE 1).ZG127A  CK NUM                00521000
&ZMS                 SETC  '"MODE='                                     00521100
&ZMS                 SETC  '&ZMS.&MODE"'                                00521200
&ZMS                 SETC  '&ZMS "MODE"'                                00521300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00521400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00521500
.ZG127A              ANOP  ,                                            00521600
.*------------------------------------------------------------------    00521700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00521800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00521900
.ZG127A0             AIF   (K'&SYNCFAILDELAY LE 0).ZG127A1  OK          00522000
&ZCVAL               SETC '&ZCVAL SYNCFAILDELAY'  INCORRECT KEY USED    00522100
.ZG127A1             AIF   (K'&MODEVAL LE 0).ZG127A2  OK                00522200
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00522300
.ZG127A2             AIF   (K'&ZCVAL LE 0).ZG127A3  OK                  00522400
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00522500
&ZMS                 SETC  '"MODE'                                      00522600
&ZMS                 SETC  '&ZMS.=&MODE"'                               00522700
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00522800
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00522900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00523000
.ZG127A3             ANOP  ,                                            00523100
.*-------------------------------------------------------------------   00523200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00523300
.ZG128               ANOP  ,                                            00523400
&ZTLC                SETC 'SYNCEXIT'                                    00523500
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG129                00523600
&XMODE               SETC  'SYNCEXIT'  SET KEYWORD                      00523700
                     AIF   (N'&MODE LE 1).ZG128A  CK NUM                00523800
&ZMS                 SETC  '"MODE='                                     00523900
&ZMS                 SETC  '&ZMS.&MODE"'                                00524000
&ZMS                 SETC  '&ZMS "MODE"'                                00524100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00524200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00524300
.ZG128A              ANOP  ,                                            00524400
.*------------------------------------------------------------------    00524500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00524600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00524700
.ZG128A0             AIF   (K'&SYNCFAILDELAY LE 0).ZG128A1  OK          00524800
&ZCVAL               SETC '&ZCVAL SYNCFAILDELAY'  INCORRECT KEY USED    00524900
.ZG128A1             AIF   (K'&MODEVAL LE 0).ZG128A2  OK                00525000
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00525100
.ZG128A2             AIF   (K'&ZCVAL LE 0).ZG128A3  OK                  00525200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00525300
&ZMS                 SETC  '"MODE'                                      00525400
&ZMS                 SETC  '&ZMS.=&MODE"'                               00525500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00525600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00525700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00525800
.ZG128A3             ANOP  ,                                            00525900
.*-------------------------------------------------------------------   00526000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00526100
.ZG129               ANOP  ,                                            00526200
&ZTLC                SETC 'SYNCFAIL'                                    00526300
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG133                00526400
&XMODE               SETC  'SYNCFAIL'  SET KEYWORD                      00526500
                     AIF   (N'&MODE LE 1).ZG129A  CK NUM                00526600
&ZMS                 SETC  '"MODE='                                     00526700
&ZMS                 SETC  '&ZMS.&MODE"'                                00526800
&ZMS                 SETC  '&ZMS "MODE"'                                00526900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00527000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00527100
.ZG129A              ANOP  ,                                            00527200
.*------------------------------------------------------------------    00527300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00527400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00527500
.ZG129A0             AIF   (K'&MODEVAL LE 0).ZG129A1  OK                00527600
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00527700
.ZG129A1             AIF   (K'&ZCVAL LE 0).ZG129A2  OK                  00527800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00527900
&ZMS                 SETC  '"MODE'                                      00528000
&ZMS                 SETC  '&ZMS.=&MODE"'                               00528100
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00528200
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00528300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00528400
.ZG129A2             ANOP  ,                                            00528500
.*----------------------------------------------------------------***   00528600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00528700
                     AIF   (N'&SYNCFAILDELAY LE 1).ZG131A  CK NUM       00528800
&ZMS                 SETC  '"SYNCFAILDELAY='                            00528900
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00529000
&ZMS                 SETC  '&ZMS "SYNCFAILDELAY"'                       00529100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00529200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00529300
.ZG131A              ANOP  ,                                            00529400
.*-------------------------------------------------------------------   00529500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00529600
&ZXSYNCFAILDELAY     SETC  'INPUT'     SET IN/OUTPUT                    00529700
&XSYNCFAILDELAY      SETC  '0'                                          00529800
                     AIF   (K'&SYNCFAILDELAY(1) LE 0).ZG131B  PARM      00529900
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY(1)'  SET XVARIABLE           00530000
                     AIF   (N'&SYNCFAILDELAY GT 1).ZG131B  MULTI        00530100
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY'     SET XVARIABLE           00530200
.ZG131B              ANOP  ,                                            00530300
.*-------------------------------------------------------------------   00530400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00530500
                     AIF   (K'&ZXSYNCFAILDELAY LE 0).ZG131R  NOT I/O    00530600
         AIF   ('&XSYNCFAILDELAY' EQ '0').ZG131R                        00530700
                     AIF   ('&XSYNCFAILDELAY'(1,1) NE '(').ZG131R       00530800
&ZCGPR               SETC  '&XSYNCFAILDELAY'(2,K'&XSYNCFAILDELAY-2)     00530900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG131P                00531000
                     AIF   (K'&ZCGPR GT 2).ZG131Q                       00531100
                     AIF   ('&ZCGPR' EQ '0').ZG131Q                     00531200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00531300
                     AIF   (T'&ZCGPR NE 'N').ZG131Q  INVALID REG NAME   00531400
.ZG131P              ANOP  ,                                            00531500
                     AIF   (T'&ZCGPR NE 'N').ZG131R  NON NUMERIC        00531600
                     AIF   ('&ZCGPR' LT '2').ZG131Q                     00531700
                     AIF   ('&ZCGPR' LE '12').ZG131R                    00531800
.ZG131Q              ANOP  ,                                            00531900
&ZMS                 SETC  '"SYNCFAILDELAY='                            00532000
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00532100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00532200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00532300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00532400
.ZG131R              ANOP  ,                                            00532500
.*-------------------------------------------------------------------   00532600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00532700
.ZG133               ANOP  ,                                            00532800
&ZTLC                SETC 'VALUE'                                       00532900
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG140                00533000
&XMODE               SETC  'VALUE'     SET KEYWORD                      00533100
                     AIF   (N'&MODE LE 1).ZG133A  CK NUM                00533200
&ZMS                 SETC  '"MODE='                                     00533300
&ZMS                 SETC  '&ZMS.&MODE"'                                00533400
&ZMS                 SETC  '&ZMS "MODE"'                                00533500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00533600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00533700
.ZG133A              ANOP  ,                                            00533800
.*----------------------------------------------------------------***   00533900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00534000
                     AIF   (N'&MODEVAL LE 1).ZG135A  CK NUM             00534100
&ZMS                 SETC  '"MODEVAL='                                  00534200
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00534300
&ZMS                 SETC  '&ZMS "MODEVAL"'                             00534400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00534500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00534600
.ZG135A              ANOP  ,                                            00534700
.*-------------------------------------------------------------------   00534800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00534900
&ZXMODEVAL           SETC  'INPUT'     SET IN/OUTPUT                    00535000
&XMODEVAL            SETC  '&MODEVAL(1)'        SET XVARIABLE           00535100
                     AIF   (N'&MODEVAL GT 1).ZG135B  MULTI              00535200
&XMODEVAL            SETC  '&MODEVAL'  SET XVARIABLE                    00535300
.ZG135B              AIF   (K'&MODEVAL(1) GT 0).ZG135C                  00535400
&ZXMODEVAL           SETC  ''          RESET IN/OUTPUT                  00535500
&ZMS                 SETC  'WHEN "VALUE" IS SPECIFIED'                  00535600
&ZMS                 SETC  '&ZMS , "MODEVAL" KEY AND ITS'               00535700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00535800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00535900
.ZG135C              ANOP  ,                                            00536000
.*-------------------------------------------------------------------   00536100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00536200
                     AIF   (K'&ZXMODEVAL LE 0).ZG135R  NOT I/O          00536300
                     AIF   ('&XMODEVAL'(1,1) NE '(').ZG135R             00536400
&ZCGPR               SETC  '&XMODEVAL'(2,K'&XMODEVAL-2)                 00536500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                00536600
                     AIF   (K'&ZCGPR GT 2).ZG135Q                       00536700
                     AIF   ('&ZCGPR' EQ '0').ZG135Q                     00536800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00536900
                     AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME   00537000
.ZG135P              ANOP  ,                                            00537100
                     AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC        00537200
                     AIF   ('&ZCGPR' LT '2').ZG135Q                     00537300
                     AIF   ('&ZCGPR' LE '12').ZG135R                    00537400
.ZG135Q              ANOP  ,                                            00537500
&ZMS                 SETC  '"MODEVAL='                                  00537600
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00537700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00537800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00537900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00538000
.ZG135R              ANOP  ,                                            00538100
.*----------------------------------------------------------------***   00538200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00538300
                     AIF   (N'&SYNCFAILDELAY LE 1).ZG138A  CK NUM       00538400
&ZMS                 SETC  '"SYNCFAILDELAY='                            00538500
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00538600
&ZMS                 SETC  '&ZMS "SYNCFAILDELAY"'                       00538700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00538800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00538900
.ZG138A              ANOP  ,                                            00539000
.*-------------------------------------------------------------------   00539100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00539200
&ZXSYNCFAILDELAY     SETC  'INPUT'     SET IN/OUTPUT                    00539300
&XSYNCFAILDELAY      SETC  '0'                                          00539400
                     AIF   (K'&SYNCFAILDELAY(1) LE 0).ZG138B  PARM      00539500
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY(1)'  SET XVARIABLE           00539600
                     AIF   (N'&SYNCFAILDELAY GT 1).ZG138B  MULTI        00539700
&XSYNCFAILDELAY      SETC  '&SYNCFAILDELAY'     SET XVARIABLE           00539800
.ZG138B              ANOP  ,                                            00539900
.*-------------------------------------------------------------------   00540000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00540100
                     AIF   (K'&ZXSYNCFAILDELAY LE 0).ZG138R  NOT I/O    00540200
         AIF   ('&XSYNCFAILDELAY' EQ '0').ZG138R                        00540300
                     AIF   ('&XSYNCFAILDELAY'(1,1) NE '(').ZG138R       00540400
&ZCGPR               SETC  '&XSYNCFAILDELAY'(2,K'&XSYNCFAILDELAY-2)     00540500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG138P                00540600
                     AIF   (K'&ZCGPR GT 2).ZG138Q                       00540700
                     AIF   ('&ZCGPR' EQ '0').ZG138Q                     00540800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00540900
                     AIF   (T'&ZCGPR NE 'N').ZG138Q  INVALID REG NAME   00541000
.ZG138P              ANOP  ,                                            00541100
                     AIF   (T'&ZCGPR NE 'N').ZG138R  NON NUMERIC        00541200
                     AIF   ('&ZCGPR' LT '2').ZG138Q                     00541300
                     AIF   ('&ZCGPR' LE '12').ZG138R                    00541400
.ZG138Q              ANOP  ,                                            00541500
&ZMS                 SETC  '"SYNCFAILDELAY='                            00541600
&ZMS                 SETC  '&ZMS.&SYNCFAILDELAY"'                       00541700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00541800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00541900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00542000
.ZG138R              ANOP  ,                                            00542100
.*------------------------------------------------------------------    00542200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00542300
.ZG140               ANOP  ,                                            00542400
&ZXMODE              SETC  'INPUT'     SET IN/OUTPUT                    00542500
                     AIF   (K'&XMODE GT 0).ZG140E  VALID ARG            00542600
                     AIF   (T'&MODE EQ 'O').ZG140D  OMITTED             00542700
&ZASYSLNDX           SETA  0                                            00542800
.ZG140A              ANOP  ,           POSITIONAL MACRO KEY             00542900
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00543000
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG140C            00543100
&ZTLC                SETC 'MODE'                                        00543200
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG140A   00543300
.ZG140B              ANOP  ,                                            00543400
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00543500
&ZMS                 SETC  'THE "MODE" KEY'                             00543600
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00543700
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00543800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00543900
                     AGO   .ZG140E                                      00544000
.ZG140C              ANOP  ,                                            00544100
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00544200
&ZMS                 SETC  '"MODE='                                     00544300
&ZMS                 SETC  '&ZMS.&MODE"'                                00544400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00544500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00544600
&ZMS                 SETC  '&ZMS "SYNCSUSPEND",'                        00544700
&ZMS                 SETC  '&ZMS "SYNCEXIT",'                           00544800
&ZMS                 SETC  '&ZMS "SYNCFAIL",'                           00544900
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00545000
                     MNOTE 8,' &ZMS '                                   00545100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00545200
                     AGO   .ZG140E                                      00545300
.ZG140D              ANOP  ,                                            00545400
&XMODE               SETC  'SYNCSUSPEND'        SET DEFAULT KEYWORD     00545500
.ZG140E              ANOP  ,                                            00545600
.*----------------------------------------------------------------***   00545700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00545800
                     AIF   (N'&CRITICALREQUEST LE 1).ZG142A  CK NUM     00545900
&ZMS                 SETC  '"CRITICALREQUEST='                          00546000
&ZMS                 SETC  '&ZMS.&CRITICALREQUEST"'                     00546100
&ZMS                 SETC  '&ZMS "CRITICALREQUEST"'                     00546200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00546300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00546400
.ZG142A              ANOP  ,                                            00546500
.*-------------------------------------------------------------------   00546600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00546700
&ZXCRITICALREQUEST   SETC  'INPUT'     SET IN/OUTPUT                    00546800
&XCRITICALREQUEST    SETC  '0'                                          00546900
                     AIF   (K'&CRITICALREQUEST(1) LE 0).ZG142B  PARM    00547000
&XCRITICALREQUEST    SETC  '&CRITICALREQUEST(1)'  SET XVARIABLE         00547100
                     AIF   (N'&CRITICALREQUEST GT 1).ZG142B  MULTI      00547200
&XCRITICALREQUEST    SETC  '&CRITICALREQUEST'   SET XVARIABLE           00547300
.ZG142B              ANOP  ,                                            00547400
.*-------------------------------------------------------------------   00547500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00547600
                     AIF   (K'&ZXCRITICALREQUEST LE 0).ZG142R  NOT I/O  00547700
         AIF   ('&XCRITICALREQUEST' EQ '0').ZG142R                      00547800
                     AIF   ('&XCRITICALREQUEST'(1,1) NE '(').ZG142R     00547900
&ZCGPR               SETC  '&XCRITICALREQUEST'(2,K'&XCRITICALREQUEST-2) 00548000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG142P                00548100
                     AIF   (K'&ZCGPR GT 2).ZG142Q                       00548200
                     AIF   ('&ZCGPR' EQ '0').ZG142Q                     00548300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00548400
                     AIF   (T'&ZCGPR NE 'N').ZG142Q  INVALID REG NAME   00548500
.ZG142P              ANOP  ,                                            00548600
                     AIF   (T'&ZCGPR NE 'N').ZG142R  NON NUMERIC        00548700
                     AIF   ('&ZCGPR' LT '2').ZG142Q                     00548800
                     AIF   ('&ZCGPR' LE '12').ZG142R                    00548900
.ZG142Q              ANOP  ,                                            00549000
&ZMS                 SETC  '"CRITICALREQUEST='                          00549100
&ZMS                 SETC  '&ZMS.&CRITICALREQUEST"'                     00549200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00549300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00549400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00549500
.ZG142R              ANOP  ,                                            00549600
.*----------------------------------------------------------------***   00549700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00549800
                     AIF   (N'&ADUPREQSEQNUM LE 1).ZG145A  CK NUM       00549900
&ZMS                 SETC  '"ADUPREQSEQNUM='                            00550000
&ZMS                 SETC  '&ZMS.&ADUPREQSEQNUM"'                       00550100
&ZMS                 SETC  '&ZMS "ADUPREQSEQNUM"'                       00550200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00550300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00550400
.ZG145A              ANOP  ,                                            00550500
.*-------------------------------------------------------------------   00550600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00550700
                     AIF   (K'&ADUPREQSEQNUM(1) LE 0).ZG145C  NO PARM   00550800
&ZXADUPREQSEQNUM     SETC  'OUTPUT'    SET OUTPUT                       00550900
&XADUPREQSEQNUM      SETC  '&ADUPREQSEQNUM(1)'  SET XVARIABLE           00551000
                     AIF   (N'&ADUPREQSEQNUM GT 1).ZG145C               00551100
&XADUPREQSEQNUM      SETC  '&ADUPREQSEQNUM'     SET XVARIABLE           00551200
.ZG145C              ANOP  ,                                            00551300
.*-------------------------------------------------------------------   00551400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00551500
                     AIF   (K'&ZXADUPREQSEQNUM LE 0).ZG145R  NOT I/O    00551600
                     AIF   ('&XADUPREQSEQNUM'(1,1) NE '(').ZG145R       00551700
&ZCGPR               SETC  '&XADUPREQSEQNUM'(2,K'&XADUPREQSEQNUM-2)     00551800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG145P                00551900
                     AIF   (K'&ZCGPR GT 2).ZG145Q                       00552000
                     AIF   ('&ZCGPR' EQ '0').ZG145Q                     00552100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00552200
                     AIF   (T'&ZCGPR NE 'N').ZG145Q  INVALID REG NAME   00552300
.ZG145P              ANOP  ,                                            00552400
                     AIF   (T'&ZCGPR NE 'N').ZG145R  NON NUMERIC        00552500
                     AIF   ('&ZCGPR' LT '2').ZG145Q                     00552600
                     AIF   ('&ZCGPR' LE '12').ZG145R                    00552700
.ZG145Q              ANOP  ,                                            00552800
&ZMS                 SETC  '"ADUPREQSEQNUM='                            00552900
&ZMS                 SETC  '&ZMS.&ADUPREQSEQNUM"'                       00553000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00553100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00553200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00553300
.ZG145R              ANOP  ,                                            00553400
.*-------------------------------------------------------------------   00553500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00553600
.ZG147               ANOP  ,                                            00553700
&ZTLC                SETC 'RELEASE'                                     00553800
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG186             00553900
&XREQUEST            SETC  'RELEASE'   SET KEYWORD                      00554000
                     AIF   (N'&REQUEST LE 1).ZG147A  CK NUM             00554100
&ZMS                 SETC  '"REQUEST='                                  00554200
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00554300
&ZMS                 SETC  '&ZMS "REQUEST"'                             00554400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00554500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00554600
.ZG147A              ANOP  ,                                            00554700
.*------------------------------------------------------------------    00554800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00554900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00555000
.ZG147A0             AIF   (K'&LOCKDATA LE 0).ZG147A1  OK               00555100
&ZCVAL               SETC '&ZCVAL LOCKDATA'     INCORRECT KEY USED      00555200
.ZG147A1             AIF   (K'&STATE LE 0).ZG147A2  OK                  00555300
&ZCVAL               SETC '&ZCVAL STATE'        INCORRECT KEY USED      00555400
.ZG147A2             AIF   (K'&STATEVAL LE 0).ZG147A3  OK               00555500
&ZCVAL               SETC '&ZCVAL STATEVAL'     INCORRECT KEY USED      00555600
.ZG147A3             AIF   (K'&ENTRYID LE 0).ZG147A4  OK                00555700
&ZCVAL               SETC '&ZCVAL ENTRYID'      INCORRECT KEY USED      00555800
.ZG147A4             AIF   (K'&ENTRYCOUNT LE 0).ZG147A5  OK             00555900
&ZCVAL               SETC '&ZCVAL ENTRYCOUNT'   INCORRECT KEY USED      00556000
.ZG147A5             AIF   (K'&ALLOWUSERSV LE 0).ZG147A6  OK            00556100
&ZCVAL               SETC '&ZCVAL ALLOWUSERSV'  INCORRECT KEY USED      00556200
.ZG147A6             AIF   (K'&CONID LE 0).ZG147A7  OK                  00556300
&ZCVAL               SETC '&ZCVAL CONID'        INCORRECT KEY USED      00556400
.ZG147A7             AIF   (K'&SYNCFAILDELAY LE 0).ZG147A8  OK          00556500
&ZCVAL               SETC '&ZCVAL SYNCFAILDELAY'  INCORRECT KEY USED    00556600
.ZG147A8             AIF   (K'&CRITICALREQUEST LE 0).ZG147A9  OK        00556700
&ZCVAL               SETC '&ZCVAL CRITICALREQUEST'  INCORRECT KEY USED  00556800
.ZG147A9             AIF   (K'&REQBUFFER LE 0).ZG147A10  OK             00556900
&ZCVAL               SETC '&ZCVAL REQBUFFER'    INCORRECT KEY USED      00557000
.ZG147A10            AIF   (K'&REQNUM LE 0).ZG147A11  OK                00557100
&ZCVAL               SETC '&ZCVAL REQNUM'       INCORRECT KEY USED      00557200
.ZG147A11            AIF   (K'&REQVERSION LE 0).ZG147A12  OK            00557300
&ZCVAL               SETC '&ZCVAL REQVERSION'   INCORRECT KEY USED      00557400
.ZG147A12            AIF   (K'&REQPROC LE 0).ZG147A13  OK               00557500
&ZCVAL               SETC '&ZCVAL REQPROC'      INCORRECT KEY USED      00557600
.ZG147A13            AIF   (K'&ZCVAL LE 0).ZG147A14  OK                 00557700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00557800
&ZMS                 SETC  '"REQUEST'                                   00557900
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00558000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00558100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00558200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00558300
.ZG147A14            ANOP  ,                                            00558400
.*----------------------------------------------------------------***   00558500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00558600
                     AIF   (N'&RNAME LE 1).ZG149A  CK NUM               00558700
&ZMS                 SETC  '"RNAME='                                    00558800
&ZMS                 SETC  '&ZMS.&RNAME"'                               00558900
&ZMS                 SETC  '&ZMS "RNAME"'                               00559000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00559100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00559200
.ZG149A              ANOP  ,                                            00559300
.*-------------------------------------------------------------------   00559400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00559500
&ZXRNAME             SETC  'INPUT'     SET IN/OUTPUT                    00559600
&XRNAME              SETC  '&RNAME(1)'          SET XVARIABLE           00559700
                     AIF   (N'&RNAME GT 1).ZG149B  MULTI                00559800
&XRNAME              SETC  '&RNAME'    SET XVARIABLE                    00559900
.ZG149B              AIF   (K'&RNAME(1) GT 0).ZG149C                    00560000
&ZXRNAME             SETC  ''          RESET IN/OUTPUT                  00560100
&ZMS                 SETC  ' '                                          00560200
&ZMS                 SETC  '&ZMS "RNAME" KEY AND ITS'                   00560300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00560400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00560500
.ZG149C              ANOP  ,                                            00560600
.*-------------------------------------------------------------------   00560700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00560800
                     AIF   (K'&ZXRNAME LE 0).ZG149R  NOT I/O            00560900
                     AIF   ('&XRNAME'(1,1) NE '(').ZG149R               00561000
&ZCGPR               SETC  '&XRNAME'(2,K'&XRNAME-2)                     00561100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG149P                00561200
                     AIF   (K'&ZCGPR GT 2).ZG149Q                       00561300
                     AIF   ('&ZCGPR' EQ '0').ZG149Q                     00561400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00561500
                     AIF   (T'&ZCGPR NE 'N').ZG149Q  INVALID REG NAME   00561600
.ZG149P              ANOP  ,                                            00561700
                     AIF   (T'&ZCGPR NE 'N').ZG149R  NON NUMERIC        00561800
                     AIF   ('&ZCGPR' LT '2').ZG149Q                     00561900
                     AIF   ('&ZCGPR' LE '12').ZG149R                    00562000
.ZG149Q              ANOP  ,                                            00562100
&ZMS                 SETC  '"RNAME='                                    00562200
&ZMS                 SETC  '&ZMS.&RNAME"'                               00562300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00562400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00562500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00562600
.ZG149R              ANOP  ,                                            00562700
.*----------------------------------------------------------------***   00562800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00562900
                     AIF   (N'&RNAMELEN LE 1).ZG152A  CK NUM            00563000
&ZMS                 SETC  '"RNAMELEN='                                 00563100
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00563200
&ZMS                 SETC  '&ZMS "RNAMELEN"'                            00563300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00563400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00563500
.ZG152A              ANOP  ,                                            00563600
.*-------------------------------------------------------------------   00563700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00563800
&ZXRNAMELEN          SETC  'INPUT'     SET IN/OUTPUT                    00563900
&XRNAMELEN           SETC  'NO_RNAMELEN'                                00564000
                     AIF   (K'&RNAMELEN(1) LE 0).ZG152B  PARM           00564100
&XRNAMELEN           SETC  '&RNAMELEN(1)'       SET XVARIABLE           00564200
                     AIF   (N'&RNAMELEN GT 1).ZG152B  MULTI             00564300
&XRNAMELEN           SETC  '&RNAMELEN'          SET XVARIABLE           00564400
.ZG152B              ANOP  ,                                            00564500
.*-------------------------------------------------------------------   00564600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00564700
                     AIF   (K'&ZXRNAMELEN LE 0).ZG152R  NOT I/O         00564800
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').ZG152R                   00564900
                     AIF   ('&XRNAMELEN'(1,1) NE '(').ZG152R            00565000
&ZCGPR               SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)               00565100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG152P                00565200
                     AIF   (K'&ZCGPR GT 2).ZG152Q                       00565300
                     AIF   ('&ZCGPR' EQ '0').ZG152Q                     00565400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00565500
                     AIF   (T'&ZCGPR NE 'N').ZG152Q  INVALID REG NAME   00565600
.ZG152P              ANOP  ,                                            00565700
                     AIF   (T'&ZCGPR NE 'N').ZG152R  NON NUMERIC        00565800
                     AIF   ('&ZCGPR' LT '2').ZG152Q                     00565900
                     AIF   ('&ZCGPR' LE '12').ZG152R                    00566000
.ZG152Q              ANOP  ,                                            00566100
&ZMS                 SETC  '"RNAMELEN='                                 00566200
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00566300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00566400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00566500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00566600
.ZG152R              ANOP  ,                                            00566700
.*----------------------------------------------------------------***   00566800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00566900
                     AIF   (N'&HASHVAL LE 1).ZG155A  CK NUM             00567000
&ZMS                 SETC  '"HASHVAL='                                  00567100
&ZMS                 SETC  '&ZMS.&HASHVAL"'                             00567200
&ZMS                 SETC  '&ZMS "HASHVAL"'                             00567300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00567400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00567500
.ZG155A              ANOP  ,                                            00567600
.*-------------------------------------------------------------------   00567700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00567800
&ZXHASHVAL           SETC  'INPUT'     SET IN/OUTPUT                    00567900
&XHASHVAL            SETC  '&HASHVAL(1)'        SET XVARIABLE           00568000
                     AIF   (N'&HASHVAL GT 1).ZG155B  MULTI              00568100
&XHASHVAL            SETC  '&HASHVAL'  SET XVARIABLE                    00568200
.ZG155B              AIF   (K'&HASHVAL(1) GT 0).ZG155C                  00568300
&ZXHASHVAL           SETC  ''          RESET IN/OUTPUT                  00568400
&ZMS                 SETC  ' '                                          00568500
&ZMS                 SETC  '&ZMS "HASHVAL" KEY AND ITS'                 00568600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00568700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00568800
.ZG155C              ANOP  ,                                            00568900
.*-------------------------------------------------------------------   00569000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00569100
                     AIF   (K'&ZXHASHVAL LE 0).ZG155R  NOT I/O          00569200
                     AIF   ('&XHASHVAL'(1,1) NE '(').ZG155R             00569300
&ZCGPR               SETC  '&XHASHVAL'(2,K'&XHASHVAL-2)                 00569400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG155P                00569500
                     AIF   (K'&ZCGPR GT 2).ZG155Q                       00569600
                     AIF   ('&ZCGPR' EQ '0').ZG155Q                     00569700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00569800
                     AIF   (T'&ZCGPR NE 'N').ZG155Q  INVALID REG NAME   00569900
.ZG155P              ANOP  ,                                            00570000
                     AIF   (T'&ZCGPR NE 'N').ZG155R  NON NUMERIC        00570100
                     AIF   ('&ZCGPR' LT '2').ZG155Q                     00570200
                     AIF   ('&ZCGPR' LE '12').ZG155R                    00570300
.ZG155Q              ANOP  ,                                            00570400
&ZMS                 SETC  '"HASHVAL='                                  00570500
&ZMS                 SETC  '&ZMS.&HASHVAL"'                             00570600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00570700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00570800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00570900
.ZG155R              ANOP  ,                                            00571000
.*----------------------------------------------------------------***   00571100
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00571200
                     AIF   (N'&UDATAVAL LE 1).ZG158A  CK NUM            00571300
&ZMS                 SETC  '"UDATAVAL='                                 00571400
&ZMS                 SETC  '&ZMS.&UDATAVAL"'                            00571500
&ZMS                 SETC  '&ZMS "UDATAVAL"'                            00571600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00571700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00571800
.ZG158A              ANOP  ,                                            00571900
.*-------------------------------------------------------------------   00572000
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00572100
&ZXUDATAVAL          SETC  'INOUT'     SET IN/OUTPUT                    00572200
&XUDATAVAL           SETC  'ALL_ZEROES'                                 00572300
                     AIF   (K'&UDATAVAL(1) LE 0).ZG158B  PARM           00572400
&XUDATAVAL           SETC  '&UDATAVAL(1)'       SET XVARIABLE           00572500
                     AIF   (N'&UDATAVAL GT 1).ZG158B  MULTI             00572600
&XUDATAVAL           SETC  '&UDATAVAL'          SET XVARIABLE           00572700
.ZG158B              ANOP  ,                                            00572800
.*-------------------------------------------------------------------   00572900
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00573000
                     AIF   (K'&ZXUDATAVAL LE 0).ZG158R  NOT I/O         00573100
         AIF   ('&XUDATAVAL' EQ 'ALL_ZEROES').ZG158R                    00573200
                     AIF   ('&XUDATAVAL'(1,1) NE '(').ZG158R            00573300
&ZCGPR               SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)               00573400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG158P                00573500
                     AIF   (K'&ZCGPR GT 2).ZG158Q                       00573600
                     AIF   ('&ZCGPR' EQ '0').ZG158Q                     00573700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00573800
                     AIF   (T'&ZCGPR NE 'N').ZG158Q  INVALID REG NAME   00573900
.ZG158P              ANOP  ,                                            00574000
                     AIF   (T'&ZCGPR NE 'N').ZG158R  NON NUMERIC        00574100
                     AIF   ('&ZCGPR' LT '2').ZG158Q                     00574200
                     AIF   ('&ZCGPR' LE '12').ZG158R                    00574300
.ZG158Q              ANOP  ,                                            00574400
&ZMS                 SETC  '"UDATAVAL='                                 00574500
&ZMS                 SETC  '&ZMS.&UDATAVAL"'                            00574600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00574700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00574800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00574900
.ZG158R              ANOP  ,                                            00575000
.*------------------------------------------------------------------    00575100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575200
&XRDATA              SETC  ''          INITIALIZE XVARIABLE             00575300
.*-------------------------------------------------------------------   00575400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575500
.ZG162               ANOP  ,                                            00575600
                     AIF   (K'&RDATA(1) LE 0).ZG162A                    00575700
&ZTLC                SETC 'DELETE'                                      00575800
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG163               00575900
&XRDATA              SETC  'DELETE'    SET KEYWORD                      00576000
                     AIF   (N'&RDATA LE 1).ZG162A  CK NUM               00576100
&ZMS                 SETC  '"RDATA='                                    00576200
&ZMS                 SETC  '&ZMS.&RDATA"'                               00576300
&ZMS                 SETC  '&ZMS "RDATA"'                               00576400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00576500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00576600
.ZG162A              ANOP  ,                                            00576700
.*------------------------------------------------------------------    00576800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00576900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00577000
.ZG162A0             AIF   (K'&UPDATERDATA LE 0).ZG162A1  OK            00577100
&ZCVAL               SETC '&ZCVAL UPDATERDATA'  INCORRECT KEY USED      00577200
.ZG162A1             AIF   (K'&RDATAVAL LE 0).ZG162A2  OK               00577300
&ZCVAL               SETC '&ZCVAL RDATAVAL'     INCORRECT KEY USED      00577400
.ZG162A2             AIF   (K'&ZCVAL LE 0).ZG162A3  OK                  00577500
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00577600
&ZMS                 SETC  '"RDATA'                                     00577700
&ZMS                 SETC  '&ZMS.=&RDATA"'                              00577800
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00577900
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00578000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00578100
.ZG162A3             ANOP  ,                                            00578200
.*-------------------------------------------------------------------   00578300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00578400
.ZG163               ANOP  ,                                            00578500
&ZTLC                SETC 'KEEP'                                        00578600
                     AIF   ('&RDATA(1)' NE '&ZTLC').ZG172               00578700
&XRDATA              SETC  'KEEP'      SET KEYWORD                      00578800
                     AIF   (N'&RDATA LE 1).ZG163A  CK NUM               00578900
&ZMS                 SETC  '"RDATA='                                    00579000
&ZMS                 SETC  '&ZMS.&RDATA"'                               00579100
&ZMS                 SETC  '&ZMS "RDATA"'                               00579200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00579300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00579400
.ZG163A              ANOP  ,                                            00579500
.*------------------------------------------------------------------    00579600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00579700
&XUPDATERDATA        SETC  ''          INITIALIZE XVARIABLE             00579800
.*-------------------------------------------------------------------   00579900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00580000
.ZG166               ANOP  ,                                            00580100
                     AIF   (K'&UPDATERDATA(1) LE 0).ZG166A              00580200
&ZTLC                SETC 'NO'                                          00580300
                     AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG167         00580400
&XUPDATERDATA        SETC  'NO'        SET KEYWORD                      00580500
                     AIF   (N'&UPDATERDATA LE 1).ZG166A  CK NUM         00580600
&ZMS                 SETC  '"UPDATERDATA='                              00580700
&ZMS                 SETC  '&ZMS.&UPDATERDATA"'                         00580800
&ZMS                 SETC  '&ZMS "UPDATERDATA"'                         00580900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00581000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00581100
.ZG166A              ANOP  ,                                            00581200
.*------------------------------------------------------------------    00581300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00581400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00581500
.ZG166A0             AIF   (K'&RDATAVAL LE 0).ZG166A1  OK               00581600
&ZCVAL               SETC '&ZCVAL RDATAVAL'     INCORRECT KEY USED      00581700
.ZG166A1             AIF   (K'&ZCVAL LE 0).ZG166A2  OK                  00581800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00581900
&ZMS                 SETC  '"UPDATERDATA'                               00582000
&ZMS                 SETC  '&ZMS.=&UPDATERDATA"'                        00582100
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00582200
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00582300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00582400
.ZG166A2             ANOP  ,                                            00582500
.*-------------------------------------------------------------------   00582600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00582700
.ZG167               ANOP  ,                                            00582800
&ZTLC                SETC 'YES'                                         00582900
                     AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG171         00583000
&XUPDATERDATA        SETC  'YES'       SET KEYWORD                      00583100
                     AIF   (N'&UPDATERDATA LE 1).ZG167A  CK NUM         00583200
&ZMS                 SETC  '"UPDATERDATA='                              00583300
&ZMS                 SETC  '&ZMS.&UPDATERDATA"'                         00583400
&ZMS                 SETC  '&ZMS "UPDATERDATA"'                         00583500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00583600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00583700
.ZG167A              ANOP  ,                                            00583800
.*----------------------------------------------------------------***   00583900
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00584000
                     AIF   (N'&RDATAVAL LE 1).ZG169A  CK NUM            00584100
&ZMS                 SETC  '"RDATAVAL='                                 00584200
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00584300
&ZMS                 SETC  '&ZMS "RDATAVAL"'                            00584400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00584500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00584600
.ZG169A              ANOP  ,                                            00584700
.*-------------------------------------------------------------------   00584800
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00584900
&ZXRDATAVAL          SETC  'INOUT'     SET IN/OUTPUT                    00585000
&XRDATAVAL           SETC  '&RDATAVAL(1)'       SET XVARIABLE           00585100
                     AIF   (N'&RDATAVAL GT 1).ZG169B  MULTI             00585200
&XRDATAVAL           SETC  '&RDATAVAL'          SET XVARIABLE           00585300
.ZG169B              AIF   (K'&RDATAVAL(1) GT 0).ZG169C                 00585400
&ZXRDATAVAL          SETC  ''          RESET IN/OUTPUT                  00585500
&ZMS                 SETC  'WHEN "YES" IS SPECIFIED'                    00585600
&ZMS                 SETC  '&ZMS , "RDATAVAL" KEY AND ITS'              00585700
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00585800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00585900
.ZG169C              ANOP  ,                                            00586000
.*-------------------------------------------------------------------   00586100
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00586200
                     AIF   (K'&ZXRDATAVAL LE 0).ZG169R  NOT I/O         00586300
                     AIF   ('&XRDATAVAL'(1,1) NE '(').ZG169R            00586400
&ZCGPR               SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)               00586500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG169P                00586600
                     AIF   (K'&ZCGPR GT 2).ZG169Q                       00586700
                     AIF   ('&ZCGPR' EQ '0').ZG169Q                     00586800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00586900
                     AIF   (T'&ZCGPR NE 'N').ZG169Q  INVALID REG NAME   00587000
.ZG169P              ANOP  ,                                            00587100
                     AIF   (T'&ZCGPR NE 'N').ZG169R  NON NUMERIC        00587200
                     AIF   ('&ZCGPR' LT '2').ZG169Q                     00587300
                     AIF   ('&ZCGPR' LE '12').ZG169R                    00587400
.ZG169Q              ANOP  ,                                            00587500
&ZMS                 SETC  '"RDATAVAL='                                 00587600
&ZMS                 SETC  '&ZMS.&RDATAVAL"'                            00587700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00587800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00587900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00588000
.ZG169R              ANOP  ,                                            00588100
.*------------------------------------------------------------------    00588200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00588300
.ZG171               ANOP  ,                                            00588400
&ZXUPDATERDATA       SETC  'INPUT'     SET IN/OUTPUT                    00588500
                     AIF   (K'&XUPDATERDATA GT 0).ZG171E  VALID ARG     00588600
                     AIF   (T'&UPDATERDATA EQ 'O').ZG171D  OMITTED      00588700
&ZASYSLNDX           SETA  0                                            00588800
.ZG171A              ANOP  ,           POSITIONAL MACRO KEY             00588900
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00589000
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG171C            00589100
&ZTLC                SETC 'UPDATERDATA'                                 00589200
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG171A   00589300
.ZG171B              ANOP  ,                                            00589400
&ZXUPDATERDATA       SETC  ''          RESET IN/OUTPUT                  00589500
&ZMS                 SETC  'THE "UPDATERDATA" KEY'                      00589600
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00589700
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00589800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00589900
                     AGO   .ZG171E                                      00590000
.ZG171C              ANOP  ,                                            00590100
&ZXUPDATERDATA       SETC  ''          RESET IN/OUTPUT                  00590200
&ZMS                 SETC  '"UPDATERDATA='                              00590300
&ZMS                 SETC  '&ZMS.&UPDATERDATA"'                         00590400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00590500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00590600
&ZMS                 SETC  '&ZMS "NO"'                                  00590700
&ZMS                 SETC  '&ZMS OR "YES".'                             00590800
                     MNOTE 8,' &ZMS '                                   00590900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00591000
                     AGO   .ZG171E                                      00591100
.ZG171D              ANOP  ,                                            00591200
&XUPDATERDATA        SETC  'NO'        SET DEFAULT KEYWORD              00591300
.ZG171E              ANOP  ,                                            00591400
.*------------------------------------------------------------------    00591500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00591600
.ZG172               ANOP  ,                                            00591700
&ZXRDATA             SETC  'INPUT'     SET IN/OUTPUT                    00591800
                     AIF   (K'&XRDATA GT 0).ZG172E  VALID ARG           00591900
                     AIF   (T'&RDATA EQ 'O').ZG172D  OMITTED            00592000
&ZASYSLNDX           SETA  0                                            00592100
.ZG172A              ANOP  ,           POSITIONAL MACRO KEY             00592200
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00592300
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG172C            00592400
&ZTLC                SETC 'RDATA'                                       00592500
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG172A   00592600
.ZG172B              ANOP  ,                                            00592700
&ZXRDATA             SETC  ''          RESET IN/OUTPUT                  00592800
&ZMS                 SETC  'THE "RDATA" KEY'                            00592900
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00593000
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00593100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00593200
                     AGO   .ZG172E                                      00593300
.ZG172C              ANOP  ,                                            00593400
&ZXRDATA             SETC  ''          RESET IN/OUTPUT                  00593500
&ZMS                 SETC  '"RDATA='                                    00593600
&ZMS                 SETC  '&ZMS.&RDATA"'                               00593700
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00593800
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00593900
&ZMS                 SETC  '&ZMS "DELETE"'                              00594000
&ZMS                 SETC  '&ZMS OR "KEEP".'                            00594100
                     MNOTE 8,' &ZMS '                                   00594200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00594300
                     AGO   .ZG172E                                      00594400
.ZG172D              ANOP  ,                                            00594500
&XRDATA              SETC  'DELETE'    SET DEFAULT KEYWORD              00594600
.ZG172E              ANOP  ,                                            00594700
.*------------------------------------------------------------------    00594800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00594900
&XMODE               SETC  ''          INITIALIZE XVARIABLE             00595000
.*-------------------------------------------------------------------   00595100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00595200
.ZG175               ANOP  ,                                            00595300
                     AIF   (K'&MODE(1) LE 0).ZG175A                     00595400
&ZTLC                SETC 'SYNCSUSPEND'                                 00595500
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG176                00595600
&XMODE               SETC  'SYNCSUSPEND'        SET KEYWORD             00595700
                     AIF   (N'&MODE LE 1).ZG175A  CK NUM                00595800
&ZMS                 SETC  '"MODE='                                     00595900
&ZMS                 SETC  '&ZMS.&MODE"'                                00596000
&ZMS                 SETC  '&ZMS "MODE"'                                00596100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00596200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00596300
.ZG175A              ANOP  ,                                            00596400
.*------------------------------------------------------------------    00596500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00596600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00596700
.ZG175A0             AIF   (K'&MODEVAL LE 0).ZG175A1  OK                00596800
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00596900
.ZG175A1             AIF   (K'&ZCVAL LE 0).ZG175A2  OK                  00597000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00597100
&ZMS                 SETC  '"MODE'                                      00597200
&ZMS                 SETC  '&ZMS.=&MODE"'                               00597300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00597400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00597500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00597600
.ZG175A2             ANOP  ,                                            00597700
.*-------------------------------------------------------------------   00597800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00597900
.ZG176               ANOP  ,                                            00598000
&ZTLC                SETC 'SYNCEXIT'                                    00598100
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG177                00598200
&XMODE               SETC  'SYNCEXIT'  SET KEYWORD                      00598300
                     AIF   (N'&MODE LE 1).ZG176A  CK NUM                00598400
&ZMS                 SETC  '"MODE='                                     00598500
&ZMS                 SETC  '&ZMS.&MODE"'                                00598600
&ZMS                 SETC  '&ZMS "MODE"'                                00598700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00598800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00598900
.ZG176A              ANOP  ,                                            00599000
.*------------------------------------------------------------------    00599100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00599200
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00599300
.ZG176A0             AIF   (K'&MODEVAL LE 0).ZG176A1  OK                00599400
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00599500
.ZG176A1             AIF   (K'&ZCVAL LE 0).ZG176A2  OK                  00599600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00599700
&ZMS                 SETC  '"MODE'                                      00599800
&ZMS                 SETC  '&ZMS.=&MODE"'                               00599900
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00600000
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00600100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00600200
.ZG176A2             ANOP  ,                                            00600300
.*-------------------------------------------------------------------   00600400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00600500
.ZG177               ANOP  ,                                            00600600
&ZTLC                SETC 'NORESPONSE'                                  00600700
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG178                00600800
&XMODE               SETC  'NORESPONSE'         SET KEYWORD             00600900
                     AIF   (N'&MODE LE 1).ZG177A  CK NUM                00601000
&ZMS                 SETC  '"MODE='                                     00601100
&ZMS                 SETC  '&ZMS.&MODE"'                                00601200
&ZMS                 SETC  '&ZMS "MODE"'                                00601300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00601400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00601500
.ZG177A              ANOP  ,                                            00601600
.*------------------------------------------------------------------    00601700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00601800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00601900
.ZG177A0             AIF   (K'&MODEVAL LE 0).ZG177A1  OK                00602000
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00602100
.ZG177A1             AIF   (K'&ZCVAL LE 0).ZG177A2  OK                  00602200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00602300
&ZMS                 SETC  '"MODE'                                      00602400
&ZMS                 SETC  '&ZMS.=&MODE"'                               00602500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00602600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00602700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00602800
.ZG177A2             ANOP  ,                                            00602900
.*-------------------------------------------------------------------   00603000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00603100
.ZG178               ANOP  ,                                            00603200
&ZTLC                SETC 'VALUE'                                       00603300
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG182                00603400
&XMODE               SETC  'VALUE'     SET KEYWORD                      00603500
                     AIF   (N'&MODE LE 1).ZG178A  CK NUM                00603600
&ZMS                 SETC  '"MODE='                                     00603700
&ZMS                 SETC  '&ZMS.&MODE"'                                00603800
&ZMS                 SETC  '&ZMS "MODE"'                                00603900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00604000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00604100
.ZG178A              ANOP  ,                                            00604200
.*----------------------------------------------------------------***   00604300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00604400
                     AIF   (N'&MODEVAL LE 1).ZG180A  CK NUM             00604500
&ZMS                 SETC  '"MODEVAL='                                  00604600
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00604700
&ZMS                 SETC  '&ZMS "MODEVAL"'                             00604800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00604900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00605000
.ZG180A              ANOP  ,                                            00605100
.*-------------------------------------------------------------------   00605200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00605300
&ZXMODEVAL           SETC  'INPUT'     SET IN/OUTPUT                    00605400
&XMODEVAL            SETC  '&MODEVAL(1)'        SET XVARIABLE           00605500
                     AIF   (N'&MODEVAL GT 1).ZG180B  MULTI              00605600
&XMODEVAL            SETC  '&MODEVAL'  SET XVARIABLE                    00605700
.ZG180B              AIF   (K'&MODEVAL(1) GT 0).ZG180C                  00605800
&ZXMODEVAL           SETC  ''          RESET IN/OUTPUT                  00605900
&ZMS                 SETC  'WHEN "VALUE" IS SPECIFIED'                  00606000
&ZMS                 SETC  '&ZMS , "MODEVAL" KEY AND ITS'               00606100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00606200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00606300
.ZG180C              ANOP  ,                                            00606400
.*-------------------------------------------------------------------   00606500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00606600
                     AIF   (K'&ZXMODEVAL LE 0).ZG180R  NOT I/O          00606700
                     AIF   ('&XMODEVAL'(1,1) NE '(').ZG180R             00606800
&ZCGPR               SETC  '&XMODEVAL'(2,K'&XMODEVAL-2)                 00606900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG180P                00607000
                     AIF   (K'&ZCGPR GT 2).ZG180Q                       00607100
                     AIF   ('&ZCGPR' EQ '0').ZG180Q                     00607200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00607300
                     AIF   (T'&ZCGPR NE 'N').ZG180Q  INVALID REG NAME   00607400
.ZG180P              ANOP  ,                                            00607500
                     AIF   (T'&ZCGPR NE 'N').ZG180R  NON NUMERIC        00607600
                     AIF   ('&ZCGPR' LT '2').ZG180Q                     00607700
                     AIF   ('&ZCGPR' LE '12').ZG180R                    00607800
.ZG180Q              ANOP  ,                                            00607900
&ZMS                 SETC  '"MODEVAL='                                  00608000
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00608100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00608200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00608300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00608400
.ZG180R              ANOP  ,                                            00608500
.*------------------------------------------------------------------    00608600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00608700
.ZG182               ANOP  ,                                            00608800
&ZXMODE              SETC  'INPUT'     SET IN/OUTPUT                    00608900
                     AIF   (K'&XMODE GT 0).ZG182E  VALID ARG            00609000
                     AIF   (T'&MODE EQ 'O').ZG182D  OMITTED             00609100
&ZASYSLNDX           SETA  0                                            00609200
.ZG182A              ANOP  ,           POSITIONAL MACRO KEY             00609300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00609400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG182C            00609500
&ZTLC                SETC 'MODE'                                        00609600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG182A   00609700
.ZG182B              ANOP  ,                                            00609800
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00609900
&ZMS                 SETC  'THE "MODE" KEY'                             00610000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00610100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00610200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00610300
                     AGO   .ZG182E                                      00610400
.ZG182C              ANOP  ,                                            00610500
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00610600
&ZMS                 SETC  '"MODE='                                     00610700
&ZMS                 SETC  '&ZMS.&MODE"'                                00610800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00610900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00611000
&ZMS                 SETC  '&ZMS "SYNCSUSPEND",'                        00611100
&ZMS                 SETC  '&ZMS "SYNCEXIT",'                           00611200
&ZMS                 SETC  '&ZMS "NORESPONSE",'                         00611300
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00611400
                     MNOTE 8,' &ZMS '                                   00611500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00611600
                     AGO   .ZG182E                                      00611700
.ZG182D              ANOP  ,                                            00611800
&XMODE               SETC  'SYNCSUSPEND'        SET DEFAULT KEYWORD     00611900
.ZG182E              ANOP  ,                                            00612000
.*----------------------------------------------------------------***   00612100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00612200
                     AIF   (N'&ADUPREQSEQNUM LE 1).ZG184A  CK NUM       00612300
&ZMS                 SETC  '"ADUPREQSEQNUM='                            00612400
&ZMS                 SETC  '&ZMS.&ADUPREQSEQNUM"'                       00612500
&ZMS                 SETC  '&ZMS "ADUPREQSEQNUM"'                       00612600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00612700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00612800
.ZG184A              ANOP  ,                                            00612900
.*-------------------------------------------------------------------   00613000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00613100
                     AIF   (K'&ADUPREQSEQNUM(1) LE 0).ZG184C  NO PARM   00613200
&ZXADUPREQSEQNUM     SETC  'OUTPUT'    SET OUTPUT                       00613300
&XADUPREQSEQNUM      SETC  '&ADUPREQSEQNUM(1)'  SET XVARIABLE           00613400
                     AIF   (N'&ADUPREQSEQNUM GT 1).ZG184C               00613500
&XADUPREQSEQNUM      SETC  '&ADUPREQSEQNUM'     SET XVARIABLE           00613600
.ZG184C              ANOP  ,                                            00613700
.*-------------------------------------------------------------------   00613800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00613900
                     AIF   (K'&ZXADUPREQSEQNUM LE 0).ZG184R  NOT I/O    00614000
                     AIF   ('&XADUPREQSEQNUM'(1,1) NE '(').ZG184R       00614100
&ZCGPR               SETC  '&XADUPREQSEQNUM'(2,K'&XADUPREQSEQNUM-2)     00614200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG184P                00614300
                     AIF   (K'&ZCGPR GT 2).ZG184Q                       00614400
                     AIF   ('&ZCGPR' EQ '0').ZG184Q                     00614500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00614600
                     AIF   (T'&ZCGPR NE 'N').ZG184Q  INVALID REG NAME   00614700
.ZG184P              ANOP  ,                                            00614800
                     AIF   (T'&ZCGPR NE 'N').ZG184R  NON NUMERIC        00614900
                     AIF   ('&ZCGPR' LT '2').ZG184Q                     00615000
                     AIF   ('&ZCGPR' LE '12').ZG184R                    00615100
.ZG184Q              ANOP  ,                                            00615200
&ZMS                 SETC  '"ADUPREQSEQNUM='                            00615300
&ZMS                 SETC  '&ZMS.&ADUPREQSEQNUM"'                       00615400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00615500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00615600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00615700
.ZG184R              ANOP  ,                                            00615800
.*-------------------------------------------------------------------   00615900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00616000
.ZG186               ANOP  ,                                            00616100
&ZTLC                SETC 'PROCESSMULT'                                 00616200
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG208             00616300
&XREQUEST            SETC  'PROCESSMULT'        SET KEYWORD             00616400
                     AIF   (N'&REQUEST LE 1).ZG186A  CK NUM             00616500
&ZMS                 SETC  '"REQUEST='                                  00616600
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00616700
&ZMS                 SETC  '&ZMS "REQUEST"'                             00616800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00616900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00617000
.ZG186A              ANOP  ,                                            00617100
.*------------------------------------------------------------------    00617200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00617300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00617400
.ZG186A0             AIF   (K'&RNAME LE 0).ZG186A1  OK                  00617500
&ZCVAL               SETC '&ZCVAL RNAME'        INCORRECT KEY USED      00617600
.ZG186A1             AIF   (K'&RNAMELEN LE 0).ZG186A2  OK               00617700
&ZCVAL               SETC '&ZCVAL RNAMELEN'     INCORRECT KEY USED      00617800
.ZG186A2             AIF   (K'&HASHVAL LE 0).ZG186A3  OK                00617900
&ZCVAL               SETC '&ZCVAL HASHVAL'      INCORRECT KEY USED      00618000
.ZG186A3             AIF   (K'&LOCKDATA LE 0).ZG186A4  OK               00618100
&ZCVAL               SETC '&ZCVAL LOCKDATA'     INCORRECT KEY USED      00618200
.ZG186A4             AIF   (K'&STATE LE 0).ZG186A5  OK                  00618300
&ZCVAL               SETC '&ZCVAL STATE'        INCORRECT KEY USED      00618400
.ZG186A5             AIF   (K'&STATEVAL LE 0).ZG186A6  OK               00618500
&ZCVAL               SETC '&ZCVAL STATEVAL'     INCORRECT KEY USED      00618600
.ZG186A6             AIF   (K'&UDATAVAL LE 0).ZG186A7  OK               00618700
&ZCVAL               SETC '&ZCVAL UDATAVAL'     INCORRECT KEY USED      00618800
.ZG186A7             AIF   (K'&RDATA LE 0).ZG186A8  OK                  00618900
&ZCVAL               SETC '&ZCVAL RDATA'        INCORRECT KEY USED      00619000
.ZG186A8             AIF   (K'&RDATAVAL LE 0).ZG186A9  OK               00619100
&ZCVAL               SETC '&ZCVAL RDATAVAL'     INCORRECT KEY USED      00619200
.ZG186A9             AIF   (K'&ENTRYID LE 0).ZG186A10  OK               00619300
&ZCVAL               SETC '&ZCVAL ENTRYID'      INCORRECT KEY USED      00619400
.ZG186A10            AIF   (K'&ENTRYCOUNT LE 0).ZG186A11  OK            00619500
&ZCVAL               SETC '&ZCVAL ENTRYCOUNT'   INCORRECT KEY USED      00619600
.ZG186A11            AIF   (K'&ALLOWUSERSV LE 0).ZG186A12  OK           00619700
&ZCVAL               SETC '&ZCVAL ALLOWUSERSV'  INCORRECT KEY USED      00619800
.ZG186A12            AIF   (K'&CONID LE 0).ZG186A13  OK                 00619900
&ZCVAL               SETC '&ZCVAL CONID'        INCORRECT KEY USED      00620000
.ZG186A13            AIF   (K'&UPDATERDATA LE 0).ZG186A14  OK           00620100
&ZCVAL               SETC '&ZCVAL UPDATERDATA'  INCORRECT KEY USED      00620200
.ZG186A14            AIF   (K'&SYNCFAILDELAY LE 0).ZG186A15  OK         00620300
&ZCVAL               SETC '&ZCVAL SYNCFAILDELAY'  INCORRECT KEY USED    00620400
.ZG186A15            AIF   (K'&CRITICALREQUEST LE 0).ZG186A16  OK       00620500
&ZCVAL               SETC '&ZCVAL CRITICALREQUEST'  INCORRECT KEY USED  00620600
.ZG186A16            AIF   (K'&ADUPREQSEQNUM LE 0).ZG186A17  OK         00620700
&ZCVAL               SETC '&ZCVAL ADUPREQSEQNUM'  INCORRECT KEY USED    00620800
.ZG186A17            AIF   (K'&ZCVAL LE 0).ZG186A18  OK                 00620900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00621000
                     AIF  (K'&ZCVAL LE 160).ZG186A18A                   00621100
&ZCVAL               SETC '&ZCVAL'(1,160)                               00621200
&ZCVAL               SETC '&ZCVAL....'                                  00621300
.ZG186A18A           ANOP                                               00621400
&ZMS                 SETC  '"REQUEST'                                   00621500
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00621600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00621700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00621800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00621900
.ZG186A18            ANOP  ,                                            00622000
.*----------------------------------------------------------------***   00622100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00622200
                     AIF   (N'&REQBUFFER LE 1).ZG188A  CK NUM           00622300
&ZMS                 SETC  '"REQBUFFER='                                00622400
&ZMS                 SETC  '&ZMS.&REQBUFFER"'                           00622500
&ZMS                 SETC  '&ZMS "REQBUFFER"'                           00622600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00622700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00622800
.ZG188A              ANOP  ,                                            00622900
.*-------------------------------------------------------------------   00623000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00623100
&ZXREQBUFFER         SETC  'INPUT'     SET IN/OUTPUT                    00623200
&XREQBUFFER          SETC  '&REQBUFFER(1)'      SET XVARIABLE           00623300
                     AIF   (N'&REQBUFFER GT 1).ZG188B  MULTI            00623400
&XREQBUFFER          SETC  '&REQBUFFER'         SET XVARIABLE           00623500
.ZG188B              AIF   (K'&REQBUFFER(1) GT 0).ZG188C                00623600
&ZXREQBUFFER         SETC  ''          RESET IN/OUTPUT                  00623700
&ZMS                 SETC  ' '                                          00623800
&ZMS                 SETC  '&ZMS "REQBUFFER" KEY AND ITS'               00623900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00624000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00624100
.ZG188C              ANOP  ,                                            00624200
.*-------------------------------------------------------------------   00624300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00624400
                     AIF   (K'&ZXREQBUFFER LE 0).ZG188R  NOT I/O        00624500
                     AIF   ('&XREQBUFFER'(1,1) NE '(').ZG188R           00624600
&ZCGPR               SETC  '&XREQBUFFER'(2,K'&XREQBUFFER-2)             00624700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG188P                00624800
                     AIF   (K'&ZCGPR GT 2).ZG188Q                       00624900
                     AIF   ('&ZCGPR' EQ '0').ZG188Q                     00625000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00625100
                     AIF   (T'&ZCGPR NE 'N').ZG188Q  INVALID REG NAME   00625200
.ZG188P              ANOP  ,                                            00625300
                     AIF   (T'&ZCGPR NE 'N').ZG188R  NON NUMERIC        00625400
                     AIF   ('&ZCGPR' LT '2').ZG188Q                     00625500
                     AIF   ('&ZCGPR' LE '12').ZG188R                    00625600
.ZG188Q              ANOP  ,                                            00625700
&ZMS                 SETC  '"REQBUFFER='                                00625800
&ZMS                 SETC  '&ZMS.&REQBUFFER"'                           00625900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00626000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00626100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00626200
.ZG188R              ANOP  ,                                            00626300
.*----------------------------------------------------------------***   00626400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00626500
                     AIF   (N'&REQNUM LE 1).ZG191A  CK NUM              00626600
&ZMS                 SETC  '"REQNUM='                                   00626700
&ZMS                 SETC  '&ZMS.&REQNUM"'                              00626800
&ZMS                 SETC  '&ZMS "REQNUM"'                              00626900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00627000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00627100
.ZG191A              ANOP  ,                                            00627200
.*-------------------------------------------------------------------   00627300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00627400
&ZXREQNUM            SETC  'INPUT'     SET IN/OUTPUT                    00627500
&XREQNUM             SETC  '&REQNUM(1)'         SET XVARIABLE           00627600
                     AIF   (N'&REQNUM GT 1).ZG191B  MULTI               00627700
&XREQNUM             SETC  '&REQNUM'   SET XVARIABLE                    00627800
.ZG191B              AIF   (K'&REQNUM(1) GT 0).ZG191C                   00627900
&ZXREQNUM            SETC  ''          RESET IN/OUTPUT                  00628000
&ZMS                 SETC  ' '                                          00628100
&ZMS                 SETC  '&ZMS "REQNUM" KEY AND ITS'                  00628200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00628300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00628400
.ZG191C              ANOP  ,                                            00628500
.*-------------------------------------------------------------------   00628600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00628700
                     AIF   (K'&ZXREQNUM LE 0).ZG191R  NOT I/O           00628800
                     AIF   ('&XREQNUM'(1,1) NE '(').ZG191R              00628900
&ZCGPR               SETC  '&XREQNUM'(2,K'&XREQNUM-2)                   00629000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG191P                00629100
                     AIF   (K'&ZCGPR GT 2).ZG191Q                       00629200
                     AIF   ('&ZCGPR' EQ '0').ZG191Q                     00629300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00629400
                     AIF   (T'&ZCGPR NE 'N').ZG191Q  INVALID REG NAME   00629500
.ZG191P              ANOP  ,                                            00629600
                     AIF   (T'&ZCGPR NE 'N').ZG191R  NON NUMERIC        00629700
                     AIF   ('&ZCGPR' LT '2').ZG191Q                     00629800
                     AIF   ('&ZCGPR' LE '12').ZG191R                    00629900
.ZG191Q              ANOP  ,                                            00630000
&ZMS                 SETC  '"REQNUM='                                   00630100
&ZMS                 SETC  '&ZMS.&REQNUM"'                              00630200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00630300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00630400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00630500
.ZG191R              ANOP  ,                                            00630600
.*----------------------------------------------------------------***   00630700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00630800
                     AIF   (N'&REQVERSION LE 1).ZG194A  CK NUM          00630900
&ZMS                 SETC  '"REQVERSION='                               00631000
&ZMS                 SETC  '&ZMS.&REQVERSION"'                          00631100
&ZMS                 SETC  '&ZMS "REQVERSION"'                          00631200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00631300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00631400
.ZG194A              ANOP  ,                                            00631500
.*-------------------------------------------------------------------   00631600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00631700
&ZXREQVERSION        SETC  'INPUT'     SET IN/OUTPUT                    00631800
&XREQVERSION         SETC  '0'                                          00631900
                     AIF   (K'&REQVERSION(1) LE 0).ZG194B  PARM         00632000
&XREQVERSION         SETC  '&REQVERSION(1)'     SET XVARIABLE           00632100
                     AIF   (N'&REQVERSION GT 1).ZG194B  MULTI           00632200
&XREQVERSION         SETC  '&REQVERSION'        SET XVARIABLE           00632300
.ZG194B              ANOP  ,                                            00632400
.*-------------------------------------------------------------------   00632500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00632600
                     AIF   (K'&ZXREQVERSION LE 0).ZG194R  NOT I/O       00632700
                     AIF   ('&XREQVERSION'(1,1) NE '(').ZG194R          00632800
&ZCGPR               SETC  '&XREQVERSION'(2,K'&XREQVERSION-2)           00632900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG194P                00633000
                     AIF   (K'&ZCGPR GT 2).ZG194Q                       00633100
                     AIF   ('&ZCGPR' EQ '0').ZG194Q                     00633200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00633300
                     AIF   (T'&ZCGPR NE 'N').ZG194Q  INVALID REG NAME   00633400
.ZG194P              ANOP  ,                                            00633500
                     AIF   (T'&ZCGPR NE 'N').ZG194R  NON NUMERIC        00633600
                     AIF   ('&ZCGPR' LT '2').ZG194Q                     00633700
                     AIF   ('&ZCGPR' LE '12').ZG194R                    00633800
.ZG194Q              ANOP  ,                                            00633900
&ZMS                 SETC  '"REQVERSION='                               00634000
&ZMS                 SETC  '&ZMS.&REQVERSION"'                          00634100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00634200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00634300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00634400
.ZG194R              ANOP  ,                                            00634500
.*----------------------------------------------------------------***   00634600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00634700
                     AIF   (N'&REQPROC LE 1).ZG197A  CK NUM             00634800
&ZMS                 SETC  '"REQPROC='                                  00634900
&ZMS                 SETC  '&ZMS.&REQPROC"'                             00635000
&ZMS                 SETC  '&ZMS "REQPROC"'                             00635100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00635200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00635300
.ZG197A              ANOP  ,                                            00635400
.*-------------------------------------------------------------------   00635500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00635600
                     AIF   (K'&REQPROC(1) LE 0).ZG197C  NO PARM         00635700
&ZXREQPROC           SETC  'OUTPUT'    SET OUTPUT                       00635800
&XREQPROC            SETC  '&REQPROC(1)'        SET XVARIABLE           00635900
                     AIF   (N'&REQPROC GT 1).ZG197C                     00636000
&XREQPROC            SETC  '&REQPROC'  SET XVARIABLE                    00636100
.ZG197C              ANOP  ,                                            00636200
.*-------------------------------------------------------------------   00636300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00636400
                     AIF   (K'&ZXREQPROC LE 0).ZG197R  NOT I/O          00636500
                     AIF   ('&XREQPROC'(1,1) NE '(').ZG197R             00636600
&ZCGPR               SETC  '&XREQPROC'(2,K'&XREQPROC-2)                 00636700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG197P                00636800
                     AIF   (K'&ZCGPR GT 2).ZG197Q                       00636900
                     AIF   ('&ZCGPR' EQ '0').ZG197Q                     00637000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00637100
                     AIF   (T'&ZCGPR NE 'N').ZG197Q  INVALID REG NAME   00637200
.ZG197P              ANOP  ,                                            00637300
                     AIF   (T'&ZCGPR NE 'N').ZG197R  NON NUMERIC        00637400
                     AIF   ('&ZCGPR' LT '2').ZG197Q                     00637500
                     AIF   ('&ZCGPR' LE '12').ZG197R                    00637600
.ZG197Q              ANOP  ,                                            00637700
&ZMS                 SETC  '"REQPROC='                                  00637800
&ZMS                 SETC  '&ZMS.&REQPROC"'                             00637900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00638000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00638100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00638200
.ZG197R              ANOP  ,                                            00638300
.*------------------------------------------------------------------    00638400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00638500
&XMODE               SETC  ''          INITIALIZE XVARIABLE             00638600
.*-------------------------------------------------------------------   00638700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00638800
.ZG201               ANOP  ,                                            00638900
                     AIF   (K'&MODE(1) LE 0).ZG201A                     00639000
&ZTLC                SETC 'SYNCSUSPEND'                                 00639100
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG202                00639200
&XMODE               SETC  'SYNCSUSPEND'        SET KEYWORD             00639300
                     AIF   (N'&MODE LE 1).ZG201A  CK NUM                00639400
&ZMS                 SETC  '"MODE='                                     00639500
&ZMS                 SETC  '&ZMS.&MODE"'                                00639600
&ZMS                 SETC  '&ZMS "MODE"'                                00639700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00639800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00639900
.ZG201A              ANOP  ,                                            00640000
.*------------------------------------------------------------------    00640100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00640200
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00640300
.ZG201A0             AIF   (K'&MODEVAL LE 0).ZG201A1  OK                00640400
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00640500
.ZG201A1             AIF   (K'&ZCVAL LE 0).ZG201A2  OK                  00640600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00640700
&ZMS                 SETC  '"MODE'                                      00640800
&ZMS                 SETC  '&ZMS.=&MODE"'                               00640900
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00641000
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00641100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00641200
.ZG201A2             ANOP  ,                                            00641300
.*-------------------------------------------------------------------   00641400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00641500
.ZG202               ANOP  ,                                            00641600
&ZTLC                SETC 'NORESPONSE'                                  00641700
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG203                00641800
&XMODE               SETC  'NORESPONSE'         SET KEYWORD             00641900
                     AIF   (N'&MODE LE 1).ZG202A  CK NUM                00642000
&ZMS                 SETC  '"MODE='                                     00642100
&ZMS                 SETC  '&ZMS.&MODE"'                                00642200
&ZMS                 SETC  '&ZMS "MODE"'                                00642300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00642400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00642500
.ZG202A              ANOP  ,                                            00642600
.*------------------------------------------------------------------    00642700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00642800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00642900
.ZG202A0             AIF   (K'&MODEVAL LE 0).ZG202A1  OK                00643000
&ZCVAL               SETC '&ZCVAL MODEVAL'      INCORRECT KEY USED      00643100
.ZG202A1             AIF   (K'&ZCVAL LE 0).ZG202A2  OK                  00643200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00643300
&ZMS                 SETC  '"MODE'                                      00643400
&ZMS                 SETC  '&ZMS.=&MODE"'                               00643500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00643600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00643700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00643800
.ZG202A2             ANOP  ,                                            00643900
.*-------------------------------------------------------------------   00644000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00644100
.ZG203               ANOP  ,                                            00644200
&ZTLC                SETC 'VALUE'                                       00644300
                     AIF   ('&MODE(1)' NE '&ZTLC').ZG207                00644400
&XMODE               SETC  'VALUE'     SET KEYWORD                      00644500
                     AIF   (N'&MODE LE 1).ZG203A  CK NUM                00644600
&ZMS                 SETC  '"MODE='                                     00644700
&ZMS                 SETC  '&ZMS.&MODE"'                                00644800
&ZMS                 SETC  '&ZMS "MODE"'                                00644900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00645000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00645100
.ZG203A              ANOP  ,                                            00645200
.*----------------------------------------------------------------***   00645300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00645400
                     AIF   (N'&MODEVAL LE 1).ZG205A  CK NUM             00645500
&ZMS                 SETC  '"MODEVAL='                                  00645600
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00645700
&ZMS                 SETC  '&ZMS "MODEVAL"'                             00645800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00645900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00646000
.ZG205A              ANOP  ,                                            00646100
.*-------------------------------------------------------------------   00646200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00646300
&ZXMODEVAL           SETC  'INPUT'     SET IN/OUTPUT                    00646400
&XMODEVAL            SETC  '&MODEVAL(1)'        SET XVARIABLE           00646500
                     AIF   (N'&MODEVAL GT 1).ZG205B  MULTI              00646600
&XMODEVAL            SETC  '&MODEVAL'  SET XVARIABLE                    00646700
.ZG205B              AIF   (K'&MODEVAL(1) GT 0).ZG205C                  00646800
&ZXMODEVAL           SETC  ''          RESET IN/OUTPUT                  00646900
&ZMS                 SETC  'WHEN "VALUE" IS SPECIFIED'                  00647000
&ZMS                 SETC  '&ZMS , "MODEVAL" KEY AND ITS'               00647100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00647200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00647300
.ZG205C              ANOP  ,                                            00647400
.*-------------------------------------------------------------------   00647500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00647600
                     AIF   (K'&ZXMODEVAL LE 0).ZG205R  NOT I/O          00647700
                     AIF   ('&XMODEVAL'(1,1) NE '(').ZG205R             00647800
&ZCGPR               SETC  '&XMODEVAL'(2,K'&XMODEVAL-2)                 00647900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG205P                00648000
                     AIF   (K'&ZCGPR GT 2).ZG205Q                       00648100
                     AIF   ('&ZCGPR' EQ '0').ZG205Q                     00648200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00648300
                     AIF   (T'&ZCGPR NE 'N').ZG205Q  INVALID REG NAME   00648400
.ZG205P              ANOP  ,                                            00648500
                     AIF   (T'&ZCGPR NE 'N').ZG205R  NON NUMERIC        00648600
                     AIF   ('&ZCGPR' LT '2').ZG205Q                     00648700
                     AIF   ('&ZCGPR' LE '12').ZG205R                    00648800
.ZG205Q              ANOP  ,                                            00648900
&ZMS                 SETC  '"MODEVAL='                                  00649000
&ZMS                 SETC  '&ZMS.&MODEVAL"'                             00649100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00649200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00649300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00649400
.ZG205R              ANOP  ,                                            00649500
.*------------------------------------------------------------------    00649600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00649700
.ZG207               ANOP  ,                                            00649800
&ZXMODE              SETC  'INPUT'     SET IN/OUTPUT                    00649900
                     AIF   (K'&XMODE GT 0).ZG207E  VALID ARG            00650000
                     AIF   (T'&MODE EQ 'O').ZG207D  OMITTED             00650100
&ZASYSLNDX           SETA  0                                            00650200
.ZG207A              ANOP  ,           POSITIONAL MACRO KEY             00650300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00650400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG207C            00650500
&ZTLC                SETC 'MODE'                                        00650600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG207A   00650700
.ZG207B              ANOP  ,                                            00650800
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00650900
&ZMS                 SETC  'THE "MODE" KEY'                             00651000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00651100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00651200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00651300
                     AGO   .ZG207E                                      00651400
.ZG207C              ANOP  ,                                            00651500
&ZXMODE              SETC  ''          RESET IN/OUTPUT                  00651600
&ZMS                 SETC  '"MODE='                                     00651700
&ZMS                 SETC  '&ZMS.&MODE"'                                00651800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00651900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00652000
&ZMS                 SETC  '&ZMS "SYNCSUSPEND",'                        00652100
&ZMS                 SETC  '&ZMS "NORESPONSE",'                         00652200
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00652300
                     MNOTE 8,' &ZMS '                                   00652400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00652500
                     AGO   .ZG207E                                      00652600
.ZG207D              ANOP  ,                                            00652700
&XMODE               SETC  'SYNCSUSPEND'        SET DEFAULT KEYWORD     00652800
.ZG207E              ANOP  ,                                            00652900
.*------------------------------------------------------------------    00653000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00653100
.ZG208               ANOP  ,                                            00653200
&ZXREQUEST           SETC  'INPUT'     SET IN/OUTPUT                    00653300
                     AIF   (K'&XREQUEST GT 0).ZG208E  VALID ARG         00653400
                     AIF   (T'&REQUEST EQ 'O').ZG208D  OMITTED          00653500
&ZASYSLNDX           SETA  0                                            00653600
.ZG208A              ANOP  ,           POSITIONAL MACRO KEY             00653700
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00653800
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG208C            00653900
&ZTLC                SETC 'REQUEST'                                     00654000
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG208A   00654100
.ZG208B              ANOP  ,                                            00654200
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00654300
&ZMS                 SETC  'THE "REQUEST" KEY'                          00654400
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00654500
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00654600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00654700
                     AGO   .ZG208E                                      00654800
.ZG208C              ANOP  ,                                            00654900
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00655000
&ZMS                 SETC  '"REQUEST='                                  00655100
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00655200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00655300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00655400
&ZMS                 SETC  '&ZMS "OBTAIN",'                             00655500
&ZMS                 SETC  '&ZMS "ALTER",'                              00655600
&ZMS                 SETC  '&ZMS "RELEASE",'                            00655700
&ZMS                 SETC  '&ZMS OR "PROCESSMULT".'                     00655800
                     MNOTE 8,' &ZMS '                                   00655900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00656000
                     AGO   .ZG208E                                      00656100
.ZG208D              ANOP  ,                                            00656200
&XREQUEST            SETC  'OBTAIN'    SET DEFAULT KEYWORD              00656300
.ZG208E              ANOP  ,                                            00656400
.*------------------------------------------------------------------    00656500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00656600
                     AIF   (K'&REQUEST(1) GT 0).ZG208F  PARM            00656700
&XREQUEST            SETC  ''          ENSURE NULL KEYWORD              00656800
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00656900
&ZMS                 SETC  'THE'                                        00657000
&ZMS                 SETC  '&ZMS "REQUEST" KEY AND ITS'                 00657100
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00657200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00657300
&ZMS                 SETC  '&ZMS "OBTAIN",'                             00657400
&ZMS                 SETC  '&ZMS "ALTER",'                              00657500
&ZMS                 SETC  '&ZMS "RELEASE",'                            00657600
&ZMS                 SETC  '&ZMS OR "PROCESSMULT".'                     00657700
                     MNOTE 8,' &ZMS '                                   00657800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00657900
.ZG208F              ANOP  ,                                            00658000
.*----------------------------------------------------------------***   00658100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00658200
                     AIF   (N'&RETCODE LE 1).ZG210A  CK NUM             00658300
&ZMS                 SETC  '"RETCODE='                                  00658400
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00658500
&ZMS                 SETC  '&ZMS "RETCODE"'                             00658600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00658700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00658800
.ZG210A              ANOP  ,                                            00658900
.*-------------------------------------------------------------------   00659000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00659100
                     AIF   (K'&RETCODE(1) LE 0).ZG210C  NO PARM         00659200
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00659300
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00659400
                     AIF   (N'&RETCODE GT 1).ZG210C                     00659500
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00659600
.ZG210C              ANOP  ,                                            00659700
.*-------------------------------------------------------------------   00659800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00659900
                     AIF   (K'&ZXRETCODE LE 0).ZG210R  NOT I/O          00660000
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG210R             00660100
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00660200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG210P                00660300
                     AIF   (K'&ZCGPR GT 2).ZG210Q                       00660400
                     AIF   ('&ZCGPR' EQ '0').ZG210Q                     00660500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00660600
                     AIF   (T'&ZCGPR NE 'N').ZG210Q  INVALID REG NAME   00660700
.ZG210P              ANOP  ,                                            00660800
                     AIF   (T'&ZCGPR NE 'N').ZG210R  NON NUMERIC        00660900
                     AIF   ('&ZCGPR' EQ '15').ZG210R                    00661000
                     AIF   ('&ZCGPR' LT '2').ZG210Q                     00661100
                     AIF   ('&ZCGPR' LE '12').ZG210R                    00661200
.ZG210Q              ANOP  ,                                            00661300
&ZMS                 SETC  '"RETCODE='                                  00661400
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00661500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00661600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'     00661700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00661800
.ZG210R              ANOP  ,                                            00661900
.*----------------------------------------------------------------***   00662000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00662100
                     AIF   (N'&RSNCODE LE 1).ZG213A  CK NUM             00662200
&ZMS                 SETC  '"RSNCODE='                                  00662300
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00662400
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00662500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00662600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00662700
.ZG213A              ANOP  ,                                            00662800
.*-------------------------------------------------------------------   00662900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00663000
                     AIF   (K'&RSNCODE(1) LE 0).ZG213C  NO PARM         00663100
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00663200
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00663300
                     AIF   (N'&RSNCODE GT 1).ZG213C                     00663400
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00663500
.ZG213C              ANOP  ,                                            00663600
.*-------------------------------------------------------------------   00663700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00663800
                     AIF   (K'&ZXRSNCODE LE 0).ZG213R  NOT I/O          00663900
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG213R             00664000
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00664100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG213P                00664200
                     AIF   (K'&ZCGPR GT 2).ZG213Q                       00664300
                     AIF   ('&ZCGPR' EQ '0').ZG213R                     00664400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00664500
                     AIF   (T'&ZCGPR NE 'N').ZG213Q  INVALID REG NAME   00664600
.ZG213P              ANOP  ,                                            00664700
                     AIF   (T'&ZCGPR NE 'N').ZG213R  NON NUMERIC        00664800
                     AIF   ('&ZCGPR' EQ '0').ZG213R                     00664900
                     AIF   ('&ZCGPR' LT '2').ZG213Q                     00665000
                     AIF   ('&ZCGPR' LE '12').ZG213R                    00665100
.ZG213Q              ANOP  ,                                            00665200
&ZMS                 SETC  '"RSNCODE='                                  00665300
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00665400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00665500
                     MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'      00665600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00665700
.ZG213R              ANOP  ,                                            00665800
.******************************************************************     00665900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00666000
.******************************************************************     00666100
                     ACTR  10000                                        00666200
.*----------------------------------------------------------------***   00666300
.***AH.P02 EXTRA POSITIONALS                                            00666400
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00666500
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00666600
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00666700
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00666800
.ZGLISTX1            ANOP  ,                                            00666900
&ZCVAL               SETC  ''          ERROR FIELD                      00667000
&ZAWRK               SETA  0           POSITIONAL NUMBER                00667100
.ZGLIST2             ANOP  ,                                            00667200
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00667300
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00667400
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00667500
                     AGO   .ZGLIST2                                     00667600
.*                                                                      00667700
.ZGLIST3             ANOP  ,                                            00667800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00667900
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'                    00668000
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00668100
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00668200
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00668300
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00668400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00668500
.ZGLISTX             ANOP  ,                                            00668600
&ZASYSLNDX           SETA  0                                            00668700
.*-------------------------------------------------------------------   00668800
.***AG.MF04 MF=(SLE)                                                    00668900
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00669000
.*******************************************************************    00669100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00669200
.*******************************************************************    00669300
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00669400
.*******************************************************************    00669500
.***AE.01  START OF IXLLOCK MACRO CODE                                  00669600
.*******************************************************************    00669700
                     LCLC  &M0M0001                 NAME                00669800
&M0M0001             SETC  '&XLABEL'                SET NAME            00669900
                     AIF   (K'&XLABEL NE 0).XLAB2                       00670000
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00670100
.*                                                                      00670200
.XLAB2               ANOP  ,                                            00670300
                     AIF   ('&XMF' EQ 'L').XLAB3                        00670400
&M0M0001 DS    0H                             IXLLOCK-4                 00670500
.XLAB3               ANOP  ,                                            00670600
.*******************************************************************    00670700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00670800
.*******************************************************************    00670900
              PUSH  PRINT                                               00671000
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00671100
                     PRINT OFF         ++ PR01                          00671200
                     AGO   .ZPRNTXX                                     00671300
.ZPRINTX             PRINT ON                                           00671400
.ZPRNTXX             ANOP  ,                                            00671500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00671600
.**------------------------------------------------------------------** 00671700
.** Start of User MACASM code                                        ** 00671800
.**------------------------------------------------------------------** 00671900
.*                                                                      00672000
.*  Certain inputs to the IXLLOCK Service may be changed as             00672100
.*  part of granting a request. Specifically, these fields              00672200
.*  are...                                                              00672300
.*                                                                      00672400
.*        - Stateval                                                    00672500
.*        - Udataval                                                    00672600
.*        - Rdataval                                                    00672700
.*                                                                      00672800
.*  Basically, these fields can be changed by the contention            00672900
.*  exit. Therefore, we want to copy these values back to the           00673000
.*  caller's variables in cases where this could have happened.         00673100
.*  If a request goes to the contention exit, the user has told         00673200
.*  us which mode he wishes to wait in. If he says SYNCSUSPEND          00673300
.*  then there is a potential that the changed values will              00673400
.*  need to be copied back to the callers variables at                  00673500
.*  the Next sequential instruction after the call. If he               00673600
.*  has said SYNCEXIT, NORESPONSE then the request either               00673700
.*  completed immediately under the user with no contention             00673800
.*  (and therefore no possibility of any changes being made).           00673900
.*  Therefore we need not worry about copying back values               00674000
.*  in the syncexit, noresponse case cause any potential                00674100
.*  changes either show up in the complete exit or not at               00674200
.*  all.                                                                00674300
.*                                                                      00674400
.*    Here is what we do in the code below. We declare the              00674500
.*  changeable fields in the AMG source as Input/Output.                00674600
.*  This makes AMG think that these are always Input/output.            00674700
.*  However, we are somewhat slimy here in that we know                 00674800
.*  that AMG checks the ZXStateval fields etc to see if                 00674900
.*  they are Inputs or Inouts. If we decide based on the                00675000
.*  mode that we dont need to update (Syncexit, Noresponse)             00675100
.*  then we just set the fields to make amg thinks they                 00675200
.*  are inputs before it generates the output code below.               00675300
.*                                                                      00675400
.*************************************************************          00675500
         AIF   ('&XMODE' EQ 'SYNCSUSPEND').DOOUT                        00675600
         AIF   ('&ZXSTATEVAL' EQ '').NOSTATE  NOT USED                  00675700
&ZXSTATEVAL      SETC  'INPUT'   MAKE AMG NOT GENERATE OUTPUT CODE      00675800
.NOSTATE ANOP                                                           00675900
         AIF   ('&ZXUDATAVAL' EQ '').NOUDATA  NOT USED                  00676000
&ZXUDATAVAL      SETC  'INPUT'   MAKE AMG NOT GENERATE OUTPUT CODE      00676100
.NOUDATA ANOP                                                           00676200
         AIF   ('&ZXRDATAVAL' EQ '').NORDATA  NOT USED                  00676300
&ZXRDATAVAL      SETC  'INPUT'   MAKE AMG NOT GENERATE OUTPUT CODE      00676400
.NORDATA ANOP                                                           00676500
.DOOUT ANOP                                                             00676600
.**------------------------------------------------------------------** 00676700
.**  Determine the parameter list version                        @O2A** 00676800
.**------------------------------------------------------------------** 00676900
.*                                                                      00677000
         LCLA  &LOCKPLVERS                                         @O2A 00677100
.*                                                                      00677200
         AIF   (&XPLISTVER LE 1).SETPLVERSONE                      @O2A 00677300
&LOCKPLVERS SETA  &XPLISTVER                                       @O2A 00677400
         AGO   .SETPLVERSEND                                       @O2A 00677500
.*                                                                      00677600
.SETPLVERSONE ANOP ,                                                    00677700
         AIF   (&XPLISTVER        NE 1              AND                *00677800
                 '&XREQUEST'      NE 'PROCESSMULT'  AND                *00677900
                 '&XMODE'         NE 'SYNCFAIL').SETPLVERSZERO     @O2A 00678000
&LOCKPLVERS SETA  1                                                @O2A 00678100
         AGO   .SETPLVERSEND                                       @O2A 00678200
.*                                                                      00678300
.SETPLVERSZERO ANOP ,                                              @O2A 00678400
&LOCKPLVERS SETA  0                                                @O2A 00678500
.SETPLVERSEND ANOP ,                                               @O2A 00678600
.*                                                                      00678700
         AIF   (K'&PLISTVER(1) LE 0                      OR            *00678800
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *00678900
                &XPLISTVER     GE &LOCKPLVERS).SETPLVERSUPDATE     @O2A 00679000
         MNOTE 8,' PLISTVER=&PLISTVER(1), BUT PLISTVER OF &LOCKPLVERS I*00679100
               S REQUIRED.'                                        @05C 00679200
&ZMACRET SETA  8                                                   @O2A 00679300
         AGO   .SETPLVERSEND2                                      @O2A 00679400
.*                                                                      00679500
.SETPLVERSUPDATE ANOP ,                                            @O2A 00679600
&XPLISTVER  SETA  &LOCKPLVERS                                      @O2A 00679700
.SETPLVERSEND2 ANOP ,                                              @O2A 00679800
.*                                                                      00679900
.**------------------------------------------------------------------** 00680000
.**  End of user macasm code                                         ** 00680100
.**------------------------------------------------------------------** 00680200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00680300
.********************************************************************   00680400
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00680500
.********************************************************************   00680600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00680700
                      LCLA  &ZOPN1         INVOCATION INDEX             00680800
                      LCLC  &ZOPL(4095)    LABEL                        00680900
                      LCLC  &ZOPO(4095)    OPERATION                    00681000
                      LCLC  &ZOPV(4095)    VALUE                        00681100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00681200
.*                                                                      00681300
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00681400
.******************************************************************     00681500
.***AL.L10 IXLLOCK FMT=LIST MF=S!L PARAMETERS                           00681600
.******************************************************************     00681700
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00681800
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00681900
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00682000
&XMFATTR              SETC  '0D'                                        00682100
.*                                                                      00682200
&ZOPN                 SETA  &ZOPN+1                                     00682300
&ZOPL(&ZOPN)          SETC  ' '                                         00682400
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00682500
&ZOPO(&ZOPN)          SETC  'B'                                         00682600
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00682700
                      AGO   .ZALVL6B                                    00682800
.ZALVL6A              ANOP                                              00682900
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00683000
&ZOPV(&ZOPN)          SETC  '4,8'                                       00683100
&ZOPN                 SETA  &ZOPN+1                                     00683200
&ZOPL(&ZOPN)          SETC  ' '                                         00683300
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00683400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00683500
.ZALVL6B              ANOP                                              00683600
&ZOPD(&ZOPN)          SETC  '++ IXLLOCK ARG PARMS'                      00683700
.*                                                                      00683800
&ZOPN                 SETA  &ZOPN+1                                     00683900
&ZOPL(&ZOPN)          SETC  ' '                                         00684000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00684100
&ZOPV(&ZOPN)          SETC  '1'                                         00684200
&ZOPD(&ZOPN)          SETC  ' '                                         00684300
.*                                                                      00684400
.ZLMFSL2              ANOP  ,                                           00684500
.*-------------------------------------------------------------------   00684600
.***AM.L00  IXLLOCK FMT=LIST name                                       00684700
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00684800
&ZOPN                 SETA &ZOPN+1                                      00684900
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00685000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00685100
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00685200
&ZOPD(&ZOPN)          SETC '++ IXLLOCK NAME'                            00685300
.ZLMFSL2M             ANOP  ,                                           00685400
.*-------------------------------------------------------------------   00685500
.***AM.L01  IXLLOCK FMT=LIST PARAMETERS                                 00685600
&ZOPN                 SETA &ZOPN+1                                      00685700
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00685800
&ZOPO(&ZOPN)          SETC 'DS'                                         00685900
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00686000
&ZOPD(&ZOPN)          SETC '++ IXLLOCK PARM LIST'                       00686100
.*-------------------------------------------------------------------   00686200
.***AM.L02 XVERSION XL1                                                 00686300
&ZOPN                 SETA &ZOPN+1                                      00686400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00686500
&ZOPO(&ZOPN)          SETC 'DS'                                         00686600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00686700
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00686800
.*-------------------------------------------------------------------   00686900
.***AM.L09  XRSV001 CL1                                                 00687000
&ZOPN                 SETA &ZOPN+1                                      00687100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00687200
&ZOPO(&ZOPN)          SETC 'DS'                                         00687300
&ZOPV(&ZOPN)          SETC 'CL1'                                        00687400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00687500
.*-------------------------------------------------------------------   00687600
.***AM.L09  XCRITICALREQUEST XL1                                        00687700
&ZOPN                 SETA &ZOPN+1                                      00687800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCRITICALREQUEST'                 00687900
&ZOPO(&ZOPN)          SETC 'DS'                                         00688000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00688100
&ZOPD(&ZOPN)          SETC '++ &ZXCRITICALREQUEST '                     00688200
.*-------------------------------------------------------------------   00688300
.***AM.L03 XREQUESTFLAGS BL.8                                           00688400
&ZOPN                 SETA &ZOPN+1                                      00688500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUESTFLAGS'                    00688600
&ZOPO(&ZOPN)          SETC 'DS'                                         00688700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00688800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00688900
.*                                                                      00689000
&ZOPN                 SETA  &ZOPN+1                                     00689100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RNAMELEN'                00689200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00689300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00689400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00689500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RNAMELEN'                     00689600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00689700
.*                                                                      00689800
&ZOPN                 SETA  &ZOPN+1                                     00689900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MODE'                    00690000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00690100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00690200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00690300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MODE'                         00690400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00690500
.*-------------------------------------------------------------------   00690600
.***AM.L09  XCONTOKEN CL16                                              00690700
&ZOPN                 SETA &ZOPN+1                                      00690800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        00690900
&ZOPO(&ZOPN)          SETC 'DS'                                         00691000
&ZOPV(&ZOPN)          SETC 'CL16'                                       00691100
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN '                            00691200
.*-------------------------------------------------------------------   00691300
.***AM.L09  XVARAREA1 CL64                                              00691400
&ZOPN                 SETA &ZOPN+1                                      00691500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVARAREA1'                        00691600
&ZOPO(&ZOPN)          SETC 'DS'                                         00691700
&ZOPV(&ZOPN)          SETC 'CL64'                                       00691800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00691900
.*-------------------------------------------------------------------   00692000
.***AM.L09  XHASHVAL F                                                  00692100
&ZOPN                 SETA &ZOPN+1                                      00692200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XHASHVAL'                         00692300
&ZOPO(&ZOPN)          SETC 'DS'                                         00692400
&ZOPV(&ZOPN)          SETC 'F'                                          00692500
&ZOPD(&ZOPN)          SETC '++ &ZXHASHVAL '                             00692600
.*-------------------------------------------------------------------   00692700
.***AM.L05 XSTATE XL1                                                   00692800
&ZOPN                 SETA &ZOPN+1                                      00692900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTATE'                           00693000
&ZOPO(&ZOPN)          SETC 'DS'                                         00693100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00693200
&ZOPD(&ZOPN)          SETC '++ &ZXSTATE XSTATE'                         00693300
.*                                                                      00693400
&ZOPN                 SETA  &ZOPN+1                                     00693500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATE_SHR'                      00693600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00693700
&ZOPV(&ZOPN)          SETC  '1'                                         00693800
&ZOPD(&ZOPN)          SETC  '++ XSTATE.'                                00693900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SHR'                          00694000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00694100
.*                                                                      00694200
&ZOPN                 SETA  &ZOPN+1                                     00694300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATE_EXCL'                     00694400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00694500
&ZOPV(&ZOPN)          SETC  '2'                                         00694600
&ZOPD(&ZOPN)          SETC  '++ XSTATE.'                                00694700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXCL'                         00694800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00694900
.*-------------------------------------------------------------------   00695000
.***AM.L09  XUDATAVAL CL64                                              00695100
&ZOPN                 SETA &ZOPN+1                                      00695200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUDATAVAL'                        00695300
&ZOPO(&ZOPN)          SETC 'DS'                                         00695400
&ZOPV(&ZOPN)          SETC 'CL64'                                       00695500
&ZOPD(&ZOPN)          SETC '++ &ZXUDATAVAL '                            00695600
.*-------------------------------------------------------------------   00695700
.***AM.L09  XRSV002 CL3                                                 00695800
&ZOPN                 SETA &ZOPN+1                                      00695900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002'                          00696000
&ZOPO(&ZOPN)          SETC 'DS'                                         00696100
&ZOPV(&ZOPN)          SETC 'CL3'                                        00696200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00696300
.*-------------------------------------------------------------------   00696400
.***AM.L09  XRDATAVAL CL64                                              00696500
&ZOPN                 SETA &ZOPN+1                                      00696600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRDATAVAL'                        00696700
&ZOPO(&ZOPN)          SETC 'DS'                                         00696800
&ZOPV(&ZOPN)          SETC 'CL64'                                       00696900
&ZOPD(&ZOPN)          SETC '++ &ZXRDATAVAL '                            00697000
.*-------------------------------------------------------------------   00697100
.***AM.L09  XENTRYID CL12                                               00697200
&ZOPN                 SETA &ZOPN+1                                      00697300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYID'                         00697400
&ZOPO(&ZOPN)          SETC 'DS'                                         00697500
&ZOPV(&ZOPN)          SETC 'CL12'                                       00697600
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYID '                             00697700
.*-------------------------------------------------------------------   00697800
.***AM.L09  XLOCKDATA CL8                                               00697900
&ZOPN                 SETA &ZOPN+1                                      00698000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKDATA'                        00698100
&ZOPO(&ZOPN)          SETC 'DS'                                         00698200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00698300
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKDATA '                            00698400
.*-------------------------------------------------------------------   00698500
.***AM.L05 XMODE XL1                                                    00698600
&ZOPN                 SETA &ZOPN+1                                      00698700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODE'                            00698800
&ZOPO(&ZOPN)          SETC 'DS'                                         00698900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00699000
&ZOPD(&ZOPN)          SETC '++ &ZXMODE XMODE'                           00699100
.*                                                                      00699200
&ZOPN                 SETA  &ZOPN+1                                     00699300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  00699400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00699500
&ZOPV(&ZOPN)          SETC  '0'                                         00699600
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00699700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     00699800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00699900
.*                                                                      00700000
&ZOPN                 SETA  &ZOPN+1                                     00700100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_NORESPONSE'                00700200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00700300
&ZOPV(&ZOPN)          SETC  '1'                                         00700400
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00700500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NORESPONSE'                   00700600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00700700
.*                                                                      00700800
&ZOPN                 SETA  &ZOPN+1                                     00700900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCSUSPEND'               00701000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00701100
&ZOPV(&ZOPN)          SETC  '2'                                         00701200
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00701300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCSUSPEND'                  00701400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00701500
.*                                                                      00701600
&ZOPN                 SETA  &ZOPN+1                                     00701700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCFAIL'                  00701800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00701900
&ZOPV(&ZOPN)          SETC  '3'                                         00702000
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00702100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCFAIL'                     00702200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00702300
.*-------------------------------------------------------------------   00702400
.***AM.L09  XEVENT XL1                                                  00702500
&ZOPN                 SETA &ZOPN+1                                      00702600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEVENT'                           00702700
&ZOPO(&ZOPN)          SETC 'DS'                                         00702800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00702900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00703000
.*-------------------------------------------------------------------   00703100
.***AM.L03 XRDATA BL.8                                                  00703200
&ZOPN                 SETA &ZOPN+1                                      00703300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRDATA'                           00703400
&ZOPO(&ZOPN)          SETC 'DS'                                         00703500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00703600
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00703700
.*                                                                      00703800
&ZOPN                 SETA  &ZOPN+1                                     00703900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_UNCHANGED'                00704000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00704100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00704200
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00704300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNCHANGED'                    00704400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00704500
.*                                                                      00704600
&ZOPN                 SETA  &ZOPN+1                                     00704700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_NORDATA'                  00704800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00704900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00705000
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00705100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NORDATA'                      00705200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00705300
.*                                                                      00705400
&ZOPN                 SETA  &ZOPN+1                                     00705500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_DELETE'                   00705600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00705700
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00705800
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00705900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE'                       00706000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00706100
.*                                                                      00706200
&ZOPN                 SETA  &ZOPN+1                                     00706300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_WRITE'                    00706400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00706500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00706600
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00706700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).WRITE'                        00706800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00706900
.*                                                                      00707000
&ZOPN                 SETA  &ZOPN+1                                     00707100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_REACQUIRE'                00707200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00707300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00707400
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00707500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REACQUIRE'                    00707600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00707700
.*                                                                      00707800
&ZOPN                 SETA  &ZOPN+1                                     00707900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_KEEP'                     00708000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00708100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00708200
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00708300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEEP'                         00708400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00708500
.*                                                                      00708600
&ZOPN                 SETA  &ZOPN+1                                     00708700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUPDATERDATA_YES'                00708800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00708900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00709000
&ZOPD(&ZOPN)          SETC  '++ XUPDATERDATA.'                          00709100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00709200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00709300
.*                                                                      00709400
&ZOPN                 SETA  &ZOPN+1                                     00709500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUPDATERDATA_NO'                 00709600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00709700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00709800
&ZOPD(&ZOPN)          SETC  '++ XUPDATERDATA.'                          00709900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00710000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00710100
.*-------------------------------------------------------------------   00710200
.***AM.L09  XCONID XL1                                                  00710300
&ZOPN                 SETA &ZOPN+1                                      00710400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           00710500
&ZOPO(&ZOPN)          SETC 'DS'                                         00710600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00710700
&ZOPD(&ZOPN)          SETC '++ &ZXCONID '                               00710800
.*-------------------------------------------------------------------   00710900
.***AM.L09  XENTRYCOUNT F                                               00711000
&ZOPN                 SETA &ZOPN+1                                      00711100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYCOUNT'                      00711200
&ZOPO(&ZOPN)          SETC 'DS'                                         00711300
&ZOPV(&ZOPN)          SETC 'F'                                          00711400
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYCOUNT '                          00711500
.*-------------------------------------------------------------------   00711600
.***AM.L09  XALLOWUSERSV XL1                                            00711700
&ZOPN                 SETA &ZOPN+1                                      00711800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XALLOWUSERSV'                     00711900
&ZOPO(&ZOPN)          SETC 'DS'                                         00712000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00712100
&ZOPD(&ZOPN)          SETC '++ &ZXALLOWUSERSV '                         00712200
.*-------------------------------------------------------------------   00712300
.***AM.L09  XSYNCFAILDELAY XL1                                          00712400
&ZOPN                 SETA &ZOPN+1                                      00712500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYNCFAILDELAY'                   00712600
&ZOPO(&ZOPN)          SETC 'DS'                                         00712700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00712800
&ZOPD(&ZOPN)          SETC '++ &ZXSYNCFAILDELAY '                       00712900
.*-------------------------------------------------------------------   00713000
.***AM.L09  XRSV003 CL2                                                 00713100
&ZOPN                 SETA &ZOPN+1                                      00713200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV003'                          00713300
&ZOPO(&ZOPN)          SETC 'DS'                                         00713400
&ZOPV(&ZOPN)          SETC 'CL2'                                        00713500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00713600
.*-------------------------------------------------------------------   00713700
.***AM.L09  XRNAMELEN F                                                 00713800
&ZOPN                 SETA &ZOPN+1                                      00713900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRNAMELEN'                        00714000
&ZOPO(&ZOPN)          SETC 'DS'                                         00714100
&ZOPV(&ZOPN)          SETC 'F'                                          00714200
&ZOPD(&ZOPN)          SETC '++ &ZXRNAMELEN '                            00714300
.*-------------------------------------------------------------------   00714400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00714500
                      AIF  (&XPLISTVER GE 3).ZL38LA                     00714600
                      AIF  ('&ZENDBASEPL' NE '').ZL38LA                 00714700
&ZENDBASEPL           SETC 'YES'                                        00714800
&ZOPN                 SETA &ZOPN+1                                      00714900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00715000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00715100
&ZOPV(&ZOPN)          SETC '*'                                          00715200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00715300
.ZL38LA               ANOP  ,                                           00715400
.*-------------------------------------------------------------------   00715500
.***AM.LVER1                                                            00715600
                      AIF  (&XPLISTVER LT 3).ZL38L                      00715700
.*-------------------------------------------------------------------   00715800
.*-------------------------------------------------------------------   00715900
.***AM.L09  XRSV003A CL9                                                00716000
&ZOPN                 SETA &ZOPN+1                                      00716100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV003A'                         00716200
&ZOPO(&ZOPN)          SETC 'DS'                                         00716300
&ZOPV(&ZOPN)          SETC 'CL9'                                        00716400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00716500
.*-------------------------------------------------------------------   00716600
.***AM.LVER2                                                            00716700
.ZL38L                ANOP  ,                                           00716800
.*-------------------------------------------------------------------   00716900
.*-------------------------------------------------------------------   00717000
.***AM.LVER1                                                            00717100
                      AIF  (&XPLISTVER LT 3).ZL39L                      00717200
.*-------------------------------------------------------------------   00717300
.*-------------------------------------------------------------------   00717400
.***AM.L09  XRSV004A CL1                                                00717500
&ZOPN                 SETA &ZOPN+1                                      00717600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV004A'                         00717700
&ZOPO(&ZOPN)          SETC 'DS'                                         00717800
&ZOPV(&ZOPN)          SETC 'CL1'                                        00717900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00718000
.*-------------------------------------------------------------------   00718100
.***AM.LVER2                                                            00718200
.ZL39L                ANOP  ,                                           00718300
.*-------------------------------------------------------------------   00718400
.*-------------------------------------------------------------------   00718500
.***AM.LVER1                                                            00718600
                      AIF  (&XPLISTVER LT 3).ZL40L                      00718700
.*-------------------------------------------------------------------   00718800
.*-------------------------------------------------------------------   00718900
.***AM.L09  XRSV004B CL2                                                00719000
&ZOPN                 SETA &ZOPN+1                                      00719100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV004B'                         00719200
&ZOPO(&ZOPN)          SETC 'DS'                                         00719300
&ZOPV(&ZOPN)          SETC 'CL2'                                        00719400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00719500
.*-------------------------------------------------------------------   00719600
.***AM.LVER2                                                            00719700
.ZL40L                ANOP  ,                                           00719800
.*-------------------------------------------------------------------   00719900
.*-------------------------------------------------------------------   00720000
.***AM.LVER1                                                            00720100
                      AIF  (&XPLISTVER LT 3).ZL41L                      00720200
.*-------------------------------------------------------------------   00720300
.*-------------------------------------------------------------------   00720400
.***AM.L09  XADUPREQSEQNUM CL16                                         00720500
&ZOPN                 SETA &ZOPN+1                                      00720600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADUPREQSEQNUM'                   00720700
&ZOPO(&ZOPN)          SETC 'DS'                                         00720800
&ZOPV(&ZOPN)          SETC 'CL16'                                       00720900
&ZOPD(&ZOPN)          SETC '++ &ZXADUPREQSEQNUM '                       00721000
.*-------------------------------------------------------------------   00721100
.***AM.LVER2                                                            00721200
.ZL41L                ANOP  ,                                           00721300
.*-------------------------------------------------------------------   00721400
.*-------------------------------------------------------------------   00721500
.***AM.LVER1                                                            00721600
                      AIF  (&XPLISTVER LT 3).ZL42L                      00721700
.*-------------------------------------------------------------------   00721800
.*-------------------------------------------------------------------   00721900
.***AM.L09  XRSV004 CL20                                                00722000
&ZOPN                 SETA &ZOPN+1                                      00722100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV004'                          00722200
&ZOPO(&ZOPN)          SETC 'DS'                                         00722300
&ZOPV(&ZOPN)          SETC 'CL20'                                       00722400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00722500
.*-------------------------------------------------------------------   00722600
.***AM.LVER2                                                            00722700
.ZL42L                ANOP  ,                                           00722800
.*-------------------------------------------------------------------   00722900
.*-------------------------------------------------------------------   00723000
.***AM.MLM1 SAVED LOCATION COUNTER                                      00723100
                      AIF  ('&ZENDBASEPL' NE '').ZL43LB                 00723200
&ZENDBASEPL           SETC 'YES'                                        00723300
&ZOPN                 SETA &ZOPN+1                                      00723400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00723500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00723600
&ZOPV(&ZOPN)          SETC '*'                                          00723700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00723800
.ZL43LB               ANOP  ,                                           00723900
.*-------------------------------------------------------------------   00724000
.***AM.PJR1 DEFINED ON XSTATE                                           00724100
&ZOPN                 SETA &ZOPN+1                                      00724200
&ZOPL(&ZOPN)          SETC ' '                                          00724300
&ZOPO(&ZOPN)          SETC 'ORG'                                        00724400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               00724500
&ZOPD(&ZOPN)          SETC ' '                                          00724600
.*-------------------------------------------------------------------   00724700
.***AM.L09  XSTATEVAL XL1                                               00724800
&ZOPN                 SETA &ZOPN+1                                      00724900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTATEVAL'                        00725000
&ZOPO(&ZOPN)          SETC 'DS'                                         00725100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00725200
&ZOPD(&ZOPN)          SETC '++ &ZXSTATEVAL '                            00725300
.*-------------------------------------------------------------------   00725400
.***AM.PJR1 DEFINED ON XMODE                                            00725500
&ZOPN                 SETA &ZOPN+1                                      00725600
&ZOPL(&ZOPN)          SETC ' '                                          00725700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00725800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+240'                              00725900
&ZOPD(&ZOPN)          SETC ' '                                          00726000
.*-------------------------------------------------------------------   00726100
.***AM.L09  XMODEVAL XL1                                                00726200
&ZOPN                 SETA &ZOPN+1                                      00726300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODEVAL'                         00726400
&ZOPO(&ZOPN)          SETC 'DS'                                         00726500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00726600
&ZOPD(&ZOPN)          SETC '++ &ZXMODEVAL '                             00726700
.*-------------------------------------------------------------------   00726800
.***AM.PJR1 DEFINED ON XVARAREA1                                        00726900
&ZOPN                 SETA &ZOPN+1                                      00727000
&ZOPL(&ZOPN)          SETC ' '                                          00727100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00727200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00727300
&ZOPD(&ZOPN)          SETC ' '                                          00727400
.*-------------------------------------------------------------------   00727500
.***AM.L09  XINLINERNAME CL64                                           00727600
&ZOPN                 SETA &ZOPN+1                                      00727700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINLINERNAME'                     00727800
&ZOPO(&ZOPN)          SETC 'DS'                                         00727900
&ZOPV(&ZOPN)          SETC 'CL64'                                       00728000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00728100
.*-------------------------------------------------------------------   00728200
.***AM.PJR1 DEFINED ON XVARAREA1                                        00728300
&ZOPN                 SETA &ZOPN+1                                      00728400
&ZOPL(&ZOPN)          SETC ' '                                          00728500
&ZOPO(&ZOPN)          SETC 'ORG'                                        00728600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00728700
&ZOPD(&ZOPN)          SETC ' '                                          00728800
.*-------------------------------------------------------------------   00728900
.***AM.L09  XRNAMEADDR A                                                00729000
&ZOPN                 SETA &ZOPN+1                                      00729100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRNAMEADDR'                       00729200
&ZOPO(&ZOPN)          SETC 'DS'                                         00729300
&ZOPV(&ZOPN)          SETC 'A'                                          00729400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00729500
.*-------------------------------------------------------------------   00729600
.***AM.PJR1 DEFINED ON XVARAREA1                                        00729700
&ZOPN                 SETA &ZOPN+1                                      00729800
&ZOPL(&ZOPN)          SETC ' '                                          00729900
&ZOPO(&ZOPN)          SETC 'ORG'                                        00730000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00730100
&ZOPD(&ZOPN)          SETC ' '                                          00730200
.*-------------------------------------------------------------------   00730300
.***AM.L09  XREQBUFFER A                                                00730400
&ZOPN                 SETA &ZOPN+1                                      00730500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQBUFFER'                       00730600
&ZOPO(&ZOPN)          SETC 'DS'                                         00730700
&ZOPV(&ZOPN)          SETC 'A'                                          00730800
&ZOPD(&ZOPN)          SETC '++ &ZXREQBUFFER '                           00730900
.*-------------------------------------------------------------------   00731000
.***AM.L09 ALET XREQBUFFER F                                            00731100
&ZOPN                 SETA &ZOPN+1                                      00731200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQBUFFER_ALET'                  00731300
&ZOPO(&ZOPN)          SETC 'DS'                                         00731400
&ZOPV(&ZOPN)          SETC 'F'                                          00731500
&ZOPD(&ZOPN)          SETC '++ &ZXREQBUFFER ALET'                       00731600
.*-------------------------------------------------------------------   00731700
.***AM.L09  XREQNUM XL2                                                 00731800
&ZOPN                 SETA &ZOPN+1                                      00731900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQNUM'                          00732000
&ZOPO(&ZOPN)          SETC 'DS'                                         00732100
&ZOPV(&ZOPN)          SETC 'XL2'                                        00732200
&ZOPD(&ZOPN)          SETC '++ &ZXREQNUM '                              00732300
.*-------------------------------------------------------------------   00732400
.***AM.L09  XREQPROC XL2                                                00732500
&ZOPN                 SETA &ZOPN+1                                      00732600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQPROC'                         00732700
&ZOPO(&ZOPN)          SETC 'DS'                                         00732800
&ZOPV(&ZOPN)          SETC 'XL2'                                        00732900
&ZOPD(&ZOPN)          SETC '++ &ZXREQPROC '                             00733000
.*-------------------------------------------------------------------   00733100
.***AM.L09  XREQVERSION XL1                                             00733200
&ZOPN                 SETA &ZOPN+1                                      00733300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQVERSION'                      00733400
&ZOPO(&ZOPN)          SETC 'DS'                                         00733500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00733600
&ZOPD(&ZOPN)          SETC '++ &ZXREQVERSION '                          00733700
&ZOPN                 SETA &ZOPN+1                                      00733800
&ZOPL(&ZOPN)          SETC ' '                                          00733900
&ZOPO(&ZOPN)          SETC 'ORG'                                        00734000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00734100
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00734200
.*-------------------------------------------------------------------   00734300
.***AM.L10 END OF IXLLOCK LIST PARAMETERS                               00734400
&ZOPN                 SETA &ZOPN+1                                      00734500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00734600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00734700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00734800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00734900
.*                                                                      00735000
&ZOPN                 SETA &ZOPN+1                                      00735100
&ZOPL(&ZOPN)          SETC ' '                                          00735200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00735300
&ZOPV(&ZOPN)          SETC '1'                                          00735400
&ZOPD(&ZOPN)          SETC ' '                                          00735500
.*-------------------------------------------------------------------   00735600
.***AL.L12 IXLLOCK FMT=LIST MF=S!L PARAMETERS                           00735700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00735800
.*                                                                      00735900
&ZOPN                 SETA  &ZOPN+1                                     00736000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00736100
&ZOPO(&ZOPN)          SETC  'DC'                                        00736200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00736300
&ZOPD(&ZOPN)          SETC  '++ IXLLOCK ARG PARMS'                      00736400
.*                                                                      00736500
.ZLMFSLX              ANOP  ,                                           00736600
.*-------------------------------------------------------------------   00736700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00736800
&ZPLLEN               SETA 256                                          00736900
.*                                                                      00737000
                      AIF  (&XPLISTVER LT 3).ZLLEN2Z                    00737100
&ZPLLEN               SETA 304                                          00737200
.ZLLEN2Z              ANOP  ,                                           00737300
.*                                                                      00737400
.******************************************************************     00737500
.***AI.L01 IXLLOCK FMT=LIST FILL IN PARAMETER AREA                      00737600
.******************************************************************     00737700
                      ACTR  10000                                       00737800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00737900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00738000
&ZCVAL                SETC  'LAE'          XAX MODE                     00738100
.ZIMFXA               ANOP ,                                            00738200
.*                                                                      00738300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00738400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00738500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00738600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00738700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00738800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00738900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00739000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00739100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00739200
&ZOPN                 SETA  &ZOPN+1                                     00739300
&ZOPL(&ZOPN)          SETC  ' '                                         00739400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00739500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00739600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00739700
                      AGO   .ZIMFNX                                     00739800
.*                                                                      00739900
.ZIMFN2               ANOP ,                                            00740000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00740100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00740200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00740300
&ZOPN                 SETA  &ZOPN+1                                     00740400
&ZOPL(&ZOPN)          SETC  ' '                                         00740500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00740600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00740700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00740800
                      AGO   .ZIMFNX                                     00740900
.ZIMFNX1              ANOP ,                                            00741000
&ZOPN                 SETA  &ZOPN+1                                     00741100
&ZOPL(&ZOPN)          SETC  ' '                                         00741200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00741300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00741400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00741500
.ZIMFNX               ANOP ,                                            00741600
.********************************************************************   00741700
.***AI.L02 IXLLOCK FMT=LIST INITIALIZE PARAMETER AREA                   00741800
.********************************************************************   00741900
.***AI.L03 MF=(SLE)                                                     00742000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00742100
&ZAWRK                SETA  0                                           00742200
&ZN                   SETA  &ZPLLEN                                     00742300
.ZCLRCONT             AIF   (&ZN LE 256).ZCLRX                          00742400
.*                                                                      00742500
&ZOPN                 SETA  &ZOPN+1                                     00742600
&ZOPL(&ZOPN)          SETC  ' '                                         00742700
&ZOPO(&ZOPN)          SETC  'XC'                                        00742800
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(256,1),&ZAWRK.(1)'                 00742900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00743000
.*                                                                      00743100
&ZAWRK                SETA &ZAWRK+256                                   00743200
&ZN                   SETA  &ZN-256                                     00743300
                      AGO   .ZCLRCONT                                   00743400
.*                                                                      00743500
.ZCLRX                ANOP  ,                                           00743600
.*                                                                      00743700
&ZOPN                 SETA  &ZOPN+1                                     00743800
&ZOPL(&ZOPN)          SETC  ' '                                         00743900
&ZOPO(&ZOPN)          SETC  'XC'                                        00744000
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(&ZN,1),&ZAWRK.(1)'                 00744100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00744200
.ZIMFLX               ANOP  ,                                           00744300
.*-------------------------------------------------------------------   00744400
.***AI.L04A XVERSION XL1                                                00744500
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00744600
&ZOPN                 SETA  &ZOPN+1                                     00744700
&ZOPL(&ZOPN)          SETC  ' '                                         00744800
&ZOPO(&ZOPN)          SETC  'MVI'                                       00744900
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00745000
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00745100
.ZIMFVW               ANOP  ,                                           00745200
.*-------------------------------------------------------------------   00745300
.***AI.L18  XCRITICALREQUEST XL1                                        00745400
         AIF   ('&XCRITICALREQUEST' NE '0').ZI3                         00745500
&ZXCRITICALREQUEST    SETC  ''             RESET INPUT/OUTPUT           00745600
.ZI3                  ANOP  ,                                           00745700
.*-------------------------------------------------------------------   00745800
.***AI.L25  XCRITICALREQUEST XL1                                        00745900
                      AIF   ('&ZXCRITICALREQUEST' EQ '').ZI3E           00746000
                      AIF   ('&ZXCRITICALREQUEST' EQ 'OUTPUT').ZI3E     00746100
&ZCGPR                SETC  '&XCRITICALREQUEST'                         00746200
.*                                                                      00746300
                      AIF   ('&XCRITICALREQUEST'(1,1) NE '(').ZI3B      00746400
&ZCGPR   SETC  '0('.'&XCRITICALREQUEST'(2,K'&XCRITICALREQUEST-2).')'    00746500
                      AGO   .ZI3D                                       00746600
.ZI3B                 ANOP  ,                                           00746700
.*                                                                      00746800
&ZC                   SETC  '&XCRITICALREQUEST'(1,1)                    00746900
                      AIF   (T'&ZC NE 'N').ZI3D                         00747000
&ZC                   SETC  '&XCRITICALREQUEST'                         00747100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI3D                00747200
&ZCGPR                SETC  '=AL1(&XCRITICALREQUEST)'                   00747300
.*                                                                      00747400
.ZI3D                 ANOP  ,                                           00747500
.*                                                                      00747600
&ZOPN                 SETA  &ZOPN+1                                     00747700
&ZOPL(&ZOPN)          SETC  ' '                                         00747800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00747900
&ZOPV(&ZOPN)          SETC  '2(1,1),&ZCGPR'                             00748000
&ZOPD(&ZOPN)          SETC  '++ &ZXCRITICALREQUEST XCRITICALREQUEST'    00748100
.*                                                                      00748200
.ZI3E                 ANOP  ,                                           00748300
.*-------------------------------------------------------------------   00748400
.***AI.L05 XREQUESTFLAGS BL1                                            00748500
&ZW                   SETC  ''                                          00748600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00748700
.*-------------------------------------------------------------------   00748800
.***AI.L08 XREQUESTFLAGS "RNAMELEN"                                     00748900
.***      BL1'1XXXXXXX'                                                 00749000
         AIF   ('&RNAMELEN' EQ '').ZI5A                                 00749100
         AIF   ('&RNAMELEN' EQ 'NO_RNAMELEN').ZI5A                      00749200
         AIF   ('&RNAMELEN' EQ 'NO_RNAMELEN').ZI5A                      00749300
         AIF   ('&RNAMELEN' EQ 'NO_RNAMELEN').ZI5A                      00749400
&ZW                   SETC  '&ZW.1'                                     00749500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00749600
                      AGO   .ZI5C                                       00749700
.*                                                                      00749800
.ZI5A                 ANOP  ,                                           00749900
&ZW                   SETC  '&ZW.0'                                     00750000
.ZI5C                 ANOP  ,                                           00750100
.*-------------------------------------------------------------------   00750200
.***AI.L08 XREQUESTFLAGS "MODE"                                         00750300
.***      BL1'X1XXXXXX'                                                 00750400
         AIF   ('&MODE' EQ '').ZI6A                                     00750500
&ZW                   SETC  '&ZW.1000000'                               00750600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00750700
                      AGO   .ZI6C                                       00750800
.*                                                                      00750900
.ZI6A                 ANOP  ,                                           00751000
&ZW                   SETC  '&ZW.0000000'                               00751100
.ZI6C                 ANOP  ,                                           00751200
.*-------------------------------------------------------------------   00751300
.***AI.L11 XREQUESTFLAGS BL1                                            00751400
                      AIF   ('&ZCLNG' NE 'YES').ZI6E  ALL ZERO BITS     00751500
&ZOPN                 SETA  &ZOPN+1                                     00751600
&ZOPL(&ZOPN)          SETC  ' '                                         00751700
&ZOPO(&ZOPN)          SETC  'OI'                                        00751800
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00751900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00752000
.ZI6E                 ANOP  ,                                           00752100
.*-------------------------------------------------------------------   00752200
.***AI.L25  XCONTOKEN CL16                                              00752300
                      AIF   ('&ZXCONTOKEN' EQ '').ZI7E                  00752400
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI7E            00752500
&ZCGPR                SETC  '&XCONTOKEN'                                00752600
.*                                                                      00752700
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI7B             00752800
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  00752900
.ZI7B                 ANOP  ,                                           00753000
.*                                                                      00753100
&ZOPN                 SETA  &ZOPN+1                                     00753200
&ZOPL(&ZOPN)          SETC  ' '                                         00753300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00753400
&ZOPV(&ZOPN)          SETC  '4(16,1),&ZCGPR'                            00753500
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  00753600
.*                                                                      00753700
.ZI7E                 ANOP  ,                                           00753800
.*-------------------------------------------------------------------   00753900
.***AI.L25  XHASHVAL F                                                  00754000
                      AIF   ('&ZXHASHVAL' EQ '').ZI9E                   00754100
                      AIF   ('&ZXHASHVAL' EQ 'OUTPUT').ZI9E             00754200
&ZCGPR                SETC  '&XHASHVAL'                                 00754300
.*                                                                      00754400
                      AIF   ('&XHASHVAL'(1,1) NE '(').ZI9B              00754500
&ZCGPR   SETC  '0('.'&XHASHVAL'(2,K'&XHASHVAL-2).')'                    00754600
                      AGO   .ZI9D                                       00754700
.ZI9B                 ANOP  ,                                           00754800
.*                                                                      00754900
&ZC                   SETC  '&XHASHVAL'(1,1)                            00755000
                      AIF   (T'&ZC NE 'N').ZI9D                         00755100
&ZC                   SETC  '&XHASHVAL'                                 00755200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00755300
&ZCGPR                SETC  '=AL4(&XHASHVAL)'                           00755400
.*                                                                      00755500
.ZI9D                 ANOP  ,                                           00755600
.*                                                                      00755700
&ZOPN                 SETA  &ZOPN+1                                     00755800
&ZOPL(&ZOPN)          SETC  ' '                                         00755900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00756000
&ZOPV(&ZOPN)          SETC  '84(4,1),&ZCGPR'                            00756100
&ZOPD(&ZOPN)          SETC  '++ &ZXHASHVAL XHASHVAL'                    00756200
.*                                                                      00756300
.ZI9E                 ANOP  ,                                           00756400
.*-------------------------------------------------------------------   00756500
.***AI.L07 XSTATE AL1                                                   00756600
&ZW                   SETC  ''                                          00756700
.*-------------------------------------------------------------------   00756800
.***AI.L15 XSTATE "SHR" AL1                                             00756900
         AIF   ('&XSTATE' NE 'SHR').ZI11A                               00757000
&ZW                   SETC  '1'                                         00757100
.ZI11A                ANOP  ,                                           00757200
.*-------------------------------------------------------------------   00757300
.***AI.L15 XSTATE "EXCL" AL1                                            00757400
         AIF   ('&XSTATE' NE 'EXCL').ZI12A                              00757500
&ZW                   SETC  '2'                                         00757600
.ZI12A                ANOP  ,                                           00757700
.*-------------------------------------------------------------------   00757800
.***AI.L17 XSTATE AL1                                                   00757900
                      AIF   ('&ZW' EQ '0').ZI12B                        00758000
                      AIF   ('&ZW' EQ '').ZI12B                         00758100
.*                                                                      00758200
&ZOPN                 SETA  &ZOPN+1                                     00758300
&ZOPL(&ZOPN)          SETC  ' '                                         00758400
&ZOPO(&ZOPN)          SETC  'MVI'                                       00758500
&ZOPV(&ZOPN)          SETC  '88(1),&ZW'                                 00758600
&ZOPD(&ZOPN)          SETC  '++ &ZXSTATE XSTATE'                        00758700
.ZI12B                ANOP  ,                                           00758800
.*-------------------------------------------------------------------   00758900
.***AI.L18  XUDATAVAL CL64                                              00759000
         AIF   ('&XUDATAVAL' NE 'ALL_ZEROES').ZI13                      00759100
&ZXUDATAVAL           SETC  ''             RESET INPUT/OUTPUT           00759200
.ZI13                 ANOP  ,                                           00759300
.*-------------------------------------------------------------------   00759400
.***AI.L25  XUDATAVAL CL64                                              00759500
                      AIF   ('&ZXUDATAVAL' EQ '').ZI13E                 00759600
                      AIF   ('&ZXUDATAVAL' EQ 'OUTPUT').ZI13E           00759700
&ZCGPR                SETC  '&XUDATAVAL'                                00759800
.*                                                                      00759900
                      AIF   ('&XUDATAVAL'(1,1) NE '(').ZI13B            00760000
&ZCGPR   SETC  '0('.'&XUDATAVAL'(2,K'&XUDATAVAL-2).')'                  00760100
.ZI13B                ANOP  ,                                           00760200
.*                                                                      00760300
&ZOPN                 SETA  &ZOPN+1                                     00760400
&ZOPL(&ZOPN)          SETC  ' '                                         00760500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00760600
&ZOPV(&ZOPN)          SETC  '89(64,1),&ZCGPR'                           00760700
&ZOPD(&ZOPN)          SETC  '++ &ZXUDATAVAL XUDATAVAL'                  00760800
.*                                                                      00760900
.ZI13E                ANOP  ,                                           00761000
.*-------------------------------------------------------------------   00761100
.***AI.L25  XRDATAVAL CL64                                              00761200
                      AIF   ('&ZXRDATAVAL' EQ '').ZI15E                 00761300
                      AIF   ('&ZXRDATAVAL' EQ 'OUTPUT').ZI15E           00761400
&ZCGPR                SETC  '&XRDATAVAL'                                00761500
.*                                                                      00761600
                      AIF   ('&XRDATAVAL'(1,1) NE '(').ZI15B            00761700
&ZCGPR   SETC  '0('.'&XRDATAVAL'(2,K'&XRDATAVAL-2).')'                  00761800
.ZI15B                ANOP  ,                                           00761900
.*                                                                      00762000
&ZOPN                 SETA  &ZOPN+1                                     00762100
&ZOPL(&ZOPN)          SETC  ' '                                         00762200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00762300
&ZOPV(&ZOPN)          SETC  '156(64,1),&ZCGPR'                          00762400
&ZOPD(&ZOPN)          SETC  '++ &ZXRDATAVAL XRDATAVAL'                  00762500
.*                                                                      00762600
.ZI15E                ANOP  ,                                           00762700
.*-------------------------------------------------------------------   00762800
.***AI.L25  XENTRYID CL12                                               00762900
                      AIF   ('&ZXENTRYID' EQ '').ZI16E                  00763000
                      AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZI16E            00763100
&ZCGPR                SETC  '&XENTRYID'                                 00763200
.*                                                                      00763300
                      AIF   ('&XENTRYID'(1,1) NE '(').ZI16B             00763400
&ZCGPR   SETC  '0('.'&XENTRYID'(2,K'&XENTRYID-2).')'                    00763500
.ZI16B                ANOP  ,                                           00763600
.*                                                                      00763700
&ZOPN                 SETA  &ZOPN+1                                     00763800
&ZOPL(&ZOPN)          SETC  ' '                                         00763900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00764000
&ZOPV(&ZOPN)          SETC  '220(12,1),&ZCGPR'                          00764100
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYID XENTRYID'                    00764200
.*                                                                      00764300
.ZI16E                ANOP  ,                                           00764400
.*-------------------------------------------------------------------   00764500
.***AI.L18  XLOCKDATA CL8                                               00764600
         AIF   ('&XLOCKDATA' NE 'ALL_ZEROES').ZI17                      00764700
&ZXLOCKDATA           SETC  ''             RESET INPUT/OUTPUT           00764800
.ZI17                 ANOP  ,                                           00764900
.*-------------------------------------------------------------------   00765000
.***AI.L25  XLOCKDATA CL8                                               00765100
                      AIF   ('&ZXLOCKDATA' EQ '').ZI17E                 00765200
                      AIF   ('&ZXLOCKDATA' EQ 'OUTPUT').ZI17E           00765300
&ZCGPR                SETC  '&XLOCKDATA'                                00765400
.*                                                                      00765500
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZI17B            00765600
&ZCGPR   SETC  '0('.'&XLOCKDATA'(2,K'&XLOCKDATA-2).')'                  00765700
.ZI17B                ANOP  ,                                           00765800
.*                                                                      00765900
&ZOPN                 SETA  &ZOPN+1                                     00766000
&ZOPL(&ZOPN)          SETC  ' '                                         00766100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00766200
&ZOPV(&ZOPN)          SETC  '232(8,1),&ZCGPR'                           00766300
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKDATA XLOCKDATA'                  00766400
.*                                                                      00766500
.ZI17E                ANOP  ,                                           00766600
.*-------------------------------------------------------------------   00766700
.***AI.L07 XMODE AL1                                                    00766800
&ZW                   SETC  ''                                          00766900
.*-------------------------------------------------------------------   00767000
.***AI.L15 XMODE "SYNCEXIT" AL1                                         00767100
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI19A                           00767200
&ZW                   SETC  '0'                                         00767300
.ZI19A                ANOP  ,                                           00767400
.*-------------------------------------------------------------------   00767500
.***AI.L15 XMODE "NORESPONSE" AL1                                       00767600
         AIF   ('&XMODE' NE 'NORESPONSE').ZI20A                         00767700
&ZW                   SETC  '1'                                         00767800
.ZI20A                ANOP  ,                                           00767900
.*-------------------------------------------------------------------   00768000
.***AI.L15 XMODE "SYNCSUSPEND" AL1                                      00768100
         AIF   ('&XMODE' NE 'SYNCSUSPEND').ZI21A                        00768200
&ZW                   SETC  '2'                                         00768300
.ZI21A                ANOP  ,                                           00768400
.*-------------------------------------------------------------------   00768500
.***AI.L15 XMODE "SYNCFAIL" AL1                                         00768600
         AIF   ('&XMODE' NE 'SYNCFAIL').ZI22A                           00768700
&ZW                   SETC  '3'                                         00768800
.ZI22A                ANOP  ,                                           00768900
.*-------------------------------------------------------------------   00769000
.***AI.L17 XMODE AL1                                                    00769100
                      AIF   ('&ZW' EQ '0').ZI22B                        00769200
                      AIF   ('&ZW' EQ '').ZI22B                         00769300
.*                                                                      00769400
&ZOPN                 SETA  &ZOPN+1                                     00769500
&ZOPL(&ZOPN)          SETC  ' '                                         00769600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00769700
&ZOPV(&ZOPN)          SETC  '240(1),&ZW'                                00769800
&ZOPD(&ZOPN)          SETC  '++ &ZXMODE XMODE'                          00769900
.ZI22B                ANOP  ,                                           00770000
.*-------------------------------------------------------------------   00770100
.***AI.L05 XRDATA BL1                                                   00770200
&ZW                   SETC  ''                                          00770300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00770400
.*-------------------------------------------------------------------   00770500
.***AI.L08 XRDATA "UNCHANGED"                                           00770600
.***      BL1'1XXXXXXX'                                                 00770700
         AIF   ('&XRDATA' NE 'UNCHANGED').ZI25A                         00770800
&ZW                   SETC  '&ZW.1'                                     00770900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00771000
                      AGO   .ZI25C                                      00771100
.*                                                                      00771200
.ZI25A                ANOP  ,                                           00771300
&ZW                   SETC  '&ZW.0'                                     00771400
.ZI25C                ANOP  ,                                           00771500
.*-------------------------------------------------------------------   00771600
.***AI.L08 XRDATA "NORDATA"                                             00771700
.***      BL1'X1XXXXXX'                                                 00771800
         AIF   ('&XRDATA' NE 'NORDATA').ZI26A                           00771900
&ZW                   SETC  '&ZW.1'                                     00772000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00772100
                      AGO   .ZI26C                                      00772200
.*                                                                      00772300
.ZI26A                ANOP  ,                                           00772400
&ZW                   SETC  '&ZW.0'                                     00772500
.ZI26C                ANOP  ,                                           00772600
.*-------------------------------------------------------------------   00772700
.***AI.L08 XRDATA "DELETE"                                              00772800
.***      BL1'XX1XXXXX'                                                 00772900
         AIF   ('&XRDATA' NE 'DELETE').ZI27A                            00773000
&ZW                   SETC  '&ZW.1'                                     00773100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00773200
                      AGO   .ZI27C                                      00773300
.*                                                                      00773400
.ZI27A                ANOP  ,                                           00773500
&ZW                   SETC  '&ZW.0'                                     00773600
.ZI27C                ANOP  ,                                           00773700
.*-------------------------------------------------------------------   00773800
.***AI.L08 XRDATA "WRITE"                                               00773900
.***      BL1'XXX1XXXX'                                                 00774000
         AIF   ('&XRDATA' NE 'WRITE').ZI28A                             00774100
&ZW                   SETC  '&ZW.1'                                     00774200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00774300
                      AGO   .ZI28C                                      00774400
.*                                                                      00774500
.ZI28A                ANOP  ,                                           00774600
&ZW                   SETC  '&ZW.0'                                     00774700
.ZI28C                ANOP  ,                                           00774800
.*-------------------------------------------------------------------   00774900
.***AI.L08 XRDATA "REACQUIRE"                                           00775000
.***      BL1'XXXX1XXX'                                                 00775100
         AIF   ('&XRDATA' NE 'REACQUIRE').ZI29A                         00775200
&ZW                   SETC  '&ZW.1'                                     00775300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00775400
                      AGO   .ZI29C                                      00775500
.*                                                                      00775600
.ZI29A                ANOP  ,                                           00775700
&ZW                   SETC  '&ZW.0'                                     00775800
.ZI29C                ANOP  ,                                           00775900
.*-------------------------------------------------------------------   00776000
.***AI.L08 XRDATA "KEEP"                                                00776100
.***      BL1'XXXXX1XX'                                                 00776200
         AIF   ('&XRDATA' NE 'KEEP').ZI30A                              00776300
&ZW                   SETC  '&ZW.1'                                     00776400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00776500
                      AGO   .ZI30C                                      00776600
.*                                                                      00776700
.ZI30A                ANOP  ,                                           00776800
&ZW                   SETC  '&ZW.0'                                     00776900
.ZI30C                ANOP  ,                                           00777000
.*-------------------------------------------------------------------   00777100
.***AI.L08 XRDATA "YES"                                                 00777200
.***      BL1'XXXXXX1X'                                                 00777300
         AIF   ('&XUPDATERDATA' NE 'YES').ZI31A                         00777400
&ZW                   SETC  '&ZW.1'                                     00777500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00777600
                      AGO   .ZI31C                                      00777700
.*                                                                      00777800
.ZI31A                ANOP  ,                                           00777900
&ZW                   SETC  '&ZW.0'                                     00778000
.ZI31C                ANOP  ,                                           00778100
.*-------------------------------------------------------------------   00778200
.***AI.L08 XRDATA "NO"                                                  00778300
.***      BL1'XXXXXXX1'                                                 00778400
         AIF   ('&XUPDATERDATA' NE 'NO').ZI32A                          00778500
&ZW                   SETC  '&ZW.1'                                     00778600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00778700
                      AGO   .ZI32C                                      00778800
.*                                                                      00778900
.ZI32A                ANOP  ,                                           00779000
&ZW                   SETC  '&ZW.0'                                     00779100
.ZI32C                ANOP  ,                                           00779200
.*-------------------------------------------------------------------   00779300
.***AI.L11 XRDATA BL1                                                   00779400
                      AIF   ('&ZCLNG' NE 'YES').ZI32E  ALL ZERO BITS    00779500
&ZOPN                 SETA  &ZOPN+1                                     00779600
&ZOPL(&ZOPN)          SETC  ' '                                         00779700
&ZOPO(&ZOPN)          SETC  'OI'                                        00779800
&ZOPV(&ZOPN)          SETC  '242(1),B''&ZW'''                           00779900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00780000
.ZI32E                ANOP  ,                                           00780100
.*-------------------------------------------------------------------   00780200
.***AI.L18  XCONID XL1                                                  00780300
         AIF   ('&XCONID' NE 'NO_CONID').ZI33                           00780400
&ZXCONID              SETC  ''             RESET INPUT/OUTPUT           00780500
.ZI33                 ANOP  ,                                           00780600
.*-------------------------------------------------------------------   00780700
.***AI.L25  XCONID XL1                                                  00780800
                      AIF   ('&ZXCONID' EQ '').ZI33E                    00780900
                      AIF   ('&ZXCONID' EQ 'OUTPUT').ZI33E              00781000
&ZCGPR                SETC  '&XCONID'                                   00781100
.*                                                                      00781200
                      AIF   ('&XCONID'(1,1) NE '(').ZI33B               00781300
&ZCGPR   SETC  '0('.'&XCONID'(2,K'&XCONID-2).')'                        00781400
                      AGO   .ZI33D                                      00781500
.ZI33B                ANOP  ,                                           00781600
.*                                                                      00781700
&ZC                   SETC  '&XCONID'(1,1)                              00781800
                      AIF   (T'&ZC NE 'N').ZI33D                        00781900
&ZC                   SETC  '&XCONID'                                   00782000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI33D               00782100
&ZCGPR                SETC  '=AL1(&XCONID)'                             00782200
.*                                                                      00782300
.ZI33D                ANOP  ,                                           00782400
.*                                                                      00782500
&ZOPN                 SETA  &ZOPN+1                                     00782600
&ZOPL(&ZOPN)          SETC  ' '                                         00782700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00782800
&ZOPV(&ZOPN)          SETC  '243(1,1),&ZCGPR'                           00782900
&ZOPD(&ZOPN)          SETC  '++ &ZXCONID XCONID'                        00783000
.*                                                                      00783100
.ZI33E                ANOP  ,                                           00783200
.*-------------------------------------------------------------------   00783300
.***AI.L18  XALLOWUSERSV XL1                                            00783400
         AIF   ('&XALLOWUSERSV' NE '0').ZI35                            00783500
&ZXALLOWUSERSV        SETC  ''             RESET INPUT/OUTPUT           00783600
.ZI35                 ANOP  ,                                           00783700
.*-------------------------------------------------------------------   00783800
.***AI.L25  XALLOWUSERSV XL1                                            00783900
                      AIF   ('&ZXALLOWUSERSV' EQ '').ZI35E              00784000
                      AIF   ('&ZXALLOWUSERSV' EQ 'OUTPUT').ZI35E        00784100
&ZCGPR                SETC  '&XALLOWUSERSV'                             00784200
.*                                                                      00784300
                      AIF   ('&XALLOWUSERSV'(1,1) NE '(').ZI35B         00784400
&ZCGPR   SETC  '0('.'&XALLOWUSERSV'(2,K'&XALLOWUSERSV-2).')'            00784500
                      AGO   .ZI35D                                      00784600
.ZI35B                ANOP  ,                                           00784700
.*                                                                      00784800
&ZC                   SETC  '&XALLOWUSERSV'(1,1)                        00784900
                      AIF   (T'&ZC NE 'N').ZI35D                        00785000
&ZC                   SETC  '&XALLOWUSERSV'                             00785100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               00785200
&ZCGPR                SETC  '=AL1(&XALLOWUSERSV)'                       00785300
.*                                                                      00785400
.ZI35D                ANOP  ,                                           00785500
.*                                                                      00785600
&ZOPN                 SETA  &ZOPN+1                                     00785700
&ZOPL(&ZOPN)          SETC  ' '                                         00785800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00785900
&ZOPV(&ZOPN)          SETC  '248(1,1),&ZCGPR'                           00786000
&ZOPD(&ZOPN)          SETC  '++ &ZXALLOWUSERSV XALLOWUSERSV'            00786100
.*                                                                      00786200
.ZI35E                ANOP  ,                                           00786300
.*-------------------------------------------------------------------   00786400
.***AI.L18  XSYNCFAILDELAY XL1                                          00786500
         AIF   ('&XSYNCFAILDELAY' NE '0').ZI36                          00786600
&ZXSYNCFAILDELAY      SETC  ''             RESET INPUT/OUTPUT           00786700
.ZI36                 ANOP  ,                                           00786800
.*-------------------------------------------------------------------   00786900
.***AI.L25  XSYNCFAILDELAY XL1                                          00787000
                      AIF   ('&ZXSYNCFAILDELAY' EQ '').ZI36E            00787100
                      AIF   ('&ZXSYNCFAILDELAY' EQ 'OUTPUT').ZI36E      00787200
&ZCGPR                SETC  '&XSYNCFAILDELAY'                           00787300
.*                                                                      00787400
                      AIF   ('&XSYNCFAILDELAY'(1,1) NE '(').ZI36B       00787500
&ZCGPR   SETC  '0('.'&XSYNCFAILDELAY'(2,K'&XSYNCFAILDELAY-2).')'        00787600
                      AGO   .ZI36D                                      00787700
.ZI36B                ANOP  ,                                           00787800
.*                                                                      00787900
&ZC                   SETC  '&XSYNCFAILDELAY'(1,1)                      00788000
                      AIF   (T'&ZC NE 'N').ZI36D                        00788100
&ZC                   SETC  '&XSYNCFAILDELAY'                           00788200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI36D               00788300
&ZCGPR                SETC  '=AL1(&XSYNCFAILDELAY)'                     00788400
.*                                                                      00788500
.ZI36D                ANOP  ,                                           00788600
.*                                                                      00788700
&ZOPN                 SETA  &ZOPN+1                                     00788800
&ZOPL(&ZOPN)          SETC  ' '                                         00788900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00789000
&ZOPV(&ZOPN)          SETC  '249(1,1),&ZCGPR'                           00789100
&ZOPD(&ZOPN)          SETC  '++ &ZXSYNCFAILDELAY XSYNCFAILDELAY'        00789200
.*                                                                      00789300
.ZI36E                ANOP  ,                                           00789400
.*-------------------------------------------------------------------   00789500
.***AI.L18  XRNAMELEN F                                                 00789600
         AIF   ('&XRNAMELEN' NE 'NO_RNAMELEN').ZI38                     00789700
&ZXRNAMELEN           SETC  ''             RESET INPUT/OUTPUT           00789800
.ZI38                 ANOP  ,                                           00789900
.*-------------------------------------------------------------------   00790000
.***AI.L25  XRNAMELEN F                                                 00790100
                      AIF   ('&ZXRNAMELEN' EQ '').ZI38E                 00790200
                      AIF   ('&ZXRNAMELEN' EQ 'OUTPUT').ZI38E           00790300
&ZCGPR                SETC  '&XRNAMELEN'                                00790400
.*                                                                      00790500
                      AIF   ('&XRNAMELEN'(1,1) NE '(').ZI38B            00790600
&ZCGPR   SETC  '0('.'&XRNAMELEN'(2,K'&XRNAMELEN-2).')'                  00790700
                      AGO   .ZI38D                                      00790800
.ZI38B                ANOP  ,                                           00790900
.*                                                                      00791000
&ZC                   SETC  '&XRNAMELEN'(1,1)                           00791100
                      AIF   (T'&ZC NE 'N').ZI38D                        00791200
&ZC                   SETC  '&XRNAMELEN'                                00791300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI38D               00791400
&ZCGPR                SETC  '=AL4(&XRNAMELEN)'                          00791500
.*                                                                      00791600
.ZI38D                ANOP  ,                                           00791700
.*                                                                      00791800
&ZOPN                 SETA  &ZOPN+1                                     00791900
&ZOPL(&ZOPN)          SETC  ' '                                         00792000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00792100
&ZOPV(&ZOPN)          SETC  '252(4,1),&ZCGPR'                           00792200
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAMELEN XRNAMELEN'                  00792300
.*                                                                      00792400
.ZI38E                ANOP  ,                                           00792500
.*-------------------------------------------------------------------   00792600
.***AI.LVER01                                                           00792700
                      AIF  (&XPLISTVER LT 3).ZI39Z                      00792800
.*-------------------------------------------------------------------   00792900
.***AI.LVER02                                                           00793000
.ZI39Z                ANOP  ,                                           00793100
.*-------------------------------------------------------------------   00793200
.***AI.LVER01                                                           00793300
                      AIF  (&XPLISTVER LT 3).ZI40Z                      00793400
.*-------------------------------------------------------------------   00793500
.***AI.LVER02                                                           00793600
.ZI40Z                ANOP  ,                                           00793700
.*-------------------------------------------------------------------   00793800
.***AI.LVER01                                                           00793900
                      AIF  (&XPLISTVER LT 3).ZI41Z                      00794000
.*-------------------------------------------------------------------   00794100
.***AI.LVER02                                                           00794200
.ZI41Z                ANOP  ,                                           00794300
.*-------------------------------------------------------------------   00794400
.***AI.LVER01                                                           00794500
                      AIF  (&XPLISTVER LT 3).ZI43Z                      00794600
.*-------------------------------------------------------------------   00794700
.***AI.LVER02                                                           00794800
.ZI43Z                ANOP  ,                                           00794900
.*-------------------------------------------------------------------   00795000
.***AI.L25  XSTATEVAL XL1                                               00795100
                      AIF   ('&ZXSTATEVAL' EQ '').ZI45E                 00795200
                      AIF   ('&ZXSTATEVAL' EQ 'OUTPUT').ZI45E           00795300
&ZCGPR                SETC  '&XSTATEVAL'                                00795400
.*                                                                      00795500
                      AIF   ('&XSTATEVAL'(1,1) NE '(').ZI45B            00795600
&ZCGPR   SETC  '0('.'&XSTATEVAL'(2,K'&XSTATEVAL-2).')'                  00795700
                      AGO   .ZI45D                                      00795800
.ZI45B                ANOP  ,                                           00795900
.*                                                                      00796000
&ZC                   SETC  '&XSTATEVAL'(1,1)                           00796100
                      AIF   (T'&ZC NE 'N').ZI45D                        00796200
&ZC                   SETC  '&XSTATEVAL'                                00796300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI45D               00796400
&ZCGPR                SETC  '=AL1(&XSTATEVAL)'                          00796500
.*                                                                      00796600
.ZI45D                ANOP  ,                                           00796700
.*                                                                      00796800
&ZOPN                 SETA  &ZOPN+1                                     00796900
&ZOPL(&ZOPN)          SETC  ' '                                         00797000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00797100
&ZOPV(&ZOPN)          SETC  '88(1,1),&ZCGPR'                            00797200
&ZOPD(&ZOPN)          SETC  '++ &ZXSTATEVAL XSTATEVAL'                  00797300
.*                                                                      00797400
.ZI45E                ANOP  ,                                           00797500
.*-------------------------------------------------------------------   00797600
.***AI.L25  XMODEVAL XL1                                                00797700
                      AIF   ('&ZXMODEVAL' EQ '').ZI47E                  00797800
                      AIF   ('&ZXMODEVAL' EQ 'OUTPUT').ZI47E            00797900
&ZCGPR                SETC  '&XMODEVAL'                                 00798000
.*                                                                      00798100
                      AIF   ('&XMODEVAL'(1,1) NE '(').ZI47B             00798200
&ZCGPR   SETC  '0('.'&XMODEVAL'(2,K'&XMODEVAL-2).')'                    00798300
                      AGO   .ZI47D                                      00798400
.ZI47B                ANOP  ,                                           00798500
.*                                                                      00798600
&ZC                   SETC  '&XMODEVAL'(1,1)                            00798700
                      AIF   (T'&ZC NE 'N').ZI47D                        00798800
&ZC                   SETC  '&XMODEVAL'                                 00798900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI47D               00799000
&ZCGPR                SETC  '=AL1(&XMODEVAL)'                           00799100
.*                                                                      00799200
.ZI47D                ANOP  ,                                           00799300
.*                                                                      00799400
&ZOPN                 SETA  &ZOPN+1                                     00799500
&ZOPL(&ZOPN)          SETC  ' '                                         00799600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00799700
&ZOPV(&ZOPN)          SETC  '240(1,1),&ZCGPR'                           00799800
&ZOPD(&ZOPN)          SETC  '++ &ZXMODEVAL XMODEVAL'                    00799900
.*                                                                      00800000
.ZI47E                ANOP  ,                                           00800100
.*-------------------------------------------------------------------   00800200
.***AI.L19  XREQBUFFER A                                                00800300
                      AIF   ('&ZXREQBUFFER' EQ '').ZI53H                00800400
&ZCLNG                SETC  '&XREQBUFFER'                               00800500
&ZCGPR                SETC  '14'                                        00800600
         AIF   ('&XREQBUFFER'(1,1) EQ '(').ZI53F  IN GPR                00800700
.*                                                                      00800800
&ZOPN                 SETA  &ZOPN+1                                     00800900
&ZOPL(&ZOPN)          SETC  ' '                                         00801000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00801100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00801200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQBUFFER XREQBUFFER'                00801300
.*                                                                      00801400
                      AGO   .ZI53G                                      00801500
.*                                                                      00801600
.ZI53F                ANOP  ,                                           00801700
&ZCGPR   SETC  '&XREQBUFFER'(2,K'&XREQBUFFER-2)                         00801800
.*                                                                      00801900
.ZI53G                ANOP  ,                                           00802000
.*                                                                      00802100
&ZOPN                 SETA  &ZOPN+1                                     00802200
&ZOPL(&ZOPN)          SETC  ' '                                         00802300
&ZOPO(&ZOPN)          SETC  'ST'                                        00802400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00802500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQBUFFER XREQBUFFER'                00802600
.*                                                                      00802700
.ZI53H                ANOP  ,                                           00802800
.*-------------------------------------------------------------------   00802900
.***AI.L23 ALET XREQBUFFER F                                            00803000
         AIF   ('&ZXREQBUFFER' EQ '').ZI54G                             00803100
         AIF   ('&SYSASCE' EQ 'P').ZI54G   SYSSTATE PRIMARY             00803200
&ZCLNG                SETC  '&XREQBUFFER'                               00803300
         AIF   ('&XREQBUFFER'(1,1) EQ '(').ZI54E  IN AR                 00803400
.*                                                                      00803500
&ZCGPR                SETC  '14'                                        00803600
                      AGO   .ZI54F                                      00803700
.*                                                                      00803800
.ZI54E                ANOP  ,                                           00803900
&ZCGPR   SETC  '&XREQBUFFER'(2,K'&XREQBUFFER-2)                         00804000
.*                                                                      00804100
.ZI54F                ANOP  ,                                           00804200
.*                                                                      00804300
&ZOPN                 SETA  &ZOPN+1                                     00804400
&ZOPL(&ZOPN)          SETC  ' '                                         00804500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00804600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,24(1)'                       00804700
&ZOPD(&ZOPN)          SETC  '++ &ZXREQBUFFER XREQBUFFER'                00804800
.*                                                                      00804900
.ZI54G                ANOP  ,                                           00805000
.*-------------------------------------------------------------------   00805100
.***AI.L25  XREQNUM XL2                                                 00805200
                      AIF   ('&ZXREQNUM' EQ '').ZI55E                   00805300
                      AIF   ('&ZXREQNUM' EQ 'OUTPUT').ZI55E             00805400
&ZCGPR                SETC  '&XREQNUM'                                  00805500
.*                                                                      00805600
                      AIF   ('&XREQNUM'(1,1) NE '(').ZI55B              00805700
&ZCGPR   SETC  '0('.'&XREQNUM'(2,K'&XREQNUM-2).')'                      00805800
                      AGO   .ZI55D                                      00805900
.ZI55B                ANOP  ,                                           00806000
.*                                                                      00806100
&ZC                   SETC  '&XREQNUM'(1,1)                             00806200
                      AIF   (T'&ZC NE 'N').ZI55D                        00806300
&ZC                   SETC  '&XREQNUM'                                  00806400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI55D               00806500
&ZCGPR                SETC  '=AL2(&XREQNUM)'                            00806600
.*                                                                      00806700
.ZI55D                ANOP  ,                                           00806800
.*                                                                      00806900
&ZOPN                 SETA  &ZOPN+1                                     00807000
&ZOPL(&ZOPN)          SETC  ' '                                         00807100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00807200
&ZOPV(&ZOPN)          SETC  '28(2,1),&ZCGPR'                            00807300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQNUM XREQNUM'                      00807400
.*                                                                      00807500
.ZI55E                ANOP  ,                                           00807600
.*-------------------------------------------------------------------   00807700
.***AI.L25  XREQVERSION XL1                                             00807800
                      AIF   ('&ZXREQVERSION' EQ '').ZI57E               00807900
                      AIF   ('&ZXREQVERSION' EQ 'OUTPUT').ZI57E         00808000
&ZCGPR                SETC  '&XREQVERSION'                              00808100
         AIF   ('&XREQVERSION' EQ '0').ZI57E                            00808200
         AIF   ('&XREQVERSION' EQ '0').ZI57E                            00808300
.*                                                                      00808400
                      AIF   ('&XREQVERSION'(1,1) NE '(').ZI57B          00808500
&ZCGPR   SETC  '0('.'&XREQVERSION'(2,K'&XREQVERSION-2).')'              00808600
                      AGO   .ZI57D                                      00808700
.ZI57B                ANOP  ,                                           00808800
.*                                                                      00808900
&ZC                   SETC  '&XREQVERSION'(1,1)                         00809000
                      AIF   (T'&ZC NE 'N').ZI57D                        00809100
&ZC                   SETC  '&XREQVERSION'                              00809200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI57D               00809300
&ZCGPR                SETC  '=AL1(&XREQVERSION)'                        00809400
.*                                                                      00809500
.ZI57D                ANOP  ,                                           00809600
.*                                                                      00809700
&ZOPN                 SETA  &ZOPN+1                                     00809800
&ZOPL(&ZOPN)          SETC  ' '                                         00809900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00810000
&ZOPV(&ZOPN)          SETC  '32(1,1),&ZCGPR'                            00810100
&ZOPD(&ZOPN)          SETC  '++ &ZXREQVERSION XREQVERSION'              00810200
.*                                                                      00810300
.ZI57E                ANOP  ,                                           00810400
.*-------------------------------------------------------------------   00810500
&ZOPN1                SETA &ZOPN                                        00810600
.*******************************************************************    00810700
.***  PROCESS IXLLOCK OUTPUT PARAMETERS                                 00810800
.*******************************************************************    00810900
                      ACTR  10000                                       00811000
.*------------------------------------------------------------------    00811100
.***AO.L01 XUDATAVAL CL64                                               00811200
        AIF   ('&XUDATAVAL' NE 'ALL_ZEROES').ZO13                       00811300
&ZXUDATAVAL           SETC  ''             RESET OUTPUT/INOUT           00811400
.ZO13                 ANOP  ,                                           00811500
.*------------------------------------------------------------------    00811600
.***AO.L02 XUDATAVAL CL64                                               00811700
         AIF   ('&XUDATAVAL' NE 'ALL_ZEROES').ZO13D  CK DEF             00811800
         AIF   ('&ZXUDATAVAL' NE 'OUTPUT').ZO13C  CK DEF                00811900
.ZO13D                ANOP  ,                                           00812000
         AIF   ('&ZXUDATAVAL' EQ 'OUTPUT').ZO13A  OUTPUT                00812100
         AIF   ('&ZXUDATAVAL' NE 'INOUT').ZO13C  INOUT                  00812200
.ZO13A    AIF   ('&XUDATAVAL'(1,1) NE '(').ZO13B  ADDR IN GPR           00812300
&ZCGPR   SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)                           00812400
&ZOPN                 SETA  &ZOPN+1                                     00812500
&ZOPL(&ZOPN)          SETC  ' '                                         00812600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00812700
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),89(1)'                        00812800
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00812900
                      AGO   .ZO13C                                      00813000
.*                                                                      00813100
.ZO13B                ANOP  ,                                           00813200
&ZAWRK   SETA  K'&XUDATAVAL                                             00813300
         AIF   ('&XUDATAVAL'(&ZAWRK,1) NE ')').ZO13G                    00813400
&ZN      SETA  2                                                        00813500
.ZO13H    ANOP                                                          00813600
         AIF   (&ZN GE &ZAWRK).ZO13G                                    00813700
         AIF   ('&XUDATAVAL'(&ZN,1) NE '(').ZO13I                       00813800
&ZC      SETC  '&XUDATAVAL'(1,&ZN).'64'.','                             00813900
&ZC      SETC  '&ZC'.'&XUDATAVAL'(&ZN+1,&ZAWRK-&ZN).',89(1)'            00814000
         AGO   .ZO13J                                                   00814100
.ZO13I    ANOP                                                          00814200
&ZN      SETA  &ZN+1                                                    00814300
         AGO   .ZO13H                                                   00814400
.ZO13G    ANOP                                                          00814500
&ZC      SETC  '&XUDATAVAL.(64),89(1)'                                  00814600
.ZO13J    ANOP                                                          00814700
&ZOPN                 SETA  &ZOPN+1                                     00814800
&ZOPL(&ZOPN)          SETC  ' '                                         00814900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00815000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00815100
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00815200
.ZO13C                ANOP  ,                                           00815300
.*------------------------------------------------------------------    00815400
.***AO.L02 XRDATAVAL CL64                                               00815500
         AIF   ('&ZXRDATAVAL' EQ 'OUTPUT').ZO15A  OUTPUT                00815600
         AIF   ('&ZXRDATAVAL' NE 'INOUT').ZO15C  INOUT                  00815700
.ZO15A    AIF   ('&XRDATAVAL'(1,1) NE '(').ZO15B  ADDR IN GPR           00815800
&ZCGPR   SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                           00815900
&ZOPN                 SETA  &ZOPN+1                                     00816000
&ZOPL(&ZOPN)          SETC  ' '                                         00816100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00816200
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),156(1)'                       00816300
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00816400
                      AGO   .ZO15C                                      00816500
.*                                                                      00816600
.ZO15B                ANOP  ,                                           00816700
&ZAWRK   SETA  K'&XRDATAVAL                                             00816800
         AIF   ('&XRDATAVAL'(&ZAWRK,1) NE ')').ZO15G                    00816900
&ZN      SETA  2                                                        00817000
.ZO15H    ANOP                                                          00817100
         AIF   (&ZN GE &ZAWRK).ZO15G                                    00817200
         AIF   ('&XRDATAVAL'(&ZN,1) NE '(').ZO15I                       00817300
&ZC      SETC  '&XRDATAVAL'(1,&ZN).'64'.','                             00817400
&ZC      SETC  '&ZC'.'&XRDATAVAL'(&ZN+1,&ZAWRK-&ZN).',156(1)'           00817500
         AGO   .ZO15J                                                   00817600
.ZO15I    ANOP                                                          00817700
&ZN      SETA  &ZN+1                                                    00817800
         AGO   .ZO15H                                                   00817900
.ZO15G    ANOP                                                          00818000
&ZC      SETC  '&XRDATAVAL.(64),156(1)'                                 00818100
.ZO15J    ANOP                                                          00818200
&ZOPN                 SETA  &ZOPN+1                                     00818300
&ZOPL(&ZOPN)          SETC  ' '                                         00818400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00818500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00818600
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00818700
.ZO15C                ANOP  ,                                           00818800
.*------------------------------------------------------------------    00818900
.***AO.L02 XENTRYID CL12                                                00819000
         AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZO16A  OUTPUT                 00819100
         AIF   ('&ZXENTRYID' NE 'INOUT').ZO16C  INOUT                   00819200
.ZO16A    AIF   ('&XENTRYID'(1,1) NE '(').ZO16B  ADDR IN GPR            00819300
&ZCGPR   SETC  '&XENTRYID'(2,K'&XENTRYID-2)                             00819400
&ZOPN                 SETA  &ZOPN+1                                     00819500
&ZOPL(&ZOPN)          SETC  ' '                                         00819600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00819700
&ZOPV(&ZOPN)          SETC  '0(12,&ZCGPR),220(1)'                       00819800
&ZOPD(&ZOPN)          SETC  '++ XENTRYID CL12'                          00819900
                      AGO   .ZO16C                                      00820000
.*                                                                      00820100
.ZO16B                ANOP  ,                                           00820200
&ZAWRK   SETA  K'&XENTRYID                                              00820300
         AIF   ('&XENTRYID'(&ZAWRK,1) NE ')').ZO16G                     00820400
&ZN      SETA  2                                                        00820500
.ZO16H    ANOP                                                          00820600
         AIF   (&ZN GE &ZAWRK).ZO16G                                    00820700
         AIF   ('&XENTRYID'(&ZN,1) NE '(').ZO16I                        00820800
&ZC      SETC  '&XENTRYID'(1,&ZN).'12'.','                              00820900
&ZC      SETC  '&ZC'.'&XENTRYID'(&ZN+1,&ZAWRK-&ZN).',220(1)'            00821000
         AGO   .ZO16J                                                   00821100
.ZO16I    ANOP                                                          00821200
&ZN      SETA  &ZN+1                                                    00821300
         AGO   .ZO16H                                                   00821400
.ZO16G    ANOP                                                          00821500
&ZC      SETC  '&XENTRYID.(12),220(1)'                                  00821600
.ZO16J    ANOP                                                          00821700
&ZOPN                 SETA  &ZOPN+1                                     00821800
&ZOPL(&ZOPN)          SETC  ' '                                         00821900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00822000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00822100
&ZOPD(&ZOPN)          SETC  '++ XENTRYID CL12'                          00822200
.ZO16C                ANOP  ,                                           00822300
.*------------------------------------------------------------------    00822400
.***AO.L02 XENTRYCOUNT F                                                00822500
         AIF   ('&ZXENTRYCOUNT' EQ 'OUTPUT').ZO34A  OUTPUT              00822600
         AIF   ('&ZXENTRYCOUNT' NE 'INOUT').ZO34C  INOUT                00822700
.ZO34A    AIF   ('&XENTRYCOUNT'(1,1) NE '(').ZO34B  ADDR IN GPR         00822800
&ZCGPR   SETC  '&XENTRYCOUNT'(2,K'&XENTRYCOUNT-2)                       00822900
&ZOPN                 SETA  &ZOPN+1                                     00823000
&ZOPL(&ZOPN)          SETC  ' '                                         00823100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00823200
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),244(1)'                        00823300
&ZOPD(&ZOPN)          SETC  '++ XENTRYCOUNT F'                          00823400
                      AGO   .ZO34C                                      00823500
.*                                                                      00823600
.ZO34B                ANOP  ,                                           00823700
&ZAWRK   SETA  K'&XENTRYCOUNT                                           00823800
         AIF   ('&XENTRYCOUNT'(&ZAWRK,1) NE ')').ZO34G                  00823900
&ZN      SETA  2                                                        00824000
.ZO34H    ANOP                                                          00824100
         AIF   (&ZN GE &ZAWRK).ZO34G                                    00824200
         AIF   ('&XENTRYCOUNT'(&ZN,1) NE '(').ZO34I                     00824300
&ZC      SETC  '&XENTRYCOUNT'(1,&ZN).'4'.','                            00824400
&ZC      SETC  '&ZC'.'&XENTRYCOUNT'(&ZN+1,&ZAWRK-&ZN).',244(1)'         00824500
         AGO   .ZO34J                                                   00824600
.ZO34I    ANOP                                                          00824700
&ZN      SETA  &ZN+1                                                    00824800
         AGO   .ZO34H                                                   00824900
.ZO34G    ANOP                                                          00825000
&ZC      SETC  '&XENTRYCOUNT.(4),244(1)'                                00825100
.ZO34J    ANOP                                                          00825200
&ZOPN                 SETA  &ZOPN+1                                     00825300
&ZOPL(&ZOPN)          SETC  ' '                                         00825400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00825500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00825600
&ZOPD(&ZOPN)          SETC  '++ XENTRYCOUNT F'                          00825700
.ZO34C                ANOP  ,                                           00825800
.*------------------------------------------------------------------    00825900
.***AO.LVER01                                                           00826000
                      AIF  (&XPLISTVER LT 3).ZO42Z  PLVER               00826100
.*------------------------------------------------------------------    00826200
.***AO.L02 XADUPREQSEQNUM CL16                                          00826300
         AIF   ('&ZXADUPREQSEQNUM' EQ 'OUTPUT').ZO42A  OUTPUT           00826400
         AIF   ('&ZXADUPREQSEQNUM' NE 'INOUT').ZO42C  INOUT             00826500
.ZO42A    AIF   ('&XADUPREQSEQNUM'(1,1) NE '(').ZO42B  ADDR IN GPR      00826600
&ZCGPR   SETC  '&XADUPREQSEQNUM'(2,K'&XADUPREQSEQNUM-2)                 00826700
&ZOPN                 SETA  &ZOPN+1                                     00826800
&ZOPL(&ZOPN)          SETC  ' '                                         00826900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00827000
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),268(1)'                       00827100
&ZOPD(&ZOPN)          SETC  '++ XADUPREQSEQNUM CL16'                    00827200
                      AGO   .ZO42C                                      00827300
.*                                                                      00827400
.ZO42B                ANOP  ,                                           00827500
&ZAWRK   SETA  K'&XADUPREQSEQNUM                                        00827600
         AIF   ('&XADUPREQSEQNUM'(&ZAWRK,1) NE ')').ZO42G               00827700
&ZN      SETA  2                                                        00827800
.ZO42H    ANOP                                                          00827900
         AIF   (&ZN GE &ZAWRK).ZO42G                                    00828000
         AIF   ('&XADUPREQSEQNUM'(&ZN,1) NE '(').ZO42I                  00828100
&ZC      SETC  '&XADUPREQSEQNUM'(1,&ZN).'16'.','                        00828200
&ZC      SETC  '&ZC'.'&XADUPREQSEQNUM'(&ZN+1,&ZAWRK-&ZN).',268(1)'      00828300
         AGO   .ZO42J                                                   00828400
.ZO42I    ANOP                                                          00828500
&ZN      SETA  &ZN+1                                                    00828600
         AGO   .ZO42H                                                   00828700
.ZO42G    ANOP                                                          00828800
&ZC      SETC  '&XADUPREQSEQNUM.(16),268(1)'                            00828900
.ZO42J    ANOP                                                          00829000
&ZOPN                 SETA  &ZOPN+1                                     00829100
&ZOPL(&ZOPN)          SETC  ' '                                         00829200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00829300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00829400
&ZOPD(&ZOPN)          SETC  '++ XADUPREQSEQNUM CL16'                    00829500
.ZO42C                ANOP  ,                                           00829600
.*------------------------------------------------------------------    00829700
.***AO.LVER02                                                           00829800
.ZO42Z                ANOP  ,                                           00829900
.*------------------------------------------------------------------    00830000
.***AO.L02 XSTATEVAL FL1                                                00830100
         AIF   ('&ZXSTATEVAL' EQ 'OUTPUT').ZO45A  OUTPUT                00830200
         AIF   ('&ZXSTATEVAL' NE 'INOUT').ZO45C  INOUT                  00830300
.ZO45A    AIF   ('&XSTATEVAL'(1,1) NE '(').ZO45B  ADDR IN GPR           00830400
&ZCGPR   SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)                           00830500
&ZOPN                 SETA  &ZOPN+1                                     00830600
&ZOPL(&ZOPN)          SETC  ' '                                         00830700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00830800
&ZOPV(&ZOPN)          SETC  '0(1,&ZCGPR),88(1)'                         00830900
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00831000
                      AGO   .ZO45C                                      00831100
.*                                                                      00831200
.ZO45B                ANOP  ,                                           00831300
&ZAWRK   SETA  K'&XSTATEVAL                                             00831400
         AIF   ('&XSTATEVAL'(&ZAWRK,1) NE ')').ZO45G                    00831500
&ZN      SETA  2                                                        00831600
.ZO45H    ANOP                                                          00831700
         AIF   (&ZN GE &ZAWRK).ZO45G                                    00831800
         AIF   ('&XSTATEVAL'(&ZN,1) NE '(').ZO45I                       00831900
&ZC      SETC  '&XSTATEVAL'(1,&ZN).'1'.','                              00832000
&ZC      SETC  '&ZC'.'&XSTATEVAL'(&ZN+1,&ZAWRK-&ZN).',88(1)'            00832100
         AGO   .ZO45J                                                   00832200
.ZO45I    ANOP                                                          00832300
&ZN      SETA  &ZN+1                                                    00832400
         AGO   .ZO45H                                                   00832500
.ZO45G    ANOP                                                          00832600
&ZC      SETC  '&XSTATEVAL.(1),88(1)'                                   00832700
.ZO45J    ANOP                                                          00832800
&ZOPN                 SETA  &ZOPN+1                                     00832900
&ZOPL(&ZOPN)          SETC  ' '                                         00833000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00833100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00833200
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00833300
.ZO45C                ANOP  ,                                           00833400
.*------------------------------------------------------------------    00833500
.***AO.L02 XREQPROC FL2                                                 00833600
         AIF   ('&ZXREQPROC' EQ 'OUTPUT').ZO56A  OUTPUT                 00833700
         AIF   ('&ZXREQPROC' NE 'INOUT').ZO56C  INOUT                   00833800
.ZO56A    AIF   ('&XREQPROC'(1,1) NE '(').ZO56B  ADDR IN GPR            00833900
&ZCGPR   SETC  '&XREQPROC'(2,K'&XREQPROC-2)                             00834000
&ZOPN                 SETA  &ZOPN+1                                     00834100
&ZOPL(&ZOPN)          SETC  ' '                                         00834200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00834300
&ZOPV(&ZOPN)          SETC  '0(2,&ZCGPR),30(1)'                         00834400
&ZOPD(&ZOPN)          SETC  '++ XREQPROC FL2'                           00834500
                      AGO   .ZO56C                                      00834600
.*                                                                      00834700
.ZO56B                ANOP  ,                                           00834800
&ZAWRK   SETA  K'&XREQPROC                                              00834900
         AIF   ('&XREQPROC'(&ZAWRK,1) NE ')').ZO56G                     00835000
&ZN      SETA  2                                                        00835100
.ZO56H    ANOP                                                          00835200
         AIF   (&ZN GE &ZAWRK).ZO56G                                    00835300
         AIF   ('&XREQPROC'(&ZN,1) NE '(').ZO56I                        00835400
&ZC      SETC  '&XREQPROC'(1,&ZN).'2'.','                               00835500
&ZC      SETC  '&ZC'.'&XREQPROC'(&ZN+1,&ZAWRK-&ZN).',30(1)'             00835600
         AGO   .ZO56J                                                   00835700
.ZO56I    ANOP                                                          00835800
&ZN      SETA  &ZN+1                                                    00835900
         AGO   .ZO56H                                                   00836000
.ZO56G    ANOP                                                          00836100
&ZC      SETC  '&XREQPROC.(2),30(1)'                                    00836200
.ZO56J    ANOP                                                          00836300
&ZOPN                 SETA  &ZOPN+1                                     00836400
&ZOPL(&ZOPN)          SETC  ' '                                         00836500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00836600
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00836700
&ZOPD(&ZOPN)          SETC  '++ XREQPROC FL2'                           00836800
.ZO56C                ANOP  ,                                           00836900
.*******************************************************************    00837000
.***AO.X02  RETURN CODE PROCESSING                                      00837100
.*******************************************************************    00837200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00837300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00837400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00837500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00837600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00837700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00837800
&ZOPN                 SETA  &ZOPN+1                                     00837900
&ZOPL(&ZOPN)          SETC  ' '                                         00838000
&ZOPO(&ZOPN)          SETC  'ST'                                        00838100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00838200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00838300
                      AGO   .ZMRETX                                     00838400
.*                                                                      00838500
.ZMRET2               ANOP  ,                                           00838600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00838700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00838800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00838900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00839000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00839100
&ZOPN                 SETA  &ZOPN+1                                     00839200
&ZOPL(&ZOPN)          SETC  ' '                                         00839300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00839400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00839500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00839600
.ZMRETX               ANOP  ,                                           00839700
.*******************************************************************    00839800
.***AO.X03  REASON CODE PROCESSING                                      00839900
.*******************************************************************    00840000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00840100
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00840200
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00840300
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00840400
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00840500
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00840600
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00840700
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00840800
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00840900
&ZOPN                 SETA  &ZOPN+1                                     00841000
&ZOPL(&ZOPN)          SETC  ' '                                         00841100
&ZOPO(&ZOPN)          SETC  'ST'                                        00841200
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00841300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00841400
                      AGO   .ZMRSNX                                     00841500
.*                                                                      00841600
.ZMRSN2               ANOP  ,                                           00841700
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00841800
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00841900
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00842000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00842100
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00842200
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00842300
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00842400
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00842500
&ZOPN                 SETA  &ZOPN+1                                     00842600
&ZOPL(&ZOPN)          SETC  ' '                                         00842700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00842800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00842900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00843000
.ZMRSNX               ANOP  ,                                           00843100
.*******************************************************************    00843200
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00843300
.*******************************************************************    00843400
.ZMFLX                ANOP  ,              MF=L PROCESSING              00843500
.*******************************************************************    00843600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00843700
.*******************************************************************    00843800
                      ACTR  10000                                       00843900
.*                                                                      00844000
                      LCLA  &ZLC           COLUMN POSITION              00844100
                      LCLA  &ZOPX          LIST TABLE INDEX             00844200
                      LCLC  &ZLL           LABEL                        00844300
                      LCLC  &ZLOP          OPERATION                    00844400
                      LCLC  &ZLV           VALUE                        00844500
                      LCLC  &ZLD           DESCRIPTION                  00844600
.*                                                                      00844700
&ZOPX                 SETA  1                                           00844800
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00844900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00845000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00845100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00845200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00845300
                      AIF   (K'&ZLD LE 0).ZL5                           00845400
&ZLC                  SETA  35             COMMENT COLUMN               00845500
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00845600
&ZLC                  SETA  33             COMMMENT COLUMN              00845700
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00845800
&ZLV                  SETC  '&ZLV'.' '                                  00845900
                      AGO   .ZL3                                        00846000
.*                                                                      00846100
.ZL4                  ANOP  ,                                           00846200
&ZLV                  SETC  '&ZLV'.' '                                  00846300
.ZL5                  ANOP  ,                                           00846400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00846500
.*                                                                      00846600
&ZLL     &ZLOP &ZLV                                                     00846700
.*                                                                      00846800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00846900
                      AGO   .ZL2           CONTINUE LOOPING             00847000
.*                                                                      00847100
.ZLX                  ANOP  ,                                           00847200
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00847300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00847400
         AIF   ('&XREQUEST' EQ 'PROCESSMULT').DONERLEN            @P5A  00847500
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').NORLEN1            @P5A  00847600
         LA    14,&XRNAME              ++ GET RNAME ADDRESS       @P5A  00847700
         ST    14,20(,1)                                          @P5A  00847800
         AGO   .DONERLEN                                          @P5A  00847900
.NORLEN1 ANOP                                                     @P5A  00848000
         MVC   20(64,1),&XRNAME        ++ COPY RNAME INLINE       @P5A  00848100
.DONERLEN      ANOP                                               @P5A  00848200
.**------------------------------------------------------------------** 00848300
.**  Fill in the event in the parameter list.  The event will        ** 00848400
.**  be used by the mainline modules (ie. copied to the Rna and      ** 00848500
.**  passed to the global manager).                                  ** 00848600
.**                                                                  ** 00848700
.**------------------------------------------------------------------** 00848800
.*                                                                      00848900
         AIF   ('&XREQUEST' NE 'OBTAIN').ALTEREVENT                     00849000
         MVI   241(1),1                OBTAIN EVENT                     00849100
         AGO   .DONEEVENT                                               00849200
.ALTEREVENT    ANOP                                                     00849300
         AIF   ('&XREQUEST' NE 'ALTER').RELEASEEVENT                    00849400
         MVI   241(1),2                ALTER EVENT                      00849500
         AGO   .DONEEVENT                                               00849600
.RELEASEEVENT  ANOP                                                     00849700
         AIF   ('&XREQUEST' NE 'RELEASE').DONEEVENT              @O2A   00849800
         MVI   241(1),3                RELEASE EVENT                    00849900
.DONEEVENT     ANOP                                                     00850000
.**------------------------------------------------------------------** 00850100
.**  Generate the linkage to the IXLLOCK routines                    ** 00850200
.**                                                                  ** 00850300
.**  The XRAT control block (mapped by IXLYXRAT) contains the        ** 00850400
.**  addresses of all the XES branch entered external services.      ** 00850500
.**                                                                  ** 00850600
.**------------------------------------------------------------------** 00850700
.*                                                                      00850800
.**  Note that in the following instructions the index register is   ** 00850900
.**  used instead of the base register so that ALET translation is   ** 00851000
.**  not performed and the code works the same in both primary and   ** 00851100
.**  AR mode.                                                        ** 00851200
.*                                                                      00851300
         L     15,16(0,0)              GET CVT ADDRESS             @D3C 00851400
         L     15,140(15,0)            GET ECVT ADDRESS            @D3C 00851500
         L     15,256(15,0)            GET XRAT ADDRESS            @D3C 00851600
         AIF   ('&XREQUEST' NE 'OBTAIN').BR5                            00851700
         AIF   ('&XRDATA' EQ 'NORDATA').BR1                             00851800
         L     15,20(15,0)             OBTAIN LOCK RDATA ROUTINE   @D3C 00851900
         AGO   .BR3                                                     00852000
.BR1     ANOP                                                           00852100
         L     15,16(15,0)             OBTAIN LOCK ROUTINE         @D3C 00852200
         AGO   .BR3                                                     00852300
.BR5     ANOP                                                           00852400
         AIF   ('&XREQUEST' NE 'RELEASE').BR6                           00852500
         L     15,32(15,0)             RELEASE LOCK ROUTINE        @D3C 00852600
         AGO   .BR3                                                     00852700
.BR6     ANOP                                                           00852800
         AIF   ('&XREQUEST' NE 'ALTER').BRA                        @O2A 00852900
         AIF   ('&XRDATA' EQ 'UNCHANGED').BR8                           00853000
         L     15,8(15,0)              ALTER LOCK RDATA ROUTINE    @D3C 00853100
         AGO   .BR3                                                     00853200
.BR8     ANOP                                                           00853300
         L     15,12(15,0)             ALTER ROUTINE               @D3C 00853400
         AGO   .BR3                                                @O2A 00853500
.BRA     ANOP                                                      @L2A 00853600
         L     15,40(15,0)             BATCH UNLOCK ROUTINE        @O2A 00853700
         AGO   .BR3                                                @O2A 00853800
.BR3     ANOP                                                           00853900
         AIF   ('&SYSASCE' EQ 'AR').BR4 CHECK FOR AR MODE               00854000
         LAE   1,0(1,0)                MAKE SURE AR1  IS CLEARED        00854100
         LAE   13,0(13,0)              MAKE SURE AR13 IS CLEARED   @O1A 00854200
         SAC   512                     SWITCH TO AR MODE           @L2A 00854300
.BR4     ANOP                                                           00854400
         BALR  14,15                   BRANCH TO ROUTINE           @D3C 00854500
         AIF   ('&SYSASCE' EQ 'AR').BR9 CHECK FOR AR MODE          @L2A 00854600
         SAC   0                       SWITCH BACK TO PRIMARY      @L2A 00854700
.BR9     ANOP                                                      @L2A 00854800
.*******************************************************************    00854900
.**    *******   ******   ****  ****    ****      **     *****  ****    00855000
.**  *  *****  *  *****  *  **  ***  **  ***  ******  **  ****  ****    00855100
.**  **  ***       ****  **  *  ***  *******      **  **  ****  ****    00855200
.**  *  ***  ****   ***  ***    ***  **   **  ******    ************    00855300
.**   ****  *******  **  ****   ****   *****      **  ***  ***  ****    00855400
.*******************************************************************    00855500
.**** DANGER HIGH VOLTAGE CODE BELOW *******************************    00855600
.**** DO NOT TOUCH UNLESS WEARING **********************************    00855700
.**** PROPER SAFETY EQUIPMENT **************************************    00855800
.*******************************************************************    00855900
.*  This code hand generates the code needed at run time to check  *    00856000
.*  the actual MODEVAL to determine if any values need to be       *    00856100
.*  copied back from the parmlist to the callers variables.        *    00856200
.*  See the "GOVERNMENT CHEESE" comment above for more details.    *    00856300
.*******************************************************************    00856400
.*******  Need to generate code if MODEVAL was specified  ******        00856500
.*******  and also a variable input was specified         ******        00856600
         AIF   ('&XMODE' NE 'VALUE').NOVALUE                            00856700
         AIF   ('&ZXSTATEVAL'     EQ ''             AND                *00856800
                 '&ZXUDATAVAL'    EQ ''             AND                *00856900
                 '&ZXRDATAVAL'    EQ '').NOCOPY                         00857000
.*******  Check to see if this request was SYSNCSUSPEND   ******        00857100
&ZOPN                 SETA  &ZOPN+1                                     00857200
&ZOPL(&ZOPN)          SETC  ' '                                         00857300
&ZOPO(&ZOPN)          SETC  'CLI'                                       00857400
&ZOPV(&ZOPN)          SETC  '240(1),2'                                  00857500
&ZOPD(&ZOPN)          SETC  '++ SYNCSUSPEND REQUEST?'                   00857600
&ZOPN                 SETA  &ZOPN+1                                     00857700
&ZOPL(&ZOPN)          SETC  ' '                                         00857800
&ZOPO(&ZOPN)          SETC  'BNE'                                       00857900
&ZOPV(&ZOPN)          SETC  'NOTSS&SYSNDX'                              00858000
&ZOPD(&ZOPN)          SETC  '++ NO'                                     00858100
.*******  Check to see if we need to generate code to copy back ******  00858200
.*******  the UDATAVAL                                          ******  00858300
         AIF   ('&ZXUDATAVAL' EQ '').UDATADONE NOT USED                 00858400
.***                                                                    00858500
         AIF   ('&XUDATAVAL'(1,1) NE '(').UDATABR0  ADDR IN GPR         00858600
&ZCGPR   SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)                           00858700
&ZOPN                 SETA  &ZOPN+1                                     00858800
&ZOPL(&ZOPN)          SETC  ' '                                         00858900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00859000
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),89(1)'                        00859100
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00859200
                      AGO   .UDATADONE                                  00859300
.*                                                                      00859400
.UDATABR0           ANOP  ,                                             00859500
&ZAWRK   SETA  K'&XUDATAVAL                                             00859600
         AIF   ('&XUDATAVAL'(&ZAWRK,1) NE ')').UDATABR1                 00859700
&ZN      SETA  2                                                        00859800
.UDATABR4 ANOP                                                          00859900
         AIF   (&ZN GE &ZAWRK).UDATABR1                                 00860000
         AIF   ('&XUDATAVAL'(&ZN,1) NE '(').UDATABR2                    00860100
&ZC      SETC  '&XUDATAVAL'(1,&ZN).'64'.','                             00860200
&ZC      SETC  '&ZC'.'&XUDATAVAL'(&ZN+1,&ZAWRK-&ZN).',89(1)'            00860300
         AGO   .UDATABR3                                                00860400
.UDATABR2 ANOP                                                          00860500
&ZN      SETA  &ZN+1                                                    00860600
         AGO   .UDATABR4                                                00860700
.UDATABR1 ANOP                                                          00860800
&ZC      SETC  '&XUDATAVAL.(64),89(1)'                                  00860900
.UDATABR3 ANOP                                                          00861000
&ZOPN                 SETA  &ZOPN+1                                     00861100
&ZOPL(&ZOPN)          SETC  ' '                                         00861200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00861300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00861400
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00861500
.UDATADONE ANOP                                                         00861600
.*******  Check to see if we need to generate code to copy back ******  00861700
.*******  the RDATAVAL                                          ******  00861800
         AIF   ('&ZXRDATAVAL' EQ '').RDATADONE NOT USED                 00861900
         AIF   ('&XRDATAVAL'(1,1) NE '(').RDATABR0 ADDR IN GPR          00862000
&ZCGPR   SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                           00862100
&ZOPN                 SETA  &ZOPN+1                                     00862200
&ZOPL(&ZOPN)          SETC  ' '                                         00862300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00862400
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),156(1)'                       00862500
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00862600
                      AGO   .RDATADONE                                  00862700
.*                                                                      00862800
.RDATABR0             ANOP  ,                                           00862900
&ZAWRK   SETA  K'&XRDATAVAL                                             00863000
         AIF   ('&XRDATAVAL'(&ZAWRK,1) NE ')').RDATABR1                 00863100
&ZN      SETA  2                                                        00863200
.RDATABR4 ANOP                                                          00863300
         AIF   (&ZN GE &ZAWRK).RDATABR1                                 00863400
         AIF   ('&XRDATAVAL'(&ZN,1) NE '(').RDATABR2                    00863500
&ZC      SETC  '&XRDATAVAL'(1,&ZN).'64'.','                             00863600
&ZC      SETC  '&ZC'.'&XRDATAVAL'(&ZN+1,&ZAWRK-&ZN).',156(1)'           00863700
         AGO   .RDATABR3                                                00863800
.RDATABR2 ANOP                                                          00863900
&ZN      SETA  &ZN+1                                                    00864000
         AGO   .RDATABR4                                                00864100
.RDATABR1 ANOP                                                          00864200
&ZC      SETC  '&XRDATAVAL.(64),156(1)'                                 00864300
.RDATABR3 ANOP                                                          00864400
&ZOPN                 SETA  &ZOPN+1                                     00864500
&ZOPL(&ZOPN)          SETC  ' '                                         00864600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00864700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00864800
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00864900
.RDATADONE ANOP                                                         00865000
.*******  Check to see if we need to generate code to copy back ******  00865100
.*******  the STATEVAL                                          ******  00865200
         AIF   ('&ZXSTATEVAL' EQ '').STATEDONE NOT USED                 00865300
         AIF   ('&XSTATEVAL'(1,1) NE '(').STATEBR0  ADDR IN GPR         00865400
&ZCGPR   SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)                           00865500
&ZOPN                 SETA  &ZOPN+1                                     00865600
&ZOPL(&ZOPN)          SETC  ' '                                         00865700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00865800
&ZOPV(&ZOPN)          SETC  '0(1,&ZCGPR),88(1)'                         00865900
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00866000
                      AGO   .STATEDONE                                  00866100
.*                                                                      00866200
.STATEBR0             ANOP  ,                                           00866300
&ZAWRK   SETA  K'&XSTATEVAL                                             00866400
         AIF   ('&XSTATEVAL'(&ZAWRK,1) NE ')').STATEBR1                 00866500
&ZN      SETA  2                                                        00866600
.STATEBR2 ANOP                                                          00866700
         AIF   (&ZN GE &ZAWRK).STATEBR1                                 00866800
         AIF   ('&XSTATEVAL'(&ZN,1) NE '(').STATEBR3                    00866900
&ZC      SETC  '&XSTATEVAL'(1,&ZN).'1'.','                              00867000
&ZC      SETC  '&ZC'.'&XSTATEVAL'(&ZN+1,&ZAWRK-&ZN).',88(1)'            00867100
         AGO   .STATEBR4                                                00867200
.STATEBR3 ANOP                                                          00867300
&ZN      SETA  &ZN+1                                                    00867400
         AGO   .STATEBR2                                                00867500
.STATEBR1 ANOP                                                          00867600
&ZC      SETC  '&XSTATEVAL.(1),88(1)'                                   00867700
.STATEBR4 ANOP                                                          00867800
&ZOPN                 SETA  &ZOPN+1                                     00867900
&ZOPL(&ZOPN)          SETC  ' '                                         00868000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00868100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00868200
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00868300
.STATEDONE ANOP                                                         00868400
.**********                                                             00868500
&ZOPN                 SETA  &ZOPN+1                                     00868600
&ZOPL(&ZOPN)          SETC  'NOTSS&SYSNDX'                              00868700
&ZOPO(&ZOPN)          SETC  'DS'                                        00868800
&ZOPV(&ZOPN)          SETC  '0H'                                        00868900
&ZOPD(&ZOPN)          SETC  '++ '                                       00869000
.NOCOPY   ANOP                                                          00869100
.NOVALUE  ANOP                                                          00869200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00869300
.ZLINKX               ANOP  ,                                           00869400
.*******************************************************************    00869500
.***AP.X01  FORMAT GENERATED CODE                                       00869600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00869700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00869800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00869900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00870000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00870100
                      AIF   (K'&ZLD LE 0).ZL51                          00870200
&ZLC                  SETA  35             COMMENT COLUMN               00870300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00870400
&ZLC                  SETA  33             COMMENT COLUMN               00870500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00870600
&ZLV                  SETC  '&ZLV'.' '                                  00870700
                      AGO   .ZL31                                       00870800
.*                                                                      00870900
.ZL41                 ANOP  ,                                           00871000
&ZLV                  SETC  '&ZLV'.' '                                  00871100
.ZL51                 ANOP  ,                                           00871200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00871300
.*                                                                      00871400
&ZLL     &ZLOP &ZLV                                                     00871500
.*                                                                      00871600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00871700
                      AGO   .ZL21          CONTINUE LOOPING             00871800
.*                                                                      00871900
.ZLX1                 ANOP  ,                                           00872000
.*******************************************************************    00872100
.***AP.X02  END OF IXLLOCK MACRO                                        00872200
&ZIXLLOCK             SETC  'YES'          SET IXLLOCK USED             00872300
         POP   PRINT                                                    00872400
*                                            IXLLOCK-4                  00872500
         SPACE 1                                                        00872600
.ZLX2                 ANOP  ,                                           00872700
         MEND                                                           00872800
**********************************************************************/ 00872900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00873000
*%IXLLOCK: MACRO KEYS(CONTOKEN,REQUEST,RNAME,RNAMELEN,HASHVAL,          00873100
*                 LOCKDATA,STATE,STATEVAL,UDATAVAL,RDATA,RDATAVAL,      00873200
*                 ENTRYID,ENTRYCOUNT,ALLOWUSERSV,CONID,UPDATERDATA,     00873300
*                 MODE,SYNCFAILDELAY,MODEVAL,CRITICALREQUEST,           00873400
*                 ADUPREQSEQNUM,REQBUFFER,REQNUM,REQVERSION,REQPROC,    00873500
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00873600
*  ANS('?'!!MACLABEL!!' '!!'IXLLOCKP '!!MACLIST!!                       00873700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00873800
*%END IXLLOCK;                                                          00873900
