*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMABNL                              -01/29/13-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitor environment abnormal event            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1993, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to indicate that an abnormal    * 00002100
*      event has occurred for the work request represented by the     * 00002200
*      input monitoring environment. This condition will supplement   * 00002300
*      any existing abnormal conditions recorded in the input         * 00002400
*      monitoring environment (multiple conditions may exist).        * 00002500
*                                                                     * 00002600
*      Note that abnormal conditions are propagated to the parent     * 00002700
*      monitoring environment via IWMMXFER Function(Return).          * 00002800
*                                                                     * 00002900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003000
*                                                                     * 00003100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003200
*                                                                     * 00003300
*01* ENVIRONMENT:                                                     * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*      Dispatchable unit mode: Task or SRB mode.                      * 00003700
*                                                                     * 00003800
*      Minimum authorization:                                         * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*                        o   Either problem state or supervisor       * 00004200
*                            state.                                   * 00004300
*                                                                     * 00004400
*                        o   PSW key must either be 0 or match the    * 00004500
*                            value supplied on IWM4MCRE for the input * 00004600
*                            monitoring token when MONENVKEYP(PSWKEY) * 00004700
*                            is specified.                            * 00004800
*                                                                     * 00004900
*                        o   MONENVKEYP(VALUE) may only be specified  * 00005000
*                            in supervisor state or with PKM          * 00005100
*                            authority to the key specified by        * 00005200
*                            MONENVKEY.                               * 00005300
*                                                                     * 00005400
*                            Note that the key for IWMMABNL is        * 00005500
*                            located in bit positions 0-3 (using 0    * 00005600
*                            origin), which is the machine            * 00005700
*                            orientation to keeping keys, not the     * 00005800
*                            "natural" way of declaring the key       * 00005900
*                            value.                                   * 00006000
*                                                                     * 00006100
*                        o   MONENVKEYP(UNKNOWN) may only be          * 00006200
*                            specified in supervisor state or with    * 00006300
*                            PKM authority to key 0.                  * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*      AMODE:            31-bit.                                      * 00006800
*                                                                     * 00006900
*      ASC mode:         Primary.  Any P,S,H.                         * 00007000
*                                                                     * 00007100
*      Serialization:    Enabled.  Unlocked, but FRRs are allowed.    * 00007200
*                                                                     * 00007300
*      Restrictions:                                                  * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*                        1.  This macro may not be used prior to the  * 00007700
*                            completion of WLM address space          * 00007800
*                            initialization                           * 00007900
*                                                                     * 00008000
*                        2.  All parameter areas must reside in       * 00008100
*                            current primary.                         * 00008200
*                                                                     * 00008300
*                        3.  If the key specified on IWM4MCRE for the * 00008400
*                            input environment was a user key (8-F),  * 00008500
*                            then either primary OR secondary         * 00008600
*                            addressability must exist to the         * 00008700
*                            performance block.                       * 00008800
*                                                                     * 00008900
*                        4.  The caller must serialize to prevent any * 00009000
*                            delay monitoring services from being     * 00009100
*                            invoked concurrently for the input       * 00009200
*                            monitoring environment.                  * 00009300
*                                                                     * 00009400
*                        5.  Only limited validity checking is done   * 00009500
*                            on the input monitoring token.           * 00009600
*                                                                     * 00009700
*                        6.  Caller is responsible for error          * 00009800
*                            recovery.                                * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00010500
*                      GR2-GR13    Undefined                          * 00010600
*                      GR14-GR15   Reserved                           * 00010700
*                      AR0-AR1     Reserved                           * 00010800
*                      AR2-AR13    Undefined                          * 00010900
*                      AR14-AR15   Reserved                           * 00011000
*                                                                     * 00011100
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00011200
*                                  non-zero                           * 00011300
*                      GR1         Used as a work register by the     * 00011400
*                                  macro                              * 00011500
*                      GR2-GR13    Unchanged                          * 00011600
*                      GR14        Used as a work register by the     * 00011700
*                                  macro                              * 00011800
*                      GR15        Return code                        * 00011900
*                      AR0-AR1     Used as a work register by the     * 00012000
*                                  macro                              * 00012100
*                      AR2-AR13    Unchanged                          * 00012200
*                      AR14-AR15   Used as a work register by the     * 00012300
*                                  macro                              * 00012400
*                                                                     * 00012500
*01* SYNTAX:                                                          * 00012600
*                                                                     * 00012700
*Ýxlabel¨  IWMMABNL     ABNORMAL=xabnormal                            * 00012800
*                      ,MONTKN=xmontkn                                * 00012900
*                    Ð ,MONENVKEYP=VALUE                              * 00013000
*                    !     ,MONENVKEY=xmonenvkey                      * 00013100
*                    Ô ,MONENVKEYP=PSWKEY                             * 00013200
*                    ¿ ,MONENVKEYP=UNKNOWN                            * 00013300
*                    Ð ,MONENV=NOSWITCH                               * 00013400
*                    ¿ ,MONENV=SECONDARY                              * 00013500
*                     Ý,RETCODE=xretcode¨                             * 00013600
*                     Ý,RSNCODE=xrsncode¨                             * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*      Where:                                                         * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*      Ýxlabel¨                                                       * 00014300
*          is an optional symbol, starting in column 1, that is the   * 00014400
*          name on the IWMMABNL macro invocation.  The name must      * 00014500
*          conform to the rules for an ordinary assembler language    * 00014600
*          symbol.                                                    * 00014700
*          DEFAULT: No name.                                          * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*      ABNORMAL=xabnormal                                             * 00015300
*          is the name (RS-type), or address in register (2)-(12), of * 00015400
*          a required 32 bit input which indicates the abnormal mask  * 00015500
*          to use to reflect the abnormality.  Macro IWMYCON contains * 00015600
*          the defined abnormal masks. The mask variable names begin  * 00015700
*          with IWMMABNL, for example - IWMMABNL_SCOPE_LOCALMVS.      * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*      MONTKN=xmontkn                                                 * 00016300
*          is the name (RS-type), or address in register (2)-(12), of * 00016400
*          a required 32 bit input which contains the delay           * 00016500
*          monitoring token for the environment affected by the       * 00016600
*          abnormality.                                               * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*      MONENVKEYP=»VALUE!PSWKEY!UNKNOWNº                              * 00017200
*          is a required keyword input which describes whether a key  * 00017300
*          switch is needed to access the input monitoring            * 00017400
*          environment.                                               * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*          MONENVKEYP=VALUE                                           * 00017800
*                                                                     * 00017900
*              indicates that the key is being passed explicitly via  * 00018000
*              MONENVKEY.                                             * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*              MONENVKEY=xmonenvkey                                   * 00018400
*                  is the name (RS-type), or address in register      * 00018500
*                  (2)-(12), of a required 8 bit input which contains * 00018600
*                  the key in which the input monitoring environment  * 00018700
*                  must be accessed.  Use of this keyword value       * 00018800
*                  requires that the invoker be in supervisor state   * 00018900
*                  or that the caller have PKM authority to the key   * 00019000
*                  specified.  The leftmost, i.e. high order, 4 bits  * 00019100
*                  contain the key value.                             * 00019200
*                                                                     * 00019300
*                  Note that this is different from the "natural" way * 00019400
*                  of declaring the key, and uses the machine         * 00019500
*                  orientation for keeping the storage key in the     * 00019600
*                  high order bits.                                   * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*          MONENVKEYP=PSWKEY                                          * 00020100
*                                                                     * 00020200
*              indicates that the current PSW key should be used.     * 00020300
*              Use of this keyword value requires that the input      * 00020400
*              monitoring environment was established with the same   * 00020500
*              key as the current PSW.                                * 00020600
*                                                                     * 00020700
*          MONENVKEYP=UNKNOWN                                         * 00020800
*                                                                     * 00020900
*              indicates that the key associated with the input       * 00021000
*              monitoring environment is unknown.  Use of this        * 00021100
*              keyword value requires that the invoker be in          * 00021200
*              supervisor state or that the caller have PKM authority * 00021300
*              to key 0.                                              * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*      MONENV=»NOSWITCH!SECONDARYº                                    * 00022100
*          is a required keyword input which describes whether a      * 00022200
*          space switch is needed to access the input monitoring      * 00022300
*          environment.                                               * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*          MONENV=NOSWITCH                                            * 00022700
*                                                                     * 00022800
*              indicates that NO space switch is needed to access the * 00022900
*              input monitoring environment.  This would be           * 00023000
*              appropriate if the input monitoring environment was    * 00023100
*              established (by IWM4MCRE) to be used by routines in a  * 00023200
*              specific system key or if it was established to be     * 00023300
*              used in a specific user key in the current primary.    * 00023400
*                                                                     * 00023500
*          MONENV=SECONDARY                                           * 00023600
*                                                                     * 00023700
*              indicates that the input monitoring environment was    * 00023800
*              established in current secondary (for use by a         * 00023900
*              specific user key).                                    * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*      ÝRETCODE=xretcode¨                                             * 00024700
*          is the name (RS-type) of an optional fullword output       * 00024800
*          variable, or register (2)-(12) or (15), into which the     * 00024900
*          return code is to be copied from GPR 15.  If you specify   * 00025000
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00025100
*          the value will be left in GPR 15.                          * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*      ÝRSNCODE=xrsncode¨                                             * 00025700
*          is the name (RS-type) of an optional fullword output       * 00025800
*          variable into which the reason code is to be copied from   * 00025900
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00026000
*          R0 (within or without parentheses), the value will be left * 00026100
*          in GPR 0.                                                  * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*01* RETURN CODES:                                                    * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*            0    IwmRetCodeOk:  Successful completion.               * 00026900
*                                                                     * 00027000
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00027100
*                 conditions noted.                                   * 00027200
*                                                                     * 00027300
*                 HEX REASON  MEANING                                 * 00027400
*                 CODE                                                * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                 xxxx0402    IwmRsncodeNoMonEnv:  Input monitoring   * 00027800
*                             token indicates no monitoring           * 00027900
*                             environment was established.            * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00028500
*                 environment or parameters                           * 00028600
*                                                                     * 00028700
*                 HEX REASON  MEANING                                 * 00028800
*                 CODE                                                * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                 xxxx0820    IwmRsnCodeBadMonEnv:  Monitoring        * 00029200
*                             environment does not pass verification. * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*01* REASON CODES:                                                    * 00030000
*                                                                     * 00030100
*       A unique reason code will be returned whenever the return     * 00030200
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00030300
*       under their corresponding return code.  Reason code and       * 00030400
*       return code constants are defined within IWMYCON.  Note that  * 00030500
*       the high order halfword of register 0, and the reason code    * 00030600
*       variable when specified, may be non-zero and represents       * 00030700
*       diagnostic data which is NOT part of the external interface.  * 00030800
*       The high order halfword should thus be excluded from          * 00030900
*       comparison with the reason code values described above.  The  * 00031000
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00031100
*       used for this purpose.                                        * 00031200
*                                                                     * 00031300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00031400
*                                                                     * 00031500
*02*   PROCESSOR:  ASSEM                                              * 00031600
*                                                                     * 00031700
*01* COMPONENT:  SCWLM                                                * 00031800
*                                                                     * 00031900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00032000
*                                                                     * 00032100
*01* MACRO USAGE NOTES:                                               * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00032500
*        global macro variable.  Any value other than 'NO' will       * 00032600
*        result in the macro expansion being printed.  The default is * 00032700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00032800
*        variable should be set.                                      * 00032900
*                                                                     * 00033000
*                    GBLC &ZPRINT                                     * 00033100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00033200
*                                                                     * 00033300
*    2.  This  macro  may  only  be  used  on  MVS/ESA  (version 3 or * 00033400
*        higher), NOT versions 1 or 2 of MVS.                         * 00033500
*                                                                     * 00033600
*    3.  The macro IWMYCON must be included to use this macro.        * 00033700
*                                                                     * 00033800
*    4.  The  macro IWMPB must be in the library concatenation, since * 00033900
*        it is included by IWMYCON.                                   * 00034000
*                                                                     * 00034100
*    5.  Note  that  the  high  order halfword of register 0, and the * 00034200
*        reason  code  variable  when  specified, may be non-zero and * 00034300
*        represents diagnostic data which is NOT part of the external * 00034400
*        interface.   The high order halfword should thus be excluded * 00034500
*        from comparison with the reason code values described above. * 00034600
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00034700
*        be used for this purpose.                                    * 00034800
*                                                                     * 00034900
*    6.  The  PL/AS version of the macro needs the EPILOG macro to be * 00035000
*        included.                                                    * 00035100
*                                                                     * 00035200
*    7.  Registers  0,  1,  14,  and  15 are not preserved across the * 00035300
*        expansion.   In the PL/AS form, Register 2 is also destroyed * 00035400
*        when MONENV(SECONDARY) is specified.                         * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*01* CHANGE ACTIVITY:                                                 * 00035900
*                                                                     * 00036000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00036100
*                                                                     * 00036200
*    $L0=WLMI     HBB5510 930430 PD16:  Workload Manager I            * 00036300
*    $P1=ME01176  HBB7720 040924 3241DW:  Doc changes only.  Service  * 00036400
*                                         names changed to reflect    * 00036500
*                                         the 64bit name.             * 00036600
*    $L1=LPBABV   HBB7790 111020 3241AH:  IWM4MABN created. Please do * 00036700
*                                         not change this macro any   * 00036800
*                                         longer.                     * 00036900
****** END OF SPECIFICATIONS *****************************************/ 00037000
*/********************************************************************* 00037100
         MACRO                                                          00037200
&XLABEL  IWMMABNL &ABNORMAL=,&MONTKN=,&MONENVKEYP=,&MONENVKEY=,        *00037300
               &MONENV=,&RETCODE=,&RSNCODE=                             00037400
.*                                                                      00037500
*                MACDATE -01/29/13-<0>                                  00037600
.*                                                                      00037700
.*******************************************************************    00037800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00037900
.*******************************************************************    00038000
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00038100
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00038200
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00038300
.*                                                                      00038400
                GBLC  &ZIWMMABNL  YES=MACRO USED AT LEAST ONCE          00038500
.*******************************************************************    00038600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00038700
.*******************************************************************    00038800
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00038900
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00039000
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00039100
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00039200
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00039300
                LCLA  &ZAWRK      USED AS A WORK AREA                   00039400
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00039500
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00039600
                LCLC  &ZC         CHARACTER WORK VARIABLE               00039700
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00039800
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00039900
                LCLC  &ZMAC_G     "G" or null                           00040000
&ZMAC_G         SETC  ''                                                00040100
                LCLC  &ZMAC_LR                                          00040200
&ZMAC_LR        SETC  'LR'                                              00040300
                LCLC  &ZMAC_L                                           00040400
&ZMAC_L         SETC  'L'                                               00040500
                LCLC  &ZMAC_ST                                          00040600
&ZMAC_ST        SETC  'ST'                                              00040700
                LCLC  &ZMAC_LLGT                                        00040800
&ZMAC_LLGT      SETC  'L'                                               00040900
                LCLC  &ZMAC_LGR                                         00041000
&ZMAC_LGR       SETC  'LR'                                              00041100
                LCLC  &ZMAC_LG                                          00041200
&ZMAC_LG        SETC  'L'                                               00041300
                LCLC  &ZMAC_STG                                         00041400
&ZMAC_STG       SETC  'ST'                                              00041500
                LCLA  &ZMACRET    MACRO RETURN CODE                     00041600
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00041700
.*                                                                      00041800
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00041900
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00042000
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00042100
                LCLC  &ZENDBASEPL               End of base PL          00042200
.*******************************************************************    00042300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00042400
.*******************************************************************    00042500
                LCLC  &XABNORMAL  ++ NAME                               00042600
                LCLC  &XMONTKN    ++ NAME                               00042700
                LCLC  &XMONENVKEYP              ++ VALUE                00042800
                LCLC  &XMONENVKEY               ++ NAME                 00042900
                LCLC  &XMONENV    ++ VALUE                              00043000
                LCLC  &XRETCODE   ++ NAME                               00043100
                LCLC  &XRSNCODE   ++ NAME                               00043200
.*******************************************************************    00043300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00043400
.*******************************************************************    00043500
                LCLC  &ZXABNORMAL               ++ INPUT NAME           00043600
                LCLC  &ZXMONTKN   ++ INPUT NAME                         00043700
                LCLC  &ZXMONENVKEYP             ++ INPUT VALUE          00043800
                LCLC  &ZXMONENVKEY              ++ INPUT NAME           00043900
                LCLC  &ZXMONENV   ++ INPUT VALUE                        00044000
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00044100
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00044200
.********************************************************************   00044300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00044400
.********************************************************************   00044500
                ACTR  10000                                             00044600
.*----------------------------------------------------------------***   00044700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00044800
                AIF   (N'&ABNORMAL LE 1).ZG2A   CK NUM                  00044900
&ZMS            SETC  '"ABNORMAL='                                      00045000
&ZMS            SETC  '&ZMS.&ABNORMAL"'                                 00045100
&ZMS            SETC  '&ZMS "ABNORMAL"'                                 00045200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00045300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00045400
.ZG2A           ANOP  ,                                                 00045500
.*-------------------------------------------------------------------   00045600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00045700
&ZXABNORMAL     SETC  'INPUT'     SET IN/OUTPUT                         00045800
&XABNORMAL      SETC  '&ABNORMAL(1)'            SET XVARIABLE           00045900
                AIF   (N'&ABNORMAL GT 1).ZG2B   MULTI PARMS             00046000
&XABNORMAL      SETC  '&ABNORMAL'               SET XVARIABLE           00046100
.ZG2B           AIF   (K'&ABNORMAL(1) GT 0).ZG2C                        00046200
&ZXABNORMAL     SETC  ''          RESET IN/OUTPUT                       00046300
&ZMS            SETC  ' '                                               00046400
&ZMS            SETC  '&ZMS "ABNORMAL" KEY AND ITS'                     00046500
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00046600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00046700
.ZG2C           ANOP  ,                                                 00046800
.*-------------------------------------------------------------------   00046900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00047000
                AIF   (K'&ZXABNORMAL LE 0).ZG2R  NOT I/O                00047100
                AIF   ('&XABNORMAL'(1,1) NE '(').ZG2R                   00047200
&ZCGPR          SETC  '&XABNORMAL'(2,K'&XABNORMAL-2)                    00047300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00047400
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00047500
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00047600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00047700
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00047800
.ZG2P           ANOP  ,                                                 00047900
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00048000
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00048100
                AIF   ('&ZCGPR' LE '12').ZG2R                           00048200
.ZG2Q           ANOP  ,                                                 00048300
&ZMS            SETC  '"ABNORMAL='                                      00048400
&ZMS            SETC  '&ZMS.&ABNORMAL"'                                 00048500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00048600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00048700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00048800
.ZG2R           ANOP  ,                                                 00048900
.*----------------------------------------------------------------***   00049000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00049100
                AIF   (N'&MONTKN LE 1).ZG5A     CK NUM                  00049200
&ZMS            SETC  '"MONTKN='                                        00049300
&ZMS            SETC  '&ZMS.&MONTKN"'                                   00049400
&ZMS            SETC  '&ZMS "MONTKN"'                                   00049500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00049600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00049700
.ZG5A           ANOP  ,                                                 00049800
.*-------------------------------------------------------------------   00049900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00050000
&ZXMONTKN       SETC  'INPUT'     SET IN/OUTPUT                         00050100
&XMONTKN        SETC  '&MONTKN(1)'              SET XVARIABLE           00050200
                AIF   (N'&MONTKN GT 1).ZG5B     MULTI PARMS             00050300
&XMONTKN        SETC  '&MONTKN'   SET XVARIABLE                         00050400
.ZG5B           AIF   (K'&MONTKN(1) GT 0).ZG5C                          00050500
&ZXMONTKN       SETC  ''          RESET IN/OUTPUT                       00050600
&ZMS            SETC  ' '                                               00050700
&ZMS            SETC  '&ZMS "MONTKN" KEY AND ITS'                       00050800
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00050900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00051000
.ZG5C           ANOP  ,                                                 00051100
.*-------------------------------------------------------------------   00051200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00051300
                AIF   (K'&ZXMONTKN LE 0).ZG5R   NOT I/O                 00051400
                AIF   ('&XMONTKN'(1,1) NE '(').ZG5R                     00051500
&ZCGPR          SETC  '&XMONTKN'(2,K'&XMONTKN-2)                        00051600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00051700
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00051800
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00051900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00052000
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00052100
.ZG5P           ANOP  ,                                                 00052200
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00052300
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00052400
                AIF   ('&ZCGPR' LE '12').ZG5R                           00052500
.ZG5Q           ANOP  ,                                                 00052600
&ZMS            SETC  '"MONTKN='                                        00052700
&ZMS            SETC  '&ZMS.&MONTKN"'                                   00052800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00052900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00053000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00053100
.ZG5R           ANOP  ,                                                 00053200
.*------------------------------------------------------------------    00053300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053400
&XMONENVKEYP    SETC  ''          INITIALIZE XVARIABLE                  00053500
.*-------------------------------------------------------------------   00053600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053700
.ZG9            ANOP  ,                                                 00053800
                AIF   (K'&MONENVKEYP(1) LE 0).ZG9A                      00053900
&ZTLC           SETC 'VALUE'                                            00054000
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG13                00054100
&XMONENVKEYP    SETC  'VALUE'     SET KEYWORD                           00054200
                AIF   (N'&MONENVKEYP LE 1).ZG9A  CK NUM                 00054300
&ZMS            SETC  '"MONENVKEYP='                                    00054400
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00054500
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00054600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00054700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00054800
.ZG9A           ANOP  ,                                                 00054900
.*----------------------------------------------------------------***   00055000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00055100
                AIF   (N'&MONENVKEY LE 1).ZG11A  CK NUM                 00055200
&ZMS            SETC  '"MONENVKEY='                                     00055300
&ZMS            SETC  '&ZMS.&MONENVKEY"'                                00055400
&ZMS            SETC  '&ZMS "MONENVKEY"'                                00055500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00055600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00055700
.ZG11A          ANOP  ,                                                 00055800
.*-------------------------------------------------------------------   00055900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00056000
&ZXMONENVKEY    SETC  'INPUT'     SET IN/OUTPUT                         00056100
&XMONENVKEY     SETC  '&MONENVKEY(1)'           SET XVARIABLE           00056200
                AIF   (N'&MONENVKEY GT 1).ZG11B  MULTI PARMS            00056300
&XMONENVKEY     SETC  '&MONENVKEY'              SET XVARIABLE           00056400
.ZG11B          AIF   (K'&MONENVKEY(1) GT 0).ZG11C                      00056500
&ZXMONENVKEY    SETC  ''          RESET IN/OUTPUT                       00056600
&ZMS            SETC  ' '                                               00056700
&ZMS            SETC  '&ZMS "MONENVKEY" KEY AND ITS'                    00056800
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00056900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00057000
.ZG11C          ANOP  ,                                                 00057100
.*-------------------------------------------------------------------   00057200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00057300
                AIF   (K'&ZXMONENVKEY LE 0).ZG11R  NOT I/O              00057400
                AIF   ('&XMONENVKEY'(1,1) NE '(').ZG11R                 00057500
&ZCGPR          SETC  '&XMONENVKEY'(2,K'&XMONENVKEY-2)                  00057600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00057700
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00057800
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00057900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00058000
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00058100
.ZG11P          ANOP  ,                                                 00058200
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00058300
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00058400
                AIF   ('&ZCGPR' LE '12').ZG11R                          00058500
.ZG11Q          ANOP  ,                                                 00058600
&ZMS            SETC  '"MONENVKEY='                                     00058700
&ZMS            SETC  '&ZMS.&MONENVKEY"'                                00058800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00058900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00059000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00059100
.ZG11R          ANOP  ,                                                 00059200
.*-------------------------------------------------------------------   00059300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00059400
.ZG13           ANOP  ,                                                 00059500
&ZTLC           SETC 'PSWKEY'                                           00059600
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG14                00059700
&XMONENVKEYP    SETC  'PSWKEY'    SET KEYWORD                           00059800
                AIF   (N'&MONENVKEYP LE 1).ZG13A  CK NUM                00059900
&ZMS            SETC  '"MONENVKEYP='                                    00060000
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00060100
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00060200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00060300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00060400
.ZG13A          ANOP  ,                                                 00060500
.*------------------------------------------------------------------    00060600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00060700
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00060800
.ZG13A0         AIF   (K'&MONENVKEY LE 0).ZG13A1  OK                    00060900
&ZCVAL          SETC '&ZCVAL MONENVKEY'         INCORRECT KEY USED      00061000
.ZG13A1         AIF   (K'&ZCVAL LE 0).ZG13A2    OK                      00061100
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00061200
&ZMS            SETC  '"MONENVKEYP'                                     00061300
&ZMS            SETC  '&ZMS.=&MONENVKEYP"'                              00061400
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00061500
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00061600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061700
.ZG13A2         ANOP  ,                                                 00061800
.*-------------------------------------------------------------------   00061900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062000
.ZG14           ANOP  ,                                                 00062100
&ZTLC           SETC 'UNKNOWN'                                          00062200
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG15                00062300
&XMONENVKEYP    SETC  'UNKNOWN'   SET KEYWORD                           00062400
                AIF   (N'&MONENVKEYP LE 1).ZG14A  CK NUM                00062500
&ZMS            SETC  '"MONENVKEYP='                                    00062600
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00062700
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00062800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00062900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00063000
.ZG14A          ANOP  ,                                                 00063100
.*------------------------------------------------------------------    00063200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063300
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00063400
.ZG14A0         AIF   (K'&MONENVKEY LE 0).ZG14A1  OK                    00063500
&ZCVAL          SETC '&ZCVAL MONENVKEY'         INCORRECT KEY USED      00063600
.ZG14A1         AIF   (K'&ZCVAL LE 0).ZG14A2    OK                      00063700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00063800
&ZMS            SETC  '"MONENVKEYP'                                     00063900
&ZMS            SETC  '&ZMS.=&MONENVKEYP"'                              00064000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00064100
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00064200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064300
.ZG14A2         ANOP  ,                                                 00064400
.*------------------------------------------------------------------    00064500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00064600
.ZG15           ANOP  ,                                                 00064700
&ZXMONENVKEYP   SETC  'INPUT'     SET IN/OUTPUT                         00064800
                AIF   (K'&XMONENVKEYP GT 0).ZG15E  VALID ARG            00064900
                AIF   (T'&MONENVKEYP EQ 'O').ZG15D  OMITTED             00065000
&ZASYSLNDX      SETA  0                                                 00065100
.ZG15A          ANOP  ,           POSITIONAL MACRO KEY                  00065200
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00065300
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG15C                  00065400
&ZTLC           SETC 'MONENVKEYP'                                       00065500
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG15A         00065600
.ZG15B          ANOP  ,                                                 00065700
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00065800
&ZMS            SETC  'THE "MONENVKEYP" KEY'                            00065900
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00066000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00066100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066200
                AGO   .ZG15E                                            00066300
.ZG15C          ANOP  ,                                                 00066400
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00066500
&ZMS            SETC  '"MONENVKEYP='                                    00066600
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00066700
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00066800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00066900
&ZMS            SETC  '&ZMS "VALUE",'                                   00067000
&ZMS            SETC  '&ZMS "PSWKEY",'                                  00067100
&ZMS            SETC  '&ZMS OR "UNKNOWN".'                              00067200
                MNOTE 8,' &ZMS '                                        00067300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00067400
                AGO   .ZG15E                                            00067500
.ZG15D          ANOP  ,                                                 00067600
&XMONENVKEYP    SETC  'VALUE'     SET DEFAULT KEYWORD                   00067700
.ZG15E          ANOP  ,                                                 00067800
.*------------------------------------------------------------------    00067900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068000
                AIF   (K'&MONENVKEYP(1) GT 0).ZG15F  PARM               00068100
&XMONENVKEYP    SETC  ''          ENSURE NULL KEYWORD                   00068200
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00068300
&ZMS            SETC  'THE'                                             00068400
&ZMS            SETC  '&ZMS "MONENVKEYP" KEY AND ITS'                   00068500
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00068600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00068700
&ZMS            SETC  '&ZMS "VALUE",'                                   00068800
&ZMS            SETC  '&ZMS "PSWKEY",'                                  00068900
&ZMS            SETC  '&ZMS OR "UNKNOWN".'                              00069000
                MNOTE 8,' &ZMS '                                        00069100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069200
.ZG15F          ANOP  ,                                                 00069300
.*------------------------------------------------------------------    00069400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069500
&XMONENV        SETC  ''          INITIALIZE XVARIABLE                  00069600
.*-------------------------------------------------------------------   00069700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069800
.ZG18           ANOP  ,                                                 00069900
                AIF   (K'&MONENV(1) LE 0).ZG18A                         00070000
&ZTLC           SETC 'NOSWITCH'                                         00070100
                AIF   ('&MONENV(1)' NE '&ZTLC').ZG19                    00070200
&XMONENV        SETC  'NOSWITCH'  SET KEYWORD                           00070300
                AIF   (N'&MONENV LE 1).ZG18A    CK NUM                  00070400
&ZMS            SETC  '"MONENV='                                        00070500
&ZMS            SETC  '&ZMS.&MONENV"'                                   00070600
&ZMS            SETC  '&ZMS "MONENV"'                                   00070700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00070800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00070900
.ZG18A          ANOP  ,                                                 00071000
.*-------------------------------------------------------------------   00071100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071200
.ZG19           ANOP  ,                                                 00071300
&ZTLC           SETC 'SECONDARY'                                        00071400
                AIF   ('&MONENV(1)' NE '&ZTLC').ZG20                    00071500
&XMONENV        SETC  'SECONDARY'               SET KEYWORD             00071600
                AIF   (N'&MONENV LE 1).ZG19A    CK NUM                  00071700
&ZMS            SETC  '"MONENV='                                        00071800
&ZMS            SETC  '&ZMS.&MONENV"'                                   00071900
&ZMS            SETC  '&ZMS "MONENV"'                                   00072000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00072100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072200
.ZG19A          ANOP  ,                                                 00072300
.*------------------------------------------------------------------    00072400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00072500
.ZG20           ANOP  ,                                                 00072600
&ZXMONENV       SETC  'INPUT'     SET IN/OUTPUT                         00072700
                AIF   (K'&XMONENV GT 0).ZG20E   VALID ARG               00072800
                AIF   (T'&MONENV EQ 'O').ZG20D  OMITTED                 00072900
&ZASYSLNDX      SETA  0                                                 00073000
.ZG20A          ANOP  ,           POSITIONAL MACRO KEY                  00073100
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00073200
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20C                  00073300
&ZTLC           SETC 'MONENV'                                           00073400
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG20A         00073500
.ZG20B          ANOP  ,                                                 00073600
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00073700
&ZMS            SETC  'THE "MONENV" KEY'                                00073800
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00073900
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00074000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074100
                AGO   .ZG20E                                            00074200
.ZG20C          ANOP  ,                                                 00074300
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00074400
&ZMS            SETC  '"MONENV='                                        00074500
&ZMS            SETC  '&ZMS.&MONENV"'                                   00074600
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00074700
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00074800
&ZMS            SETC  '&ZMS "NOSWITCH"'                                 00074900
&ZMS            SETC  '&ZMS OR "SECONDARY".'                            00075000
                MNOTE 8,' &ZMS '                                        00075100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075200
                AGO   .ZG20E                                            00075300
.ZG20D          ANOP  ,                                                 00075400
&XMONENV        SETC  'NOSWITCH'  SET DEFAULT KEYWORD                   00075500
.ZG20E          ANOP  ,                                                 00075600
.*------------------------------------------------------------------    00075700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075800
                AIF   (K'&MONENV(1) GT 0).ZG20F  PARM                   00075900
&XMONENV        SETC  ''          ENSURE NULL KEYWORD                   00076000
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00076100
&ZMS            SETC  'THE'                                             00076200
&ZMS            SETC  '&ZMS "MONENV" KEY AND ITS'                       00076300
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00076400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00076500
&ZMS            SETC  '&ZMS "NOSWITCH"'                                 00076600
&ZMS            SETC  '&ZMS OR "SECONDARY".'                            00076700
                MNOTE 8,' &ZMS '                                        00076800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076900
.ZG20F          ANOP  ,                                                 00077000
.*----------------------------------------------------------------***   00077100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00077200
                AIF   (N'&RETCODE LE 1).ZG22A   CK NUM                  00077300
&ZMS            SETC  '"RETCODE='                                       00077400
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00077500
&ZMS            SETC  '&ZMS "RETCODE"'                                  00077600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00077700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077800
.ZG22A          ANOP  ,                                                 00077900
.*-------------------------------------------------------------------   00078000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00078100
                AIF   (K'&RETCODE(1) LE 0).ZG22C  NO PARM               00078200
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00078300
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00078400
                AIF   (N'&RETCODE GT 1).ZG22C                           00078500
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00078600
.ZG22C          ANOP  ,                                                 00078700
.*-------------------------------------------------------------------   00078800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00078900
                AIF   (K'&ZXRETCODE LE 0).ZG22R  NOT I/O                00079000
                AIF   ('&XRETCODE'(1,1) NE '(').ZG22R                   00079100
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00079200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                      00079300
                AIF   (K'&ZCGPR GT 2).ZG22Q                             00079400
                AIF   ('&ZCGPR' EQ '0').ZG22Q                           00079500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00079600
                AIF   (T'&ZCGPR NE 'N').ZG22Q   INVALID REG NAME        00079700
.ZG22P          ANOP  ,                                                 00079800
                AIF   (T'&ZCGPR NE 'N').ZG22R   NON NUMERIC             00079900
                AIF   ('&ZCGPR' EQ '15').ZG22R                          00080000
                AIF   ('&ZCGPR' LT '2').ZG22Q                           00080100
                AIF   ('&ZCGPR' LE '12').ZG22R                          00080200
.ZG22Q          ANOP  ,                                                 00080300
&ZMS            SETC  '"RETCODE='                                       00080400
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00080500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00080600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00080700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080800
.ZG22R          ANOP  ,                                                 00080900
.*----------------------------------------------------------------***   00081000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00081100
                AIF   (N'&RSNCODE LE 1).ZG25A   CK NUM                  00081200
&ZMS            SETC  '"RSNCODE='                                       00081300
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00081400
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00081500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00081600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081700
.ZG25A          ANOP  ,                                                 00081800
.*-------------------------------------------------------------------   00081900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00082000
                AIF   (K'&RSNCODE(1) LE 0).ZG25C  NO PARM               00082100
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00082200
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00082300
                AIF   (N'&RSNCODE GT 1).ZG25C                           00082400
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00082500
.ZG25C          ANOP  ,                                                 00082600
.*-------------------------------------------------------------------   00082700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00082800
                AIF   (K'&ZXRSNCODE LE 0).ZG25R  NOT I/O                00082900
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG25R                   00083000
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00083100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                      00083200
                AIF   (K'&ZCGPR GT 2).ZG25Q                             00083300
                AIF   ('&ZCGPR' EQ '0').ZG25R                           00083400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00083500
                AIF   (T'&ZCGPR NE 'N').ZG25Q   INVALID REG NAME        00083600
.ZG25P          ANOP  ,                                                 00083700
                AIF   (T'&ZCGPR NE 'N').ZG25R   NON NUMERIC             00083800
                AIF   ('&ZCGPR' EQ '0').ZG25R                           00083900
                AIF   ('&ZCGPR' LT '2').ZG25Q                           00084000
                AIF   ('&ZCGPR' LE '12').ZG25R                          00084100
.ZG25Q          ANOP  ,                                                 00084200
&ZMS            SETC  '"RSNCODE='                                       00084300
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00084400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00084500
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00084600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084700
.ZG25R          ANOP  ,                                                 00084800
.******************************************************************     00084900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00085000
.******************************************************************     00085100
                ACTR  10000                                             00085200
.*----------------------------------------------------------------***   00085300
.***AH.P02 EXTRA POSITIONALS                                            00085400
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00085500
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00085600
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00085700
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00085800
.ZGLISTX1       ANOP  ,                                                 00085900
&ZCVAL          SETC  ''          ERROR FIELD                           00086000
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00086100
.ZGLIST2        ANOP  ,                                                 00086200
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00086300
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00086400
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00086500
                AGO   .ZGLIST2                                          00086600
.*                                                                      00086700
.ZGLIST3        ANOP  ,                                                 00086800
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00086900
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00087000
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00087100
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00087200
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00087300
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00087400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087500
.ZGLISTX        ANOP  ,                                                 00087600
&ZASYSLNDX      SETA  0                                                 00087700
.*******************************************************************    00087800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00087900
.*******************************************************************    00088000
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00088100
.*******************************************************************    00088200
.***AE.01  START OF IWMMABNL MACRO CODE                                 00088300
.*******************************************************************    00088400
                LCLC  &M0M0001                 NAME                     00088500
&M0M0001        SETC  '&XLABEL'                SET NAME                 00088600
                AIF   (K'&XLABEL NE 0).XLAB2                            00088700
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00088800
.*                                                                      00088900
.XLAB2          ANOP  ,                                                 00089000
&M0M0001 DS    0H                             IWMMABNL-0                00089100
.*******************************************************************    00089200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00089300
.*******************************************************************    00089400
              PUSH  PRINT                                               00089500
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00089600
                PRINT OFF         ++ PR01                               00089700
                AGO   .ZPRNTXX                                          00089800
.ZPRINTX        PRINT ON                                                00089900
.ZPRNTXX        ANOP  ,                                                 00090000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00090100
         LCLC  &T1                                                      00090200
&T1      SETC  '&MONTKN'                                                00090300
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00090400
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00090500
&T1      SETC  '0(&T1.)'                                                00090600
.MONTKNRS  ANOP                                                         00090700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00090800
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00090900
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00091000
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00091100
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00091200
         B     END&SYSNDX              BRANCH TO END LABEL              00091300
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00091400
&T1      SETC  '&ABNORMAL'                                              00091500
         AIF   ('&ABNORMAL'(1,1) NE '(').ABNORMRS                       00091600
&T1      SETC  '&ABNORMAL'(2,K'&ABNORMAL-2)                             00091700
&T1      SETC  '0(&T1.)'                                                00091800
.ABNORMRS  ANOP                                                         00091900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00092000
         L     15,&T1                      SET ABNORMAL FLAG MASK       00092100
.*                                                                      00092200
.*                                                                      00092300
.*                                                                      00092400
          LCLC  &KEYVALUE                                               00092500
&KEYVALUE SETC  'NO'                                                    00092600
.*                                                                      00092700
.*                                                                      00092800
.*                                                                      00092900
.*                                                                      00093000
.*                                                                      00093100
         LCLC  &SACTO1                                                  00093200
         LCLC  &SACTO2                                                  00093300
         LCLC  &SACBACK1                                                00093400
         LCLC  &SACBACK2                                                00093500
&SACTO1  SETC  'DS'                                                     00093600
&SACTO2  SETC  '0H'                                                     00093700
&SACBACK1 SETC  'DS'                                                    00093800
&SACBACK2 SETC  '0H'                                                    00093900
.*                                                                      00094000
         AIF   ('&XMONENV' NE 'NOSWITCH').ENDNOSWITCH1                  00094100
.*                                                                      00094200
.*                                                                      00094300
.*   THE FOLLOWING CODE HANDLES                                         00094400
.*   ===========================>    MONENV(NOSWITCH)                   00094500
.*                                                                      00094600
.*                                                                      00094700
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00094800
         AGO   .COMMONSFVER1                                            00094900
.*                                                                      00095000
.ENDNOSWITCH1   ANOP                                                    00095100
.*                                                                      00095200
.*   THE FOLLOWING CODE HANDLES                                         00095300
.*   ===========================>    MONENV(SECONDARY)                  00095400
.*                                                                      00095500
&SACTO1  SETC  'SAC'                                                    00095600
&SACTO2  SETC  '256'                                                    00095700
&SACBACK1 SETC  'SAC'                                                   00095800
&SACBACK2 SETC  '0'                                                     00095900
.*                                                                      00096000
.*       THE PB ACRONYM, REFERENCED AS A LITERAL, RESIDES IN CURRENT    00096100
.*         PRIMARY, AND MUST BE LOADED BEFORE CHANGING PSWKEY (SINCE    00096200
.*         THE MODULE MAY BE IN FETCH-PROTECTED STORAGE) AND BEFORE     00096300
.*         CHANGING ASC MODES.                                          00096400
.*                                                                      00096500
.*                       LOGIC:                                         00096600
.*       REG 0 HAS PB_ID (ALL FLOWS FOR SECONDARY)                      00096700
.*       MONENVKEYP(VALUE) ==> REG 1 HAS KEY NEEDED TO UPDATE MONENV    00096800
.*                             SET UP AR14 FOR MONENV PB                00096900
.*                             SAC TO AR                                00097000
.*                             SET REG 1 TO DESIRED VALUE               00097100
.*                                 USING INDEX REGISTER NOTATION        00097200
.*                                                                      00097300
.*       MONENVKEYP(PSWKEY!UNKNOWN) ==> SET REG 1 TO DESIRED VALUE      00097400
.*                             SAC TO SECONDARY                         00097500
.*                                                                      00097600
         L     0,=CL4'PB  '                                             00097700
         AIF   ('&MONENVKEYP' NE 'VALUE').COMSECSFVER1 BRANCH IF ^VALUE 00097800
         LA    1,1                                                      00097900
         SAR   14,1                    SET AR15 FOR SECONDARY           00098000
.*                                                                      00098100
.*       MUST ANTICIPATE NEED TO CHANGE PSW KEY,KEPT IN CURRENT PRIMARY 00098200
.*                                                                      00098300
&T1      SETC  '&MONENVKEY'                                             00098400
         AIF   ('&MONENVKEY'(1,1) NE '(').MONENVKEY1                    00098500
&T1      SETC  '&MONENVKEY'(2,K'&MONENVKEY-2)                           00098600
&T1      SETC  '0(&T1.)'                                                00098700
.MONENVKEY1 ANOP                                                        00098800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00098900
         IC    1,&T1                                                    00099000
&SACTO1  SETC  'SAC'                                                    00099100
&SACTO2  SETC  '512'                                                    00099200
&KEYVALUE SETC  'YES'                                                   00099300
.*                                                                      00099400
         AGO  .COMSECSFVER1                                             00099500
.COMSECSFVER1 ANOP                                                      00099600
.* COMMON CODE FOR MONENV(SECONDARY)                                    00099700
.*                                                                      00099800
         &SACTO1 &SACTO2                                                00099900
&SACTO1  SETC  'DS'                                                     00100000
&SACTO2  SETC  '0H'                                                     00100100
         CL    0,PB_ID-PB(0,14)                                         00100200
.*                                                                      00100300
.COMMONSFVER1 ANOP                                                      00100400
.*             COMMON CODE FOR SHORT-FORM VERIFICATION                  00100500
         BE    MONENVOK&SYSNDX         BRANCH WHEN MONENV PASSES        00100600
         &SACBACK1 &SACBACK2                                            00100700
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00100800
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00100900
         B     END&SYSNDX              BRANCH TO END LABEL              00101000
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00101100
.*                                                                      00101200
.*     THE CODE TO SET THE PSW KEY MUST TOLERATE RUNNING IN AR MODE.    00101300
.*     FOR THIS REASON, THE ADDRESS OF THE BYTE CONTAINING THE KEY      00101400
.*        HAS BEEN SAVED IN GPR01 WHEN NECESSARY (I.E. KEYVALUE=YES)    00101500
.*                                                                      00101600
         AIF   ('&MONENVKEYP' EQ 'PSWKEY').PSWKEY   BRANCH IF PSWKEY OK 00101700
         LR    0,2                 SAVE GPR 2 BEFORE USING IPK          00101800
         IPK                       SAVE PSWKEY IN BITS 24-27 OF GPR2    00101900
         AIF   ('&KEYVALUE' EQ 'YES').SPKAINST      BRANCH IF KEY IN R1 00102000
         AIF   ('&MONENVKEYP' EQ 'VALUE').VALUE     BRANCH IF VALUE     00102100
         SPKA  0(0)                SET THE PSW KEY TO 0                 00102200
         AGO   .PSWKEY                                                  00102300
.*                                                                      00102400
.VALUE   ANOP                                                           00102500
&T1      SETC  '&MONENVKEY'                                             00102600
         AIF   ('&MONENVKEY'(1,1) NE '(').MONENVKEY                     00102700
&T1      SETC  '&MONENVKEY'(2,K'&MONENVKEY-2)                           00102800
&T1      SETC  '0(&T1.)'                                                00102900
.MONENVKEY ANOP                                                         00103000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00103100
         IC    1,&T1                                                    00103200
.SPKAINST ANOP                                                          00103300
         SPKA  0(1)               SET THE PSW KEY FROM GPR 1 BITS 24-27 00103400
.*                                                                      00103500
.PSWKEY ANOP                                                            00103600
.*                                                                      00103700
         &SACTO1 &SACTO2                                                00103800
         USING PB,14                                                    00103900
         O    15,PB_ABNORMAL_FLAGS       OR IN NEW FLAG                 00104000
         ST   15,PB_ABNORMAL_FLAGS       STORE NEW MASK                 00104100
         DROP 14                                                        00104200
         &SACBACK1 &SACBACK2                                            00104300
.*                                                                      00104400
         AIF   ('&MONENVKEYP' EQ 'PSWKEY').PSWKEY2 BRANCH IF PSWKEY OK  00104500
         SPKA  0(2)                    RESTORE PSWKEY FROM GPR 2        00104600
         LR    2,0                     RESTORE GPR 2 TO ORIGINAL VALUE  00104700
.*                                                                      00104800
.PSWKEY2       ANOP                                                     00104900
         LA    15,IWMRETCODEOK SET RETURN CODE = OK                     00105000
END&SYSNDX DS    0H                    END LABEL                        00105100
.*******************************************************************    00105200
.***        RETURN CODE PROCESSING                                      00105300
.*******************************************************************    00105400
         AIF   (N'&RETCODE LE 0).IWMMABNL_ENDRC_EXP                     00105500
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMABNL_RC_REG                00105600
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMABNL_ENDRC_EXP              00105700
         AIF   ('&XRETCODE' EQ 'REG15').IWMMABNL_ENDRC_EXP              00105800
         AIF   ('&XRETCODE' EQ 'R15').IWMMABNL_ENDRC_EXP                00105900
         AIF   ('&XRETCODE' EQ '15').IWMMABNL_ENDRC_EXP                 00106000
         ST    15,&XRETCODE                                             00106100
         AGO   .IWMMABNL_ENDRC_EXP                                      00106200
.*                                                                      00106300
.IWMMABNL_RC_REG      ANOP  ,                                           00106400
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00106500
         AIF   ('&T1' EQ 'GPR15').IWMMABNL_ENDRC_EXP                    00106600
         AIF   ('&T1' EQ 'REG15').IWMMABNL_ENDRC_EXP                    00106700
         AIF   ('&T1' EQ 'R15').IWMMABNL_ENDRC_EXP                      00106800
         AIF   ('&T1' EQ '15').IWMMABNL_ENDRC_EXP                       00106900
         LR    &T1,15                                                   00107000
.IWMMABNL_ENDRC_EXP   ANOP  ,                                           00107100
.*******************************************************************    00107200
.***        REASON CODE PROCESSING                                      00107300
.*******************************************************************    00107400
         AIF   (N'&RSNCODE LE 0).IWMMABNL_ENDRSN_EXP                    00107500
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMABNL_RSN_REG               00107600
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMABNL_ENDRSN_EXP              00107700
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMABNL_ENDRSN_EXP             00107800
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMABNL_ENDRSN_EXP              00107900
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMABNL_ENDRSN_EXP             00108000
         AIF   ('&XRSNCODE' EQ 'R0').IWMMABNL_ENDRSN_EXP                00108100
         AIF   ('&XRSNCODE' EQ '0').IWMMABNL_ENDRSN_EXP                 00108200
         AIF   ('&XRSNCODE' EQ '00').IWMMABNL_ENDRSN_EXP                00108300
         ST    0,&XRSNCODE                                              00108400
         AGO   .IWMMABNL_ENDRSN_EXP                                     00108500
.*                                                                      00108600
.IWMMABNL_RSN_REG     ANOP  ,                                           00108700
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00108800
         AIF  ('&ZCGPR' EQ 'GPR0').IWMMABNL_ENDRSN_EXP                  00108900
         AIF  ('&ZCGPR' EQ 'GPR00').IWMMABNL_ENDRSN_EXP                 00109000
         AIF  ('&ZCGPR' EQ 'REG0').IWMMABNL_ENDRSN_EXP                  00109100
         AIF  ('&ZCGPR' EQ 'REG00').IWMMABNL_ENDRSN_EXP                 00109200
         AIF  ('&ZCGPR' EQ 'R0').IWMMABNL_ENDRSN_EXP                    00109300
         AIF  ('&ZCGPR' EQ '0').IWMMABNL_ENDRSN_EXP                     00109400
         AIF  ('&ZCGPR' EQ '00').IWMMABNL_ENDRSN_EXP                    00109500
         LR   &T1,0                                                     00109600
.IWMMABNL_ENDRSN_EXP  ANOP  ,                                           00109700
.*******************************************************************    00109800
&ZIWMMABNL            SETC  'YES'          SET IWMMABNL USED            00109900
         POP   PRINT                                                    00110000
*                                            IWMMABNL END               00110100
         SPACE 1                                                        00110200
         MEXIT                                                          00110300
.NOCODENEEDED ANOP                                                      00110400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00110500
.********************************************************************   00110600
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00110700
.********************************************************************   00110800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00110900
                      LCLA  &ZOPN1         INVOCATION INDEX             00111000
                      LCLC  &ZOPL(4095)    LABEL                        00111100
                      LCLC  &ZOPO(4095)    OPERATION                    00111200
                      LCLC  &ZOPV(4095)    VALUE                        00111300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00111400
.*                                                                      00111500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00111600
.*******************************************************************    00111700
.***AO.X02  RETURN CODE PROCESSING                                      00111800
.*******************************************************************    00111900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00112000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00112100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00112200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00112300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00112400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00112500
&ZOPN                 SETA  &ZOPN+1                                     00112600
&ZOPL(&ZOPN)          SETC  ' '                                         00112700
&ZOPO(&ZOPN)          SETC  'ST'                                        00112800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00112900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00113000
                      AGO   .ZMRETX                                     00113100
.*                                                                      00113200
.ZMRET2               ANOP  ,                                           00113300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00113400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00113500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00113600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00113700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00113800
&ZOPN                 SETA  &ZOPN+1                                     00113900
&ZOPL(&ZOPN)          SETC  ' '                                         00114000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00114100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00114200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00114300
.ZMRETX               ANOP  ,                                           00114400
.*******************************************************************    00114500
.***AO.X03  REASON CODE PROCESSING                                      00114600
.*******************************************************************    00114700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00114800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00114900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00115000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00115100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00115200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00115300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00115400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00115500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00115600
&ZOPN                 SETA  &ZOPN+1                                     00115700
&ZOPL(&ZOPN)          SETC  ' '                                         00115800
&ZOPO(&ZOPN)          SETC  'ST'                                        00115900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00116000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00116100
                      AGO   .ZMRSNX                                     00116200
.*                                                                      00116300
.ZMRSN2               ANOP  ,                                           00116400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00116500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00116600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00116700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00116800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00116900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00117000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00117100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00117200
&ZOPN                 SETA  &ZOPN+1                                     00117300
&ZOPL(&ZOPN)          SETC  ' '                                         00117400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00117500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00117600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00117700
.ZMRSNX               ANOP  ,                                           00117800
.*******************************************************************    00117900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00118000
.*******************************************************************    00118100
                      ACTR  10000                                       00118200
.*                                                                      00118300
                      LCLA  &ZLC           COLUMN POSITION              00118400
                      LCLA  &ZOPX          LIST TABLE INDEX             00118500
                      LCLC  &ZLL           LABEL                        00118600
                      LCLC  &ZLOP          OPERATION                    00118700
                      LCLC  &ZLV           VALUE                        00118800
                      LCLC  &ZLD           DESCRIPTION                  00118900
.*                                                                      00119000
&ZOPX                 SETA  1                                           00119100
.*******************************************************************    00119200
.***AP.X01  FORMAT GENERATED CODE                                       00119300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00119400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00119500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00119600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00119700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00119800
                      AIF   (K'&ZLD LE 0).ZL51                          00119900
&ZLC                  SETA  35             COMMENT COLUMN               00120000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00120100
&ZLC                  SETA  33             COMMENT COLUMN               00120200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00120300
&ZLV                  SETC  '&ZLV'.' '                                  00120400
                      AGO   .ZL31                                       00120500
.*                                                                      00120600
.ZL41                 ANOP  ,                                           00120700
&ZLV                  SETC  '&ZLV'.' '                                  00120800
.ZL51                 ANOP  ,                                           00120900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00121000
.*                                                                      00121100
&ZLL     &ZLOP &ZLV                                                     00121200
.*                                                                      00121300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00121400
                      AGO   .ZL21          CONTINUE LOOPING             00121500
.*                                                                      00121600
.ZLX1                 ANOP  ,                                           00121700
.*******************************************************************    00121800
.***AP.X02  END OF IWMMABNL MACRO                                       00121900
&ZIWMMABNL            SETC  'YES'          SET IWMMABNL USED            00122000
         POP   PRINT                                                    00122100
*                                            IWMMABNL-0                 00122200
         SPACE 1                                                        00122300
.ZLX2                 ANOP  ,                                           00122400
         MEND                                                           00122500
**********************************************************************/ 00122600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00122700
*%IWMMABNL: MACRO KEYS(ABNORMAL,MONTKN,MONENVKEYP,MONENVKEY,MONENV,     00122800
*                 RETCODE,RSNCODE);                                     00122900
*  ANS('?'!!MACLABEL!!' '!!'IWMMABNP '!!MACLIST!!                       00123000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00123100
*%END IWMMABNL;                                                         00123200
