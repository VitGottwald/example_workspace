*/****  START OF SPECIFICATIONS  *************************************/         
*/*                                                                  */         
*/*  ACRONYM:  CBDZPARS                                              */         
*/*  EXTERNAL CLASSIFICATION:  PSPI                                  */         
*/*  END OF EXTERNAL CLASSIFICATION                                  */         
*/*  MACRO NAME:  CBDZPARS                                           */         
*/*  DSECT NAME:  PARS                                               */         
*/*  DESCRIPTIVE NAME = Generate parse macros.                       */         
*/*                                                                  */         
*/*01*  PROPRIETARY STATEMENT =                                      */         
*/*                                                                  */         
*/*        LICENSED MATERIALS - PROPERTY OF IBM                      */         
*/*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"               */         
*/*        5694-A01     COPYRIGHT IBM CORP. 1990, 2015           @LGC*/         
*/*                                                                  */         
*/*     STATUS = HCS77A0                                         @LGC*/         
*/*                                                                  */         
*/*01*  FUNCTION =                                                   */         
*/*       CBDZPARS contains the macros needed to parse               */         
*/*       the IOCP, MVSCP and HCPRIO input statements.           @LEC*/         
*/*                                                                  */         
*/*02*    OPERATION =                                                */         
*/*         The macros contained within CBDZPARS will be used        */         
*/*         to parse the IOCP and MVSCP or HCPRIO input          @LEC*/         
*/*         statements and chain the                             @LEC*/         
*/*         resulting internal text records sequentially.            */         
*/*                                                                  */         
*/*         In the event of an error, syntax checking will           */         
*/*         continue for the remainder of the input. Invalid         */         
*/*         records will be chained by a generated header,           */         
*/*         but no internal text will be created for the input       */         
*/*         record.                                                  */         
*/*                                                                  */         
*/*01*  NOTES =                                                      */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = Each macro has its own dependencies         */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = For HCD use only.                           */         
*/*                                                                  */         
*/*01*  MODULE TYPE = BAL MACROS                                     */         
*/*                                                                  */         
*/*02*    PROCESSOR = ASSEMBLER-H                                    */         
*/*                                                                  */         
*/*02*    INVOCATION = See prologue of each macro                    */         
*/*                                                                  */         
*/*                                                                  */         
*/*01*  CHANGE ACTIVITY =                                            */         
*/*                                                                  */         
*/*   $L0= HCD,   HCSH101 900420 BOEB: Hardware Configuration Dialog */         
*/*   $L1= HCD,   HCSH201 900927 BOEB: Dynamic I/O support           */         
*/*   $LB= MIF,   HCSH301 910410 BOEB: MIF support                   */         
*/*   $H1= HCD,   HCSH201 900719 BOEB: 9221 Support                  */         
*/*   $M1= HCD,   HCSH201 901001 BOEB: Quality Improvements          */         
*/*   $M3= HCD,   HCSH501 930927 BOEB: Quality Improvements        FB*/         
*/*   $LE= MIG,   HCSH301 910327 BOEB: VM Migration                  */         
*/*   $P1= PTM    HCSH301 921014 BOEB: PTM KGL0675                 WS*/         
*/*   $P2= PTM    HCSH301 930310 BOEB: APAR OY62437                WS*/         
*/*   $P3= PTM    HCSH501 931025 BOEB: PTM KGWxxxx                 FB*/         
*/*   $P4= PTM    HCSH501 931124 BOEB: PTM KGX0021                 FB*/         
*/*   $P5= -enh-  HCSH501 940210 BOEB: Enhanced PARTITION syntax   FB*/         
*/*   $LT= CF,    HCSH501 930515 BOEB: Coupling Facility Support   FB*/         
*/*   $N3= CF,    HCSH501 931122 BOEB: Migration Enhancements      FB*/         
*/*   $H3= CBY,   HCSH501 940330 BOEB: CBY channel path support    FB*/         
*/*   $H4= OSA,   HCSH501 940330 BOEB: OSA channel path support    FB*/         
*/*   $P6= -enh-  HCSH501 940520 BOEB: Esoteric token support      WS*/         
*/*   $P7= -enh-  HCSH501 940607 BOEB: Support NOTPART=(0)         FB*/         
*/*   $N6=UCBVSCR,HCSH521 940817 BOEB: UCB VSCR support (LOCANY)   FB*/         
*/*   $01= PTM    HCSH521 940907 BOEB: Esoteric w/o '/' in 1st pos FB*/         
*/*   $H6=IOCPMOD HCSH521 941229 BOEB: TOK keyword support         FB*/         
*/*   $M4=MIGENH  HCSH521 950221 BOEB: Enhanced migration support  FB*/         
*/*                                    SPE OW12423                   */         
*/*   $H5=ISD     HCSH521 960402 BBEI: ISD channel path support      */         
*/*   $C3=VOL     HCS6031 960621 BBEI: IODEVICE VOLSER number        */         
*/*   $L2=SWMIG   HCS6051 970209 BBEI: Migrate switch configuration  */         
*/*   $H8=NTV     HCS6051 970312 BKRE: NTV chpid support             */         
*/*   $H9=ICB     HCS6051 980128 BBEI: ICB channel support           */         
*/*   $HA=FIBRE   HCS6051 980128 BBEI: Fibre channel support         */         
*/*   $HB=OSAEX   HCS6051 980404 WEID: OSA Express support           */         
*/*   $02=OW31629 HCS6051 980723 BBEI: Correct DEVPREF migration     */         
*/*   $HC=PLTR    HCS6091 981224 WEID: DSD, EIO support              */         
*/*   $M5=DCM     HCS6091 990324 BBEI: Dynamic CHPID Management      */         
*/*   $B1=ESS     HCS6091 991027 REDDE: support more than 8 ports/CU */         
*/*   $HD=PEER    HCS6091 991202 WEID: Peer channel support          */         
*/*   $HE=iQDIO   HCS6091 000713 BBEI: iQDIO Support                 */         
*/*   $03=OW47247 HCS6091 001215 BBEI: Correct Esoteric token migrate*/         
*/*   $04=OW47646 HCS6091 010112 BBEI: Check TPATH entry for CF peer */         
*/*   $HF=CAS     HCS6091 010213 BBEI: Cascaded swtich support       */         
*/*   $MW=HCDVM   HCS6091 010901 WEID: HCD VM support                */         
*/*   $HG=STV     HCS6091 010924 WEID: STV support                   */         
*/*   $HH=XMP     HCS6091 020129 BBEI: Support of MCSS Processors    */         
*/*   $HI=HCDVM   HCS6091 020710 BBEI: Migrate VM OFFLINE parameter  */         
*/*   $HJ=OSC     HCS7708 020217 WEID: OSC Support                   */         
*/*   $HK=NCND    HCS7708 030324 BBEI: Null device candidate list    */         
*/*   $HL=XMP2    HCS7708 030515 BBEI: CHPID overgen                 */         
*/*   $HM=DYNLP   HCS7708 030625 BBEI: Dynamic LPAR support          */         
*/*   $HN=XMP3    HCS7708 030701 BBEI: OSD Multiple Control Units    */         
*/*   $HO=QUAL    HCS7708 030905 BBEI: Support full partition        */         
*/*                                    descriptions                  */         
*/*   $05=OA03689 HCS7708 030916 BBEI: Indicate CSS keyword for      */         
*/*                                    IODEVICE PARTITION correctly  */         
*/*                                    UNITS count length now 4 digit*/         
*/*                                    Correct CHPID PART cnd list = */         
*/*   $HP=SCSI    HCS7708 031001 BBEI: VM SCSI FBA emulation support */         
*/*   $HQ=SCHS    HCS7720 040305 BBEI: Multiple Subchannel Sets      */         
*/*   $HR=OSN     HCS7720 041222 WEID: OSN Support                   */         
*/*   $HS=SCHS    HCS7720 050322 BBEI: Changed SCHSET syntax         */         
*/*   $HT=STP     HCS7720 050614 BBEI: STP link                      */         
*/*   $06=OA14335 HCS7720 051114 WEID: no national chars in CPC name */         
*/*   $07=OA14334 HCS7720 060523 BBEI: Allow 5 digits for UNITS count*/         
*/*   $HV=CIB     HCS7740 060425 BBEI: Coupling support              */         
*/*   $HW=Z19     HCS7740 061020 BBEI: PIT flags removal             */         
*/*   $08=OA16525 HCS7720 080103 WEID: make CSSDESCL independant from*/         
*/*                                    MAXDEV,single char AID allowed*/         
*/*   $HX=OSAICC  HCS7750 080428 BBEI: OSA-ICC 3215 Support          */         
*/*   $09=QUAL    HCS7760 081204 BBEI: CHPID NOTPART=(CSS(1),P)      */         
*/*   $HY=VMPLEX, HCS7760 090113 BBEI: RDEVICE EQID parameter        */         
*/*   $L3=GRYPH,  HCS7770 090317 BBEI: Support of subchannel set 2   */         
*/*   $L4=QUAL,   HCS7770 090518 BBEI: HCA Overgen                   */         
*/*   $L5=SUBCG7  HCS7770 090609 WEID: more than 7 CF dev (TPATH)    */         
*/*   $L6=OSX     HCS7760 090909 BBEI: OSX Support                   */         
*/*   $L7=DRCONF  HCS7770 091027 WEID: D/R site OS config ID DROSID  */         
*/*   $L8=PCIe    HCS7780 100408 BBEI: FUNCTION statement            */         
*/*   $L9=IQDX    HCS7780 101117 BBEI: IQDX Support                  */         
*/*   $LA=GRYPH2  HCS7780 101129 BBEI: 4 port support                */         
*/*   $LB=OA32576 HCS7760 110117 SEL : remove empty lines            */         
*/*   $LC=RoCE    HCS7790 111201 SEL : RDMA over Converged Ethernet  */         
*/*   $0C=OA37356 HCS7780 111110 BBEI: Set MAXDEV2                   */         
*/*   $LD=PNET    HCS7790 120830 BBEI: PNETID Support                */         
*/*   $LF=PNET    HCS7790 130313 REDDE: PNETID must be alphanum      */         
*/*   $LG=zSphinx HCS77A0 130801 jh,se: Support of 8 CSS, 4 SS       */         
*/*   $LH=UID     HCS77A0 130918 BVTH : UID support                  */         
*/*   $LJ=zHYP    HCS77A0 130923 REDDE: allow underscore in lpar name*/         
*/*   $LK=zSphinx HCS77A0 130930 REDDE: CS5 and CL5 CHPIDs           */         
*/*   $LL=zSphinx HCS77A0 131001 se,jh: Support of VCHID             */         
*/*   $LM=TYPE    HCS77A0 131023 BVTH : FUNC - TYPE replaces UNIT    */         
*/*   $LN=TYPE    HCS77A0 141023 BVTH : correct type handling        */         
*/*   $LO=z13GA2  HCS77B0 150606 se,jh: ISM functions                */         
*/*   $LP=OCRYPTO HCS77B0 150813 GROE : Open Crypto VC1 function     */         
*/*   $LQ=z13GA2  HCS77B0 150914 se,jh: default for PCIe function    */         
*/*                                     type no longer set in        */         
*/*                                     CBDZPARS - instead, it is    */         
*/*                                     set in CBDMMPRC, based on    */         
*/*                                     previously defined function  */         
*/*                                     with the same channel ID     */         
*/*                                     (if any)                     */         
*/*   $LR=OCRYPTO HCS77B0 150930 GROE : OpenCrypto rename function   */         
*/*   $LS=UUID    HCS77B0 160301 se,jh: Support of PCIe UID          */         
*/*   $LU=CL5     HCS77B0 160516 se,jh: chpid type CL5               */         
*/*   $LV=zMidas  HCS77B0 161007 se,jh: PCIe type SIO,CX4            */         
*/*   $LW=zMidas  HCS77B0 161107 se,jh: Kraken / MIXTYPE parameter   */         
*/*   $LX=zMIDAS  HCS77B0 170209 se,jh: rename SIO to HYL            */         
*/*   $LY=ASSVM   HCS77C0 170711 se,jh: alternate subchannel set     */         
*/*                                     support for z/VM             */         
*/*   $LZ=SACF    HCS77C0 170819 se,jh: standalone CF                */         
*/*   $M0=NVMe    HCS77C0 180424 se,jh: NVMe functions               */         
*/*   $LZ=SACF    HCS77C0 170819 se,jh: standalone CF                */         
*/*   $M2=MTV     HCS77C0 190116 GROE : MTV support                  */         
*/*   $M7=zThemis HCS77C0 190117 se,jh: support of FID range         */         
*/*   $M8=zThemis HCS77C0 190228 se,jh: PCIe Genesis adapter         */         
*/*                                                                  */         
*/**** END OF SPECIFICATIONS *****************************************/         
*/*                                                                  */         
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'RESOURCE - RESOURCE MACRO'                         @LBA         
         MACRO  --  RESOURCE INFORMATION                           @LBA         
&SYMBOL  RESOURCE &PARTITION=,&PART=,&DESCL=,&USAGE=,&MAXDEV=,         *        
               &CSSDESCL=,&DESCL2=,&DESCL3=                        @HOC         
.*                                                                              
         AGO   .SKIP                                               @LBA         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = RESOURCE                                        */         
*/*                                                                  */         
*/*02*  DESCRIPTIVE NAME = Resource Information                      */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       label RESOURCE PARTition=((p1,n),(p2,n),..),           @M4C*/         
*/*             or       PARTition=((CSS(n),(p1,n),(p2,n),...),  @HHA*/         
*/*                                 ...                          @HHA*/         
*/*                                 (CSS(n),(p1,n),(p2,n),...))  @HHA*/         
*/*                      DESCL=(desc1,desc2,...)                 @M4A*/         
*/*                      DESCL2=(descA,descB,...)                @HOA*/         
*/*                      USAGE=(use1,use2,...)                   @HDA*/         
*/*                      MAXDEV=((CSS(n),ss0<,ss1<,ss2><,ss3>>)) @LGC*/         
*/*                              ...                             @HHA*/         
*/*                              (CSS(n),ss0<,ss1<,ss2><,ss3>>)) @LGC*/         
*/*                      CSSDESCL=(desc1,desc2,...)              @HHA*/         
*/*                                                                  */         
*/*01*  FUNCTION = The RESOURCE statement is used to define          */         
*/*                the partitions for a MIF processor and assign     */         
*/*                image identifiers to the partitions.              */         
*/*                                                                  */         
*/*01*  NOTES =  N/A                                                 */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = FOR HCD use only                            */         
*/*                                                                  */         
*/*01*  INPUT =                                                      */         
*/*             # PARTITION=((p1<,n>),(p2<,n>),...)                  */         
*/*        or   # PARTITION=((CSS(0),(p1<,n>),(p2<,n>),...),     @HHA*/         
*/*                          ...                                 @HHA*/         
*/*                          (CSS(m),(p1<,n>),(p2<,n>),...))     @HHA*/         
*/*                          p1    -  partition name                 */         
*/*                          n     -  partition image number  (hex)  */         
*/*                          pn=*  -  Dynamic LP                 @HMA*/         
*/*               MAXDEV=((CSS(0),ss0<,ss1<,ss2><,ss3>>),        @LGC*/         
*/*                          ...                                 @HHA*/         
*/*                       (CSS(m),ss0<,ss1<,ss2><,ss3>>))        @LGC*/         
*/*                          ss0   -  maximum devices subset 0   @HHA*/         
*/*                          ss1   -  maximum devices subset 1   @HHA*/         
*/*                          ss2   -  maximum devices subset 2   @LGA*/         
*/*                          ss3   -  maximum devices subset 3   @LGA*/         
*/*               USAGE=(type1,type2, ..) partition usage type   @HDA*/         
*/*               DESCL=(desc1,desc2,...)                        @M4A*/         
*/*                          descN -  description of partition N @M4A*/         
*/*               CSSDESCL=(desc1,desc2,...)                     @M4A*/         
*/*                          descN -  description of CSS n       @HHA*/         
*/*             #  - Required keyword                                */         
*/*                                                                  */         
*/*01*  OUTPUT = Generated RESOURCE internal text record             */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.SKIP    ANOP                                                      @LBA         
         GBLA  &SYSITRN           HCD statement number             @LBA         
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &$ERR              Global error flag                @LBA         
         GBLC  &CWK               Character work variable          @LBA         
.*                                                                              
         LCLA  &SUB               Sublist element number           @LBA         
         LCLA  &SUB1              Sublist element number (CSS)     @HHA         
         LCLA  &L                 Maximum operand length           @LBA         
         LCLA  &LEN               Actual operand length            @N3A         
         LCLA  &IL                Maximum length of image number   @LBA         
         LCLA  &IP                Specified number of entries      @HDA         
         LCLA  &PANUM             Specified number of partitions   @HHA         
         LCLA  &IC                Specified number of CSSs         @HHA         
         LCLA  &NDX               Loop variable                    @LBA         
         LCLA  &MAXSUB            Maximum number of sublist entries@LBA         
         LCLA  &MAXCSS            Maximum number of CSS entries    @HHA         
         LCLA  &MAXVAL            Maximum value of operand         @LBA         
         LCLA  &MINVAL            Minimum value of operand         @LBA         
         LCLA  &PLCT              Number of entries in partition list  *        
                                                                   @LBA         
         LCLA  &FLAG              Flag byte                        @HHA         
         LCLA  &PARTF             Operand flag - CSID with PART    @HHA         
         LCLA  &MAXDEVF           Operand flag - CSID with MAXDEV  @HHA         
         LCLA  &CSLCT             Number of entries in MAXDEV list @HHA         
         LCLA  &CSSPART           Number of entries in PART list   @08A         
         LCLA  &USE(128)          Part. usage type                 @LGC         
.*                                      (os,cf,cf/os,fw)           @LZC         
         LCLA  &PID(128)          Partition image number           @LGC         
         LCLA  &CSS(128)          CSS id list for PART             @LGC         
         LCLA  &CSID(4)           CSS id list for PART             @HHA         
         LCLA  &CSS1(4)           CSS id list for MAXDEV           @HHA         
         LCLA  &MXID(4)           CSS id list for MAXDEV           @HHA         
         LCLB  &CSSPI(4)          Indicator if CSS id is given     @HHA         
         LCLB  &CSSMI(4)          Indicator if CSS id is given     @HHA         
         LCLC  &PARTS             CSS partition name               @HHA         
         LCLC  &PNAME(128)        Partition list                   @LGC         
         LCLC  &PDESC(128)        Partition description            @LGC         
         LCLC  &CDESC(16)         CSS description                  @HHA         
         LCLC  &POS               subentry indication              @HHA         
         LCLC  &CNO               EBCDIC version of SYSITRN        @LBA         
         LCLC  &DESCR             Description work area            @L2A         
         LCLC  &DSC               Description work area            @L2A         
         LCLC  &IMAGE             Image number                     @LBA         
         LCLC  &SS0(4)            Devices in subchannel set 0      @HHA         
         LCLC  &SS1(4)            Devices in subchannel set 1      @HHA         
         LCLC  &SS2(4)            Devices in subchannel set 2      @L3A         
         LCLC  &SS3(4)            Devices in subchannel set 3      @LGA         
         LCLC  &SCHMAX            Devices in subchannel set 0      @HHA         
         LCLC  &SCHMAX1           Devices in subchannel set 1      @HHA         
         LCLC  &SCHMAX2           Devices in subchannel set 2      @L3A         
         LCLC  &SCHMAX3           Devices in subchannel set 3      @LGA         
         LCLB  &ERROR             Error flag                       @LBA         
         LCLB  &MCSS              Indicates XMP syntax             @HHA         
         LCLB  &SCSS              Indicates XMP syntax - single lst@HHA         
         LCLB  &MCSSREQ           Indicates if XMP syntax required @HHA         
         LCLB  &USESET(128)       Usage type set indicator         @LGC         
.*                                                                              
&FLAG    SETA  0                  Initialize flag byte             @HHA         
&PARTF   SETA  128                Initialize PART operand flag     @HHA         
&MAXDEVF SETA  64                 Initialize MAXDEV operand flag   @HHA         
.*                                                                              
         ACTR  10000              Set for infinite loop control    @LBA         
.*                                                                              
&SYMBOL  TXTHDR RESOURCE                                           @LBA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOSA0    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOSA0            and continue                     @P3A         
.*                                                                              
.XPOSA0  ANOP  ,                                                   @P3A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PARTITION  Parameter  ((name<,n>),(name<,n>),...)   *         
.*                                        - or -                      *         
.*                               ((CSS(n),(name<,n>),(name<,n>),...)  *         
.*                                 ...                                *         
.*                                (CSS(n),(name<,n>),(name<,n>),...)) *         
.*                                                                @HHC*         
.**********************************************************************         
.*                                                                              
&MAXSUB  SETA  15                     Maximum number of partitions @HHC         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&L       SETA  8                      Maximum PARTITION length     @LBA         
&IL      SETA  1                      Maximum length of image number   *        
                                                                   @LBA         
.*                                                                              
         AIF   ('&PARTITION' EQ '').PART100 omitted PARTITION parm @LBA         
&PLCT    SETA  0                      Initialize number of entries in  *        
                                      partition list               @LBA         
.*                                                                              
.**********************************************************************         
.*       Loop over specified CSSs                                 @HHA*         
.**********************************************************************         
.*                                                                              
&IC      SETA  N'&PARTITION                                                     
&SUB1    SETA  1                     Start with first CSS         @HHA          
&SCSS    SETB  0                     Not a single MCSS list       @HHA          
.LPART02 ANOP  ,                                                  @HHA          
         AIF   ('&PARTITION'(1,5) EQ '(CSS(').MCSS0               @HHA          
         AIF   ('&PARTITION(&SUB1)'(1,5) EQ '(CSS(').MCSS0        @HHA          
&MCSS    SETB  0                     Indicate SMP format          @HHA          
&SUB     SETA  1                     Start with first in list     @HHA          
&IC      SETA  1                     Only one CSS                 @HHA          
&IP      SETA  N'&PARTITION          Number of partitions in CSS  @HHA          
&PANUM   SETA  N'&PARTITION          Number of partitions in CSS  @HHA          
         AGO   .LPART03                                           @HHA          
.MCSS0   ANOP  ,                     CSS format                   @HHA          
&MCSS    SETB  1                     Indicate XMP format          @HHA          
&FLAG    SETA  &FLAG+&PARTF          Indicate PART with CSS keyw  @HHA          
         AIF   ('&PARTITION(&SUB1)'(1,5) EQ '(CSS(').MCSS01       @HHA          
&SCSS    SETB  1                     Single CSS list              @HHA          
&IC      SETA  1                     Only one CSS                 @HHA          
.MCSS01  ANOP  ,                                                  @HHA          
         AIF   (&IC GT &MAXCSS).MCSSER0  Too many CSS             @HHA          
.MCSS1   ANOP  ,                     Start loop body for CSS      @HHA          
         AIF   (&SCSS).MCSS02        Single list XMP format       @HHA          
&PARTS   SETC  '&PARTITION(&SUB1,1)' Get first value of XMP list  @HHA          
         AGO   .MCSS03                                            @HHA          
.MCSS02  ANOP  ,                                                  @HHA          
&PARTS   SETC  '&PARTITION(1)'       Get first value of XMP list  @HHA          
.MCSS03  ANOP  ,                                                  @HHA          
         AIF   ('&PARTS'(1,4) NE 'CSS(').MCSSER2                  @HHA          
&CSID(&SUB1) SETA  0                 Set CSS id                   @HHA          
         AIF   ('&PARTS'(5,2) EQ '0)').MCSS2                      @HHA          
&CSID(&SUB1) SETA  1                 Set CSS id                   @HHA          
         AIF   ('&PARTS'(5,2) EQ '1)').MCSS2                      @HHA          
&CSID(&SUB1) SETA  2                 Set CSS id                   @HHA          
         AIF   ('&PARTS'(5,2) EQ '2)').MCSS2                      @HHA          
&CSID(&SUB1) SETA  3                 Set CSS id                   @HHA          
         AIF   ('&PARTS'(5,2) EQ '3)').MCSS2                      @HHA          
&CSID(&SUB1) SETA  4                 Set CSS id                   @LGA          
         AIF   ('&PARTS'(5,2) EQ '4)').MCSS2                      @LGA          
&CSID(&SUB1) SETA  5                 Set CSS id                   @LGA          
         AIF   ('&PARTS'(5,2) EQ '5)').MCSS2                      @LGA          
&CSID(&SUB1) SETA  6                 Set CSS id                   @LGA          
         AIF   ('&PARTS'(5,2) EQ '6)').MCSS2                      @LGA          
&CSID(&SUB1) SETA  7                 Set CSS id                   @LGA          
         AIF   ('&PARTS'(5,2) EQ '7)').MCSS2                      @LGA          
         AGO   .MCSSER1              Invalid CSS id               @HHA          
.MCSS2   ANOP  ,                                                  @HHA          
         AIF   (&CSSPI(&CSID(&SUB1)+1)).MCSPER3                   @HHA          
&CSSPI(&CSID(&SUB1)+1) SETB  1       Indicate CSS occurred        @HHA          
&SUB     SETA  2                     Start with second entry      @HHA          
         AIF   (&SCSS).MCSS04                                     @HHA          
&IP      SETA  N'&PARTITION(&SUB1)   Number of partitions in CSS  @HHA          
&PANUM   SETA  N'&PARTITION(&SUB1)-1 Number of partitions in CSS  @HHA          
         AGO   .MCSS05                                            @HHA          
.MCSS04  ANOP  ,                                                  @HHA          
&IP      SETA  N'&PARTITION          Number of partitions in CSS  @HHA          
&PANUM   SETA  N'&PARTITION-1        Number of partitions in CSS  @HHA          
.MCSS05  ANOP  ,                                                  @HHA          
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.LPART03 ANOP  ,                                                   @HHA         
         AIF   (&PANUM GT &MAXSUB).PARTE01        Too many operands in *        
                                      partition list               @HHC         
.*       AIF   (N'&USAGE GT N'&PARTITION).PARTE07 Too many operands in *        
                                      usage list                   @HDA         
.LPART10 ANOP ,                                                    @LBA         
         AIF   (&MCSS).MCSS5                                       @HHA         
&PARTS   SETC  '&PARTITION(&SUB,1)'                                @HHA         
&POS     SETC  '('.'&SUB'.',1'.')'                                 @HHA         
         AGO   .MCSS7                                              @HHA         
.MCSS5   ANOP  ,                                                   @HHA         
         AIF   (&SCSS).MCSS06                                      @HHA         
&PARTS   SETC  '&PARTITION(&SUB1,&SUB,1)'                          @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.',1'.')'                     @HHA         
         AGO   .MCSS7                                              @HHA         
.MCSS06  ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PARTITION(&SUB,1)'                                @HHA         
&POS     SETC  '('.'&SUB'.',1'.')'                             @HHA             
.MCSS7   ANOP  ,                                                   @HHA         
         AIF   ('&PARTS' EQ '').PARTE02              No partition  @HHC         
         AIF   ('&PARTS' EQ '*').LPART20   Spare partition         @HMA         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).LPART20    Continue if no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .LPART50               and continue                 @LBA         
.*                                                                              
.LPART20 ANOP ,                                                    @LBA         
&PLCT    SETA  &PLCT+1                Increment  number of entries in  *        
                                      partition list               @LBA         
&PNAME(&PLCT)  SETC '&PARTS'          Save partition name          @HHC         
&USE(&PLCT)    SETA  0                Initialize partition usage   @HDA         
&USESET(&PLCT) SETB  0                No usage type set so far     @HDA         
&CSS(&PLCT)    SETA &CSID(&SUB1)      Set CSS id                   @HHA         
.*                                                                              
         AIF   (&MCSS).MCSS9                                       @HHA         
&IMSTR   SETC  '&PARTITION(&SUB,2)'                                @HHA         
&POS     SETC  '('.'&SUB'.',2'.')'                                 @HHA         
         AGO   .MCSS8                                              @HHA         
.MCSS9   ANOP  ,                                                   @HHA         
         AIF   (&SCSS).MCSS08                                      @HHA         
&IMSTR   SETC  '&PARTITION(&SUB1,&SUB,2)'                          @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.',2'.')'                     @HHA         
         AGO   .MCSS8                                              @HHA         
.MCSS08  ANOP  ,                                                   @HHA         
&IMSTR   SETC  '&PARTITION(&SUB,2)'                                @HHA         
&POS     SETC  '('.'&SUB'.',2'.')'                             @HHA             
.MCSS8   ANOP  ,                                                   @HHA         
         AIF   ('&IMSTR' EQ '').LPART50             No image no    @HHC         
         AIF   (K'&IMSTR GT &IL).PARTE03              Report error if  *        
                                      image no  > maximum          @HHC         
&IMAGE   SETC  '&IMSTR'               Isolate image number         @HHC         
         HEXCHECK STRING=&IMAGE       Verify if hexadecimal        @LBA         
         AIF   (&$ERR).PARTE04        Report error, if encountered @LBA         
         AIF   ('&IMAGE' EQ '0').PARTE06 Image number 0 is invalid @LBA         
.*                                                                              
&PID(&PLCT)    SETA 10                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'A').LPART25 Image number set          @HDC         
&PID(&PLCT)    SETA 11                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'B').LPART25 Image number set          @HDC         
&PID(&PLCT)    SETA 12                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'C').LPART25 Image number set          @HDC         
&PID(&PLCT)    SETA 13                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'D').LPART25 Image number set          @HDC         
&PID(&PLCT)    SETA 14                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'E').LPART25 Image number set          @HDC         
&PID(&PLCT)    SETA 15                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'F').LPART25 Image number set          @HDC         
&PID(&PLCT)    SETA &IMAGE            Save partition image number  @LBA         
.*                                                                              
.LPART25 ANOP ,                                                    @HDA         
         AIF   ('&USAGE(&PLCT)' EQ '').LPART50       No usage type @HHC         
         AIF   ('&USAGE(&PLCT)' NE 'OS').LPART30     Check for OS  @HHC         
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA         
&USE(&PLCT)    SETA 0                 Set usage type OS            @HDA         
         AGO   .LPART50               Goto end of loop             @HDA         
.LPART30 ANOP                         Check for next usage type    @HDA         
         AIF   ('&USAGE(&PLCT)' NE 'CF').LPART35      Check for CF @HHC         
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA         
&USE(&PLCT)    SETA 1                 Set usage type CF            @HDA         
         AGO   .LPART50               Goto end of loop             @HDA         
                                                                                
                                                                                
.LPART35 ANOP                         Check for next usage type    @HDA         
         AIF   ('&USAGE(&PLCT)' NE 'CF/OS').LPART37      Chk CF/OS @LZC         
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA         
&USE(&PLCT)    SETA 2                 Set usage type CF/OS         @HDA         
         AGO   .LPART50               Goto end of loop             @HDA         
                                                                                
                                                                                
.LPART37 ANOP                         Check for next usage type    @LZA         
         AIF   ('&USAGE(&PLCT)' NE 'FW').PARTE05      Chk for FW   @LZA         
&USESET(&PLCT) SETB 1                 Indicate usage set           @LZA         
&USE(&PLCT)    SETA 3                 Set usage type FW            @LZA         
         AGO   .LPART50               Goto end of loop             @LZA         
                                                                                
                                                                                
.LPART50 ANOP                         Process next partition       @LBA         
&SUB     SETA  &SUB+1                  Point to next sublist entry @LBA         
         AIF   (&SUB LE &IP).LPART10          More partitions      @HHC         
         AIF   (&MCSS).MCSS50                                                   
         AGO   .XPART                                                           
.MCSS50  ANOP  ,                      MCSS format                  @HHA         
&SUB1    SETA  &SUB1+1                Increment to next CSS        @HHA         
         AIF   (&SUB1 LE &IC).MCSS1   Process next CSS             @HHA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PART  Parameter  ((name<,n>),(name<,n>),...)        *         
.*                                        - or -                      *         
.*                               ((CSS(n),(name<,n>),(name<,n>),...)  *         
.*                                 ...                                *         
.*                                (CSS(n),(name<,n>),(name<,n>),...)) *         
.*                                                                    *         
.*      Note:  This piece of code must follow the PARTITION routine,  *         
.*             since branches are made from the partition routine     *         
.*             to the error handling code of PART.                    *         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
.PART100 ANOP                                                      @LBA         
         AIF   ('&PART' EQ '').NOPART      PART parm not specified @LBA         
.*                                                                              
&PLCT    SETA  0                      Initialize number of entries in  *        
                                      partition list               @LBA         
.*                                                                              
.**********************************************************************         
.*       Loop over specified CSSs                                 @HHA*         
.**********************************************************************         
.*                                                                              
&IC      SETA  N'&PART                                                          
&SUB1    SETA  1                     Start with first CSS         @HHA          
&SCSS    SETB  0                     Not a single MCSS list       @HHA          
.PART112 ANOP  ,                                                  @HHA          
         AIF   ('&PART'(1,5) EQ '(CSS(').MCSS10                   @HHA          
         AIF   ('&PART(&SUB1)'(1,5) EQ '(CSS(').MCSS10            @HHA          
&MCSS    SETB  0                     Indicate SMP format          @HHA          
&SUB     SETA  1                     Start with first in list     @HHA          
&IC      SETA  1                     Only one CSS                 @HHA          
&IP      SETA  N'&PART               Number of partitions in CSS  @HHA          
&PANUM   SETA  N'&PART               Number of partitions in CSS  @HHA          
         AGO   .PART113                                           @HHA          
.MCSS10  ANOP  ,                     CSS format                   @HHA          
&MCSS    SETB  1                     Indicate XMP format          @HHA          
&FLAG    SETA  &FLAG+&PARTF          Indicate PART with CSS keyw  @HHA          
         AIF   ('&PART(&SUB1)'(1,5) EQ '(CSS(').MCSS101           @HHA          
&SCSS    SETB  1                     Single CSS list              @HHA          
&IC      SETA  1                     Only one CSS                 @HHA          
.MCSS101 ANOP  ,                                                  @HHA          
         AIF   (&IC GT &MAXCSS).MCSSER0  Too many CSS             @HHA          
.MCSS11  ANOP  ,                     Start loop body for CSS      @HHA          
         AIF   (&SCSS).MCSS102       Single list XMP format       @HHA          
&PARTS   SETC  '&PART(&SUB1,1)'      Get first value of XMP list  @HHA          
         AGO   .MCSS103                                           @HHA          
.MCSS102 ANOP  ,                                                  @HHA          
&PARTS   SETC  '&PART(1)'            Get first value of XMP list  @HHA          
.MCSS103 ANOP  ,                                                  @HHA          
         AIF   ('&PARTS'(1,4) NE 'CSS(').MCSSER2                  @HHA          
&CSID(&SUB1) SETA  0                 Set CSS id 0                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '0)').MCSS12                     @HHA          
&CSID(&SUB1) SETA  1                 Set CSS id 1                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '1)').MCSS12                     @HHA          
&CSID(&SUB1) SETA  2                 Set CSS id 2                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '2)').MCSS12                     @HHA          
&CSID(&SUB1) SETA  3                 Set CSS id 3                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '3)').MCSS12                     @HHA          
&CSID(&SUB1) SETA  4                 Set CSS id 4                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '4)').MCSS12                     @LGA          
&CSID(&SUB1) SETA  5                 Set CSS id 5                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '5)').MCSS12                     @LGA          
&CSID(&SUB1) SETA  6                 Set CSS id 6                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '6)').MCSS12                     @LGA          
&CSID(&SUB1) SETA  7                 Set CSS id 7                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '7)').MCSS12                     @LGA          
         AGO   .MCSSER1              Invalid CSS id               @HHA          
.MCSS12  ANOP  ,                                                                
         AIF   (&CSSPI(&CSID(&SUB1)+1)).MCSPER3                   @HHA          
&CSSPI(&CSID(&SUB1)+1) SETB  1       Indicate CSS occurred        @HHA          
&SUB     SETA  2                     Start with second entry      @HHA          
         AIF   (&SCSS).MCSS104                                    @HHA          
&IP      SETA  N'&PART(&SUB1)        Number of partitions in CSS  @HHA          
&PANUM   SETA  N'&PART(&SUB1)-1      Number of partitions in CSS  @HHA          
         AGO   .MCSS105                                           @HHA          
.MCSS104 ANOP  ,                                                  @HHA          
&IP      SETA  N'&PART               Number of partitions in CSS  @HHA          
&PANUM   SETA  N'&PART-1             Number of partitions in CSS  @HHA          
.MCSS105 ANOP  ,                                                  @HHA          
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.PART113 ANOP  ,                                                   @HHA         
         AIF   (&PANUM GT &MAXSUB).PARTE01        Too many operands in *        
                                      partition list               @HHC         
.*       AIF   (N'&USAGE GT N'&PART).PARTE07      Too many operands in *        
                                      usage list                   @HDA         
.PART110 ANOP ,                                                    @LBA         
         AIF   (&MCSS).MCSS15                                      @HHA         
&PARTS   SETC  '&PART(&SUB,1)'                                     @HHA         
&POS     SETC  '('.'&SUB'.',1'.')'                                 @HHA         
         AGO   .MCSS17                                             @HHA         
.MCSS15  ANOP  ,                                                   @HHA         
         AIF   (&SCSS).MCSS106                                     @HHA         
&PARTS   SETC  '&PART(&SUB1,&SUB,1)'                               @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.',1'.')'                     @HHA         
         AGO   .MCSS17                                             @HHA         
.MCSS106 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PART(&SUB,1)'                                     @HHA         
&POS     SETC  '('.'&SUB'.',1'.')'                             @HHA             
.MCSS17  ANOP  ,                                                                
         AIF   ('&PARTS' EQ '').PARTE02              No partition  @HHC         
         AIF   ('&PARTS' EQ '*').PART120  Spare partition          @HMA         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).PART120    Continue if no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .PART150               and continue                 @LBA         
.*                                                                              
.PART120 ANOP ,                                                    @LBA         
&PLCT    SETA  &PLCT+1                Increment  number of entries in  *        
                                      partition list               @LBA         
&PNAME(&PLCT)  SETC '&PARTS'          Save partition name          @HHC         
&USE(&PLCT)    SETA  0                Initialize partition usage   @HDA         
&USESET(&PLCT) SETB  0                No usage type set so far     @HDA         
&CSS(&PLCT)    SETA &CSID(&SUB1)      Set CSS id                   @HHA         
.*                                                                              
         AIF   (&MCSS).MCSS19                                      @HHA         
&IMSTR   SETC  '&PART(&SUB,2)'                                     @HHA         
&POS     SETC  '('.'&SUB'.',2'.')'                                 @HHA         
         AGO   .MCSS21                                             @HHA         
.MCSS19  ANOP  ,                                                   @HHA         
         AIF   (&SCSS).MCSS108                                     @HHA         
&IMSTR   SETC  '&PART(&SUB1,&SUB,2)'                               @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.',2'.')'                     @HHA         
         AGO   .MCSS21                                             @HHA         
.MCSS108 ANOP  ,                                                   @HHA         
&IMSTR   SETC  '&PART(&SUB,2)'                                     @HHA         
&POS     SETC  '('.'&SUB'.',2'.')'                                 @HHA         
.MCSS21  ANOP  ,                                                   @HHA         
         AIF   ('&IMSTR' EQ '').PART125             No image no    @HHC         
         AIF   (K'&IMSTR GT &IL).PARTE03              Report error if  *        
                                      image no  > maximum          @HHC         
&IMAGE   SETC  '&IMSTR'               Isolate image number         @HHC         
         HEXCHECK STRING=&IMAGE       Verify if hexadecimal        @LBA         
         AIF   (&$ERR).PARTE04        Report error, if encountered @LBA         
         AIF   ('&IMAGE' EQ '0').PARTE06 Image number 0 is invalid @LBA         
.*                                                                              
&PID(&PLCT)    SETA 10                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'A').PART125 Image number set          @HDC         
&PID(&PLCT)    SETA 11                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'B').PART125 Image number set          @HDC         
&PID(&PLCT)    SETA 12                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'C').PART125 Image number set          @HDC         
&PID(&PLCT)    SETA 13                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'D').PART125 Image number set          @HDC         
&PID(&PLCT)    SETA 14                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'E').PART125 Image number set          @HDC         
&PID(&PLCT)    SETA 15                Save partition image number  @LBA         
         AIF   ('&IMAGE' EQ 'F').PART125 Image number set          @HDC         
&PID(&PLCT)    SETA &IMAGE            Save partition image number  @LBA         
.*                                                                              
.PART125 ANOP ,                                                    @HDA         
         AIF   ('&USAGE(&PLCT)' EQ '').PART150       No usage type @HHC         
                                                                                
                                                                                
         AIF   ('&USAGE(&PLCT)' NE 'OS').PART130     Check for OS  @HHC         
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA         
&USE(&PLCT)    SETA 0                 Set usage type OS            @HDA         
         AGO   .PART150               Goto end of loop             @HDA         
                                                                                
                                                                                
.PART130 ANOP                         Check for next usage type    @HDA         
         AIF   ('&USAGE(&PLCT)' NE 'CF').PART135      Check for CF @HHC         
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA         
&USE(&PLCT)    SETA 1                 Set usage type CF            @HDA         
         AGO   .PART150               Goto end of loop             @HDA         
                                                                                
                                                                                
.PART135 ANOP                         Check for next usage type    @HDA         
         AIF   ('&USAGE(&PLCT)' NE 'CF/OS').PART137      Chk CF/OS @LZC         
&USESET(&PLCT) SETB 1                 Indicate usage set           @HDA         
&USE(&PLCT)    SETA 2                 Set usage type CF/OS         @HDA         
         AGO   .PART150               Goto end of loop             @HDA         
                                                                                
                                                                                
.PART137 ANOP                         Check for next usage type    @LZA         
         AIF   ('&USAGE(&PLCT)' NE 'FW').PARTE05      Chk for FW   @LZA         
&USESET(&PLCT) SETB 1                 Indicate usage set           @LZA         
&USE(&PLCT)    SETA 3                 Set usage type FW            @LZA         
         AGO   .PART150               Goto end of loop             @LZA         
                                                                                
                                                                                
.PART150 ANOP                         Process next partition       @LBA         
&SUB     SETA  &SUB+1                  Point to next sublist entry @LBA         
         AIF   (&SUB LE &IP).PART110          More partitions      @HHC         
         AIF   (&MCSS).MCSS150                                                  
         AGO   .XPART                                                           
.MCSS150 ANOP  ,                      MCSS format                  @HHA         
&SUB1    SETA  &SUB1+1                Increment to next CSS        @HHA         
         AIF   (&SUB1 LE &IC).MCSS11  Process next CSS             @HHA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.*                                                                              
.PARTE01 ANOP  ,                                                   @LBA         
         MNOTE 8,'045 PARTITION PARAMETER EXCEEDS &MAXSUB ENTRIES.'    *        
                                                                   @LBA         
&ERROR   SETB  1                     Indicates error               @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE02 ANOP  ,                                                   @LBA         
         MNOTE 8,'017 PARTITION NAME REQUIRED IN SUBLIST ENTRY &POS OF *        
               PARTITION PARAMETER.'                               @HHC         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE03 ANOP  ,                                                   @LBA         
         MNOTE 8,'046 PARTITION NUMBER IN SUBLIST ENTRY &POS OF PARTITI*        
               ON PARAMETER EXCEEDS &IL CHARACTER.'                @HHC         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE04 ANOP  ,                                                   @LBA         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &POS *        
               OF PARTITION PARAMETER (PARTITION NUMBER).'         @HHC         
&$ERR    SETB  1                      Indicate error               @LBA         
         AGO   .XPART                 and exit                     @LBA         
.*                                                                              
.PARTE05 ANOP  ,                                                   @HDA         
         MNOTE 8,'056 PARTITION USAGE TYPE IN SUBLIST ENTRY &SUB OF USA*        
               GE PARAMETER IS INVALID.'                           @HDA         
&$ERR    SETB  1                      Indicate error               @HDA         
         AGO   .XPART                 and exit                     @HDA         
.*                                                                              
.PARTE06 ANOP  ,                                                   @LBA         
         MNOTE 8,'055 PARTITION NUMBER 0 IN SUBLIST ENTRY &POS OF PARTI*        
               TION PARAMETER IS INVALID.'                         @HHC         
&$ERR    SETB  1                      Indicate error               @LBA         
         AGO   .XPART                 and exit                     @LBA         
.*                                                                              
.PARTE07 ANOP  ,                      Too many values              @HDA         
         MNOTE 8,'045 USAGE PARAMETER EXCEEDS &IP ENTRIES.'        @HDA         
&$ERR    SETB  1                      Indicate error               @HDA         
         AGO   .XPART                 and exit                     @HDA         
.*                                                                              
.NOPART  ANOP  ,                                                   @HHA         
         AIF   ('&MAXDEV' NE '').XPART2  Empty CSS                 @HHA         
         MNOTE 8,'002 PARTITION KEYWORD NOT SPECIFIED.'            @N3A         
&ERROR   SETB 1                        Indicate error              @N3A         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.MCSPER3 MNOTE 8,'045 CSS ID &CSID(&SUB1) SPECIFIED TWICE.'        @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.*                                                                              
.MCSSER0 MNOTE 8,'045 PARTITION PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRI*        
               ES.'                                                @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.MCSSER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF PARTTION PARAMETER IS *        
               INVALID.'                                           @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.MCSSER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF PARTITION PARAMETE*        
               R HAS AN INVALID FORMAT.'                           @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.*                                                                              
.XPART   ANOP                         End of processing PARTITION  @LBA         
.*                                                                              
&MCSSREQ SETB  0                      MCSS format not required     @HHA         
&CSSPART SETA  &IC                    Set number of CSSs in PART   @08A         
         AIF   (&IC EQ 1).XPART2      If only one CSS defined      @HHA         
&MCSSREQ SETB  1                      Otherwise, MCSS format requ. @HHA         
.XPART2  ANOP  ,                                                   @HHA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate MAXDEV Parameter ((CSS(n),ss0<,ss1>),(...),...)     *         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
&MAXSUB  SETA  4                     Maximum 4 subchannel set vals @LGC         
.*                                                                              
.MXDV100 ANOP                                                      @HHA         
         AIF   ('&MAXDEV' EQ '').XMXDEV  MAXDEV parm not specified @HHA         
.*                                                                              
&CSLCT   SETA  0                      Initialize number of entries in  *        
                                      CSS list                     @HHA         
.*                                                                              
.**********************************************************************         
.*       Loop over specified CSSs                                 @HHA*         
.**********************************************************************         
.*                                                                              
&IC      SETA  N'&MAXDEV                                          @HHA          
&SUB1    SETA  1                     Start with first CSS         @HHA          
&SCSS    SETB  0                     No single CSS list           @HHA          
.MXDV112 ANOP  ,                                                  @HHA          
         AIF   ('&MAXDEV'(1,5) EQ '(CSS(').MXDV10  Single list    @HHA          
         AIF   ('&MAXDEV(&SUB1)'(1,5) EQ '(CSS(').MXDV10          @HHA          
         AIF   (&MCSSREQ).MXDVER2    No XMP format, but required  @HHA          
&MCSS    SETB  0                     Indicate SMP format          @HHA          
&SUB     SETA  1                     Start with first in list     @HHA          
&IP      SETA  N'&MAXDEV             Number of entries in list    @HHA          
&IC      SETA  1                     Only one CSS                 @HHA          
&PANUM   SETA  N'&MAXDEV             Number of subchannel sets    @HHA          
&MXID(&SUB1) SETA  &CSID(&SUB1)      Set CSS id to the only one   @HHA          
         AGO   .MXDV113                                           @HHA          
.MXDV10  ANOP  ,                     CSS format                   @HHA          
         AIF   ('&MAXDEV(&SUB1)'(1,5) EQ '(CSS(').MXDV101         @HHA          
&SCSS    SETB  1                     Single CSS list              @HHA          
&IC      SETA  1                     Only one CSS                 @HHA          
.MXDV101 ANOP  ,                                                  @HHA          
&MCSS    SETB  1                     Indicate XMP format          @HHA          
&FLAG    SETA  &FLAG+&MAXDEVF        Indicate MAXDEV w/ CSS keywrd@HHA          
         AIF   (&IC GT &MAXCSS).MXDVER0  Too many CSS             @HHA          
.MXDV11  ANOP  ,                     Start loop body for CSS      @HHA          
         AIF   (&SCSS).MXDV102       Single list XMP format       @HHA          
&PARTS   SETC  '&MAXDEV(&SUB1,1)'    Get first value of XMP list  @HHA          
         AGO   .MXDV103                                           @HHA          
.MXDV102 ANOP  ,                                                  @HHA          
&PARTS   SETC  '&MAXDEV(1)'          Get first value of XMP list  @HHA          
.MXDV103 ANOP  ,                                                  @HHA          
         AIF   (K'&PARTS NE 6).MXDVER2                            @HHA          
         AIF   ('&PARTS'(1,4) NE 'CSS(').MXDVER2                  @HHA          
&MXID(&SUB1) SETA  0                 Set CSS id 0                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '0)').MXDV12                     @HHA          
&MXID(&SUB1) SETA  1                 Set CSS id 1                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '1)').MXDV12                     @HHA          
&MXID(&SUB1) SETA  2                 Set CSS id 2                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '2)').MXDV12                     @HHA          
&MXID(&SUB1) SETA  3                 Set CSS id 3                 @HHA          
         AIF   ('&PARTS'(5,2) EQ '3)').MXDV12                     @HHA          
&MXID(&SUB1) SETA  4                 Set CSS id 4                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '4)').MXDV12                     @LGA          
&MXID(&SUB1) SETA  5                 Set CSS id 5                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '5)').MXDV12                     @LGA          
&MXID(&SUB1) SETA  6                 Set CSS id 6                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '6)').MXDV12                     @LGA          
&MXID(&SUB1) SETA  7                 Set CSS id 7                 @LGA          
         AIF   ('&PARTS'(5,2) EQ '7)').MXDV12                     @LGA          
         AGO   .MXDVER1              Invalid CSS id               @HHA          
.MXDV12  ANOP  ,                                                                
         AIF   (&CSSMI(&MXID(&SUB1)+1)).MCSMER3                   @HHA          
&CSSMI(&MXID(&SUB1)+1) SETB  1       Indicate CSS occurred        @HHA          
&SUB     SETA  2                     Start with second entry      @HHA          
&IP      SETA  N'&MAXDEV(&SUB1)      Number of entries in CSS     @HHA          
&PANUM   SETA  N'&MAXDEV(&SUB1)-1 Number of subchannel sets       @HHA          
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.MXDV113 ANOP  ,                                                   @HHA         
         AIF   (&PANUM GT &MAXSUB).MXDVE01        Too many operands in *        
                                      partition list               @HHC         
.MXDV110 ANOP ,                                                    @HHA         
         AIF   (&MCSS).MXDV15                                      @HHA         
&SCHMAX  SETC  '&MAXDEV(&SUB)'                                     @HHA         
&SCHMAX1 SETC  '&MAXDEV(&SUB+1)'                                   @HHA         
&SCHMAX2 SETC  '&MAXDEV(&SUB+2)'                                   @0CA         
&SCHMAX3 SETC  '&MAXDEV(&SUB+3)'                                   @LGA         
         AGO   .MXDV17                                             @HHA         
.MXDV15  ANOP  ,                                                   @HHA         
         AIF   (&SCSS).MXDV015                                     @HHA         
&SCHMAX  SETC  '&MAXDEV(&SUB1,&SUB)'                               @HHA         
&SCHMAX1 SETC  '&MAXDEV(&SUB1,&SUB+1)'                             @HHA         
&SCHMAX2 SETC  '&MAXDEV(&SUB1,&SUB+2)'                             @0CA         
&SCHMAX3 SETC  '&MAXDEV(&SUB1,&SUB+3)'                             @LGA         
         AGO   .MXDV17                                             @HHA         
.MXDV015 ANOP  ,                                                   @HHA         
&SCHMAX  SETC  '&MAXDEV(&SUB)'                                     @HHA         
&SCHMAX1 SETC  '&MAXDEV(&SUB+1)'                                   @HHA         
&SCHMAX2 SETC  '&MAXDEV(&SUB+2)'                                   @0CA         
&SCHMAX3 SETC  '&MAXDEV(&SUB+3)'                                   @LGA         
.MXDV17  ANOP  ,                                                                
&LEN     SETA  K'&SCHMAX              Length of operand            @HHA         
         AIF   (&LEN LT 2).MXDV171                                 @HHA         
         AIF   ('&SCHMAX'(&LEN,1) NE 'K').MXDV171                  @HHA         
&SCHMAX  SETC  '&SCHMAX'(1,&LEN-1)    Truncate K                   @HHA         
&SCHMAX  SETC  '1024*&SCHMAX'         Multiply by 1024             @HHA         
.MXDV171 ANOP  ,                                                   @HHA         
&LEN     SETA  K'&SCHMAX1             Length of operand            @HHA         
         AIF   (&LEN LT 2).MXDV172                                 @HHA         
         AIF   ('&SCHMAX1'(&LEN,1) NE 'K').MXDV172                 @HHA         
&SCHMAX1 SETC  '&SCHMAX1'(1,&LEN-1)    Truncate K                  @HHA         
&SCHMAX1 SETC  '1024*&SCHMAX1'        Multiply by 1024             @HHA         
.MXDV172 ANOP  ,                                                   @HHA         
&LEN     SETA  K'&SCHMAX2             Length of operand            @L3A         
         AIF   (&LEN LT 2).MXDV173                                 @L3A         
         AIF   ('&SCHMAX2'(&LEN,1) NE 'K').MXDV173                 @L3A         
&SCHMAX2 SETC  '&SCHMAX2'(1,&LEN-1)    Truncate K                  @L3A         
&SCHMAX2 SETC  '1024*&SCHMAX2'        Multiply by 1024             @L3A         
.MXDV173 ANOP  ,                                                   @L3A         
&LEN     SETA  K'&SCHMAX3             Length of operand            @LGA         
         AIF   (&LEN LT 2).MXDV174                                 @LGA         
         AIF   ('&SCHMAX3'(&LEN,1) NE 'K').MXDV174                 @LGA         
&SCHMAX3 SETC  '&SCHMAX3'(1,&LEN-1)    Truncate K                  @LGA         
&SCHMAX3 SETC  '1024*&SCHMAX3'        Multiply by 1024             @LGA         
.MXDV174 ANOP  ,                                                   @LGA         
         AIF   ('&SCHMAX' EQ '').MXDV02              No subchannel @HHA         
         AIF   ('&SCHMAX' EQ 'MAX').MXDV03   Maximum subchannel set@HNA         
         AIF   ('&SCHMAX' EQ 'MIN').MXDV02   Minimum subchannel set@HNA         
&SS0(&SUB1)    SETC '&SCHMAX'         Save subchannel set 0        @HHA         
         AGO   .MXDV18                                             @HHA         
.MXDV02  ANOP  ,                                                   @HHA         
&SS0(&SUB1)    SETC '0'               Not specified                @HHA         
         AGO   .MXDV18                                             @HNA         
.MXDV03  ANOP  ,                                                   @HNA         
&SS0(&SUB1)    SETC '65280'           Maximum specified            @09C         
.MXDV18  ANOP  ,                                                                
         AIF   ('&SCHMAX1' EQ '').MXDV04             No subchannel @HHA         
         AIF   ('&SCHMAX1' EQ 'MAX').MXDV13   Maximum subchannel   @HHA         
         AIF   ('&SCHMAX1' EQ 'MIN').MXDV04   Minimum subchannel   @HHA         
&SS1(&SUB1)    SETC '&SCHMAX1'        Save subchannel set 1        @HHA         
         AGO   .MXDV19                                             @HHA         
.MXDV13  ANOP  ,                                                   @HHA         
&SS1(&SUB1)    SETC '64*1024-1'       Maximum specified            @HHA         
         AGO   .MXDV19                                             @HHA         
.MXDV04  ANOP  ,                                                   @HHA         
&SS1(&SUB1)    SETC '0'               Not specified                @HHA         
.MXDV19  ANOP  ,                                                                
         AIF   ('&SCHMAX2' EQ '').MXDV06             No subchannel @L3A         
         AIF   ('&SCHMAX2' EQ 'MAX').MXDV20   Maximum subchannel   @L3A         
         AIF   ('&SCHMAX2' EQ 'MIN').MXDV06   Minimum subchannel   @L3A         
&SS2(&SUB1)    SETC '&SCHMAX2'        Save subchannel set 2        @L3A         
         AGO   .MXDV21                                             @LGC         
.MXDV20  ANOP  ,                                                   @L3A         
&SS2(&SUB1)    SETC '64*1024-1'       Maximum specified            @L3A         
         AGO   .MXDV21                                             @LGC         
.MXDV06  ANOP  ,                                                   @L3A         
&SS2(&SUB1)    SETC '0'               Not specified                @L3A         
.*                                                                              
.*                                                                              
.MXDV21  ANOP  ,                                                   @LGA         
         AIF   ('&SCHMAX3' EQ '').MXDV08             No subchannel @LGA         
         AIF   ('&SCHMAX3' EQ 'MAX').MXDV22   Maximum subchannel   @LGA         
         AIF   ('&SCHMAX3' EQ 'MIN').MXDV08   Minimum subchannel   @LGA         
&SS3(&SUB1)    SETC '&SCHMAX3'        Save subchannel set 3        @LGA         
         AGO   .MXDV25                                             @LGA         
.MXDV22  ANOP  ,                                                   @LGA         
&SS3(&SUB1)    SETC '64*1024-1'       Maximum specified            @LGA         
         AGO   .MXDV25                                             @LGA         
.MXDV08  ANOP  ,                                                   @LGA         
&SS3(&SUB1)    SETC '0'               Not specified                @LGA         
.*                                                                              
.*                                                                              
.MXDV25  ANOP  ,                                                                
&CSLCT   SETA  &CSLCT+1               Increment number of CSS      @HHA         
&CSS1(&CSLCT)   SETA &MXID(&SUB1)     Set CSS id                   @HHA         
.*                                                                              
&SUB1    SETA  &SUB1+1                Increment to next CSS        @HHA         
         AIF   (&SUB1 LE &IC).MXDV11  Process next CSS             @HHA         
         AGO   .XMXDEV                and continue                 @HHA         
.*                                                                              
.*                                                                              
.MXDVE01 ANOP  ,                                                   @HHA         
         MNOTE 8,'045 MAXDEV PARAMETER EXCEEDS &MAXSUB ENTRIES.'       *        
                                                                   @HHA         
&ERROR   SETB  1                     Indicates error               @HHA         
         AGO   .XMXDEV                and continue                 @HHA         
.*                                                                              
.*                                                                              
.MXDVER0 MNOTE 8,'045 MAXDEV PARAMTER EXCEEDS &MAXCSS SUBLIST ENTIES.'          
.*                                                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XMXDEV                and exit                     @HHA         
.*                                                                              
.MXDVER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF MAXDEV PARAMETER IS IN*        
               VALID.'                                             @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XMXDEV                and exit                     @HHA         
.*                                                                              
.MXDVER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF MAXDEV PARAMETER H*        
               AS AN INVALID FORMAT.'                              @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XMXDEV                and exit                     @HHA         
.*                                                                              
.*                                                                              
.MCSMER3 MNOTE 8,'045 CSS ID &MXID(&SUB1) SPECIFIED TWICE.'        @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XMXDEV                and exit                     @HHA         
.*                                                                              
.XMXDEV  ANOP                         End of processing MAXDEV     @HHA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESCL Parameter       ((desc1,(desc2),...)          *         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
&MAXSUB  SETA  &PLCT                  Max. number of descriptions  @M4A         
&L       SETA  32                     Maximum description length   @M4A         
.*                                                                              
         AIF   ('&DESCL' EQ '').XDESCL   DESCL has been omitted    @M4A         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (N'&DESCL GT &MAXSUB).PDESE01      Too many operands in *        
                                      description list             @M4A         
&SUB     SETA  1                      Address first sublist entry  @M4A         
.LPDES10 ANOP ,                                                    @M4A         
         AIF   ('&DESCL(&SUB)' EQ '').PDESNUL  No description      @M4A         
         AIF   ('&DESCL(&SUB)'(1,1) EQ '''').DELEN In quotes       @M4A         
.*                                   (Asmblr checks for end quote) @M4A         
         MNOTE 8,'008 DESCL VALUE MUST BE ENCLOSED IN QUOTES.'     @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
.DELEN   ANOP                                                      @M4A         
&DESCR   SETC  '&DESCL(&SUB)'           Set description            @M4A         
&LEN     SETA  K'&DESCL(&SUB)-2        Length of description       @M4A         
         AIF   (&LEN  LE 0).PDESNUL   Check for zero length        @M4A         
&DSC     SETC  '&DESCL(&SUB)'(2,&LEN) Set description string       @L2A         
         STRLEN STRING=&DSC           Determines length            @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).LPDES20  Less than maximum            @M4A         
         MNOTE 8,'033 DESCL VALUE EXCEEDS &L CHARACTERS.'          @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
.PDESNUL ANOP                                                      @M4A         
&DESCR   SETC  '''  '''               Set to blank                 @M4A         
.*                                                                              
.LPDES20 ANOP ,                                                    @M4A         
&PDESC(&SUB)   SETC '&DESCR'          Save partition description   @M4A         
.*                                                                              
.*                                                                              
.LPDES50 ANOP                         Process next partition       @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
         AIF   (&SUB LE &MAXSUB).LPDES10  More partition descript  @M4A         
         AGO   .XDESCL                Branch to end of DESCL       @M4A         
.PDESE01 ANOP  ,                      Too many values              @M4A         
         MNOTE 8,'045 DESCL PARAMETER EXCEEDS &MAXSUB ENTRIES.'    @M4A         
.XDESCL  ANOP  ,                                                   @M4A         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESCL2 Parameter      ((descA,(descB),...)      @HOA*         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
&MAXSUB  SETA  &PLCT                  Max. number of descriptions  @HOA         
&L       SETA  32                     Maximum description length   @HOA         
.*                                                                              
         AIF   ('&DESCL2' EQ '').XDESCL2 DESCL2 has been omitted   @HOA         
         AIF   ('&DESCL' EQ '').PDESE03  DESCL  has been omitted   @HOA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (N'&DESCL2+N'&DESCL GT &MAXSUB).PDESE02  Too many       *        
                                      operands in description list @HOA         
&SUB     SETA  1                      Address first sublist entry  @HOA         
&SUB1    SETA  N'&DESCL+1             Next partition description   @HOA         
.LPDES60 ANOP ,                                                    @HOA         
         AIF   ('&DESCL2(&SUB)' EQ '').PDESNU2  No description     @HOA         
         AIF   ('&DESCL2(&SUB)'(1,1) EQ '''').DELEN2 In quotes     @HOA         
.*                                   (Asmblr checks for end quote) @HOA         
         MNOTE 8,'008 DESCL2 VALUE MUST BE ENCLOSED IN QUOTES.'    @HOA         
&ERROR   SETB  1                      Indicate error               @HOA         
.DELEN2  ANOP                                                      @HOA         
&DESCR   SETC  '&DESCL2(&SUB)'          Set description            @HOA         
&LEN     SETA  K'&DESCL2(&SUB)-2       Length of description       @HOA         
         AIF   (&LEN  LE 0).PDESNU2   Check for zero length        @HOA         
&DSC     SETC  '&DESCL2(&SUB)'(2,&LEN) Set description string      @HOA         
         STRLEN STRING=&DSC           Determines length            @HOA         
&LEN     SETA  &$STRLEN               Sets real length             @HOA         
         AIF   (&LEN  LE &L).LPDES70  Less than maximum            @HOA         
         MNOTE 8,'033 DESCL2 VALUE EXCEEDS &L CHARACTERS.'         @HOA         
&ERROR   SETB  1                      Indicate error               @HOA         
.PDESNU2 ANOP                                                      @HOA         
&DESCR   SETC  '''  '''               Set to blank                 @HOA         
.*                                                                              
.LPDES70 ANOP ,                                                    @HOA         
&PDESC(&SUB1)  SETC '&DESCR'          Save partition description   @HOA         
.*                                                                              
.*                                                                              
.LPDES75 ANOP                         Process next partition       @HOA         
&SUB     SETA  &SUB+1                  Point to next sublist entry @HOA         
&SUB1    SETA  &SUB1+1                 Point to next descript entr @HOA         
         AIF   (&SUB LE N'&DESCL2).LPDES60  More partition descr   @HOA         
         AGO   .XDESCL2               Branch to end of DESCL       @HOA         
.PDESE02 ANOP  ,                      Too many values              @HOA         
         MNOTE 8,'045 DESCL and DESCL2 PARAMTERS EXCEED &MAXSUB ENTRIES*        
               .'                                                  @HOA         
         AGO   .XDESCL2               Branch to end of DESCL       @HOA         
.PDESE03 ANOP  ,                      Too many values              @HOA         
         MNOTE 8,'046 DESCL2 PARAMTER CAN ONLY OCCUR WITH DESCL PARAMET*        
               ER.'                                                             
         AGO   .XDESCL2               Branch to end of DESCL       @HOA         
.XDESCL2 ANOP  ,                                                   @HOA         
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESCL3 Parameter      ((descX,(descY),...)      @HOA*         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
&MAXSUB  SETA  &PLCT                  Max. number of descriptions  @HOA         
&L       SETA  32                     Maximum description length   @HOA         
.*                                                                              
         AIF   ('&DESCL3' EQ '').XDESCL3 DESCL3 has been omitted   @HOA         
         AIF   ('&DESCL2' EQ '').PDESE04  DESCL has been omitted   @HOA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (N'&DESCL2+N'&DESCL+N'&DESCL3 GT &MAXSUB).PDESE05   Too *        
                                      many operands in combined        *        
                                      DESCL/2/3 description list   @HOA         
&SUB     SETA  1                      Address first sublist entry  @HOA         
&SUB1    SETA  N'&DESCL+N'&DESCL2+1   Next partition description   @HOA         
.LPDES80 ANOP ,                                                    @HOA         
         AIF   ('&DESCL3(&SUB)' EQ '').PDESNU3  No description     @HOA         
         AIF   ('&DESCL3(&SUB)'(1,1) EQ '''').DELEN3 In quotes     @HOA         
.*                                   (Asmblr checks for end quote) @HOA         
         MNOTE 8,'008 DESCL3 VALUE MUST BE ENCLOSED IN QUOTES.'    @HOA         
&ERROR   SETB  1                      Indicate error               @HOA         
.DELEN3  ANOP                                                      @HOA         
&DESCR   SETC  '&DESCL3(&SUB)'          Set description            @HOA         
&LEN     SETA  K'&DESCL3(&SUB)-2       Length of description       @HOA         
         AIF   (&LEN  LE 0).PDESNU3   Check for zero length        @HOA         
&DSC     SETC  '&DESCL3(&SUB)'(2,&LEN) Set description string      @HOA         
         STRLEN STRING=&DSC           Determines length            @HOA         
&LEN     SETA  &$STRLEN               Sets real length             @HOA         
         AIF   (&LEN  LE &L).LPDES90  Less than maximum            @HOA         
         MNOTE 8,'033 DESCL2 VALUE EXCEEDS &L CHARACTERS.'         @HOA         
&ERROR   SETB  1                      Indicate error               @HOA         
.PDESNU3 ANOP                                                      @HOA         
&DESCR   SETC  '''  '''               Set to blank                 @HOA         
.*                                                                              
.LPDES90 ANOP ,                                                    @HOA         
&PDESC(&SUB1)  SETC '&DESCR'          Save partition description   @HOA         
.*                                                                              
.*                                                                              
.LPDES95 ANOP                         Process next partition       @HOA         
&SUB     SETA  &SUB+1                  Point to next sublist entry @HOA         
&SUB1    SETA  &SUB1+1                 Point to next descript entr @HOA         
         AIF   (&SUB LE N'&DESCL3).LPDES80   More partition descr  @HOA         
         AGO   .XDESCL3               Branch to end of DESCL       @HOA         
.PDESE05 ANOP  ,                      Too many values              @HOA         
         MNOTE 8,'045 DESCL, DESCL2 and DESCL3 PARAMETERS EXCEED &MAXSU*        
               B ENTRIES.'                                         @HOA         
         AGO   .XDESCL3               Branch to end of DESCL       @HOA         
.PDESE04 ANOP  ,                      Too many values              @HOA         
         MNOTE 8,'046 DESCL3 PARAMTER CAN ONLY OCCUR WITH DESCL2 PARAME*        
               TER.'                                                            
         AGO   .XDESCL3               Branch to end of DESCL3      @HOA         
.XDESCL3 ANOP  ,                                                   @HOA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate CSSDESCL Parameter    ((desc1,(desc2),...)       @HHA         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
&MAXSUB  SETA  &IC                    Max. number of CSS descript. @08C         
&L       SETA  32                     Maximum description length   @HHA         
.*                                                                              
         AIF   ('&CSSDESCL' EQ '').XCDESCL  CSSDESCL omitted       @HHA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (N'&CSSDESCL GT &MAXSUB).CDESE01 Too many operands in   *        
                                      description list             @HAA         
         AIF   (&CSLCT GT 0).MXCSS    MAXDEV CSS list not empty    @08A         
&FLAG    SETA  &FLAG+&MAXDEVF         Indicate MAXDEV w/ CSS keywrd@08A         
&CSLCT   SETA  &CSSPART               Set number of CSSs from PART @08A         
.MXCSS   ANOP  ,                                                   @08A         
&SUB     SETA  1                      Address first sublist entry  @HAA         
.LCDES10 ANOP ,                                                    @HAA         
         AIF   ('&CSSDESCL(&SUB)' EQ '').CDESNUL No description    @HAA         
         AIF   ('&CSSDESCL(&SUB)'(1,1) EQ '''').CELEN In quotes    @HAA         
.*                                   (Asmblr checks for end quote) @HAA         
         MNOTE 8,'008 CSSDESCL VALUE MUST BE ENCLOSED IN QUOTES.'  @HAA         
&ERROR   SETB  1                      Indicate error               @HAA         
.CELEN   ANOP                                                      @HAA         
&DESCR   SETC  '&CSSDESCL(&SUB)'        Set description            @HAA         
&LEN     SETA  K'&CSSDESCL(&SUB)-2     Length of description       @HAA         
         AIF   (&LEN  LE 0).CENULL    Check for zero length        @HAA         
&DSC     SETC  '&CSSDESCL(&SUB)'(2,&LEN) Set description string    @HAA         
         STRLEN STRING=&DSC           Determines length            @HAA         
&LEN     SETA  &$STRLEN               Sets real length             @HAA         
         AIF   (&LEN  LE &L).LCDES20  Less than maximum            @HAA         
         MNOTE 8,'033 CSSDESCL VALUE EXCEEDS &L CHARACTERS.'       @HAA         
&ERROR   SETB  1                      Indicate error               @HAA         
.CDESNUL ANOP                                                      @HAA         
&DESCR   SETC  '''  '''               Set to blank                 @HAA         
.*                                                                              
.LCDES20 ANOP ,                                                    @HAA         
&CDESC(&SUB)   SETC '&DESCR'          Save CSS description         @HAA         
.*                                                                              
.*                                                                              
.LCDES50 ANOP                         Process next CSS             @HAA         
&SUB     SETA  &SUB+1                  Point to next sublist entry @HAA         
         AIF   (&SUB LE &MAXSUB).LCDES10  More CSS descriptions    @HAA         
         AGO   .XCDESCL               Branch to end of CSSDESCL    @HAA         
.CDESE01 ANOP  ,                      Too many values              @HAA         
         MNOTE 8,'045 CSSDESCL PARAMETER EXCEEDS &MAXSUB ENTRIES.' @HAA         
.XCDESCL  ANOP  ,                                                  @HAA         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                      @LBA         
         AIF (&ERROR).EXIT            Exit if error                @LBA         
&CNO     SETC '&SYSITRN'              EBCDIC version of statement      *        
                                      number                       @LBA         
         DC    A(0)                   Reserved                     @N3C         
         DC    AL1(0)                 Reserved for later usage     @HHC         
         DC    AL1(&FLAG)             Flag byte                    @HHA         
         DC    AL2(&PLCT)             Number of entries in partition   *        
                                      list                         @LBA         
         AIF   (&PLCT EQ 0).NOPARTS   Partition list is empty      @LBA         
         DC    A(@P&CNO)              Address of partition list    @LBA         
         AGO   .GEN010                branch to continue           @LBA         
.NOPARTS DC    A(0)                   No partition list exists     @LBA         
.GEN010  ANOP  ,                                                   @LBA         
         DC    XL2'00'                Reserved                     @HHC         
         DC    AL2(&CSLCT)            Number of entries in CSS lst @HHA         
         AIF   (&CSLCT EQ 0).NOCSS    CSS list is empty            @HHA         
         DC    A(@C&CNO)              Address of CSS list          @HHA         
         AGO   .GEN012                Branch to continue           @HHA         
.NOCSS   DC    A(0)                   No CSS list exists           @HHA         
.GEN012  ANOP  ,                                                   @HHA         
.*--------------------------------------------------------------------*         
.*                  Generate Partition List                           *         
.*--------------------------------------------------------------------*         
         AIF   (&PLCT EQ 0).EGPAL    Partition list is empty       @LBA         
         SPACE 1                                                   @LBA         
*----------------   Partition List  -------------------------------@LBA         
&SUB     SETA  1                      Point to first partition     @LBA         
&CWK     SETC  '@P&CNO'               Label for first partition    @LBA         
.PAL10   ANOP  ,                                                   @LBA         
&CWK     DC    CL8'&PNAME(&SUB)'      Partition name               @LBA         
         DC    AL1(&CSS(&SUB))        CSS id                       @HHA         
         DC    AL1(&PID(&SUB))        Partition image number       @HHC         
         DC    AL1(&USE(&SUB))        Partition usage type         @HDC         
         AIF   (&USESET(&SUB)).PAL12  Check if usage type given    @HDA         
         DC    XL1'00'                Reserved                     @N3C         
         AGO   .PAL13                 Skip                         @HDA         
.PAL12   ANOP                                                      @HDA         
         DC    XL1'80'                Indicate usage type set      @HDA         
.PAL13   ANOP                                                      @HDA         
         AIF   ('&DESCL' EQ '').PAL15 No description list given    @HAA         
         DC    CL32&PDESC(&SUB)       Partition description        @HAC         
         AGO   .PAL20                 Skip                         @HAA         
.PAL15   ANOP                                                      @HAA         
         DC    XL32'00'               Empty parameter list         @HAA         
.PAL20   ANOP                                                      @HAA         
&CWK     SETC  ''                     Blank out label              @LBA         
&SUB     SETA  &SUB+1                 Point to next entry in list  @LBA         
         AIF   (&SUB LE &PLCT).PAL10  Process next partition in list   *        
                                                                   @LBA         
.EGPAL   ANOP  ,                                                   @LBA         
.*                                                                              
.*--------------------------------------------------------------------*         
.*                  Generate Subchannel Set Values                    *         
.*--------------------------------------------------------------------*         
         AIF   (&CSLCT EQ 0).EGCSL   CSS list empty                @HHA         
         SPACE 1                                                   @HHA         
*----------------   Subchannel Set Values -------------------------@HHA         
&SUB     SETA  1                      Point to first CSS           @HHA         
&CWK     SETC  '@C&CNO'               Label for first CSS          @HHA         
.CSL10   ANOP  ,                                                   @HHA         
         AIF   ('&MAXDEV' EQ '').CAL10   MAXDEV parm not specified @08A         
&CWK     DC    AL1(&CSS1(&SUB))       CSS id                       @HHA         
         DC    XL3'00'                Reserved                     @HHA         
         DC    AL4(&SS0(&SUB))        Maximum devices in SCHSET 0  @HHA         
         DC    AL4(&SS1(&SUB))        Maximum devices in SCHSET 1  @HHA         
         DC    AL4(&SS2(&SUB))        Maximum devices in SCHSET 2  @L3A         
         DC    AL4(&SS3(&SUB))        Maximum devices in SCHSET 3  @LGA         
         AGO   .CAL101                                             @08A         
.CAL10   ANOP  ,                                                   @08A         
&CWK     DC    AL1(&CSID(&SUB))       CSS id                       @08A         
         DC    XL3'00'                Reserved                     @08A         
         DC    AL4(0)                 Maximum devices in SCHSET 0  @08A         
         DC    AL4(0)                 Maximum devices in SCHSET 1  @08A         
         DC    AL4(0)                 Maximum devices in SCHSET 2  @L3A         
         DC    AL4(0)                 Maximum devices in SCHSET 3  @LGA         
.CAL101  ANOP  ,                                                   @08A         
         DC    XL12'00'               Reserved                     @LGC         
         AIF   ('&CSSDESCL' EQ '').CAL15 No description list given @HHA         
         DC    CL32&CDESC(&SUB)       CSS description              @HHC         
         AGO   .CAL20                 Skip                         @HAA         
.CAL15   ANOP                                                      @HAA         
         DC    XL32'00'               Empty parameter list         @HAA         
.CAL20   ANOP                                                      @HAA         
&CWK     SETC  ''                     Blank out label              @HHA         
&SUB     SETA  &SUB+1                 Point to next entry in list  @HHA         
         AIF   (&SUB LE &CSLCT).CSL10  Process next CSS in list    @HHA         
.EGCSL   ANOP  ,                                                   @HHA         
.*                                                                              
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to @LBA         
         MNOTE ' '                     occur if NOGEN specified    @LBA         
         MEND                                                      @LBA         
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'FUNCTION - PCIE FUNCTION MACRO'                                 
         MACRO  --  FUNCTION INFORMATION                                        
&SYMBOL  FUNCTION &FID=,&PART=,&PCHID=,&DESC=,&VF=,&SUBF=,&UNIT=,      *        
               &UID=,&PNETID=,&TYPE=,&VCHID=,&PORT=                             
.*                                                                 @LVC         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = FUNCTION                                        */         
*/*                                                                  */         
*/*02*  DESCRIPTIVE NAME = FUNCTION information.                     */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL FUNCION  FID=xx                                      */         
*/*                      VF=n                                        */         
*/*                      PF                                      @M8A*/         
*/*                      PART=((lpname ! 0),(p1,p2,...))             */         
*/*                      PCHID=xxx                                   */         
*/*                    = UNIT=nnnn                                   */         
*/*                    = TYPE=nnnn                               @LMA*/         
*/*                      DESC=nnnnn                                  */         
*/*                      UID =xxxxxxxx                           @LHA*/         
*/*                      PNETID=(pnet1,...,pnet4)                    */         
*/*                      VCHID=xxx                               @LOA*/         
*/*                      PORT=n                                  @LVA*/         
*/*                                                                  */         
*/*01*  FUNCTION = The FUNCTION macro is used to define a PCIe       */         
*/*                function. It may be assigned to multiple          */         
*/*                partitions with at most one partition in the      */         
*/*                access list.                                      */         
*/*                                                                  */         
*/*01*  NOTES =  Each PCIe function in the I/O configuration must be */         
*/*              specified on a FUNCTION macro instruction in order  */         
*/*              to be used.                                         */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = FOR HCD use only                            */         
*/*                                                                  */         
*/*01*  INPUT =                                                      */         
*/*               DESC=     description of function                  */         
*/*             # FID=      2 hex digits unique function identifier  */         
*/*             # VF=       2 decimal digits    virtual function @LCA*/         
*/*               PF        boolean attribute (specified or not) @M8A*/         
*/*             # PART=     ((p1),(px,py,...))                       */         
*/*                          p1        - partition access list       */         
*/*                          px,py,..  - partition candidate list    */         
*/*             = UNIT=   up to 12 character alphanumeric string     */         
*/*                          with at most one hyphen                 */         
*/*             = TYPE=   up to 12 character alphanumeric string     */         
*/*                          with at most one hyphen                 */         
*/*               PCHID=  3 hex digits or *                          */         
*/*               UID=    8 hex digits                           @LHA*/         
*/*               PNETID= list of maximum 4 up to 16 char            */         
*/*                          alphanumeric physical network IDs   @LDA*/         
*/*               VCHID=  3 hex digits or *                      @LOA*/         
*/*               PORT=   1 decimal digit                        @LVA*/         
*/*            #  - Required keyword                                 */         
*/*            = UNIT and TYPE are exclusiv                      @LMA*/         
*/*              (TYPE is introduced with 2964 processor         @LMA*/         
*/*               and used if it is defined)                     @LMA*/         
*/*                                                                  */         
*/*01*  OUTPUT = FUNCTION control block                              */         
*/*                                                              @L8A*/         
*/*********************************************************************         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                      @L8A         
         GBLA  &SYSITRN           HCD statement number             @L8A         
         GBLA  &$STRLEN           String length                    @L8A         
         GBLB  &$ERR              Global error flag                @L8A         
         GBLB  &INTERR            Global error flag                @L8A         
         GBLC  &CWK               Character work variable          @L8A         
         LCLA  &AWK               Arithmetic work variable         @L8A         
         LCLA  &AWK1              Arithmetic work variable         @L8A         
         LCLA  &L                 Maximum or required operand lngth@L8A         
         LCLA  &LEN               Actual operand length            @L8A         
         LCLA  &NDX               Substring index                  @L8A         
         LCLA  &MAXSUB            Maximum number of sublist entries@L8A         
         LCLA  &SUB               Sublist element number           @L8A         
         LCLA  &SUBL              Sublist element number (palist)  @L8A         
         LCLA  &FLAG              Flag byte                                     
         LCLA  &FLAG2             Flag byte 2                      @LOA         
         LCLA  &PARTF             Operand flag  - PARTITION        @L8A         
         LCLA  &PCHDF             Operand flag  - PCHID or VCHID   @LOC         
         LCLA  &PNETF             Operand flag  - PNETID           @LDA         
         LCLA  &UIDF              Operand flag  - UID              @LHA         
         LCLA  &PACT              Number of entries in partition access*        
                                  list                             @L8A         
         LCLA  &PCCT              Number of entries in partition       *        
                                  candidate list                   @L8A         
         LCLA  &CSCT              Index in partition access list   @L8A         
         LCLA  &PNETNO            Number of PNET ids               @LDA         
         LCLA  &FTYP              TYPE flag                        @LMA         
         LCLB  &ERROR             Error flag                                    
         LCLC  &CNO               EBCDIC version of SYSITRN        @L8A         
         LCLC  &STRING            Work string                      @L8A         
         LCLC  &PACC(1)           Partition access list            @L8A         
         LCLC  &PCAN(128)         Partition candidate list         @LGC         
         LCLC  &PNID(4)           PNET ID list                     @LDA         
         LCLC  &TPNETID           Work field                       @LDA         
         LCLC  &TPCHID            Work field                       @L8A         
         LCLC  &TFID              Work field                       @L8A         
         LCLA  &TVF               Work field                       @LCA         
         LCLA  &TSUBF             Work field                       @LCA         
         LCLC  &DESCR             Description                      @L8A         
         LCLC  &DSC               Description                      @L8A         
         LCLC  &PARSTR            Partition list string            @L8A         
.*                                                                              
         ACTR  10000              Set for infinite loop control    @L8A         
&PARTF   SETA  128                PART specified                   @L8A         
&PCHDF   SETA  64                 PCHID or VCHID specified         @LOC         
&SUBFF   SETA  32                 SUBF    specified                @L8A         
&VFF     SETA  16                 VF      specified                @L8A         
&PNETF   SETA  8                  PNETID  specified                @LDA         
&UNITF   SETA  4                  UNIT    specified                @L8A         
&UIDF    SETA  2                  UID     specified                @LHA         
&PORTF   SETA  1                  PORT    specified                @LVA         
&FLAG    SETA  0                  Initial value                    @L8A         
&PFF     SETA  32                 PF    specified (FUNCFPFUN)      @M8A         
&PDEFF   SETA  16                 PCHID specified (FLAG2)          @LOA         
&VDEFF   SETA  8                  VCHID specified (FLAG2)          @LOA         
&FLAG2   SETA  0                  Initial value                    @LOA         
&TVF     SETA  0                  Default value                    @LCA         
&TSUBF   SETA  0                  Default value                    @LCA         
&PNETNO  SETA  0                      Initializes number of PNETid @LDA         
.*                                                                              
&SYMBOL  TXTHDR FUNCTION                                                        
.*                                                                              
.*                                                                              
.* -- allowed positional parameters:                                            
.*    PF - this is a physical function                                          
.*                                                                              
.*                                                                              
         AIF   (N'&SYSLIST EQ 0).XPOSPM    No positional parameter @M8A         
.*                                                                              
.*                                                                              
.* -- positional parameter #1                                                   
.*                                                                 @M8A         
.POSP10  ANOP  ,                                                   @M8A         
         AIF   ('&SYSLIST(1)' NE 'PF').POSBAD1 not PF              @M8A         
&FLAG2   SETA  &FLAG2+&PFF        PF specified                     @M8A         
         AGO   .XPOSPM            PF seen, continue                @M8A         
.*                                                                              
.*                                                                              
.POSBAD1 ANOP  ,                                                   @M8A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @M8A         
&ERROR   SETB  1                  Indicate error                   @M8A         
.*                                                                              
.*                                                                              
.*                                                                              
.XPOSPM  ANOP  ,                                                   @M8A         
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*                               (name)                               *         
.*       Validate PART           ((name),(name,name,...))             *         
.*                               ((0),(name,name,...)                 *         
.*                               ((name),(=))                         *         
.*                                                                @L8A*         
.**********************************************************************         
&PACT    SETA  0                      Initialize number of entries in  *        
                                      partition access list        @L8A         
&PCCT    SETA  0                      Initialize number of entries in  *        
                                      partition candidate list     @L8A         
         AIF   ('&PART' EQ '').NOPART      PARTITION not specified @L8A         
&FLAG    SETA  &FLAG+&PARTF           Indicate PART specified      @L8A         
.*                                                                              
&MAXSUB  SETA  128                    Maximum number of cand part  @LGC         
&MAXSUB1 SETA  1                      Maximum number of acc part   @L8A         
&L       SETA  8                      Maximum PARTITION length                  
.*                                                                              
         AIF   ('&PART'(1,2) EQ '((').PART100 double parens ?      @L8A         
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
.*                                                                              
.PART001 ANOP ,                                                    @L8A         
&IP      SETA  N'&PART                Number of partitions in list @L8A         
&IL      SETA  1                      Only one partition in list   @L8A         
&SUB     SETA  1                      Address first sublist entry  @L8A         
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
.PART005 ANOP  ,                                                   @L8A         
&STRING  SETC  'ACCESS'               Indicate handling part list  @L8A         
         AIF   (&IP GT &MAXSUB1).PARTE01             Too many operands *        
                                      in partition list            @L8A         
         AIF   ('&PART(&SUB)' NE '0').PART010 partition name       @L8A         
         AIF   (N'&PART EQ &SUB).XPART       PART=(0) specified    @L8A         
         AIF   (N'&PART GT &SUB).PARTE05 PART=(0,name,...)         @L8A         
.PART010 ANOP  ,                                                   @L8A         
&PARSTR  SETC  '&PART(&SUB)'                                       @L8A         
         MNOTE 0,'PART=&PARSTR'                                                 
         AIF   ('&PARSTR' EQ '').PARTE02           No partition name   *        
                                      specified                    @L8A         
.*                                                                              
.PART020 ANOP  ,                                                   @L8A         
&POS     SETC  '&SUB'                 sub entry position           @L8A         
         PARTTEST NAME=&PARSTR,SUB=&POS                            @L8A         
         AIF   (NOT &$ERR).PART030    Continue if no error detected@L8A         
&ERROR   SETB  1                      Otherwise indicate error     @L8A         
         AGO   .PART040               and continue                 @L8A         
.*                                                                              
.PART030 ANOP ,                                                    @L8A         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @L8A         
&PACC(&PACT) SETC '&PARSTR'           Save partition name          @L8A         
.*                                                                              
.PART040 ANOP                         Process next partition       @L8A         
&SUB     SETA &SUB+1                  Point to next sublist entry  @L8A         
         AIF  (&SUB LE N'&PART).PART010  More partitions ?         @L8A         
         AGO   .XPART                 and continue with next parameter *        
                                                                   @L8A         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry  in access list          *         
.**********************************************************************         
.PART100 ANOP  ,                                                   @L8A         
&STRING  SETC  'ACCESS'               Indicate handling Access list@L8A         
&SUBL    SETA  1                      Access list is first sublist @L8A         
&IP      SETA  N'&PART(&SUBL)        Number of partitions in sublst@L8A         
&IL      SETA  N'&PART               Number of sublists            @L8A         
         AIF   (&IL GT 2).PARTE05    Too many sublists             @L8A         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (&IP GT &MAXSUB1).PARTE01          Too many operands in *        
                                      partition list               @L8A         
&SUB     SETA  1                      Start with 1st partition     @L8A         
.PART105 ANOP ,                                                    @L8A         
&PARSTR  SETC  '&PART(&SUBL,&SUB)'                                 @L8A         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @L8A         
         AIF   ((&IP EQ 1) AND                                         *        
               ('&PARSTR' EQ  '0')).PART200     Null access list   @L8A         
.PART110 ANOP  ,                                                   @L8A         
         AIF   ('&PARSTR' EQ '').PARTE02       No partition name   @L8A         
         PARTTEST NAME=&PARSTR,SUB=&POS                            @L8A         
         AIF   (NOT &$ERR).PART120    Continue if no error detected@L8A         
&ERROR   SETB  1                      Otherwise indicate error     @L8A         
         AGO   .PART130               and continue                 @L8A         
.*                                                                              
.PART120 ANOP ,                                                    @L8A         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @L8A         
&PACC(&PACT) SETC '&PARSTR'           Save partition name          @L8A         
.*                                                                              
.PART130 ANOP                         Process next partition       @L8A         
&SUB     SETA &SUB+1                  Point to next sublist entry  @L8A         
         AIF  (&SUB LE &IP).PART105   More partitions              @L8A         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry in candidate list        *         
.**********************************************************************         
.*       The second subparameter of the PARTITION parameter is the              
.*       candidate list                                                         
.*                                                                              
.PART200 ANOP  ,                                                   @L8A         
&SUBL    SETA  &SUBL+1               Increment sublist count       @L8A         
&IP      SETA  N'&PART(&SUBL)                                      @L8A         
&PARSTR  SETC  '&PART(&SUBL)'                                      @L8A         
         AIF   ('&PARSTR' EQ '').XPART         No 2nd subparameter @L8A         
.*                                                                              
.PART210 ANOP  ,                                                   @L8A         
&SUB     SETA  1                      Address first sublist entry  @L8A         
&IP      SETA  N'&PART(&SUBL)        Number of partitions in CSS   @L8A         
&PARSTR  SETC  '&PART(&SUBL,&SUB)'                                 @L8A         
.*                                                                              
&STRING  SETC  'CANDIDATE'            Indicate handling Candidate list *        
                                                                   @L8A         
         AIF   (&IP GT &MAXSUB).PARTE01  Too many operands             *        
                                      in candidate list            @L8A         
         AIF   ('&PARSTR' NE '=').PART250          Different candidate *        
                                      list specified               @L8A         
&CSCT    SETA  0                      Check all access list entries@L8A         
.PART220 ANOP  ,                                                   @L8A         
         AIF  (&CSCT GE &PACT).XPART    No more partitions in access   *        
                                      list                         @L8A         
&CSCT    SETA  &CSCT+1                Increment number of of index in  *        
                                      partition access list        @L8A         
&PCCT    SETA  &PCCT+1                Increment number of entries in   *        
                                      partition candidate list     @L8A         
&PCAN(&PCCT) SETC '&PACC(&CSCT)'      Save partition name          @L8A         
         AGO   .PART220               and continue                 @L8A         
.*                                                                              
.PART250 ANOP  ,                                                   @L8A         
&PARSTR  SETC  '&PART(&SUBL,&SUB)'                                 @L8A         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @L8A         
         AIF   ('&PARSTR' EQ '').PARTE02             No partition name *        
                                      specified                    @L8A         
         PARTTEST NAME=&PARSTR,SUB=&POS                            @L8A         
         AIF   (NOT &$ERR).PART260    Continue if no error detected@L8A         
&ERROR   SETB  1                      Otherwise indicate error     @L8A         
         AGO   .PART270               and continue                 @L8A         
.*                                                                              
.PART260 ANOP ,                                                    @L8A         
&PCCT    SETA  &PCCT+1                Increment  number of entries in  *        
                                      partition candidate list     @L8A         
&PCAN(&PCCT) SETC '&PARSTR'             Save partition name        @L8A         
.*                                                                              
.PART270 ANOP                         Process next partition       @L8A         
&SUB     SETA &SUB+1                  Point to next sublist entry  @L8A         
         AIF  (&SUB LE &IP).PART250   More partitions              @L8A         
.*                                                                              
         AGO  .XPART                  and continue                 @L8A         
.*                                                                              
.PARTE01 ANOP  ,                                                   @L8A         
         MNOTE 8,'015 PART &STRING LIST &SUB EXCEEDS &MAXSUB1 ENTRIES.'         
&ERROR   SETB  1                      Indicates error              @L8A         
         AGO   .XPART                 and continue                 @L8A         
.*                                                                              
.PARTE02 ANOP  ,                                                   @L8A         
         MNOTE 8,'017 PARTITION NAME REQUIRED IN SUBLIST ENTRY &SUB OF *        
               &STRING LIST.'                                      @L8A         
&ERROR   SETB  1                      Indicates error              @L8A         
         AGO   .XPART                 and continue                 @L8A         
.*                                                                              
.PARTE03 ANOP  ,                                                   @L8A         
         MNOTE 8,'003 PARTITION SUBLIST ENTRY &POS IS INVALID - &PARSTR*        
               .'                                                  @L8A         
&ERROR   SETB  1                      Indicates error              @L8A         
         AGO   .XPART                 and continue                 @L8A         
.*                                                                              
.PARTE05 ANOP  ,                                                   @L8A         
         MNOTE 8,'015 PART PARAMETER EXCEEDS &IL SUBLIST ENTRIES.' @L8A         
&ERROR   SETB  1                      Indicates error              @L8A         
         AGO   .XPART                 and continue                 @L8A         
.*                                                                              
.*                                                                              
.*                                                                              
.NOPART  MNOTE 8,'002 PART KEYWORD NOT SPECIFIED.'                 @L8A         
&ERROR   SETB 1                       Indicate error               @L8A         
         AGO   .XPART                 and exit                     @L8A         
.*                                                                              
.XPART   ANOP  ,                      End of handling parameter    @L8A         
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PNETID         (name,...)                           *         
.*                               name                                 *         
.*                                                                @LDA*         
.**********************************************************************         
         AIF   ('&PNETID' EQ '').XPNET     PNETID not specified    @LDA         
&FLAG    SETA  &FLAG+&PNETF           Indicate PNETID specified    @LDA         
.*                                                                              
&MAXSUB  SETA  4                      Maximum number of PNET ids   @LDA         
&L       SETA  16                     Maximum name length          @LDA         
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
.*                                                                              
.PNET001 ANOP ,                                                    @LDA         
&IP      SETA  N'&PNETID              Number of names in list      @LDA         
&SUB     SETA  1                      Address first sublist entry  @LDA         
         AIF   (&IP GT &MAXSUB).PNETE01   Too many operands in list@LDA         
.PNET010 ANOP  ,                                                   @LDA         
&TPNETID SETC  '&PNETID(&SUB)'                                     @LDA         
         AIF   ('&TPNETID' EQ '').PNET040   No PNET id specified   @LDA         
.*                                                                              
&PNETNO  SETA  &PNETNO+1              Increment number of PNET ids @LDA         
         AIF   (K'&TPNETID GT &L).PNETE03  PNET ID too long        @LDA         
&POS     SETC  '&SUB'                 sub entry position           @LDA         
         ALPHANUM STRING=&TPNETID                                  @LFC         
         AIF   (&INTERR).PNETE02      Invalid character found      @LDA         
.*                                                                              
.*                                                                              
.PNET040 ANOP                         Process next partition       @LDA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LDA         
         AIF  (&SUB LE &IP).PNET010   More PNET IDs   ?            @LDA         
         AIF  (&PNETNO EQ 0).PNETE04  No PNET id specified         @LDA         
         AGO   .XPNET                 and continue with next parameter *        
                                                                   @LDA         
.*                                                                              
.*                                                                              
.PNETE01 ANOP  ,                                                   @LDA         
         MNOTE 8,'015 PNETID EXCEEDS &MAXSUB ENTRIES.'             @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.PNETE02 ANOP  ,                                                   @LDA         
         MNOTE 8,'017 PNETID ENTRY &SUB CONTAINS INVALID CHARACTER.'   *        
                                                                   @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.PNETE03 ANOP  ,                                                   @LDA         
         MNOTE 8,'003 PNETID ENTRY &SUB EXCEEDS &L CHARACTERS.'    @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.PNETE04 ANOP  ,                                                   @LDA         
         MNOTE 8,'015 PNETID PARAMTER CONTAINS NO NAME.'           @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.*                                                                              
.*                                                                              
.XPNET   ANOP  ,                      End of handling parameter    @LDA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PCHID                3 Hex digits or *          @L8A*         
.*                                                                    *         
.**********************************************************************         
.CKPCHD  ANOP                                                      @L8A         
         AIF   ('&PCHID' EQ '').XPCHID  No PCHID specified         @L8A         
&FLAG    SETA  &FLAG+&PCHDF           PCHID or VCHID specified     @LOC         
&FLAG2   SETA  &FLAG2+&PDEFF          PCHID specified              @LOA         
         AIF   ('&PCHID' EQ '*').XPCHID                            @L8A         
&L       SETA  3                             Required PCHID length @L8A         
&TPCHID  SETC  '&PCHID'                Save PCHID value            @L8A         
         AIF   (K'&TPCHID GT &L).PCHDE05  PCHID value > 3 chars    @L8A         
         HEXCHECK STRING=&TPCHID                                   @L8A         
         AIF   (&$ERR).PCHDE04         Report error if encountered @L8A         
         AGO   .XPCHID                 Go to next parameter        @L8A         
.*                                                                 @L8A         
.PCHDE04 ANOP  ,                                                   @L8A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN VALUE OF PCHID PARA*        
               METER.'                                             @L8A         
&ERROR   SETB  1                       Indicates error             @L8A         
         AGO   .XPCHID                 and continue                @L8A         
.*                                                                 @L8A         
.PCHDE05 ANOP  ,                                                   @L8A         
         MNOTE 8,'022 PCHID VALUE MUST BE &L DIGITS.'              @L8A         
&ERROR   SETB  1                       Indicates error             @L8A         
         AGO   .XPCHID                 and continue                @L8A         
.*                                                                 @L8A         
.XPCHID  ANOP  ,                                                   @L8A         
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate VCHID                3 Hex digits or *          @LOA*         
.*                                                                    *         
.**********************************************************************         
.CKVCHD  ANOP                                                      @LOA         
         AIF   ('&VCHID' EQ '').XVCHID  No VCHID specified         @LOA         
&FLAG    SETA  &FLAG+&PCHDF           PCHID or VCHID specified     @LOA         
&FLAG2   SETA  &FLAG2+&VDEFF          VCHID specified              @LOA         
         AIF   ('&VCHID' EQ '*').XVCHID                            @LOA         
&L       SETA  3                        Required VCHID length      @LOA         
&TVCHID  SETC  '&VCHID'                 Save VCHID value           @LOA         
         AIF   (K'&TVCHID GT &L).VCHDE05  VCHID value ^= 3 chars   @LOA         
         HEXCHECK STRING=&TVCHID                                   @LOA         
         AIF   (&$ERR).VCHDE04         Report error if encountered @LOA         
         AGO   .XVCHID                 Go to next parameter        @LOA         
.*                                                                 @LOA         
.VCHDE04 ANOP  ,                                                   @LOA         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN VALUE OF VCHID PARA*        
               METER.'                                             @LOA         
&ERROR   SETB  1                       Indicate error              @LOA         
         AGO   .XVCHID                 and continue                @LOA         
.*                                                                 @LOA         
.VCHDE05 ANOP  ,                                                   @LOA         
         MNOTE 8,'022 VCHID VALUE MUST BE &L DIGITS.'              @LOA         
&ERROR   SETB  1                       Indicate error              @LOA         
         AGO   .XVCHID                 and continue                @LOA         
.*                                                                 @LOA         
.XVCHID  ANOP  ,                                                   @LOA         
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate FID        1 function identifier                    *         
.*                           Only checks for 4 digit function id. @LOC*         
.*                                                                    *         
.*                                                                    *         
.**********************************************************************         
.CKFID   ANOP                                                                   
&MAXFID SETA   1                       Maximum number of function ids           
         AIF  ('&FID' EQ '').NOFID     FID not specified                        
.*                                                                              
.*                                                                              
.* --------------------                                                         
.*                                                                              
&MAXSUB  SETA  2                     Maximum number of operands  @M7A           
         AIF   (N'&FID GT &MAXSUB).FIDOPER    too many operands  @M7A           
&WFID    SETC  '&FID'                    save whole operand      @M7A           
&TFID    SETC  '&FID(1)'                 save function id        @M7A           
&REPL    SETC  '&FID(2)'                 save replication factor @M7A           
.*       MNOTE 0,'007 WFID = &WFID.'                             @M7A           
.*       MNOTE 0,'007 TFID = &TFID.'                             @M7A           
.*       MNOTE 0,'007 REPL = &REPL.'                             @M7A           
         AGO   .CKFID1                   proceed                 @M7A           
.*                                                                              
.*                                                                              
.FIDOPER MNOTE 8,'015 FID PARAMETER EXCEEDS ''&MAXSUB'' SUBLIST ENTRIES*        
               .'                                                @M7A           
&ERROR   SETB  1                      Indicates error            @M7A           
         AGO   .XFID                  Check next keyword         @M7A           
.*                                                                              
.*                                                                              
.* -----------------------------------                                          
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*       Validate syntax of FID operand                               *         
.**********************************************************************         
.CKFID1  ANOP                                                      @M7A         
&L       SETA  4                             maximum FID length    @LOC         
.* &TFID    SETC  '&FID'                Save FID value             @M7D         
         AIF   (K'&TFID GT &L).FIDE05   FID value > 4 chars        @LOC         
         HEXCHECK STRING=&TFID                                     @L8A         
         AIF   (&$ERR).FIDE04          Report error if encountered @L8A         
         AGO   .XFID                   Go to next parameter        @L8A         
.*                                                                 @L8A         
.FIDE04  ANOP  ,                                                   @L8A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN VALUE OF FID PARAME*        
               TER.'                                               @L8A         
.*       MNOTE 0,'007 TFID = &TFID.'                               @M7A         
&ERROR   SETB  1                       Indicates error             @L8A         
         AGO   .XFID                   and continue                @L8A         
.*                                                                 @L8A         
.FIDE05  ANOP  ,                                                   @L8A         
         MNOTE 8,'022 FID VALUE MUST BE AT MOST &L DIGITS.'        @LOC         
&ERROR   SETB  1                       Indicates error             @L8A         
         AGO   .XFID                   and continue                @L8A         
.*                                                                              
.*                                                                              
.NOFID   MNOTE 8,'002 FID KEYWORD NOT SPECIFIED.'                  @L8A         
&ERROR   SETB 1                       Indicate error               @L8A         
         AGO   .XFID                  and exit                     @L8A         
.*                                                                              
.XFID    ANOP  ,                                                   @L8A         
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate VF         1 virtual function identifier            *         
.*                           Only checks for 2 digit VF id            *         
.*                                                                    *         
.*                                                                @LCA*         
.**********************************************************************         
.CKVF    ANOP                                                                   
&MAXFID  SETA   1                      Maximum number of VF ids    @LCA         
&L       SETA   3                      maximum VF length           @LOC         
         AIF  ('&VF' EQ '').XVF        VF not specified            @LCA         
&FLAG    SETA  &FLAG+&VFF             Indicate VF specified        @LCA         
.**********************************************************************         
.*       Validate syntax of VF operand                                *         
.**********************************************************************         
&L       SETA  3                       maximum VF length           @LOC         
         AIF   (K'&VF GT &L).VFE05     VF  value > max # chars     @LCA         
         DECIMAL STRING=&VF                                        @LCA         
         AIF   (&$ERR).VFE04           Report error if encountered @LCA         
&TVF     SETA  &VF                     Save VF value               @LCA         
         AGO   .XVF                    Go to next parameter        @LCA         
.*                                                                 @LCA         
.VFE04   ANOP  ,                                                   @LCA         
         MNOTE 8,'047 INVALID DECIMAL DIGIT ''&CWK'' IN VALUE &VF OF VF*        
                PARAMTER.'                                         @LCA         
&ERROR   SETB  1                       Indicates error             @LCA         
         AGO   .XVF                    and continue                @LCA         
.*                                                                 @LCA         
.VFE05   ANOP  ,                                                   @LCA         
         MNOTE 8,'022 VF VALUE MUST BE AT MOST &L DIGITS.'         @LOC         
&ERROR   SETB  1                       Indicates error             @LCA         
         AGO   .XVF                    and continue                @LCA         
.*                                                                              
.XVF     ANOP  ,                                                   @LCA         
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate SUBF       1 virtual function identifier            *         
.*                           Only checks for 2 digit SUBF id          *         
.*                                                                    *         
.*                                                                @LCA*         
.**********************************************************************         
.CKSUBF  ANOP                                                                   
&MAXFID  SETA   1                      Maximum number of SUBF ids  @LCA         
&L       SETA  1                       Required SUBF length        @LCA         
         AIF  ('&SUBF' EQ '').XSUBF    SUBF not specified          @LCA         
&FLAG    SETA  &FLAG+&SUBFF           Indicate SUBF specified      @LCA         
.**********************************************************************         
.*       Validate syntax of SUBF operand                              *         
.**********************************************************************         
&L       SETA  2                       Required SUBF length        @LCA         
         AIF   (K'&TSUBF GT &L).SUBFE5 SUBF value too long         @LCA         
         DECIMAL STRING=&TSUBF                                     @LCA         
         AIF   (&$ERR).VSUBFE4         Report error if encountered @LCA         
&TSUBF   SETA  &SUBF                   Save SUBF value             @LCA         
         AGO   .XSUBF                  Go to next parameter        @LCA         
.*                                                                 @LCA         
.VSUBFE4 ANOP  ,                                                   @LCA         
         MNOTE 8,'047 INVALID DEC DIGIT ''&CWK'' IN VALUE OF SUBF PARAM*        
               ETER.'                                              @LCA         
&ERROR   SETB  1                       Indicates error             @LCA         
         AGO   .XSUBF                  and continue                @LCA         
.*                                                                 @LCA         
.VSUBFE5 ANOP  ,                                                   @LCA         
         MNOTE 8,'022 SUBF VALUE MUST BE &L DIGITS.'               @LCA         
&ERROR   SETB  1                       Indicates error             @LCA         
         AGO   .XSUBF                  and continue                @LCA         
.*                                                                              
.XSUBF   ANOP  ,                                                   @LCA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate UID        1 function identifier                    *         
.*                                checks for 8 digit UID              *         
.*                                                                    *         
.*                                                                    *         
.**********************************************************************         
.CKUID   ANOP                                                                   
&MAXFID  SETA   1                      Maximum number of UIDs      @LHA         
&L       SETA  8                       Required UID length         @LHA         
         AIF  ('&UID' EQ '').XUID      UID not specified           @LHA         
&FLAG    SETA  &FLAG+&UIDF            Indicate UID specified       @LHA         
.**********************************************************************         
.*       Validate syntax of UID operand                               *         
.**********************************************************************         
&L       SETA  8                       Required UID length         @LHA         
         AIF   (K'&UID GT &L).UIDE05   UID value > 8 chars         @LHA         
         HEXCHECK STRING=&UID                                      @LHA         
         AIF   (&$ERR).UIDE04          Report error if encountered @LHA         
         AGO   .XUID                   Go to next parameter        @LHA         
.*                                                                 @LHA         
.UIDE04  ANOP  ,                                                   @LHA         
         MNOTE 8,'047 INVALID DECIMAL DIGIT ''&CWK'' IN UID VALUE PARAM*        
               ETER. '                                             @LHA         
&ERROR   SETB  1                       Indicates error             @LHA         
         AGO   .XUID                   and continue                @LHA         
.*                                                                 @LHA         
.UIDE05  ANOP  ,                                                   @LHA         
         MNOTE 8,'022 UID VALUE MUST BE &L DIGITS.'                @LHA         
&ERROR   SETB  1                       Indicates error             @LHA         
         AGO   .XUID                   and continue                @LHA         
.*                                                                              
.XUID    ANOP  ,                                                   @LHA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate TYPE                 type <= 12 alphanumerics   @LMA*         
.*       (new with 2964 - replaces UNIT= keyword)                 @LMA*         
.*                                                                    *         
.*       if both (UNIT and TYPE) an error is written              @LNA*         
.**********************************************************************         
.CKTYPE  ANOP                                                      @LMA         
&L       SETA  12                       Maximum TYPE length        @LMA         
.*                                                                              
.*                                                                              
.* @LQD -- do not set a default function type here:                             
.*         type defaulting is done in CBDMMPRC based on                         
.*         functions with the same channel ID migrated earlier                  
.*                                                                              
.* @LVA -- for numeric type identifiers, see CBDZXMAP, PCTYP_F                  
.*                                                                              
.*                                                                              
.* &FTYP    SETA  2                Default type to ROCE       @LNA @LQD         
.*                                                                              
.*                                                                              
         AIF   ('&TYPE' EQ '').XTYPE    TYPE not specified         @LNC         
&FLAG    SETA  &FLAG+&UNITF             Indicate TYPE  specified   @LQM         
         AIF   (K'&TYPE LE &L).TRANTYP  Maximum number of chars    @LNC         
         MNOTE 8,'033 TYPE PARAMETER EXCEEDS &L CHARACTERS.'       @LMA         
.*                                                                              
&ERROR   SETB  1                        Indicates error            @LMA         
         AGO  .XUNIT                    Go to next keyword         @LNA         
.*                                      Skip UNIT                  @LNA         
.*                                                54 lines deleted @LND         
.*                                                                              
.*       Translate TYPE string to internal ITYPE value                          
.*                                                                              
.TRANTYP ANOP                                                      @LNA         
         AIF ('&TYPE' EQ '').TYPDEF    Default to ROCE             @LMA         
         AIF ('&TYPE' NE 'ROCE').TYPEDC Not ROCE                   @LNC         
&FTYP    SETA 2                        Type=ROCE                   @LMA         
         AGO  .XTYPF                   Go to next keyword          @LMA         
.*                                                                3@LND         
.TYPEDC  AIF ('&TYPE' NE 'ZEDC-EXPRESS').TYPEDC1  Not ZEDC         @LMA         
&FTYP    SETA 3                        Type=ZEDC                   @LMA         
         AGO  .XTYPF                   Go to next keyword          @LMA         
.TYPEDC1 AIF ('&TYPE' NE 'ZEDC').TYPSORT  Not ZEDC                 @LNC         
&FTYP    SETA 3                        Type=ZEDC                   @LMA         
         AGO  .XTYPF                   Go to next keyword          @LMA         
.*                                                                3@LND         
.TYPSORT AIF ('&TYPE' NE 'SORT').TYPISM not SORT                   @LOC         
&FTYP    SETA 4                        Type=SORT                   @LMA         
         AGO  .XTYPF                   Go to next keyword          @LMA         
.*                                                                              
.TYPISM  AIF ('&TYPE' NE 'ISM').TYPRCE not ISM                     @LRC         
&FTYP    SETA 5                        Type=ISM                    @LOA         
         AGO  .XTYPF                   Go to next keyword          @LOA         
.*                                                                              
.TYPRCE  AIF ('&TYPE' NE 'RCE').TYPHYL not RCE                     @LXC         
&FTYP    SETA 8                        Type=RCE                    @LRC         
         AGO  .XTYPF                   Go to next keyword          @LPA         
.*                                                                              
.TYPHYL  AIF ('&TYPE' NE 'HYL').TYPNVME not HYL                    @M0C         
&FTYP    SETA 7                         Type=HYL                   @LVA         
         AGO  .XTYPF                    Go to next keyword         @LVA         
.*                                                                              
.TYPNVME AIF ('&TYPE' NE 'NVME').TYPMTV   not  NVME                @M2C         
&FTYP    SETA 11                          Type NVME                @M0A         
         AGO  .XTYPF                      go to next keyword       @M0A         
.*                                                                              
.TYPMTV AIF ('&TYPE' NE 'MTV').TYPCX41    not  MTV                 @M2A         
&FTYP    SETA 14                          Type MTV                 @M2A         
         AGO  .XTYPF                      go to next keyword       @M2A         
.*                                                                              
.TYPCX41 AIF ('&TYPE' NE 'ROCE-2').TYPCX42 not ROCE-2              @LVA         
&FTYP    SETA 10                        Type=ROC2                  @LVA         
         AGO  .XTYPF                    Go to next keyword         @LVA         
.*                                                                3@LND         
.TYPCX42 AIF ('&TYPE' NE 'ROC2').TYPCNW not ROC2                   @M8C         
&FTYP    SETA 10                        Type=ROC2                  @LVA         
         AGO  .XTYPF                    Go to next keyword         @LVA         
.*                                                                              
.TYPCNW  AIF ('&TYPE' NE 'CNW').TYPERR    not  CNW                 @M8A         
&FTYP    SETA 13                          Type CNW = 0x0d          @M8A         
         AGO  .XTYPF                      go to next keyword       @M0A         
.*                                                                3@LND         
.TYPERR  MNOTE 8,'003 TYPE=&TYPE IS INVALID.'                      @LMA         
&ERROR   SETB 1                        Indicate error              @LMA         
         AGO  .XUNIT                   Go to next keyword          @LNC         
.*                                                                3@LND         
.TYPDEF  ANOP                          Default type to ROCE        @LMA         
&FTYP    SETA 2                        Default type to ROCE        @LMA         
.*                                                                              
.XTYPF   ANOP                                                      @LNC         
         AIF   ('&UNIT' EQ '').XUNIT    UNIT not specified         @LNA         
         MNOTE 8,'051 TYPE PARAMETER AND UNIT PARAMETER ARE MUTUALLY EX*        
               CLUSIVE.'                                           @LNA         
&ERROR   SETB 1                        Indicate error              @LNA         
         AGO  .XUNIT                   Go to next keyword          @LNA         
.*                                     (skip UNIT)                 @LNA         
.*                                                                              
.XTYPE   ANOP                          Go and check UNIT           @LMA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate UNIT                 type <= 12 alphanumerics       *         
.*       (used only if TYPE was not specified)                        *         
.*                                                                    *         
.**********************************************************************         
.CKUNIT  ANOP                                                                   
&L       SETA  12                       Maximum UNIT length                     
         AIF   ('&UNIT' EQ '').XUNIT   UNIT not specified                       
         AIF   (K'&UNIT LE &L).TRANUNI Maximum number of chars     @LNC         
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'                    
&ERROR   SETB  1                       Indicates error                          
         AGO .XUNIT                                                @LNA         
.*                                                54 lines deleted @LND         
.*                                                                              
.*       Translate UNIT string to internal ITYPE value                          
.TRANUNI ANOP                                                      @LNC         
         AIF ('&UNIT' EQ '').UNIDEF    Exit if null                             
&FLAG    SETA  &FLAG+&UNITF            Indicate TYPE specified     @LQA         
         AIF ('&UNIT' NE 'ROCE').UNIED Not ROCE                    @LNC         
&FTYP    SETA 2                        Type=ROCE                   @LMA         
         AGO  .XUNIT                   Go to next keyword          @LMA         
.UNIED   AIF ('&UNIT' NE 'ZEDC-EXPRESS').UNIED1  Not ZEDC-EXPRESS  @LNC         
&FTYP    SETA 3                        Type=ZEDC                   @LMA         
         AGO  .XUNIT                   Go to next keyword          @LMA         
.UNIED1  AIF ('&UNIT' NE 'ZEDC').UNISRT  Not ZEDC                  @LNC         
&FTYP    SETA 3                        Type=ZEDC                   @LMA         
         AGO  .XUNIT                   Go to next keyword          @LMA         
.UNISRT  AIF ('&UNIT' NE 'SORT').UNICNW  Not ZSORT                 @M8C         
&FTYP    SETA 4                        Type=ZSORT                  @LMA         
         AGO  .XUNIT                   Go to next keyword          @LMA         
.*                                                                              
.UNICNW  AIF ('&UNIT' NE 'CNW').UNIERR Not CNW                     @M8A         
&FTYP    SETA 13                       Type CNW = 0x0d             @M8A         
         AGO  .XUNIT                   Go to next keyword          @M8A         
.*                                                                              
.UNIERR  MNOTE 8,'003 UNIT=&UNIT IS INVALID.'                      @LNC         
&ERROR   SETB 1                        Indicate error              @LNC         
         AGO  .XUNIT                   Go to next keyword          @LNC         
.*                                                                              
.UNIDEF  ANOP                          Default TYPE to ROCE        @LMA         
&FTYP    SETA 2                                                    @LMA         
.*                                                                              
.XUNIT   ANOP                                                                   
                                                                                
                                                                                
                                                                                
.**********************************************************************         
.*                                                                    *         
.*       Validate PORT                1 decimal digit 1..2            *         
.*                                                                    *         
.**********************************************************************         
         AIF  ('&PORT' EQ '').XPORT   PORT not specified           @LVA         
                                                                                
                                                                                
                                                                                
.* -- validate that PORT does not use sublist format                            
.*                                                                              
         AIF (N'&PORT LE 1).VPORTL    operand in sublist format?   @LVA         
         MNOTE 8,'014 PORT PARAMETER MAY NOT BE A SUBLIST.'        @LVA         
&ERROR   SETB 1                       Indicate error               @LVA         
         AGO  .XPORT                                               @LVA         
                                                                                
                                                                                
                                                                                
.* -- validate length of PORT parameter                                         
.*                                                                              
.VPORTL  ANOP                                                      @LVA         
&L       SETA  1                      Required PORT length         @LVA         
         AIF (K'&PORT EQ &L).PORTLEN                               @LVA         
         MNOTE 8,'022 PORT PARAMETER MUST BE &L DIGIT.'            @LVA         
&ERROR   SETB 1                       Indicate error               @LVA         
         AGO  .XPORT                                               @LVA         
.PORTLEN ANOP                                                      @LVA         
                                                                                
                                                                                
                                                                                
.* -- validate value of PORT parameter                                          
.*                                                                              
         AIF (('&PORT' EQ '1') OR ('&PORT' EQ '2')).GOODPRT        @LVA         
.BADPRT  ANOP                                                      @LVA         
&CWK     SETC '&PORT'                 Isolate invalid character    @LVA         
         MNOTE 8,'021 INVALID DIGIT ''&CWK'' IN PORT PARAMETER.'   @LVA         
&ERROR   SETB 1                       Indicate error               @LVA         
         AGO  .XPORT                                               @LVA         
                                                                                
.GOODPRT ANOP                                                      @LVA         
&FLAG    SETA  &FLAG+&PORTF           Indicate PORT specified      @LVA         
         AGO  .XPORT                     tmp, Go to next keyword                
                                                                                
.* &L       SETA  1                         Required PORT length                
.*          AIF   ('&PORT' EQ '').XPORT     PORT not specified                  
.*                                                                              
.*          AIF   ('&TYPE' EQ 'CL5').AIDNREQ CL5 has no AID                     
.*          AIF   ('&AID' EQ '').PRTMAID     AID not specified                  
.* .AIDNREQ ANOP                             AID not required                   
.*                                                                              
.*          AIF (N'&PORT GT 1).PRTSUBL      Operand is in sublist               
.* .*                                                     format                
.*          AIF (K'&PORT EQ &L).PORTLEN     Length of AID (no parens)           
.*          MNOTE 8,'022 PORT PARAMETER MUST BE &L DIGIT.'                      
.* &ERROR   SETB 1                          Indicate error                      
.* .PORTLEN ANOP                                                                
.*          AIF (('&PORT' EQ '1') OR ('&PORT' EQ '2') OR                        
.*                ('&PORT' EQ '3') OR ('&PORT' EQ '4')).GOODPRT                 
.* .BADPRT  ANOP                            Invalid character in PORT           
.* &CWK     SETC '&PORT'                    Isolate invalid character           
.*          MNOTE 8,'021 INVALID DIGIT ''&CWK'' IN PORT PARAMETER.'             
.* &ERROR   SETB 1                          Indicate error                      
.*          AGO  .XPORT                                                         
.* .*                                                                           
.* .PRTSUBL MNOTE 8,'014 PORT PARAMETER MAY NOT BE A SUBLIST.'                  
.* &ERROR   SETB 1                          Indicate error                      
.*          AGO  .XPORT                     End parameter                       
.* .*                                                                           
.* .PRTMAID MNOTE 8,'014 AID PARAMETER MISSING.'                                
.* &ERROR   SETB 1                          Indicate error                      
.*          AGO  .XPORT                     End parameter                       
.* .*                                                                           
.* .GOODPRT ANOP                                                                
.* &FLAG2   SETA  &FLAG2+&PORTF             indicate PORT specified             
.* .*                                                                           
.XPORT ANOP  ,                                                                  
.*                                                                              
                                                                                
                                                                                
                                                                                
                                                                                
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @L8A         
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @L8A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @L8A         
.*                                   (Asmblr checks for end quote) @L8A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @L8A         
&ERROR   SETB  1                      Indicate error               @L8A         
.DELEN   ANOP                                                      @L8A         
&DESCR   SETC  '&DESC'                Set description              @L8A         
&LEN     SETA  K'&DESC-2              Length of description        @L8A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @L8A         
&DSC     SETC  '&DESC'(2,&LEN)        Set description string       @L8A         
         STRLEN STRING=&DSC           Determine length             @L8A         
&LEN     SETA  &$STRLEN               Sets real length             @L8A         
         AIF   (&LEN  LE &L).GENTEXT  Less than maximum            @L8A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @L8A         
&ERROR   SETB  1                      Indicate error               @L8A         
.DENULL  ANOP                                                      @L8A         
&DESCR   SETC  ''' '''                Set to blank                 @L8A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                      @L8A         
         AIF (&ERROR EQ 1).EXIT       Exit if error                @L8A         
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt nbr  @L8A         
         DC    XL2'00'                Reserved                     @LCC         
         DC    XL2'0&TFID'            Function ID                  @M7C         
         DC    AL2(&TSUBF)            Subfunction number           @LCA         
         DC    AL2(&TVF)              Virtual function number      @LCA         
         DC    AL1(&FLAG)             Flag byte                    @L8A         
         DC    AL1(&FLAG2)            Flag byte 2                  @LOC         
.*                                                                              
.* -- define PCHID / VCHID                                         @LOC         
.*                                                                 @LOC         
.DFCHD   ANOP  ,                                                   @LOC         
         AIF   ('&PCHID' EQ '' ).NOPCHD  no PCHID specified        @HOC         
         AIF   ('&PCHID' EQ '*').PCHDFF  PCHID='*'                 @HOC         
         DC    XL2'0&PCHID'              store PCHID value         @HOC         
         AGO   .XDFCHD                                             @LOC         
.*                                                                 @LOC         
.*                                                                 @LOC         
.* -- PCHID = '*', save 0xFFFF in ITR, for overgenned PCHID        @LOC         
.*                                                                 @LOC         
.PCHDFF  ANOP  ,                                                   @HOC         
         DC    XL2'FFFF'                                           @HOC         
         AGO   .XDFCHD                                             @LOC         
.*                                                                 @LOC         
.*                                                                 @LOC         
.*                                                                 @LOC         
.* -- no PCHID specified, check for VCHID                          @LOC         
.*                                                                 @LOC         
.NOPCHD  ANOP  ,                                                   @HOC         
         AIF   ('&VCHID' EQ '' ).NOVCHD  no VCHID specified        @LOC         
         AIF   ('&VCHID' EQ '*').VCHDFF  VCHID='*'                 @LOC         
         DC    XL2'0&VCHID'              store VCHID value         @LOC         
         AGO   .XDFCHD                                             @LOC         
.*                                                                 @LOC         
.*                                                                 @LOC         
.* -- VCHID = '*', save 0xFFFF in ITR, for overgenned VCHID        @LOC         
.*                                                                 @LOC         
.VCHDFF  ANOP  ,                                                   @LOC         
         DC    XL2'FFFF'                                           @LOC         
         AGO   .XDFCHD                                             @LOC         
.*                                                                 @LOC         
.*                                                                 @LOC         
.* -- no PCHID and no VCHID specified: store 0 in ITR              @LOC         
.*                                                                 @LOC         
.NOVCHD  ANOP  ,                                                   @LOC         
         DC    XL2'00'                                             @LOC         
.*                                                                 @LOC         
.*                                                                 @LOC         
.*                                                                 @LOC         
.* -- end of define PCHID/VCHID                                    @LOC         
.*                                                                 @LOC         
.XDFCHD  ANOP  ,                                                   @LOC         
.*                                                                              
                                                                                
                                                                                
                                                                                
                                                                                
.*                                                                              
.*                                                                              
.*                                                                              
.PALSTD  ANOP  ,                                                   @L8A         
.*                                                                              
         DC    AL2(&PACT)             Number of entries in partition   *        
                                      access list                  @L8A         
         DC    AL2(&PCCT)             Number of entries in partition   *        
                                      candidate list               @L8A         
         AIF   (&PACT EQ 0).NOACCP    Partition access list is empty   *        
                                                                   @L8A         
         DC    A(@A&CNO)              Address of partition access list *        
                                                                   @L8A         
         AGO   .GENCANP               branch to continue           @L8A         
.NOACCP  DC    A(0)                   No partition list exists     @L8A         
.GENCANP ANOP  ,                                                   @L8A         
         AIF   (&PCCT EQ 0).NOCANP    Partition candidate list empty   *        
                                                                   @L8A         
         DC    A(@C&CNO)              Address of partition candidate   *        
                                      list                         @L8A         
         AGO   .EGCANP                branch to continue           @L8A         
.NOCANP  DC    A(0)                   No partition candidate list      *        
                                      exists                       @L8A         
.EGCANP  ANOP  ,                                                   @L8A         
.*------------------ Generate DESC ----------------------------------           
.GENDESC ANOP  ,                                                   @L8A         
         AIF   ('&DESC' EQ '').NODESC Description specified        @L8A         
         DC    CL32&DESCR             Channel path description     @L8A         
         AGO   .EDESCP                branch to continue           @L8A         
.NODESC  ANOP  ,                      Description not specified    @L8A         
         DC    XL32'00'               Function description         @L8A         
.EDESCP  ANOP  ,                                                   @L8A         
.*------------------ Generate TYPE / UNIT ---------------------------           
.GENTYPE ANOP  ,                                                   @LMA         
         AIF   ('&TYPE' EQ '').NOTYP  Type specified?              @LMA         
         DC    CL12'&TYPE'            Function type                @LMA         
         AGO   .ETYPE                 branch to continue           @LMA         
.NOTYP   AIF   ('&UNIT' EQ '').NOTYUN Unit specified?              @LMA         
         DC    CL12'&UNIT'            Function type                @LMA         
         AGO   .ETYPE                 branch to continue           @LMA         
.NOTYUN  ANOP  ,                      Unit not specified           @LMA         
         DC    XL12'00'               Empty function type          @LMA         
.ETYPE   ANOP  ,                                                   @LMA         
.*------------------ Generate UID -----------------------------------           
         DC    XL4'0&UID'             UID                          @LHA         
.*------------------ Generate ITYPE ---------------------------------           
         DC    AL1(&FTYP)             PCIe function type           @LMA         
                                                                                
                                                                                
.* -- generate FUNCPORT                                                         
.*                                                                              
         AIF   ('&PORT' EQ '').NOPORT                              @LVA         
         DC    AL1(&PORT)             define PCIe function PORT    @LVA         
         AGO   .EPORT                 branch to continue           @LVA         
.NOPORT  ANOP  ,                      PORT not specified           @LVA         
         DC    XL1'00'                set = 0                      @LVA         
.EPORT   ANOP  ,                                                   @LVA         
                                                                                
                                                                                
.* -- generate FUNCREPN (replication factor n in FID=(f,n)                      
.*                                                                              
.GENREPN ANOP  ,                                                   @M7A         
         AIF   ('&REPL' EQ '').NOREPN                              @M7A         
.*       DC    XL2'0&REPL'            (decimal, not hex ])         @M7D         
         DC    H'&REPL'               store FUNCREPN value         @M7A         
         AGO   .EREPN                 branch to continue           @M7A         
.*                                                                 @M7A         
.NOREPN  ANOP  ,                      REPL not specified           @M7A         
         DC    XL2'00'                                             @M7A         
.*                                                                 @M7A         
.* -- end of generate FUNCREPN                                     @M7A         
.*                                                                 @M7A         
.EREPN   ANOP  ,                                                   @M7A         
.*                                                                              
                                                                                
.* -- generate reserved bytes in ITR                                            
.*                                                                              
         DC    XL8'00'                Reserved                     @M7C         
                                                                                
                                                                                
.*------------------ Generate PNET ids ------------------------------           
.GENPNET ANOP  ,                                                   @LDA         
         AIF   (&PNETNO EQ 0).NOPNETA No PNET id specified         @LDA         
&SUB     SETA  1                      Point to first PNET id       @LDA         
.PNETCR  ANOP  ,                                                   @LDA         
         AIF   ('&PNETID(&SUB)' EQ '').NOPNET1                     @LDA         
         DC    CL16'&PNETID(&SUB)'    Fill in PNET id              @LDA         
         AGO   .PNETNXT               Goto next PNET id            @LDA         
.NOPNET1 ANOP  ,                                                   @LDA         
         DC    XL16'00'               Empty PNET id                @LDA         
.PNETNXT ANOP  ,                                                   @LDA         
&SUB     SETA  &SUB+1                 Increment index              @LDA         
         AIF   (&SUB LE 4).PNETCR     Still more PNET ids          @LDA         
         AGO   .EPNET                 branch to continue           @LDA         
.NOPNETA ANOP  ,                      Unit not specified           @LDA         
         DC    XL64'00'               Reserved (for PNET ids)      @LDA         
.EPNET   ANOP  ,                                                   @LDA         
.*                                                                              
.*                                                                 @L8A         
.*------------------   Generate Partition access list -------------@L8A         
.*                                                                 @L8A         
.GPARTL  AIF   (&PACT EQ 0).EGACCL   Partition access list is empty@L8A         
         SPACE 1                                                   @L8A         
*----------------   Partition Access List  ------------------------@L8A         
&SUB     SETA  1                      Point to first partition     @L8A         
&CWK     SETC  '@A&CNO'               Label for first partition    @L8A         
.ACCL10  ANOP  ,                                                   @L8A         
&CWK     DC    CL8'&PACC(&SUB)'       Partition                    @L8A         
&CWK     SETC  ''                     Blank out label              @L8A         
&SUB     SETA  &SUB+1                 Point to next entry in array @L8A         
         AIF   (&SUB LE &PACT).ACCL10   Process next partition in      *        
                                        access list                @L8A         
.EGACCL  ANOP  ,                                                   @L8A         
.*                                                                 @L8A         
.*---------------   Generate Partition candidate list -------------@L8A         
.*                                                                 @L8A         
         AIF   (&PCCT EQ 0).EGCANL   Partition candidate list is       *        
                                     empty                         @L8A         
         SPACE 1                                                   @L8A         
*----------------   Partition Candidate List  ---------------------@L8A         
&SUB     SETA  1                      Point to first partition     @L8A         
&CWK     SETC  '@C&CNO'               Label for first partition    @L8A         
.CANL10  ANOP  ,                                                   @L8A         
&CWK     DC    CL8'&PCAN(&SUB)'       Partition                    @L8A         
&CWK     SETC  ''                     Blank out label              @L8A         
&SUB     SETA  &SUB+1                 Point to next entry in array @L8A         
         AIF   (&SUB LE &PCCT).CANL10   Process next partition in      *        
                                        candidate list             @L8A         
.EGCANL  ANOP  ,                                                   @L8A         
.*                                                                              
.*                                                                              
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to @L8A         
         MNOTE ' '                     occur if NOGEN specified    @L8A         
         MEND                                                      @L8A         
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.* @LSA                                                                         
         TITLE 'UUID - MACRO FOR UUID STATEMENT'                                
         MACRO  --  UUID INFORMATION                                            
&SYMBOL  UUID &PARTITION=,&PART=                                                
.*                                                                 @Lxx         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = UUID                                            */         
*/*                                                                  */         
*/*02*  DESCRIPTIVE NAME = UUID information.                         */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL UUID     PART=((lpname ! 0),(p1,p2,...))             */         
*/*                                                                  */         
*/*01*  UUID  = The UUID macro is used to define the                 */         
*/*             'uniqueness required' property for the partitons     */         
*/*             of the processor. This property applies to the       */         
*/*             'user defined IDs' (UIDs) of PCIe functions.         */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = FOR HCD use only                            */         
*/*                                                                  */         
*/*01*  INPUT =                                                      */         
*/*             # PART=     (px,py,...)                              */         
*/*             # PARTITION=(px,py,...)                              */         
*/*                                                                  */         
*/*01*  OUTPUT = UUID control block                                  */         
*/*                                                              @L8A*/         
*/*********************************************************************         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
         GBLB  &$ERR              Global error flag                             
         LCLA  &FLAG              Flag byte (UUIDFLAG)                          
         LCLA  &ALLPF             flag  - PARTITION=(*)                         
         LCLC  &CNO               EBCDIC version of SYSITRN                     
         LCLB  &ERROR             Error flag                                    
         LCLA  &PACT              Number of entries in partition list           
                                                                                
                                                                                
.*       MNOTE 0,'711 UUID STATEMENT ENTRY'                                     
                                                                                
                                                                                
.* -- flag bit positions                                                        
.*                                                                              
&ALLPF   SETA  128                flag UUIDALLP (PARTITION=(*))                 
                                                                                
                                                                                
                                                                                
.* -- initialize flag byte                                                      
.*                                                                              
&FLAG    SETA  0                                                                
                                                                                
                                                                                
.* -- initialize number of partition names                                      
.*                                                                              
&PACT    SETA  0                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* -- generate ITRH (internal text record header)                               
.*                                                                              
&SYMBOL  TXTHDR UUID                                                            
                                                                                
                                                                                
                                                                                
.* -- check for unrecognized parameters                                         
.*                                                                    *         
         AIF   (N'&SYSLIST EQ 0).XPOSA0    No positional parameter              
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'                     
&ERROR   SETB  1                  Indicate error                                
         AGO   .XPOSA0            and continue                                  
                                                                                
                                                                                
                                                                                
                                                                                
.* -- check for parameter PARTITION                                             
.*                                                                              
.XPOSA0  ANOP  ,                                                                
         AIF   ('&PARTITION' EQ '').XPART1                                      
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* -- begin processing of parameter PARTITION                                   
.*                                                                              
.BPART1  ANOP  ,                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* -- check for UUID PARTITION=(*)                                              
.*                                                                              
         AIF   ('&PARTITION' NE '(*)').PLIST1                                   
&FLAG    SETA  &FLAG+&ALLPF           set flag UUIDALLP                         
         AGO   .UUENDPL               end of partition list processing          
                                                                                
                                                                                
                                                                                
                                                                                
.* -- validate PARTITION name list                                              
.*                                                                              
.PLIST1  ANOP  ,                                                                
&MAXSUB  SETA  90                     Maximum number of partitions              
&MAXCSS  SETA  8                      Maximum number of CSS                     
&L       SETA  8                      Maximum PARTITION length                  
.*                                                                              
.*                                                                              
                                                                                
                                                                                
                                                                                
.* -- get partition names                                                       
.*                                                                              
&IP      SETA  N'&PARTITION          number of partitions in list               
&SUB     SETA  1                     Start with first in list                   
                                                                                
                                                                                
.PGET1   ANOP  ,                                                                
&PARSTR  SETC  '&PARTITION(&SUB,1)'  get partition name                         
.*       MNOTE 0,'711 PARTITION PARAMETER IS &PARSTR'                           
                                                                                
                                                                                
                                                                                
.* -- validate partition name                                                   
.*                                                                              
&POS     SETC  '&SUB'                                                           
         PARTTEST NAME=&PARSTR,SUB=&POS                                         
                                                                                
                                                                                
                                                                                
.* -- if no error was detected:                                                 
.*    increment number of valid partition names found                           
.*                                                                              
         AIF   (NOT &$ERR).PINCR1                                               
                                                                                
                                                                                
                                                                                
.* -- otherwise, indicate error and examine next partition name                 
.*                                                                              
&ERROR   SETB  1                                                                
         AGO   .PNEXT1                                                          
                                                                                
                                                                                
                                                                                
                                                                                
.* -- increment number of partition names                                       
.*                                                                              
.PINCR1  ANOP ,                                                                 
&PACT    SETA  &PACT+1                                                          
                                                                                
                                                                                
                                                                                
.* -- save partition name                                                       
.*                                                                              
&PACC(&PACT) SETC '&PARSTR'                                                     
                                                                                
                                                                                
                                                                                
                                                                                
.* -- check whether maximum number of partition names is exceeded               
.*                                                                              
         AIF   (&PACT GT &MAXSUB).ERRPX1                                        
                                                                                
                                                                                
                                                                                
.* -- process next partition name in list                                       
.*                                                                              
.PNEXT1  ANOP                               next partition name                 
&SUB     SETA &SUB+1                        next list entry                     
         AIF  (&SUB LE N'&PARTITION).PGET1  More partitions ?                   
                                                                                
.*      -- no more partitions                                                   
.*                                                                              
         AGO   .XPART1               exit PARTITION parameter                   
.*                                   processing                                 
                                                                                
                                                                                
.*                                                                              
.*       -- error handling: too many partition names                            
.*                                                                              
.ERRPX1  ANOP  ,                                                                
         MNOTE 8,'053 PART &PARSTR LIST &SUB EXCEEDS &MAXSUB ENTRIES.'          
&ERROR   SETB  1                      indicate error                            
         AGO   .XUUID                 and exit                                  
                                                                                
                                                                                
                                                                                
                                                                                
.* -- end of processing of parameter PARTITION                                  
.*                                                                              
.XPART1  ANOP  ,                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* ------------------------------------------------------------                 
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* -- check for parameter PART                                                  
.*                                                                              
         AIF   ('&PART' NE '').BPART2       PART is specified                   
                                                                                
                                                                                
                                                                                
.* -- PART is not present:                                                      
.*    either PART or PARTITION must be specified                                
.*                                                                              
         AIF   ('&PARTITION' NE '').XPART2  ok, PARTITION is present            
                                                                                
                                                                                
                                                                                
                                                                                
.* -- no PART and no PARTITION, error                                           
.*                                                                              
         MNOTE 8,'054 UUID REQUIRES EITHER PART OR PARTITION KEYWORD.'          
&ERROR   SETB 1                       Indicate error                            
         AGO   .XUUID                 and exit                                  
                                                                                
                                                                                
                                                                                
                                                                                
.* -- parameter PART is present                                                 
.*                                                                              
.BPART2  ANOP  ,                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* -- check whether PARTITION and PART are both present                         
.*                                                                              
         AIF   ('&PARTITION' NE '').UUMUTEX Mutually exclusive                  
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* -- check for UUID PART=(*)                                                   
.*                                                                              
         AIF   ('&PART' NE '(*)').PLIST2                                        
&FLAG    SETA  &FLAG+&ALLPF           set flag UUIDALLP                         
         AGO   .UUENDPL               end of partition list processing          
                                                                                
                                                                                
                                                                                
                                                                                
.* -- validate PART name list                                                   
.*                                                                              
.PLIST2  ANOP  ,                                                                
&MAXSUB  SETA  90                     Maximum number of partitions              
&MAXCSS  SETA  8                      Maximum number of CSS                     
&L       SETA  8                      Maximum PARTITION length                  
.*                                                                              
.*                                                                              
                                                                                
                                                                                
                                                                                
.* -- get partition names                                                       
.*                                                                              
&IP      SETA  N'&PART               number of partitions in list               
&SUB     SETA  1                     start with first in list                   
                                                                                
                                                                                
.PGET2   ANOP  ,                                                                
&PARSTR  SETC  '&PART(&SUB,1)'       get partition name                         
.*       MNOTE 0,'711 PART PARAMETER IS &PARSTR'                                
                                                                                
                                                                                
                                                                                
.* -- validate partition name                                                   
.*                                                                              
&POS     SETC  '&SUB'                                                           
         PARTTEST NAME=&PARSTR,SUB=&POS                                         
                                                                                
                                                                                
                                                                                
.* -- if no error was detected:                                                 
.*    increment number of valid partition names found                           
.*                                                                              
         AIF   (NOT &$ERR).PINCR2                                               
                                                                                
                                                                                
                                                                                
.* -- otherwise, indicate error and examine next partition name                 
.*                                                                              
&ERROR   SETB  1                                                                
         AGO   .PNEXT2                                                          
                                                                                
                                                                                
                                                                                
.* -- increment number of partition names                                       
.*                                                                              
.PINCR2  ANOP ,                                                                 
&PACT    SETA  &PACT+1                                                          
                                                                                
                                                                                
                                                                                
.* -- save partition name                                                       
.*                                                                              
&PACC(&PACT) SETC '&PARSTR'                                                     
                                                                                
                                                                                
                                                                                
                                                                                
.* -- check whether maximum number of partition names is exceeded               
.*                                                                              
         AIF   (&PACT GT &MAXSUB).ERRPX2                                        
                                                                                
                                                                                
                                                                                
.* -- process next partition name in list                                       
.*                                                                              
.PNEXT2  ANOP                          next partition name                      
&SUB     SETA &SUB+1                   next list entry                          
         AIF  (&SUB LE N'&PART).PGET2  More partitions ?                        
                                                                                
                                                                                
                                                                                
                                                                                
.*      -- no more partitions                                                   
.*                                                                              
         AGO   .XPART2                 exit PART parameter processing           
                                                                                
                                                                                
.*                                                                              
.* -- error handling: too many partition names                                  
.*                                                                              
.ERRPX2  ANOP  ,                                                                
         MNOTE 8,'055 PART &PARSTR LIST &SUB EXCEEDS &MAXSUB ENTRIES.'          
&ERROR   SETB  1                      indicate error                            
         AGO   .XUUID                 and exit                                  
                                                                                
                                                                                
                                                                                
                                                                                
.* -- error, parameters PART and PARTITION are mutually exclusive               
.*                                                                              
.UUMUTEX ANOP  ,                                                                
         MNOTE 8,'056 PART PARAMETER AND PARTITION PARAMETER ARE MUTUAL*        
               LY EXCLUSIVE.'                                                   
&ERROR   SETB  1                      indicate error                            
         AGO   .XUUID                 and exit                                  
                                                                                
                                                                                
                                                                                
                                                                                
.* -- end of processing of parameter PART                                       
.*                                                                              
.XPART2  ANOP  ,                                                                
                                                                                
                                                                                
                                                                                
.* -- end of partition list processing                                          
.*                                                                              
.UUENDPL ANOP  ,                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.*                                                                              
.*                                                                              
.*                                                                              
.* -- generate internal text record                                             
.*                                                                              
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1).EXIT       Exit if error                             
                                                                                
                                                                                
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt nbr               
                                                                                
                                                                                
.*      -- generate flag byte:                                                  
.*                                                                              
.*         3 UUIDFLAG    BIT ( 8),    flags                                     
.*                                                                              
         DC    AL1(&FLAG)             flag byte                                 
                                                                                
                                                                                
                                                                                
.*      -- generate reserved bytes:                                             
.*                                                                              
.*         3 *           CHAR( 3),    reserved                                  
.*                                                                              
         DC    XL3'00'                reserved                                  
                                                                                
                                                                                
.*      -- generate count of partition names:                                   
.*                                                                              
.*       3 UUIDPCOUNT  BIN (32),      count of partitions specified             
.*                                                                              
.*       DC    XL4'00000711'          during early test phase only              
.*       DC    XL4'0&PACT'            wrong]                                    
         DC    AL4(&PACT)                                                       
                                                                                
                                                                                
                                                                                
.*      -- generate address of partition table:                                 
.*                                                                              
.*         3 UUIDPNAMES  PTR (31),    address of partition table                
                                                                                
                                                                                
                                                                                
.*              -- check for empty partition list                               
.*                                                                              
         AIF   (&PACT EQ 0).NOPLIST                                             
                                                                                
                                                                                
                                                                                
.*              -- non-empty partition list:                                    
.*                 generate its address using the label '@Annnnnn'              
.*                 which we will generate below to                              
.*                 mark the start of the list;                                  
.*                 then branch to continue generating                           
.*                                                                              
         DC    A(@A&CNO)                                                        
         AGO   .GCONT10                                                         
                                                                                
                                                                                
.*              -- generate 0 to indicate an empty partiton list                
.*                                                                              
.NOPLIST ANOP  ,                                                                
         DC    A(0)                                                             
                                                                                
                                                                                
.*              -- continue after                                               
.*                 generating address of partition table                        
.*                                                                              
.GCONT10 ANOP  ,                                                                
                                                                                
                                                                                
                                                                                
.*      -- generate reserved bytes:                                             
.*                                                                              
.*         3 *           CHAR(20),           reserved                           
.*                                                                              
         DC    XL20'00'               reserved                                  
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
.* -- generate partition list area                                              
.*                                                                              
.UUPAREA ANOP  ,                                                                
.*       MNOTE 0,'711 generate partition list area'                             
                                                                                
                                                                                
.*      -- check for empty partition list                                       
.*                                                                              
         AIF   (&PACT EQ 0).UUPAXIT                                             
                                                                                
                                                                                
.*      -- point to first partition name                                        
.*                                                                              
&SUB     SETA  1                                                                
                                                                                
                                                                                
.*      -- create a label '@Annnnnn' in &CWK                                    
.*         for the start of the partition list                                  
.*                                                                              
&CWK     SETC  '@A&CNO'                                                         
.*       MNOTE 0,'711 generate partition list area &CWK'                        
                                                                                
                                                                                
                                                                                
.*      -- generate (first or next) partition name, using label &CWK            
.*                                                                              
.UUPAGEN ANOP  ,                                                                
&CWK     DC    CL8'&PACC(&SUB)'                                                 
                                                                                
                                                                                
.*      -- blank out label &CWK, so that _only_                                 
.*         the first partition name is labelled '@Annnnnn':                     
.*         we will use this (first) label below to generate the                 
.*         address of the partition list in the ITR                             
.*                                                                              
&CWK     SETC  ''                                                               
                                                                                
                                                                                
                                                                                
.*      -- point to next partition name                                         
.*                                                                              
&SUB     SETA  &SUB+1                                                           
                                                                                
                                                                                
                                                                                
.*      -- if there are more partition names,                                   
.*         generate the next one                                                
.*                                                                              
         AIF   (&SUB LE &PACT).UUPAGEN                                          
                                                                                
                                                                                
.*      -- end of generating the partition list area                            
.*                                                                              
.UUPAXIT ANOP  ,                                                                
                                                                                
                                                                                
                                                                                
.*                                                                              
.XUUID   ANOP  ,                                                                
                                                                                
.*       MNOTE 0,'711 UUID STATEMENT EXIT'                                      
                                                                                
                                                                                
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                    occur if NOGEN specified                  
         MEND                         end of UUID macro                         
                                                                                
                                                                                
                                                                                
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'CHPID - CHANNEL PATH ID MACRO'                                  
         MACRO  --  CHANNEL PATH IDENTIFICATION                                 
&SYMBOL  CHPID &PARTITION=,&PART=,&NOTPART=,&PATH=,&SWITCH=,&TYPE=,    *        
               &DESC=,&SWPORT=,&TPATH=,&CPATH=,&OS=,&IOCLUSTER=,       *        
               &PCHID=,&CHPARM=,&AID=,&PORT=,&CSYSTEM=,&PNETID=,       *        
               &VCHID=                                                          
.*                                                                 @LLC         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = CHPID                                           */         
*/*                                                                  */         
*/*02*  DESCRIPTIVE NAME = Channel Path Identification.              */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL CHPID    TYPE=BL!BY!S!CNC!CTC!FX!CVC!IOC!CFR!CFS @LTC*/         
*/*                             !CBY!OSA!ISD!NTV                 @H8C*/         
*/*                             !CBR!CBS!ICR!ICS                 @H9A*/         
*/*                             !FC !FCV!FTV                     @HAA*/         
*/*                             !OSD!OSE                         @HBA*/         
*/*                             !DSD!EIO                         @HCA*/         
*/*                             !CFP!CBP!ICP                     @HDA*/         
*/*                             !IQD!FCP                         @HEA*/         
*/*                             !STV                             @HGA*/         
*/*                             !OSC                             @HJA*/         
*/*                             !OSN                             @HRA*/         
*/*                             !CIB                             @HVA*/         
*/*                             !OSX!OSM                         @L6A*/         
*/*                             !CS5!CL5                         @LKA*/         
*/*                      PARTition=((p1,p2,..),(px,py,..),REC)       */         
*/*                   or PARTition=((CSS(n),(p1,p2,...),(px,py,...), */         
*/*                                 (CSS(n),(p1,p2,...),(px,py,...)))*/         
*/*                                                              @HHA*/         
*/*                      NOTPART=((p1,p2,..),<(px,py,..)>)       @LTA*/         
*/*                   or NOTPART=((CSS(n),(p1,p2,...),(px,py,...),   */         
*/*                               (CSS(n),(p1,p2,...),(px,py,...)))  */         
*/*                                                              @HHA*/         
*/*                      PATH=((chpid number <,channel number        */         
*/*                         <,channel set>>),...)  or                */         
*/*                      PATH=(CSS(n),cn)                        @HHA*/         
*/*                      PCHID=xxx                               @HHA*/         
*/*                      VCHID=xxx                               @LLA*/         
*/*                      PNETID=(pnet1,...)                      @LDA*/         
*/*                      AID=xx                                  @HVA*/         
*/*                      PORT=xx                                 @HVA*/         
*/*                      SWITCH=number                               */         
*/*                      SHARED                                      */         
*/*                      OS=value                                @M5A*/         
*/*                      CHPARM=value                            @HHA*/         
*/*                      IOCLUSTER=I/O cluster                   @M5A*/         
*/*                      DESC='description'                      @N3A*/         
*/*                      SWPORT=((sw1,port1),(sw2,port2),...)    @M4A*/         
*/*        TPATH=((proc1,chpid1<,cunum1,devnum1<,numdevs>>),...) @L5C*/         
*/*                                                              @M4A*/         
*/*    or  TPATH=((CSS(n),proc1,chpid1<,cu1,dev1<,numdevs>>),..) @L5C*/         
*/*                                                              @HHA*/         
*/*                  or  TPATH=((CSS(n),proc1,chpid1,cu1>), ...) @HTA*/         
*/*                                                for STP link  @HHA*/         
*/*                      CPATH=(chpid,...,chpid)    ignored      @H8A*/         
*/*                      CSYSTEM=system_name        ignored      @HVA*/         
*/*                                                                  */         
*/*01*  FUNCTION = The CHPID macro is used to define channel paths.  */         
*/*                Up to 8 channel paths can be defined on each      */         
*/*                CHPID macro instruction.                          */         
*/*                                                                  */         
*/*01*  NOTES =  Each channel path in the I/O configuration must be  */         
*/*              specified on a CHPID macro instruction in order to  */         
*/*              be used.                                            */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = FOR HCD use only                            */         
*/*                                                                  */         
*/*01*  INPUT =                                                      */         
*/*               DESC=     description of channel path(s)       @M4A*/         
*/*               OS=       2 char hex value                     @M5A*/         
*/*                 or                                               */         
*/*               CHPARM=   2 char hex value                     @HHA*/         
*/*               PART=                                              */         
*/*                 or                                               */         
*/*               PARTition=((p1,p2,..),(px,py,..),REC)              */         
*/*                          p1,p2,..  - partition access list       */         
*/*                          px,py,..  - partition candidate list    */         
*/*                          REC       - Reconfigurable (optional)   */         
*/*               NOTPART=  ((p1,p2,..),(px,py,..))              @LTA*/         
*/*                          p1,p2,..  - partitions which are    @LTA*/         
*/*                                      excluded from the       @LTA*/         
*/*                                      partition access list.  @LTA*/         
*/*                                      (0) is invalid          @LTA*/         
*/*                          px,py,..  - partitions which are    @LTA*/         
*/*                                      excluded from the       @LTA*/         
*/*                                      partition candidate list@LTA*/         
*/*                                      (optional)              @LTA*/         
*/*              (PARTition and NOTPART are mutually exclusive)  @LTA*/         
*/*             # PATH=   1 to 8 chpid numbers,                      */         
*/*                       1 or 2 hex digits for channel number       */         
*/*                       channel set : 0                            */         
*/*                                     1                            */         
*/*                       CSS(n) - 1 digit subchannel id and     @HHA*/         
*/*                                2 hex digit channel number    @HHA*/         
*/*               PCHID=  3 hex digits or *                      @HLC*/         
*/*               VCHID=  3 hex digits or *                      @LLA*/         
*/*               PNETID= up to 4 physical network IDs (16 char) @LDA*/         
*/*               AID=    2 hex digits or *                      @L4C*/         
*/*               PORT=   1 decimal digit                        @HVA*/         
*/*               SWITCH= 2 hex digits                               */         
*/*               SWPORT= 1 to 8 list entries (swid,portid)      @M4A*/         
*/*                       2 hex digits switch id,                @M4A*/         
*/*                       2 hex digits port id                   @M4A*/         
*/*               SHARED                                             */         
*/*               IOCLUSTER= 8 alphameric character sysplex name @M5A*/         
*/*             # TYPE= BL   - Block multiplexer channel             */         
*/*                     BY   - Byte multiplexer channel              */         
*/*                     CTC  - Channel to channel                    */         
*/*                     FX   - Fiber extended                        */         
*/*                     CVC  - Fiber extended                    @M1A*/         
*/*                     S    - Serial                                */         
*/*                     CNC  - Serial                            @M1A*/         
*/*                     IOC  - I/O Controller                    @H1A*/         
*/*                     CFR  - Coupling facility receiver channel@LTA*/         
*/*                     CFS  - Coupling facility sender channel  @LTA*/         
*/*                     CBY  - Byte Pacer channel path           @H3A*/         
*/*                     OSA  - Open Systems Adapter channel path @H3A*/         
*/*                     ISD  - Integrated System Device          @H5A*/         
*/*                     NTV  - New Test Vehicles chpid           @H8A*/         
*/*                     CBR  - Cluster Bus Receiver chpid        @H9A*/         
*/*                     CBS  - Cluster Bus Sender chpid          @H9A*/         
*/*                     ICR  - Internal CF receiver chpid        @H9A*/         
*/*                     ICS  - Internal CF sender chpid          @H9A*/         
*/*                     FC   - Fibre channel chpid               @HAA*/         
*/*                     FCV  - Fibre conversion chpid            @HAA*/         
*/*                     FTV  - Fibre test vehicle                @HAA*/         
*/*                     OSD  - OSD chpid                         @HBA*/         
*/*                     OSE  - OSE chpid                         @HBA*/         
*/*                     DSD  - Direct System Device chpid        @HCA*/         
*/*                     EIO  - Emulated I/O chpid                @HCA*/         
*/*                     CFP  - Peer ISC-3   chpid                @HDA*/         
*/*                     CBP  - Peer ICB     chpid                @HDA*/         
*/*                     ICP  - Peer IC-3    chpid                @HDA*/         
*/*                     IQD  - Internal Queued Direct Communicat @HEA*/         
*/*                     FCP  - Fibre Channel Protocol            @HEA*/         
*/*                     STV  - Test Vehicles chpid               @HGA*/         
*/*                     OSC  - OSA Console channel               @HJA*/         
*/*                     OSN  - OSA NCP channel                   @HRA*/         
*/*                     CIB  - Coupling support                  @HVA*/         
*/*                     OSX  - OSA for zBX                       @L6A*/         
*/*                     OSM  - OSA for management network        @L6A*/         
*/*                     CS5  - CS5 for short distance coupling   @LKA*/         
*/*                     CL5  - CL5 for long  distance coupling   @LKA*/         
*/*     TPATH= list of (proc,chpid <,cunum<,devnum<,numdevs>>>)  of  */         
*/*                            connected Chpids                  @L5C*/         
*/*             #  - Required keyword                                */         
*/*                                                                  */         
*/*01*  OUTPUT = List of channel path id numbers.                    */         
*/*                                                                  */         
*/*********************************************************************         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &$ERR              Global error flag                @LBA         
         GBLB  &INTERR            Global error flag                @M4A         
         GBLC  &CWK               Character work variable          @M4A         
         LCLA  &AWK               Arithmetic work variable                      
         LCLA  &AWK1              Arithmetic work variable                      
         LCLA  &L                 Maximum or required operand length            
         LCLA  &LA                Maximum or required operand length            
         LCLA  &LB                Maximum or required operand cnt  @04A         
         LCLA  &L1                Maximum or required length       @M4A         
         LCLA  &L2                Maximum or required length       @M4A         
         LCLA  &L3                Maximum or required length       @M4A         
         LCLA  &LEN               Actual operand length            @N3A         
         LCLA  &COMMA             Index to comma in sublist entry               
         LCLA  &MAXPATH           Maximum number of PATH id's                   
         LCLA  &NUMCHP            number of CHPIDs specfied                     
         LCLA  &SINDX             Starting index for CHPID                      
         LCLA  &NDX               Substring index                               
         LCLA  &MAXSUB            Maximum number of sublist entries@LBA         
         LCLA  &NSWPO             Number of entry switch ports     @M4A         
         LCLA  &NSPAT             Number of elements in TPATH      @C2A         
         LCLA  &NTPAT             Number of connected CHPIDs       @M4A         
         LCLA  &PAASTRK           Count of PATH=**                              
         LCLA  &RECPOS            Position of REC keyword          @HHA         
         LCLA  &SUB               Sublist element number                        
         LCLA  &SUB1              Sublist element number (CSS)     @HHA         
         LCLA  &SUBL              Sublist element number (palist)  @HHA         
         LCLA  &TYP               TYPE flag                                     
         LCLA  &FLAG              Flag byte                                     
         LCLA  &FLAG2             Flag byte 2                      @HHA         
         LCLA  &CHNBIT            Flag byte for channel number                  
         LCLA  &ESWBIT            Flag byte for entry port mask    @M4A         
         LCLA  &LCSSID            CSS id                           @HHA         
         LCLA  &LPCSSID           CSS id for PARTITION keyword     @HHA         
         LCLA  &LNCSSID           CSS id for NOTPART keyword       @HHA         
         LCLA  &CSSID             CSS id                           @HHA         
         LCLA  &PCSSID            CSS id for PARTITION keyword     @HHA         
         LCLA  &NCSSID            CSS id for NOTPART keyword       @HHA         
         LCLA  &CSS               CSS id                           @HHA         
         LCLA  &CSID(4)           CSS id                           @HHA         
         LCLA  &PACS(128)         CSS id of a partition            @LGC         
         LCLA  &PAST(128)         Inclusion/exclusion of partition @LGC         
         LCLA  &PCCS(128)         CSS id of a partition            @LGC         
         LCLA  &PCST(128)         Inclusion/exclusion of partition @LGC         
         LCLA  &IP,&IC,&IL        Number of partitions, CSSs,lists @HHA         
         LCLA  &ECSSID            Connected channel subsystem      @HHA         
         LCLA  &ECSS(8)           Channel subsystem ids from TPATH @HHA         
         LCLA  &MAXCSS            Maximum number of CSS entries    @HHA         
         LCLA  &SWTF              Operand flag  - SWITCH           @LBC         
         LCLA  &PARTF             Operand flag  - PARTITION        @LTA         
         LCLA  &PCSSF             Operand flag  - CSS w/ partition @HHA         
         LCLA  &NPRTF             Operand flag  - NOTPART          @LTA         
         LCLA  &PCHDF             Operand flag  - PCHID or VCHID   @LLC         
         LCLA  &PNETF             Operand flag  - PNETID           @LDA         
         LCLA  &SPLXF             Operand flag  - IOCLUSTER        @M5A         
         LCLA  &PACT              Number of entries in partition access*        
                                  list                             @LBA         
         LCLA  &PCCT              Number of entries in partition       *        
                                  candidate list                   @LBA         
         LCLA  &PNETNO            Number of entries in PNETID list @LDf         
         LCLA  &CSCT              Index in partition access list   @05A         
         LCLA  &UMODE             Channel path usage mode          @LBA         
         LCLA  &AREC,&ASHR,&ADED  Usage mode flags                 @LBA         
         LCLB  &ERROR             Error flag                                    
         LCLB  &MCSS              XMP format for PATH              @HHA         
         LCLB  &MCSP              XMP format for PARTITION         @HHA         
         LCLB  &SCSP              XMP format for simple PART list  @HHA         
         LCLB  &SPANNED           Indicates spanned channel path   @HHA         
         LCLB  &NPPS              PATH parm follows new syntax     @P2A         
         LCLB  &CSSPI(8)          Indicator if CSS id is given     @LGC         
         LCLB  &CSMSK(8)          Indicator if CSS id is given     @LGC         
         LCLB  &SINGLE            Only single list element         @M4A         
         LCLC  &CNO               EBCDIC version of SYSITRN                     
         LCLC  &STRING            Work string                      @LBA         
         LCLC  &POS               subentry indication              @LBA         
         LCLC  &PATHID            Character sublist entry                       
         LCLC  &PACHID(8)         Chpid number from PATH sublist                
         LCLC  &PACHAN(8)         Channel number from PATH sublist              
         LCLC  &PACHSE(8)         Channel set from PATH sublist                 
         LCLC  &ESWPORT           Character sublist entry          @M4A         
         LCLC  &ESWID             Character sublist entry          @M4A         
         LCLC  &ESW(8)            Entry switch id set from SWPORT  @M4A         
         LCLC  &EPROC             Procedure id                     @M4A         
         LCLC  &ECHPID            Connected channel path id        @M4A         
         LCLC  &ECUNUM            Connected control unit number    @M4A         
         LCLC  &EDEVNO            Connected device number          @M4A         
         LCLC  &EPR(8)            Processor ids from TPATH         @M4A         
         LCLC  &ECHP(8)           Channel path ids from TPATH      @M4A         
         LCLC  &ECUN(8)           Control unit number from TPATH   @M4A         
         LCLC  &EDEV(8)           Device number from TPATH         @M4A         
         LCLA  &ENDV(8)           Number of CF devices from TPATH  @L5A         
         LCLC  &EPORT(8)          Entry switch port id from SWPORT @M4A         
         LCLC  &PACC(128)         Partition access list            @LGC         
         LCLC  &PCAN(128)         Partition candidate list         @LGC         
         LCLC  &TEMP              Work field                       @LBA         
         LCLC  &DESCR             Description                      @N3A         
         LCLC  &DSC               Description                      @L2A         
         LCLC  &TPCHID            PCHID parameter                  @HHA         
         LCLC  &TVCHID            VCHID parameter                  @LLA         
         LCLC  &TPNETID           PNETID parameter entry           @LDA         
         LCLC  &LCHPRM            Local CHPARM value               @HXA         
         LCLC  &PARSTR,&NPRTACC,&NPRTCAN  Partition list strings   @HHA         
.*                                                                              
         ACTR  10000              Set for infinite loop control                 
&SWTF    SETA  128                SWITCH specified                              
&PARTF   SETA  64                 PARTITION specified              @LTA         
&NPRTF   SETA  32                 NOTPART specified                @LTA         
&PCHDF   SETA  16                 PCHID or VCHID specified         @LLC         
&PCSSF   SETA  8                  CSS specified with partitions    @HHA         
&SPLXF   SETA  4                  IOCLUSTER specified              @M5A         
&CSSF    SETA  128                CSS specified with PATH          @HHA         
&AIDF    SETA  64                 AID/PORT specified               @HVA         
&PNETF   SETA  32                 PNETID specified                 @LDA         
&PDEFF   SETA  16                 PCHID specified                  @LLA         
&VDEFF   SETA  8                  VCHID specified                  @LLA         
&PORTF   SETA  4                  PORT specified                   @LUA         
&ADED    SETA  1                  Channel path is dedicated        @LBA         
&AREC    SETA  2                  Channel path is reconfigurable   @LBA         
&ASHR    SETA  3                  Channel path is shared           @LBA         
&UMODE   SETA  &ADED              Assume that the channel path is      *        
                                  dedicated (default)              @LBA         
&FLAG2   SETA  0                  Initial value                    @HHA         
&PNETNO  SETA  0                  Initializes number of PNETid     @LDA         
.*                                                                              
&SYMBOL  TXTHDR CHPID                                                           
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Determine if SHARED has been specified                       *         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
.* -- allowed positional parameters are MIXTYPE, SHARED                         
.*                                                                              
.*                                                                              
         AIF   (N'&SYSLIST EQ 0).XPOSPM    No positional parameter @LBA         
                                                                                
                                                                                
.*                                                                              
.* -- positional parameter #1                                                   
.*                                                                 @LLA         
.POSP10  ANOP  ,                                                   @LWA         
         AIF   ('&SYSLIST(1)' NE 'MIXTYPE').POSP11  not MIXTYPE    @LWA         
         AGO   .POSP2             mixtype seen, examine P2         @LWA         
                                                                                
.POSP11  ANOP  ,                                                   @LWA         
         AIF   ('&SYSLIST(1)' NE 'SHARED').POSBAD1  not SHARED     @LWA         
&UMODE   SETA  &ASHR              Indicate that "shared" has been      *        
                                  specified                        @LBA         
         AGO   .POSP2             examine P2                       @LWA         
                                                                                
.POSBAD1 ANOP  ,                                                                
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @LBA         
&ERROR   SETB  1                  Indicate error                   @LBA         
                                                                                
                                                                                
.*                                                                              
.* -- positional parameter #2                                                   
.*                                                                 @LLA         
.POSP2   ANOP  ,                                                   @LWA         
         AIF   (N'&SYSLIST LT 2).XPOSPM    no more positionals     @LWA         
                                                                                
.POSP20  ANOP  ,                                                   @LWA         
         AIF   ('&SYSLIST(2)' NE 'MIXTYPE').POSP21  not MIXTYPE    @LWA         
         AGO   .XPOSPM            mixtype seen, continue           @LWA         
                                                                                
                                                                                
                                                                                
.POSP21  ANOP  ,                                                   @LWA         
         AIF   ('&SYSLIST(2)' NE 'SHARED').POSBAD2  not SHARED     @LWA         
&UMODE   SETA  &ASHR              Indicate that "shared" has been      *        
                                  specified                        @LBA         
         AGO   .XPOSPM            and continue                     @LBA         
                                                                                
.POSBAD2 ANOP  ,                                                                
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(2).'        @LWA         
&ERROR   SETB  1                  Indicate error                   @LWA         
         AGO   .XPOSPM            and continue                     @LWA         
.*                                                                              
.*                                                                              
.*                                                                              
.XPOSPM  ANOP  ,                                                   @LBA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*                               (name,name,....,name)                *         
.*       Validate PARTITION      (name,REC)                           *         
.*                               ((name,name,..),(name,name,..),REC)  *         
.*                               ((CSS(n),(name,...),(name,...)),...) *         
.*                                                                @HHC*         
.**********************************************************************         
&PACT    SETA  0                      Initialize number of entries in  *        
                                      partition access list        @LBA         
&PCCT    SETA  0                      Initialize number of entries in  *        
                                      partition candidate list     @LBA         
         AIF   ('&PARTITION' EQ '').PART500 PARTITION not specified@LBA         
&FLAG    SETA  &FLAG+&PARTF           Indicate PARTITION specified @LTA         
.*                                                                              
&MAXSUB  SETA  128                    Maximum number of partitions @LGC         
&MAXSUB1 SETA  15                     Maximum number of partitions @HHA         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&L       SETA  8                      Maximum PARTITION length                  
.*                                                                              
         AIF   ('&PARTITION'(1,2) EQ '((').PART100 double parens ? @LBA         
         AIF   ('&PARTITION'(1,5) NE '(CSS(').PART001  Simple SMP  @05A         
         AIF   (('&PARTITION'(1,5) EQ '(CSS(') AND                     *        
               ('&PARTITION'(7,3) EQ '),(')).PART100 simple list   @05C         
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list with CSS(x)                   *         
.**********************************************************************         
.*                                                                              
.PART001 ANOP ,                                                    @05A         
&CSID(1) SETA 0                       Set default CSS id           @05A         
&RECPOS  SETA  2                      Position of REC keyword      @05A         
&IP      SETA  N'&PARTITION           Number of partitions in list @05A         
&SUB     SETA  1                      Address first sublist entry  @05A         
         AIF   ('&PARTITION'(1,5) NE '(CSS(').PART005 No CSS given @05A         
&FLAG    SETA  &FLAG+&PCSSF           Indicate CSS w/ PART given   @HHA         
&MCSP    SETB  1                      Indicate XMP format          @05A         
&RECPOS  SETA  3                      Position of REC keyword      @05A         
&IP      SETA  N'&PARTITION-1         Number of additional elems   @05A         
&SUB     SETA  2                      Address first sublist entry  @05A         
                                                                                
&CSID(1) SETA  0                      Set CSS id 0                 @05A         
&PCSSID  SETA  128                   Set CSS bit for mask          @05A         
         AIF   ('&PARTITION(1)'(5,2) EQ '0)').MCSPS01              @05A         
&CSID(1) SETA  1                     Set CSS id 1                  @05A         
&PCSSID  SETA  64                    Set CSS bit for mask          @05A         
         AIF   ('&PARTITION(1)'(5,2) EQ '1)').MCSPS01              @05A         
&CSID(1) SETA  2                     Set CSS id 2                  @05A         
&PCSSID  SETA  32                    Set CSS bit for mask          @05A         
         AIF   ('&PARTITION(1)'(5,2) EQ '2)').MCSPS01              @05A         
&CSID(1) SETA  3                     Set CSS id 3                  @05A         
&PCSSID  SETA  16                    Set CSS bit for mask          @05A         
         AIF   ('&PARTITION(1)'(5,2) EQ '3)').MCSPS01              @05A         
&CSID(1) SETA  4                     Set CSS id 4                  @LGA         
&PCSSID  SETA  8                     Set CSS bit for mask          @LGA         
         AIF   ('&PARTITION(1)'(5,2) EQ '4)').MCSPS01              @LGA         
&CSID(1) SETA  5                     Set CSS id 5                  @LGA         
&PCSSID  SETA  4                     Set CSS bit for mask          @LGA         
         AIF   ('&PARTITION(1)'(5,2) EQ '5)').MCSPS01              @LGA         
&CSID(1) SETA  6                     Set CSS id 6                  @LGA         
&PCSSID  SETA  2                     Set CSS bit for mask          @LGA         
         AIF   ('&PARTITION(1)'(5,2) EQ '6)').MCSPS01              @LGA         
&CSID(1) SETA  7                     Set CSS id 7                  @LGA         
&PCSSID  SETA  1                     Set CSS bit for mask          @LGA         
         AIF   ('&PARTITION(1)'(5,2) EQ '7)').MCSPS01              @LGA         
         AGO   .MCSPER1              Invalid CSS id                @05A         
.MCSPS01 ANOP  ,                                                   @05A         
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
.PART005 ANOP  ,                                                   @05A         
&STRING  SETC  ''                     Indicate handling part list  @P1A         
         AIF   (&IP GT &MAXSUB1).PARTE01             Too many operands *        
                                      in partition list            @05C         
         AIF   ('&PARTITION(&SUB)' NE '0').PART010 partition name  @05C         
         AIF   (N'&PARTITION EQ &SUB).XPART  PART=(0) specified    @05C         
&SUB     SETA  &SUB+1                 Address nxt sublist entry    @05C         
         AIF   (N'&PARTITION GT &SUB).PARTE05 PART=(0,name,...)    @05C         
&PARSTR  SETC  '&PARTITION(&SUB)'                                  @05A         
&POS     SETC  '&SUB'                                              @05A         
         AIF   ('&PARTITION(&RECPOS)' NE 'REC').PARTE03 (0,REC)    @HHC         
         AGO   .PART015               Test for SHARED parameter    @P5A         
.PART010 ANOP  ,                                                   @P1A         
         AIF   ('&PARTITION(&SUB)' EQ '').PARTE02  No partition name   *        
                                      specified                    @P1A         
         AIF   (&SUB NE &RECPOS).PART020    processing 2nd operand @05C         
         AIF   (('&PARTITION(&SUB)' NE 'REC') OR                       *        
               (N'&PARTITION NE &RECPOS)).PART020  handle part lst @HHC         
.PART015 ANOP  ,                                                   @P5A         
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*        
                                      was specified                @P1A         
&UMODE   SETA  &AREC                  Indicate that channel path is    *        
                                      reconfigurable               @P1A         
         AGO   .XPART                 and continue with next parameter *        
                                                                   @P1A         
.*                                                                              
.PART020 ANOP  ,                                                   @P1A         
&POS     SETC  '&SUB'                 sub entry position           @P1A         
         PARTTEST NAME=&PARTITION(&SUB),SUB=&POS                   @P1A         
         AIF   (NOT &$ERR).PART030    Continue if no error detected@P1A         
&ERROR   SETB  1                      Otherwise indicate error     @P1A         
         AGO   .PART040               and continue                 @P1A         
.*                                                                              
.PART030 ANOP ,                                                    @P1A         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @P1A         
&PACC(&PACT) SETC '&PARTITION(&SUB)'  Save partition name          @P1A         
&PACS(&PACT) SETA &CSID(1)            Default value for CSS id     @05C         
&PAST(&PACT) SETA &PARTF              Inclusion flag               @HHA         
.*                                                                              
.PART040 ANOP                         Process next partition       @P1A         
&SUB     SETA &SUB+1                  Point to next sublist entry  @P1A         
         AIF  (&SUB LE N'&PARTITION).PART010  More partition's ?   @P1A         
         AGO   .XPART                 and continue with next parameter *        
                                                                   @P1A         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry  in access list          *         
.**********************************************************************         
.PART100 ANOP  ,                                                   @P1A         
&SUB1    SETA  1                      Start with first sublist    @HHA          
&IC      SETA  N'&PARTITION          Number of CSS sublists       @HHA          
         AIF   ('&PARTITION(&SUB1)'(1,5) EQ '(CSS(').MCSP0        @HHA          
&IC      SETA  1                     Only one CSS                 @HHA          
&SCSP    SETB  1                     Single XMP list              @HHA          
         AIF   ('&PARTITION(&SUB1)'(1,4) EQ 'CSS(').MCSP0         @HHA          
&SCSP    SETB  0                     No XMP list                  @HHA          
&CSID(&SUB1) SETA 0                   Default CSS id              @HHA          
&MCSP    SETB  0                     Indicate SMP format          @HHA          
         AGO   .MCSP20                                            @HHA          
.MCSP0   ANOP  ,                     CSS format                   @HHA          
&FLAG    SETA  &FLAG+&PCSSF           Indicate CSS w/ PART given  @HHA          
         AIF   (&IC GT &MAXCSS).MCSPER0  Too many CSS             @HHA          
&MCSP    SETB  1                     Indicate XMP format          @HHA          
.MCSP1   ANOP  ,                     Start loop body for CSS      @HHA          
         AIF   ('&PARTITION(&SUB1,1)'(1,4) NE 'CSS(').MCSPER2     @HHA          
&LPCSSID SETA  128                   Set CSS bit for mask         @HHA          
&CSID(&SUB1) SETA  0                 Set CSS id                   @HHA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '0)').MCSP2         @HHA          
&LPCSSID SETA  64                    Set CSS bit for mask         @HHA          
&CSID(&SUB1) SETA  1                 Set CSS id                   @HHA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '1)').MCSP2         @HHA          
&LPCSSID SETA  32                    Set CSS bit for mask         @HHA          
&CSID(&SUB1) SETA  2                 Set CSS id                   @HHA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '2)').MCSP2         @HHA          
&LPCSSID SETA  16                    Set CSS bit for mask         @HHA          
&CSID(&SUB1) SETA  3                 Set CSS id                   @HHA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '3)').MCSP2         @HHA          
&LPCSSID SETA  8                     Set CSS bit for mask         @LGA          
&CSID(&SUB1) SETA  4                 Set CSS id                   @LGA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '4)').MCSP2         @LGA          
&LPCSSID SETA  4                     Set CSS bit for mask         @LGA          
&CSID(&SUB1) SETA  5                 Set CSS id                   @LGA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '5)').MCSP2         @LGA          
&LPCSSID SETA  2                     Set CSS bit for mask         @LGA          
&CSID(&SUB1) SETA  6                 Set CSS id                   @LGA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '6)').MCSP2         @LGA          
&LPCSSID SETA  1                     Set CSS bit for mask         @LGA          
&CSID(&SUB1) SETA  7                 Set CSS id                   @LGA          
         AIF   ('&PARTITION(&SUB1,1)'(5,2) EQ '7)').MCSP2         @LGA          
         AGO   .MCSPER1              Invalid CSS id               @HHA          
.MCSP2   ANOP  ,                                                                
         AIF  (&CSSPI(&CSID(&SUB1)+1)).MCSPER3                     @HHA         
&PCSSID  SETA  &PCSSID+&LPCSSID      Accumulate bit mask for CSSs  @HHA         
&CSSPI(&CSID(&SUB1)+1) SETB 1        Indicate CSS occurred         @HHA         
.MCSP20  ANOP  ,                                                   @HHA         
&STRING  SETC  'ACCESS'               Indicate handling Access list@LBA         
&SUB     SETA  1                     Start with first entry        @HHA         
&SUBL    SETA  2                     Access list is second sublist @HHA         
         AIF   (&SCSP).SCSP3                                       @HHA         
         AIF   (&MCSP).MCSP3                                       @HHA         
&SUBL    SETA  1                     Access list is second sublist @HHA         
.SCSP3   ANOP  ,                                                   @HHA         
&IP      SETA  N'&PARTITION(&SUBL)   Number of partitions in CSS   @HHA         
&IL      SETA  N'&PARTITION          Number of sublists            @HHA         
         AGO   .MCSPX4                                             @HHA         
.MCSP3   ANOP  ,                                                                
&IP      SETA  N'&PARTITION(&SUB1,&SUBL) No of partitions in CSS   @HHA         
&IL      SETA  N'&PARTITION(&SUB1)   Number of sublists            @HHA         
.MCSPX4  ANOP  ,                                                   @HHA         
         AIF   (&IP LT 2).MCSP4                                    @HHA         
         AIF   (&UMODE EQ &AREC).PARTE04  Acc list > 1 and REC     @HHA         
&UMODE   SETA  &ASHR                                                            
.MCSP4   ANOP  ,                                                   @HHA         
         AIF   (&IL GT 4).PARTE05    Too many sublists             @HHA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (&IP GT &MAXSUB1).PARTE01          Too many operands in *        
                                      partition list               @HHC         
&SUB     SETA  1                      Start with 1st partition     @HHA         
.PART105 ANOP ,                                                    @HHA         
         AIF   (&SCSP).SCSP5                                       @HHA         
         AIF   (&MCSP).MCSP5                                       @HHA         
.SCSP5   ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PARTITION(&SUBL,&SUB)'                            @HHA         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @HHC         
         AGO   .MCSP6                                              @HHA         
.MCSP5   ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PARTITION(&SUB1,&SUBL,&SUB)'                      @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL,'.'&SUB'.')' sub entry position @HHC         
.MCSP6   ANOP  ,                                                                
         AIF   ((&IP EQ 1) AND                                         *        
               ('&PARTS' EQ  '0')).PART200        Null access list @HHC         
.PART110 ANOP  ,                                                   @LBA         
         AIF   ('&PARTS' EQ '').PARTE02        No partition name   @HHC         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).PART120    Continue if no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .PART130               and continue                 @LBA         
.*                                                                              
.PART120 ANOP ,                                                    @LBA         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @LBA         
&PACC(&PACT) SETC '&PARTS'            Save partition name          @HHC         
&PACS(&PACT) SETA &CSID(&SUB1)        Sets CSS id                  @HHA         
&PAST(&PACT) SETA &PARTF              Sets inclusion flag          @HHA         
.*                                                                              
.PART130 ANOP                         Process next partition       @LBA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA         
         AIF  (&SUB LE &IP).PART105   More partitions              @HHC         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry in candidate list        *         
.**********************************************************************         
.*       The second subparameter of the PARTITION parameter can be              
.*       either a candidate list or REC                                         
.*                                                                              
.PART200 ANOP  ,                                                   @LBA         
&SUBL    SETA  &SUBL+1               Increment sublist count       @HHA         
         AIF   (&SCSP).SCSP7                                       @HHA         
         AIF   (&MCSP).MCSP7                                       @HHA         
.SCSP7   ANOP  ,                                                   @HHA         
&IP      SETA  N'&PARTITION(&SUBL)   Number of partitions in CSS   @HHA         
&PARSTR  SETC  '&PARTITION(&SUBL)'                                 @HHA         
         AGO   .MCSP8                                              @HHA         
.MCSP7   ANOP  ,                                                                
&IP      SETA  N'&PARTITION(&SUB1,&SUBL) No of partitions in cand  @HHA         
&PARSTR  SETC  '&PARTITION(&SUB1,&SUBL)'                           @HHA         
.MCSP8   ANOP  ,                                                   @HHA         
         AIF   ('&PARSTR' EQ '').PART300       No 2nd subparameter @HHC         
         AIF   (('&PARSTR' NE 'REC') OR (&IL NE &SUBL)).PART210    @HHC         
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*        
                                      was specified                @LBA         
&UMODE   SETA  &AREC                  Indicate that channel path is    *        
                                      reconfigurable               @LBA         
         AGO   .XPART                 and continue with next parameter *        
                                                                   @LBA         
.*                                                                              
.PART210 ANOP  ,                                                   @LBA         
&SUB     SETA  1                      Address first sublist entry  @LBA         
         AIF   (&SCSP).SCSP9                                       @HHA         
         AIF   (&MCSP).MCSP9                                       @HHA         
.SCSP9   ANOP  ,                                                   @HHA         
&IP      SETA  N'&PARTITION(&SUBL)   Number of partitions in CSS   @HHA         
&PARSTR  SETC  '&PARTITION(&SUBL,&SUB)'                            @HHA         
         AGO   .MCSP10                                             @HHA         
.MCSP9   ANOP  ,                                                                
&IP      SETA  N'&PARTITION(&SUB1,&SUBL) No of partitions in CSS   @HHA         
&PARSTR  SETC  '&PARTITION(&SUB1,&SUBL,&SUB)'                      @HHA         
.MCSP10  ANOP  ,                                                   @HHA         
.*                                                                              
&STRING  SETC  'CANDIDATE'            Indicate handling Candidate list *        
                                                                   @LBA         
         AIF   (&IP GT &MAXSUB1).PARTE01  Too many operands            *        
                                      in candidate list            @HHC         
         AIF   ('&PARSTR' NE '=').PART250          Different candidate *        
                                      list specified               @HHC         
&CSCT    SETA  0                      Check all access list entries@05A         
.PART220 ANOP  ,                                                   @LBA         
         AIF  (&CSCT GE &PACT).PART300  No more partitions in access   *        
                                      list                         @05C         
&CSCT    SETA  &CSCT+1                Increment number of of index in  *        
                                      partition access list        @05A         
         AIF   (&PACS(&PACT) NE &PACS(&CSCT)).PART220  Same CSS id @05A         
&PCCT    SETA  &PCCT+1                Increment number of entries in   *        
                                      partition candidate list     @LBA         
&PCAN(&PCCT) SETC '&PACC(&CSCT)'      Save partition name          @05C         
&PCCS(&PCCT) SETA &PACS(&CSCT)        Save CSS id                  @05C         
&PCST(&PCCT) SETA &PAST(&CSCT)        Save inclusion flag          @05C         
         AGO   .PART220               and continue                 @LBA         
.*                                                                              
.PART250 ANOP  ,                                                   @LBA         
         AIF   (&SCSP).SCSS11                                      @HHA         
         AIF   (&MCSP).MCSS11                                      @HHA         
.SCSS11  ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PARTITION(&SUBL,&SUB)'                            @HHA         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @HHA         
         AGO   .MCSS12                                             @HHA         
.MCSS11  ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PARTITION(&SUB1,&SUBL,&SUB)'                      @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL,'.'&SUB'.')' sub entry position @HHC         
.MCSS12  ANOP  ,                                                                
         AIF   ('&PARTS' EQ '').PARTE02              No partition name *        
                                      specified                    @HHC         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).PART260    Continue if no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .PART270               and continue                 @LBA         
.*                                                                              
.PART260 ANOP ,                                                    @LBA         
&PCCT    SETA  &PCCT+1                Increment  number of entries in  *        
                                      partition candidate list     @LBA         
&PCAN(&PCCT) SETC '&PARTS'              Save partition name        @HHC         
&PCCS(&PCCT) SETA &CSID(&SUB1)          Save CSS id                @HHA         
&PCST(&PCCT) SETA &PARTF                Save inclusion flag        @HHA         
.*                                                                              
.PART270 ANOP                         Process next partition       @LBA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA         
         AIF  (&SUB LE &IP).PART250   More partitions              @HHC         
.*                                                                              
.**********************************************************************         
.*            Process 3rd subparameter (REC), if specified            *         
.**********************************************************************         
.PART300 ANOP  ,                                                   @LBA         
&SUBL    SETA  &SUBL+1                                                          
         AIF   (&SCSP).SCSS13                                      @HHA         
         AIF   (&MCSP).MCSS13                                      @HHA         
.SCSS13  ANOP  ,                                                                
&PARSTR  SETC  '&PARTITION(&SUBL)'                                 @HHA         
&POS     SETC  '&SUBL'                                             @HHA         
         AGO   .MCSS14                                             @HHA         
.MCSS13  ANOP  ,                                                                
&PARSTR  SETC  '&PARTITION(&SUB1,&SUBL)'                           @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL'.')'                            @HHA         
.MCSS14  ANOP  ,                                                   @HHA         
         AIF   ('&PARSTR' EQ '').PART350        REC not specified  @HHC         
         AIF   ('&PARSTR' NE 'REC').PARTE03  REC not specified     @HHC         
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*        
                                      was specified                @LBA         
         AIF   (&IC GT 1).PARTE05     Specified on spanned CHPID   @HHA         
&UMODE   SETA  &AREC                  Indicate that channel path is    *        
                                      reconfigurable               @LBA         
         AGO  .XPART                  and continue                 @LBA         
.PART350 ANOP ,                                                    @HHA         
&SUB1    SETA  &SUB1+1                Increment to next CSS list   @HHA         
         AIF   (&SUB1 LE &IC).MCSP1                                @HHA         
         AGO  .XPART                  and continue                 @LBA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PART parameter  ((name,name,..),(name,name,..),REC) *         
.*                    or   ((CSS(n),(p1,p2,...),(px,py,...)),...)     *         
.*                                                                @HHC*         
.*       This  routine must follow the PARTITION routine, since       *         
.*       branches are made to this routine to issue error messages.   *         
.*                                                                    *         
.**********************************************************************         
.PART500 ANOP                                                      @LBA         
         AIF   ('&PART' EQ '').XPART   PARTITION not specified     @LBA         
         AIF   ('&PARTITION' NE '').PARTE06 Mutually exclusive     @HHA         
&FLAG    SETA  &FLAG+&PARTF           Indicate PARTITION specified @LTA         
.*                                                                              
&MAXSUB  SETA  128                    Maximum number of partitions @LGC         
&MAXSUB1 SETA  15                     Maximum number of partitions @HHA         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&L       SETA  8                      Maximum PARTITION length                  
         AIF   ('&PART'(1,2) EQ '((').PART600  double parens ?     @LBA         
         AIF   ('&PART'(1,5) NE '(CSS(').PART501 Simple SMP list   @05A         
         AIF   (('&PART'(1,5) EQ '(CSS(') AND                          *        
               ('&PART'(7,3) EQ '),(')).PART600  simple CSS list   @05C         
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list with CSS(x)                   *         
.**********************************************************************         
.*                                                                              
.PART501 ANOP ,                                                    @05A         
&CSID(1) SETA 0                       Set default CSS id           @05A         
&RECPOS  SETA  2                      Position of REC keyword      @05A         
&IP      SETA  N'&PART                Number of partitions in list @05A         
&SUB     SETA  1                      Address first sublist entry  @05A         
         AIF   ('&PART'(1,5) NE '(CSS(').PART502   No CSS given    @05A         
&FLAG    SETA  &FLAG+&PCSSF           Indicate CSS w/ PART given   @HHA         
&MCSP    SETB  1                      Indicate XMP format          @05A         
&RECPOS  SETA  3                      Position of REC keyword      @05A         
&IP      SETA  N'&PART-1              Number of additional elems   @05A         
&SUB     SETA  2                      Address first sublist entry  @05A         
                                                                                
&CSID(1) SETA  0                     Set CSS id 0                  @05A         
&PCSSID  SETA  128                   Set CSS bit for mask          @05A         
         AIF   ('&PART(1)'(5,2) EQ '0)').MCSPS02                   @05A         
&CSID(1) SETA  1                     Set CSS id 1                  @05A         
&PCSSID  SETA  64                    Set CSS bit for mask          @05A         
         AIF   ('&PART(1)'(5,2) EQ '1)').MCSPS02                   @05A         
&CSID(1) SETA  2                     Set CSS id 2                  @05A         
&PCSSID  SETA  32                    Set CSS bit for mask          @05A         
         AIF   ('&PART(1)'(5,2) EQ '2)').MCSPS02                   @05A         
&CSID(1) SETA  3                     Set CSS id 3                  @05A         
&PCSSID  SETA  16                    Set CSS bit for mask          @05A         
         AIF   ('&PART(1)'(5,2) EQ '3)').MCSPS02                   @05A         
&CSID(1) SETA  4                     Set CSS id 4                  @LGA         
&PCSSID  SETA  8                     Set CSS bit for mask          @LGA         
         AIF   ('&PART(1)'(5,2) EQ '4)').MCSPS02                   @LGA         
&CSID(1) SETA  5                     Set CSS id 5                  @LGA         
&PCSSID  SETA  4                     Set CSS bit for mask          @LGA         
         AIF   ('&PART(1)'(5,2) EQ '5)').MCSPS02                   @LGA         
&CSID(1) SETA  6                     Set CSS id 6                  @LGA         
&PCSSID  SETA  2                     Set CSS bit for mask          @LGA         
         AIF   ('&PART(1)'(5,2) EQ '6)').MCSPS02                   @LGA         
&CSID(1) SETA  7                     Set CSS id 7                  @LGA         
&PCSSID  SETA  1                     Set CSS bit for mask          @LGA         
         AIF   ('&PART(1)'(5,2) EQ '7)').MCSPS02                   @LGA         
         AGO   .MCSPER1              Invalid CSS id                @05A         
.MCSPS02 ANOP  ,                                                   @05A         
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
.PART502 ANOP  ,                                                   @05A         
&STRING  SETC  ''                     Indicate handling part list  @P1A         
         AIF   (&IP GT &MAXSUB1).PARTE01        Too many operands      *        
                                      in partition list            @05C         
         AIF   ('&PART(&SUB)' NE '0').PART510 partition name       @05C         
         AIF   (N'&PART EQ &SUB).XPART    PART=(0) specified       @05C         
&SUB     SETA  &SUB+1                 Address next sublist entry   @05C         
         AIF   (N'&PART GT &SUB).PARTE05 PART=(0,name,...) spec.   @05C         
&PARSTR  SETC  '&PART(&SUB)'                                       @HHA         
&POS     SETC  '&SUB'                                              @HHA         
         AIF   ('&PART(&SUB)' NE 'REC').PARTE03 not PART=(0,REC)   @05C         
         AGO   .PART515               Test for SHARED parameter    @HHC         
.PART510 ANOP  ,                                                   @HHC         
         AIF   ('&PART(&SUB)' EQ '').PARTE02   No partition name       *        
                                      specified                    @05C         
         AIF   (&SUB NE &RECPOS).PART520    processing 2nd operand @05C         
         AIF   (('&PART(&SUB)' NE 'REC') OR (N'&PART NE &SUB)).PART520 *        
                                      handle partition list        @05C         
.PART515 ANOP  ,                                                   @P5A         
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*        
                                      was specified                @P1A         
&UMODE   SETA  &AREC                  Indicate that channel path is    *        
                                      reconfigurable               @P1A         
         AGO   .XPART                 and continue with next parameter *        
                                                                   @P1A         
.*                                                                              
.PART520 ANOP  ,                                                   @P1A         
&POS     SETC  '&SUB'                 sub entry position           @P1A         
         PARTTEST NAME=&PART(&SUB),SUB=&POS                        @P1A         
         AIF   (NOT &$ERR).PART530    Continue if no error detected@P1A         
&ERROR   SETB  1                      Otherwise indicate error     @P1A         
         AGO   .PART540               and continue                 @P1A         
.*                                                                              
.PART530 ANOP ,                                                    @P1A         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @P1A         
&PACC(&PACT) SETC '&PART(&SUB)'       Save partition name          @P1A         
&PACS(&PACT) SETA &CSID(1)            Default value for CSS id     @HHA         
&PAST(&PACT) SETA &PARTF              Inclusion flag               @HHA         
.*                                                                              
.PART540 ANOP                         Process next partition       @P1A         
&SUB     SETA &SUB+1                  Point to next sublist entry  @P1A         
         AIF  (&SUB LE N'&PART).PART510   More partition's ?       @P1A         
         AGO   .XPART                 and continue with next parameter *        
                                                                   @P1A         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry  in access list          *         
.**********************************************************************         
.PART600 ANOP ,                                                    @P1A         
&SUB1    SETA  1                      Start with first sublist     @HHA         
&IC      SETA  N'&PART                Number of CSS sublists       @HHA         
         AIF   ('&PART(&SUB1)'(1,5) EQ '(CSS(').MCSP000            @HHA         
&IC      SETA  1                      Only one CSS                 @HHA         
&SCSP    SETB  1                      Indicate single CSS list     @HHA         
         AIF   ('&PART(&SUB1)'(1,4) EQ 'CSS(').MCSP000             @HHA         
&SCSP    SETB  0                      Indicate no CSS list         @HHA         
&CSID(&SUB1)  SETA 0                  Default CSS id               @HHA         
&MCSP    SETB  0                      Indicate SMP format          @HHA         
         AGO   .MCSP020                                            @HHA         
.MCSP000 ANOP  ,                                                   @HHA         
&FLAG    SETA  &FLAG+&PCSSF           Indicate CSS w/ PART given   @HHA         
         AIF   (&IC GT &MAXCSS).MCSPER0  Too many CSS              @HHA         
&MCSP    SETB  1                      Indicate XMP format          @HHA         
.MCSP001 ANOP  ,                      Start loop body for CSS      @HHA         
         AIF   ('&PART(&SUB1,1)'(1,4) NE 'CSS(').MCSPER2           @HHA         
&LPCSSID SETA  128                    Set CSS bit for mask         @HHA         
&CSID(&SUB1) SETA 0                   Set CSS id 0                 @HHA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '0)').MCSP002             @HHA         
&LPCSSID SETA  64                    Set CSS bit for mask          @HHA         
&CSID(&SUB1) SETA  1                 Set CSS id 1                  @HHA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '1)').MCSP002             @HHA         
&LPCSSID SETA  32                    Set CSS bit for mask          @HHA         
&CSID(&SUB1) SETA  2                 Set CSS id                    @HHA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '2)').MCSP002             @HHA         
&LPCSSID SETA  16                    Set CSS bit for mask          @HHA         
&CSID(&SUB1) SETA  3                 Set CSS id                    @HHA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '3)').MCSP002             @HHA         
&LPCSSID SETA  8                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  4                 Set CSS id                    @LGA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '4)').MCSP002             @LGA         
&LPCSSID SETA  4                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  5                 Set CSS id                    @LGA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '5)').MCSP002             @LGA         
&LPCSSID SETA  2                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  6                 Set CSS id                    @LGA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '6)').MCSP002             @LGA         
&LPCSSID SETA  1                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  7                 Set CSS id                    @LGA         
         AIF   ('&PART(&SUB1,1)'(5,2) EQ '7)').MCSP002             @LGA         
         AGO   .MCSPER1              Invalid CSS id                @HHA         
.MCSP002 ANOP  ,                                                                
         AIF  (&CSSPI(&CSID(&SUB1)+1)).MCSPER3                     @HHA         
&PCSSID  SETA  &PCSSID+&LPCSSID      Accumulate bit mask for CSSs  @HHA         
&CSSPI(&CSID(&SUB1)+1) SETB 1        Indicate CSS occurred         @HHA         
.MCSP020 ANOP  ,                                                   @HHA         
&STRING  SETC  'ACCESS'              Indicate handling Access list @LBA         
&SUB     SETA  1                     Start with first entry        @HHA         
&SUBL    SETA  2                     Access list sublist           @HHA         
         AIF   (&SCSP).SCSP002       Single CSS list               @HHA         
         AIF   (&MCSP).MCSP003                                     @HHA         
&SUBL    SETA  1                     Access list sublist           @HHA         
.SCSP002 ANOP  ,                                                   @HHA         
&IP      SETA  N'&PART(&SUBL)        Number of partitions in CSS   @HHA         
&IL      SETA  N'&PART               Number of sublists            @HHA         
         AGO   .MCSP004                                            @HHA         
.MCSP003 ANOP  ,                                                                
&IP      SETA  N'&PART(&SUB1,&SUBL)  Number of partitions in CSS   @HHA         
&IL      SETA  N'&PART(&SUB1)        Number of sublists            @HHA         
.MCSP004 ANOP  ,                                                   @HHA         
         AIF   (&IP LT 2).MCSP0X4                                  @HHA         
         AIF   (&UMODE EQ &AREC).PARTE04  Acc list > 1 and REC     @HHA         
&UMODE   SETA  &ASHR                                               @HHA         
.MCSP0X4 ANOP  ,                                                   @HHA         
         AIF   (&IL GT 4).PARTE05    Too many sublists             @HHA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (&IP GT &MAXSUB1).PARTE01          Too many operands in *        
                                      partition list               @HHC         
&SUB     SETA  1                      Start with 1st partition     @HHA         
.PART605 ANOP ,                                                    @HHA         
         AIF   (&SCSP).SCSP005                                     @HHA         
         AIF   (&MCSP).MCSP005                                     @HHA         
.SCSP005 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PART(&SUBL,&SUB)'                                 @HHA         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @HHA         
         AGO   .MCSP006                                            @HHA         
.MCSP005 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PART(&SUB1,&SUBL,&SUB)'                           @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL,'.'&SUB'.')' sub entry position @HHC         
.MCSP006 ANOP  ,                                                                
         AIF   ((&IP EQ 1) AND                                         *        
               ('&PARTS' EQ  '0')).PART700        Null access list @HHC         
.PART610 ANOP  ,                                                   @LBA         
         AIF   ('&PARTS' EQ '').PARTE02        No partition name   @HHC         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).PART620    Continue if no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .PART630               and continue                 @LBA         
.*                                                                              
.PART620 ANOP ,                                                    @LBA         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @LBA         
&PACC(&PACT) SETC '&PARTS'            Save partition name          @HHC         
&PACS(&PACT) SETA &CSID(&SUB1)        Sets CSS id                  @HHA         
&PAST(&PACT) SETA &PARTF              Sets inclusion flag          @HHA         
.*                                                                              
.PART630 ANOP                         Process next partition       @LBA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA         
         AIF  (&SUB LE &IP).PART605   More partitions              @HHC         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry in candidate list        *         
.**********************************************************************         
.*       The second subparameter of the PART parameter can be                   
.*       either a candidate list or REC                                         
.*                                                                              
.PART700 ANOP  ,                                                   @LBA         
&SUBL    SETA  3                     Candidate list sublist        @HHA         
         AIF   (&SCSP).SCSP007       Single CSS list               @HHA         
         AIF   (&MCSP).MCSP007                                     @HHA         
&SUBL    SETA  2                     Candidate list sublist                     
.SCSP007 ANOP  ,                                                                
&IP      SETA  N'&PART(&SUBL)        Number of partitions in CSS   @HHA         
&PARSTR  SETC  '&PART(&SUBL)'                                      @HHA         
         AGO   .MCSP008                                            @HHA         
.MCSP007 ANOP  ,                                                                
&IP      SETA  N'&PART(&SUB1,&SUBL)  Number of partitions in cand  @HHA         
&PARSTR  SETC  '&PART(&SUB1,&SUBL)'                                @HHA         
.MCSP008 ANOP  ,                                                   @HHA         
         AIF   ('&PARSTR' EQ '').PART800       No 2nd subparameter @HHC         
         AIF   (('&PARSTR' NE 'REC') OR (&IL NE &SUBL)).PART710    @HHC         
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*        
                                      was specified                @LBA         
&UMODE   SETA  &AREC                  Indicate that channel path is    *        
                                      reconfigurable               @LBA         
         AGO   .XPART                 and continue with next parameter *        
                                                                   @LBA         
.*                                                                              
.PART710 ANOP  ,                                                   @LBA         
&SUB     SETA  1                      Address first sublist entry  @LBA         
         AIF   (&SCSP).SCSP009                                     @HHA         
         AIF   (&MCSP).MCSP009                                     @HHA         
.SCSP009 ANOP  ,                                                                
&IP      SETA  N'&PART(&SUBL)        Number of partitions in CSS   @HHA         
&PARSTR  SETC  '&PART(&SUBL,&SUB)'                                 @HHA         
         AGO   .MCSP010                                            @HHA         
.MCSP009 ANOP  ,                                                                
&IP      SETA  N'&PART(&SUB1,&SUBL)  Number of partitions in CSS   @HHA         
&PARSTR  SETC  '&PART(&SUB1,&SUBL,&SUB)'                           @HHA         
.MCSP010 ANOP  ,                                                   @HHA         
.*                                                                              
&STRING  SETC  'CANDIDATE'            Indicate handling Candidate list *        
                                                                   @LBA         
         AIF   (&IP GT &MAXSUB1).PARTE01  Too many operands            *        
                                      in candidate list            @HHC         
         AIF   ('&PARSTR' NE '=').PART750          Different candidate *        
                                      list specified               @HHC         
&CSCT    SETA  0                      Check all access list entries@05A         
.PART720 ANOP  ,                                                   @LBA         
         AIF  (&CSCT GE &PACT).PART800  No more partitions in access   *        
                                      list                         @05C         
&CSCT    SETA  &CSCT+1                Increment number of of index in  *        
                                      partition access list        @05A         
         AIF   (&PACS(&PACT) NE &PACS(&CSCT)).PART720  Same CSS id @05A         
&PCCT    SETA  &PCCT+1                Increment number of entries in   *        
                                      partition candidate list     @LBA         
&PCAN(&PCCT) SETC '&PACC(&CSCT)'      Save partition name          @05C         
&PCCS(&PCCT) SETA &PACS(&CSCT)        Save CSS id                  @05C         
&PCST(&PCCT) SETA &PAST(&CSCT)        Save inclusion flag          @05C         
         AGO   .PART720               and continue                 @LBA         
.*                                                                              
.PART750 ANOP  ,                                                   @LBA         
         AIF   (&SCSP).SCSS011                                     @HHA         
         AIF   (&MCSP).MCSS011                                     @HHA         
.SCSS011 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PART(&SUBL,&SUB)'                                 @HHA         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @HHA         
         AGO   .MCSS012                                            @HHA         
.MCSS011 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PART(&SUB1,&SUBL,&SUB)'                           @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL,'.'&SUB'.')' sub entry position @HHC         
.MCSS012 ANOP  ,                                                                
         AIF   ('&PARTS' EQ '').PARTE02              No partition name *        
                                      specified                    @HHC         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).PART760    Continue if no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .PART770               and continue                 @LBA         
.*                                                                              
.PART760 ANOP ,                                                    @LBA         
&PCCT    SETA  &PCCT+1                Increment  number of entries in  *        
                                      partition candidate list     @LBA         
&PCAN(&PCCT) SETC '&PARTS'              Save partition name        @HHC         
&PCCS(&PCCT) SETA &CSID(&SUB1)          Save CSS id                @HHA         
&PCST(&PCCT) SETA &PARTF                Save inclusion flag        @HHA         
.*                                                                              
.PART770 ANOP                         Process next partition       @LBA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA         
         AIF  (&SUB LE &IP).PART750   More partitions              @HHC         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*            Process 3rd subparameter (REC), if specified            *         
.**********************************************************************         
.PART800 ANOP  ,                                                   @LBA         
&SUBL    SETA  &SUBL+1                                             @HHA         
         AIF   (&SCSP).SCSS013                                     @HHA         
         AIF   (&MCSP).MCSS013                                     @HHA         
.SCSS013 ANOP  ,                                                                
&PARSTR  SETC  '&PART(&SUBL)'                                      @HHA         
&POS     SETC  '&SUBL'                                             @HHA         
         AGO   .MCSS014                                            @HHA         
.MCSS013 ANOP  ,                                                                
&PARSTR  SETC  '&PART(&SUB1,&SUBL)'                                @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL'.')'                            @HHA         
.MCSS014 ANOP  ,                                                   @HHA         
         AIF   ('&PARSTR' EQ '').PART850        REC not specified  @HHC         
         AIF   ('&PARSTR' NE 'REC').PARTE03  REC not specified     @HHC         
         AIF   (NOT &MCSP).MCSS015                                 @HHA         
         AIF   (NOT &SCSP).PARTE07                                 @HHA         
.MCSS015 ANOP  ,                                                   @HHA         
         AIF   (&UMODE NE &ADED).PARTE04  report error if also "shared"*        
                                      was specified                @LBA         
         AIF   (&IC GT 1).PARTE05     Specified on spanned CHPID   @HHA         
&UMODE   SETA  &AREC                  Indicate that channel path is    *        
                                      reconfigurable               @LBA         
         AGO  .XPART                  and continue                 @LBA         
.PART850 ANOP ,                                                    @HHA         
&SUB1    SETA  &SUB1+1                Increment to next CSS list   @HHA         
         AIF   (&SUB1 LE &IC).MCSP001                              @HHA         
         AGO  .XPART                  and continue                 @LBA         
.*                                                                              
.PARTE01 ANOP  ,                                                   @LBA         
         MNOTE 8,'015 PARTITION &STRING LIST &SUB1 EXCEEDS &MAXSUB1 ENT*        
               RIES.'                                              @HHC         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE02 ANOP  ,                                                   @LBA         
         MNOTE 8,'017 PARTITION NAME REQUIRED IN SUBLIST ENTRY &SUB OF *        
               &STRING LIST &SUB1.'                                @HHC         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE03 ANOP  ,                                                   @LBA         
         MNOTE 8,'003 PARTITION SUBLIST ENTRY &POS IS INVALID - &PARSTR*        
               .'                                                  @HHC         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE04 ANOP  ,                                                   @LBA         
         MNOTE 8,'053 CONFLICTING CHANNEL PATH OPERATION MODES SPECIFIE*        
               D.'                                                 @LBA         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE05 ANOP  ,                                                   @LBA         
         MNOTE 8,'015 PARTITION PARAMETER EXCEEDS &IL SUBLIST ENTRIES.'*        
                                                                   @HHC         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE06 ANOP  ,                                                   @LBA         
         MNOTE 8,'051 PART PARAMETER AND PARTITION PARAMETER ARE MUTUAL*        
               LY EXCLUSIVE.'                                      @HHA         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART                 and continue                 @LBA         
.*                                                                              
.PARTE07 ANOP  ,                                                   @HHA         
         MNOTE 8,'052 SYNTAX FOR REC PARAMETER IS INVALID.'        @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
         AGO   .XPART                 and continue                 @HHA         
.*                                                                              
.XPART   ANOP  ,                      End of handling parameter    @LBA         
.*                                                                              
.**********************************************************************         
.*       Set CHPID operation mode to "Shared"  if more than one       *         
.*       partition is defined in the access list.                     *         
.**********************************************************************         
         AIF  (&PACT LE 1).XPART2     Only one partition in access list*        
                                                                   @LBA         
         AIF   (&UMODE NE &ADED).XPART2  operation mode "shared" or    *        
                                      "reconfigurable" ?           @LBA         
&UMODE   SETA  &ASHR                  Indicate that channel path is    *        
                                      shared                       @LBA         
         AGO   .XPARTX                and continue                 @LBA         
.*                                                                              
.**********************************************************************         
.*       Set CHPID operation mode to "REC" if access list is empty    *         
.*       and candidate list contains 1 entry and operation mode is    *         
.*       still "dedicated".                                       @LTA*         
.**********************************************************************         
.XPART2  ANOP                                                                   
         AIF  (&PCCT EQ 0).XPARTX     Candidate list empty ?       @LBA         
         AIF  (&PACT NE 0).XPARTX     Access list not empty?       @LTA         
         AIF  (&PCCT GT 1).XPARTX     Candidate list > 1?          @LTA         
         AIF   (&UMODE NE &ADED).XPARTX  operation mode "shared" or    *        
                                      "reconfigurable" ?           @LBA         
&UMODE   SETA  &AREC                  Indicate that channel path is    *        
                                      reconfigurable               @LBA         
.*                                                                              
.XPARTX  ANOP  ,                      End of handling PARTITION    @LBA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate NOTPART parameter ((name,name,..),(name,name,...))  *         
.*                           or ((CSS(n),(n1,n2,...),(nx,ny,..)),...) *         
.*                                                                @HHC*         
.**********************************************************************         
.NPRT500 ANOP                                                      @LTA         
         AIF   ('&NOTPART' EQ '').XNPRTX  NOTPART not specified    @LTA         
&FLAG    SETA  &FLAG+&NPRTF           Indicate NOTPART specified   @LTA         
.*                                                                              
&MAXSUB  SETA  128                    Maximum number of partitions @LGC         
&MAXSUB1 SETA  15                     Maximum number of partitions @HHA         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&L       SETA  8                      Maximum PARTITION length     @LTA         
         AIF   ('&NOTPART'(1,2) EQ '((').NPRT600 double parens ?   @LTA         
         AIF   ('&NOTPART'(1,5) NE '(CSS(').NPRT501 single SMP lst @HHA         
         AIF   (('&NOTPART'(1,5) EQ '(CSS(') AND                       *        
               ('&NOTPART'(7,3) EQ '),(')).NPRT600 simple XMP list @05C         
.NPRT501 ANOP ,                                                    @05A         
         AIF   ((('&PART' NE '') OR ('&PARTITION' NE '')) AND          *        
               ('&NOTPART' NE '')).NPRTE06  invalid combination    @LTA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list with CSS(x)                   *         
.**********************************************************************         
.*                                                                              
&CSID(1) SETA 0                       Set default CSS id           @05A         
&RECPOS  SETA  2                      Position of REC keyword      @05A         
&IP      SETA  N'&NOTPART             Number of partitions in list @05A         
&SUB     SETA  1                      Address first sublist entry  @05A         
         AIF   ('&NOTPART'(1,5) NE '(CSS(').NPRT502 No CSS given   @05A         
         AIF   (&MCSP).SETDON0        Flag already set w/ PART     @05A         
&FLAG    SETA   &FLAG+&PCSSF          Indicate CSS w/ PART given   @05A         
&MCSP    SETB  1                      Indicate XMP format          @05A         
.SETDON0 ANOP  ,                                                   @05A         
&RECPOS  SETA  3                      Position of REC keyword      @05A         
&IP      SETA  N'&NOTPART-1           Number of additional elems   @05A         
&SUB     SETA  2                      Address first sublist entry  @05A         
&CSID(1) SETA 0                       Set CSS id 0                 @05A         
&NCSSID  SETA  128                    Set CSS bit for mask         @05A         
         AIF   ('&NOTPART(1)'(5,2) EQ '0)').MCSPS03                @05A         
&CSID(1) SETA  1                      Set CSS id 1                 @05A         
&NCSSID  SETA  64                     Set CSS bit for mask         @05A         
         AIF   ('&NOTPART(1)'(5,2) EQ '1)').MCSPS03                @05A         
&CSID(1) SETA  2                      Set CSS id                   @05A         
&NCSSID  SETA  32                     Set CSS bit for mask         @05A         
         AIF   ('&NOTPART(1)'(5,2) EQ '2)').MCSPS03                @05A         
&CSID(1) SETA  3                      Set CSS id                   @05A         
&NCSSID  SETA  16                     Set CSS bit for mask         @05A         
         AIF   ('&NOTPART(1)'(5,2) EQ '3)').MCSPS03                @05A         
&CSID(1) SETA  4                      Set CSS id                   @LGA         
&NCSSID  SETA  8                      Set CSS bit for mask         @LGA         
         AIF   ('&NOTPART(1)'(5,2) EQ '4)').MCSPS03                @LGA         
&CSID(1) SETA  5                      Set CSS id                   @LGA         
&NCSSID  SETA  4                      Set CSS bit for mask         @LGA         
         AIF   ('&NOTPART(1)'(5,2) EQ '5)').MCSPS03                @LGA         
&CSID(1) SETA  6                      Set CSS id                   @LGA         
&NCSSID  SETA  2                      Set CSS bit for mask         @LGA         
         AIF   ('&NOTPART(1)'(5,2) EQ '6)').MCSPS03                @LGA         
&CSID(1) SETA  7                      Set CSS id                   @LGA         
&NCSSID  SETA  1                      Set CSS bit for mask         @LGA         
         AIF   ('&NOTPART(1)'(5,2) EQ '7)').MCSPS03                @LGA         
         AGO   .MCSPER1              Invalid CSS id                @05A         
.MCSPS03 ANOP  ,                                                   @05A         
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
.NPRT502 ANOP ,                                                    @05A         
&STRING  SETC  ''                     Indicate handling part list  @LTA         
         AIF   (&IP GT &MAXSUB).NPRTE01  Too many operands             *        
                                      in partition list            @05C         
*&SUB    SETA  &SUB+1                 Address first sublist entry  @09D         
         AIF   (('&NOTPART(&SUB)' EQ '0') AND                          *        
               (N'&NOTPART EQ &SUB)).NPRT800     Null access list  @05C         
.NPRT510 ANOP  ,                                                   @LTA         
         AIF   ('&NOTPART(&SUB)' EQ '').NPRTE02 No partition name      *        
                                      specified                    @LTA         
.*                                                                              
.NPRT520 ANOP  ,                                                   @LTA         
&POS     SETC  '&SUB'                 sub entry position           @LTA         
         PARTTEST NAME=&NOTPART(&SUB),SUB=&POS                     @LTA         
         AIF   (NOT &$ERR).NPRT530    Continue if no error detected@LTA         
&ERROR   SETB  1                      Otherwise indicate error     @LTA         
         AGO   .NPRT540               and continue                 @LTA         
.*                                                                              
.NPRT530 ANOP ,                                                    @LTA         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @LTA         
&PACC(&PACT) SETC '&NOTPART(&SUB)'    Save partition name          @LTA         
&PACS(&PACT) SETA &CSID(1)            No CSS id set                @05C         
&PAST(&PACT) SETA &NPRTF              Exclusion flag               @HHA         
.*                                                                              
.NPRT540 ANOP                         Process next partition       @LTA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA         
         AIF  (&SUB LE N'&NOTPART).NPRT510   More partition's ?    @LTA         
         AGO   .XNPRT                 and continue with next parameter *        
                                                                   @LTA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry  in access list          *         
.**********************************************************************         
.NPRT600 ANOP ,                                                    @LTA         
&SCSP    SETB  0                      Reset single XMP list        @HHA         
&SUB1    SETA  1                      Start with first sublist     @HHA         
&IC      SETA  N'&NOTPART             Number of CSS sublists       @HHA         
         AIF   ('&NOTPART(&SUB1)'(1,5) EQ '(CSS(').MCSNP00         @HHA         
&IC      SETA  1                      Only one CSS                 @HHA         
&SCSP    SETB  1                      Assume single XMP list       @HHA         
         AIF   ('&NOTPART(&SUB1)'(1,4) EQ 'CSS(').MCSNP00          @HHA         
&SCSP    SETB  0                      No XMP format                @HHA         
         AIF   ((('&PART' NE '') OR ('&PARTITION' NE '')) AND          *        
               ('&NOTPART' NE '')).NPRTE06  invalid combination    @LTA         
&CSID(&SUB1)  SETA 0                  Default CSS id               @HHA         
&MCSP    SETB  0                      Indicate SMP format          @HHA         
         AGO   .MCSNP20                                            @HHA         
.MCSNP00 ANOP  ,                                                   @HHA         
         AIF   ((('&PART' NE '') OR ('&PARTITION' NE '')) AND          *        
               (NOT &MCSP)).NPRTE06         invalid combination    @HHA         
         AIF   (&MCSP).SETDONE        Flag already set w/ PART     @HHA         
&FLAG    SETA  &FLAG+&PCSSF           Indicate CSS w/ PART given   @HHA         
.SETDONE ANOP  ,                                                   @HHA         
         AIF   (&IC GT &MAXCSS).MCSPER0  Too many CSS              @HHA         
&MCSP    SETB  1                      Indicate XMP format          @HHA         
.MCSNP01 ANOP  ,                      Start loop body for CSS      @HHA         
         AIF   ('&NOTPART(&SUB1,1)'(1,4) NE 'CSS(').MCSPER2        @HHA         
&LNCSSID SETA  128                   Set CSS bit for mask          @HHA         
&CSID(&SUB1) SETA 0                   Set CSS id 0                 @HHA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '0)').MCSNP02          @HHA         
&LNCSSID SETA  64                    Set CSS bit for mask          @HHA         
&CSID(&SUB1) SETA  1                 Set CSS id 1                  @HHA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '1)').MCSNP02          @HHA         
&LNCSSID SETA  32                    Set CSS bit for mask          @HHA         
&CSID(&SUB1) SETA  2                 Set CSS id                    @HHA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '2)').MCSNP02          @HHA         
&LNCSSID SETA  16                    Set CSS bit for mask          @HHA         
&CSID(&SUB1) SETA  3                 Set CSS id                    @HHA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '3)').MCSNP02          @HHA         
&LNCSSID SETA  8                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  4                 Set CSS id                    @LGA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '4)').MCSNP02          @LGA         
&LNCSSID SETA  4                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  5                 Set CSS id                    @LGA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '5)').MCSNP02          @LGA         
&LNCSSID SETA  2                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  6                 Set CSS id                    @LGA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '6)').MCSNP02          @LGA         
&LNCSSID SETA  1                     Set CSS bit for mask          @LGA         
&CSID(&SUB1) SETA  7                 Set CSS id                    @LGA         
         AIF   ('&NOTPART(&SUB1,1)'(5,2) EQ '7)').MCSNP02          @LGA         
         AGO   .MCSPER1              Invalid CSS id                @HHA         
.MCSNP02 ANOP  ,                                                                
         AIF  (&CSSPI(&CSID(&SUB1)+1)).MCSPER3                     @HHA         
&NCSSID  SETA  &NCSSID+&LNCSSID      Accumulate bit mask for CSSs  @HHA         
&CSSPI(&CSID(&SUB1)+1) SETB 1        Indicate CSS occurred         @HHA         
.MCSNP20 ANOP  ,                                                   @HHA         
&STRING  SETC  'ACCESS'               Indicate handling Access list@LBA         
&SUB     SETA  1                     Start with first entry        @HHA         
&SUBL    SETA  2                     Assume Access is 2nd sublist  @HHA         
         AIF   (&SCSP).SCSNP03                                     @HHA         
         AIF   (&MCSP).MCSNP03                                     @HHA         
&SUBL    SETA  1                     Access is first sublist       @HHA         
.SCSNP03 ANOP  ,                                                   @HHA         
&IP      SETA  N'&NOTPART(&SUBL)     Number of partitions in CSS   @HHA         
&IL      SETA  N'&NOTPART+1-&SUBL    Number of sublists            @HHA         
&NPRTACC SETC  '&NOTPART(&SUBL,&SUB)' 1st  entry in access list    @HHA         
         AGO   .MCSNP04                                            @HHA         
.MCSNP03 ANOP  ,                                                                
&IP      SETA  N'&NOTPART(&SUB1,&SUBL)   No of partitions in CSS   @HHA         
&IL      SETA  N'&NOTPART(&SUB1)-1   Number of sublists            @HHA         
&NPRTACC SETC  '&NOTPART(&SUB1,&SUBL,&SUB)' 1st entry in accesslst @HHA         
.MCSNP04 ANOP  ,                                                   @HHA         
         AIF   (&IL GT 2).NPRTE05    Too many sublists             @HHA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   (&IP GT &MAXSUB1).PARTE01          Too many operands in *        
                                      partition list               @HHC         
&SUB     SETA  1                      Start with 1st partition     @HHA         
.NPRT605 ANOP ,                                                    @HHA         
         AIF   (&SCSP).SCSNP05                                     @HHA         
         AIF   (&MCSP).MCSNP05                                     @HHA         
.SCSNP05 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&NOTPART(&SUBL,&SUB)'                              @HHA         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @HHA         
         AGO   .MCSNP06                                            @HHA         
.MCSNP05 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&NOTPART(&SUB1,&SUBL,&SUB)'                        @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL,'.'&SUB'.')' sub entry position @HHA         
.MCSNP06 ANOP  ,                                                                
         AIF   ((&IP EQ 1) AND                                         *        
               ('&PARTS' EQ  '0')).NPRT700        Null access list @HHC         
.NPRT610 ANOP  ,                                                   @LTA         
         AIF   ('&PARTS' EQ '').NPRTE02        No partition name   @HHC         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).NPRT620    Continue if no error detected@LTA         
&ERROR   SETB  1                      Otherwise indicate error     @LTA         
         AGO   .NPRT630               and continue                 @LTA         
.*                                                                              
.NPRT620 ANOP ,                                                    @LTA         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @LTA         
&PACC(&PACT) SETC '&PARTS'            Save partition name          @HHC         
&PACS(&PACT) SETA &CSID(&SUB1)        Sets CSS id                  @HHA         
&PAST(&PACT) SETA &NPRTF              Sets exclusion flag          @HHA         
.*                                                                              
.NPRT630 ANOP                         Process next partition       @LTA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA         
         AIF  (&SUB LE &IP).NPRT605   More partitions              @HHC         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry in candidate list        *         
.**********************************************************************         
.*       The second subparameter of the NOTPART parameter must be               
.*       the candidate exclude list                                             
.*                                                                              
.NPRT700 ANOP  ,                                                   @LTA         
&SUBL    SETA  &SUBL+1                                                          
         AIF   (&SCSP).SCSNP07                                     @HHA         
         AIF   (&MCSP).MCSNP07                                     @HHA         
.SCSNP07 ANOP  ,                                                   @HHA         
&IP      SETA  N'&NOTPART(&SUBL)     Number of partitions in CSS   @HHA         
&PARSTR  SETC  '&NOTPART(&SUBL)'                                   @HHA         
&NPRTCAN SETC  '&NOTPART(&SUBL,1)'   First entry in candidate list @HHA         
         AGO   .MCSNP08                                            @HHA         
.MCSNP07 ANOP  ,                                                   @HHA         
&IP      SETA  N'&NOTPART(&SUB1,&SUBL)   No of partitions in cand  @HHA         
&PARSTR  SETC  '&NOTPART(&SUB1,&SUBL)'                             @HHA         
&NPRTCAN SETC  '&NOTPART(&SUB1,&SUBL,1)' 1st entry in cand list    @HHA         
.MCSNP08 ANOP  ,                                                   @HHA         
         AIF   ('&PARSTR' EQ '').NPRT850       No 2nd subparameter @HHC         
.*                                                                              
.NPRT710 ANOP  ,                                                   @LBA         
&SUB     SETA  1                      Address first sublist entry  @LBA         
         AIF   (&SCSP).SCSNP09                                     @HHA         
         AIF   (&MCSP).MCSNP09                                     @HHA         
.SCSNP09 ANOP  ,                                                   @HHA         
&IP      SETA  N'&NOTPART(&SUBL)     Number of partitions in CSS   @HHA         
&PARSTR  SETC  '&NOTPART(&SUBL,&SUB)'                              @HHA         
         AGO   .MCSNP10                                            @HHA         
.MCSNP09 ANOP  ,                                                   @HHA         
&IP      SETA  N'&NOTPART(&SUB1,&SUBL)   No of partitions in CSS   @HHA         
&PARSTR  SETC  '&NOTPART(&SUB1,&SUBL,&SUB)'                        @HHA         
.MCSNP10 ANOP  ,                                                   @HHA         
.*                                                                              
&STRING  SETC  'CANDIDATE'            Indicate handling Candidate list *        
                                                                   @LBA         
         AIF   (&IP GT &MAXSUB1).PARTE01  Too many operands            *        
                                      in candidate list            @HHC         
         AIF   (('&NPRTCAN' EQ '0') OR (('&NPRTACC' EQ '0') AND        *        
               ('&NPRTCAN' EQ '='))).NPRTE04  Empty candidate list @HHA         
         AIF   ('&NPRTCAN' NE '=').NPRT750  Different candidate list   *        
                                       specified                   @LTC         
&CSCT    SETA  0                      Check all access list entries@05A         
.NPRT720 ANOP  ,                                                   @LBA         
         AIF  (&CSCT GE &PACT).NPRT850  No more partitions in access   *        
                                      list                         @05C         
&CSCT    SETA  &CSCT+1                Increment number of of index in  *        
                                      partition access list        @05A         
         AIF   (&PACS(&PACT) NE &PACS(&CSCT)).NPRT720  Same CSS id @05A         
&PCCT    SETA  &PCCT+1                Increment number of entries in   *        
                                      partition candidate list     @LTA         
&PCAN(&PCCT) SETC '&PACC(&CSCT)'      Save partition name          @05C         
&PCCS(&PCCT) SETA &PACS(&CSCT)        Save CSS id                  @05C         
&PCST(&PCCT) SETA &PAST(&CSCT)        Save exclusion flag          @05C         
         AGO   .NPRT720               and continue                 @LTA         
.*                                                                              
.NPRT750 ANOP  ,                                                   @LTA         
         AIF   (&SCSP).SCSNP11                                     @HHA         
         AIF   (&MCSP).MCSNP11                                     @HHA         
.SCSNP11 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&NOTPART(&SUBL,&SUB)'                              @HHA         
&POS     SETC  '('.'&SUBL,'.'&SUB'.')'          sub entry position @HHA         
         AGO   .MCSNP12                                            @HHA         
.MCSNP11 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&NOTPART(&SUB1,&SUBL,&SUB)'                        @HHA         
&POS     SETC  '('.'&SUB1'.',&SUBL,'.'&SUB'.')' sub entry position @HHC         
.MCSNP12 ANOP  ,                                                                
         AIF   ('&PARTS' EQ '').NPRTE02              No partition name *        
                                      specified                    @HHC         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).NPRT760    Continue if no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .NPRT770               and continue                 @LBA         
.*                                                                              
.NPRT760 ANOP ,                                                    @LBA         
&PCCT    SETA  &PCCT+1                Increment  number of entries in  *        
                                      partition candidate list     @LBA         
&PCAN(&PCCT) SETC '&PARTS'              Save partition name        @HHC         
&PCCS(&PCCT) SETA &CSID(&SUB1)          Save CSS id                @HHA         
&PCST(&PCCT) SETA &NPRTF                Save exclusion flag        @HHA         
.*                                                                              
.NPRT770 ANOP                         Process next partition       @LTA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA         
         AIF  (&SUB LE &IP).NPRT750   More partitions              @HHC         
.*                                                                              
.NPRT850 ANOP ,                                                    @HHA         
&SUB1    SETA  &SUB1+1                Increment to next CSS list   @HHA         
         AIF   (&SUB1 LE &IC).MCSNP01                              @HHA         
         AGO  .XNPRT                  and continue                 @LTA         
.*                                                                              
.**********************************************************************         
.*            NOTPART keyword processed                               *         
.**********************************************************************         
.NPRT800 ANOP  ,                                                   @LTA         
         AGO  .XNPRT                  and continue                 @LTA         
.*                                                                              
.NPRTE01 ANOP  ,                                                   @LTA         
         MNOTE 8,'015 NOTPART &STRING LIST EXCEEDS &MAXSUB ENTRIES.'   *        
                                                                   @LTA         
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XNPRT                 and continue                 @LTA         
.*                                                                              
.NPRTE02 ANOP  ,                                                   @LTA         
         MNOTE 8,'017 PARTITION NAME REQUIRED IN SUBLIST ENTRY &SUB OF *        
               &STRING LIST.'                                      @LTA         
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XNPRT                 and continue                 @LTA         
.*                                                                              
.NPRTE04 ANOP  ,                                                   @LTA         
         MNOTE 8,'053 EMPTY CANDIDATE LIST IS NOT ALLOWED FOR NOTPART P*        
               ARAMETER.'                                          @P4C         
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XNPRT                 and continue                 @LTA         
.*                                                                              
.NPRTE05 ANOP  ,                                                   @LTA         
         MNOTE 8,'015 NOTPART PARAMETER EXCEEDS 2 SUBLIST ENTRIES.'             
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XNPRT                 and continue                 @LTA         
.*                                                                              
.NPRTE06 ANOP  ,                                                   @LTA         
         MNOTE 8,'051 NOTPART PARAMETER AND PARTITION PARAMETER ARE MUT*        
               UALLY EXCLUSIVE.'                                   @LTA         
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XNPRT                 and continue                 @LTA         
.*                                                                              
.MCSPER0 MNOTE 8,'045 PART PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRIES.'          
.*                                                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XNPRT                 and exit                     @HHA         
.*                                                                              
.MCSPER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF NOTPART OR PART/PARTIT*        
               ION PARAMETER IS INVALID.'                          @09C         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XNPRT                 and exit                     @HHA         
.*                                                                              
.MCSPER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF NOTPART OR PART/PA*        
               RTITION PARAMETER HAS AN INVALID FORMAT.'           @09A         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XNPRT                 and exit                     @HHA         
.*                                                                              
.MCSPER3 MNOTE 8,'045 CSS ID &CSID(&SUB1) SPECIFIED TWICE.'        @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XNPRT                 and exit                     @HHA         
.*                                                                              
.XNPRT   ANOP  ,                      End of handling parameter    @LTA         
.*                                                                              
.**********************************************************************         
.*       Set CHPID operation mode to "Shared"  if NOTPART is          *         
.*       defined.                                                     *         
.**********************************************************************         
         AIF  ('&NOTPART' EQ '').XNPRTX NOTPART not specified      @LTA         
         AIF  (&UMODE EQ &AREC).NPRTE07  NOTPART and REC specified @HHA         
&UMODE   SETA  &ASHR                  Indicate that channel path is    *        
                                      shared                       @LTA         
         AGO   .XNPRTX                and continue                 @LTA         
.*                                                                              
.*                                                                              
.NPRTE07 ANOP  ,                                                   @LBA         
         MNOTE 8,'053 CONFLICTING CHANNEL PATH OPERATION MODES SPECIFIE*        
               D.'                                                 @LBA         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XNPRTX                and continue                 @LBA         
.*                                                                              
.XNPRTX  ANOP  ,                      End of handling NOTPART      @LTA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate OS                  2 char hex value            @M5A*         
.*                                                                    *         
.**********************************************************************         
.CKOS    ANOP                                                                   
         AIF   ('&OS' EQ '').XOS             OS not specified      @M5A         
         AIF   ('&CHPARM' NE '').NOSE03    OS and CHPARM specified @HHA         
&L       SETA  2                      Hex value length             @M5A         
         AIF   (K'&OS NE &L).NOSE01   Length must be correct       @M5A         
         HEXCHECK STRING=&OS          Check next hex value         @M5A         
         AIF   (&$ERR).NOSE02         Invalid character            @M5A         
         AIF   ('&OS' EQ '00').XOS    CHPARM=00 is accepted        @HHA         
         AIF   (('&TYPE' NE 'IQD') AND                                 *        
               ('&TYPE' NE 'CNC') AND ('&TYPE' NE 'FCV') AND           *        
               ('&TYPE' NE 'FC')).NOSE04  Only allowed types       @HHA         
         AIF   ('&TYPE' NE 'IQD').NOS001                           @HHA         
         AIF   ('&OS' EQ '20').NOSE04                              @HHA         
         AIF   ('&OS' EQ '10').NOSE04                              @HHA         
         AIF   ('&OS' EQ '08').NOSE04                              @HHA         
         AIF   ('&OS' EQ '04').NOSE04                              @HHA         
         AIF   ('&OS' EQ '02').NOSE04                              @HHA         
         AIF   ('&OS' EQ '01').NOSE04                              @HHA         
         AGO   .XOS                                                @HHA         
.NOS001  ANOP  ,                      Check managed CHPID          @HHA         
         AIF   ('&OS' NE '01').NOSE04                              @HHA         
         AGO   .XOS                   Check next keyword           @HHA         
.NOSE01  ANOP  ,                                                   @M5A         
         MNOTE 8,'015 OS PARAMETER IS NOT &L CHARACTERS.'          @M5A         
&ERROR   SETB  1                      Indicates error              @M5A         
         AGO   .XOS                   Check next keyword           @M5A         
.*                                                                              
.NOSE02  ANOP  ,                                                   @M5A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN OS PARAMTER.'  @M5A         
&ERROR   SETB  1                      Indicates error              @M5A         
         AGO   .XOS                   Check next keyword           @M5A         
.*                                                                              
.NOSE03  ANOP  ,                                                   @HHA         
         MNOTE 8,'051 OS PARAMETER AND CHPARM PARAMETER ARE MUTUALLY EX*        
               CLUSIVE.'                                           @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
         AGO   .XOS                   Check next keyword           @HHA         
.*                                                                              
.NOSE04  ANOP  ,                                                   @HHA         
         MNOTE 8,'052 OS PARAMETER CONTAINS INVALID VALUE.'        @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
         AGO   .XOS                   Check next keyword           @HHA         
.*                                                                              
.XOS     ANOP  ,                                                   @M5A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate CHPARM              2 char hex value            @HHA*         
.*                                                                    *         
.**********************************************************************         
.CKCHPRM ANOP                                                                   
         AIF   ('&CHPARM' EQ '').XCHPRM  CHPARM not specified      @HHA         
&L       SETA  2                      Hex value length             @HHA         
         AIF   (K'&CHPARM NE &L).NCPE01 Length must be correct     @HHA         
         HEXCHECK STRING=&CHPARM      Check next hex value         @HHA         
         AIF   (&$ERR).NCPE02         Invalid character            @HHA         
&LCHPRM  SETC  '&CHPARM'                                           @HXA         
         AIF   ('&CHPARM' EQ '00').XCHPRM CHPARM=00 is accepted    @HHA         
         AIF   (('&TYPE' NE 'IQD') AND                                 *        
               ('&TYPE' NE 'OSD') AND                                  *        
               ('&TYPE' NE 'OSX') AND                                  *        
               ('&TYPE' NE 'OSM') AND                                  *        
               ('&TYPE' NE 'OSC') AND                                  *        
               ('&TYPE' NE 'CNC') AND ('&TYPE' NE 'FCV') AND           *        
               ('&TYPE' NE 'FC')).NCPE04  Only allowed types       @L6C         
         AIF   ('&TYPE' NE 'IQD').NCP000                           @HXC         
         AIF   (('&CHPARM'(1,1) NE 'C') AND                            *        
               ('&CHPARM'(1,1) NE '8') AND                             *        
               ('&CHPARM'(1,1) NE '4') AND                             *        
               ('&CHPARM'(1,1) NE '0')).NCPE04                     @L9A         
         AIF   (('&CHPARM'(2,1) NE '4') AND                            *        
               ('&CHPARM'(2,1) NE '2') AND                             *        
               ('&CHPARM'(2,1) NE '0')).NCPE04                     @L9A         
         AGO   .XCHPRM                                             @HHA         
.NCP000  ANOP  ,                      Check OSC CHPID              @HXA         
         AIF   ('&TYPE' NE 'OSC').NCP001                           @HXA         
         AIF   ('&CHPARM' NE '40').NCPE04                          @HXA         
&LCHPRM  SETC  '00'                   Reset to 00                  @HXA         
         AGO   .XCHPRM                                             @HXA         
.NCP001  ANOP  ,                      Check OSD CHPID              @HNC         
         AIF   (('&TYPE' NE 'OSD') AND                                 *        
               ('&TYPE' NE 'OSX') AND                                  *        
               ('&TYPE' NE 'OSM')).NCP002                          @L6C         
         AIF   ('&CHPARM' EQ '02').XCHPRM                          @HNA         
         AGO   .NCPE04                                             @HNA         
.NCP002  ANOP  ,                      Check managed CHPID          @HNA         
         AIF   ('&CHPARM' NE '01').NCPE04                          @HHA         
         AGO   .XCHPRM                Check next keyword           @HHA         
.NCPE01  ANOP  ,                                                   @HHA         
         MNOTE 8,'015 CHPARM PARAMETER IS NOT &L CHARACTERS.'      @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
         AGO   .XCHPRM                Check next keyword           @HHA         
.*                                                                              
.NCPE02  ANOP  ,                                                   @HHA         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN CHPARM PARAMETER.'          
.*                                                                 @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
         AGO   .XCHPRM                Check next keyword           @HHA         
.*                                                                              
.NCPE04  ANOP  ,                                                   @HHA         
         MNOTE 8,'052 CHPARM PARAMETER CONTAINS INVALID VALUE.'    @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
         AGO   .XCHPRM                Check next keyword           @HHA         
.*                                                                              
.XCHPRM  ANOP  ,                                                   @HHA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate IOCLUSTER parameter (name)                          *         
.*                                                                @M5A*         
.**********************************************************************         
.SPLX500 ANOP                                                      @M5A         
         AIF   ('&IOCLUSTER' EQ '').XSPLXX SYSPLEX not specified   @M5A         
&FLAG    SETA  &FLAG+&SPLXF           Indicate SYSPLEX specified   @M5A         
         AIF   (('&PART' NE '') OR ('&PARTITION' NE '') OR             *        
               ('&NOTPART' NE '')).SPLXE06  invalid combination    @M5A         
.*                                                                              
&L       SETA  8                      Maximum SYSPLEX length       @M5A         
&PACT    SETA  0                      Initialize number of entries in  *        
                                      partition access list        @M5A         
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
         AIF   (K'&IOCLUSTER GT &L).SPLXE02 Operand value too long @M5A         
         ALPHANX STRING=&IOCLUSTER         Syntax check of name    @M5A         
         AIF   (NOT &INTERR).SPLX120   Continue when no error      @M5A         
&ERROR   SETB  1                       Otherwise indicate error    @M5A         
         AGO   .SPLXE03                and stop                    @M5A         
.*                                                                 @M5A         
.SPLX120 ANOP  ,                                                   @M5A         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition access list        @M5A         
&PACC(&PACT) SETC '&IOCLUSTER'        Save sysplex name            @M5A         
.*                                                                              
.**********************************************************************         
.*            SYSPLEX keyword processed                               *         
.**********************************************************************         
.SPLX800 ANOP  ,                                                   @M5A         
         AGO  .XSPLXX                 and continue                 @M5A         
.*                                                                              
.SPLXE02 ANOP  ,                                                   @M5A         
         MNOTE 8,'015 IOCLUSTER NAME &IOCLUSTER EXCEEDS &L CHARACTERS.'*        
                                                                   @M5A         
&ERROR   SETB  1                      Indicates error              @M5A         
         AGO   .XSPLXX                and continue                 @M5A         
.*                                                                              
.SPLXE03 ANOP  ,                                                   @M5A         
         MNOTE 8,'053 IOCLUSTER NAME &IOCLUSTER IS NOT ALPHANUMERIC.'  *        
                                                                   @M5A         
&ERROR   SETB  1                      Indicates error              @M5A         
         AGO   .XSPLXX                and continue                 @M5A         
.*                                                                              
.SPLXE06 ANOP  ,                                                   @M5A         
         MNOTE 8,'051 NOTPART, PARTITION AND IOCLUSTER PARAMETERS ARE M*        
               UTUALLY EXCLUSIVE.'                                 @M5A         
&ERROR   SETB  1                      Indicates error              @M5A         
         AGO   .XSPLXX                and continue                 @M5A         
.*                                                                              
.XSPLXX  ANOP  ,                      End of handling parameter    @M5A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate SWITCH              2 hex digits, 00..FF            *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  2                         Required SWITCH length                 
         AIF   ('&SWITCH' EQ '').XSWITCH SWITCH not specified                   
&FLAG    SETA  &FLAG+&SWTF               Indicate SWITCH specified              
         AIF (N'&SWITCH GT 1).SWTSUBL    Operand is in sublist format           
         AIF (K'&SWITCH EQ &L).SWTLEN    Length of SWITCH (no parens)           
         MNOTE 8,'022 SWITCH PARAMETER MUST BE &L DIGITS.'                      
&ERROR   SETB 1                          Indicate error                         
.SWTLEN  ANOP                                                                   
&NDX     SETA 1                          Point to first digit                   
.*--------------------------------------------------------------------*         
.*       Loop to validate each number in the SWITCH                   *         
.*--------------------------------------------------------------------*         
.SWTLOOP ANOP                                                                   
         AIF ('&SWITCH'(&NDX,1) LT 'A').BADSWT   Invalid digit                  
         AIF ('&SWITCH'(&NDX,1) LE 'F').GOODSWT  Hex digit (A-F)                
         AIF ('&SWITCH'(&NDX,1) LT '0').BADSWT   Invalid digit                  
         AIF ('&SWITCH'(&NDX,1) LE '9').GOODSWT  Hex digit (0-9)                
.BADSWT  ANOP                            Invalid character in SWITCH            
&CWK     SETC '&SWITCH'(&NDX,1)          Isolate invalid character              
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SWITCH PARAMETER.'          
&ERROR   SETB 1                          Indicate error                         
.GOODSWT ANOP                                                                   
&NDX     SETA  &NDX+1                    Point to next digit                    
         AIF (&NDX LE K'&SWITCH).SWTLOOP Check next digit                       
         AGO  .XSWITCH                   Check TYPE keyword                     
.*                                                                              
.SWTSUBL MNOTE 8,'014 SWITCH PARAMETER MAY NOT BE A SUBLIST.'                   
&ERROR   SETB 1                          Indicate error                         
.*                                                                              
.XSWITCH ANOP  ,                                                   @P2A         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate AID                 2 hex digits, 00..FF            *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  2                         Required AID length       @HVA         
         AIF   ('&AID' EQ '').XAID       AID not specified         @HVA         
         AIF   ('&PORT' EQ '').AIDMPRT   PORT not specified        @HVA         
&FLAG2   SETA  &FLAG2+&AIDF              Indicate AID/PORT specifd @HHA         
         AIF   ('&AID' EQ '*').XAID      AID overgenned            @L4A         
         AIF (N'&AID GT 1).AIDSUBL       Operand is in sublist format           
         AIF (K'&AID EQ &L).AIDLEN       Length of AID (no parens) @HVA         
         MNOTE 8,'022 AID PARAMETER MUST BE &L DIGITS.'            @HVA         
&ERROR   SETB 1                          Indicate error            @HVA         
.AIDLEN  ANOP                                                      @HVA         
&NDX     SETA 1                          Point to first digit      @HVA         
.*--------------------------------------------------------------------*         
.*       Loop to validate each number in the AID                      *         
.*--------------------------------------------------------------------*         
.AIDLOOP ANOP                                                      @HVA         
         AIF ('&AID'(&NDX,1) LT 'A').BADAID      Invalid digit     @HVA         
         AIF ('&AID'(&NDX,1) LE 'F').GOODAID     Hex digit (A-F)   @HVA         
         AIF ('&AID'(&NDX,1) LT '0').BADAID      Invalid digit     @HVA         
         AIF ('&AID'(&NDX,1) LE '9').GOODAID     Hex digit (0-9)   @HVA         
.BADAID  ANOP                            Invalid character in AID  @HVA         
&CWK     SETC '&AID'(&NDX,1)             Isolate invalid character @HVA         
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN AID PARAMETER.'             
&ERROR   SETB 1                          Indicate error            @HVA         
.GOODAID ANOP                                                      @HVA         
&NDX     SETA  &NDX+1                    Point to next digit       @HVA         
         AIF (&NDX LE K'&AID).AIDLOOP Check next digit             @HVA         
         AGO  .XAID                      Check TYPE keyword        @HVA         
.*                                                                              
.AIDSUBL MNOTE 8,'014 AID PARAMETER MAY NOT BE A SUBLIST.'         @HVA         
&ERROR   SETB 1                          Indicate error            @HVA         
         AGO  .XAID                      End parameter             @HVA         
.*                                                                              
.AIDMPRT MNOTE 8,'014 PORT PARAMETER MISSING.'                     @HVA         
&ERROR   SETB 1                          Indicate error            @HVA         
         AGO  .XAID                      End parameter             @HVA         
.*                                                                              
.XAID ANOP  ,                                                      @HVA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PORT                1 decimal digit 1..2            *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  1                         Required PORT length      @HVA         
         AIF   ('&PORT' EQ '').XPORT     PORT not specified        @HVA         
                                                                                
         AIF   ('&TYPE' EQ 'CL5').AIDNREQ CL5 has no AID           @LUA         
         AIF   ('&AID' EQ '').PRTMAID     AID not specified        @HVA         
.AIDNREQ ANOP                             AID not required         @LUA         
                                                                                
         AIF (N'&PORT GT 1).PRTSUBL      Operand is in sublist format           
         AIF (K'&PORT EQ &L).PORTLEN     Length of AID (no parens) @HVA         
         MNOTE 8,'022 PORT PARAMETER MUST BE &L DIGIT.'            @HVA         
&ERROR   SETB 1                          Indicate error            @HVA         
.PORTLEN ANOP                                                      @HVA         
         AIF (('&PORT' EQ '1') OR ('&PORT' EQ '2') OR                  *        
               ('&PORT' EQ '3') OR ('&PORT' EQ '4')).GOODPRT       @LAC         
.BADPRT  ANOP                            Invalid character in PORT @HVA         
&CWK     SETC '&PORT'                    Isolate invalid character @HVA         
         MNOTE 8,'021 INVALID DIGIT ''&CWK'' IN PORT PARAMETER.'                
&ERROR   SETB 1                          Indicate error            @HVA         
         AGO  .XPORT                                               @HVA         
.*                                                                              
.PRTSUBL MNOTE 8,'014 PORT PARAMETER MAY NOT BE A SUBLIST.'        @HVA         
&ERROR   SETB 1                          Indicate error            @HVA         
         AGO  .XPORT                     End parameter             @HVA         
.*                                                                              
.PRTMAID MNOTE 8,'014 AID PARAMETER MISSING.'                      @HVA         
&ERROR   SETB 1                          Indicate error            @HVA         
         AGO  .XPORT                     End parameter             @HVA         
.*                                                                              
.GOODPRT ANOP                                                      @HVA         
&FLAG2   SETA  &FLAG2+&PORTF             indicate PORT specified   @LUA         
.*                                                                              
.XPORT ANOP  ,                                                     @HVA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PCHID                3 Hex digits or *          @HLA*         
.*                                                                    *         
.**********************************************************************         
.CKPCHD  ANOP                                                      @HHA         
         AIF   ('&PCHID' EQ '').XPCHID  No PCHID specified         @HHA         
&FLAG    SETA  &FLAG+&PCHDF           PCHID or VCHID specified     @HHA         
&FLAG2   SETA  &FLAG2+&PDEFF          PCHID specified              @LLA         
         AIF   ('&PCHID' EQ '*').XPCHID                            @HLA         
&L       SETA  3                             Required PCHID length @HHA         
&TPCHID  SETC  '&PCHID'                Save PCHID value            @HHA         
         AIF   (K'&TPCHID GT &L).PCHDE05  PCHID value ^= 3 chars   @HHA         
         HEXCHECK STRING=&TPCHID                                   @HHA         
         AIF   (&$ERR).PCHDE04         Report error if encountered @HHA         
         AGO   .XPCHID                 Go to next parameter        @HHA         
.*                                                                 @HHA         
.PCHDE04 ANOP  ,                                                   @HHA         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN VALUE OF PCHID PARA*        
               METER.'                                             @HHA         
&ERROR   SETB  1                       Indicates error             @HHA         
         AGO   .XPCHID                 and continue                @HHA         
.*                                                                 @HHA         
.PCHDE05 ANOP  ,                                                   @HHA         
         MNOTE 8,'022 PCHID VALUE MUST BE &L DIGITS.'              @HHA         
&ERROR   SETB  1                       Indicates error             @HHA         
         AGO   .XPCHID                 and continue                @HHA         
.*                                                                 @HHA         
.XPCHID  ANOP  ,                                                   @HHA         
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate VCHID                3 Hex digits or *          @LLA*         
.*                                                                    *         
.**********************************************************************         
.CKVCHD  ANOP                                                      @LLA         
         AIF   ('&VCHID' EQ '').XVCHID  No VCHID specified         @LLA         
&FLAG    SETA  &FLAG+&PCHDF           PCHID or VCHID specified     @LLA         
&FLAG2   SETA  &FLAG2+&VDEFF          VCHID specified              @LLA         
         AIF   ('&VCHID' EQ '*').XVCHID                            @LLA         
&L       SETA  3                        Required VCHID length      @LLA         
&TVCHID  SETC  '&VCHID'                 Save VCHID value           @LLA         
         AIF   (K'&TVCHID GT &L).VCHDE05  VCHID value ^= 3 chars   @LLA         
         HEXCHECK STRING=&TVCHID                                   @LLA         
         AIF   (&$ERR).VCHDE04         Report error if encountered @LLA         
         AGO   .XVCHID                 Go to next parameter        @LLA         
.*                                                                 @LLA         
.VCHDE04 ANOP  ,                                                   @LLA         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN VALUE OF VCHID PARA*        
               METER.'                                             @LLA         
&ERROR   SETB  1                       Indicate error              @LLA         
         AGO   .XVCHID                 and continue                @LLA         
.*                                                                 @LLA         
.VCHDE05 ANOP  ,                                                   @LLA         
         MNOTE 8,'022 VCHID VALUE MUST BE &L DIGITS.'              @LLA         
&ERROR   SETB  1                       Indicate error              @LLA         
         AGO   .XVCHID                 and continue                @LLA         
.*                                                                 @LLA         
.XVCHID  ANOP  ,                                                   @LLA         
.*                                                                              
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PATH       1 to &MAXPATH chpid's                    *         
.*                           Only checks for 2 digit chpid number.    *         
.*                           Ignores PATH=**                          *         
.*                           Channel number 0..1F                     *         
.*                           Channel set  0!1                         *         
.*                                                                    *         
.*    EMIF capable processors support an additional format of the     *         
.*    PATH parameter. The new format became possible,                 *         
.*    since the EMIF processors do no longer support /370 mode.       *         
.*    The new format is:                                              *         
.*        PATH=(chpid,chpid,.....)                                    *         
.*    This format conflicts with the still supported format of        *         
.*        PATH=(chpid,channel number<,channel set>)                   *         
.*    The following alogrithm will be used to determine whether       *         
.*    the PATH parameter follows the new respectively old format.     *         
.*    o  channel path operation mode = REC or SHR   ==> new format    *         
.*    o  Partition parameter specified              ==> new format    *         
.*    o  SWITCH  parameter specified                ==> new format    *         
.*    o  more then 3 subparameters                  ==> new format    *         
.*    o  3rd subparameter other than 0 or 1         ==> new format    *         
.*                                                                    *         
.*    The format for an XMP processor is PATH=(CSS(n),chpid),     @HHA*         
.*    where n is the Channel subsystem of the channel path.       @HHA*         
.*                                                                    *         
.**********************************************************************         
.CKPATH  ANOP                                                                   
&AWK1    SETA  128                     Keep track of channel numbers            
&MAXPATH SETA  8                       Maximum number of PATH id's              
&L       SETA  2                       Required PATH length                     
&CSSID   SETA  128                     Default to CSS 0           @HHA          
         AIF  ('&PATH' EQ '').NOPATH   PATH not specified                       
         AIF  (N'&PATH LE &MAXPATH).PASUBLE  Number of sublist entries          
         MNOTE 8,'015 PATH PARAMETER EXCEEDS &MAXPATH SUBLIST ENTRIES.'         
&ERROR   SETB  1                       Indicate error                           
.PASUBLE ANOP                                                                   
&SUB     SETA  1                                                                
&SPANNED SETB  0                       Assume non-spanned CHPID    @HHA         
.*--------------------------------------------------------------------*         
.*       Determine format of PATH parameter by examining the context  *         
.*       and peeking into the parameter values.                       *         
.*--------------------------------------------------------------------*         
         AIF   ('&PATH'(1,1) NE '(').PATH20    No parenthesis ?    @P2A         
         AIF   ('&PATH'(1,2) EQ '((').PATH20   Double parens ?     @P2A         
         AIF   (&UMODE EQ &ADED).PATH01   reconfigurable or shared @P2A         
&NPPS    SETB  1                   ..Yes, remember new PATH format @P2A         
.PATH01  ANOP                                                      @P2A         
         AIF   ('&SWITCH' EQ '').PATH02  SWITCH parm specified ?   @P2A         
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A         
.PATH02  ANOP                                                      @P2A         
         AIF   (N'&PATH LE 3).PATH03 More then 3 subparameters ?   @P2A         
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A         
.PATH03  ANOP                                                      @P2A         
         AIF   ((N'&PATH EQ 3) AND (K'&PATH(3) EQ 1) AND               *        
               (('&PATH(3)' EQ '0') OR ('&PATH(3)' EQ '1'))).PATH04    *        
                                                                   @P2A         
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A         
.PATH04  ANOP                                                      @P2A         
         AIF   ((&PACT EQ 0) AND (&PCCT EQ 0)).PATH05              @P2A         
&NPPS    SETB  1                   ..yes, remember new PATH format @P2A         
.PATH05  ANOP                                                      @P2A         
.*                                                                              
.PATH20  ANOP                                                      @P2A         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF ('&PATH'(1,1) EQ '(').PARENS    Operand within parens ?            
&PATHID  SETC '&PATH'                        if not, CHPID directly             
&NDX     SETA 1                                specified                        
&SINDX   SETA 1                              start index for check              
&NUMCHP  SETA 1                              one entry                          
         AGO  .SUBLP1                        check it                           
.*                                                                              
.PARENS  ANOP                                                                   
         AIF ((N'&PATH EQ 2) AND ('&PATH(1)'(1,4) EQ 'CSS(')).MCSS00   *        
                                              XMP format           @HHA         
&NUMCHP  SETA N'&PATH                        get number of entries              
         AIF ('&PATH'(2,1) EQ '(').PALOOP    double parens ?                    
         AIF  (&NPPS EQ 1).PALOOP     New PATH parm format ?      @P2A          
&PATHID  SETC '&PATH'                        no, take entry                     
&NUMCHP  SETA 1                              one entry                          
         AGO  .PAREN1                        check it                           
.*                                                                              
.PALOOP  ANOP                                                                   
&PATHID  SETC  '&PATH(&SUB)'           Isolate sublist entry                    
         AGO   .PAREN1                 Branch to check CHPID       @HHA         
.MCSS00  ANOP  ,                       Scan XMP format             @HHA         
&MCSS    SETB  1                       Indicate MCSS format        @HHA         
&FLAG2   SETA  &FLAG2+&CSSF           Indicate CSS specified       @HHA         
&NDX     SETA  5                                                   @HHA         
&CSSID   SETA  0                      Initialize CSS mask          @HHA         
.MCSS10  ANOP  ,                                                   @HHA         
&LCSSID  SETA  128                    Set CSS id 0                 @HHA         
&CSS     SETA  0                                                   @HHA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '0').MCSS20                  @HHA         
&LCSSID  SETA  64                     Set CSS id 1                 @HHA         
&CSS     SETA  1                                                   @HHA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '1').MCSS20                  @HHA         
&LCSSID  SETA  32                     Set CSS id 2                 @HHA         
&CSS     SETA  2                                                   @HHA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '2').MCSS20                  @HHA         
&LCSSID  SETA  16                     Set CSS id 3                 @HHA         
&CSS     SETA  3                                                   @HHA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '3').MCSS20                  @HHA         
&LCSSID  SETA  8                      Set CSS id 4                 @LGA         
&CSS     SETA  4                                                   @LGA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '4').MCSS20                  @LGA         
&LCSSID  SETA  4                      Set CSS id 5                 @LGA         
&CSS     SETA  5                                                   @LGA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '5').MCSS20                  @LGA         
&LCSSID  SETA  2                      Set CSS id 6                 @LGA         
&CSS     SETA  6                                                   @LGA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '6').MCSS20                  @LGA         
&LCSSID  SETA  1                      Set CSS id 7                 @LGA         
&CSS     SETA  7                                                   @LGA         
         AIF   ('&PATH(1)'(&NDX,1) EQ '7').MCSS20                  @LGA         
         AGO   .MCSSER1               Invalid CSS id               @HHA         
.MCSS20  ANOP  ,                                                   @HHA         
         AIF   (&CSMSK(&CSS+1)).MCSSER3    Duplicate CSS id        @HHA         
&CSMSK(&CSS+1) SETB 1                 Indicate CSS occurred        @HHA         
&CSSID   SETA  &CSSID+&LCSSID         Sum up CSS id                @HHA         
&LCSSID  SETA  0                      Clear CSS id                 @HHA         
&NDX     SETA  &NDX+1                 Look at next character       @HHA         
         AIF   ('&PATH(1)'(&NDX,1) EQ ')').MCSS25  exit CSS keyword@HHA         
         AIF   (&UMODE EQ &AREC).MCSSER4                           @HHA         
&SPANNED SETB  1                      Indicate spanned channel path@HHA         
&UMODE   SETA  &ASHR                  Indicate that channel path is    *        
                                      shared (since spanned)       @HHA         
         AIF   ('&PATH(1)'(&NDX,1) NE ',').MCSSER1 Invalid delim   @HHA         
&NDX     SETA  &NDX+1                 Scan next CSS id             @HHA         
         AGO   .MCSS10                                             @HHA         
.MCSS25  ANOP  ,                                                   @HHA         
         AIF   ((NOT &MCSP)).MCSS28                                @HHA         
&CSS     SETA  0                      Check if CSS in PART defined @HHA         
.MCSS26  AIF   ((NOT &CSMSK(&CSS+1)) AND                               *        
               (&CSSPI(&CSS+1))).MCSSER5  CSS on PART not on PATH  @HHA         
&CSS     SETA  &CSS+1                 Check next CSS               @HHA         
         AIF   (&CSS LE &MAXCSS).MCSS26  For all possible CSS      @HHA         
.MCSS28  ANOP  ,                                                   @HHA         
         AIF   ((&SPANNED) AND (('&PART' NE '') OR                     *        
               ('&PARTITION' NE '') OR ('&NOTPART' NE ''))             *        
               AND (NOT &MCSP)).MCSSER6  CSS missing on PART       @HHA         
.MCSS30  ANOP  ,                                                   @HHA         
&PATHID  SETC  '&PATH(2)'             Isolate CHPID number         @HHA         
&NUMCHP  SETA 1                              one entry             @HHA         
.PAREN1  ANOP                                                                   
         AIF ('&PATH(&SUB)' EQ '').PANULL   Null sublist entry                  
&NDX     SETA  2                       Point to first digit of chpid            
&SINDX   SETA 2                              start index for check              
         AIF  (&NPPS EQ 0).SUBLP1     Old PATH parm format ?      @P2A          
&SINDX   SETA 1                       ..no, start index for check @P2A          
&NDX     SETA 1                       set up index                @P2A          
.*                                                                              
.*-------------------------------------------------------------------*          
.*       Loop to validate each character in the CHPID number         *          
.*-------------------------------------------------------------------*          
.SUBLP1 ANOP                           Check chpid number                       
         AIF ('&PATHID'(&NDX,1) EQ ',').SETPAID  End of chpid number            
         AIF ('&PATHID'(&NDX,1) EQ ')').SETPAID  End of chpid number            
         AIF ('&PATHID'(&NDX,1) LT 'A').PASTRSK  Special char                   
         AIF ('&PATHID'(&NDX,1) LE 'F').GOODPA   Hex digit (A-F)                
         AIF ('&PATHID'(&NDX,1) LT '0').BADPA    Invalid digit                  
         AIF ('&PATHID'(&NDX,1) LE '9').GOODPA   Hex digit (0-9)                
.PASTRSK AIF ('&PATHID'(&NDX,2) NE '**').BADPA   Asterisk                       
&PAASTRK SETA &PAASTRK+1               Increment asterisk count                 
&NDX     SETA  &NDX+1                  Point to second asterisk                 
         AGO  .GOODPA                  Continue                                 
.BADPA   ANOP                          Invalid character in path id             
&CWK     SETC '&PATHID'(&NDX,1)        Isolate invalid character                
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN CHPID NUMBER SUBLIS*        
               T ENTRY &SUB FOR PATH PARAMETER.'                                
&ERROR   SETB 1                        Indicate error                           
.GOODPA  ANOP                                                                   
&NDX     SETA  &NDX+1                  Point to next digit                      
         AIF (&NDX LE K'&PATHID).SUBLP1    Check next digit                     
.SETPAID ANOP                                                                   
         AIF  (&NDX EQ &L+&SINDX).OKIDLEN  Number of digits in parens           
         MNOTE 8,'022 PATH PARAMETER CHPID NUMBER SUBLIST ENTRY &SUB MU*        
               ST BE &L DIGITS.'                                                
&ERROR   SETB 1                        Indicate error                           
.OKIDLEN ANOP                                                                   
         AIF  (&ERROR EQ 1).NEXTAIF    Check next entry                         
&PACHID(&SUB)  SETC '&PATHID'(&SINDX,&NDX-&SINDX) put CHPID into array          
         AIF   (&MCSP AND (NOT &MCSS)).MCSSER2   Improper XMP form @HHA         
.NEXTAIF AIF   (&NDX GE K'&PATHID).NEXTSLE         Go do next PATH id           
.*                                                                              
         AIF   ('&PATHID'(&NDX,1) EQ ',').NEXTENT  Go do next entry             
         MNOTE 8,'019 PATH SUBLIST ENTRY &SUB IS MISSING A COMMA.'              
&ERROR   SETB  1                      Indicates error                           
         AGO  .NEXTSLE                 Process next PATH chpid number           
.NEXTENT ANOP                                                                   
&COMMA   SETA  &NDX                    Save position of comma                   
&NDX     SETA  &NDX+1                  Point to next digit                      
.*                                                                              
.*--------------------------------------------------------------------*         
.*       Loop to validate each character in the channel number        *         
.*--------------------------------------------------------------------*         
.SUBLP2 ANOP                           Check channel number                     
         AIF ('&PATHID'(&NDX,1) EQ ',').SETCHAN  End of channel number          
         AIF ('&PATHID'(&NDX,1) EQ ')').SETCHAN  End of channel number          
         AIF ('&PATHID'(&NDX,1) LT 'A').BADCHAN  Special char                   
         AIF ('&PATHID'(&NDX,1) LE 'F').GOODCHN  Hex digit (A-F)                
         AIF ('&PATHID'(&NDX,1) LT '0').BADCHAN  Invalid digit                  
         AIF ('&PATHID'(&NDX,1) LE '9').GOODCHN  Hex digit (0-9)                
.BADCHAN ANOP                          Invalid character in channel #           
&CWK     SETC '&PATHID'(&NDX,1)        Isolate invalid character                
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN CHANNEL NUMBER SUBL*        
               IST ENTRY &SUB FOR PATH PARAMETER.'                              
&ERROR   SETB 1                        Indicate error                           
.GOODCHN ANOP                                                                   
&NDX     SETA  &NDX+1                  Point to next digit                      
         AIF (&NDX LE K'&PATHID).SUBLP2    Check next digit                     
.SETCHAN ANOP                                                                   
         AIF  (&NDX EQ &COMMA+&L+1).CHANCHK   No. of digits in parens           
         AIF  (&NDX EQ &COMMA-1+&L+1).CHANLEN   No. of digits in parens         
&AWK     SETA  &L-1                                                             
         MNOTE 8,'022 PATH PARAMETER CHANNEL NUMBER SUBLIST ENTRY &SUB *        
               MUST BE &AWK OR &L DIGITS.'                                      
&ERROR   SETB 1                        Indicate error                           
.CHANCHK ANOP                                                                   
         AIF ('&PATHID'(&NDX-2,1) EQ '0').CHANLEN  Valid digit                  
         AIF ('&PATHID'(&NDX-2,1) EQ '1').CHANLEN  Valid digit                  
         MNOTE 8,'041 PATH PARAMETER CHANNEL NUMBER SUBLIST ENTRY &SUB *        
               MUST BE A NUMBER FROM 0 TO 1F.'                                  
&ERROR   SETB 1                        Indicate error                           
.CHANLEN ANOP                                                                   
         AIF  (&ERROR EQ 1).NEXTIF        Check next entry                      
&PACHAN(&SUB)  SETC '&PATHID'(&COMMA+1,&NDX-&COMMA-1)  put # in array           
&CHNBIT  SETA &CHNBIT+&AWK1               indicate occurrence                   
.NEXTIF  AIF   ('&PATHID'(&NDX,1) EQ ',').NEXTENY  Go do next entry             
         AIF   (&NDX EQ K'&PATHID).NEXTSLE         Go do next PATH id           
         MNOTE 8,'019 PATH SUBLIST ENTRY &SUB IS MISSING A COMMA.'              
&ERROR   SETB  1                      Indicates error                           
         AGO  .NEXTSLE                 Process next PATH chpid number           
.*                                                                              
.NEXTENY ANOP                                                                   
&NDX     SETA  &NDX+1                  Point to next digit                      
.*                                                                              
.*------------------------------------------------------------------*           
.*       Validate channel set                                       *           
.*------------------------------------------------------------------*           
         AIF   ('&PATHID'(&NDX,1) EQ '0').OKSET  Channel set 0                  
         AIF   ('&PATHID'(&NDX,1) EQ '1').OKSET  Channel set 1                  
      MNOTE 8,'042 PATH SUBLIST &SUB ENTRY CHANNEL SET MUST BE A NUMBER*        
                FROM 0 TO 1.'                                                   
&ERROR   SETB  1                       Indicate error                           
.*                                                                              
.OKSET   ANOP                                                                   
         AIF  (&ERROR EQ 1).NEXTSLE       Check next PATH id                    
&PACHSE(&SUB)  SETC '&PATHID'(&NDX,1)     Put channel set into array            
         AIF   ('&PATHID'(&NDX+1,1) EQ ')').NEXTSLE  Go do next PATHid          
         MNOTE 8,'016 PATH SUBLIST ENTRY &SUB EXCEEDS 3 OPERANDS.'              
&ERROR   SETB  1                      Indicates error                           
         AGO  .NEXTSLE                 Process next PATH chpid number           
.NOPAREN MNOTE 8,'013 PATH SUBLIST ENTRY &SUB MUST BE ENCLOSED IN PAREN*        
               THESES.'                                                         
&ERROR   SETB 1                        Indicate error                           
         AGO  .NEXTSLE                 Process next PATH chpid number           
.*                                                                              
.PANULL  MNOTE 8,'018 PATH SUBLIST ENTRY &SUB IS MISSING.'                      
&ERROR   SETB 1                        Indicate error                           
.*                                                                              
.*                                                                              
.NEXTSLE ANOP                          Process next sublist entry               
         AIF  (&MCSS).XPATH            For XMP format, all is done @HHA         
&SUB     SETA &SUB+1                   Point to next path id entry              
&AWK1    SETA &AWK1/2                  Proceed to next channel number           
         AIF  (&SUB LE &NUMCHP).PALOOP  More PATH id's ...                      
         AGO  .XPATH                   Go check next operand       @P2A         
.*                                                                              
.NOPATH  MNOTE 8,'002 PATH KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB 1                        Indicate error                           
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.MCSSER1 MNOTE 8,'045 CSS ID in PATH PARAMETER IS INVALID.'        @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.*                                                                              
.MCSSER2 MNOTE 8,'046 CSS ID in PARTITION PARAMETER NOT ALLOWED.'  @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.*                                                                              
.MCSSER3 MNOTE 8,'047 Duplicate CSS id in PATH PARAMTER.'          @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.MCSSER4 MNOTE 8,'053 CONFLICTING CHANNEL PATH OPERATION MODES SPECIFIE*        
               D.'                                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.*                                                                              
.MCSSER5 MNOTE 8,'045 CSSID &CSS IN PART/NOTPART PARAMETER IS NOT DEFIN*        
               ED IN PATH PARAMETER.'                              @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.*                                                                              
.MCSSER6 MNOTE 8,'045 CSSID IS REQUIRED IN PART/NOTPART PARAMETER FOR S*        
               PANNED CHANNEL PATH.'                               @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.*                                                                              
.XPATH   ANOP  ,                                                   @P2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate TYPE         TYPE=BL!BY!CTC!S!CVC!CNC!IOC!CBY   @H3C*         
.*                                  CFS!CFR!OSA!ISD!IP!NTV        @H8C*         
.*                                  CBR!CBS!ICR!ICS!OSD!OSE       @HBC*         
.*                                  DSD!EIO!                      @HCA*         
.*                                  CFP!CBP!ICP!                  @HDA*         
.*                                  IQD!FCP                       @HEA*         
.*                                  STV                           @HGA*         
.*                                  OSC                           @HJA*         
.*                                  OSN                           @HRA*         
.*                                  CIB                           @HVA*         
.*                                  OSX!OSM                       @L6A*         
.*                                  CS5!CL5                       @LKA*         
.**********************************************************************         
         AIF ('&TYPE' EQ '').NOTYP     Exit if null                             
         AIF ('&TYPE' NE 'BL').TYPBY   Not BL                                   
&TYP     SETA 1                        Type=BL                                  
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPBY   AIF ('&TYPE' NE 'BY').TYPCTC  Not BY                                   
&TYP     SETA 2                        Type=BY                                  
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPCTC  AIF ('&TYPE' NE 'CTC').TYPFX  Not CTC                                  
&TYP     SETA 4                        Type=CTC                                 
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPFX   AIF ('&TYPE' NE 'FX' AND '&TYPE' NE 'CVC').TYPS    Not FX @M1C         
.*                                                     and not CVC @M1A         
&TYP     SETA 5                        Type=FX                                  
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPS    AIF ('&TYPE' NE 'S'  AND '&TYPE' NE 'CNC').TYPIOC  Not S  @M1C         
.*                                                     and not CNC @M1A         
&TYP     SETA 3                        Type=S                                   
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPIOC  AIF ('&TYPE' NE 'IOC').TYPIRC Not IOC                     @LTC         
&TYP     SETA 6                        Type=IOC                    @H1A         
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPIRC  AIF ('&TYPE' NE 'CFR').TYPISC Not CFR                     @LTA         
&TYP     SETA 7                        Type=CFR                    @LTA         
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPISC  AIF ('&TYPE' NE 'CFS').TYPCBY Not CFS                     @H3C         
&TYP     SETA 8                        Type=CFS                    @LTA         
         AGO  .XPATHND                 Go generate internal text   @N3C         
.TYPCBY  AIF ('&TYPE' NE 'CBY').TYPOSA Not CBY                     @H4C         
&TYP     SETA 9                        Type=CBY                    @H3A         
         AGO  .XPATHND                 Go generate internal text   @H3A         
.TYPOSA  AIF ('&TYPE' NE 'OSA').TYPISD Not OSA                     @H5C         
&TYP     SETA 10                       Type=OSA                    @H4A         
         AGO  .XPATHND                 Go generate internal text   @H4A         
.TYPISD  AIF ('&TYPE' NE 'ISD').TYPDSD Not ISD                     @HCC         
&TYP     SETA 11                       Type=ISD                    @H5A         
         AGO  .XPATHND                 Go generate internal text   @H5A         
.TYPDSD  AIF ('&TYPE' NE 'DSD').TYPNTV  Not DSD                    @HCA         
&TYP     SETA 12                       Type=DSD                    @HCA         
         AGO  .XPATHND                 Go generate internal text   @HCA         
.TYPNTV  AIF ('&TYPE' NE 'NTV').TYPFC   Not NTV                    @HAC         
&TYP     SETA 13                       Type=NTV                    @H9C         
         AGO  .XPATHND                 Go generate internal text   @H9A         
.TYPFC   AIF ('&TYPE' NE 'FC').TYPFCV  Not FC                      @HAA         
&TYP     SETA 14                       Type=FC                     @HAA         
         AGO  .XPATHND                 Go generate internal text   @HAA         
.TYPFCV  AIF ('&TYPE' NE 'FCV').TYPFTV  Not FCV                    @HAA         
&TYP     SETA 15                       Type=FCV                    @HAA         
         AGO  .XPATHND                 Go generate internal text   @HAA         
.TYPFTV  AIF ('&TYPE' NE 'FTV').TYPCBR  Not FTV                    @HAA         
&TYP     SETA 16                       Type=FTV                    @HAA         
         AGO  .XPATHND                 Go generate internal text   @HAA         
.TYPCBR  AIF ('&TYPE' NE 'CBR').TYPCBS  Not CBR                    @H9C         
&TYP     SETA 17                       Type=CBR                    @H9A         
         AGO  .XPATHND                 Go generate internal text   @H9A         
.TYPCBS  AIF ('&TYPE' NE 'CBS').TYPICR  Not CBS                    @H9C         
&TYP     SETA 18                       Type=CBS                    @H9A         
         AGO  .XPATHND                 Go generate internal text   @H9A         
.TYPICR  AIF ('&TYPE' NE 'ICR').TYPICS  Not ICR                    @H9C         
&TYP     SETA 19                       Type=ICR                    @H9A         
         AGO  .XPATHND                 Go generate internal text   @H9A         
.TYPICS  AIF ('&TYPE' NE 'ICS').TYPOSD  Not ICS                    @HBC         
&TYP     SETA 20                       Type=ICS                    @H9A         
         AGO  .XPATHND                 Go generate internal text   @H9A         
.TYPOSD  AIF ('&TYPE' NE 'OSD').TYPOSE  Not OSD                    @HBA         
&TYP     SETA 21                       Type=OSD                    @HBA         
         AGO  .XPATHND                 Go generate internal text   @HBA         
.TYPOSE  AIF ('&TYPE' NE 'OSE').TYPEIO  Not OSE                    @HCC         
&TYP     SETA 22                       Type=OSE                    @HBA         
         AGO  .XPATHND                 Go generate internal text   @HBA         
.TYPEIO  AIF ('&TYPE' NE 'EIO').TYPCBP  Not EIO                    @HCA         
&TYP     SETA 23                       Type=EIO                    @HCA         
         AGO  .XPATHND                 Go generate internal text   @HCA         
.TYPCBP  AIF ('&TYPE' NE 'CFP').TYPCFP  Not CFP                    @HDA         
&TYP     SETA 24                       Type=CFP                    @HDA         
         AGO  .XPATHND                 Go generate internal text   @HDA         
.TYPCFP  AIF ('&TYPE' NE 'CBP').TYPICP  Not CBP                    @HDA         
&TYP     SETA 25                       Type=CBP                    @HDA         
         AGO  .XPATHND                 Go generate internal text   @HDA         
.TYPICP  AIF ('&TYPE' NE 'ICP').TYPIQD  Not ICP                    @HEC         
&TYP     SETA 26                       Type=ICP                    @HDA         
         AGO  .XPATHND                 Go generate internal text   @HDA         
.TYPIQD  AIF ('&TYPE' NE 'IQD').TYPFCP  Not IQD                    @HEA         
&TYP     SETA 27                       Type=IQD                    @HEA         
         AGO  .XPATHND                 Go generate internal text   @HEA         
.TYPFCP  AIF ('&TYPE' NE 'FCP').TYPSTV  Not FCP                    @HGC         
&TYP     SETA 28                       Type=FCP                    @HEA         
         AGO  .XPATHND                 Go generate internal text   @HEA         
.TYPSTV  AIF ('&TYPE' NE 'STV').TYPOSC  Not STV                    @HJC         
&TYP     SETA 29                       Type=STV                    @HGA         
         AGO  .XPATHND                 Go generate internal text   @HGA         
.TYPOSC  AIF ('&TYPE' NE 'OSC').TYPOSN  Not OSC                    @HRC         
&TYP     SETA 30                       Type=OSC                    @HJA         
         AGO  .XPATHND                 Go generate internal text   @HGA         
.TYPOSN  AIF ('&TYPE' NE 'OSN').TYPCIB  Not OSN                    @HRA         
&TYP     SETA 31                       Type=OSN                    @HRA         
         AGO  .XPATHND                 Go generate internal text   @HRA         
.TYPCIB  AIF ('&TYPE' NE 'CIB').TYPOSX Not CIB                     @L6C         
&TYP     SETA 32                       Type=OSX                    @HVA         
         AGO  .XPATHND                 Go generate internal text   @HRA         
.TYPOSX  AIF ('&TYPE' NE 'OSX').TYPOSM Not OSX                     @L6A         
&TYP     SETA 33                       Type=OSX                    @L6A         
         AGO  .XPATHND                 Go generate internal text   @L6A         
.TYPOSM  AIF ('&TYPE' NE 'OSM').TYPCS5 Not OSM                     @L6A         
&TYP     SETA 34                       Type=OSM                    @LKM         
         AGO  .XPATHND                 Go generate internal text   @LKA         
.TYPCS5  AIF ('&TYPE' NE 'CS5').TYPCL5 Not CS5                     @LKA         
&TYP     SETA 35                       Type=CS5                    @LKA         
         AGO  .XPATHND                 Go generate internal text   @LKA         
.TYPCL5  AIF ('&TYPE' NE 'CL5').TYPERR Not CL5                     @LKA         
&TYP     SETA 36                       Type=CL5                    @LKA         
         AGO  .XPATHND                 Go generate internal text   @L6A         
.*                                                                              
.TYPERR  MNOTE 8,'003 TYPE=&TYPE IS INVALID.'                                   
&ERROR   SETB 1                        Indicate error                           
         AGO  .XPATHND                 Go generate internal text   @N3C         
.NOTYP   MNOTE 8,'002 TYPE KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB 1                        Indicate error                           
.*                                                                              
.XPATHND ANOP                                                                   
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate SWPORT     1 to &NUMCHP pairs of (switch id,port id)*         
.*                           Only checks for 2 digit switch/port id.  *         
.*                                                                    *         
.*                           The position of (switch id/port id)  @M4A*         
.*                           in SWPORT list corresponds to the    @M4A*         
.*                           channel path ids in the PATH keyword @M4A*         
.*                                                                    *         
.**********************************************************************         
.CKSWPO  ANOP                                                                   
&MAXSUB  SETA  &NUMCHP                 Max number of SWPORT entr.  @M4A         
&L1      SETA  2                       Number of sublist length    @M4A         
&L       SETA  2                       Req. Switch/port id length  @M4A         
&AWK1    SETA  128                     Keep track of entry ports   @M4A         
         AIF  ('&SWPORT' EQ '').XSWPO    SWPORT not specified      @M4A         
         AIF  ('&SWPORT'(1,2) EQ '((').SWPO100 Double parentheses  @M4A         
&SINGLE  SETB 1                        Indicate single entry       @M4A         
&NSWPO   SETA 1                        Only 1 subentry             @M4A         
         AGO   .SWPO105                                            @M4A         
.SWPO100 ANOP  ,                                                   @M4A         
         AIF  (N'&SWPORT GT &MAXSUB).SWPOE01 Higher number of          *        
                                       operands than in PATH list  @M4A         
&NSWPO   SETA  N'&SWPORT               Set number of subentries    @M4A         
&SINGLE  SETB  0                       Indicate list               @M4A         
.SWPO105 ANOP  ,                                                   @M4A         
&SUB     SETA  1                                                   @M4A         
.SWPO110 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).SWPO115                                   @M4A         
         AIF   ('&SWPORT(&SUB)' EQ '').SWPO150 Entry omitted       @M4A         
         AIF   ('&SWPORT(&SUB)' EQ '**').SWPO150 Entry omitted     @M4A         
         AIF   (N'&SWPORT(&SUB) NE &L1).SWPOE03 Sublist not 2 entr @M4A         
&ESWID   SETC  '&SWPORT(&SUB,1)'        Save switch id             @M4A         
         AGO   .SWPO118                                            @M4A         
.SWPO115 ANOP  ,                                                   @M4A         
         AIF   ('&SWPORT' EQ '**').SWPO150       Entry omitted     @M4A         
         AIF   (N'&SWPORT NE &L1).SWPOE03 Sublist not 2 entries    @M4A         
&ESWID   SETC  '&SWPORT(1)'             Save switch id             @M4A         
.SWPO118 ANOP  ,                                                   @M4A         
         AIF   ('&ESWID'   EQ '').SWPOE02        No entry switch   @M4A         
         AIF   (K'&ESWID   NE &L).SWPOE05        Switch id > 2 chr @M4A         
         HEXCHECK STRING=&ESWID                                    @M4A         
         AIF   (NOT &$ERR).SWPO120     Continue when no error      @M4A         
&ERROR   SETB  1                       Otherwise indicate error    @M4A         
         AGO   .SWPOE04                and continue                @M4A         
.*                                                                 @M4A         
.SWPO120 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).SWPO125                                   @M4A         
&ESWPORT SETC  '&SWPORT(&SUB,2)'       Save port id                @M4A         
         AGO   .SWPO130                                            @M4A         
.SWPO125 ANOP  ,                                                   @M4A         
&ESWPORT SETC  '&SWPORT(2)'            Save port id                @M4A         
.SWPO130 ANOP  ,                                                   @M4A         
         AIF   ('&ESWPORT' EQ '').SWPOE02        No port id        @M4A         
         AIF   (K'&ESWPORT NE &L).SWPOE05        Port id > 2 char  @M4A         
         HEXCHECK STRING=&ESWPORT                                  @M4A         
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A         
.*                                                                 @M4A         
&ESW(&SUB) SETC '&ESWID'               Save entry switch id        @M4A         
&EPORT(&SUB) SETC '&ESWPORT'           Save entry port id          @M4A         
&ESWBIT  SETA &ESWBIT+&AWK1            indicate occurrence         @M4A         
.*                                                                 @M4A         
.SWPO150 ANOP  ,                                                   @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
&AWK1    SETA &AWK1/2                  Proceed to next entry port  @M4A         
         AIF   (&SUB LE &NSWPO).SWPO110 More entry ports           @M4A         
         AGO   .XSWPO                                              @M4A         
.*                                                                 @M4A         
.SWPOE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 SWPORT PARAMETER EXCEEDS &MAXSUB ENTRIES.'   @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 SWITCH OR PORT ID REQUIRED in SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SWPORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN *        
               &L ENTRIES.'                                        @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SWITCH ID OR PORT ID MUST BE &L1 DIGITS.'    @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.XSWPO   ANOP  ,                                                   @M4A         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate CPATH      ignored                              @HHA*         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
.CKCPATH  ANOP  ,                                                  @HHA         
          AIF   ('&CPATH' EQ '').XCPATH                            @HHA         
          MNOTE *,'   005 CPATH KEYWORD IGNORED BY HCD.'           @HHA         
.XCPATH   ANOP  ,                                                  @HHA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate CSYSTEM    ignored                              @HVA*         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
.CKCSYST  ANOP  ,                                                  @HVA         
          AIF   ('&CSYSTEM' EQ '').XCSYST                          @HVA         
          MNOTE *,'   005 CSYSTEM KEYWORD IGNORED BY HCD.'         @HVA         
.XCSYST   ANOP  ,                                                  @HVA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate TPATH      1 to 8 pairs of (processor id, chpid)    *         
.*                           Only checks for 8 char processor id,     *         
.*                                           2 hex char chpid,        *         
.*                                           4 hex char CU number,    *         
.*                                           4 hex char device number)*         
.*                                           2 digit decimal number of*         
.*                                             CF devices         @L5C*         
.**********************************************************************         
.CKTPAT  ANOP                                                                   
&MAXSUB  SETA  8                       Max number of TPATH entries @M4A         
&L1      SETA  8                       Max length of processor id  @M4A         
&L2      SETA  2                       Max length of chpid, numdevs@L5C         
&L3      SETA  4                       Max length of cu/dev number @M4A         
         AIF  ('&TPATH' EQ '').XTPAT   TPATH not specified         @M4A         
&L       SETA  4                       Number of sublist length    @M4A         
&LB      SETA  1                       Number of sublist count     @04A         
         AIF  ('&TYPE' EQ 'CFS').TPAT050 Allowed CHPID type        @M4A         
         AIF  ('&TYPE' EQ 'CBS').TPAT050 Allowed CHPID type        @H9A         
         AIF  ('&TYPE' EQ 'ICS').TPAT050 Allowed CHPID type        @H9A         
&LA      SETA  2                       Number of sublist length    @M4A         
&LB      SETA  2                       Number of sublist count     @04A         
         AIF  ('&TYPE' EQ 'ICP').TPAT050 Allowed CHPID type        @HDA         
         AIF  ('&TYPE' EQ 'CFP').TPAT050 Allowed CHPID type        @HDA         
         AIF  ('&TYPE' EQ 'CBP').TPAT050 Allowed CHPID type        @HDA         
         AIF  ('&TYPE' EQ 'CIB').TPAT050 Allowed CHPID type        @HVA         
         AIF  ('&TYPE' EQ 'CS5').TPAT050 Allowed CHPID type        @LKA         
         AIF  ('&TYPE' EQ 'CL5').TPAT050 Allowed CHPID type        @LKA         
&LB      SETA  1                       Number of sublist count     @04A         
         AIF  ('&TYPE' EQ 'CFR').TPAT050 Allowed CHPID type        @M4A         
         AIF  ('&TYPE' EQ 'CBR').TPAT050 Allowed CHPID type        @H9A         
         AIF  ('&TYPE' EQ 'ICR').TPAT050 Allowed CHPID type        @H9A         
         AGO  .TPATE06                 Not allowed CHPID type      @M4A         
.TPAT050 ANOP ,                                                    @M4A         
         AIF  ('&TPATH'(1,2) EQ '((').TPAT100 Double parentheses   @M4A         
&SINGLE  SETB 1                        Indicate single entry       @M4A         
&NTPAT   SETA 1                        Only 1 subentry             @M4A         
         AGO   .TPAT105                                            @M4A         
.TPAT100 ANOP  ,                                                   @M4A         
         AIF  (N'&TPATH GT &MAXSUB).TPATE01 Higher number of           *        
                                       operands than allowed       @M4A         
&NTPAT   SETA  N'&TPATH                Set number of subentries    @M4A         
&SINGLE  SETB  0                       Indicate list               @M4A         
.TPAT105 ANOP  ,                                                   @M4A         
         AIF   (&NTPAT NE &LB).TPATE08  List count invalid         @04A         
&SUB     SETA  1                                                   @M4A         
.TPAT110 ANOP  ,                                                   @M4A         
&SUB1    SETA  1                     Assume CSS id given           @HHA         
&ECUNUM  SETC  ''                                                  @M4A         
&EDEVNO  SETC  ''                                                  @M4A         
&ENUMDEV SETC  ''                                                  @L5A         
&ENDV(&SUB) SETA 1                                                 @L5A         
         AIF   (&SINGLE).TPAT115                                   @M4A         
&NSPAT   SETA  N'&TPATH(&SUB)          Set number of elements      @C2A         
         AIF   ('&TPATH(&SUB)' EQ '').TPAT153 Entry omitted        @L5C         
         AIF   ('&TPATH(&SUB)' EQ '**').TPAT153 Entry omitted      @L5C         
&L       SETA  6                       Assume 6 entries (w/ CSS(n) @L5C         
&LA      SETA  3                       Assume 3 entries (w/ CSS(n) @HHA         
&ECSSID  SETA  0                                                   @HHA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(0)').TPAT111              @HHA         
&ECSSID  SETA  1                                                   @HHA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(1)').TPAT111              @HHA         
&ECSSID  SETA  2                                                   @HHA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(2)').TPAT111              @HHA         
&ECSSID  SETA  3                                                   @HHA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(3)').TPAT111              @HHA         
&ECSSID  SETA  4                                                   @LGA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(4)').TPAT111              @LGA         
&ECSSID  SETA  5                                                   @LGA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(5)').TPAT111              @LGA         
&ECSSID  SETA  6                                                   @LGA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(6)').TPAT111              @LGA         
&ECSSID  SETA  7                                                   @LGA         
         AIF   ('&TPATH(&SUB,1)' EQ 'CSS(7)').TPAT111              @LGA         
&ECSSID  SETA  0                       Default CSS id              @HHA         
&L       SETA  5                       Only 5 entries allowed      @L5C         
&LA      SETA  2                       Minimum 2 entries           @HHA         
&SUB1    SETA  0                       Correct index               @HHA         
.TPAT111 ANOP  ,                                                   @HHA         
         AIF   (N'&TPATH(&SUB) GT &L).TPATE03 Sublist more 5 entr  @L5C         
         AIF   (N'&TPATH(&SUB) LT &LA).TPATE03 Sublist less 2 entr @HTC         
.TPAT112 ANOP  ,                                                   @C2A         
&SUB1    SETA  &SUB1+1                                             @HHA         
&EPROC   SETC  '&TPATH(&SUB,&SUB1)'     Save processor id          @HHC         
         AGO   .TPAT118                                            @M4A         
.TPAT115 ANOP  ,                                                   @M4A         
&NSPAT   SETA  N'&TPATH                Set number of elements      @C2A         
         AIF   ('&TPATH' EQ '**').TPAT153        Entry omitted     @L5C         
&L       SETA  6                       Assume 6 entries (w/ CSS(n) @L5C         
&LA      SETA  3                       Assume 3 entries (w/ CSS(n) @HHA         
&ECSSID  SETA  0                                                   @HHA         
         AIF   ('&TPATH(1)' EQ 'CSS(0)').TPAT116                   @HHA         
&ECSSID  SETA  1                                                   @HHA         
         AIF   ('&TPATH(1)' EQ 'CSS(1)').TPAT116                   @HHA         
&ECSSID  SETA  2                                                   @HHA         
         AIF   ('&TPATH(1)' EQ 'CSS(2)').TPAT116                   @HHA         
&ECSSID  SETA  3                                                   @HHA         
         AIF   ('&TPATH(1)' EQ 'CSS(3)').TPAT116                   @HHA         
&ECSSID  SETA  4                                                   @LGA         
         AIF   ('&TPATH(1)' EQ 'CSS(4)').TPAT116                   @LGA         
&ECSSID  SETA  5                                                   @LGA         
         AIF   ('&TPATH(1)' EQ 'CSS(5)').TPAT116                   @LGA         
&ECSSID  SETA  6                                                   @LGA         
         AIF   ('&TPATH(1)' EQ 'CSS(6)').TPAT116                   @LGA         
&ECSSID  SETA  7                                                   @LGA         
         AIF   ('&TPATH(1)' EQ 'CSS(7)').TPAT116                   @LGA         
&ECSSID  SETA  0                       Default CSS id              @HHA         
&L       SETA  4                       Only 4 entries allowed      @HHA         
&LA      SETA  2                       Minimum 2 entries           @HHA         
&SUB1    SETA  0                       Correct index               @HHA         
.TPAT116 ANOP  ,                                                   @HHA         
         AIF   (N'&TPATH GT &L).TPATE03 Sublist more than 5 entr   @L5C         
         AIF   (N'&TPATH LT &LA).TPATE03 Sublist less than 2 entr  @HTC         
.TPAT117 ANOP  ,                                                   @C2A         
&SUB1    SETA  &SUB1+1                                             @HHA         
&EPROC   SETC  '&TPATH(&SUB1)'          Save processor id          @HHC         
.TPAT118 ANOP  ,                                                   @M4A         
         AIF   ('&EPROC'   EQ '').TPATE02        No processor id   @M4A         
         AIF   (K'&EPROC   GT &L1).TPATE05   Processor id  > 8 chr @M4A         
         AIF   ('&EPROC' EQ '*').TPAT120     Processor id is '*'   @M4A         
         NAMETEST STRING=&EPROC                                    @M4A         
         AIF   (NOT &INTERR).TPAT120   Continue when no error      @M4A         
&ERROR   SETB  1                       Otherwise indicate error    @M4A         
         AGO   .TPATE04                and stop                    @M4A         
.*                                                                 @M4A         
.TPAT120 ANOP  ,                                                   @M4A         
&SUB1    SETA  &SUB1+1                 Proceed to next list entry  @HHA         
         AIF   (&SINGLE).TPAT125                                   @M4A         
&ECHPID  SETC  '&TPATH(&SUB,&SUB1)'    Save channel path id        @HHC         
         AGO   .TPAT130                                            @M4A         
.TPAT125 ANOP  ,                                                   @M4A         
&ECHPID  SETC  '&TPATH(&SUB1)'         Save channel path id        @HHC         
.TPAT130 ANOP  ,                                                   @M4A         
         AIF   ('&ECHPID' EQ '').TPATE02        No channel path id @M4A         
         AIF   (K'&ECHPID NE &L2).TPATE05       CHPID id  ^= 2 dig @M4A         
         HEXCHECK STRING=&ECHPID                                   @M4A         
         AIF   (&$ERR).TPATE04         Report error if encountered @M4A         
.*                                                                 @M4A         
         AIF   (&NSPAT EQ &LA).TPAT153   All values processed      @L5C         
.TPAT140 ANOP  ,                                                   @M4A         
&SUB1    SETA  &SUB1+1                 Proceed to next list entry  @HHA         
         AIF   (&SINGLE).TPAT142                                   @M4A         
&ECUNUM  SETC  '&TPATH(&SUB,&SUB1)'    Save control unit number    @HHC         
         AGO   .TPAT145                                            @M4A         
.TPAT142 ANOP  ,                                                   @M4A         
&ECUNUM  SETC  '&TPATH(&SUB1)'         Save control unit number    @HHC         
.TPAT145 ANOP  ,                                                   @M4A         
         AIF   ('&ECUNUM' EQ '').TPAT147        No CU number       @HTC         
         AIF   (K'&ECUNUM NE &L3).TPATE07       CU num ^= 4 digits @M4A         
         HEXCHECK STRING=&ECUNUM                                   @M4A         
         AIF   (&$ERR).TPATE04         Report error if encountered @M4A         
.*                                                                 @M4A         
.TPAT147 ANOP  ,                                                   @M4A         
&SUB1    SETA  &SUB1+1                 Proceed to next list entry  @HHA         
         AIF   (&SINGLE).TPAT148                                   @M4A         
&EDEVNO  SETC  '&TPATH(&SUB,&SUB1)'    Save device number          @HHC         
         AGO   .TPAT149                                            @M4A         
.TPAT148 ANOP  ,                                                   @M4A         
&EDEVNO  SETC  '&TPATH(&SUB1)'         Save device number          @HHC         
.TPAT149 ANOP  ,                                                   @M4A         
         AIF   ('&EDEVNO' EQ '').TPAT153        No device number   @L5C         
         AIF   (K'&EDEVNO NE &L3).TPATE07       devnum ^= 4 digits @M4A         
         HEXCHECK STRING=&EDEVNO                                   @M4A         
         AIF   (&$ERR).TPATE04         Report error if encountered @M4A         
.*                                                                 @M4A         
.TPAT150 ANOP  ,                                                   @M4A         
.*                                                                 @M4A         
&SUB1    SETA  &SUB1+1                 Proceed to next list entry  @L5A         
         AIF   (&SINGLE).TPAT151                                   @L5A         
&ENUMDEV SETC  '&TPATH(&SUB,&SUB1)'    Save number of CF devices   @L5A         
         AGO   .TPAT152                                            @L5A         
.TPAT151 ANOP  ,                                                   @L5A         
&ENUMDEV SETC  '&TPATH(&SUB1)'         Save number of CF devices   @L5A         
.TPAT152 ANOP  ,                                                   @L5A         
         AIF   ('&ENUMDEV' EQ '').TPAT153       No number of CF dev@L5A         
         AIF   (K'&ENUMDEV GT &L2).TPATE09      number > 2  digits @L5A         
         DECIMAL  STRING=&ENUMDEV                                  @L5A         
         AIF   (&$ERR).TPATE04         Report error if encountered @L5A         
.*                                                                 @L5A         
&ENDV(&SUB) SETA  &ENUMDEV             Save number of CF devices   @L5A         
.*                                                                 @L5A         
.TPAT153 ANOP  ,                                                   @L5A         
&EPR(&SUB) SETC '&EPROC'               Save processor id           @M4A         
&ECSS(&SUB) SETA &ECSSID               Save channel subsystem id   @HHA         
&ECHP(&SUB) SETC '&ECHPID'             Save channel path id        @M4A         
&ECUN(&SUB) SETC '&ECUNUM'             Save control unit number    @M4A         
&EDEV(&SUB) SETC '&EDEVNO'             Save device number          @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
         AIF   (&SUB LE &NTPAT).TPAT110 More connected chpids      @M4A         
         AGO   .XTPAT                                              @M4A         
.*                                                                 @M4A         
.TPATE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 TPATH PARAMETER EXCEEDS &MAXSUB ENTRIES.'    @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XTPAT                  and continue                @M4A         
.*                                                                 @M4A         
.TPATE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 PROCESSOR OR CHANNEL PATH ID REQUIRED IN SUBLIST *        
               ENTRY &SUB OF TPATH PARAMETER.'                     @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XTPAT                  and continue                @M4A         
.*                                                                 @M4A         
.TPATE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 TPATH PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN B*        
               ETWEEN &L AND &LA ENTRIES.'                         @HTC         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XTPAT                  and continue                @M4A         
.*                                                                 @M4A         
.TPATE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF TPATH PARAMETER.'                                @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XTPAT                  and continue                @M4A         
.*                                                                 @M4A         
.TPATE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 PROCESSOR ID MUST NOT EXCEED &L1 CHARACTERS, CHPI*        
               D MUST BE 2 DIGITS.'                                @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XTPAT                  and continue                @M4A         
.*                                                                 @M4A         
.TPATE06 ANOP  ,                                                   @M4A         
         MNOTE 8,'048 TPATH KEYWORD IS NOT ALLOWED WITH TYPE=&TYPE.'   *        
                                                                   @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XTPAT                  and continue                @M4A         
.*                                                                 @M4A         
.TPATE07 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 CONTROL UNIT NUMBER MUST BE &L3 DIGITS, DEVICE NU*        
               MBER MUST BE &L3 DIGITS.'                           @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XTPAT                  and continue                @M4A         
.*                                                                 @M4A         
.TPATE08 ANOP  ,                                                   @M4A         
         MNOTE 8,'025 TPATH PARAMETER MUST SPECIFY &LB ENTRIES.'   @04A         
&ERROR   SETB  1                       Indicates error             @04A         
         AGO   .XTPAT                  and continue                @04A         
.*                                                                 @M4A         
.TPATE09 ANOP  ,                                                   @L5A         
         MNOTE 8,'026 Invalid number of CF devices on TPATH.   '   @L5A         
&ERROR   SETB  1                       Indicates error             @L5A         
         AGO   .XTPAT                  and continue                @L5A         
.*                                                                 @L5A         
.XTPAT   ANOP  ,                                                   @M4A         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PNETID         (name,...)                           *         
.*                               name                                 *         
.*                                                                @LDA*         
.**********************************************************************         
         AIF   ('&PNETID' EQ '').XPNET     PNETID not specified    @LDA         
&FLAG2   SETA  &FLAG2+&PNETF          Indicate PNETID specified    @LDA         
.*                                                                              
&MAXSUB  SETA  4                      Maximum number of PNET ids   @LDA         
&L       SETA  16                     Maximum name length          @LDA         
.*                                                                              
.**********************************************************************         
.*       Validate simple partition list                               *         
.**********************************************************************         
.*                                                                              
.PNET001 ANOP ,                                                    @LDA         
&IP      SETA  N'&PNETID              Number of names in list      @LDA         
&SUB     SETA  1                      Address first sublist entry  @LDA         
         AIF   (&IP GT &MAXSUB).PNETE01   Too many operands in list@LDA         
.PNET010 ANOP  ,                                                   @LDA         
&TPNETID SETC  '&PNETID(&SUB)'                                     @LDA         
         AIF   ('&TPNETID' EQ '').PNET040   No PNET id specified   @LDA         
.*                                                                              
&PNETNO  SETA  &PNETNO+1              Increment number of PNET ids @LDA         
         AIF   (K'&TPNETID GT &L).PNETE03  PNET ID too long        @LDA         
&POS     SETC  '&SUB'                 sub entry position           @LDA         
         ALPHANUM STRING=&TPNETID                                  @LFC         
         AIF   (&INTERR).PNETE02      Invalid character found      @LDA         
.*                                                                              
.*                                                                              
.PNET040 ANOP                         Process next partition       @LDA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LDA         
         AIF  (&SUB LE &IP).PNET010   More PNET IDs   ?            @LDA         
         AIF  (&PNETNO EQ 0).PNETE04  No PNET id specified         @LDA         
         AGO   .XPNET                 and continue with next parameter *        
                                                                   @LDA         
.*                                                                              
.*                                                                              
.PNETE01 ANOP  ,                                                   @LDA         
         MNOTE 8,'015 PNETID EXCEEDS &MAXSUB ENTRIES.'             @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.PNETE02 ANOP  ,                                                   @LDA         
         MNOTE 8,'017 PNETID ENTRY &SUB CONTAINS INVALID CHARACTER.'   *        
                                                                   @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.PNETE03 ANOP  ,                                                   @LDA         
         MNOTE 8,'003 PNETID ENTRY &SUB EXCEEDS &L CHARACTERS.'    @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.PNETE04 ANOP  ,                                                   @LDA         
         MNOTE 8,'015 PNETID PARAMTER CONTAINS NO NAME.'           @LDA         
&ERROR   SETB  1                      Indicates error              @LDA         
         AGO   .XPNET                 and continue                 @LDA         
.*                                                                              
.*                                                                              
.*                                                                              
.XPNET   ANOP  ,                      End of handling parameter    @LDA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @N3A         
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @N3A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A         
.*                                   (Asmblr checks for end quote) @N3A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
.DELEN   ANOP                                                      @N3A         
&DESCR   SETC  '&DESC'                Set description              @N3A         
&LEN     SETA  K'&DESC-2              Length of description        @N3A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A         
&DSC     SETC  '&DESC'(2,&LEN)        Set description string       @L2A         
         STRLEN STRING=&DSC           Determine length             @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).GENTEXT  Less than maximum            @N3A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
.DENULL  ANOP                                                      @N3A         
&DESCR   SETC  ''' '''                Set to blank                 @N3A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1).EXIT       Exit if error                             
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number            
         DC    AL1(&TYP)              Channel path type                         
&AWK     SETA &NUMCHP-&PAASTRK        Number of entries in PATH sublist         
         DC    AL1(&AWK)              Number of entries in PATH list            
         DC    AL1(&UMODE)            Channel path operation mode  @LBA         
         DC    AL1(&CSSID)            CSS id                       @HHA         
         DC    AL1(&FLAG)             Flag byte                                 
         DC    AL1(&FLAG2)            Flag byte 2                  @HHA         
         AIF   ('&SWITCH' EQ '').NOSWT     SWITCH specified                     
         DC    XL1'&SWITCH'           Channel path switch number                
         AGO   .ESWT                                                            
.NOSWT   DC    XL1'00'                SWITCH (not specified)                    
.ESWT    ANOP                                                                   
         DC    AL1(&CHNBIT)           Bit mask for channel numbers              
         DC    AL1(&ESWBIT)           Bit mask for entry ports     @M4A         
         AIF   ('&TYPE' NE 'OSM').NOOSM   OSM CHPID not specified  @L6A         
         DC    XL1'02'                Set unique value for OSM     @L6A         
         AGO   .NODSA                                              @L6A         
.NOOSM   ANOP  ,                      Check for CHPID parameter    @L6A         
         AIF   ('&CHPARM' EQ '').NOCHPRM OS specified              @HHA         
         DC    XL1'&LCHPRM'           CHPARM parameter value       @HXC         
         AGO   .NODSA                                              @HHA         
.NOCHPRM ANOP  ,                                                   @HHA         
         AIF   ('&OS' EQ '').NOOS     OS specified                 @M5A         
         DC    XL1'&OS'               OS parameter value           @M5A         
         AGO   .NODSA                                              @M5A         
.NOOS    DC    XL1'00'                OS (not specified)           @M5A         
.NODSA   ANOP  ,                                                   @HHA         
.*                                                                              
.*                                                                              
.*                                                                              
.* -- define PCHID / VCHID                                         @LLA         
.*                                                                 @LLA         
.DFCHD   ANOP  ,                                                   @LLA         
         AIF   ('&PCHID' EQ '' ).NOPCHD  PCHID specified           @HHA         
         AIF   ('&PCHID' EQ '*').PCHDFF                            @HLA         
         DC    XL2'0&PCHID'              PCHID value               @HHA         
         AGO   .XDFCHD                                             @LLC         
.*                                                                 @LLA         
.*                                                                 @LLA         
.* -- PCHID = '*'                                                  @LLA         
.*                                                                 @LLA         
.PCHDFF  ANOP  ,                                                   @HLA         
         DC    XL2'FFFF'              Reserved                     @HLA         
         AGO   .XDFCHD                                             @LLC         
.*                                                                 @LLA         
.*                                                                 @LLA         
.*                                                                 @LLA         
.* -- no PCHID specified, check for VCHID                          @LLA         
.*                                                                 @LLA         
.NOPCHD  ANOP  ,                                                   @HHA         
         AIF   ('&VCHID' EQ '' ).NOVCHD                            @LLA         
         AIF   ('&VCHID' EQ '*').VCHDFF                            @LLA         
         DC    XL2'0&VCHID'              save VCHID value          @LLA         
         AGO   .XDFCHD                                             @LLA         
.*                                                                 @LLA         
.*                                                                 @LLA         
.* -- VCHID = '*', save 0xFFFF in ITR, for overgenned VCHID        @LLA         
.*                                                                 @LLA         
.VCHDFF  ANOP  ,                                                   @LLA         
         DC    XL2'FFFF'                                           @LLA         
         AGO   .XDFCHD                                             @LLA         
.*                                                                 @LLA         
.*                                                                 @LLA         
.* -- no PCHID and no VCHID specified: store 0 in ITR              @LLA         
.*                                                                 @LLA         
.NOVCHD  ANOP  ,                                                   @LLA         
         DC    XL2'00'                                             @LLA         
.*                                                                 @LLA         
.*                                                                 @LLA         
.*                                                                 @LLA         
.* -- end of define PCHID/VCHID                                    @LLA         
.*                                                                 @LLA         
.XDFCHD  ANOP  ,                                                   @LLA         
.*                                                                              
.*                                                                              
.*                                                                              
.*                                                                              
.PALSTD  ANOP  ,                                                   @HHA         
.*                                                                              
         DC    AL2(&PACT)             Number of entries in partition   *        
                                      access list                  @LBA         
         DC    AL2(&PCCT)             Number of entries in partition   *        
                                      candidate list               @LBA         
         AIF   (&PACT EQ 0).NOACCP    Partition access list is empty   *        
                                                                   @LBA         
         DC    A(@A&CNO)              Address of partition access list *        
                                                                   @LBA         
         AGO   .GENCANP               branch to continue           @LBA         
.NOACCP  DC    A(0)                   No partition list exists     @LBA         
.GENCANP ANOP  ,                                                   @LBA         
         AIF   (&PCCT EQ 0).NOCANP    Partition candidate list empty   *        
                                                                   @LBA         
         DC    A(@C&CNO)              Address of partition candidate   *        
                                      list                         @LBA         
         AGO   .EGCANP                branch to continue           @LBA         
.NOCANP  DC    A(0)                   No partition candidate list      *        
                                      exists                       @LBA         
.EGCANP  ANOP  ,                                                   @LBA         
         AIF   (&NTPAT EQ 0).NOTPATH  No connected channel paths   @M4A         
         DC    A(@X&CNO)              Address of connected chpids  @M4A         
         AGO   .GENDESC               branch to continue           @M4A         
.NOTPATH DC    A(0)                   Reserved                     @LBA         
.GENDESC ANOP  ,                                                   @M4A         
         AIF   ('&DESC' EQ '').NODESC Description specified        @N3A         
         DC    CL32&DESCR             Channel path description     @N3A         
         AGO   .EDESCP                branch to continue           @N3A         
.NODESC  ANOP  ,                      Description not specified    @N3A         
         DC    XL32'00'               Channel path description     @N3A         
.EDESCP  ANOP  ,                                                   @N3A         
.*                                                                              
&SUB     SETA  1                      Point to first PATH id                    
         AIF   (&NUMCHP-&PAASTRK EQ 0).ZEROS      No PATH list                  
.GENLP1  ANOP                                                                   
         AIF   ('&PACHID(&SUB)' EQ '**').INASTR Skip asterisks(**)              
         DC    XL1'&PACHID(&SUB)'     Channel path id                           
         AIF   ('&PACHAN(&SUB)' EQ '').CHANEMP  Channel # empty                 
         DC    XL1'&PACHAN(&SUB)'     Channel number                            
         AGO   .ENDCHAN                                                         
.CHANEMP DC    XL1'00'                Channel number not specified              
.ENDCHAN ANOP                                                                   
         AIF   ('&PACHSE(&SUB)' EQ '').SETEMP   Channel set empty               
         DC    XL1'&PACHSE(&SUB)'     Channel set                               
         AGO   .ENDSET                                                          
.SETEMP  DC    XL1'00'                Channel set not specified                 
.ENDSET  ANOP                                                                   
         AIF   ('&ESW(&SUB)' EQ '').SWPEMP  No Switch/port id      @M4A         
         AIF   ('&ESW(&SUB)' EQ '**').SWPEMP No Switch/port id     @M4A         
         DC    XL1'&ESW(&SUB)'        Entry switch id              @M4A         
         DC    XL1'&EPORT(&SUB)'      Entry port id                @M4A         
         AGO   .EGPAL1                                             @M4A         
.SWPEMP  ANOP  ,                                                   @M4A         
         DC    XL1'00'                Reserved for Entry switch    @N3A         
         DC    XL1'00'                Reserved for Entry port      @N3A         
         AGO   .EGPAL1                                                          
.INASTR  ANOP                                                                   
.EGPAL1  ANOP                                                                   
&SUB     SETA &SUB+1                  Point to next sublist entry               
         AIF  (&SUB LE &NUMCHP).GENLP1   Go insert next PATH id                 
&SUB     SETA &SUB-&PAASTRK           Account for asterisk entries              
.ZEROS   AIF  (&SUB GT &MAXPATH).EZEROS    Fill in all bytes                    
         DC    XL1'00'                Reserved for Channel path id              
         DC    XL1'00'                Reserved for Channel number               
         DC    XL1'00'                Reserved for Channel set                  
         DC    XL1'00'                Reserved for Entry switch    @N3A         
         DC    XL1'00'                Reserved for Entry port      @N3A         
&SUB     SETA &SUB+1                  Point to next null entry                  
         AGO  .ZEROS                  Fill in all bytes                         
.EZEROS  ANOP  ,                                                   @HHA         
         DC    AL1(&PCSSID)           Set bit mask for PART key    @HHA         
         DC    AL1(&NCSSID)           Set bit mask for NOTPART key @HHA         
         AIF   ('&AID' EQ '').NDAID   AID not specified            @HVA         
         AIF   ('&AID' EQ '*').AIDDFF  AID overgenned              @L4A         
         AIF   (K'&AID EQ 1).OAID                                  @08A         
         DC    XL2'00&AID'            AID parameter                @HVA         
         AGO   .TWOAID                                             @08A         
.OAID    ANOP  ,                                                   @08A         
         DC    XL2'000&AID'           AID parameter                @08A         
.TWOAID  ANOP  ,                                                   @08A         
         AGO   .SPORT                 Check port                   @HVA         
.AIDDFF  ANOP  ,                                                   @L4A         
         DC    XL2'00FF'              AID overgenned               @L4A         
         AGO   .SPORT                 Check port                   @L4A         
.NDAID   ANOP  ,                                                   @HVA         
         DC    XL2'0000'              Reserved                     @HVA         
.SPORT   ANOP  ,                                                   @HVA         
         AIF   ('&PORT' EQ '').NDPRT0 PORT not specfied            @HVA         
         DC    AL1(&PORT)             PORT parameter               @HVA         
         AGO   .NDPORT                Skip                         @HVA         
.NDPRT0  ANOP  ,                                                   @HVA         
         DC    XL1'00'                Reserved                     @HVA         
.NDPORT  ANOP  ,                                                   @HVA         
         DC    XL3'00'                Reserved                     @HVC         
         AIF   (&PNETNO EQ 0).NOPNETP No PNET ids specified        @LDA         
         DC    A(@Y&CNO)                                           @LDA         
         AGO   .GPARTL                                             @LDA         
.NOPNETP ANOP  ,                                                   @LDA         
         DC    A(0)                   No PNETID specified          @LDA         
.*                                                                 @LBA         
.*------------------   Generate Partition access list -------------@LBA         
.*                                                                 @LBA         
.GPARTL  AIF   (&PACT EQ 0).EGACCL   Partition access list is empty@LBA         
         SPACE 1                                                   @LBA         
*----------------   Partition Access List  ------------------------@LBA         
&SUB     SETA  1                      Point to first partition     @LBA         
&CWK     SETC  '@A&CNO'               Label for first partition    @LBA         
.ACCL10  ANOP  ,                                                   @LBA         
&CWK     DC    CL8'&PACC(&SUB)'       Partition                    @LBA         
         DC    AL1(&PACS(&SUB))       CSS id                       @HHA         
         DC    AL1(&PAST(&SUB))       Inclusion/Exclusion flag     @HHA         
&CWK     SETC  ''                     Blank out label              @LBA         
&SUB     SETA  &SUB+1                 Point to next entry in array @LBA         
         AIF   (&SUB LE &PACT).ACCL10   Process next partition in      *        
                                        access list                @LBA         
.EGACCL  ANOP  ,                                                   @LBA         
.*                                                                 @LBA         
.*---------------   Generate Partition candidate list -------------@LBA         
.*                                                                 @LBA         
         AIF   (&PCCT EQ 0).EGCANL   Partition candidate list is       *        
                                     empty                         @LBA         
         SPACE 1                                                   @LBA         
*----------------   Partition Candidate List  ---------------------@LBA         
&SUB     SETA  1                      Point to first partition     @LBA         
&CWK     SETC  '@C&CNO'               Label for first partition    @LBA         
.CANL10  ANOP  ,                                                   @LBA         
&CWK     DC    CL8'&PCAN(&SUB)'       Partition                    @LBA         
         DC    AL1(&PCCS(&SUB))       CSS id                       @HHA         
         DC    AL1(&PCST(&SUB))       Inclusion/Exclusion flag     @HHA         
&CWK     SETC  ''                     Blank out label              @LBA         
&SUB     SETA  &SUB+1                 Point to next entry in array @LBA         
         AIF   (&SUB LE &PCCT).CANL10   Process next partition in      *        
                                        candidate list             @LBA         
.EGCANL  ANOP  ,                                                   @LBA         
.*                                                                              
.*                                                                 @LBA         
.*---------------   Generate List of connected channel paths ------@M4A         
.*                                                                 @M4A         
         AIF   (&NTPAT EQ 0).EGTCPL   Connected channel path list is   *        
                                     empty                         @M4A         
         SPACE 1                                                   @M4A         
*----------------   List of connected channel paths ---------------@M4A         
&CWK     SETC  '@X&CNO'               Label for first channel path @M4A         
&CWK     DC    H'&NTPAT'              Number of connected chpids   @M4A         
&CWK     SETC  ''                     Blank out label              @M4A         
         DC    H'0'                   Reserved                     @HHA         
&SUB     SETA  1                      Point to first target chpid  @M4A         
.TCPL10  ANOP  ,                                                   @M4A         
         DC    CL8'&EPR(&SUB)'        Processor                    @M4A         
         DC    XL1'&ECHP(&SUB)'       Channel path id              @M4A         
         DC    AL1(&ECSS(&SUB))       Channel subsystem id         @HHA         
         DC    XL3'00'                Reserved                     @HHA         
         AIF   ('&ECUN(&SUB)' EQ '').TCPL15                        @M4A         
         DC    AL1(&ENDV(&SUB))       Number of cu/devices         @L5C         
         DC    XL2'&ECUN(&SUB)'       Control unit number          @M4A         
         AIF   ('&EDEV(&SUB)' EQ '').TCPL16                        @HTA         
         DC    XL2'&EDEV(&SUB)'       Device number 1              @M4A         
         DC    XL2'0000'              Device number suffix         @M4A         
         DC    XL124'00'              Reserved                     @L5C         
         AGO   .TCPL18                                             @M4A         
.TCPL15  ANOP  ,                                                   @M4A         
         DC    XL3'00'                Reserved                     @HTC         
.TCPL16  ANOP  ,                                                   @HTA         
         DC    XL128'00'               Reserved                    @L5C         
.TCPL18  ANOP  ,                                                   @M4A         
&SUB     SETA  &SUB+1                 Point to next entry in array @M4A         
         AIF   (&SUB LE &NTPAT).TCPL10  Process next channel path in   *        
                                        connected channel path lst @M4A         
.EGTCPL  ANOP  ,                                                   @M4A         
.*                                                                              
.*------------------ Generate PNET ids ------------------------------           
.GENPNET ANOP  ,                                                   @LDA         
         AIF   (&PNETNO EQ 0).NOPNETA No PNET id specified         @LDA         
&CWK     SETC  '@Y&CNO'               Label for first PNETid       @LDA         
&SUB     SETA  1                      Point to first PNET id       @LDA         
.PNETCR  ANOP  ,                                                   @LDA         
         AIF   ('&PNETID(&SUB)' EQ '').NOPNET1                     @LDA         
&CWK     DC    CL16'&PNETID(&SUB)'    Fill in PNET id              @LDA         
         AGO   .PNETNXT               Goto next PNET id            @LDA         
.NOPNET1 ANOP  ,                                                   @LDA         
&CWK     DC    XL16'00'               Empty PNET id                @LDA         
.PNETNXT ANOP  ,                                                   @LDA         
&CWK     SETC  ''                     Blank out label              @LDA         
&SUB     SETA  &SUB+1                 Increment index              @LDA         
         AIF   (&SUB LE 4).PNETCR     Still more PNET ids          @LDA         
         AGO   .EPNET                 branch to continue           @LDA         
.NOPNETA ANOP  ,                      PNETID not specified         @LDA         
.EPNET   ANOP  ,                                                   @LDA         
.*                                                                              
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - CNTLUNIT - CONTROL UNIT'                    
         MACRO  --  CONTROL UNIT INFORMATION                                    
&SYMBOL  CNTLUNIT &BRSTMPX=,&CUADD=,&CUNUMBR=,&LINK=,&PATH=,           *        
               &PROTOCL=,&REDRIVE=,&SHARED=,&UNIT=,&UNITADD=,&DESC=,   *        
               &SERIAL=,&SWPORT=                                                
.*                                                                 @M4C         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = CNTLUNIT                                        */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Control Unit characteristics.             */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL CNTLUNIT  BRSTMPX= NOT PARSED                        */         
*/*                       CUADD=number                               */         
*/*                       CUNUMBR=number                             */         
*/*                       DESC='description'                     @N3A*/         
*/*                       LINK=(addr<,addr>...)                      */         
*/*                       PATH=(chpid<,chpid!**>...)             @M5C*/         
*/*                       PROTOCL=D ! S ! S4 (D=default)             */         
*/*                       REDRIVE= NOT PARSED                        */         
*/*                       SERIAL=serial number                   @N3A*/         
*/*                       SHARED=Y ! YB ! N                          */         
*/*                       SWPORT=((sw1,port1),(sw2,port2),...)   @M4A*/         
*/*                       UNIT=type                                  */         
*/*                       UNITADD=((address<,number>),...)           */         
*/*                                                                  */         
*/*01*  FUNCTION =  Describes the characteristics of the control     */         
*/*                 unit, the channel paths to which the control     */         
*/*                 unit is attached, and the unit addresses the     */         
*/*                 control unit recognizes.                         */         
*/*                                                                  */         
*/*01*  NOTES =  A control unit can be attached to a maximum of      */         
*/*              eight channel paths.                                */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = For HCD use only.                           */         
*/*                                                                  */         
*/*01*  INPUT =   BRSTMPX= NOT PARSED                                */         
*/*             # CUADD=   2 Hex digit control unit address      @HAC*/         
*/*             # CUNUMBR= 3 or 4 Hex digit control unit number.     */         
*/*               DESC=    String of 0 to 32 EBCDIC characters.  @N3A*/         
*/*             # PATH=    Up to 8 channel paths (2 digtits ea) to   */         
*/*                        which the control unit is attached.       */         
*/*                        For a floating channel path,          @M5A*/         
*/*                        two asterisks are coded.              @M5A*/         
*/*               LINK=    Up to 8 link addresses (2/4 digits)   @HFC*/         
*/*               PROTOCL= Specifies the interface protocol.         */         
*/*                        D  = 1                                    */         
*/*                        S  = 2                                    */         
*/*                        S4 = 3                                    */         
*/*               REDRIVE= NOT PARSED                                */         
*/*               SERIAL=  Serial number (1 to 10 chars)         @N3A*/         
*/*               SHARED=  Level of concurrency of I/O requests that */         
*/*                        the channel allows for the control unit.  */         
*/*               SWPORT=  Up to 32 sublists (switch id,port id) @B1C*/         
*/*             # UNIT=    Type of control unit (name).              */         
*/*               UNITADD= Specify the unit addresses (2 digits) @LTC*/         
*/*                        of the I/O devices that are recognized    */         
*/*                        by the control unit.                      */         
*/*                        The number field (3 digits) is the count  */         
*/*                        of consecutive devices (up to 256)        */         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &$ERR              Global error flag                @M4A         
         LCLA  &AWK               Arithmetic work variable                      
         LCLA  &AWK1              Arithmetic work variable 1                    
         LCLA  &AWK2              Arithmetic work variable 2       @HHA         
         LCLB  &ASTF              Asteriks flag                                 
         LCLA  &COMMA             Index to comma in sublist entry               
         LCLA  &FLAG,&LBIT,&SBIT  Flag byte variables              @M6A         
         LCLA  &PBIT              Path mask                        @HHA         
         LCLA  &LINKMSK(4)        Link address mask                @HHA         
         LCLA  &SWADMSK(4)        Switch address mask              @HHA         
         LCLA  &FCHPC(4)          Count of floating CHPIDs         @HHC         
         LCLA  &SCHPC(4)          Count of static CHPIDs           @HHC         
         LCLA  &PMASK(4)          Static CHPID mask                @HHA         
         LCLA  &CUADDFF           Indicates CUADD FF explicitly set@HHA         
         LCLA  &CSSDEF            Indicates CSS explicitly defined @HHA         
         LCLA  &L                 Maximum or required operand length            
         LCLA  &L1                Maximum or required operand len  @HFA         
         LCLA  &LEN               Actual operand length            @N3A         
         LCLA  &CSID(4)           CSS ids                          @HHA         
         LCLA  &CSLID(4)          CSS ids in LINK parm             @HHA         
         LCLA  &CSSID             Current CSS id                   @HHA         
         LCLA  &IP                Number of entries in CSS list    @HHA         
         LCLA  &IL                Number of entries in Link list   @HHA         
         LCLA  &PANUM             Number of paths in CSS list      @HHA         
         LCLA  &IC                Number of CSS lists              @HHA         
         LCLA  &ILC               Number of CSS lists in LINK parm @HHA         
         LCLA  &MAXVAL            Maximum value of operand                      
         LCLC  &MAXVALC           Maximum value of operand                      
         LCLA  &MAXLINK           Maximum number of LINK id's                   
         LCLA  &MAXPATH           Maximum number of PATH id's                   
         LCLA  &MAXCSS            Maximum number of CSS entries    @HHA         
         LCLA  &MAXSWPO           Maximum number of port connects  @B1A         
         LCLA  &MAXUNAD           Maximum number of unit addresses              
         LCLA  &NUMUNA            Number of UNITADD values                      
         LCLA  &SINDX             Starting substring index                      
         LCLA  &NDX               Substring index                               
         LCLA  &SUB               Sublist element number                        
         LCLA  &SUB1              Sublist element number           @HHA         
         LCLA  &SUB2              Sublist element number           @HHA         
         LCLA  &LINDX             Link index                       @HHA         
         LCLA  &PANDX             Path index                       @HHA         
         LCLB  &ERROR             Error flag                                    
         LCLA  &PROTCL            PROTOCL number                                
         LCLA  &SHARD             I/O concurrency level                         
         LCLB  &MCSS              XMP syntax for PATH keyword      @HHA         
         LCLB  &MCSS1             XMP syntax for LINK keyword      @HHA         
         LCLB  &CSSNO(4)          Indicates if CSSn already given  @HHA         
         LCLB  &CSSLI(4)          Indicates if CSSn already given  @HHA         
         LCLC  &CNO               EBCDIC version of SYSITRN                     
         LCLC  &CWK               Character work variable                       
         LCLC  &DESCR             Description work area            @N3A         
         LCLC  &DSC               Description work area            @L2A         
         LCLC  &SERR              Serial number work area          @M5A         
         LCLC  &LINKID            LINK sublist entry (to parse)                 
         LCLC  &LIADDR(32)        Array of LINK address ids        @HHC         
         LCLC  &PATHID            PATH sublist entry (to parse)                 
         LCLC  &PACHID(32)        Array of channel PATH IDs        @HHC         
         LCLC  &UNADD             Unit address sublist entry (to parse)         
         LCLC  &UNAE(8)           Unit addresses from UNITADD sublist           
         LCLC  &UNACNT(8)         Number of sequential unit addresses           
         LCLC  &UNITN             Unit name                                     
         LCLC  &UNITM             Unit type  (MODEL)                            
         LCLA  &NSWPO             Number of entry switch ports     @M4A         
         LCLB  &SINGLE            Only single list element         @M4A         
         LCLC  &ESWPORT           Character sublist entry          @M4A         
         LCLC  &ESWID             Character sublist entry          @M4A         
         LCLC  &ESW(32)           Entry switch id set from SWPORT  @B1C         
         LCLC  &EPORT(32)         Entry switch port id from SWPORT @B1C         
         ACTR  10000              Set for infinite loop control                 
&CUADDFF SETA  64                 Flag that CUADD FF is definied   @HHA         
&CSSDEF  SETA  32                 Flag that CSS is definied        @HHA         
&SYMBOL  TXTHDR CNTLUNIT                                                        
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS10            and continue                     @P3A         
.*                                                                              
.XPOS10  ANOP  ,                                                   @P3A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate BRSTMPX             --- NOT PARSED ---              *         
.*                                                                    *         
.**********************************************************************         
         AIF   ('&BRSTMPX' EQ '').CKCUADD    BRSTMPX not specified              
         MNOTE *,'    005 BRSTMPX KEYWORD IGNORED BY MVS/XA.'                   
.**********************************************************************         
.*                                                                    *         
.*       Validate CUADD                1 or 2 HEX digits          @HAC*         
.*                                                                    *         
.**********************************************************************         
.CKCUADD ANOP                                                                   
&L       SETA  2                             Maximum CUADD length  @HAC         
         AIF   ('&CUADD' EQ '').CKCUNUM      CUADD not specified                
         AIF   (N'&CUADD GT 1).SUBCUA        Invalid in sublist format          
         AIF   (K'&CUADD LE &L).CUACHAR      Number of characters  @HAC         
         MNOTE 8,'032 CUADD PARAMETER MUST NOT EXCEED &L CHARACTERS.'           
&ERROR   SETB  1                      Indicates error              @HAC         
         AGO   .CKCUNUM                                                         
.CUACHAR ANOP                                                                   
&NDX     SETA 1                       Point to first digit                      
.*                                                                 @HAA         
.CUALOOP ANOP ,                                                    @HAA         
.*       Loop to validate each number in the chpid id                           
.*       Validate the CUADD                                                     
         AIF   ('&CUADD'(&NDX,1) LT 'A').BADCUA Invalid digit      @HAC         
         AIF   ('&CUADD'(&NDX,1) LE 'F').GOODCUA (A-F)             @HAC         
         AIF   ('&CUADD'(&NDX,1) LT '0').BADCUA Invalid digit      @HAC         
         AIF   ('&CUADD'(&NDX,1) LE '9').GOODCUA (0-9)             @HAC         
.BADCUA  ANOP                         Invalid char in generic name              
&CWK     SETC '&CUADD'(&NDX,1)        Isolate invalid character    @HAA         
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN CUADD PARAMETER.'           
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKCUNUM               Go check next keyword        @HAA         
.GOODCUA ANOP  ,                                                   @HAA         
&NDX     SETA  &NDX+1                 Point to next digit          @HAA         
         AIF (&NDX LE K'&CUADD).CUALOOP Check next digit           @HAA         
         AIF ('&CUADD'(1,2) NE 'FF').CKCUNUM                       @HHA         
&FLAG    SETA &FLAG+&CUADDFF          Indicate CUADD FF            @HHA         
.*                                                                5@HDD         
         AGO   .CKCUNUM               Go check next keyword        @HAA         
.SUBCUA  MNOTE 8,'014 CUADD PARAMETER MAY NOT BE A SUBLIST.'       @HAA         
&ERROR   SETB  1                      Indicates error              @HAA         
.**********************************************************************         
.*                                                                    *         
.*       Validate CUNUMBR              1, 2, 3 or 4 Hex digits        *         
.*                                                                    *         
.**********************************************************************         
.CKCUNUM ANOP                                                                   
&L       SETA  4                             Max. CUNUMBR length                
         AIF   ('&CUNUMBR' EQ '').NOCUNUM    CUNUMBR not specified              
         AIF   (N'&CUNUMBR GT 1).CUSUB       Invalid in sublist format          
         AIF   (K'&CUNUMBR EQ &L).CUCHAR     Must be exact length               
         AIF   (K'&CUNUMBR EQ &L-1).CUCHAR   Must be exact length               
         AIF   (K'&CUNUMBR EQ &L-2).CUCHAR   Must be exact length               
         AIF   (K'&CUNUMBR EQ &L-3).CUCHAR   Must be exact length               
&AWK     SETA  &L-3                                                             
        MNOTE 8,'022 CUNUMBR PARAMETER MUST BE BETWEEN &AWK AND &L DIGI*        
               TS.'                                                             
&ERROR   SETB  1                      Indicates error                           
.CUCHAR  ANOP                                                                   
.*                                                                              
.*       Loop to validate each character in the control unit number             
.*                                                                              
&NDX     SETA  1                      Points to 1st digit of cu number          
.CULOOP  ANOP                                                                   
         AIF   ('&CUNUMBR'(&NDX,1) LT 'A').BADCU    Non-hex digit               
         AIF   ('&CUNUMBR'(&NDX,1) LE 'F').GOODCU   Hex digit (A-F)             
         AIF   ('&CUNUMBR'(&NDX,1) LT '0').BADCU    Non-hex digit               
         AIF   ('&CUNUMBR'(&NDX,1) LE '9').GOODCU   Hex digit (0-9)             
.BADCU   ANOP                         Invalid HEX digit                         
&CWK     SETC  '&CUNUMBR'(&NDX,1)     Isolate invalid number                    
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN CUNUMBR PARAMETER.'         
&ERROR   SETB  1                      Indicates error                           
.GOODCU  ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next digit in cu number         
         AIF   (&NDX LE K'&CUNUMBR).CULOOP  Check next digit                    
         AGO   .CKPATH                Go check next keyword                     
.CUSUB   MNOTE 8,'014 CUNUMBR NOT VALID IN SUBLIST FORMAT.'                     
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKPATH                Go check next keyword                     
.NOCUNUM MNOTE 8,'002 CUNUMBR KEYWORD NOT SPECIFIED.'                           
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                                                    *         
.*       Validate PATH                1 to &MAXPATH chpid's           *         
.*                                                                    *         
.**********************************************************************         
.CKPATH  ANOP                                                                   
&MAXCSS  SETA  8                       Maximum number of CSS       @LGC         
&MAXPATH SETA  8                       Maximum number of PATH id's              
&L       SETA  2                       Required PATH length                     
         AIF ('&PATH' EQ '').NOPATH    PATH not specified                       
&SUB1    SETA  1                       Indicates CSS list entry    @HHA         
         AIF ('&PATH(1)'(1,5) EQ '(CSS(').MCSS00                   @HHA         
         AIF ('&PATH(1)'(1,4) EQ 'CSS(').MCSS01                    @HHA         
&IC      SETA  1                       Number entries in list      @HHA         
&IP      SETA  N'&PATH                 Number entries in list      @HHA         
&PANUM   SETA  N'&PATH                 Number of paths             @HHA         
&CSSID   SETA  0                       Default to CSS 0            @HHA         
&SUB     SETA  1                       Point to first sublist                   
         AGO   .PASUBLE                                            @HHA         
.MCSS01  ANOP  ,                                                   @HHA         
&SINGLE  SETB  1                       Indicate single CSS list    @HHA         
&MCSS    SETB  1                       Indicates XMP format        @HHA         
&FLAG    SETA  &FLAG+&CSSDEF           Indicate CSS defined        @HHA         
&PATHID  SETC  '&PATH(1)'              Extract CSS identifier      @HHA         
&IC      SETA  1                       Number of CSS lists         @HHA         
&IP      SETA  N'&PATH                 Number of entries in list   @HHA         
&PANUM   SETA  N'&PATH-1               Number paths in list        @HHA         
         AGO   .MCSS12                 Process single CSS list     @HHA         
.MCSS00  ANOP  ,                                                   @HHA         
&SINGLE  SETB  0                       Indicate not single CSS lst @HHA         
&MCSS    SETB  1                       Indicates XMP format        @HHA         
&FLAG    SETA  &FLAG+&CSSDEF           Indicate CSS defined        @HHA         
&IC      SETA  N'&PATH               Number of PATH CSS lists      @HHA         
         AIF   (N'&PATH GT &MAXCSS).MCSSER0 Too many CSSs          @HHA         
.MCSS10  ANOP  ,                       Loop body for XMP format    @HHA         
&PATHID  SETC  '&PATH(&SUB1,1)'        Get next CSS identifier     @HHA         
&IP      SETA  N'&PATH(&SUB1)        Number of entries in sublist  @HHA         
&PANUM   SETA  N'&PATH(&SUB1)-1      Number of paths in sublist    @HHA         
.MCSS12  ANOP  ,                                                   @HHA         
         AIF   ('&PATHID'(1,4) NE 'CSS(').MCSSER2                  @HHA         
&CSID(&SUB1) SETA  0                 Set CSS id                    @HHA         
         AIF   ('&PATHID'(5,2) EQ '0)').MCSS20                     @HHA         
&CSID(&SUB1) SETA  1                 Set CSS id                    @HHA         
         AIF   ('&PATHID'(5,2) EQ '1)').MCSS20                     @HHA         
&CSID(&SUB1) SETA  2                 Set CSS id                    @HHA         
         AIF   ('&PATHID'(5,2) EQ '2)').MCSS20                     @HHA         
&CSID(&SUB1) SETA  3                 Set CSS id                    @HHA         
         AIF   ('&PATHID'(5,2) EQ '3)').MCSS20                     @HHA         
&CSID(&SUB1) SETA  4                 Set CSS id                    @LGA         
         AIF   ('&PATHID'(5,2) EQ '4)').MCSS20                     @LGA         
&CSID(&SUB1) SETA  5                 Set CSS id                    @LGA         
         AIF   ('&PATHID'(5,2) EQ '5)').MCSS20                     @LGA         
&CSID(&SUB1) SETA  6                 Set CSS id                    @LGA         
         AIF   ('&PATHID'(5,2) EQ '6)').MCSS20                     @LGA         
&CSID(&SUB1) SETA  7                 Set CSS id                    @LGA         
         AIF   ('&PATHID'(5,2) EQ '7)').MCSS20                     @LGA         
         AGO   .MCSSER1              Invalid CSS id                @HHA         
.MCSS20  ANOP  ,                                                                
&CSSID   SETA  &CSID(&SUB1)          Set CSS id                    @HHA         
         AIF   (&CSSNO(&CSSID+1)).MCSSER3  CSS specified twice     @HHA         
&CSSNO(&CSSID+1) SETB  1             Indicate CSS id specified     @HHA         
&SUB     SETA  2                     Start with second entry       @HHA         
.*                                                                              
.PASUBLE ANOP                                                                   
         AIF (&PANUM LE &MAXPATH).PASUBLF  Number of paths        @HHC          
         MNOTE 8,'015 PATH PARAMETER EXCEEDS &MAXPATH SUBLIST ENTRIES.'         
&ERROR   SETB  1                       Indicate error                           
         AGO   .XPATH                                              @HHA         
.PASUBLF ANOP                                                                   
&FLOAT   SETA  0                       Initialize floater count    @M5A         
&PBIT    SETA  0                                                   @HHA         
&AWK1    SETA  128                     Track static bits           @HHA         
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.PALOOP  ANOP                                                                   
         AIF   (&MCSS).MCSS30                                      @HHA         
&PATHID  SETC  '&PATH(&SUB)'          Isoloate sublist entry                    
         AGO   .MCSS40                                             @HHA         
.MCSS30  ANOP  ,                                                   @HHA         
         AIF   (&SINGLE).MCSS35       If single list               @HHA         
&PATHID  SETC  '&PATH(&SUB1,&SUB)'    Isolate sublist entry        @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.')'                          @HHA         
         AGO   .MCSS40                                             @HHA         
.MCSS35  ANOP  ,                                                   @HHA         
&PATHID  SETC  '&PATH(&SUB)'          Isolate next path entry      @HHA         
&POS     SETC  '&SUB'                                              @HHA         
.MCSS40  ANOP  ,                                                   @HHA         
         AIF ('&PATHID' EQ '').PANULL   Null sublist entry         @HHC         
         AIF ('&PATHID' EQ '**').PAASTR  Floating entry            @HHC         
         AIF (K'&PATHID EQ &L).PACHAR  Must be exact length parens)             
         MNOTE 8,'022 PATH PARAMETER SUBLIST ENTRY &SUB MUST BE &L DIGI*        
               TS.'                                                             
&ERROR   SETB  1                      Indicate error                            
         AGO   .PACHAR                                             @M5A         
.PAASTR  ANOP  ,                                                   @M5A         
&FLOAT   SETA  &FLOAT+1               Increment number of floaters @M5A         
         AGO   .NXTPAID               Continue with next           @M5A         
.PACHAR  ANOP                                                                   
&NDX     SETA  1                      Point to 1st digit of number              
.*                                                                              
.*       Loop to validate each character in the chpid number                    
.PALOOPA ANOP                                                                   
         AIF   ('&PATHID'(&NDX,1) LT 'A').BADPA    Non-hex digit                
         AIF   ('&PATHID'(&NDX,1) LE 'F').GOODPA   Hex digit (A-F)              
         AIF   ('&PATHID'(&NDX,1) LT '0').BADPA    Non-hex digit                
         AIF   ('&PATHID'(&NDX,1) LE '9').GOODPA   Hex digit (0-9)              
.BADPA   ANOP                         Invalid HEX digit                         
&CWK     SETC  '&PATHID'(&NDX,1)      Isolate invalid number                    
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               FOR PATH PARAMETER.'                                             
&ERROR   SETB  1                      Indicates error                           
.GOODPA  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit in number             
         AIF   (&NDX LE K'&PATHID).PALOOPA  Check next digit                    
         AIF   (&ERROR EQ 1).NXTPAID  Check next chpid number                   
&PANDX   SETA  &CSID(&SUB1)*8+&SUB+&PANUM-&IP                                   
&PACHID(&PANDX))  SETC '&PATHID'    Insert chpid number into array @HHC         
&PBIT    SETA  &PBIT+&AWK1            Indicate static path         @HHA         
         AGO  .NXTPAID                Process next PATH chpid number            
.PANULL  MNOTE 8,'018 PATH SUBLIST ENTRY &POS IS MISSING.'         @HHC         
&ERROR   SETB 1                       Indicate error                            
.*                                                                              
.NXTPAID ANOP                         Process next sublist entry                
&AWK1    SETA &AWK1/2                 Go to next bit               @HHA         
&SUB     SETA &SUB+1                  Point to next path id entry               
         AIF  (&SUB LE &IP).PALOOP  More PATH id's ...             @HHC         
&SCHPC(&CSSID+1)  SETA &PANUM-&FLOAT   Count of static CHPIDs      @HHC         
&FCHPC(&CSSID+1)  SETA &FLOAT          Count of floating CHPIDs    @HHA         
&PMASK(&CSSID+1)   SETA &PBIT         Set static path mask         @HHA         
&SUB1    SETA &SUB1+1                 Point to next CSS list       @HHA         
         AIF  (&SUB1 LE &IC).MCSS10   Next CSS list in PATH parm   @HHA         
         AGO  .XPATH                   Go check next keyword       @HHC         
.NOPATH  MNOTE 8,'002 PATH KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB 1                        Indicate error                           
         AGO  .XPATH                   Stop processing PATH opnd   @HHA         
.*                                                                              
.MCSSER0 MNOTE 8,'045 PATH PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRIES.'          
.*                                                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.MCSSER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF PARTTION PARAMETER IS *        
               INVALID.'                                           @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.MCSSER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF PARTITION PARAMETE*        
               R HAS AN INVALID FORMAT.'                           @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.MCSSER3 MNOTE 8,'045 CSS ID &CSSID SPECIFIED TWICE.'              @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART                 and exit                     @HHA         
.*                                                                              
.XPATH   ANOP ,                        End of PATH operand         @HHA         
.**********************************************************************         
.*                                                                    *         
.*       Validate PROTOCL              PROTOCL=D!S!S4                 *         
.*                                       D  = 1                       *         
.*                                       S  = 2                       *         
.*                                       S4 = 3                       *         
.*                                                                    *         
.**********************************************************************         
.CKPROT  ANOP                                                                   
&PROTCL  SETA 0                                                                 
         AIF ('&PROTOCL' EQ '').NOPROT                                          
         AIF ('&PROTOCL' NE 'D').PROTS  Not D                                   
&PROTCL  SETA 1                        PROTOCL=D                                
         AGO  .CKRED                   Go check next keyword                    
.PROTS   AIF ('&PROTOCL' NE 'S').PROTS4   Not S                                 
&PROTCL  SETA 2                        PROTOCL=S                                
         AGO  .CKRED                   Go check next keyword                    
.PROTS4  AIF ('&PROTOCL' NE 'S4').PROTERR  Not S4                               
&PROTCL  SETA 3                        PROTOCL=S4                               
         AGO  .CKRED                   Go check next keyword                    
.PROTERR MNOTE 8,'003 PROTOCL=&PROTOCL IS INVALID.'                             
&ERROR   SETB 1                        Indicate error                           
.NOPROT  ANOP                                                                   
.**********************************************************************         
.*                                                                    *         
.*       Validate REDRIVE             --- NOT PARSED ---              *         
.*                                                                    *         
.**********************************************************************         
.CKRED   ANOP                                                                   
         AIF   ('&REDRIVE' EQ '').CKSHR    REDRIVE not specified                
         MNOTE *,'    005 REDRIVE KEYWORD IGNORED BY MVS/XA.'                   
.**********************************************************************         
.*                                                                    *         
.*       Validate SHARED               SHARED=Y!YB!N                  *         
.*                                       N  = 2                       *         
.*                                       Y  = 1                       *         
.*                                       YB = 1                       *         
.*                                                                    *         
.**********************************************************************         
.CKSHR   ANOP                                                                   
         AIF ('&SHARED' EQ '').CKUNIT  Exit if Null                             
         AIF ('&SHARED' NE 'Y').SHRYB  Not Y                                    
&SHARD   SETA 1                        SHARED=Y                                 
         AGO  .CKUNIT                  Go check next keyword                    
.SHRYB   AIF ('&SHARED' NE 'YB').SHRN  Not YB                                   
&SHARD   SETA 1                        SHARED=YB                                
         AGO  .CKUNIT                  Go check next keyword                    
.SHRN    AIF ('&SHARED' NE 'N').SHRERR  Not N                                   
&SHARD   SETA 2                        SHARED=N                                 
         AGO  .CKUNIT                  Go check next keyword                    
.SHRERR  MNOTE 8,'003 SHARED=&SHARED IS INVALID.'                               
&ERROR   SETB 1                        Indicate error                           
.**********************************************************************         
.*                                                                    *         
.*       Validate UNIT                 type <= 8 alphanumerics        *         
.*                                                                    *         
.**********************************************************************         
.CKUNIT  ANOP                                                                   
&L       SETA  8                        Maximum UNIT length                     
         AIF   ('&UNIT' EQ '').NOUNIT   UNIT not specified                      
         AIF   (N'&UNIT GT 1).UNISUB    Invalid in sublist format               
         AIF   (K'&UNIT LE &L).UNICHAR  Maximum number of characters            
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'                    
&ERROR   SETB  1                      Indicates error                           
.UNICHAR ANOP                                                                   
&NDX     SETA  1                      Point to 1st character                    
.*                                                                              
.*       Loop to validate each character in the UNIT name                       
.UNILOOP ANOP                                                                   
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODUNI   ($)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODUNI   (@)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODUNI   (#)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '-').CKMODEL   (-)                           
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODUNI   (A-I)                         
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODUNI   (J-R)                         
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODUNI   (S-Z)                         
         AIF   ('&UNIT'(&NDX,1) LT '0').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODUNI   (0-9)                         
.BADUNI  ANOP                         Invalid character                         
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'            
&ERROR   SETB  1                      Indicates error                           
.GOODUNI ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character of UNIT          
         AIF   (&NDX LE K'&UNIT).UNILOOP    Check next character                
&UNITN   SETC  '&UNIT'                Save specified UNIT                       
         AGO   .CKUNADD               Go check next keyword                     
.UNISUB  MNOTE 8,'014 UNIT NOT VALID IN SUBLIST FORMAT.'                        
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKUNADD               Go check next keyword                     
.NOUNIT  MNOTE 8,'002 UNIT KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKUNADD               Go check next keyword        @M3A         
.*                                                                              
.*       Loop to validate each character in the control unit type               
.CKMODEL ANOP                                                                   
&NDX     SETA  &NDX-1                 Last character in UNIT                    
&UNITN   SETC  '&UNIT'(1,&NDX)        Save specified unit name                  
&NDX     SETA  &NDX+1                 Point back to '-'                         
&MDX     SETA  &NDX                   Save this position                        
         AIF   (&NDX EQ K'&UNIT).BADMOD                                         
&NDX     SETA  &NDX+1                 Point to control unit type                
&MDX     SETA  &NDX                   Save this position                        
.MODLOOP ANOP                                                                   
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODMOD   ($)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODMOD   (@)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODMOD   (#)              @H4A         
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADMOD                                  
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODMOD   (A-I)                         
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADMOD                                  
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODMOD   (J-R)                         
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADMOD                                  
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODMOD   (S-Z)                         
         AIF   ('&UNIT'(&NDX,1) LT '0').BADMOD                                  
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODMOD   (0-9)                         
.BADMOD  ANOP                         Invalid character                         
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'            
&ERROR   SETB  1                      Indicates error                           
.GOODMOD ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character of UNIT          
         AIF   (&NDX LE K'&UNIT).MODLOOP    Check next character                
&UNITM   SETC  '&UNIT'(&MDX,(&NDX-&MDX)) Save control unit type                 
.**********************************************************************         
.*                                                                    *         
.*       Validate UNITADD             (address,count) ...             *         
.*                                                                    *         
.**********************************************************************         
.CKUNADD ANOP                                                                   
&MAXUNAD SETA  8                      Maximum number of unit addresses          
         AIF   ('&UNITADD' EQ '').NOUNITA   UNITADD not specified               
         AIF   (N'&UNITADD LE &MAXUNAD).UNASUB   Number of sublists             
         MNOTE 8,'015 UNITADD PARAMETER EXCEEDS &MAXUNAD SUBLIST ENTRIE*        
               S.'                                                              
&ERROR   SETB  1                      Indicates error                           
.UNASUB  ANOP                         Process each sublist                      
&SUB     SETA  1                      First sublist                             
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
         AIF   ('&UNITADD'(1,1) EQ '(').PARENS  check if parens                 
&UNADD   SETC  '&UNITADD'             unit address without parens               
&NDX     SETA  1                      start check with first item               
&SINDX   SETA  1                      starting index                            
&NUMUNA  SETA  1                      one operand specified                     
         AGO   .UNALOOP               check syntax                              
.PARENS  ANOP                                                                   
&NUMUNA  SETA  N'&UNITADD             number of UNITADD values                  
         AIF   ('&UNITADD'(2,1) EQ '(').UNLOOP check if sublist form            
&UNADD   SETC  '&UNITADD'             no sublist form                           
&NUMUNA  SETA  1                      only one value                            
         AGO   .PAREN1                                                          
.UNLOOP  ANOP                                                                   
&UNADD   SETC  '&UNITADD(&SUB)'       Isolate sublist entry                     
.PAREN1  ANOP                                                                   
         AIF   ('&UNITADD(&SUB)' EQ '').UNANUL  Null sublist entry              
         AIF   ('&UNADD'(1,1) NE '(').NOPAREN  First char not '('               
         AIF   (K'&UNADD EQ 2).UNANUL No operands within parens '()'            
&NDX     SETA  2                      Point past parenthesis                    
&SINDX   SETA  2                      starting index                            
.*                                                                              
.*       Loop to validate each character in the unit address field              
.UNALOOP ANOP                         Unit address validity loop                
&L       SETA  2                      Required address length                   
         AIF   ('&UNADD'(&NDX,1) EQ ',').SETUNAD    End of number               
         AIF   ('&UNADD'(&NDX,1) EQ ')').SETUNAD    End of number               
         AIF   ('&UNADD'(&NDX,1) LT 'A').BADUNA     Non-hex digit               
         AIF   ('&UNADD'(&NDX,1) LE 'F').GOODUNA    Good digit (A-F)            
         AIF   ('&UNADD'(&NDX,1) LT '0').BADUNA     Non-hex digit               
         AIF   ('&UNADD'(&NDX,1) LE '9').GOODUNA    Good digit (0-9)            
.BADUNA  ANOP                         Invalid HEX digit                         
&CWK     SETC  '&UNADD'(&NDX,1)       Isolate invalid number                    
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN UNIT ADDRESS SUBLIS*        
               T ENTRY &SUB FOR UNITADD PARAMETER.'                             
&ERROR   SETB  1                      Indicates error                           
.GOODUNA ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF   (&NDX LE K'&UNADD).UNALOOP  Check next digit                     
.*                                                                              
.SETUNAD ANOP                                                                   
         AIF   (&NDX EQ &SINDX).NOUNADD Unit address not specified '(,'         
         AIF   (&NDX NE &L+&SINDX).UNALEN Too many/few digits in addr           
         AIF   (&ERROR EQ 1).UNASKIP  Skip insert if error encountered          
&UNAE(&SUB) SETC '&UNADD'(&SINDX,&NDX-&SINDX) Insert unit address               
.UNASKIP AIF   (&NDX GE K'&UNADD ).NOCNT1 Go insert default count               
         AIF   ('&UNADD'(&NDX,1) EQ ',').CKCNT  Go do count                     
         AGO   .UNACOMA               Missing comma between sublists            
.UNALEN  MNOTE 8,'022 UNITADD PARAMETER UNIT ADDRESS SUBLIST ENTRY &SUB*        
                MUST BE &L DIGITS.'                                             
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKCNT                 Go check address count                    
.NOUNADD MNOTE 8,'017 UNIT ADDRESS REQUIRED IN SUBLIST ENTRY &SUB FOR U*        
               NITADD PARAMETER.'                                               
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*       Validate address count field                                 *         
.**********************************************************************         
.CKCNT   ANOP                         Check address count                       
&L       SETA  3                      Maximum count length                      
&MAXVAL  SETA  256                    Maximum UNITADD number value              
&MAXVALC SETC  '&MAXVAL'              Maximum UNITADD number value              
         AIF   ('&UNADD'(&NDX,1) NE ',').NEXTSLE  Bad address length            
&COMMA   SETA  &NDX                   Save position of comma                    
&NDX     SETA  &NDX+1                 First digit of count                      
         AIF   (&NDX EQ K'&UNADD).NOCNT  No 'count' after comma                 
.*                                                                              
.*       Loop to validate each number in the unit address count                 
.UNNLOOP ANOP                         Check address count                       
         AIF   ('&UNADD'(&NDX,1) EQ ',').OPCNT   Too many operands              
         AIF   ('&UNADD'(&NDX,1) EQ ')').SETUNUM  End of digit                  
         AIF   ('&UNADD'(&NDX,1) LT '0').BADCNT   Not decimal                   
         AIF   ('&UNADD'(&NDX,1) LE '9').GOODCNT  Decimal                       
.BADCNT  ANOP                         Invalid DECIMAL digit                     
&CWK     SETC  '&UNADD'(&NDX,1)       Isolate invalid number                    
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN ADDRESS COUNT S*        
               UBLIST ENTRY &SUB FOR UNITADD PARAMETER.'                        
&ERROR   SETB  1                      Indicates error                           
.GOODCNT ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next digit in dev cnt           
         AIF   (&NDX LE K'&UNADD).UNNLOOP  Check next digit                     
.*                                                                              
.SETUNUM AIF   (&NDX NE K'&UNADD).UNACOMA  Extra chars after ')'                
         AIF   (&NDX GT &COMMA+&L+1).UNACLEN  Count exceeds max length          
         AIF   (&NDX LT &COMMA+&L+1).INLIM    Count within limit                
         AIF   ('&UNADD'(&COMMA+1,&L) LE '&MAXVALC').INLIM  in lim              
         MNOTE 8,'042 UNITADD PARAMETER ADDRESS COUNT SUBLIST ENTRY &SU*        
               B MUST BE A NUMBER FROM 1 TO &MAXVAL.'                           
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Go process next sublist entry             
.INLIM   ANOP                                                                   
         AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry             
         AIF   (&NDX EQ &COMMA+1).NOCNT   Null entry, default                   
&UNACNT(&SUB) SETC '&UNADD'(&COMMA+1,&NDX-&COMMA-1) Device count                
         AGO   .NEXTSLE               Go process next sublist entry             
.NOCNT   AIF   (&NDX NE K'&UNADD).UNACOMA  Missing comma                        
.NOCNT1  AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry             
&UNACNT(&SUB) SETC '1'                Use default device count                  
         AGO   .NEXTSLE               Process next entry in sublist             
.UNACLEN MNOTE 8,'023 UNITADD PARAMETER ADDRESS COUNT SUBLIST ENTRY &SU*        
               B EXCEEDS &L DIGITS.'                                            
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Go process next sublist entry             
.OPCNT   MNOTE 8,'016 UNITADD SUBLIST ENTRY &SUB EXCEEDS 2 OPERANDS.'           
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Process next entry in sublist             
.**********************************************************************         
.*       Issue MNOTE and set up to process next sublist entry         *         
.**********************************************************************         
.UNACOMA MNOTE 8,'019 UNITADD SUBLIST ENTRY &SUB IS MISSING A COMMA.'           
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Process next entry in sublist             
.NOPAREN MNOTE 8,'013 UNITADD SUBLIST ENTRY &SUB MUST BE ENCLOSED IN PA*        
               RENTHESES.'                                                      
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Process next entry in sublist             
.UNANUL  MNOTE 8,'018 UNITADD SUBLIST ENTRY &SUB IS MISSING.'                   
&ERROR   SETB  1                      Indicates error                           
.*                                                                              
.NEXTSLE ANOP                         Process next sublist entry                
&SUB     SETA  &SUB+1                 Points to next sublist entry              
         AIF   (&SUB LE &NUMUNA).UNLOOP  Another entry to process...            
         AGO   .NOUNITA               Go check next keyword                     
.NOUNITA ANOP                                                      @LTC         
.**********************************************************************         
.*                                                                    *         
.*       Validate LINK                1 to &MAXLINK chpid's           *         
.*                                                                    *         
.**********************************************************************         
.CKLINK  ANOP                                                                   
&MAXLINK SETA  8                       Maximum number of PATH ids               
&MAXCSS  SETA  &IC                     Maximum number of CSS       @HHA         
&L       SETA  2                       Required PATH length                     
&L1      SETA  4                       Required Link length        @FBA         
         AIF ('&LINK' EQ '').ECKLNK    LINK not specified          @N3A         
&SUB1    SETA  1                       Start with first sublist    @HHA         
         AIF (NOT &MCSS).CKMAX         PATH not in MCSS syntax     @HHA         
         AIF (&IC GT 1).MCSSL00        More than 1 CSS in PATH     @HHA         
.*                                     LINK must have MCSS syntax  @HHA         
         AIF ('&LINK(1)'(1,5) EQ '(CSS(').MCSSL00 Single CSS, LINK @HHA         
.*                                     may have MCSS syntax or not @HHA         
         AIF ('&LINK(1)'(1,4) EQ 'CSS(').MCSSL00 Single CSS, LINK  @HHA         
.*                                     may have MCSS syntax or not @HHA         
.CKMAX   ANOP                                                                   
&ILC     SETA  1                       Only one CSS                @HHA         
&IL      SETA  N'&LINK                 Sublist entries             @HHA         
&LINUM   SETA  N'&LINK                 Number of link entries      @HHA         
&CSSID   SETA  &CSID(1)                Default CSS id              @HHA         
&CSLID(1) SETA &CSID(1)                Default CSS id              @HHA         
         AIF (N'&LINK LE &MAXLINK).LISUBLE  Number of sublists                  
         MNOTE 8,'015 LINK PARAMETER EXCEEDS &MAXLINK SUBLIST ENTRIES.'         
&ERROR   SETB  1                       Indicate error                           
.LISUBLE ANOP                                                                   
&SUB     SETA  1                       Point to first sublist                   
         AGO   .LILOOP0                Start to check link address @HHA         
.MCSSL00 ANOP  ,                       XMP syntax                  @HHA         
&MCSS1   SETB  1                       Indicate LINK in XMP syntax @HHA         
         AIF   ('&LINK(1)'(1,1) EQ '(').MCSSL01                    @HHA         
&SINGLE  SETB  1                       Indicate single CSS list    @HHA         
&ILC     SETA  1                       Single CSS list             @HHA         
&IL      SETA  N'&LINK                 Number of entries in list   @HHA         
&LINUM   SETA  N'&LINK-1               Number of link entries      @HHA         
&LINKID  SETC  '&LINK(1)'              Get first entry (CSS(n))    @HHA         
         AGO   .MCSSL12                Start processing            @HHA         
.MCSSL01 ANOP  ,                       Double parentheses          @HHA         
&SINGLE  SETB  0                       Indicate multiple CSS lists @HHA         
&ILC     SETA  N'&LINK                 Number of sublists          @HHA         
         AIF   (&ILC GT &MAXCSS).MCSLER0 Too many sublists spec.   @HHA         
.MCSSL10 ANOP  ,                       Loop body for XMP format    @HHA         
&IL      SETA  N'&LINK(&SUB1)        Number of entries in sublist  @HHA         
&LINUM   SETA  N'&LINK(&SUB1)-1      Number of links in sublist    @HHA         
&LINKID  SETC  '&LINK(&SUB1,1)'        Get first entry of sublist  @HHA         
.MCSSL12 ANOP  ,                                                   @HHA         
         AIF   ('&LINKID'(1,4) NE 'CSS(').MCSLER2                  @HHA         
&CSLID(&SUB1) SETA  0                 Set CSS id                   @HHA         
         AIF   ('&LINKID'(5,2) EQ '0)').MCSSL20                    @HHA         
&CSLID(&SUB1) SETA  1                 Set CSS id                   @HHA         
         AIF   ('&LINKID'(5,2) EQ '1)').MCSSL20                    @HHA         
&CSLID(&SUB1) SETA  2                 Set CSS id                   @HHA         
         AIF   ('&LINKID'(5,2) EQ '2)').MCSSL20                    @HHA         
&CSLID(&SUB1) SETA  3                 Set CSS id                   @HHA         
         AIF   ('&LINKID'(5,2) EQ '3)').MCSSL20                    @HHA         
&CSLID(&SUB1) SETA  4                 Set CSS id                   @LGA         
         AIF   ('&LINKID'(5,2) EQ '4)').MCSSL20                    @LGA         
&CSLID(&SUB1) SETA  5                  Set CSS id                  @LGA         
         AIF   ('&LINKID'(5,2) EQ '5)').MCSSL20                    @LGA         
&CSLID(&SUB1) SETA  6                 Set CSS id                   @LGA         
         AIF   ('&LINKID'(5,2) EQ '6)').MCSSL20                    @LGA         
&CSLID(&SUB1) SETA  7                 Set CSS id                   @LGA         
         AIF   ('&LINKID'(5,2) EQ '7)').MCSSL20                    @LGA         
         AGO   .MCSLER1              Invalid CSS id                @HHA         
.MCSSL20 ANOP  ,                                                   @HHA         
&CSSID   SETA  &CSLID(&SUB1)          Set CSS id                   @HHA         
         AIF   (&CSSLI(&CSSID+1)).MCSLER3  CSS specified twice     @HHA         
         AIF   (&CSSNO(&CSSID+1)).MCSSL30  CSS not in PATH stmt    @HHA         
         MNOTE 8,'040 SUBLIST ENTRY FOR CSS &CSSID NOT SPECIFIED IN PAT*        
               H PARAMTER.'                                        @HHA         
&ERROR   SETB  1                       Indicate error              @HHA         
.MCSSL30 ANOP  ,                                                   @HHA         
&SUB     SETA  2                     Start with second entry       @HHA         
.LILOOP0 ANOP  ,                      Prepare loop over link@s     @HHA         
&CSSLI(&CSSID+1) SETB  1             Indicate CSS id specified     @HHA         
         AIF   (&LINUM NE &SCHPC(&CSSID+1)+&FCHPC(&CSSID+1)).LINKER0            
.*                                                                 @HHA         
&PBIT    SETA  &PMASK(&CSSID+1)      Get path mask                 @HHA         
&LBIT    SETA  0                     Initialize Link mask          @HHA         
&SBIT    SETA  0                     Initialize switch addr mask   @HHA         
&SUB2    SETA  0                     Index in Link array           @HHA         
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
&AWK1    SETA  128                                                              
&AWK2    SETA  128                                                              
.LILOOP  ANOP                                                                   
&ASTF    SETB  0                                                                
         AIF   (&MCSS1).MCSSL40       XMP syntax                   @HHA         
&LINKID  SETC  '&LINK(&SUB)'          Isoloate sublist entry                    
         AGO   .LKADSET               Proceed                      @HHA         
.MCSSL40 ANOP  ,                      XMP processing               @HHA         
         AIF   (&SINGLE).MCSSL45      Single list processing       @HHA         
&LINKID  SETC  '&LINK(&SUB1,&SUB)'    Isolate link address         @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.')'                          @HHA         
         AGO   .LKADSET                                            @HHA         
.MCSSL45 ANOP  ,                                                   @HHA         
&LINKID  SETC  '&LINK(&SUB)'          Isolate next link address    @HHA         
&POS     SETC  '&SUB'                 Set entry position           @HHA         
.LKADSET ANOP  ,                                                   @HHA         
         AIF ('&LINKID' EQ '').LINULL   Null sublist entry         @HHC         
         AIF (K'&LINKID EQ &L OR K'&LINKID EQ &L1).LICHAR Must be               
.*                                    exact length                 @HFC         
         MNOTE 8,'022 LINK PARAMETER SUBLIST ENTRY &SUB MUST BE &L OR &*        
               L1 DIGITS.'                                         @HFC         
&ERROR   SETB  1                      Indicate error                            
.LICHAR  ANOP                                                                   
&AWK     SETA  K'&LINKID              Actual number of digits in number         
&NDX     SETA  1                      Point to 1st digit of number              
.*                                                                              
.*       Loop to validate each character in the chpid number                    
.LILOOPA ANOP                                                                   
         AIF   ('&LINKID'(&NDX,1) LT 'A').LISTRSK  Special                      
         AIF   ('&LINKID'(&NDX,1) LE 'F').GOODLI   Hex digit (A-F)              
         AIF   ('&LINKID'(&NDX,1) LT '0').BADLI    Non-hex digit                
         AIF   ('&LINKID'(&NDX,1) LE '9').GOODLI   Hex digit (0-9)              
.LISTRSK AIF   ('&LINKID'(1,&AWK) NE '**'  AND                         *        
               '&LINKID'(1,&AWK) NE '****').BADLI                  @HFA         
&ASTF    SETB  1                      Asteriks is encountered                   
&NDX     SETA  &NDX+1                 Point to 2nd asteriks                     
         AGO   .GOODLI                                                          
.BADLI   ANOP                         Invalid HEX digit                         
&CWK     SETC  '&LINKID'(&NDX,1)      Isolate invalid number                    
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               FOR LINK PARAMETER.'                                             
&ERROR   SETB  1                      Indicates error                           
.GOODLI  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit in number             
         AIF   (&NDX LE K'&LINKID).LILOOPA  Check next digit                    
.*                                                                8@HDD         
         AIF   (&ERROR EQ 1).NXTLIID  Check next chpid number                   
         AIF   (&PBIT GE &AWK2).LIINS   Skip link address          @HHA         
         AIF   ('&LINKID'(1,1) EQ '*').NXTLIIE                     @HHA         
         MNOTE 8,'040 LINK ADDRESS &LINKID SPECIFIED FOR MANAGED PATH.'*        
                                                                   @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
.LIINS   ANOP  ,                                                   @HHA         
&SUB2    SETA  &SUB2+1                                                          
&PBIT    SETA  &PBIT-&AWK2            Reset indication             @HHA         
&LINDX   SETA  &CSLID(&SUB1)*8+&SUB2                               @HHA         
&LIADDR(&LINDX) SETC '&LINKID'    Insert chpid number into array   @HHA         
         AIF (&ASTF EQ 1).NXTLIID     Exit if error                             
         AIF   (&AWK EQ &L).SET1B     One byte link address        @HFA         
&SBIT    SETA  &SBIT+&AWK1            Get bit mask for switch@     @HFA         
.SET1B   ANOP  ,                                                   @HFA         
&LBIT    SETA  &LBIT+&AWK1            Get bit mask for link                     
         AGO  .NXTLIID                Process next LINK chpid number            
.LINULL  MNOTE 8,'018 LINK SUBLIST ENTRY &POS IS MISSING.'                      
&ERROR   SETB 1                       Indicate error                            
.*                                                                              
.NXTLIID ANOP                         Process next sublist entry                
&AWK1    SETA &AWK1/2                 Get next bit in link bit mask             
.NXTLIIE ANOP                         Process next sublist entry   @HHA         
&AWK2    SETA &AWK2/2                 Get next bit in link bit mask@HHA         
&SUB     SETA &SUB+1                  Point to next link id entry               
         AIF  (&SUB LE &IL).LILOOP    More LINK id's ...           @HHA         
&AWK     SETA &CSLID(&SUB1)+1                                      @HHA         
&SWADMSK(&AWK) SETA  &SBIT           Set switch mask               @HHA         
&LINKMSK(&AWK) SETA  &LBIT           Set link mask                 @HHA         
&SUB1    SETA &SUB1+1                 Increment CSS sublist count  @HHA         
         AIF  (&SUB1 LE &ILC).MCSSL10 Go process next CSS sublist  @HHA         
         AGO  .ECKLNK                 Parsing finished             @HHA         
.*                                                                              
.MCSLER0 MNOTE 8,'045 LINK PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRIES.'          
.*                                                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .ECKLNK                and exit                     @HHA         
.*                                                                              
.MCSLER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF LINK PARAMETER IS INVA*        
               LID.'                                               @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .ECKLNK                and exit                     @HHA         
.*                                                                              
.MCSLER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF LINK PARAMETER HAS*        
                AN INVALID FORMAT.'                                @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .ECKLNK                and exit                     @HHA         
.*                                                                              
.MCSLER3 MNOTE 8,'045 CSS ID &CSSID SPECIFIED TWICE.'              @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .ECKLNK                and exit                     @HHA         
.*                                                                              
.LINKER0 ANOP ,                                                    @HHA         
         MNOTE 8,'040 LINK SUBLIST ENTRIES NOT SAME NUMBER AS PATH SUBL*        
               IST ENTRIES.'                                                    
&ERROR   SETB  1                       Indicate error                           
         AGO   .ECKLNK                and exit                     @HHA         
.ECKLNK  ANOP ,                                                    @N3A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate SWPORT     1 to N'&PATH pairs of (switch id,port id)*         
.*                           Only checks for 2 digit switch/port id.  *         
.*                                                                    *         
.*                           The position of (switch id/port id)  @M4A*         
.*                           in SWPORT list corresponds to the    @M4A*         
.*                           channel path ids in the PATH keyword @M4A*         
.*                                                                    *         
.**********************************************************************         
.CKSWPO  ANOP                                                                   
&MAXSWPO SETA  32                      Max number of SWPORT entr.  @B1C         
&L1      SETA  2                       Number of sublist length    @M4A         
&L       SETA  2                       Req. Switch/port id length  @M4A         
         AIF  ('&SWPORT' EQ '').XSWPO    SWPORT not specified      @M4A         
         AIF  ('&SWPORT'(1,2) EQ '((').SWPO100 Double parentheses  @M4A         
&SINGLE  SETB 1                        Indicate single entry       @M4A         
&NSWPO   SETA 1                        Only 1 subentry             @M4A         
         AGO   .SWPO105                                            @M4A         
.SWPO100 ANOP  ,                                                   @M4A         
         AIF  (N'&SWPORT GT &MAXSWPO).SWPOE01 Higher number of         *        
                                       operands than in PATH list  @M4A         
&NSWPO   SETA  N'&SWPORT               Set number of subentries    @M4A         
&SINGLE  SETB  0                       Indicate list               @M4A         
.SWPO105 ANOP  ,                                                   @M4A         
&SUB     SETA  1                                                   @M4A         
.SWPO110 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).SWPO115                                   @M4A         
         AIF   ('&SWPORT(&SUB)' EQ '').SWPO150 Entry omitted       @M4A         
         AIF   ('&SWPORT(&SUB)' EQ '**').SWPO150 Entry omitted     @M4A         
         AIF   (N'&SWPORT(&SUB) NE &L1).SWPOE03 Sublist not 2 entr @M4A         
&ESWID   SETC  '&SWPORT(&SUB,1)'        Save switch id             @M4A         
         AGO   .SWPO118                                            @M4A         
.SWPO115 ANOP  ,                                                   @M4A         
         AIF   ('&SWPORT' EQ '**').SWPO150       Entry omitted     @M4A         
         AIF   (N'&SWPORT NE &L1).SWPOE03 Sublist not 2 entries    @M4A         
&ESWID   SETC  '&SWPORT(1)'             Save switch id             @M4A         
.SWPO118 ANOP  ,                                                   @M4A         
         AIF   ('&ESWID'   EQ '').SWPOE02        No entry switch   @M4A         
         AIF   (K'&ESWID   NE &L).SWPOE05        Switch id > 2 chr @M4A         
         HEXCHECK STRING=&ESWID                                    @M4A         
         AIF   (NOT &$ERR).SWPO120     Continue when no error      @M4A         
&ERROR   SETB  1                       Otherwise indicate error    @M4A         
         AGO   .SWPOE04                and continue                @M4A         
.*                                                                 @M4A         
.SWPO120 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).SWPO125                                   @M4A         
&ESWPORT SETC  '&SWPORT(&SUB,2)'       Save port id                @M4A         
         AGO   .SWPO130                                            @M4A         
.SWPO125 ANOP  ,                                                   @M4A         
&ESWPORT SETC  '&SWPORT(2)'            Save port id                @M4A         
.SWPO130 ANOP  ,                                                   @M4A         
         AIF   ('&ESWPORT' EQ '').SWPOE02        No port id        @M4A         
         AIF   (K'&ESWPORT NE &L).SWPOE05        Port id > 2 char  @M4A         
         HEXCHECK STRING=&ESWPORT                                  @M4A         
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A         
.*                                                                 @M4A         
.SWPO150 ANOP  ,                                                   @M4A         
&ESW(&SUB) SETC '&ESWID'               Save entry switch id        @M4A         
&EPORT(&SUB) SETC '&ESWPORT'           Save entry port id          @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
         AIF   (&SUB LE &NSWPO).SWPO110 More entry ports           @M4A         
         AGO   .XSWPO                                              @M4A         
.*                                                                 @M4A         
.SWPOE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 SWPORT PARAMETER EXCEEDS &MAXSWPO ENTRIES.'  @B1C         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 SWITCH OR PORT ID REQUIRED in SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SWPORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN *        
               &L ENTRIES.'                                        @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SWITCH ID OR PORT ID MUST BE &L1 DIGITS.'    @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.XSWPO   ANOP  ,                                                   @M4A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @N3A         
         AIF   ('&DESC' EQ '').EDESC    DESC is null               @N3A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A         
.*                                   (Asmblr checks for end quote) @N3A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
         AGO   .EDESC                                              @N3A         
.DELEN   ANOP                                                      @N3A         
&DESCR   SETC  '&DESC'                Set description              @N3A         
&LEN     SETA  K'&DESC-2              Length of description        @N3A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A         
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A         
         STRLEN STRING=&DSC           Determine real length        @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @N3A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
         AGO   .EDESC                                              @N3A         
.DENULL  ANOP                                                      @N3A         
&DESCR   SETC  ''' '''                Set to blank                 @N3A         
.EDESC   ANOP  ,                                                   @N3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate SERIAL              1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  10                     Maximum length               @N3A         
         AIF   ('&SERIAL' EQ '').ESER0    SERIAL is null           @N3A         
&SERR    SETC  '&SERIAL'                Set serial number          @M5A         
&LEN     SETA  K'&SERIAL              Length of description        @L2A         
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A         
&LEN     SETA  K'&SERIAL-2            Length of description        @N3A         
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A         
         STRLEN STRING=&SERR          Determines real length       @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
.SERLN   ANOP  ,                                                   @M5A         
         AIF   (&LEN      LE &L).ESER0    Less than maximum        @L2C         
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
.ESER0   ANOP  ,                                                   @N3A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1).EXIT       Exit if error                             
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number            
         DC    CL8'&UNITN'            Unit name                                 
         DC    XL2'&CUNUMBR'          Control unit number                       
         DC    XL2'0000'              Reserved                                  
         DC    AL1(0)                 Reserved                     @HHA         
&AWK     SETA  &NUMUNA                Number of entries in UNITADD list         
         DC    AL1(&AWK)              Number of entries in UNITADD list         
         DC    AL1(&PROTCL)           Interface protocol for PATH               
         DC    AL1(&SHARD)            level of concurrent I/O requests          
         AIF ('&UNITADD' EQ '').UNANO Processes UNITADD ?          @LTA         
         DC    A(@U&CNO)              Pointer to UNITADD list                   
         AGO   .GENLNK1               Proceed to LINK generation   @LTA         
.UNANO   ANOP                         No UNITADD information       @LTA         
         DC    A(0)                   No UNITADD list              @LTA         
.GENLNK1 ANOP                         Generate LINK information    @LTA         
&AWK     SETA  &IC                    Number of CSS lists          @HHA         
         AIF   (&AWK EQ 0).CSSNO      No CCS list                  @HHA         
         DC    AL1(&AWK)              Number of CSS lists          @HHA         
         AGO   .GENSWPO                                            @M4C         
.CSSNO   ANOP                                                                   
         DC    AL1(0)                 CSS list not specified       @HHC         
.GENSWPO ANOP                                                      @M4C         
         AIF   (&NSWPO EQ 0).SWPONO   No SWPORT                    @M4A         
         DC    AL1(&NSWPO)            Number of switch/ports       @M4A         
         AGO   .GENFCHC                                            @M5A         
.SWPONO  ANOP  ,                                                   @M4A         
         DC    XL1'00'                No switch/ports specified    @N3C         
.GENFCHC ANOP                                                      @M5A         
         DC    XL1'00'                Reserved                     @HHA         
         DC    AL1(&FLAG)             Flag byte                                 
         DC    AL1(0)                 Reserved                     @HHA         
         DC    AL1(0)                 Reserved                     @HHA         
         DC    XL2'000000'            Reserved                     @HFC         
&AWK     SETA  &IC                    Number of CSS lists          @HHA         
         AIF   (&AWK EQ 0).CSSNOP     No CCS list                  @HHA         
         DC    A(@C&CNO)              Address of CSS list          @HHA         
         AGO   .GENMOD                                             @M4C         
.CSSNOP  ANOP  ,                                                   @HHA         
         DC    A(0)                   CSS list not specified       @HHC         
.GENMOD  ANOP  ,                                                   @HHA         
         DC    AL4(0)                 Reserved                     @HHA         
         DC    AL4(0)                 Reserved                     @HHA         
         DC    AL4(0)                 Reserved                     @HHA         
         AIF   ('&UNITM' EQ '').NOMOD No controlunit type specified             
         DC    CL4'&UNITM'            Control unit type                         
         AGO   .GENCUA                                                          
.NOMOD   ANOP                                                                   
         DC    XL4'00000000'          No control unit type                      
.GENCUA  ANOP                                                                   
         AIF   ('&CUADD' EQ '').NOCUA No controlunit address specified          
         DC    XL1'&CUADD'            Control unit address                      
         AGO   .GENUNA                                                          
.NOCUA   ANOP                                                                   
         DC    XL1'FF'                No Control unit address                   
.GENUNA  ANOP                                                                   
         DC    XL1'00'                Reserved                     @N3A         
         AIF   ('&SERIAL' EQ '').NOSER No serial number specified  @N3A         
         DC    CL10'&SERR'            Serial number                @N3A         
         AGO   .ESERN                                              @N3A         
.NOSER   ANOP  ,                      No serial number specified   @N3A         
         DC    CL10'  '               Serial number                @N3A         
.ESERN   ANOP  ,                                                   @N3A         
         AIF   ('&SWPORT' EQ '').NOSWPRT Switch/port specified?    @M4A         
&SUB     SETA  1                      Point to first SWPORT        @M4A         
.SWPLOOP ANOP                                                      @M4A         
         DC    XL1'&ESW(&SUB)'        Switch id                    @M4A         
         DC    XL1'&EPORT(&SUB)'      Port id                      @M4A         
&SUB     SETA &SUB+1                  Point to next sublist entry  @M4A         
         AIF  (&SUB LE &NSWPO).SWPLOOP  Go insert next SWPORT      @M4A         
.SWZERO  AIF  (&SUB GT &MAXSWPO).ESWPRT  Go to end of SWPORT gen   @B1C         
&AWK     SETA  2*(&MAXSWPO-&SUB+1)                                              
         DC    XL&AWK'00'             Switch/port connections      @B1C         
         AGO  .ESWPRT                                              @HFA         
.NOSWPRT ANOP  ,                                                   @M4A         
         DC    XL64'00'               Switch/port connections      @B1C         
.ESWPRT  ANOP  ,                                                   @M4A         
         AIF   ('&DESC' EQ '').NODESC Description specified        @N3A         
         DC    CL32&DESCR             Description                  @N3A         
         AGO   .EDESCP                branch to continue           @N3A         
.NODESC  ANOP  ,                      Description not specified    @N3A         
         DC    CL32'  '               Description                  @N3A         
.EDESCP  ANOP  ,                                                   @N3A         
         SPACE 2                                                                
&SUB     SETA  1                      Point to UNITADD array entry 1            
         AIF   (&SUB GT &NUMUNA).EUNA Processes UNITADD ?          @HHC         
&CWK     SETC  '@U&CNO'            Label for 1st entry in UNITADD list          
.GENLOOP ANOP                                                                   
         SPACE 1                                                                
         DS    0H'0'                  Force boundary                            
&CWK     DC    XL1'&UNAE(&SUB)'       Unit address                              
         DC    XL1'00'                Reserved                                  
         DC    H'&UNACNT(&SUB)'       Count of consecutive addresses            
&CWK     SETC  ''                     Blank out label                           
&SUB     SETA  &SUB+1                 Points to next entry in array             
         AIF   (&SUB LE &NUMUNA).GENLOOP Processes next array entry             
.EUNA    ANOP  ,                                                   @HHA         
         SPACE 2                                                                
&SUB1    SETA  1                      Point to CSS list 1          @HHA         
         AIF   (&SUB1 GT &IC).ECSS    All CSS lists processed?     @HHA         
&CWK     SETC  '@C&CNO'            Label for 1st entry in CSS list @HHA         
.GENLOP1 ANOP                                                      @HHA         
&CSSID   SETA  &CSID(&SUB1)           Get CSS id                   @HHA         
         SPACE 1                                                   @HHA         
         DS    0F'0'                  Force boundary               @HHA         
&CWK     DC    AL1(&CSSID)            CSS ID                       @HHA         
         DC    XL1'00'                Reserved                                  
&AWK     SETA  &SCHPC(&CSSID+1)       Number of static CHPIDs      @HHA         
         DC    AL1(&AWK)              Number of static ChPIDs      @HHA         
&AWK     SETA  &FCHPC(&CSSID+1)       Number of managed CHPIDs     @HHA         
         DC    AL1(&AWK)              Number of managed CHPIDs     @HHA         
         AIF   (&CSSLI(&CSSID+1)).LNKNUM Link addresses exist      @HHA         
&AWK     SETA  0                      No link addresses specified  @HHA         
&LBIT    SETA  0                      No link mask                 @HHA         
&SBIT    SETA  0                      No switch address mask       @HHA         
         AGO   .NOLNKAD                                            @HHA         
.LNKNUM  ANOP  ,                                                   @HHA         
&AWK     SETA  &SCHPC(&CSSID+1)       Number of entries in LINK lst@HHC         
&LBIT    SETA  &LINKMSK(&CSSID+1)     Link mask                    @HHA         
&SBIT    SETA  &SWADMSK(&CSSID+1)     Switch address mask          @HHA         
.NOLNKAD ANOP  ,                                                   @HHA         
         DC    AL1(&AWK)              Number of entries in LINK list            
         DC    AL1(&LBIT)             Bit mask for link address                 
         DC    AL1(&SBIT)             Bit mask for switch address  @HFA         
         DC    XL1'00'                Reserved                     @HHC         
&SUB     SETA  1                      Point to first PATH id                    
&PANUM   SETA  0                      Current count of static paths@HHA         
&AWK1    SETA  128                    Point to first bit in mask   @HHA         
&PBIT    SETA  &PMASK(&CSSID+1)       Bit mask for static paths    @HHA         
.PATLOOP ANOP                                                                   
         AIF   (&SUB GT &MAXPATH).PAZERO                        @HHA            
         AIF   (&PBIT LT &AWK1).PANEXT                             @HHA         
&PANDX   SETA  &CSSID*8+&SUB                                                    
         DC    XL1'&PACHID(&PANDX)'   Channel path id              @HHA         
&PANUM   SETA &PANUM+1                Current count of static paths@HHA         
&PBIT    SETA &PBIT-&AWK1             Reset indication             @HHA         
.PANEXT  ANOP ,                       Go to next path entry        @HHA         
&SUB     SETA &SUB+1                  Point to next sublist entry               
&AWK1    SETA &AWK1/2                 Proceed to next bit          @HHA         
         AGO  .PATLOOP                Insert next PATH id          @HHC         
.PAZERO  ANOP ,                                                    @HHA         
&SUB     SETA &SCHPC(&CSSID+1)+1                                                
.PAZER1  AIF  (&SUB GT &MAXPATH).GENLINK Go generate LINK list                  
         DC    XL1'00'                Reserved for channel path id              
&SUB     SETA &SUB+1                  Point to next null entry                  
         AGO  .PAZER1                                              @HHC         
.GENLINK ANOP                                                                   
&L       SETA  2                      Test for 1 byte link address @HFA         
         SPACE 2                                                                
&SUB     SETA  1                      Point to first LINK address               
         AIF (&CSSLI(&CSSID+1)).LINKLO   LINK specified            @HHA         
         AGO   .LIZERO                No link address              @HHA         
.LINKLO  ANOP                                                                   
&LINDX   SETA  &CSSID*8+&SUB                                                    
         AIF   ('&LIADDR(&LINDX)'(1,1) EQ '*').ASTLINK             @HHC         
&LINKID  SETC  '&LIADDR(&LINDX)'                                   @HHC         
         AIF   (K'&LINKID EQ &L).LINK1B 1 byte link address given  @HFA         
&CWK     SETC  '&LINKID'(3,2)         Extract port                 @HFA         
         DC    XL1'&CWK'                Link address               @H1C         
         AGO   .NXTLINK                                            @H1A         
.LINK1B  ANOP  ,                                                   @HFA         
         DC    XL1'&LINKID'             Link address               @H1C         
         AGO   .NXTLINK                                                         
.ASTLINK ANOP                                                                   
         DC    XL1'00'                Link specified as asterics                
.NXTLINK ANOP                                                                   
&SUB     SETA &SUB+1                  Point to next sublist entry               
         AIF  (&SUB LE &SCHPC(&CSSID+1)).LINKLO  Go insert next LINK@           
.*                                                                 @HHC         
.LIZERO  AIF  (&SUB GT &MAXLINK).GENSWAD  Go generate Switch addr  @HHA         
         DC    XL1'00'                Reserved for link address                 
&SUB     SETA &SUB+1                  Point to next null entry     @HFA         
         AGO  .LIZERO                                              @HFA         
.GENSWAD ANOP                                                      @HFA         
         SPACE 2                                                   @HFA         
&SUB     SETA  1                      Point to first LINK address  @HFA         
         AIF (&CSSLI(&CSSID+1)).SWADLO LINK specified              @HHC         
         AGO   .SAZERO                No link specified            @HHA         
.SWADLO  ANOP  ,                                                   @HFA         
&LINDX   SETA  &CSSID*8+&SUB                                                    
         AIF   ('&LIADDR(&LINDX)'(1,1) EQ '*').ASTSWAD             @HHC         
&LINKID  SETC  '&LIADDR(&LINDX)'                                   @HHC         
         AIF   (K'&LINKID EQ &L).ASTSWAD No switch address given   @HFA         
&CWK     SETC  '&LINKID'(1,2)         Extract switch address       @HFA         
         DC    XL1'&CWK'              Extract switch address       @HFA         
         AGO   .NXTSWAD                                            @HFA         
.ASTSWAD ANOP                                                      @HFA         
         DC    XL1'00'                Link specified as asterics   @HFA         
.NXTSWAD ANOP                                                      @HFA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @HFA         
         AIF  (&SUB LE &SCHPC(&CSSID+1)).SWADLO  Go insert next LINK@           
.*                                                                 @HHC         
.SAZERO  AIF  (&SUB GT &MAXLINK).ESWAD  Go to end of Switch addr   @HFA         
         DC    XL1'00'                Reserved for switch address  @HFA         
&SUB     SETA &SUB+1                  Point to next null entry     @HFA         
         AGO  .SAZERO                                              @HFA         
.ESWAD   ANOP  ,                                                   @HFA         
&CWK     SETC  ''                     Blank out label                           
&SUB1    SETA  &SUB1+1                Points to next entry in array             
         AIF   (&SUB1 LE &IC).GENLOP1 Processes next array entry   @HHA         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - SWITCH - ESCON DIRECTOR'                    
         MACRO  --  SWITCH INFORMATION                                          
&SYMBOL  SWITCH   &UNIT=,&MODEL=,&PORT=,&SWID=,&SWPORT=,&DESC=,        *        
               &SERIAL=,&ADDRESS=                                               
.*                                                                 @HFC         
         AGO   .SKIP                                               @M4A         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = SWITCH                                          */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Switch characteristics.                   */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL SWITCH    DESC='description'                         */         
*/*                       MODEL=switch model                         */         
*/*                       PORT=((portlow,porthigh),...)              */         
*/*                       SERIAL=serial number                       */         
*/*                       SWID=switch id                             */         
*/*                       ADDRESS=switch address                 @HFA*/         
*/*                       SWPORT=((port,swid,port),...)              */         
*/*                       UNIT=switch unit                           */         
*/*                                                                  */         
*/*01*  FUNCTION =  Describes the characteristics of the switch,     */         
*/*                 the installed port range, and the connected      */         
*/*                 switches.                                        */         
*/*                                                                  */         
*/*01*  NOTES =  A switch can be attached to a maximum of eight      */         
*/*              other switches.                                     */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = For HCD use only.                           */         
*/*                                                                  */         
*/*01*  INPUT =   ADDRESS= 2 hex character switch address        @HFA*/         
*/*               DESC=    String of 0 to 32 EBCDIC characters.      */         
*/*               MODEL=   4 EBCDIC characters switch model name.    */         
*/*               PORT=    list of up to 32 port ranges (specified by*/         
*/*                        a sublist of 2 hex char low port id and   */         
*/*                        2 hex char high port id each)             */         
*/*               SERIAL=  10 characters serial number               */         
*/*             # SWID=    2 hex character switch id                 */         
*/*               SWPORT=  List of 32 connected switch ports         */         
*/*                        specified by a sublist of (2 hex char     */         
*/*                        exit port, 2 hex char target switch, 2    */         
*/*                        hex char target port) each.               */         
*/*             # UNIT=    8 EBCDIC characters switch unit name.     */         
*/*                                                                  */         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number             @M4A         
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &$ERR              Global error flag                @M4A         
         GBLC  &CWK               Character work variable          @M4A         
         LCLA  &AWK               Arithmetic work variable         @M4A         
         LCLA  &AWK1              Arithmetic work variable 1       @M4A         
         LCLB  &ASTF              Asteriks flag                    @M4A         
         LCLA  &COMMA             Index to comma in sublist entry  @M4A         
         LCLA  &FLAG,&LBIT        Flag byte variables              @M4A         
         LCLA  &L                 Maximum or required operand lgth @M4A         
         LCLA  &LEN               Actual operand length            @M4A         
         LCLA  &NDX               Substring index                  @M4A         
         LCLA  &SUB               Sublist element number           @M4A         
         LCLA  &NSWPO             Number of SWPORT entries         @M4A         
         LCLA  &NPORT             Number of PORT entries           @M4A         
         LCLA  &VPORID            Numeric value of port id         @M4A         
         LCLA  &VTPORID           Numeric value of port id         @M4A         
         LCLB  &ERROR             Error flag                       @M4A         
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A         
         LCLC  &DESCR             Description work area            @M4A         
         LCLC  &DSC               Description work area            @L2A         
         LCLB  &SINGLE            Only single list element         @M4A         
         LCLB  &POCC(256)         Occupied keyword                 @L2A         
         LCLC  &PORID             Character sublist entry          @M4A         
         LCLC  &TPORID            Character sublist entry          @M4A         
         LCLC  &XPORID            Hex char  sublist entry          @M4A         
         LCLC  &XTPORID           Hex char  sublist entry          @M4A         
         LCLC  &ESWPORT           Character sublist entry          @M4A         
         LCLC  &ESWPOR1           Character sublist entry          @M4A         
         LCLC  &ESWID             Character sublist entry          @M4A         
         LCLC  &ESW(32)           Entry switch id set from SWPORT  @B1C         
         LCLC  &EPORT(32)         Entry switch port id from SWPORT @B1C         
         LCLC  &EPOR1(32)         Entry switch port id from SWPORT @B1C         
         LCLC  &SPO(32)           Low port id from PORT range      @B1C         
         LCLC  &TPO(32)           High port id from PORT range     @B1C         
         LCLC  &PORTNR            Port name work area                           
         LCLC  &SERR              Serial number work field         @M5A         
         ACTR  10000              Set for infinite loop control                 
&SYMBOL  TXTHDR SWITCH                                                          
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS10            and continue                     @P3A         
.*                                                                              
.XPOS10  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate SWID                 2 Hex digits                   *         
.*                                                                    *         
.**********************************************************************         
.CKSWID  ANOP                                                                   
&L       SETA  2                             Required SWID  length              
         AIF   ('&SWID' EQ '').NOSWID        SWID not specified                 
         AIF   (N'&SWID GT 1).SUBSWI         Invalid in sublist format          
         AIF   (K'&SWID EQ &L).SWICHAR       Number of characters               
         MNOTE 8,'032 SWID PARAMETER MUST BE &L CHARACTER.'                     
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXSWID                                                         
.SWICHAR ANOP                                                                   
&NDX     SETA  1                                                                
.*       Validate the SWID                                                      
.SWILOOP ANOP  ,                                                                
         AIF   ('&SWID'(&NDX,1) LT 'A').BADSWI                                  
         AIF   ('&SWID'(&NDX,1) LE 'F').CKITSWI (A-F)                           
         AIF   ('&SWID'(&NDX,1) LT '0').BADSWI                                  
         AIF   ('&SWID'(&NDX,1) LE '9').CKITSWI (0-9)                           
.BADSWI  ANOP                         Invalid char in generic name              
&CWK     SETC  '&SWID'(&NDX,1)                                                  
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SWID PARAMETER.'            
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXSWID               Go check next keyword                     
.CKITSWI ANOP  ,                                                                
&NDX     SETA  &NDX+1                                                           
         AIF   (&NDX LE &L).SWILOOP                                             
         AGO   .CKXSWID                                                         
.SUBSWI  MNOTE 8,'014 SWID PARAMETER MUST NOT BE A SUBLIST.'                    
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXSWID               Go check next keyword                     
.NOSWID  MNOTE 8,'002 SWID KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB  1                      Indicates error                           
.CKXSWID ANOP                                                                   
.**********************************************************************         
.*                                                                    *         
.*       Validate ADDRESS              2 Hex digits               @HFA*         
.*                                                                    *         
.**********************************************************************         
.CKSADD  ANOP                                                      @HFA         
&L       SETA  2                             Required ADDRESS len  @HFA         
         AIF   ('&ADDRESS' EQ '').CKXSADD    ADDRESS not specified @HFA         
         AIF   (N'&ADDRESS GT 1).SUBADD      Invalid sublist       @HFA         
         AIF   (K'&ADDRESS EQ &L).SWACHAR    Number of characters  @HFA         
         MNOTE 8,'032 ADDRESS PARAMETER MUST BE &L CHARACTER.'     @HFA         
&ERROR   SETB  1                      Indicates error              @HFA         
         AGO   .CKXSADD                                            @HFA         
.SWACHAR ANOP                                                      @HFA         
&NDX     SETA  1                                                   @HFA         
.*       Validate the ADDRESS                                                   
.SWALOOP ANOP  ,                                                   @HFA         
         AIF   ('&ADDRESS'(&NDX,1) LT 'A').BADSWA                  @HFA         
         AIF   ('&ADDRESS'(&NDX,1) LE 'F').CKITSWA (A-F)           @HFA         
         AIF   ('&ADDRESS'(&NDX,1) LT '0').BADSWA                  @HFA         
         AIF   ('&ADDRESS'(&NDX,1) LE '9').CKITSWA (0-9)           @HFA         
.BADSWA  ANOP                         Invalid char in generic name @HFA         
&CWK     SETC  '&ADDRESS'(&NDX,1)                                  @HFA         
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ADDRESS PARAMETER.'         
&ERROR   SETB  1                      Indicates error              @HFA         
         AGO   .CKXSADD               Go check next keyword        @HFA         
.CKITSWA ANOP  ,                                                   @HFA         
&NDX     SETA  &NDX+1                                              @HFA         
         AIF   (&NDX LE &L).SWALOOP                                @HFA         
         AGO   .CKXSADD                                            @HFA         
.SUBADD  MNOTE 8,'014 ADDRESS PARAMETER MUST NOT BE A SUBLIST.'    @HFA         
&ERROR   SETB  1                      Indicates error              @HFA         
.CKXSADD ANOP                                                      @HFA         
.**********************************************************************         
.*                                                                    *         
.*       Validate UNIT                 type <= 8 alphanumerics        *         
.*                                                                    *         
.**********************************************************************         
.CKUNIT  ANOP                                                                   
&L       SETA  8                        Maximum UNIT length                     
         AIF   ('&UNIT' EQ '').NOUNIT   UNIT not specified                      
         AIF   (N'&UNIT GT 1).UNISUB    Invalid in sublist format               
         AIF   (K'&UNIT LE &L).UNICHAR  Maximum number of characters            
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'                    
&ERROR   SETB  1                      Indicates error                           
.UNICHAR ANOP                                                                   
&NDX     SETA  1                      Point to 1st character                    
.*                                                                              
.*       Loop to validate each character in the UNIT name                       
.UNILOOP ANOP                                                                   
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODUNI   (@)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODUNI   (#)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODUNI   ($)              @H4A         
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODUNI   (A-I)                         
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODUNI   (J-R)                         
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODUNI   (S-Z)                         
         AIF   ('&UNIT'(&NDX,1) LT '0').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODUNI   (0-9)                         
.BADUNI  ANOP                         Invalid character                         
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'            
&ERROR   SETB  1                      Indicates error                           
.GOODUNI ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character of UNIT          
         AIF   (&NDX LE K'&UNIT).UNILOOP    Check next character                
         AGO   .CKXUNI                Go check next keyword                     
.UNISUB  MNOTE 8,'014 UNIT NOT VALID IN SUBLIST FORMAT.'                        
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXUNI                Go check next keyword                     
.NOUNIT  MNOTE 8,'002 UNIT KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXUNI                Go check next keyword        @M3A         
.CKXUNI  ANOP  ,                                                                
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate MODEL                type <= 4 alphanumerics        *         
.*                                                                    *         
.**********************************************************************         
.CKMODL  ANOP                                                                   
&L       SETA  4                        Maximum UNIT length                     
         AIF   ('&MODEL' EQ '').CKXMOD  MODEL not specified                     
         AIF   (N'&MODEL GT 1).MODSUB   Invalid in sublist format               
         AIF   (K'&MODEL LE &L).MODCHAR Maximum number of characters            
         MNOTE 8,'033 MODEL PARAMETER EXCEEDS &L CHARACTERS.'                   
&ERROR   SETB  1                      Indicates error                           
.MODCHAR ANOP                                                                   
&NDX     SETA  1                      Point to 1st character                    
.*                                                                              
.*       Loop to validate each character in the switch model                    
.CKMODEL ANOP                                                                   
.MODLOOP ANOP                                                                   
         AIF   ('&MODEL'(&NDX,1) EQ '@').GOODMOD  (@)              @H4A         
         AIF   ('&MODEL'(&NDX,1) EQ '#').GOODMOD  (#)              @H4A         
         AIF   ('&MODEL'(&NDX,1) EQ '$').GOODMOD  ($)              @H4A         
         AIF   ('&MODEL'(&NDX,1) LT 'A').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE 'I').GOODMOD  (A-I)                         
         AIF   ('&MODEL'(&NDX,1) LT 'J').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE 'R').GOODMOD  (J-R)                         
         AIF   ('&MODEL'(&NDX,1) LT 'S').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE 'Z').GOODMOD  (S-Z)                         
         AIF   ('&MODEL'(&NDX,1) LT '0').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE '9').GOODMOD  (0-9)                         
.BADMOD  ANOP                         Invalid character                         
&CWK     SETC  '&MODEL'(&NDX,1)       Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN MODEL PARAMETER.'           
&ERROR   SETB  1                      Indicates error                           
.GOODMOD ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character of MODEL         
         AIF   (&NDX LE K'&MODEL).MODLOOP    Check next character               
         AGO   .CKXMOD                                                          
.MODSUB  MNOTE 8,'014 MODEL NOT VALID IN SUBLIST FORMAT.'                       
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXMOD                Go check next keyword                     
.CKXMOD  ANOP  ,                                                                
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PORT       1 to 32 sublist entries (lowport,hiport) *         
.*                           Only checks for 2 digit port ids.        *         
.*                                                                    *         
.**********************************************************************         
.CKPORT  ANOP                                                                   
&MAXSUB  SETA  32                      Max number of PORT entries  @HAC         
&L1      SETA  2                       Number of sublist length    @M4A         
&L       SETA  2                       Required port id length     @M4A         
         AIF  ('&PORT' EQ '').XPORT    PORT not specified          @M4A         
         AIF  ('&PORT'(1,2) EQ '((').PORT100   Double parentheses  @M4A         
&SINGLE  SETB 1                        Indicate single entry       @M4A         
&NPORT   SETA 1                        Only 1 subentry             @M4A         
         AGO   .PORT105                                            @M4A         
.PORT100 ANOP  ,                                                   @M4A         
         AIF  (N'&PORT GT &MAXSUB).PORTE01 Higher number of            *        
                                       operands than allowed       @M4A         
&NPORT   SETA  N'&PORT                 Set number of subentries    @M4A         
&SINGLE  SETB  0                       Indicate list               @M4A         
.PORT105 ANOP  ,                                                   @M4A         
&SUB     SETA  1                                                   @M4A         
.PORT110 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).PORT115                                   @M4A         
         AIF   ('&PORT(&SUB)' EQ '').PORTE02 Entry omitted         @M4A         
         AIF   (N'&PORT(&SUB) NE &L1).PORTE03 Sublist not 2 entr.  @M4A         
&PORID   SETC  '&PORT(&SUB,1)'          Save port id               @M4A         
         AGO   .PORT118                                            @M4A         
.PORT115 ANOP  ,                                                   @M4A         
         AIF   (N'&PORT NE &L1).PORTE03 Sublist not 2 entries      @M4A         
&PORID   SETC  '&PORT(1)'               Save port id               @M4A         
.PORT118 ANOP  ,                                                   @M4A         
         AIF   ('&PORID'   EQ '').PORTE02        No low port id    @M4A         
         AIF   (K'&PORID   NE &L).PORTE05 Port id ^= 2 chars       @M4A         
         HEXCHECK STRING=&PORID                                    @M4A         
         AIF   (NOT &$ERR).PORT120     Continue when no error      @M4A         
&ERROR   SETB  1                       Otherwise indicate error    @M4A         
         AGO   .PORTE04                and continue                @M4A         
.*                                                                 @M4A         
.PORT120 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).PORT125                                   @M4A         
&TPORID  SETC  '&PORT(&SUB,2)'         Save port id                @M4A         
         AGO   .PORT130                                            @M4A         
.PORT125 ANOP  ,                                                   @M4A         
&TPORID  SETC  '&PORT(2)'              Save port id                @M4A         
.PORT130 ANOP  ,                                                   @M4A         
         AIF   ('&TPORID' EQ '').PORTE02         No port id        @M4A         
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A         
         HEXCHECK STRING=&TPORID                                   @M4A         
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A         
.*                                                                 @M4A         
.PORT150 ANOP  ,                                                   @M4A         
&XPORID  SETC  'X''&PORID'''           Show as hex value           @M4A         
&XTPORID SETC  'X''&TPORID'''          Show as hex value           @M4A         
&VPORID  SETA  &XPORID                 Convert to numeric          @M4A         
&VTPORID SETA  &XTPORID                Convert to numeric          @M4A         
         AIF   (&VPORID GT &VTPORID).PORTE06 Compare               @M4A         
&SPO(&SUB) SETC '&PORID'               Save low port id            @M4A         
&TPO(&SUB) SETC '&TPORID'              Save high port id           @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
         AIF   (&SUB LE &NPORT).PORT110 More port ranges           @M4A         
         AGO   .XPORT                                              @M4A         
.*                                                                 @M4A         
.PORTE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 PORT PARAMETER EXCEEDS &MAXSUB ENTRIES.'     @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 PORT ID REQUIRED in SUBLIST ENTRY &SUB OF PORT PA*        
               RAMETER.'                                           @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 PORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN &L*        
                ENTRIES.'                                          @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF PORT PARAMETER.'                                 @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 PORT ID MUST BE &L1 DIGITS.'                 @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE06 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 LOW PORT ID MUST NOT EXCEED HIGH PORT ID.'   @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.XPORT   ANOP  ,                                                   @M4A         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate SWPORT     1 to 32 pairs of (port id,swid, port id) *         
.*                           Only checks for 2 digit switch/port id.  *         
.*                                                                    *         
.**********************************************************************         
.CKSWPO  ANOP                                                                   
&MAXSUB  SETA  32                      Max number of SWPORT entr.  @HAA         
&L1      SETA  3                       Number of sublist length    @M4A         
&L       SETA  2                       Req. Switch/port id length  @M4A         
         AIF  ('&SWPORT' EQ '').XSWPO    SWPORT not specified      @M4A         
         AIF  ('&SWPORT'(1,2) EQ '((').SWPO100 Double parentheses  @M4A         
&SINGLE  SETB 1                        Indicate single entry       @M4A         
&NSWPO   SETA 1                        Only 1 subentry             @M4A         
         AGO   .SWPO105                                            @M4A         
.SWPO100 ANOP  ,                                                   @M4A         
         AIF  (N'&SWPORT GT &MAXSUB).SWPOE01 Higher number of          *        
                                       operands than allowed       @M4A         
&NSWPO   SETA  N'&SWPORT               Set number of subentries    @M4A         
&SINGLE  SETB  0                       Indicate list               @M4A         
.SWPO105 ANOP  ,                                                   @M4A         
&SUB     SETA  1                                                   @M4A         
.SWPO110 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).SWPO115                                   @M4A         
         AIF   ('&SWPORT(&SUB)' EQ '').SWPOE02 Entry omitted       @M4A         
         AIF   (N'&SWPORT(&SUB) NE &L1).SWPOE03 Sublist not 3 entr @M4A         
&ESWPOR1 SETC  '&SWPORT(&SUB,1)'        Save port id               @M4A         
         AGO   .SWPO118                                            @M4A         
.SWPO115 ANOP  ,                                                   @M4A         
         AIF   (N'&SWPORT NE &L1).SWPOE03 Sublist not 3 entries    @M4A         
&ESWPOR1 SETC  '&SWPORT(1)'             Save port id               @M4A         
.SWPO118 ANOP  ,                                                   @M4A         
         AIF   ('&ESWPOR1' EQ '').SWPOE02        No source port    @M4A         
         AIF   (K'&ESWPOR1 NE &L).SWPOE05        Port id ^= 2 char @M4A         
         HEXCHECK STRING=&ESWPOR1                                  @M4A         
         AIF   (NOT &$ERR).SWPO120     Continue when no error      @M4A         
&ERROR   SETB  1                       Otherwise indicate error    @M4A         
         AGO   .SWPOE04                and continue                @M4A         
.*                                                                 @M4A         
.SWPO120 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).SWPO125                                   @M4A         
&ESWID   SETC  '&SWPORT(&SUB,2)'       Save switch id              @M4A         
         AGO   .SWPO130                                            @M4A         
.SWPO125 ANOP  ,                                                   @M4A         
&ESWID   SETC  '&SWPORT(2)'            Save switch id              @M4A         
.SWPO130 ANOP  ,                                                   @M4A         
         AIF   ('&ESWID' EQ '').SWPOE02          No switch id      @M4A         
         AIF   (K'&ESWID NE &L).SWPOE05        Switch id ^= 2 chr  @M4A         
         HEXCHECK STRING=&ESWID                                    @M4A         
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A         
.*                                                                 @M4A         
.SWPO140 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).SWPO145                                   @M4A         
&ESWPORT SETC  '&SWPORT(&SUB,3)'       Save port id                @M4A         
         AGO   .SWPO148                                            @M4A         
.SWPO145 ANOP  ,                                                   @M4A         
&ESWPORT SETC  '&SWPORT(3)'            Save port id                @M4A         
.SWPO148 ANOP  ,                                                   @M4A         
         AIF   ('&ESWPORT' EQ '').SWPOE02        No port id        @M4A         
         AIF   (K'&ESWPORT NE &L).SWPOE05        Port id > 2 char  @M4A         
         HEXCHECK STRING=&ESWPORT                                  @M4A         
         AIF   (&$ERR).SWPOE04         Report error if encountered @M4A         
.*                                                                 @M4A         
.SWPO150 ANOP  ,                                                   @M4A         
&ESW(&SUB) SETC '&ESWID'               Save entry switch id        @M4A         
&EPORT(&SUB) SETC '&ESWPORT'           Save entry port id          @M4A         
&EPOR1(&SUB) SETC '&ESWPOR1'           Save entry port id          @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
         AIF   (&SUB LE &NSWPO).SWPO110 More entry ports           @M4A         
         AGO   .XSWPO                                              @M4A         
.*                                                                 @M4A         
.SWPOE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 SWPORT PARAMETER EXCEEDS &MAXSUB ENTRIES.'   @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 SWITCH OR PORT ID REQUIRED in SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SWPORT PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN *        
               &L ENTRIES.'                                        @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.SWPOE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SWITCH ID OR PORT ID MUST BE &L DIGITS.'     @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XSWPO                  and continue                @M4A         
.*                                                                 @M4A         
.XSWPO   ANOP  ,                                                   @M4A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate SERIAL              1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  10                     Maximum length               @M4A         
         AIF   ('&SERIAL' EQ '').ESER0    SERIAL is null           @M4A         
&SERR    SETC  '&SERIAL'                Set serial number          @M5A         
&LEN     SETA  K'&SERIAL              Length of serial number      @N3A         
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A         
&LEN     SETA  K'&SERIAL-2            Length of serial number      @N3A         
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A         
         STRLEN STRING=&SERR          Determines real length       @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
.SERLN   ANOP  ,                                                   @M5A         
         AIF   (&LEN      LE &L).ESER0    Less than maximum        @L2C         
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
.ESER0   ANOP  ,                                                   @M4A         
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @M4A         
         AIF   ('&DESC' EQ '').EDESC    DESC is null               @M4A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A         
.*                                   (Asmblr checks for end quote) @M4A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                                              @M4A         
.DELEN   ANOP                                                      @M4A         
&DESCR   SETC  '&DESC'                Set description              @M4A         
&LEN     SETA  K'&DESC-2              Length of description        @M4A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A         
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A         
         STRLEN STRING=&DSC           Determines real length       @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                                              @M4A         
.DENULL  ANOP                                                      @M4A         
&DESCR   SETC  ''' '''                Set to blank                 @M4A         
.EDESC   ANOP  ,                                                   @M4A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1).EXIT       Exit if error                             
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number            
         DC    CL8'&UNIT'             Unit name                                 
         AIF  ('&MODEL' EQ '').MODNO  No model                                  
         DC    CL4'&MODEL'            Model name                                
         AGO   .GENSWID                                                         
.MODNO   ANOP  ,                                                                
         DC    XL4'00'                No model specified                        
.GENSWID ANOP  ,                                                                
         DC    XL1'00'                Reserved switch id byte                   
         DC    XL1'&SWID'             Switch id                                 
         DC    XL2'00'                Reserved                                  
         AIF   (&NPORT EQ 0).PORTNO   No port list                              
         DC    A(@P&CNO)              Address of port list                      
         DC    AL1(&NPORT)            Count of port entries                     
         AGO   .GENSWCN               Branch to continue                        
.PORTNO  ANOP  ,                                                                
         DC    A(0)                   No port list                              
         DC    AL1(0)                 Zero count                                
.GENSWCN ANOP  ,                                                                
         DC    XL2'00'                Reserved                                  
         AIF   (&NSWPO EQ 0).SWPONO   No connected switch list                  
         DC    AL1(&NSWPO)            Count of connected switch ports           
         DC    A(@C&CNO)              Address of connected switch list          
         AGO   .GENDESC               Branch to continue                        
.SWPONO  ANOP  ,                                                                
         DC    AL1(0)                 Zero count                                
         DC    A(0)                   No list of connected switches             
.GENDESC ANOP  ,                                                                
         DC    XL8'00'                Reserved                                  
         AIF   ('&DESC' EQ '').NODESC Description specified        @M4A         
         DC    CL32&DESCR             Description                  @M4A         
         AGO   .EDESCP                branch to continue           @M4A         
.NODESC  ANOP  ,                      Description not specified    @M4A         
         DC    CL32'  '               Description                  @M4A         
.EDESCP  ANOP  ,                                                   @M4A         
         AIF   ('&SERIAL' EQ '').NOSER  Serial number specified?   @M4A         
         DC    CL10'&SERR'            Serial number                @M4A         
         AGO   .ESER                  branch to continue           @M4A         
.NOSER   ANOP  ,                      Description not specified    @M4A         
         DC    CL10'  '               Description                  @M4A         
.ESER    ANOP  ,                                                   @M4A         
         SPACE 2                                                                
         AIF   ('&ADDRESS' EQ '').NOADD  Address specified?        @HFA         
         DC    X'80'                  Indicate address specified   @HFA         
         DC    XL1'&ADDRESS'          Switch address               @HFA         
         AGO   .EADD                  Branch to continue           @HFA         
.NOADD   ANOP  ,                      Address not specified        @HFA         
         DC    XL2'00'                Switch address not specified @HFA         
.EADD    ANOP  ,                                                   @HFA         
         DC    XL16'00'               Reserved                     @HFC         
.*---------------------------------------------------------------------         
.GENPOR  ANOP  ,                                                   @L2A         
&SUB     SETA  1                      Point to PORT array entry 1               
         AIF   (&SUB GT &NPORT).GENSWC Process SWPORT              @LTA         
&CWK     SETC  '@P&CNO'            Label for 1st entry in PORT list             
.GENPOLP ANOP                                                                   
         SPACE 1                                                                
         DS    0H'0'                  Force boundary                            
&CWK     DC    XL1'00'                Reserved                                  
         DC    XL1'&SPO(&SUB)'        Low port id                               
         DC    XL1'00'                Reserved                                  
         DC    XL1'&TPO(&SUB)'        High port id                              
&CWK     SETC  ''                     Blank out label                           
&SUB     SETA  &SUB+1                 Points to next entry in array             
         AIF   (&SUB LE &NPORT).GENPOLP Processes next array entry              
.GENSWC  ANOP  ,                                                   @M4A         
&SUB     SETA  1                      Point to PORT array entry 1               
         AIF   (&SUB GT &NSWPO).ECSWP Generation complete          @LTA         
&CWK     SETC  '@C&CNO'            Label for 1st entry in SWPORT list           
.GENCSWP ANOP                                                                   
         SPACE 1                                                                
         DS    0H'0'                  Force boundary                            
&CWK     DC    XL1'&EPOR1(&SUB)'      Exit port                                 
         DC    XL1'00'                Reserved                                  
         DC    XL1'&ESW(&SUB)'        Target switch                             
         DC    XL1'&EPORT(&SUB)'      Target port                               
&CWK     SETC  ''                     Blank out label                           
&SUB     SETA  &SUB+1                 Points to next entry in array             
         AIF   (&SUB LE &NSWPO).GENCSWP Processes next array entry              
.ECSWP   ANOP                                                      @L2A         
.*                                                                              
.*                                                                 @M4A         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - PORT - ESCON DIRECTOR PORT'                 
         MACRO  --  PORT INFORMATION                                            
&SYMBOL  PORT     &ID=,&NAME=,&OCC                                              
.*                                                                 @L2C         
         AGO   .SKIP                                               @M4A         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = PORT                                            */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Switch port characteristics               */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL PORT      ID=port id                                 */         
*/*                       NAME='port name'                           */         
*/*                       OCC                                        */         
*/*                                                                  */         
*/*01*  FUNCTION =  Describes the characteristics of the switch port.*/         
*/*                                                                  */         
*/*01*  NOTES =  None.                                               */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = For HCD use only.                           */         
*/*                                                                  */         
*/*01*  INPUT = # ID=      2 hex char port id.                       */         
*/*               PORTNM=  24 char port name (enclosed in quotes).   */         
*/*               OCC      Indication that switch port is            */         
*/*                        occupied.                                 */         
*/*                                                                  */         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number             @M4A         
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &$ERR              Global error flag                @M4A         
         GBLC  &CWK               Character work variable          @M4A         
         LCLA  &AWK               Arithmetic work variable         @M4A         
         LCLA  &L                 Maximum or required operand lgth @M4A         
         LCLA  &LEN               Actual operand length            @M4A         
         LCLA  &NDX               Substring index                  @M4A         
         LCLB  &ERROR             Error flag                       @M4A         
         LCLB  &POCC              Port is occupied                 @M4A         
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A         
         LCLC  &DESCR             Description work area            @M4A         
         LCLC  &DSC               Description work area            @L2A         
         LCLC  &TPORID            Character sublist entry          @M4A         
         ACTR  10000              Set for infinite loop control                 
&SYMBOL  TXTHDR PORT                                                            
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A         
         AIF   (N'&SYSLIST NE 1).XPOS05    No positional parameter @P3A         
&POCC    SETB  1                                                                
         AIF   ('&SYSLIST(1)' EQ 'OCC').XPOS10 Allowed parameter   @P3A         
.XPOS05  ANOP  ,                                                                
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS10            and continue                     @P3A         
.*                                                                              
.XPOS10  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate ID                   2 Hex digits                   *         
.*                                                                    *         
.**********************************************************************         
.CKID    ANOP                                                                   
&L       SETA  2                             Required SWID  length              
&TPORID  SETC  '&ID'                   Save port id                @M4A         
         AIF   ('&TPORID' EQ '').PORTE02         No port id        @M4A         
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A         
         HEXCHECK STRING=&TPORID                                   @M4A         
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A         
.**********************************************************************         
.*                                                                    *         
.*       Validate NAME                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  24                 Maximum port name   length       @M4A         
         AIF   ('&NAME' EQ '').DENULL   NAME is null               @M4A         
         AIF   ('&NAME'(1,1) EQ '''').DELEN  Must be in quotes     @M4A         
.*                                   (Asmblr checks for end quote) @M4A         
         MNOTE 8,'008 NAME VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .ENAME                                              @M4A         
.DELEN   ANOP                                                      @M4A         
&DESCR   SETC  '&NAME'                Set description              @M4A         
&LEN     SETA  K'&NAME-2              Length of description        @M4A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A         
&DSC     SETC  '&NAME'(2,&LEN)        Sets name string             @L2A         
         STRLEN STRING=&DSC           Determines real length       @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).ENAME    Less than maximum            @M4A         
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'       @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .ENAME                                              @M4A         
.DENULL  ANOP                                                      @M4A         
&DESCR   SETC  ''' '''                Set to blank                 @M4A         
.ENAME   ANOP  ,                                                   @M4A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1).EXIT       Exit if error                             
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number            
         DC    XL1'00'                Reserved                                  
         DC    XL1'&TPORID'           Port Id                                   
         AIF  (&POCC).POCC            Port is occupied                          
         DC    XL1'00'                Port is not occupied                      
         AGO   .EPOCC                                                           
.POCC    ANOP  ,                                                                
         DC    XL1'80'                Port is occupied                          
.EPOCC   ANOP  ,                                                                
         DC    XL1'00'                Reserved                                  
         DC    CL24&DESCR             Port name                                 
         DC    XL4'00'                Reserved                                  
.EPORT   ANOP  ,                                                   @L2A         
.*                                                                 @M4A         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - SWCONF - SWITCH CONFIGURATION'              
         MACRO  --  SWITCH CONFIGURATION INFORMATION                            
&SYMBOL  SWCONF   &ID=,&SWID=,&DESC=,&DEFCONN=                                  
.*                                                                 @L2A         
         AGO   .SKIP                                               @L2A         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = SWCONF                                          */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Switch configuration characteristics      */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL SWITCH    DEFCONN=A (allowed) or                     */         
*/*                               P (prohibited)                     */         
*/*                       DESC='description'                         */         
*/*                       ID=switch configuration id                 */         
*/*                       PORTCF=((port,A,(id1,id2,...),         @L2A*/         
*/*                                     P,(id1,id2,...),             */         
*/*                                     D,(id),                      */         
*/*                                     BLOCKED),                    */         
*/*                                (...),...)                        */         
*/*                       SWID=switch id                             */         
*/*                                                                  */         
*/*01*  FUNCTION =  Describes the characteristics of the switch      */         
*/*                 configuration: the default connection type,      */         
*/*                 the list of allowed, prohibited and dedicated    */         
*/*                 ports for each port, an indication whether the   */         
*/*                 port is blocked, the switch id, the switch       */         
*/*                 configuration id and its description.            */         
*/*                                                                  */         
*/*01*  NOTES =  A switch of up to 256 ports is supported.           */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = For HCD use only.                           */         
*/*                                                                  */         
*/*01*  INPUT = # DEFCONN= A (allowed) or P (prohibited).            */         
*/*               DESC=    Up to 32 EBCDIC characters.               */         
*/*             # ID=      1 to 8 alphanumeric switch configuration  */         
*/*                        name.                                     */         
*/*               PORTCF=  list of port id entries, where each       */         
*/*                        port id entry contains the following      */         
*/*                        optional information:                     */         
*/*                        2 hex char port id each,                  */         
*/*                        follwed optionally by the following data: */         
*/*                        A,list of 2 hex char port ids (describing */         
*/*                        the allowed port connections),            */         
*/*                        P,list of 2 hex char port ids (describing */         
*/*                        the prohibited port connections),         */         
*/*                        D,list of 2 hex char port id (describing  */         
*/*                        a dedicated port connection),             */         
*/*                        BLOCKED, if the port id is blocked.       */         
*/*             # SWID=    2 hex character switch id                 */         
*/*                                                                  */         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number             @M4A         
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &$ERR              Global error flag                @M4A         
         GBLC  &CWK               Character work variable          @M4A         
         LCLA  &AWK               Arithmetic work variable         @M4A         
         LCLA  &AWK1              Arithmetic work variable 1       @M4A         
         LCLA  &ALLOW             Flag for allowed connections     @M4A         
         LCLA  &BITVAL(8)         Constants to get port mask       @M4A         
         LCLA  &BLK               Flag for blocked connections     @M4A         
         LCLA  &COMMA             Index to comma in sublist entry  @M4A         
         LCLA  &DED               Flag for dedicated connections   @M4A         
         LCLA  &FLAG,&LBIT        Flag byte variables              @M4A         
         LCLA  &L                 Maximum or required operand lgth @M4A         
         LCLA  &L1                Maximum or required operand lgth @M4A         
         LCLA  &LEN               Actual operand length            @M4A         
         LCLA  &NDX               Substring index                  @M4A         
         LCLA  &MAXSUB            Sublist element number           @M4A         
         LCLA  &NELM              Number of elements in sublist    @M4A         
         LCLA  &NPORT             Number of PORT entries           @M4A         
         LCLA  &PFLAGS(256)       Port number flags                @M4A         
         LCLA  &PROHIB            Flag for prohibited connections  @M4A         
         LCLA  &SUB               Sublist element number           @M4A         
         LCLA  &SUB1              Sublist element number           @M4A         
         LCLA  &SUB2              Sublist element number           @M4A         
         LCLA  &X1                Port id                          @L2A         
         LCLA  &X2                Addressing byte in bitstring     @L2A         
         LCLA  &X3                Addressing bit in bitstring      @L2A         
         LCLB  &ASTF              Asteriks flag                    @M4A         
         LCLB  &ERROR             Error flag                       @M4A         
         LCLB  &SINGLE            Only single list element         @M4A         
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A         
         LCLC  &DESCR             Description work area            @M4A         
         LCLC  &DSC               Description work area            @L2A         
         LCLC  &PORID(256)        Character sublist entry          @M4A         
         LCLC  &TPORID            Character sublist entry          @M4A         
         ACTR  10000              Set for infinite loop control                 
&SYMBOL  TXTHDR SWCONF                                                          
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS10            and continue                     @P3A         
.*                                                                              
.XPOS10  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate SWID                 2 Hex digits                   *         
.*                                                                    *         
.**********************************************************************         
.CKSWID  ANOP                                                                   
&L       SETA  2                             Required SWID  length              
         AIF   ('&SWID' EQ '').NOSWID        SWID not specified                 
         AIF   (N'&SWID GT 1).SUBSWI         Invalid in sublist format          
         AIF   (K'&SWID EQ &L).SWICHAR       Number of characters               
         MNOTE 8,'032 SWID PARAMETER MUST BE &L CHARACTER.'                     
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXSWID                                                         
.SWICHAR ANOP                                                                   
&NDX     SETA  1                                                                
.*       Validate the SWID                                                      
.SWILOOP ANOP  ,                                                                
         AIF   ('&SWID'(&NDX,1) LT 'A').BADSWI                                  
         AIF   ('&SWID'(&NDX,1) LE 'F').CKITSWI (A-F)                           
         AIF   ('&SWID'(&NDX,1) LT '0').BADSWI                                  
         AIF   ('&SWID'(&NDX,1) LE '9').CKITSWI (0-9)                           
.BADSWI  ANOP                         Invalid char in generic name              
&CWK     SETC  '&SWID'(&NDX,1)                                                  
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SWID PARAMETER.'            
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXSWID               Go check next keyword                     
.CKITSWI ANOP  ,                                                                
&NDX     SETA  &NDX+1                                                           
         AIF   (&NDX LE &L).SWILOOP                                             
         AGO   .CKXSWID                                                         
.SUBSWI  MNOTE 8,'014 SWID PARAMETER MUST NOT BE A SUBLIST.'                    
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXSWID               Go check next keyword                     
.NOSWID  MNOTE 8,'002 SWID KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB  1                      Indicates error                           
.CKXSWID ANOP                                                                   
.**********************************************************************         
.*                                                                    *         
.*       Validate ID                   type <= 8 alphanumerics        *         
.*                                                                    *         
.**********************************************************************         
.CKID    ANOP                                                                   
&L       SETA  8                        Maximum ID length                       
         AIF   ('&ID'   EQ '').NOID     ID not specified                        
         AIF   (N'&ID GT 1).IDSUB       Invalid in sublist format               
         AIF   (K'&ID LE &L).IDCHAR     Maximum number of characters            
         MNOTE 8,'033 ID PARAMETER EXCEEDS &L CHARACTERS.'                      
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXID                                                           
.IDCHAR  ANOP                                                                   
&NDX     SETA  1                      Point to 1st character                    
.*                                                                              
.*       Loop to validate each character in the ID name                         
.IDLOOP  ANOP                                                                   
         AIF   ('&ID'(&NDX,1) EQ '@').GOODID      (@)              @H4A         
         AIF   ('&ID'(&NDX,1) EQ '#').GOODID      (#)              @H4A         
         AIF   ('&ID'(&NDX,1) EQ '$').GOODID      ($)              @H4A         
         AIF   ('&ID'(&NDX,1) LT 'A').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'I').GOODID      (A-I)                         
         AIF   ('&ID'(&NDX,1) LT 'J').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'R').GOODID      (J-R)                         
         AIF   ('&ID'(&NDX,1) LT 'S').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'Z').GOODID      (S-Z)                         
         AIF   ('&ID'(&NDX,1) LT '0').BADID                                     
         AIF   ('&ID'(&NDX,1) LE '9').GOODID      (0-9)                         
.BADID   ANOP                         Invalid character                         
&CWK     SETC  '&ID'(&NDX,1)          Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'              
&ERROR   SETB  1                      Indicates error                           
.GOODID  ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character of ID            
         AIF   (&NDX LE K'&ID).IDLOOP       Check next character                
         AGO   .CKXID                 Go check next keyword                     
.IDSUB   MNOTE 8,'014 ID NOT VALID IN SUBLIST FORMAT.'                          
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXID                 Go check next keyword                     
.NOID    MNOTE 8,'002 ID KEYWORD NOT SPECIFIED.'                                
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXID                 Go check next keyword        @M3A         
.CKXID   ANOP  ,                                                                
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DEFCONN                   A or P                    *         
.*                                                                    *         
.**********************************************************************         
.CKDEFC  ANOP                                                                   
&L       SETA  1                        Maximum UNIT length                     
         AIF   ('&DEFCONN' EQ '').NODEFC  DEFCONN not specified                 
         AIF   ('&DEFCONN' EQ 'A').CKXDEFC Valid value                          
         AIF   ('&DEFCONN' EQ 'P').CKXDEFC Valid value                          
         MNOTE 8,'043 DEFCONN VALUE MUST BE A OR P.'                            
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXDEFC               Go check next keyword                     
.NODEFC  MNOTE 8,'014 DEFCONN KEYWORD NOT SPECIFIED.'                           
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXDEFC               Go check next keyword                     
.CKXDEFC ANOP  ,                                                                
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @M4A         
         AIF   ('&DESC' EQ '').EDESC    DESC is null               @M4A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A         
.*                                   (Asmblr checks for end quote) @M4A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                                              @M4A         
.DELEN   ANOP                                                      @M4A         
&DESCR   SETC  '&DESC'                Set description              @M4A         
&LEN     SETA  K'&DESC-2              Length of description        @M4A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A         
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A         
         STRLEN STRING=&DSC           Determines length of string  @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                                              @M4A         
.DENULL  ANOP                                                      @M4A         
&DESCR   SETC  ''' '''                Set to blank                 @M4A         
.EDESC   ANOP  ,                                                   @M4A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1).EXIT       Exit if error                             
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number            
         DC    CL8'&ID'               Switch configuration name                 
.GENSWID ANOP  ,                                                                
         DC    XL1'00'                Reserved switch id byte                   
         DC    XL1'&SWID'             Switch id                                 
         DC    XL2'00'                Reserved                                  
.GENDESC ANOP  ,                                                                
         AIF   ('&DESC' EQ '').NODESC Description specified        @M4A         
         DC    CL32&DESCR             Description                  @M4A         
         AGO   .EDESCP                branch to continue           @M4A         
.NODESC  ANOP  ,                      Description not specified    @M4A         
         DC    CL32'  '               Description                  @M4A         
.EDESCP  ANOP  ,                                                   @M4A         
         DC    CL1'&DEFCONN'          Default connection type      @L2A         
         DC    XL11'00'               Reserved                     @M4A         
&CWK     SETC  ''                     Blank out label                           
&SUB     SETA  &SUB+1                 Points to next entry in array             
         AIF   (&SUB LE &NPORT).GENPOLP Processes next array entry              
.EPORTN  ANOP  ,                                                   @L2A         
.*                                                                 @M4A         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - POCONF - PORT CONFIGURATION'                
         MACRO  --  PORT CONFIGURATION INFORMATION                              
&SYMBOL  POCONF   &ID=,&PORTCF=                                                 
.*                                                                 @L2A         
         AGO   .SKIP                                               @L2A         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = POCONF                                          */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Switch configuration characteristics      */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL POCONF    ID=port id                                 */         
*/*                       PORTCF=((A,(id1,id2,...),              @L2A*/         
*/*                                P,(id1,id2,...),                  */         
*/*                                D,(id),                           */         
*/*                                BLOCKED),                         */         
*/*                                (...),...)                        */         
*/*                                                                  */         
*/*01*  FUNCTION =  Describes the characteristics of the port        */         
*/*                 configuration:                                   */         
*/*                 the list of allowed, prohibited and dedicated    */         
*/*                 ports for each port, an indication whether the   */         
*/*                 port is blocked.                                 */         
*/*                                                                  */         
*/*01*  NOTES =  A switch of up to 256 ports is supported.           */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = For HCD use only.                           */         
*/*                                                                  */         
*/*01*  INPUT = # ID=      2 hex characters port id                  */         
*/*             # PORTCF=  list of port id entries, where each       */         
*/*                        port id entry contains the following      */         
*/*                        optional information:                     */         
*/*                        A,list of 2 hex char port ids (describing */         
*/*                        the allowed port connections),            */         
*/*                        P,list of 2 hex char port ids (describing */         
*/*                        the prohibited port connections),         */         
*/*                        D,list of 2 hex char port id (describing  */         
*/*                        a dedicated port connection),             */         
*/*                        BLOCKED, if the port id is blocked.       */         
*/*                                                                  */         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number             @M4A         
         GBLB  &$ERR              Global error flag                @M4A         
         GBLC  &CWK               Character work variable          @M4A         
         LCLA  &AWK               Arithmetic work variable         @M4A         
         LCLA  &AWK1              Arithmetic work variable 1       @M4A         
         LCLA  &ALLOW             Flag for allowed connections     @M4A         
         LCLA  &BITVAL(8)         Constants to get port mask       @M4A         
         LCLA  &BLK               Flag for blocked connections     @M4A         
         LCLA  &COMMA             Index to comma in sublist entry  @M4A         
         LCLA  &DED               Flag for dedicated connections   @M4A         
         LCLA  &FLAG,&LBIT        Flag byte variables              @M4A         
         LCLA  &L                 Maximum or required operand lgth @M4A         
         LCLA  &L1                Maximum or required operand lgth @M4A         
         LCLA  &LEN               Actual operand length            @M4A         
         LCLA  &NDX               Substring index                  @M4A         
         LCLA  &MAXSUB            Sublist element number           @M4A         
         LCLA  &NELM              Number of elements in sublist    @M4A         
         LCLA  &NPORT             Number of PORT entries           @M4A         
         LCLA  &NALLOW            Number of allowed port connects  @M4A         
         LCLA  &NPROHI            Number of prohibited port conn.  @M4A         
         LCLA  &PFLAGS            Port number flags                @M4A         
         LCLA  &PROHIB            Flag for prohibited connections  @M4A         
         LCLA  &SUB               Sublist element number           @M4A         
         LCLA  &SUB1              Sublist element number           @M4A         
         LCLA  &SUB2              Sublist element number           @M4A         
         LCLA  &X1                Port id                          @L2A         
         LCLA  &X2                Addressing byte in bitstring     @L2A         
         LCLA  &X3                Addressing bit in bitstring      @L2A         
         LCLB  &ASTF              Asteriks flag                    @M4A         
         LCLB  &ERROR             Error flag                       @M4A         
         LCLB  &SINGLE            Only single list element         @M4A         
         LCLC  &PALLOW(256)       Allowed port matrix              @M4A         
         LCLC  &PPROHI(256)       Prohibited port matrix           @M4A         
         LCLC  &PDEDIC            Dedicated port matrix            @M4A         
         LCLC  &CNO               EBCDIC version of SYSITRN        @M4A         
         LCLC  &PORID             Character sublist entry          @M4A         
         LCLC  &TPORID            Character sublist entry          @M4A         
         ACTR  10000              Set for infinite loop control                 
&ALLOW   SETA  128                Allowed connections specified    @L2A         
&PROHIB  SETA  64                 Prohibited connections specified @L2A         
&DED     SETA  32                 Dedicated connection specified   @L2A         
&BLK     SETA  16                 Blocked port specified           @L2A         
&BITVAL(1) SETA 128                                                             
&BITVAL(2) SETA  64                                                             
&BITVAL(3) SETA  32                                                             
&BITVAL(4) SETA  16                                                             
&BITVAL(5) SETA   8                                                             
&BITVAL(6) SETA   4                                                             
&BITVAL(7) SETA   2                                                             
&BITVAL(8) SETA   1                                                             
&PDEDIC    SETC   '00'                                                          
&SYMBOL  TXTHDR POCONF                                                          
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS10    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS10            and continue                     @P3A         
.*                                                                              
.XPOS10  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate ID                   2 Hex digits                   *         
.*                                                                    *         
.**********************************************************************         
.CKID    ANOP                                                                   
&L       SETA  2                             Required ID    length              
         AIF   ('&ID' EQ '').NOID            ID not specified                   
         AIF   (N'&ID GT 1).SUBSWI           Invalid in sublist format          
         AIF   (K'&ID EQ &L).SWICHAR         Number of characters               
         MNOTE 8,'032 ID PARAMETER MUST BE &L CHARACTER.'                       
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXID                                                           
.SWICHAR ANOP                                                                   
&NDX     SETA  1                                                                
.*       Validate the ID                                                        
.SWILOOP ANOP  ,                                                                
         AIF   ('&ID'(&NDX,1) LT 'A').BADSWI                                    
         AIF   ('&ID'(&NDX,1) LE 'F').CKITSWI (A-F)                             
         AIF   ('&ID'(&NDX,1) LT '0').BADSWI                                    
         AIF   ('&ID'(&NDX,1) LE '9').CKITSWI (0-9)                             
.BADSWI  ANOP                         Invalid char in generic name              
&CWK     SETC  '&ID'(&NDX,1)                                                    
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'              
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXID                 Go check next keyword                     
.CKITSWI ANOP  ,                                                                
&NDX     SETA  &NDX+1                                                           
         AIF   (&NDX LE &L).SWILOOP                                             
         AGO   .CKXID                                                           
.SUBSWI  MNOTE 8,'014 ID PARAMETER MUST NOT BE A SUBLIST.'                      
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKXID                 Go check next keyword                     
.NOID    MNOTE 8,'002 ID KEYWORD NOT SPECIFIED.'                                
&ERROR   SETB  1                      Indicates error                           
.CKXID ANOP                                                                     
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PORTCF     Up to 256 sublist entries                *         
.*                           (A,(id1,...),P,(id1,...),D,(id),BLOCKED) *         
.*                                                                    *         
.**********************************************************************         
.CKPORT  ANOP                                                                   
&MAXSUB  SETA  256                     Max number of PORT entries  @M4A         
&L1      SETA  7                       Required PORT id length     @M4A         
&L       SETA  2                       Required PORT id length     @M4A         
         AIF   ('&PORTCF' EQ '').PORTE02 Entry omitted             @M4A         
         AIF  (N'&PORTCF GT &L1).PORTE03 Higher number of              *        
                                       operands than allowed       @M4A         
&NELM    SETA  N'&PORTCF               Number of sublist elements  @L2A         
.PORT118 ANOP  ,                                                   @M4A         
.*                                                                 @M4A         
&SUB1    SETA  1                                                   @L2A         
.PORT119 ANOP  ,                                                   @L2A         
         AIF   (&SUB1 GT &NELM).PORT190                            @L2A         
.PORT120 ANOP  ,                                                   @M4A         
&TPORID  SETC  '&PORTCF(&SUB1)'        Save port id                @M4A         
.PORT130 ANOP  ,                                                   @M4A         
         AIF   ('&TPORID' EQ '').PORTE06         No port id        @M4A         
         AIF   ('&TPORID' EQ 'BLOCKED').PORT140                                 
         AIF   ('&TPORID' EQ 'A').PORT150                                       
         AIF   ('&TPORID' EQ 'P').PORT160                                       
         AIF   ('&TPORID' EQ 'D').PORT170                                       
         AGO   .PORTE06                No valide port status       @L2A         
.PORT140 ANOP  ,                       Process BLOCKED status      @L2A         
&PFLAGS  SETA &PFLAGS+&BLK                                                      
         AGO   .PORT180                                                         
.PORT150 ANOP  ,                       Process Allowed ports       @L2A         
&SUB1    SETA  &SUB1+1                 Increment to next element   @L2A         
&PFLAGS  SETA &PFLAGS+&ALLOW                                                    
&NALLOW  SETA  N'&PORTCF(&SUB1)                                                 
.PORT154 ANOP  ,                                                                
         AIF   (&NALLOW EQ 0).PORTE07                                           
         AIF   (&NALLOW GT &MAXSUB).PORTE07                                     
&SUB2    SETA  1                                                                
.PORT156 ANOP  ,                                                                
         AIF   (&SUB2 GT &NALLOW).PORT180                                       
&TPORID  SETC '&PORTCF(&SUB1,&SUB2)'                                            
.PORT158 ANOP  ,                                                                
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A         
         HEXCHECK STRING=&TPORID                                   @M4A         
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A         
&PALLOW(&SUB2)  SETC '&TPORID'                                     @L2A         
&SUB2    SETA  &SUB2+1                                                          
         AGO   .PORT156                                                         
.*                                                                 @M4A         
.PORT160 ANOP  ,                       Process Prohibited ports    @L2A         
&SUB1    SETA  &SUB1+1                 Increment to next element   @L2A         
&PFLAGS  SETA &PFLAGS+&PROHIB                                                   
&NPROHI  SETA  N'&PORTCF(&SUB1)                                                 
.PORT164 ANOP  ,                                                                
         AIF   (&NPROHI EQ 0).PORTE07                                           
         AIF   (&NPROHI GT &MAXSUB).PORTE07                                     
&SUB2    SETA  1                                                                
.PORT166 ANOP  ,                                                                
         AIF   (&SUB2 GT &NPROHI).PORT180                                       
&TPORID  SETC  '&PORTCF(&SUB1,&SUB2)'                                           
.PORT168 ANOP  ,                                                                
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A         
         HEXCHECK STRING=&TPORID                                   @M4A         
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A         
&PPROHI(&SUB2)  SETC '&TPORID'                                     @L2A         
&SUB2    SETA  &SUB2+1                                                          
         AGO   .PORT166                                                         
.*                                                                 @M4A         
.PORT170 ANOP  ,                       Process Dedicated  ports    @L2A         
&SUB1    SETA  &SUB1+1                 Increment to next element   @L2A         
&PFLAGS  SETA &PFLAGS+&DED                                                      
&NDEDIC  SETA  N'&PORTCF(&SUB1)                                                 
.PORT174 ANOP  ,                                                                
&SUB2    SETA  1                                                                
         AIF   (&NDEDIC NE 1).PORTE08                                           
&TPORID  SETC  '&PORTCF(&SUB1,&SUB2)'                                           
.PORT178 ANOP  ,                                                                
         AIF   (K'&TPORID NE &L).PORTE05  Port id ^= 2 chars       @M4A         
         HEXCHECK STRING=&TPORID                                   @M4A         
         AIF   (&$ERR).PORTE04         Report error if encountered @M4A         
&PDEDIC  SETC  '&TPORID'          Show as hex value                @L2A         
.*                                                                 @M4A         
.PORT180 ANOP  ,                                                                
&SUB1    SETA  &SUB1+1                 Point to next sublist entry @M4A         
         AGO   .PORT119                Process next sublist elem   @L2A         
.PORT190 ANOP  ,                                                                
         AGO   .XPORT                  End of processing           @L2A         
.*                                                                 @M4A         
.PORTE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 PORTCF PARAMETER EXCEEDS &MAXSUB ENTRIES.'   @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 PORT ID REQUIRED in SUBLIST ENTRY &SUB OF PORTCF *        
               PARAMETER.'                                         @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 PORTCF PARAMETER SUBLIST ENTRY &SUB MUST NOT EXCE*        
                ED &L1 PARAMETERS.'                                @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF PORT PARAMETER.'                                 @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 PORT ID MUST BE &L DIGITS: &SUB1 &SUB2.'     @M4A         
         MNOTE 8,'022 PORT ID: &TPORID.'                           @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE06 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 PORTCF ELEMENT &SUB1 MUST BE A, D, P OR BLOCKED.'         
.*                                                                 @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE07 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 PORTCF ELEMENT &SUB1 OF SUBLIST &SUB MUST BE A LI*        
               ST OF UP TO &MAXSUB PORT IDENTIFIERS.'              @L2A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.PORTE08 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 PORTCF ELEMENT &SUB1 OF SUBLIST &SUB MUST BE A LI*        
               ST OF 1 PORT IDENTIFIER.'                           @L2A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XPORT                  and continue                @M4A         
.*                                                                 @M4A         
.XPORT   ANOP  ,                                                   @M4A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1).EXIT       Exit if error                             
&CNO     SETC '&SYSITRN'              EBCDIC version of stmnt number            
         DC    XL1'00'                Reserved port id byte                     
         DC    XL1'&ID'               Port id                                   
         DC    XL1'00'                Reserved                                  
         DC    XL1'&PDEDIC'           Dedicated target port                     
         DC    AL1(&PFLAGS)           Port status flags                         
         DC    XL7'00'                Reserved                                  
         AIF (&NALLOW GT 0).GENPAL1                                             
         DC    XL8'00'                                                          
         AGO   .EPALL                                                           
.GENPAL1 ANOP  ,                                                                
         DC    XL2'00'                Reserved                                  
         DC    AL2(&NALLOW)           Number of allowed ports                   
         DC    A(@PALL&CNO)                                                     
.EPALL   ANOP  ,                                                                
         AIF (&NPROHI GT 0).GENPPRO                                             
         DC    XL8'00'                No prohibited connections                 
         AGO   .EPPRO                                                           
.GENPPRO ANOP  ,                                                                
         DC    XL2'00'                Reserved                                  
         DC    AL2(&NPROHI)           Number of prohibited ports                
         DC    A(@PPRO&CNO)                                                     
.EPPRO   ANOP  ,                                                                
&CWK     SETC  '@PALL&CNO'                                                      
&SUB     SETA  1                                                                
.GENPAL2 ANOP  ,                                                                
         AIF   (&SUB GT &NALLOW).EPALST                                         
&CWK     DC    X'00'                  Reserved                                  
         DC    X'&PALLOW(&SUB)'                                                 
&CWK     SETC  ' '                                                              
&SUB     SETA  &SUB+1                                                           
         AGO   .GENPAL2                                                         
.EPALST  ANOP  ,                                                                
&CWK     SETC  '@PPRO&CNO'                                                      
&SUB     SETA  1                                                                
.GENPPR2 ANOP  ,                                                                
         AIF   (&SUB GT &NPROHI).EPPRST                                         
&CWK     DC    X'00'                  Reserved                                  
         DC    X'&PPROHI(&SUB)'                                                 
&CWK     SETC  ' '                                                              
&SUB     SETA  &SUB+1                                                           
         AGO   .GENPPR2                                                         
.EPPRST  ANOP  ,                                                                
.*                                                                 @M4A         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - EDT - ELIGIBLE DEVICE TABLE'                
         MACRO  --  PARSE EDT MACRO                                             
&SYMBOL  EDT  &DEVPREF=,&ID=,&DESC=                                @N3C         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = EDT                                             */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Eligible Device Table                     */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL EDT  DEVPREF=(generic name<,generic name>...)        */         
*/*                  ID=identifier                                   */         
*/*                  DESC='description'                          @N3A*/         
*/*                                                                  */         
*/*01*  FUNCTION = Initiates a set of UNITNAME records for an        */         
*/*                associated EDT. Describes the identifier for      */         
*/*                this EDT and the device preference list.          */         
*/*                                                                  */         
*/*01*  NOTES = The EDT macro is not required if only one EDT is     */         
*/*             to be built and no device preference is desired.     */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT  = DEVPREF= List of generic names for device           */         
*/*                       preference table.                          */         
*/*              ID= 2 byte alphanumeric identifier.                 */         
*/*              DESC= String of 0 to 32 EBCDIC characters enclosed  */         
*/*                    in quotes.                                @N3A*/         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
         GBLA  &$STRLEN           String length                    @L2A         
         LCLA  &AWK               Arithmetic work variable                      
         LCLA  &L                 Maximum or required operand length            
         LCLA  &LEN               Actual operand length            @N3A         
         LCLA  &NDX               Substring index                               
         LCLA  &SUB               Sublist element number                        
         LCLB  &ERROR             Error flag                                    
         LCLC  &CNO               EBCDIC version of SYSITRN                     
         LCLC  &CWK               Character work variable                       
         LCLC  &DESCR             Description work area                         
         LCLC  &DSC               Description work area            @L2A         
         ACTR  10000              Set for infinite loop control                 
&SYMBOL  TXTHDR EDT               Build header for EDT record                   
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS20    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS20            and continue                     @P3A         
.*                                                                              
.XPOS20  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate DEVPREF             1 - 8 character generic name    *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                      Maximum length of name                    
         AIF   ('&DEVPREF' EQ '').CKID   DEVPREF not specified                  
&SUB     SETA  1                      Points to 1st generic name                
.**********************************************************************         
.*       Loop to validate each DEVPREF sublist entry                  *         
.**********************************************************************         
.DPLOOP  ANOP                                                                   
         AIF   ('&DEVPREF(&SUB)' EQ '').DPNULL  Null sublist entry              
         AIF   (K'&DEVPREF(&SUB) LE &L ).GDLEN  Length of generic name          
         MNOTE 8,'033 DEVPREF PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L C*        
               HARACTERS.'                                                      
&ERROR   SETB  1                      Indicates error                           
.GDLEN   ANOP                                                                   
&NDX     SETA  1                      Points to 1st char in generic             
.*                                                                              
.*       Loop to validate each character in the generic name                    
.NMLOOP  ANOP                                                                   
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT 'A').NMLOOPD                        
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE 'I').GOODNM (A-I)                   
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT 'J').BADNM                          
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE 'R').GOODNM (J-R)                   
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT 'S').BADNM                          
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE 'Z').GOODNM (S-Z)                   
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LT '0').BADNM                          
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) LE '9').GOODNM (0-9)                   
.NMLOOPD ANOP                                                                   
         AIF   ('&DEVPREF(&SUB)'(&NDX,1) EQ '-').GOODNM (-)                     
.BADNM   ANOP                         Invalid char in generic name              
&CWK     SETC  '&DEVPREF(&SUB)'(&NDX,1)  Isolate invalid character              
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *        
               FOR DEVPREF PARAMETER.'                                          
&ERROR   SETB  1                      Indicates error                           
.GOODNM  ANOP                                                                   
&NDX     SETA  &NDX+1                                                           
         AIF   (&NDX LE K'&DEVPREF(&SUB)).NMLOOP                                
         AGO   .NEXTSLE               Process next entry in sublist             
.*                                                                              
.DPNULL  MNOTE 8,'018 DEVPREF SUBLIST ENTRY &SUB IS MISSING.'                   
&ERROR   SETB  1                      Indicates error                           
.NEXTSLE ANOP                         Process next sublist entry                
&SUB     SETA  &SUB+1                 Points to next sublist entry              
         AIF   (&SUB LE N'&DEVPREF).DPLOOP  Another generic to process          
.**********************************************************************         
.*                                                                    *         
.*       Validate ID                  2 alphanumeric identifier       *         
.*                                                                    *         
.**********************************************************************         
.CKID    ANOP                                                                   
&L       SETA  2                      Required ID length                        
         AIF   ('&ID' EQ '').ECKID         ID not specified        @N3C         
         AIF   (N'&ID GT 1).SUBID          Invalid in sublist format            
         AIF   (K'&ID EQ &L ).IDCHAR       Number of characters                 
         MNOTE 8,'032 ID PARAMETER MUST BE &L CHARACTERS.'                      
&ERROR   SETB  1                      Indicates error                           
.IDCHAR  ANOP                                                                   
.*       Loop to validate each character in the ID                              
&NDX     SETA  1                      Point to 1st character                    
.IDLOOP  ANOP                                                                   
         AIF   ('&ID'(&NDX,1) LT 'A').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'I').GOODID (A-I)                              
         AIF   ('&ID'(&NDX,1) LT 'J').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'R').GOODID (J-R)                              
         AIF   ('&ID'(&NDX,1) LT 'S').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'Z').GOODID (S-Z)                              
         AIF   ('&ID'(&NDX,1) LT '0').BADID                                     
         AIF   ('&ID'(&NDX,1) LE '9').GOODID (0-9)                              
.BADID   ANOP                         Invalid character                         
&CWK     SETC  '&ID'(&NDX,1)          Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'              
&ERROR   SETB  1                      Indicates error                           
.GOODID  ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character                  
         AIF   (&NDX LE K'&ID).IDLOOP       Check next character                
         AGO   .ECKID                 No more characters           @N3C         
.SUBID   MNOTE 8,'014 ID PARAMETER MAY NOT BE A SUBLIST.'                       
&ERROR   SETB  1                      Indicates error                           
.ECKID   ANOP  ,                                                   @N3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @N3A         
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @N3A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A         
.*                                   (Asmblr checks for end quote) @N3A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
         AGO   .EDESC                 Go to end of DESC            @N3A         
.DELEN   ANOP                                                      @N3A         
&DESCR   SETC  '&DESC'                Set description              @N3A         
&LEN     SETA  K'&DESC-2              Length of description        @N3A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A         
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A         
         STRLEN STRING=&DSC           Determines length of string  @L2A         
&LEN     SETA  &$STRLEN               Sets real string length      @L2A         
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @N3A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
         AGO   .EDESC                 Go to end of DESC            @N3A         
.DENULL  ANOP                                                      @N3A         
&DESCR   SETC  ''' '''                Set to blank                 @N3A         
.EDESC   ANOP  ,                                                   @N3A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found           
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr           
         AIF   ('&ID' EQ '').NOID     ID not specified                          
         DC    CL2'&ID'               Alphanumeric EDT identifier               
         AGO   .GENDEVP               Go generate DEVPREF                       
.NOID    ANOP                                                                   
         DC    CL2'  '                EDT identifier (not specified)            
.GENDEVP ANOP                                                                   
&AWK     SETA  N'&DEVPREF             Number of entries in DEVPREF list         
         DC    H'&AWK'                Number of generic names in list           
         AIF   ('&DEVPREF' NE '').LIST  Generic list exists                     
         DC    A(0)                   No generic name list                      
         AGO   .DESCP                 Exit                         @N3C         
.LIST    ANOP                                                                   
         DC    A(@G&CNO)              Pointer to generic name list              
.DESCP   ANOP                                                      @N3A         
         AIF   ('&DESC' EQ '').NODESC Description specified        @N3A         
         DC    CL32&DESCR             Description                  @N3A         
         AGO   .EDESCP                branch to continue           @N3A         
.NODESC  ANOP  ,                      Description not specified    @N3A         
         DC    XL32'00'               Description                  @N3A         
.EDESCP  ANOP  ,                                                   @N3A         
         AIF   ('&DEVPREF' EQ '').EXIT  No generic list - exit     @N3A         
&SUB     SETA  1                      Point to DEVPREF entry 1                  
&CWK     SETC  '@G&CNO'               Label for 1st DEVPREF entry               
.GENLOOP ANOP                                                                   
&CWK     DC    CL8'&DEVPREF(&SUB)'    Generic name                              
&CWK     SETC  ''                     Blank out label                           
&SUB     SETA  &SUB+1                 Points to next entry in array             
         AIF   (&SUB LE N'&DEVPREF).GENLOOP Processes next generic name         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - ID - MESSAGE IDENTIFICATION'                
         MACRO  --  GENERATE MESSAGE FOR HEADING                                
&SYMBOL  ID    &MSG1=,&MSG2=,&SYSTEM=,&SCR=,&REMOTE=,&TOK=,            *        
               &SNAADDR=,&SERIAL=,&DESC=,&NAME=,&UNIT=,&MODEL=,        *        
               &MODE=,&LEVEL=,&LSYSTEM=                            @HVC         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = ID                                              */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Message identification macro.             */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL ID    DESC='description'                         @M4A*/         
*/*                   LEVEL=support level                        @L2A*/         
*/*                   MODE=configuration mode                    @L2A*/         
*/*                   MODEL=processor model                      @L2A*/         
*/*                   MSG1='message1'                                */         
*/*                   MSG2='message2'                                */         
*/*                   NAME=processor name                        @L2A*/         
*/*                   REMOTE='....'           not processed      @LTA*/         
*/*                   SCR='.......'                              @L1A*/         
*/*                   SERIAL=serial_number                       @M4A*/         
*/*                   SNAADDR=(network_name,system_name)         @M4A*/         
*/*                   SYSTEM='....'           not processed          */         
*/*                   LSYSTEM='....'          not processed      @HVA*/         
*/*                   TOK='.......'                              @HHC*/         
*/*                   UNIT=processor unit                        @L2A*/         
*/*                                                                  */         
*/*01*  FUNCTION =  Provides the identification information to be    */         
*/*                 printed in the heading of configuration          */         
*/*                 reports.                                         */         
*/*                                                                  */         
*/*01*  NOTES =  The ID macro may only be issued once.               */         
*/*              For IOCP, the ID statement must be first.           */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT =  MSG1= 1 to 64 EBCDIC characters to be used          */         
*/*                    as identification information.                */         
*/*              MSG2= 1 to 64 EBCDIC characters to be used          */         
*/*                    as identification information.                */         
*/*              DESC= 1 to 32 EBCDIC characters to be used          */         
*/*                    as processor description.                     */         
*/*              SERIAL= 1 to 10 characters serial number            */         
*/*              SNAADDR= 2 sublist entries consisting of            */         
*/*                    (SNA network name, SNA system name)           */         
*/*                                                                  */         
*/*01*  OUTPUT =  Information for the heading of HCD                 */         
*/*               configuration reports.                             */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &INTERR            Error indication set by macro    @M4A         
         GBLC  &CWK               Character to be checked          @M4A         
         LCLA  &LEN               Length value                                  
         LCLA  &L                 Maximum or required operand length            
         LCLA  &L1                Number of sublist entries        @M4A         
         LCLA  &CONFM             Configuration mode               @L2A         
         LCLB  &ERROR             Error flag                                    
         LCLC  &MESG1             MSG1                                          
         LCLC  &MESG2             MSG2                                          
         LCLC  &DESCR             DESC                             @M4A         
         LCLC  &DSC               DESC                             @L2A         
         LCLC  &LSYSTN            Local system name                @HVA         
         LCLC  &NETWN             Network name                     @M4A         
         LCLC  &SYSTN             System name                      @M4A         
         LCLC  &SERR              Serial number                    @M5A         
         LCLC  &SSCR              SCR value                        @L2A         
         LCLC  &TOK1              TOK sublist element 1            @HHA         
         LCLC  &TOK2              TOK sublist element 2            @HHA         
         LCLC  &TOK3              TOK sublist element 3            @HHA         
         LCLC  &TOK4              TOK sublist element 4            @HHA         
         LCLC  &TOK5              TOK sublist element 5            @HHA         
         LCLC  &TOK6              TOK sublist element 6            @HHA         
         LCLC  &TOK7              TOK sublist element 7            @HHA         
         ACTR  10000              Set for infinite loop control                 
&SYMBOL  TXTHDR ID                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS30    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS30            and continue                     @P3A         
.*                                                                              
.XPOS30  ANOP  ,                                                   @P3A         
&L       SETA  64                 Maximum message length                        
.**********************************************************************         
.*                                                                    *         
.*       Validate MSG1                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
         AIF   ('&MSG1' EQ '').M1NULL   MSG1 is null                            
         AIF   ('&MSG1'(1,1) EQ '''').M1LEN  Msg must be in quotes              
.*                                    (Asmblr checks for end quote)             
         MNOTE 8,'008 MSG1 VALUE MUST BE ENCLOSED IN QUOTES.'                   
&ERROR   SETB  1                      Indicate error                            
.M1LEN   ANOP                                                                   
&MESG1   SETC  '&MSG1'                Set message 1                             
&LEN     SETA  K'&MSG1-2              Length of message-quotes                  
         AIF   (&LEN  LE 0).M1NULL    Check for zero length                     
         AIF   (&LEN  LE &L).CKMSG2   Less than maximum                         
         MNOTE 8,'033 MSG1 PARAMETER EXCEEDS &L CHARACTERS.'                    
&ERROR   SETB  1                      Indicate error                            
.M1NULL  ANOP                                                                   
&MESG1   SETC  '''  '''               Set to blanks                             
.**********************************************************************         
.*                                                                    *         
.*       Validate MSG2                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
.CKMSG2  ANOP                                                                   
         AIF   ('&MSG2' EQ '').M2NULL     MSG2 is null                          
         AIF   ('&MSG2'(1,1) EQ '''').M2LEN  Msg must be in quotes              
         MNOTE 8,'008 MSG2 VALUE MUST BE ENCLOSED IN QUOTES.'                   
&ERROR   SETB  1                      Indicate error                            
.M2LEN   ANOP                                                                   
&MESG2   SETC  '&MSG2'                Set message 2                             
&LEN     SETA  K'&MSG2-2              Length of message-quotes                  
         AIF   (&LEN  EQ 0).M2NULL    Check for zero length                     
         AIF   (&LEN  LE &L).CKMSG2X  Less than maximum            @M4C         
         MNOTE 8,'033 MSG2 PARAMETER EXCEEDS &L CHARACTERS.'                    
&ERROR   SETB  1                      Indicate error                            
.M2NULL  ANOP                                                                   
&MESG2   SETC  '''  '''               Set to blanks                             
.CKMSG2X ANOP ,                                                    @M4C         
.**********************************************************************         
.*                                                                    *         
.*       Validate SNAADDR             List of (network,system)        *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                  Maximum name length              @M4A         
&L1      SETA  2                  Number of sublist entries        @M4A         
         AIF   ('&SNAADDR' EQ '').ESNAAD SNAADDR not specified     @M4A         
         AIF   (N'&SNAADDR NE &L1).SNAERR1 not 2 sublist entries   @M4A         
&SUB     SETA  1                  Sets sublist entry index         @M4A         
&NETWN   SETC  '&SNAADDR(&SUB)'       Sets network name            @M4A         
         AIF   ('&NETWN' EQ '').SNAERR2 network name omitted       @M4A         
         AIF   (K'&NETWN GT &L).SNAERR3 network name too long      @M4A         
         NAMETEST STRING=&NETWN          check network name to be  @M4A         
.*                                          alphanumeric           @M4A         
         AIF   (&INTERR).SNAERR4         invalid character found   @M4A         
&SUB     SETA  2                  Sets sublist entry index         @M4A         
&SYSTN   SETC  '&SNAADDR(&SUB)'       Sets network name            @M4A         
         AIF   ('&SYSTN' EQ '').SNAERR2 network name omitted       @M4A         
         AIF   (K'&SYSTN GT &L).SNAERR3 network name too long      @M4A         
         ALPHA1NUM STRING=&SYSTN      check system name to be      @06A         
.*                                    alphanumeric, 1.char alpha   @06A         
         AIF   (&INTERR).SNAERR4         invalid character found   @M4A         
         AGO   .ESNAAD                Go to end of SNAADDR         @M4A         
.*                                                                 @M4A         
.SNAERR1 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SNAADDR PARAMETER MUST CONTAIN &L1 ENTRIES.' @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .ESNAAD                 and continue                @M4A         
.*                                                                 @M4A         
.SNAERR2 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 SUBLIST ENTRY &SUB of SNAADDR PARAMETER OMITTED.'         
.*                                                                 @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .ESNAAD                 and continue                @M4A         
.*                                                                 @M4A         
.SNAERR3 ANOP  ,                                                   @M4A         
         MNOTE 8,'033 SUBLIST ENTRY &SUB of SNAADDR PARAMETER EXCEEDS &*        
               L CHARACTERS.'                                      @M4A         
.*                                                                 @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .ESNAAD                 and continue                @M4A         
.*                                                                 @M4A         
.SNAERR4 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF SNAADDR PARAMETER.'                              @M4A         
.ESNAAD  ANOP  ,                                                   @M4A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate NAME                1 to 8 alphanumeric name        *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                  Maximum name length              @L2A         
         AIF   ('&NAME' EQ '').ENAME  NAME not specified           @L2A         
         AIF   (K'&NAME  GT &L).NAMEER3 network name too long      @L2A         
         NAMETEST STRING=&NAME           check processor name to   @L2A         
.*                                       be alphanumeric           @L2A         
         AIF   (&INTERR).NAMEER4         invalid character found   @L2A         
         AGO   .ENAME                 Go to end of NAME            @L2A         
.*                                                                 @L2A         
.NAMEER3 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'       @L2A         
.*                                                                 @L2A         
&ERROR   SETB  1                       Indicates error             @L2A         
         AGO   .ENAME                  and continue                @L2A         
.*                                                                 @L2A         
.NAMEER4 ANOP  ,                                                   @L2A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN NAME PARAMETER.'            
.*                                                                 @L2A         
.ENAME   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate UNIT                1 to 8 characters               *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                  Maximum name length              @L2A         
         AIF   ('&UNIT' EQ '').EUNIT  UNIT not specified           @L2A         
         AIF   (K'&UNIT  GT &L).UNITER3 unit name too long         @L2A         
         ALPHANUM STRING=&UNIT           check processor unit to   @L2A         
.*                                       be alphanumeric           @L2A         
         AIF   (&INTERR).UNITER4         invalid character found   @L2A         
         AGO   .EUNIT                 Go to end of UNIT            @L2A         
.*                                                                 @L2A         
.UNITER3 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'       @L2A         
.*                                                                 @L2A         
&ERROR   SETB  1                       Indicates error             @L2A         
         AGO   .EUNIT                  and continue                @L2A         
.*                                                                 @L2A         
.UNITER4 ANOP  ,                                                   @L2A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'            
.*                                                                 @L2A         
.EUNIT   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate MODEL               1 to 8 characters               *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                  Maximum name length              @L2A         
         AIF   ('&MODEL' EQ '').EMODL  MODEL not specified         @L2A         
         AIF   (K'&MODEL GT &L).MODLER3 model name is too long     @L2A         
         ALPHANUM STRING=&MODEL          check processor model to  @L2A         
.*                                       be alphanumeric           @L2A         
         AIF   (&INTERR).MODLER4         invalid character found   @L2A         
         AGO   .EMODL                 Go to end of MODEL           @L2A         
.*                                                                 @L2A         
.MODLER3 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 MODEL PARAMETER EXCEEDS &L CHARACTERS.'      @L2A         
.*                                                                 @L2A         
&ERROR   SETB  1                       Indicates error             @L2A         
         AGO   .EMODL                  and continue                @L2A         
.*                                                                 @L2A         
.MODLER4 ANOP  ,                                                   @L2A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN MODEL PARAMETER.'           
.*                                                                 @L2A         
.EMODL   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate LEVEL               1 to 8 characters               *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                  Maximum name length              @L2A         
         AIF   ('&LEVEL' EQ '').ELEVL  LEVEL not specified         @L2A         
         AIF   (K'&LEVEL GT &L).LEVLER3 level name is too long     @L2A         
         ALPHANUM STRING=&LEVEL          check support level to    @L2A         
.*                                       be alphanumeric           @L2A         
         AIF   (&INTERR).LEVLER4         invalid character found   @L2A         
         AGO   .ELEVL                 Go to end of LEVEL           @L2A         
.*                                                                 @L2A         
.LEVLER3 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 LEVEL PARAMETER EXCEEDS &L CHARACTERS.'      @L2A         
.*                                                                 @L2A         
&ERROR   SETB  1                       Indicates error             @L2A         
         AGO   .ELEVL                  and continue                @L2A         
.*                                                                 @L2A         
.LEVLER4 ANOP  ,                                                   @L2A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN LEVEL PARAMETER.'           
.*                                                                 @L2A         
.ELEVL   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate MODE                BASIC or LPAR                   *         
.*                                                                    *         
.**********************************************************************         
         AIF   ('&MODE'  EQ '').EMODE  MODE not specified          @L2A         
         AIF   ('&MODE'  EQ 'LPAR').MODLPAR Process LPAR mode      @L2A         
         AIF   ('&MODE'  EQ 'BASIC').MODBAS Process BASIC mode     @L2A         
         AGO   .MODEER1                Invalid mode                @L2A         
.MODLPAR ANOP  ,                                                   @L2A         
&CONFM   SETA  2                       Set LPAR mode               @L2A         
         AGO   .EMODE                  End parsing                 @L2A         
.MODBAS  ANOP  ,                                                   @L2A         
&CONFM   SETA  1                       Set BASIC mode              @L2A         
         AGO   .EMODE                  End parsing                 @L2A         
.*                                                                 @L2A         
.MODEER1 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 MODE PARAMETER IS NOT LPAR OR BASIC.'        @L2A         
.*                                                                 @L2A         
.EMODE   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @M4A         
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @M4A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A         
.*                                   (Asmblr checks for end quote) @M4A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                 Go to end of DESC            @M4A         
.DELEN   ANOP                                                      @M4A         
&DESCR   SETC  '&DESC'                Set description              @M4A         
&LEN     SETA  K'&DESC-2              Length of description        @M4A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A         
&DSC     SETC  '&DESC'(2,&LEN)        Sets description string      @L2A         
         STRLEN STRING=&DSC           Determines length of string  @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                 Go to end of DESC            @M4A         
.DENULL  ANOP                                                      @M4A         
&DESCR   SETC  ''' '''                Set to blank                 @M4A         
.EDESC   ANOP  ,                                                   @M4A         
.**********************************************************************         
.*                                                                    *         
.*       Validate SERIAL              1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  10                     Maximum length               @M4A         
         AIF   ('&SERIAL' EQ '').ESERN    SERIAL is null           @M4A         
&SERR    SETC  '&SERIAL'                Set serial number          @M5A         
&LEN     SETA  K'&SERIAL              Length of description        @N3A         
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A         
&LEN     SETA  K'&SERIAL-2            Length of description        @N3A         
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A         
         STRLEN STRING=&SERR            Determines length          @L2A         
&LEN     SETA  &$STRLEN                 Sets real length           @L2A         
.SERLN   ANOP  ,                                                   @M5A         
         AIF   (&LEN      LE &L).ESERN    Less than maximum        @L2C         
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
.ESERN   ANOP  ,                                                   @M4A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate SCR                 1 to &L EBCDIC chars            *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  64                     Maximum length               @L2A         
         AIF   ('&SCR' EQ '').ESCRN       SCR is null              @L2A         
&LEN     SETA  K'&SCR                 Length of description        @L2A         
&SSCR    SETC  '&SCR'                   Set SCR number             @L2A         
         AIF   ('&SCR'(1,1) NE '''').SCRLN     Not in quotes       @L2A         
&LEN     SETA  K'&SCR-2               Length of description        @L2A         
&SSCR    SETC  '&SCR'(2,&LEN)           Set SCR number             @L2A         
         STRLEN STRING=&SSCR            Determines length          @L2A         
&LEN     SETA  &$STRLEN                 Sets real length           @L2A         
.SCRLN   ANOP  ,                                                   @L2A         
         AIF   (&LEN      EQ &L).ESCRN    Less than maximum        @L2A         
         MNOTE 8,'033 SCR PARAMETER DOES NOT HAVE &L CHARACTERS.'  @L2A         
&ERROR   SETB  1                      Indicate error               @L2A         
.ESCRN   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate TOK                 1 to &L EBCDIC chars            *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  7                      Maximum sublist entries      @HHA         
         AIF   ('&TOK' EQ '').ETOKN       TOK is null              @HHA         
         AIF   (N'&TOK NE &L).TOKLN   Invalid                      @HHA         
&TOK1    SETC  '&TOK(1)'              Extract sublist element 1    @HHA         
&TOK2    SETC  '&TOK(2)'              Extract sublist element 2    @HHA         
&TOK3    SETC  '&TOK(3)'              Extract sublist element 3    @HHA         
&TOK4    SETC  '&TOK(4)'              Extract sublist element 4    @HHA         
&TOK5    SETC  '&TOK(5)'              Extract sublist element 5    @HHA         
&TOK6    SETC  '&TOK(6)'              Extract sublist element 6    @HHA         
&TOK7    SETC  '&TOK(7)'              Extract sublist element 7    @HHA         
         AGO   .ETOKN                                              @HHA         
.TOKLN   ANOP  ,                                                   @HHA         
         MNOTE 8,'033 TOK PARAMETER DOES NOT HAVE &L SUBLIST ENTRIES.'          
.*                                                                 @HHA         
&ERROR   SETB  1                      Indicate error               @HHA         
.ETOKN   ANOP  ,                                                   @HHA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate LSYSTEM                                         @HVA*         
.*                                                                    *         
.**********************************************************************         
.*                                                                              
.CKLSYST ANOP  ,                                                   @HVA         
&L       SETA  8                                                                
         AIF   ('&LSYSTEM' EQ '').XLSYST                           @HVA         
&LSYSTN  SETC  '&LSYSTEM'             Sets local system name       @HVA         
         AIF   (K'&SYSTN GT &L).LSYERR3 LSYSTEM name too long      @HVA         
         ALPHANUM STRING=&LSYSTN      check system name to be      @08C         
.*                                    alphanumeric, 1.char alpha   @HVA         
         AIF   (&INTERR).LSYERR4         invalid character found   @HVA         
         AGO   .XLSYST                Go to end of LSYSTEM         @HVA         
.*                                                                 @M4A         
.*                                                                 @M4A         
.LSYERR3 ANOP  ,                                                   @M4A         
         MNOTE 8,'033 LSYSTEM PARAMETER EXCEEDS &L CHARACTERS.'    @HVA         
.*                                                                 @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XLSYST                 and continue                @M4A         
.*                                                                 @M4A         
.LSYERR4 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN LSYSTEM PARAMETER.'         
.XLSYST   ANOP  ,                                                  @HVA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1 ).EXIT      Exit if an error encountered              
         AIF ('&SCR' EQ '').NOSCR     No token available           @L2A         
         AIF   ('&SCR'(1,1) NE '''').NOSCR     Not in quotes       @L2A         
         DC    CL64'&SSCR'            SCR                          @L2A         
         AGO   .NDMSG1                                             @L2A         
.NOSCR   ANOP  ,                                                   @L2A         
         AIF ('&TOK' EQ '').NOTOK     No token available           @HHA         
         DC    CL8&TOK1                                            @HHA         
         DC    XL20'&TOK2'                                         @HHA         
         DC    XL4'&TOK3'                                          @HHA         
         DC    CL8&TOK4                                            @HHA         
         DC    CL8&TOK5                                            @HHA         
         DC    CL8&TOK6                                            @HHA         
         DC    CL8&TOK7                                            @HHA         
         AGO   .NDMSG1                                             @L2A         
.NOTOK   ANOP  ,                                                   @L2A         
         DC    CL64&MESG1             MSG1                         @M4C         
.NDMSG1  ANOP  ,                                                   @L2A         
         AIF ('&LSYSTN' EQ '').NOLSY  No local system name         @HVA         
         DC    CL8'&LSYSTN'           Local system name            @HVA         
         DC    CL56' '                Reserved                     @HVA         
         AGO   .NOMSG2                                             @HVA         
.NOLSY   ANOP  ,                                                   @HVA         
         DC    CL64&MESG2             MSG2                         @M4C         
.NOMSG2  ANOP  ,                                                   @HVA         
         AIF   ('&NETWN' EQ '').NONETW  No network name  available @M4A         
         DC    CL8'&NETWN'            Network name                 @M4A         
         AGO   .NDNETW                                             @M4A         
.NONETW  ANOP  ,                                                   @M4A         
         DC    CL8' '                 No SNA network name          @M4A         
.NDNETW  ANOP  ,                                                   @M4A         
         AIF   ('&SYSTN' EQ '').NOSYSTN No system name available   @M4A         
         DC    CL8'&SYSTN'            System name                  @M4A         
         AGO   .NDSYSTN                                            @M4A         
.NOSYSTN ANOP  ,                                                   @M4A         
         DC    CL8' '                 No SNA system name           @M4A         
.NDSYSTN ANOP  ,                                                   @M4A         
         AIF   ('&SERIAL' EQ '').NOSERN No serial number available @M4A         
         DC    CL10'&SERR'            Serial number                @M5A         
         AGO   .NDSERN                                             @M4A         
.NOSERN  ANOP  ,                                                   @M4A         
         DC    CL10' '                No serial number             @M4A         
.NDSERN  ANOP  ,                                                   @M4A         
         DC    XL2'00'                Reserved                     @M4A         
         DC    CL32&DESCR             Description                  @M4A         
         AIF   ('&NAME' EQ '').NONAME  No processor name available @L2A         
         DC    CL8'&NAME'             Processor name               @L2A         
         AGO   .NDNAME                                             @L2A         
.NONAME  ANOP  ,                                                   @L2A         
         DC    CL8' '                 No processor name            @L2A         
.NDNAME  ANOP  ,                                                   @L2A         
         AIF   ('&UNIT' EQ '').NOUNIT  No processor unit available @L2A         
         DC    CL8'&UNIT'             Processor unit               @L2A         
         AGO   .NDUNIT                                             @L2A         
.NOUNIT  ANOP  ,                                                   @L2A         
         DC    CL8' '                 No processor unit            @L2A         
.NDUNIT  ANOP  ,                                                   @L2A         
         AIF   ('&MODEL' EQ '').NOMODL No processor modl available @L2A         
         DC    CL8'&MODEL'            Processor model              @L2A         
         AGO   .NDMODL                                             @L2A         
.NOMODL  ANOP  ,                                                   @L2A         
         DC    CL8' '                 No processor model           @L2A         
.NDMODL  ANOP  ,                                                   @L2A         
         AIF   ('&LEVEL' EQ '').NOLEVL No support level  available @L2A         
         DC    CL8'&LEVEL'            Support level                @L2A         
         AGO   .NDLEVL                                             @L2A         
.NOLEVL  ANOP  ,                                                   @L2A         
         DC    CL8' '                 No support level             @L2A         
.NDLEVL  ANOP  ,                                                   @L2A         
         DC    AL1(&CONFM)            Configuration mode           @L2A         
         AIF ('&SCR' EQ '').NOSCR1    No token available           @L2A         
         DC    XL1'FF'                Indicate SCR value           @L2A         
         AGO   .NOSCR2                                             @L2A         
.NOSCR1  ANOP  ,                                                   @L2A         
         DC    XL1'00'                Reserved                     @L2A         
.NOSCR2  ANOP  ,                                                   @L2A         
         AIF   ('&LSYSTN' EQ '').NOLSYS1                           @HVA         
         DC    XL1'80'                Indicates LSYSTEM set        @HVA         
         AGO   .NOLSYS2                                            @HVA         
.NOLSYS1 ANOP  ,                                                   @HVA         
         DC    XL1'00'                Reserved                     @L2A         
.NOLSYS2 DC    XL5'00'                Reserved                     @HVA         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - IOCONFIG - CONFIGURATION ID'                
         MACRO  --  GENERATE IO CONFIGURATION IDENTIFIER                        
&SYMBOL  IOCONFIG &ID=,&DESC=,&NAME=,&TYPE=,&DROSID=               &L7C         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = IOCONFIG                                        */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Configuration identification macro.       */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL IOCONFIG   ID=identifier                             */         
*/*                        NAME=OS config name                       */         
*/*                        TYPE=OS config type                       */         
*/*                        DROSID=D/R site config ID             @L7A*/         
*/*                                                                  */         
*/*01*  FUNCTION =  Provides the I/O configuration identifier.       */         
*/*                                                                  */         
*/*01*  NOTES =  The IOCONFIG macro may only be issued once.         */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT = # ID= Two character configuration identifier.        */         
*/*               DESC= 1 to 32 EBCDIC characters description        */         
*/*               NAME= 1 to 8 OS coniguration name              @L2A*/         
*/*               TYPE= MVS ! VM                                 @L2A*/         
*/*               DROSID=1 to 8 char D/R site config ID          @L7A*/         
*/*                                                                  */         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT =  Information for the heading of HCD                 */         
*/*               configuration reports.                             */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
         GBLA  &$STRLEN           String length                    @L2A         
         GBLB  &INTERR            Internal error flag              @L2A         
         LCLA  &L                 Maximum or required operand length            
         LCLA  &NDX               Substring index                               
         LCLA  &OSTYPE            OS configuration type                         
         LCLB  &ERROR             Error flag                                    
         LCLC  &DESCR             Description                      @M4A         
         LCLC  &DSC               Description                      @L2A         
         LCLC  &CWK               Character work variable                       
         ACTR  10000              Set for infinite loop control                 
&SYMBOL  TXTHDR IOCONFIG                                                        
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS40    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS40            and continue                     @P3A         
.*                                                                              
.XPOS40  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @M4A         
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @M4A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @M4A         
.*                                   (Asmblr checks for end quote) @M4A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                 Go to end of DESC            @M4A         
.DELEN   ANOP                                                      @M4A         
&DESCR   SETC  '&DESC'                Set description              @M4A         
&LEN     SETA  K'&DESC-2              Length of description        @M4A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @M4A         
&DSC     SETC  '&DESC'(2,&LEN)        Sets string                  @L2A         
         STRLEN STRING=&DSC           Determines length            @L2A         
&LEN     SETA  &$STRLEN               Sets real length             @L2A         
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @M4A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @M4A         
&ERROR   SETB  1                      Indicate error               @M4A         
         AGO   .EDESC                 Go to end of DESC            @M4A         
.DENULL  ANOP                                                      @M4A         
&DESCR   SETC  ''' '''                Set to blank                 @M4A         
.EDESC   ANOP  ,                                                   @M4A         
         AIF   ((('&NAME' EQ '') AND ('&TYPE' EQ '')) OR               *        
               (('&NAME' NE '') AND ('&TYPE' NE ''))).CHKNAM       @L2A         
         MNOTE 8,'051 NAME AND TYPE PARAMETERS MUST BE BOTH SPECIFIED O*        
               R BOTH OMITTED.'                                    @L2A         
&ERROR   SETB  1                      Indicates error              @L2A         
.CHKNAM  ANOP  ,                                                   @L2A         
.**********************************************************************         
.*                                                                    *         
.*       Validate NAME                1 to 8 character name           *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                  Maximum name length              @L2A         
         AIF   ('&NAME' EQ '').ENAME   NAME  not specified         @L2A         
         AIF   (K'&NAME  GT &L).NAMEER3 OS config name is too long @L2A         
         NAMETEST STRING=&NAME           check OS config name to   @L2A         
.*                                       be alphanumeric name      @L2A         
         AIF   (&INTERR).NAMEER4         invalid character found   @L2A         
         AGO   .ENAME                 Go to end of LEVEL           @L2A         
.*                                                                 @L2A         
.NAMEER3 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'       @L2A         
.*                                                                 @L2A         
&ERROR   SETB  1                       Indicates error             @L2A         
         AGO   .ENAME                  and continue                @L2A         
.*                                                                 @L2A         
.NAMEER4 ANOP  ,                                                   @L2A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN NAME PARAMETER.'            
.*                                                                 @L2A         
&ERROR   SETB  1                       Indicates error             @L2A         
.ENAME   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate TYPE                MVS or VM                       *         
.*                                                                    *         
.**********************************************************************         
         AIF   ('&TYPE'  EQ '').ETYPE  TYPE not specified          @L2A         
         AIF   ('&TYPE'  EQ 'MVS').TYPEMVS  Process MVS type       @L2A         
         AIF   ('&TYPE'  EQ 'VM').TYPEVM    Process VM type        @L2A         
         AGO   .TYPEER1                Invalid type                @L2A         
.TYPEMVS ANOP  ,                                                   @L2A         
&OSTYPE  SETA  1                       Set MVS type                @L2A         
         AGO   .ETYPE                  End parsing                 @L2A         
.TYPEVM  ANOP  ,                                                   @L2A         
&OSTYPE  SETA  2                       Set VM type                 @L2A         
         AGO   .ETYPE                  End parsing                 @L2A         
.*                                                                 @L2A         
.TYPEER1 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 TYPE PARAMETER IS NOT MVS OR VM.'            @L2A         
.*                                                                 @L2A         
.ETYPE   ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DROSID              1 to 8 character name           *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                         Maximum name length       @L7A         
         AIF   ('&DROSID' EQ '').EDRID   DROSID not specified      @L7A         
         AIF   (K'&DROSID GT &L).DRIDER3 OS config name is too long@L7A         
         NAMETEST STRING=&DROSID         check OS config name to   @L7A         
.*                                       be alphanumeric name      @L7A         
         AIF   (&INTERR).DRIDER4         invalid character found   @L7A         
         AGO   .EDRID                 Go to end of LEVEL           @L7A         
.*                                                                 @L7A         
.DRIDER3 ANOP  ,                                                   @L7A         
         MNOTE 8,'033 DROSID PARAMETER EXCEEDS &L CHARACTERS.'     @L7A         
.*                                                                 @L7A         
&ERROR   SETB  1                       Indicates error             @L7A         
         AGO   .EDRID                  and continue                @L7A         
.*                                                                 @L7A         
.DRIDER4 ANOP  ,                                                   @L7A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN DROSID PARAMETER.'          
&ERROR   SETB  1                       Indicates error             @L7A         
.*                                                                 @L7A         
.EDRID   ANOP  ,                                                   @L7A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate ID                  2 alphanumeric identifier       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  2                             Required ID length                 
         AIF   ('&ID' EQ '').NOID            ID not specified                   
         AIF   (N'&ID GT 1).SUBID            Invalid in sublist format          
         AIF   (K'&ID EQ &L).IDCHAR          Number of characters               
         MNOTE 8,'032 ID PARAMETER MUST BE &L CHARACTERS.'                      
&ERROR   SETB  1                      Indicates error                           
.IDCHAR  ANOP                                                                   
.*       Loop to validate each character in the ID identifier                   
&NDX     SETA  1                      Point to 1st character                    
.IDLOOP  ANOP                                                                   
         AIF   ('&ID'(&NDX,1) LT 'A').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'I').GOODID  (A-I)                             
         AIF   ('&ID'(&NDX,1) LT 'J').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'R').GOODID  (J-R)                             
         AIF   ('&ID'(&NDX,1) LT 'S').BADID                                     
         AIF   ('&ID'(&NDX,1) LE 'Z').GOODID  (S-Z)                             
         AIF   ('&ID'(&NDX,1) LT '0').BADID                                     
         AIF   ('&ID'(&NDX,1) LE '9').GOODID  (0-9)                             
.BADID   ANOP                         Invalid char in generic name              
&CWK     SETC  '&ID'(&NDX,1)          Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ID PARAMETER.'              
&ERROR   SETB  1                      Indicates error                           
.GOODID  ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character                  
         AIF   (&NDX LE K'&ID).IDLOOP   Check next character                    
         AGO   .GENTEXT               Go generate text                          
.SUBID   MNOTE 8,'014 ID PARAMETER MAY NOT BE A SUBLIST.'                       
&ERROR   SETB  1                      Indicates error                           
         AGO   .GENTEXT               Go generate text                          
.NOID    MNOTE 8,'002 ID KEYWORD NOT SPECIFIED.'                                
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF (&ERROR EQ 1 ).EXIT      Exit if error                             
         DC    CL2'&ID'               Configuration identifier                  
         DC    XL2'0000'              Reserved                                  
         DC    CL32&DESCR             Description                  @M4A         
         AIF   ('&NAME' EQ '').NONAME  No OS config name available @L2A         
         DC    CL8'&NAME'             OS config name               @L2A         
         AGO   .NDNAME                                             @L2A         
.NONAME  ANOP  ,                                                   @L2A         
         DC    CL8' '                 No OS config name            @L2A         
.NDNAME  ANOP  ,                                                   @L2A         
         DC    AL1(&OSTYPE)           OS config type               @L2A         
         DC    CL3' '                 reserved                     @L7A         
         AIF   ('&DROSID' EQ '').NODRID  No D/R site OS config ID  @L7A         
         DC    CL8'&DROSID'           D/R site OS config ID        @L7A         
         AGO   .NDDRID                                             @L7A         
.NODRID  ANOP  ,                                                   @L7A         
         DC    CL8' '                 No D/R site OS config ID     @L7A         
.NDDRID  ANOP  ,                                                   @L7A         
         DC    XL20'00'               Reserved                     @L2A         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - IODEVICE - IO DEVICE DEFINITION'            
         MACRO  --  PARSE IODEVICE STATEMENT                                    
&SYMBOL  IODEVICE &ADAPTER=,&ADDRESS=,&AP=,&CUNUMBR=,&DEVNUMBR=,       *        
               &DEVTYPE=,&ERRTAB=,&EXPBFR=,&FEATURE=,&MODEL=,          *        
               &NUMSECT=,&OBRCNT=,&OFFLINE=,&OPTCHAN=,                 *        
               &PATH=,&PCU=,&SETADDR=,&STADET=,&SCHSET=,           @HQC*        
               &TCU=,&TIMEOUT=,&UNIT=,&UNITADD=,&DYNAMIC=,         @LBC*        
               &PARTITION=,&PART=,&NOTPART=,&DESC=,&SERIAL=,       @N6C*        
               &LOCANY=,&USERPRM=,&VOLSER=,&OWNER=,&PPRCUSE=       @L7C         
.*                                                                              
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = IODEVICE                                        */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = I/O Device characteristics.               */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL IODEVICE  ADAPTER= adapter                           */         
*/*                       ADDRESS= (number<,count>)                  */         
*/*                       AP=      NOT PARSED                        */         
*/*                       CUNUMBR= number ! (number<,number>...)     */         
*/*                       DESC=    'description'                 @N3A*/         
*/*                       DEVNUMBR= number                           */         
*/*                       DEVTYPE= NOT PARSED                        */         
*/*                       DYNAMIC= NO ! YES   (NO = DEFAULT)         */         
*/*                       ERRTAB=  NOT PARSED                        */         
*/*                       EXPBFR=  NOT PARSED                        */         
*/*                       FEATURE= name ! (name<,name>...)           */         
*/*                       LOCANY=  NO ! YES                      @N6A*/         
*/*                       MODEL=   model number                      */         
*/*                       NUMSECT= number of 256 byte buffer sections*/         
*/*                       OBRCNT=  NOT PARSED                        */         
*/*                       OFFLINE= NO ! YES   (NO = default)         */         
*/*                       OPTCHAN= NOT PARSED                        */         
*/*                       OWNER=   Device owner                  @L2A*/         
*/*                       PATH=    chpid                             */         
*/*                       PCU=     physical control unit             */         
*/*                       SCHSET=  subchannel set number         @HQA*/         
*/*                       SERIAL=  serial number                 @N3A*/         
*/*                       SETADDR= set address command indicator     */         
*/*                       STADET=  Y ! N                             */         
*/*                       TCU=     transmission control unit         */         
*/*                       TIMEOUT= Y ! N                             */         
*/*                       UNIT=    device type                       */         
*/*                       UNITADD= number                            */         
*/*                       USERPRM= list of (parm id,parm val)    @M4A*/         
*/*                       PARTITION= partition ! (partition,...)  or */         
*/*                       PART= partition ! (partition,partition,..) */         
*/*                       NOTPART= partition ! (partition,...)   @LTA*/         
*/*                       VOLSER=  volume serial number          @C3A*/         
*/*                       PPRCUSE= D ! F ! S ! U initially       @L7A*/         
*/*                                                                  */         
*/*01*  FUNCTION = Describes:                                        */         
*/*              - The I/O device address/number                     */         
*/*              - The device characteristics                        */         
*/*              - The control units to which the device is assigned */         
*/*              - The partitions that have access to the device     */         
*/*                                                                  */         
*/*01*  NOTES =  A device may be attached to a maximum of eight      */         
*/*              control units.                                      */         
*/*              A maximum of 128 partitions can be specified having */         
*/*              access to the device.                           @LGC*/         
*/*                                                                  */         
*/*              The IOCP-only keywords are flagged independently    */         
*/*              of those recognized by the UIMs.                    */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT =   ADAPTER= 1 to 5 characters                         */         
*/*             # ADDRESS= device number and optional count          */         
*/*                        (replication factor) of multiple device   */         
*/*                        numbers.                                  */         
*/*               AP=      NOT PARSED                                */         
*/*             @ CUNUMBR= 1-4 Hex digit control unit number, or *** */         
*/*               DESC=    string of 0 to 32 EBCDIC characters   @N3A*/         
*/*             @ DEVNUMBR= 4 Hex digit device number                */         
*/*               DEVTYPE= NOT PARSED                                */         
*/*               DYNAMIC= NO ! YES   (NO = DEFAULT)                 */         
*/*               ERRTAB=  NOT PARSED                                */         
*/*               EXPBFR=  NOT PARSED                                */         
*/*               FEATURE= feature name list (1 - 10 characters)     */         
*/*               LOCANY=  NO ! YES                              @N6A*/         
*/*               MODEL=   1 to 4 Characters                         */         
*/*               NUMSECT= buffer sections. Decimal digit (0 - 4095) */         
*/*               OBRCNT=  NOT PARSED                                */         
*/*               OFFLINE= NO ! YES   (NO = default)                 */         
*/*               OPTCHAN= NOT PARSED                                */         
*/*               OWNER=   Device owner (1 to 8 alphanum chars)  @L2A*/         
*/*             @ PATH=    preferred channel path id                 */         
*/*               PCU=     pcu id. Decimal digit (1 - 4095)          */         
*/*               SERIAL=  1 to 10 characters                    @N3A*/         
*/*               SETADDR= 0 to 3                                    */         
*/*               SCHSET=  subchannel set number                 @HQA*/         
*/*             @ STADET=  Y ! N                                     */         
*/*               USERPRM= list of user parameters (id,value)    @M4A*/         
*/*               TCU=     4 digit identifier                        */         
*/*             @ TIMEOUT= Y ! N                                     */         
*/*             # UNIT=    8 character unit type(name).              */         
*/*             @ UNITADD= 2 Hex digit unit address                  */         
*/*             @ PARTITION= 1 to 8 characters                   @LBA*/         
*/*             @ NOTPART= 1 to 8 characters                     @LTA*/         
*/*               VOLSER=  1 to 6 characters                     @C3A*/         
*/*               PPRCUSE= D ! F ! S ! U initially, single char  @L7A*/         
*/*                                                                  */         
*/*             # - Required keyword                                 */         
*/*             @ - For IOCP only                                    */         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN               HCD statement number                      
         GBLA  &$STRLEN               String length                             
         GBLB  &$ERR                  Global error flag            @LBA         
         GBLB  &INTERR                Internal error flag          @L2A         
         LCLA  &AWK                   Arithmetic work variable                  
         LCLA  &CUASTRK               Count of CUNUMBR=***                      
         LCLA  &PFLAG                 PARAMETER FLAGS                           
         LCLA  &FLAG1                 Flag byte 1 variable                      
         LCLA  &ADAF,&ADDF,&FEAF      Operand flags                             
         LCLA  &MODF,&NUMF,&OFFF      Operand flags                             
         LCLA  &FLAG2                 Flag byte 2 variable                      
         LCLA  &PCUF,&SETF,&TCUF,&UNIF  Operand flags                           
         LCLA  &IOCPF1                Flag for IOCP-only keywords               
         LCLA  &IOCPF2                Flag2 for IOCP-only keywords @LTA         
         LCLA  &CUNF,&PATF,&STAF,&TIMF  Operand flags                           
         LCLA  &UNAF,&DEVF              Operand flags                           
         LCLA  &CSSF,&CSSPF             Operand flags              @HHA         
         LCLA  &L                     Maximum or req'd operand length           
         LCLA  &MAXCSS                Maximum number of CSS entries@HHA         
         LCLA  &MAXSUB                Maximum number of sublist entries         
         LCLA  &MAXSUB1               Maximum number of partitions @HHA         
         LCLA  &MAXVAL                Maximum value of operand                  
         LCLA  &NDX                   Substring index                           
         LCLA  &NUSRP                 Number of user parameters    @M4A         
         LCLA  &SUB                   Sublist element number                    
         LCLA  &SUB1                  Sublist element number       @HHA         
         LCLA  &PANUM                 Number of partition names    @HHA         
         LCLA  &PACT                  Number of entries in partition   *        
                                      list                         @LBA         
         LCLA  &IC,&IP,&IPC,&ISC      Size of CSS list, partition      *        
                                      list,preferred path list, sub-   *        
                                      channnel list                @HSA         
         LCLA  &CSS(128)              CSS list                     @LGC         
         LCLA  &PAF(128)              Partition flag               @LGC         
         LCLA  &CSID(4)               CSS id                       @HHA         
         LCLA  &CSPID(4)              CSS id                       @HHA         
         LCLA  &SSPID(4)              CSS id for SCHSET            @HSA         
         LCLA  &CSSID                 CSS id                       @HHA         
         LCLA  &PCSSM                 Partition CSS mask           @HKA         
         LCLA  &UPRMVLN(32)           Parameter value length       @M4A         
         LCLA  &UPRMVCT(32)           Parameter value count        @M4A         
         LCLA  &XLEN                  Length of parm extension area@M4A         
         LCLB  &ERROR                 Error flag                                
         LCLB  &UNIADF                UNITADD occurance flag                    
         LCLB  &CSSLI(4)                                           @HHA         
         LCLB  &CSPNO(4)                                           @HHA         
         LCLB  &SSPNO(4)              CSS occurrence mask in SCHSET@HSA         
         LCLB  &MCSS                  CSS occurrence flag          @HHA         
         LCLB  &MCSSP                 CSS occurrence flag w/ PART  @HHA         
         LCLB  &MCSSS                 CSS occurrence flag w/SCHSET @HSA         
         LCLB  &MULT                  Single/multiple CSS list     @HHA         
         LCLC  &CNO                   EBCDIC version of SYSITRN                 
         LCLC  &CWK                   Character work variable                   
         LCLC  &DESCR                 Description work area        @N3A         
         LCLC  &DSC                   Description work area        @M5A         
         LCLC  &SERR                  Serial number work area      @M5A         
         LCLC  &SSC                   Subchannel set number        @HSA         
         LCLC  &VOLS                  Volser number work area      @L2A         
         LCLC  &PA(128)               Partition list               @LGC         
         LCLC  &POS                   Substring position           @HHA         
         LCLC  &PTH(4)                Preferred path list          @HHA         
         LCLC  &SCH(4)                Subchannel set number        @HSA         
         LCLC  &PARTS                 Parttion id                  @HHA         
         LCLC  &PATHID                Path id                      @HHA         
         LCLC  &SCHSETID              Subchannel set ID            @HSA         
         LCLC  &UPRMID(32)            Parameter id                 @M4A         
         LCLC  &UPRMVAL(256)          Parameter values             @M4A         
         ACTR  10000                  Set for infinite loop control             
.*                                    NOTE: The operand flags need to           
.*                                     be kept contiguous for scanning          
.*                                    PARAMETER FLAG BYTE SETTINGS              
&OFFY    SETA  128                     OFFLINE=YES SPECIFIED                    
&DYNAY   SETA   64                     DYNAMIC=YES SPECIFIED                    
&LOCAY   SETA   32                     LOCANY=YES SPECIFIED        @N6A         
.*                                    Flag byte 1 settings                      
&ADAF    SETA  128                     ADAPTER specified - FLAG1                
&ADDF    SETA   64                     ADDRESS specified - FLAG1                
&FEAF    SETA   16                     FEATUREs specified - FLAG1               
&MODF    SETA    4                     MODEL specified - FLAG1                  
&NUMF    SETA    2                     NUMSECT specified - FLAG1                
&OFFF    SETA    1                     OFFLINE SPECIFIED - FLAG1                
.*                                    Flag byte 2 settings                      
&PCUF    SETA  128                     PCU specified - FLAG2                    
&SETF    SETA   64                     SETADDR specified - FLAG2                
&TCUF    SETA   32                     TCU specified - FLAG2                    
&UNIF    SETA   16                     UNIT specified - FLAG2                   
&DYNA    SETA    8                     DYNAMIC SPECIFIED - FLAG2                
&OWNR    SETA    4                     OWNER   SPECIFIED - FLAG2   @L2A         
&LOCA    SETA    2                     LOCANY SPECIFIED - FLAG2    @N6A         
.*                                    IOCP Flag byte settings                   
&CUNF    SETA  128                     CUNUMBR specified - IOCPF1               
&PATF    SETA   64                     PATH specified - IOCPF1                  
&STAF    SETA   32                     STADET=N specified - IOCPF1              
&TIMF    SETA   16                     TIMEOUT=N specified - IOCPF1             
&UNAF    SETA    8                     UNITADD specified - IOCPF1               
&DEVF    SETA    4                     DEVNUMBR specified - IOCPF1              
&STYF    SETA    2                     STADET=Y specified - IOCPF1              
&TMYF    SETA    1                     TIMEOUT=Y specified - IOCPF1             
.*                                    IOCP Flag byte 2 settings    @LTA         
&PARF    SETA  128                     PARTITION specified- IOCPF2 @LTA         
&NPAF    SETA   64                     NOTPART specified - IOCPF2  @LTA         
&CSSF    SETA   32                     PART CSS specified - IOCPF2 @HHA         
&CSSPF   SETA   16                     PATH CSS specified - IOCPF2 @HHA         
&MULT    SETB   0                      Assume single list          @HHA         
.*                                                                 @HKA         
&PCSSM   SETA   0                      Initialize Partition mask   @HKA         
&SYMBOL  TXTHDR IODEVICE              Build header for IODEVICE record          
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS50    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS50            and continue                     @P3A         
.*                                                                              
.XPOS50  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate ADAPTER             1 - 5 characters                *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  5                      Maximum ADAPTER length                    
         AIF   ('&ADAPTER' EQ '').CKADDR ADAPTER not specified                  
&FLAG1   SETA  &FLAG1+&ADAF           Indicate ADAPTER specified                
         AIF   (N'&ADAPTER GT 1).ADASUB    ADAPTER is in sublist format         
         AIF   (K'&ADAPTER LE &L).ADALEN   Number of characters                 
         MNOTE 8,'033 ADAPTER PARAMETER EXCEEDS &L CHARACTERS.'                 
&ERROR   SETB  1                      Indicates error                           
.ADALEN  ANOP                                                                   
&NDX     SETA  1                      Points to 1st chara of ADAPTER            
.*                                                                              
.*       Loop to validate each character in ADAPTER                             
.ADALOOP ANOP                                                                   
         AIF   ('&ADAPTER'(&NDX,1) LT 'A').ADLOOPD  Special character           
         AIF   ('&ADAPTER'(&NDX,1) LE 'I').GOODADA  Valid char (A-I)            
         AIF   ('&ADAPTER'(&NDX,1) LT 'J').BADADA                               
         AIF   ('&ADAPTER'(&NDX,1) LE 'R').GOODADA  Valid char (J-R)            
         AIF   ('&ADAPTER'(&NDX,1) LT 'S').BADADA                               
         AIF   ('&ADAPTER'(&NDX,1) LE 'Z').GOODADA  Valid char (S-Z)            
         AIF   ('&ADAPTER'(&NDX,1) LT '0').BADADA                               
         AIF   ('&ADAPTER'(&NDX,1) LE '9').GOODADA  Valid digit (0-9)           
.ADLOOPD ANOP                                                                   
         AIF   ('&ADAPTER'(&NDX,1) EQ '-').GOODADA  Good character (-)          
.BADADA  ANOP                         Invalid character                         
&CWK     SETC  '&ADAPTER'(&NDX,1)     Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN ADAPTER PARAMETER.'         
&ERROR   SETB  1                      Indicates error                           
.GOODADA ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF   (&NDX LE K'&ADAPTER).ADALOOP Check next digit                    
         AGO   .CKADDR                Check ADDRESS keyword                     
.ADASUB  MNOTE 8,'014 ADAPTER PARAMETER MAY NOT BE A SUBLIST.'                  
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                                                    *         
.*       Validate ADDRESS             (number,count)                  *         
.*                                                                    *         
.**********************************************************************         
.CKADDR  ANOP                                                                   
&L       SETA  4                         Max. device number length              
         AIF   ('&ADDRESS' EQ '').NOADDR ADDRESS not specified                  
&FLAG1   SETA  &FLAG1+&ADDF               Indicate ADDRESS specified            
         AIF   (N'&ADDRESS GT 2).ADOPER   Too many operands for ADDRESS         
         AIF   ('&ADDRESS(1)' EQ '').NODEVNO  No device number                  
         AIF   (K'&ADDRESS(1) EQ &L ).DNLEN    Number of digits                 
         AIF   (K'&ADDRESS(1) EQ &L-1 ).DNLEN  Number of digits                 
         AIF   (K'&ADDRESS(1) EQ &L-2 ).DNLEN  Number of digits   @08A          
         AIF   (K'&ADDRESS(1) EQ &L-3 ).DNLEN  Number of digits   @08A          
&AWK     SETA  &L-1                                                             
         MNOTE 8,'022 ADDRESS PARAMETER DEVICE NUMBER SUBLIST ENTRY MUS*        
               T BE &AWK OR &L DIGITS.'                                         
&ERROR   SETB  1                      Indicates error                           
.DNLEN   ANOP                                                                   
&NDX     SETA  1                      Points to 1st digit of device no          
.*                                                                              
.*       Loop to validate each digit in the device number (address)             
.DNLOOP  ANOP                                                                   
         AIF   ('&ADDRESS(1)'(&NDX,1) LT 'A').BADDN   Non-hex digit             
         AIF   ('&ADDRESS(1)'(&NDX,1) LE 'F').GOODDN  Good digit (A-F)          
         AIF   ('&ADDRESS(1)'(&NDX,1) LT '0').BADDN   Non-hex digit             
         AIF   ('&ADDRESS(1)'(&NDX,1) LE '9').GOODDN  Good digit (0-9)          
.BADDN   ANOP                         Invalid HEX digit                         
&CWK     SETC  '&ADDRESS(1)'(&NDX,1)  Isolate invalid digit                     
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN DEVICE NUMBER SUBLI*        
               ST ENTRY FOR ADDRESS PARAMETER.'                                 
&ERROR   SETB  1                      Indicates error                           
.GOODDN  ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next digit in device no         
         AIF   (&NDX LE K'&ADDRESS(1)).DNLOOP  Check next digit                 
         AGO   .CKACNT                Go check replication factor               
.NODEVNO MNOTE 8,'017 DEVICE NUMBER REQUIRED IN SUBLIST ENTRY FOR ADDRE*        
               SS PARAMETER.'                                                   
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                    Validate replication factor     *         
.**********************************************************************         
.CKACNT  ANOP                                                                   
&L       SETA  4                      Maximum replication factor length         
.*                                                                              
&MAXVAL  SETA  4095                   Maximum replication factor                
         AIF   ('&ADDRESS(2)' EQ '').CKAP     Count not specified               
         AIF   (K'&ADDRESS(2) LE &L ).DCLEN    Number of digits                 
         MNOTE 8,'023 ADDRESS PARAMETER REPLICATION FACTOR SUBLIST ENTR*        
               Y EXCEEDS &L DIGITS.'                                            
&ERROR   SETB  1                      Indicates error                           
.DCLEN   ANOP                                                                   
&NDX     SETA  1                      Points to 1st digit of device cnt         
         AIF   ('&ADDRESS(2)' LT '1').NOTZERO Invalid if less than 1            
.*                                                                              
.*       Loop to validate each digit in the replication factor                  
.DCLOOP  ANOP                                                                   
         AIF   ('&ADDRESS(2)'(&NDX,1) LT '0').BADDC   Not decimal               
         AIF   ('&ADDRESS(2)'(&NDX,1) LE '9').GOODDC  Good digit (0-9)          
.BADDC   ANOP                         Invalid DECIMAL digit                     
&CWK     SETC  '&ADDRESS(2)'(&NDX,1)  Isolate invalid digit                     
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN REPLICATION FAC*        
               TOR SUBLIST ENTRY FOR ADDRESS PARAMETER.'                        
&ERROR   SETB  1                      Indicates error                           
&AWK     SETA  1                      Indicate invalid digit                    
.GOODDC  ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next digit in dev cnt           
         AIF   (&NDX LE K'&ADDRESS(2)).DCLOOP  Check next digit                 
         AIF   (&AWK EQ 1).CKAP       AP not specified                          
         AIF   (&ADDRESS(2) GE 1 AND &ADDRESS(2) LE &MAXVAL).CKAP               
.*                                                                              
         MNOTE 8,'042 ADDRESS PARAMETER REPLICATION FACTOR VALUE MUST B*        
               E A NUMBER FROM 1 TO &MAXVAL.'                                   
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKAP                  Check next keyword                        
.NOTZERO MNOTE 8,'041 ADDRESS PARAMETER REPLICATION FACTOR VALUE MUST B*        
               E GREATER THAN 0.'                                               
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKAP                  Check next keyword                        
.*                                                                              
.ADOPER  MNOTE 8,'015 ADDRESS PARAMETER EXCEEDS 2 SUBLIST ENTRIES.'             
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKAP                  Check next keyword                        
.NOADDR  MNOTE 8,'002 ADDRESS KEYWORD NOT SPECIFIED.'                           
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                                                    *         
.*       Validate AP                  NO ! YES  --- NOT PARSED ---    *         
.*                                                                    *         
.**********************************************************************         
.CKAP    ANOP                                                                   
         AIF   ('&AP' EQ '').CKCUNUM       AP not specified                     
         MNOTE *,'  *,005 AP KEYWORD IGNORED.'                                  
.**********************************************************************         
.*                                                                    *         
.*       Validate CUNUMBR             1 to 8 control unit numbers,    *         
.*                                      1 - 4 Hex digits each or **** *         
.*         Ignores CUNUMBR=****                                       *         
.*                                                                    *         
.**********************************************************************         
.CKCUNUM ANOP                                                                   
&MAXSUB  SETA  8                      Maximum number of CUNUMBR's               
&L       SETA  4                      Maximum CUNUMBR length                    
         AIF   ('&CUNUMBR' EQ '').CKTYPE    CUNUMBR not specified               
&IOCPF1  SETA &IOCPF1+&CUNF           Indicate CUNUMBR specified                
         AIF  (N'&CUNUMBR LE &MAXSUB).CUSUBLE   Number of sublists              
         MNOTE 8,'015 CUNUMBR PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES*        
               .'                                                               
&ERROR   SETB 1                       Indicate error                            
.CUSUBLE ANOP                                                                   
&SUB     SETA 1                                                                 
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.CULOOP  ANOP                                                                   
         AIF   ('&CUNUMBR(&SUB)' EQ '').CUNULL Null sublist entry               
         AIF   (K'&CUNUMBR(&SUB) LE &L).CUNLEN  Number of digits                
         MNOTE 8,'023 CUNUMBR PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L D*        
               IGITS.'                                                          
&ERROR   SETB 1                       Indicate error                            
.CUNLEN  ANOP                                                                   
&AWK     SETA  K'&CUNUMBR(&SUB)       Actual number of digits in number         
&NDX     SETA  1                      Points to 1st digit of cu number          
.*                                                                              
.*       Loop to validate each character in the control unit number             
.CULOOPB ANOP                                                                   
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LT 'A').CUSTRSK Special                
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LE 'F').GOODCU  Good  (A-F)            
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LT '0').BADCU   Bad char               
         AIF   ('&CUNUMBR(&SUB)'(&NDX,1) LE '9').GOODCU  Good  (0-9)            
.CUSTRSK AIF   ('&CUNUMBR(&SUB)'(1,&AWK) NE '****'(1,&AWK)).BADCU               
&CUASTRK SETA  &CUASTRK+1             Increment count of asterisk sets          
&NDX     SETA  &NDX+&AWK-1            Points to last asterisk                   
         AGO  .GOODCU                 Continue                                  
.BADCU   ANOP                           Invalid HEX digit                       
&CWK     SETC  '&CUNUMBR(&SUB)'(&NDX,1)  Isolate invalid digit                  
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               FOR CUNUMBR PARAMETER.'                                          
&ERROR   SETB  1                      Indicates error                           
.GOODCU  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF   (&NDX LE K'&CUNUMBR(&SUB)).CULOOPB  Check next digit             
         AGO  .NXTCUNM                Process next CUNUMBR number               
.CUNULL  MNOTE 8,'018 CUNUMBR SUBLIST ENTRY &SUB IS MISSING.'                   
&ERROR   SETB 1                       Indicate error                            
.*                                                                              
.NXTCUNM ANOP                         Next control unit number                  
&SUB     SETA &SUB+1                  Point to next sublist entry               
         AIF  (&SUB LE N'&CUNUMBR).CULOOP  More CUNUMBR id's ...                
.**********************************************************************         
.*                                                                    *         
.*       Validate DEVTYPE             8 Hex digits --- NOT PARSED --- *         
.*                                                                    *         
.**********************************************************************         
.CKTYPE  ANOP                                                                   
         AIF   ('&DEVTYPE' EQ '').CKDYN    DEVTYPE NOT SPECIFIED                
         MNOTE 0,'004 DEVTYPE KEYWORD IGNORED. IT IS NOT SUPPORTED BY T*        
               HE HCD.'                                                         
.**********************************************************************         
.*                                                                    *         
.*       VALIDATE DYNAMIC             NO ! YES                        *         
.*                                                                    *         
.**********************************************************************         
.CKDYN   ANOP                                                                   
         AIF   ('&DYNAMIC' EQ '').CKERR    DYNAMIC NOT SPECIFIED                
&FLAG2   SETA  &FLAG2+&DYNA           INDICATE DYNAMIC SPECIFIED                
.CKDYN1  ANOP                                                                   
         AIF   ('&DYNAMIC' EQ 'NO').CKERR   DEFAULT (NO) SPECIFIED              
         AIF   ('&DYNAMIC' EQ 'N').CKERR    DEFAULT (NO) SPECIFIED              
         AIF   ('&DYNAMIC' EQ 'YES').CKDYN2 VALID DYNAMIC OPERAND               
         AIF   ('&DYNAMIC' EQ 'Y').CKDYN2   VALID DYNAMIC OPERAND               
         MNOTE 8,'043 DYNAMIC VALUE MUST BE YES, Y, NO OR N.'                   
&ERROR   SETB  1                      INDICATES ERROR                           
         AGO   .CKERR                 CHECK NEXT KEYWORD                        
.CKDYN2  ANOP                                                                   
&PFLAG   SETA  &PFLAG+&DYNAY          INDICATE DYNAMIC=YES SPECIFIED            
.**********************************************************************         
.*                                                                    *         
.*       Validate ERRTAB              Decimal number from 0 to 254    *         
.*                                     --- NOT PARSED ---             *         
.*                                                                    *         
.**********************************************************************         
.CKERR   ANOP                                                                   
         AIF   ('&ERRTAB' EQ '').CKEXP  ERRTAB not specified                    
         MNOTE 0,'004 ERRTAB KEYWORD IGNORED. IT IS NOT SUPPORTED BY TH*        
               E HCD.'                                                          
.**********************************************************************         
.*                                                                    *         
.*       Validate EXPBFR              Decimal number from 1 to 8192   *         
.*                                     --- NOT PARSED ---             *         
.*                                                                    *         
.**********************************************************************         
.CKEXP   ANOP                                                                   
         AIF   ('&EXPBFR' EQ '').ECKEXP EXPBFR not specified      @N6C          
         MNOTE 0,'004 EXPBFR KEYWORD IGNORED. IT IS NOT SUPPORTED BY TH*        
               E HCD.'                                                          
.ECKEXP  ANOP  ,                                                   @N6A         
.**********************************************************************         
.*                                                                    *         
.*       VALIDATE LOCANY              NO ! YES                    @N6A*         
.*                                                                    *         
.**********************************************************************         
.CKLOC   ANOP                                                      @N6A         
         AIF   ('&LOCANY' EQ '').ECKLOC    LOCANY NOT SPECIFIED    @N6A         
&FLAG2   SETA  &FLAG2+&LOCA           INDICATE LOCANY SPECIFIED    @N6A         
.CKLOC1  ANOP                                                      @N6A         
         AIF   ('&LOCANY' EQ 'NO').ECKLOC   DEFAULT (NO) SPECIFIED @N6A         
         AIF   ('&LOCANY' EQ 'N').ECKLOC    DEFAULT (NO) SPECIFIED @N6A         
         AIF   ('&LOCANY' EQ 'YES').CKLOC2  VALID LOCANY OPERAND   @N6A         
         AIF   ('&LOCANY' EQ 'Y').CKLOC2    VALID LOCANY OPERAND   @N6A         
         MNOTE 8,'043 LOCANY VALUE MUST BE YES, Y, NO OR N.'       @N6A         
&ERROR   SETB  1                      INDICATES ERROR              @N6A         
         AGO   .ECKLOC                CHECK NEXT KEYWORD           @N6A         
.CKLOC2  ANOP                                                      @N6A         
&PFLAG   SETA  &PFLAG+&LOCAY         INDICATE LOCANY=YES SPECIFIED @N6A         
.ECKLOC  ANOP                                                      @N6A         
.**********************************************************************         
.*                                                                    *         
.*       Validate FEATURE             1 - 10 characters               *         
.*                                                                    *         
.**********************************************************************         
.CKFEAT  ANOP                                                                   
&L       SETA  10                     Maximum FEATURE length                    
         AIF   ('&FEATURE' EQ '').CKMOD  FEATURE not specified                  
&FLAG1   SETA  &FLAG1+&FEAF           Indicate FEATURE specified                
&SUB     SETA  1                                                                
.*                                                                              
.*       Loop to check each element in the FEATURE sublist                      
.FELOOP  ANOP                                                                   
         AIF   ('&FEATURE(&SUB)' EQ '').FENULL  Null sublist entry              
         AIF (K'&FEATURE(&SUB) LE &L).NEXTFEA    Number of characters           
         MNOTE 8,'033 FEATURE PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L C*        
               HARACTERS.'                                                      
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTFEA               Process next entry in sublist             
.FENULL  MNOTE 8,'018 FEATURE SUBLIST ENTRY &SUB IS MISSING.'                   
&ERROR   SETB  1                      Indicates error                           
.NEXTFEA ANOP                         Process next FEATURE                      
&SUB     SETA  &SUB+1                 Points to next sublist entry              
         AIF   (&SUB LE N'&FEATURE).FELOOP  Another FEATURE left                
.**********************************************************************         
.*                                                                    *         
.*       Validate MODEL               1 - 4 characters                *         
.*                                                                    *         
.**********************************************************************         
.CKMOD   ANOP                                                                   
&L       SETA  4                      Maximum MODEL length                      
         AIF   ('&MODEL' EQ '').CKNUM  MODEL not specified                      
&FLAG1   SETA  &FLAG1+&MODF             Indicate MODEL specified                
         AIF   (N'&MODEL GT 1).SUBMOD   MODEL is in sublist format              
         AIF   (K'&MODEL LE &L).MODCHAR MAXIMUM NUMBER OF CHARACTERS            
         MNOTE 8,'033 MODEL PARAMETER EXCEEDS &L CHARACTERS.'                   
&ERROR   SETB  1                        Indicates error                         
         AGO   .CKNUM                   Check NUMSECT keyword                   
.SUBMOD  MNOTE 8,'014 MODEL PARAMETER MAY NOT BE A SUBLIST.'                    
&ERROR   SETB  1                        Indicates error                         
         AGO   .CKNUM                   Check NUMSECT keyword                   
.MODCHAR ANOP                                                                   
&NDX     SETA  1                      Point to 1st character                    
.*                                                                              
.*       LOOP TO VALIDATE EACH CHARACTER IN THE MODEL                           
.MODLOOP ANOP                                                                   
         AIF   ('&MODEL'(&NDX,1) EQ '@').GOODMOD  (@)              @H4A         
         AIF   ('&MODEL'(&NDX,1) EQ '#').GOODMOD  (#)              @H4A         
         AIF   ('&MODEL'(&NDX,1) EQ '$').GOODMOD  ($)              @H4A         
         AIF   ('&MODEL'(&NDX,1) LT 'A').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE 'I').GOODMOD  (A-I)                         
         AIF   ('&MODEL'(&NDX,1) LT 'J').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE 'R').GOODMOD  (J-R)                         
         AIF   ('&MODEL'(&NDX,1) LT 'S').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE 'Z').GOODMOD  (S-Z)                         
         AIF   ('&MODEL'(&NDX,1) LT '0').BADMOD                                 
         AIF   ('&MODEL'(&NDX,1) LE '9').GOODMOD   (0-9)                        
.BADMOD  ANOP                         INVALID CHARACTER                         
&CWK     SETC  '&MODEL'(&NDX,1)        Isolate invalid character                
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN MODEL PARAMETER.'           
&ERROR   SETB  1                      Indicates error                           
.GOODMOD ANOP                                                                   
&NDX     SETA  &NDX+1                 POINTS TO NEXT CHARACTER OF MODEL         
         AIF   (&NDX LE K'&MODEL).MODLOOP    CHECK NEXT CHARACTER               
.**********************************************************************         
.*                                                                    *         
.*       Validate NUMSECT             1 - 4 Decimal digits            *         
.*                                    Range: 0 - 4095                 *         
.*                                                                    *         
.**********************************************************************         
.CKNUM   ANOP                                                                   
&L       SETA  4                      Maximum NUMSECT length                    
&MAXVAL  SETA  4095                   Maximum NUMSECT value                     
         AIF   ('&NUMSECT' EQ '').CKOBR  NUMSECT not specified                  
&FLAG1   SETA  &FLAG1+&NUMF           Indicate NUMSECT specified                
         AIF   (N'&NUMSECT GT 1).SUBNUM   NUMSECT is in sublist format          
         AIF   (K'&NUMSECT LE &L).NUMLEN  Number of digits                      
         MNOTE 8,'023 NUMSECT PARAMETER EXCEEDS &L DIGITS.'                     
&ERROR   SETB  1                      Indicates error                           
.NUMLEN  ANOP                                                                   
&NDX     SETA  1                      Points to 1st digit of NUMSECT            
.*                                                                              
.*       Loop to validate each character in NUMSECT                             
.NUMLOOP ANOP                                                                   
         AIF   ('&NUMSECT'(&NDX,1) LT '0').BADNUM   Not decimal                 
         AIF   ('&NUMSECT'(&NDX,1) LE '9').GOODNUM  Valid digit (0-9)           
.BADNUM  ANOP                         Invalid DECIMAL digit                     
&CWK     SETC  '&NUMSECT'(&NDX,1)     Isolate invalid digit                     
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN NUMSECT PARAMET*        
               ER.'                                                             
&ERROR   SETB  1                      Indicates error                           
.GOODNUM ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF   (&NDX LE K'&NUMSECT).NUMLOOP  Check next digit                   
.*                                                                              
         AIF   (&NUMSECT GE 0 AND &NUMSECT LE &MAXVAL).CKOBR Valid @P2C         
         MNOTE 8,'042 NUMSECT VALUE MUST BE A NUMBER FROM 0 TO &MAXVAL.*        
               '                                                   @P2C         
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKOBR                 Check next keyword                        
.SUBNUM  MNOTE 8,'014 NUMSECT PARAMETER MAY NOT BE A SUBLIST.'                  
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                                                    *         
.*       Validate OBRCNT              --- NOT PARSED ---              *         
.*                                                                    *         
.**********************************************************************         
.CKOBR   ANOP                                                                   
         AIF   ('&OBRCNT' EQ '').CKOFF     OBRCNT not specified                 
         MNOTE *,'  *,005 OBRCNT KEYWORD IGNORED.'                              
.**********************************************************************         
.*                                                                    *         
.*       Validate OFFLINE             NO ! YES                        *         
.*                                                                    *         
.**********************************************************************         
.CKOFF   ANOP                                                                   
         AIF   ('&OFFLINE' EQ '').CKOPT    OFFLINE NOT SPECIFIED                
&FLAG1   SETA  &FLAG1+&OFFF           Indicate OFFLINE specified                
.CKOFF1  ANOP                                                                   
         AIF   ('&OFFLINE' EQ 'NO').CKOPT   Default (NO) specified              
         AIF   ('&OFFLINE' EQ 'N').CKOPT    Default (NO) specified              
         AIF   ('&OFFLINE' EQ 'YES').CKOFF2 OFFLINE=YES specified               
         AIF   ('&OFFLINE' EQ 'Y').CKOFF2   OFFLINE=Y   specified               
         MNOTE 8,'043 OFFLINE VALUE MUST BE YES, Y, NO or N'                    
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKOPT                 Check next keyword                        
.CKOFF2  ANOP                                                                   
&PFLAG   SETA  &PFLAG+&OFFY           INDICATE OFFLINE=YES SPECIFIED            
.**********************************************************************         
.*                                                                    *         
.*       Validate OPTCHAN             --- NOT PARSED ---  (370 only)  *         
.*                                                                    *         
.**********************************************************************         
.CKOPT   ANOP                                                                   
         AIF   ('&OPTCHAN' EQ '').CKPATH   OPTCHAN not specified                
         MNOTE *,'  *,005 OPTCHAN KEYWORD IGNORED.'                             
.**********************************************************************         
.*                                                                    *         
.*       Validate PATH                2 digit chpid number            *         
.*                                                                    *         
.**********************************************************************         
.CKPATH  ANOP                                                                   
&L       SETA  2                      Required PATH length                      
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&IPC     SETA  0                      Initially no path specified  @HHA         
         AIF   ('&PATH' EQ '').CKPCU   PATH not specified                       
&IOCPF1  SETA  &IOCPF1+&PATF          Indicate PATH specified                   
&SUB1    SETA  1                      Start with first sublist     @HHA         
         AIF   ('&PATH(1)'(1,5) EQ '(CSS(').MCSSP00  XMP syntax    @HHA         
         AIF (N'&PATH GT 1).PASUBLE   Operand is in sublist format              
&IPC     SETA 1                       Only for one CSS             @HHA         
&CSPID(&SUB1) SETA 0                  Default CSS id               @HHA         
         AGO  .PAIDLEN                                             @HHA         
.MCSSP00 ANOP ,                       Check XMP syntax             @HHA         
&MCSSP   SETB 1                       Indicates XMP syntax         @HHA         
&IOCPF2  SETA &IOCPF2+&CSSPF          Indicates CSS set            @HHA         
&IPC     SETA N'&PATH                 Number of sublists           @HHA         
         AIF  (&IC GT &MAXCSS).MCSPER0  Too many CSS               @HHA         
.MCSSP02 ANOP ,                       Loop body over sublists      @HHA         
         AIF  ('&PATH(&SUB1,1)'(1,4) NE 'CSS(').MCSPER2            @HHA         
&CSPID(&SUB1) SETA 0                  Test for CSS 0               @HHA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '0)').MCSSP20              @HHA         
&CSPID(&SUB1) SETA 1                  Test for CSS 1               @HHA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '1)').MCSSP20              @HHA         
&CSPID(&SUB1) SETA 2                  Test for CSS 2               @HHA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '2)').MCSSP20              @HHA         
&CSPID(&SUB1) SETA 3                  Test for CSS 3               @HHA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '3)').MCSSP20              @HHA         
&CSPID(&SUB1) SETA 4                  Test for CSS 4               @LGA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '4)').MCSSP20              @LGA         
&CSPID(&SUB1) SETA 5                  Test for CSS 5               @LGA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '5)').MCSSP20              @LGA         
&CSPID(&SUB1) SETA 6                  Test for CSS 6               @LGA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '6)').MCSSP20              @LGA         
&CSPID(&SUB1) SETA 7                  Test for CSS 7               @LGA         
         AIF  ('&PATH(&SUB1,1)'(5,2) EQ '7)').MCSSP20              @LGA         
         AGO  .MCSPER1                                             @HHA         
.MCSSP20 ANOP ,                                                    @HHA         
&CSSID   SETA &CSPID(&SUB1)           Set CSS id                   @HHA         
         AIF  (&CSPNO(&CSSID+1)).MCSPER3  Duplicate CSS specified  @HHA         
&CSPNO(&CSSID+1) SETB  1              Indicate CSS specified       @HHA         
.PAIDLEN ANOP ,                                                                 
         AIF  (&MCSSP).MCSSP05        Depending on format          @HHA         
&PATHID  SETC '&PATH'                 Isolate path                 @HHA         
         AGO  .MCSSP10                                             @HHA         
.MCSSP05 ANOP ,                                                    @HHA         
&PATHID  SETC '&PATH(&SUB1,2)'        Isolate path from XMP syntax @HHA         
.MCSSP10 ANOP ,                                                    @HHA         
         AIF (K'&PATHID NE &L).PAINLEN  Invalid length             @HHA         
&NDX     SETA 1                       Point to first digit                      
.*                                                                              
.*       Loop to validate each number in the chpid id                           
.PALOOP  ANOP                                                                   
         AIF ('&PATHID'(&NDX,1) LT 'A').BADPA   Invalid digit      @HHC         
         AIF ('&PATHID'(&NDX,1) LE 'F').GOODPA  Hex digit (A-F)    @HHC         
         AIF ('&PATHID'(&NDX,1) LT '0').BADPA   Invalid digit      @HHC         
         AIF ('&PATHID'(&NDX,1) LE '9').GOODPA  Hex digit (0-9)    @HHC         
.BADPA   ANOP                         Invalid character in path id              
&CWK     SETC '&PATHID'(&NDX,1)         Isolate invalid character  @HHC         
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN PATH PARAMETER.'            
&ERROR   SETB 1                       Indicate error                            
.GOODPA  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF (&NDX LE K'&PATHID).PALOOP Check next digit           @HHC         
&PTH(&SUB1) SETC '&PATHID'            Save path id                 @HHA         
&SUB1    SETA  &SUB1+1                Go to next sublist element   @HHA         
         AIF (&SUB1 LE &IPC).MCSSP02  Next sublist                 @HHA         
         AGO  .XPATH                  Check PCU keyword                         
.*                                                                              
.MCSPER0 MNOTE 8,'045 PATH PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRIES.'          
.*                                                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.MCSPER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF PATH PARAMETER IS INVA*        
               LID.'                                               @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.MCSPER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF PATH PARAMETER HAS*        
               AN INVALID FORMAT.'                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.MCSPER3 MNOTE 8,'045 CSS ID &CSSID SPECIFIED TWICE.'              @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPATH                 and exit                     @HHA         
.*                                                                              
.PAINLEN MNOTE 8,'022 PATH PARAMETER MUST BE &L DIGITS.'                        
&ERROR   SETB 1                       Indicate error                            
         AGO  .XPATH                  Go to end                    @HHA         
.PASUBLE MNOTE 8,'014 PATH PARAMETER MAY NOT BE A SUBLIST.'                     
&ERROR   SETB 1                       Indicate error                            
.XPATH   ANOP ,                                                    @HHA         
.**********************************************************************         
.*                                                                    *         
.*       Validate PCU                 Decimal number from 1 to 4095   *         
.*                                                                    *         
.**********************************************************************         
.CKPCU   ANOP                                                                   
&L       SETA  4                      Maximum PCU length                        
&MAXVAL  SETA  4095                   Maximum PCU value                         
         AIF   ('&PCU' EQ '').ENDPCU  PCU not specified            @HQA         
&FLAG2   SETA  &FLAG2+&PCUF           Indicate PCU specified                    
         AIF   (N'&PCU GT 1).SUBPCU   PCU is in sublist format                  
         AIF   (K'&PCU LE &L).PCULEN  Number of digits                          
         MNOTE 8,'023 PCU PARAMETER EXCEEDS &L DIGITS.'                         
&ERROR   SETB  1                      Indicates error                           
.PCULEN  ANOP                                                                   
&NDX     SETA  1                      Point to 1st digit                        
.*                                                                              
.*       Loop to validate each digit in the physical control unit ID            
.PCULOOP ANOP                                                                   
         AIF   ('&PCU'(&NDX,1) LT '0').BADPCU   Not decimal                     
         AIF   ('&PCU'(&NDX,1) LE '9').GOODPCU  Valid digit (0-9)               
.BADPCU  ANOP                         Invalid DECIMAL digit                     
&CWK     SETC  '&PCU'(&NDX,1)         Isolate invalid digit                     
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN PCU PARAMETER.'         
&ERROR   SETB  1                      Indicates error                           
.GOODPCU ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next digit in ID                
         AIF   (&NDX LE K'&PCU).PCULOOP  Check next digit                       
         AIF   (&PCU GE 1 AND &PCU LE &MAXVAL).ENDPCU Valid number @HQC         
         MNOTE 8,'042 PCU VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'            
&ERROR   SETB  1                      Indicates error                           
         AGO   .ENDPCU                Check next keyword           @HQC         
.SUBPCU  MNOTE 8,'014 PCU PARAMETER MAY NOT BE A SUBLIST.'                      
&ERROR   SETB  1                      Indicates error                           
.ENDPCU  ANOP  ,                                                   @HQA         
.**********************************************************************         
.*                                                                    *         
.*       Validate SCHSET              Value from 0 to 3           @LGC*         
.*                                                                    *         
.**********************************************************************         
.CKSCHS  ANOP                                                                   
&L       SETA  1                      Required SCHSET length       @HSA         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&ISC     SETA  0                      Initially no SCHSET specfied @HSA         
&MAXVAL  SETA  3                      Maximum SCHSET  value        @LGC         
&SSC     SETC  '0'                    Default subchannel set ID    @HSA         
         AIF   ('&SCHSET' EQ '').ENDSCH   SCHSET  not specified    @HSA         
&SUB1    SETA  1                      Start with first sublist     @HSA         
         AIF   ('&SCHSET(1)'(1,5) EQ '(CSS(').MCSSS00  XMP syntax  @HSA         
         AIF   ('&SCHSET'(1,5) EQ '(CSS(').MCSSS04 XMP syntax      @HSA         
         AIF (N'&SCHSET GT 1).SSSUBLE Operand is in sublist format @HSA         
&MCSSS   SETB 0                       Indicates SMP syntax         @HSA         
         AGO  .SSIDLEN                                             @HSA         
.MCSSS00 ANOP ,                       Check XMP syntax             @HSA         
&MCSSS   SETB 1                       Indicates XMP syntax         @HSA         
&ISC     SETA N'&SCHSET               Number of sublists           @HSA         
         AIF  (&IC GT &MAXCSS).MCSSSR0  Too many CSS               @HSA         
.MCSSS02 ANOP ,                       Loop body over sublists      @HSA         
         AIF  ('&SCHSET(&SUB1,1)'(1,4) NE 'CSS(').MCSSSR2          @HSA         
&SSPID(&SUB1) SETA 0                  Test for CSS 0               @HSA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '0)').MCSSS20            @HSA         
&SSPID(&SUB1) SETA 1                  Test for CSS 1               @HSA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '1)').MCSSS20            @HSA         
&SSPID(&SUB1) SETA 2                  Test for CSS 2               @HSA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '2)').MCSSS20            @HSA         
&SSPID(&SUB1) SETA 3                  Test for CSS 3               @HSA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '3)').MCSSS20            @HSA         
&SSPID(&SUB1) SETA 4                  Test for CSS 4               @LGA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '4)').MCSSS20            @LGA         
&SSPID(&SUB1) SETA 5                  Test for CSS 5               @LGA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '5)').MCSSS20            @LGA         
&SSPID(&SUB1) SETA 6                  Test for CSS 6               @LGA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '6)').MCSSS20            @LGA         
&SSPID(&SUB1) SETA 7                  Test for CSS 7               @LGA         
         AIF  ('&SCHSET(&SUB1,1)'(5,2) EQ '7)').MCSSS20            @LGA         
         AGO  .MCSSSR1                                             @HSA         
.MCSSS04 ANOP ,                                                    @HSA         
&MCSSS   SETB 1                       Indicates XMP syntax         @HSA         
&ISC     SETA 1                       Number of sublists           @HSA         
&SSPID(&SUB1) SETA 0                  Test for CSS 0               @HSA         
         AIF  ('&SCHSET(1)'(5,2) EQ '0)').MCSSS08                  @HSA         
&SSPID(&SUB1) SETA 1                  Test for CSS 1               @HSA         
         AIF  ('&SCHSET(1)'(5,2) EQ '1)').MCSSS08                  @HSA         
&SSPID(&SUB1) SETA 2                  Test for CSS 2               @HSA         
         AIF  ('&SCHSET(1)'(5,2) EQ '2)').MCSSS08                  @HSA         
&SSPID(&SUB1) SETA 3                  Test for CSS 3               @HSA         
         AIF  ('&SCHSET(1)'(5,2) EQ '3)').MCSSS08                  @HSA         
&SSPID(&SUB1) SETA 4                  Test for CSS 4               @LGA         
         AIF  ('&SCHSET(1)'(5,2) EQ '4)').MCSSS08                  @LGA         
&SSPID(&SUB1) SETA 5                  Test for CSS 5               @LGA         
         AIF  ('&SCHSET(1)'(5,2) EQ '5)').MCSSS08                  @LGA         
&SSPID(&SUB1) SETA 6                  Test for CSS 6               @LGA         
         AIF  ('&SCHSET(1)'(5,2) EQ '6)').MCSSS08                  @LGA         
&SSPID(&SUB1) SETA 7                  Test for CSS 7               @LGA         
         AIF  ('&SCHSET(1)'(5,2) EQ '7)').MCSSS08                  @LGA         
         AGO  .MCSSSR1                                             @HSA         
.MCSSS08 ANOP ,                                                    @HSA         
&SCHSETID SETC '&SCHSET(2)'           Isolate SSID from XMP syntax @HSA         
         AGO  .MCSSS10                                             @HSA         
.MCSSS20 ANOP ,                                                    @HSA         
&CSSID   SETA &SSPID(&SUB1)           Set CSS id                   @HSA         
         AIF  (&SSPNO(&CSSID+1)).MCSSSR3  Duplicate CSS specified  @HSA         
&SSPNO(&CSSID+1) SETB  1              Indicate CSS specified       @HSA         
.SSIDLEN ANOP ,                                                                 
         AIF  (&MCSSS).MCSSS05        Depending on format          @HSA         
&SCHSETID SETC '&SCHSET'              Isolate path                 @HSA         
         AGO  .MCSSS10                                             @HSA         
.MCSSS05 ANOP ,                                                    @HSA         
&SCHSETID SETC '&SCHSET(&SUB1,2)'     Isolate SSID from XMP syntax @HSA         
.MCSSS10 ANOP ,                                                    @HSA         
         AIF (K'&SCHSETID NE &L).SSINLEN Invalid length            @HSA         
         AIF   ('&SCHSETID' LT '0').BADSCHS  Invalid value         @HSA         
         AIF   (&SCHSETID LE &MAXVAL).GOODSS   Valid value SCHSET  @HSA         
.BADSCHS MNOTE 8,'042 SCHSET VALUE MUST BE A NUMBER FROM 0 TO &MAXVAL. *        
               '                                                   @HSA         
&ERROR   SETB  1                      Indicates error              @HSA         
.GOODSS  ANOP                                                      @HSA         
         AIF   (&MCSSS).MCSSS15       XMP format                   @HSA         
&SSC     SETC  '&SCHSET'              Sets subchannel set number   @HSA         
          AGO  .ENDSCH                Check next keyword           @HSA         
.MCSSS15 ANOP  ,                                                   @HSA         
&SCH(&SUB1) SETC '&SCHSETID'          Save subchannel set number   @HSA         
&SUB1    SETA  &SUB1+1                Go to next sublist element   @HSA         
         AIF (&SUB1 LE &ISC).MCSSS02  Next sublist                 @HSA         
         AGO  .ENDSCH                 Check next keyword           @HSA         
.*                                                                              
.MCSSSR0 MNOTE 8,'045 SCHSET PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRIES'         
&ERROR   SETB 1                        Indicate error              @HSA         
         AGO   .ENDSCH                and exit                     @HSA         
.*                                                                              
.MCSSSR1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF SCHSET PARAMETER IS IN*        
               VALID.'                                             @HSA         
&ERROR   SETB 1                        Indicate error              @HSA         
         AGO   .ENDSCH                and exit                     @HSA         
.*                                                                              
.MCSSSR2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF SCHSET PARAMETER H*        
               AS AN INVALID FORMAT.'                              @HSA         
&ERROR   SETB 1                        Indicate error              @HSA         
         AGO   .ENDSCH                and exit                     @HSA         
.*                                                                              
.MCSSSR3 MNOTE 8,'045 CSS ID &CSSID SPECIFIED TWICE.'              @HSA         
&ERROR   SETB 1                        Indicate error              @HSA         
         AGO   .ENDSCH                and exit                     @HSA         
.*                                                                              
.SSINLEN MNOTE 8,'022 SCHSET PARAMETER MUST BE &L DIGITS.'      @HSA            
&ERROR   SETB 1                       Indicate error               @HSA         
         AGO  .ENDSCH                 Go to end                    @HSA         
.SSSUBLE MNOTE 8,'014 SCHSET PARAMETER MAY NOT BE A SUBLIST.'      @HSA         
&ERROR   SETB 1                       Indicate error               @HSA         
.ENDSCH  ANOP  ,                                                   @HSA         
.**********************************************************************         
.*                                                                    *         
.*       Validate SETADDR             Value from 0 to 3               *         
.*                                                                    *         
.**********************************************************************         
.CKSETA  ANOP                                                                   
&MAXVAL  SETA  3                      Maximum SETADDR value                     
         AIF   ('&SETADDR' EQ '').CKSTAD   SETADDR not specified                
&FLAG2   SETA  &FLAG2+&SETF           Indicate SETADDR specified                
         AIF   ('&SETADDR' LT '0').BADSET   Invalid value                       
         AIF   (&SETADDR LE &MAXVAL).CKSTAD Valid value for SETADDR             
.BADSET  MNOTE 8,'042 SETADDR VALUE MUST BE A NUMBER FROM 0 TO &MAXVAL.*        
               '                                                                
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                                                    *         
.*       Validate STADET              Y ! N                           *         
.*                                                                    *         
.**********************************************************************         
.CKSTAD  ANOP                                                                   
         AIF   ('&STADET' EQ '').CKTCU       STADET not specified               
         AIF   ('&STADET' EQ 'Y').SETSTY     STADET=Y    specified              
         AIF   ('&STADET' NE 'YES').CKSTNO   check for STADET=N                 
         MNOTE 0,'044 STADET VALUE SHOULD BE Y OR N.'                           
.SETSTY  ANOP                                                                   
&IOCPF1  SETA  &IOCPF1+&STYF          Indicate STADET=Y specified               
         AGO   .CKTCU                 Check next keyword                        
.CKSTNO  ANOP                                                                   
         AIF   ('&STADET' EQ 'N').SETSTN   Valid STADET operand (N)             
         AIF   ('&STADET' NE 'NO').STADERR Invalid STADET operand               
         MNOTE 0,'044 STADET VALUE SHOULD BE Y OR N.'                           
.SETSTN  ANOP                                                                   
&IOCPF1  SETA  &IOCPF1+&STAF          Indicate STADET=N specified               
         AGO   .CKTCU                 Check next keyword                        
.STADERR ANOP                                                                   
         MNOTE 8,'044 STADET VALUE MUST BE Y OR N.'                             
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKTCU                 Check next keyword                        
.**********************************************************************         
.*                                                                    *         
.*       Validate TCU                 4 digit identifier              *         
.*                                                                    *         
.**********************************************************************         
.CKTCU   ANOP                                                                   
&L       SETA  4                      Required TCU length                       
         AIF   ('&TCU' EQ '').ECKTCU   TCU not specified           @L2C         
&FLAG2   SETA  &FLAG2+&TCUF           Indicate TCU specified                    
         AIF   (N'&TCU GT 1).TCUSUB   TCU is in sublist format                  
         AIF   (K'&TCU LE &L).ECKTCU  Number of digits             @L2C         
         MNOTE 8,'033 TCU PARAMETER EXCEEDS &L CHARACTERS.'                     
&ERROR   SETB  1                      Indicates error                           
         AGO   .ECKTCU                Check next keyword           @L2C         
.TCUSUB  MNOTE 8,'014 TCU PARAMETER MAY NOT BE A SUBLIST.'                      
&ERROR   SETB  1                      Indicates error                           
.ECKTCU  ANOP  ,                                                   @L2A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate OWNER               1 to 8 characters           @L2A*         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                  Maximum name length              @L2A         
         AIF   ('&OWNER' EQ '').EOWNR  OWNER not specified         @L2A         
         AIF   (K'&OWNER GT &L).OWNRER3 owner name is too long     @L2A         
&FLAG2   SETA  &FLAG2+&OWNR           INDICATE OWNER   SPECIFIED   @L2A         
         ALPHANUM STRING=&OWNER          check device owner to     @L2A         
.*                                       be alphanumeric           @L2A         
         AIF   (&INTERR).OWNRER4         invalid character found   @L2A         
         AGO   .EOWNR                 Go to end of OWNER           @L2A         
.*                                                                 @L2A         
.OWNRER3 ANOP  ,                                                   @L2A         
         MNOTE 8,'033 OWNER PARAMETER EXCEEDS &L CHARACTERS.'      @L2A         
.*                                                                 @L2A         
&ERROR   SETB  1                       Indicates error             @L2A         
         AGO   .EOWNR                  and continue                @L2A         
.*                                                                 @L2A         
.OWNRER4 ANOP  ,                                                   @L2A         
         MNOTE 8,'047 INVALID CHARACTER ''&CWK'' IN OWNER PARAMETER.'           
.*                                                                 @L2A         
.EOWNR   ANOP  ,                                                   @L2A         
.**********************************************************************         
.*                                                                    *         
.*       Validate TIMEOUT             Y ! N                           *         
.*                                                                    *         
.**********************************************************************         
.CKTIME  ANOP                                                                   
         AIF   ('&TIMEOUT' EQ '').CKUNIT     TIMEOUT not specified              
         AIF   ('&TIMEOUT' EQ 'Y').SETTMY    TIMEOUT=Y   specified              
         AIF   ('&TIMEOUT' NE 'YES').CKTMNO  check for TIMEOUT=N                
         MNOTE 0,'044 TIMEOUT VALUE SHOULD BE Y OR N.'                          
.SETTMY  ANOP                                                                   
&IOCPF1  SETA  &IOCPF1+&TMYF          Indicate TIMEOUT=Y specified              
         AGO   .CKUNIT                Check next keyword                        
.CKTMNO  ANOP                                                                   
         AIF   ('&TIMEOUT' EQ 'N').SETTMN  Valid TIMEOUT operand (N)            
         AIF   ('&TIMEOUT' NE 'NO').TIMEERR Invalid TIMEOUT operand             
         MNOTE 0,'044 TIMEOUT VALUE SHOULD BE Y OR N.'                          
.SETTMN  ANOP                                                                   
&IOCPF1  SETA  &IOCPF1+&TIMF          Indicate TIMEOUT=N specified              
         AGO   .CKUNIT                Check next keyword                        
.TIMEERR ANOP                                                                   
         MNOTE 8,'044 TIMEOUT VALUE MUST BE Y OR N.'                            
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKUNIT                Check next keyword                        
.**********************************************************************         
.*                                                                    *         
.*       Validate UNIT                1 - 8 characters                *         
.*                                                                    *         
.**********************************************************************         
.CKUNIT  ANOP                                                                   
&L       SETA  8                      Maximum UNIT length                       
         AIF   ('&UNIT' EQ '').NOUNIT  UNIT not specified                       
&FLAG2   SETA  &FLAG2+&UNIF             Indicate UNIT specified                 
         AIF   (N'&UNIT GT 1).SUBUNIT   UNIT is in sublist format               
         AIF   (K'&UNIT LE &L).UNICHAR  MAXIMUM NUMBER OF CHARACTERS            
         MNOTE 8,'033 UNIT PARAMETER EXCEEDS &L CHARACTERS.'                    
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKUNAD                Check next keyword                        
.SUBUNIT MNOTE 8,'014 UNIT PARAMETER MAY NOT BE A SUBLIST.'                     
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKUNAD                Check next keyword                        
.NOUNIT  MNOTE 8,'002 UNIT KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKUNAD                Check next keyword                        
.UNICHAR ANOP                                                                   
&NDX     SETA  1                      Point to 1st character                    
.*                                                                              
.*       Loop to validate each character in the UNIT name                       
.UNILOOP ANOP                                                                   
         AIF   ('&UNIT'(&NDX,1) EQ '@').GOODUNI   (@)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '#').GOODUNI   (#)              @H4A         
         AIF   ('&UNIT'(&NDX,1) EQ '$').GOODUNI   ($)              @H4A         
         AIF   ('&UNIT'(&NDX,1) LT 'A').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'I').GOODUNI   (A-I)                         
         AIF   ('&UNIT'(&NDX,1) LT 'J').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'R').GOODUNI   (J-R)                         
         AIF   ('&UNIT'(&NDX,1) LT 'S').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE 'Z').GOODUNI   (S-Z)                         
         AIF   ('&UNIT'(&NDX,1) LT '0').BADUNI                                  
         AIF   ('&UNIT'(&NDX,1) LE '9').GOODUNI   (0-9)                         
.BADUNI  ANOP                         Invalid character                         
&CWK     SETC  '&UNIT'(&NDX,1)        Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN UNIT PARAMETER.'            
&ERROR   SETB  1                      Indicates error                           
.GOODUNI ANOP                                                                   
&NDX     SETA  &NDX+1                 Points to next character of UNIT          
         AIF   (&NDX LE K'&UNIT).UNILOOP    Check next character                
.**********************************************************************         
.*                                                                    *         
.*       Validate UNITADD             2 digit unit address number     *         
.*                                                                    *         
.**********************************************************************         
.CKUNAD  ANOP                                                                   
&L       SETA  2                      Required UNITADD length                   
         AIF   ('&UNITADD' EQ '').CKDEV   UNITADD not specified                 
&UNIADF  SETB  1                      Indicate occurance of UNITADD             
&IOCPF1  SETA  &IOCPF1+&UNAF          Indicate UNITADD specified                
         AIF (N'&UNITADD GT 1).UNSUBLE    Operand is in sublist format          
.*                                                                              
         AIF (K'&UNITADD EQ &L).UNIDLEN   Length of chpid (no parens)           
.*                                                                              
         MNOTE 8,'022 UNITADD PARAMETER MUST BE &L DIGITS.'                     
&ERROR   SETB 1                       Indicate error                            
.UNIDLEN ANOP                                                                   
&NDX     SETA 1                       Point to first digit                      
.*                                                                              
.*       Loop to validate each number in the chpid id                           
.UNLOOP  ANOP                                                                   
         AIF ('&UNITADD'(&NDX,1) LT 'A').BADUN   Invalid digit                  
         AIF ('&UNITADD'(&NDX,1) LE 'F').GOODUN  Hex digit (A-F)                
         AIF ('&UNITADD'(&NDX,1) LT '0').BADUN   Invalid digit                  
         AIF ('&UNITADD'(&NDX,1) LE '9').GOODUN  Hex digit (0-9)                
.BADUN   ANOP                         Invalid character in UNITADD id           
.*                                                                              
&CWK     SETC '&UNITADD'(&NDX,1)      Isolate invalid character                 
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN UNITADD PARAMETER.'         
.*                                                                              
&ERROR   SETB 1                       Indicate error                            
.GOODUN  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF (&NDX LE K'&UNITADD).UNLOOP Check next digit                       
         AGO  .CKDEV                  Check DEV keyword                         
.UNSUBLE MNOTE 8,'014 UNITADD PARAMETER MAY NOT BE A SUBLIST.'                  
&ERROR   SETB 1                       Indicate error                            
.**********************************************************************         
.*                                                                    *         
.*       Validate DEVNUMBR            4 digit device number           *         
.*                                                                    *         
.**********************************************************************         
.CKDEV   ANOP                                                                   
&L       SETA  4                      Required DEVNUMBR length                  
         AIF   ('&DEVNUMBR' EQ '').XCKDEV  DEVNUMBR  not specified @LBC         
         AIF   (&UNIADF EQ 1).BOTHBAD                                           
         AGO   .DVONLY                                                          
.BOTHBAD MNOTE 8,'039 ONLY DEVNUMBR OR UNITADD PARAMETER CAN BE SPECIFI*        
               ED'                                                              
&ERROR   SETB 1                       Indicate error                            
.DVONLY  ANOP                                                                   
&IOCPF1  SETA  &IOCPF1+&DEVF          Indicate DEVNUMBR specified               
         AIF (N'&DEVNUMBR GT 1).DVSUBLE   Operand is in sublist format          
.*                                                                              
         AIF (K'&DEVNUMBR EQ &L).DVIDLEN  Length of chpid (no parens)           
.*                                                                              
         MNOTE 8,'022 DEVNUMBR PARAMETER MUST BE &L DIGITS.'                    
&ERROR   SETB 1                       Indicate error                            
.DVIDLEN ANOP                                                                   
&NDX     SETA 1                       Point to first digit                      
.*                                                                              
.*       Loop to validate each number in the chpid id                           
.DVLOOP  ANOP                                                                   
         AIF ('&DEVNUMBR'(&NDX,1) LT 'A').BADDV  Invalid digit                  
         AIF ('&DEVNUMBR'(&NDX,1) LE 'F').GOODDV Hex digit (A-F)                
         AIF ('&DEVNUMBR'(&NDX,1) LT '0').BADDV  Invalid digit                  
         AIF ('&DEVNUMBR'(&NDX,1) LE '9').GOODDV Hex digit (0-9)                
.BADDV   ANOP                         Invalid character in DEVNUMBR id          
.*                                                                              
&CWK     SETC '&DEVNUMBR'(&NDX,1)     Isolate invalid character                 
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN DEVNUMBR PARAMETER.*        
               '                                                                
.*                                                                              
&ERROR   SETB 1                       Indicate error                            
.GOODDV  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF (&NDX LE K'&DEVNUMBR).DVLOOP Check next digit                      
         AGO  .XCKDEV                 and continue                 @LBA         
.DVSUBLE MNOTE 8,'014 DEVNUMBR PARAMETER MAY NOT BE A SUBLIST.'                 
&ERROR   SETB 1                       Indicate error                            
.XCKDEV  ANOP                                                      @LBA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PARTITION           (name,name,name,....)           *         
.*                         or     ((CSS(n),name1,...),....)       @HHC*         
.*                                                                    *         
.**********************************************************************         
&MAXSUB  SETA  128                    Maximum number of partitions @LGC         
&MAXSUB1 SETA  15                     Maximum number of partitions @HHA         
&PACT    SETA  0                      Initialize number of entries in  *        
                                      partition table              @LBA         
&MCSSP   SETB  0                      Initialize CSS keyword given @05A         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&CSSID   SETA  128                    Initialize partition CSS msk @HKA         
         AIF   ('&PARTITION' EQ '').XPART1 PARTITION not specified @LBA         
&IOCPF2  SETA &IOCPF2+&PARF           Indicate PARTITION specified @LTA         
.*                                                                              
&MULT    SETB  0                      Assume single list           @HHA         
&SUB1    SETA  1                      Start with first CSS         @HHA         
.PART000 ANOP  ,                                                   @HHA         
         AIF   ('&PARTITION(&SUB1)'(1,5) EQ '(CSS(').MCSS00  XMP   @HHA         
&IC      SETA  1                      Only one CSS                 @HHA         
         AIF   ('&PARTITION'(1,5) EQ '(CSS(').MCSS02  XMP          @HHA         
&MCSS    SETB  0                      SMP syntax                   @HHA         
&SUB     SETA  1                      1st entry is partition       @HHA         
&IP      SETA  N'&PARTITION           Number of elements in sublst @HHA         
&PANUM   SETA  N'&PARTITION           Number of elements in sublst @HHA         
         AGO   .PART010               Check partition entries      @HHA         
.MCSS00  ANOP  ,                                                   @HHA         
&IC      SETA  N'&PARTITION           Number of CSS sublists       @HHA         
&MULT    SETB  1                      Multiple CSS list            @HHA         
.MCSS02  ANOP  ,                                                   @HHA         
         AIF   (&IC GT &MAXCSS).MCSSER0  Too many CSS sublists     @HHA         
&MCSS    SETB  1                      Indicate CSS specified       @HHA         
         AIF  (&MCSSP).MCSS03                                      @HHA         
&IOCPF2  SETA &IOCPF2+&CSSF           Indicate CSS specified       @HHA         
&MCSSP   SETB  1                      Indicate CSS spec w/ part    @HHA         
.MCSS03  ANOP  ,                                                   @HHA         
         AIF   (&MULT).MCSS09         Multi-list                   @HHA         
&PARTS   SETC  '&PARTITION(1)'        Isolate CSS(n)               @HHA         
         AGO   .MCSS10                                             @HHA         
.MCSS09  ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PARTITION(&SUB1,1)'  Isolate CSS(n)               @HHA         
.MCSS10  ANOP  ,                      Loop over CSS sublists       @HHA         
         AIF   (K'&PARTS NE 6).MCSSER2                             @HHA         
         AIF   ('&PARTS'(1,4) NE 'CSS(').MCSSER2                   @HHA         
&CSSID   SETA  128                    Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  0                 Check for CSS 0              @HHA         
         AIF   ('&PARTS'(5,2) EQ '0)').MCSS20                      @HHA         
&CSSID   SETA  64                     Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  1                 Check for CSS 1              @HHA         
         AIF   ('&PARTS'(5,2) EQ '1)').MCSS20                      @HHA         
&CSSID   SETA  32                     Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  2                 Check for CSS 2              @HHA         
         AIF   ('&PARTS'(5,2) EQ '2)').MCSS20                      @HHA         
&CSSID   SETA  16                     Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  3                 Check for CSS 3              @HHA         
         AIF   ('&PARTS'(5,2) EQ '3)').MCSS20                      @HHA         
&CSSID   SETA  8                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  4                 Check for CSS 4              @LGA         
         AIF   ('&PARTS'(5,2) EQ '4)').MCSS20                      @LGA         
&CSSID   SETA  4                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  5                 Check for CSS 5              @LGA         
         AIF   ('&PARTS'(5,2) EQ '5)').MCSS20                      @LGA         
&CSSID   SETA  2                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  6                 Check for CSS 6              @LGA         
         AIF   ('&PARTS'(5,2) EQ '6)').MCSS20                      @LGA         
&CSSID   SETA  1                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  7                 Check for CSS 7              @LGA         
         AIF   ('&PARTS'(5,2) EQ '7)').MCSS20                      @LGA         
         AGO   .MCSSER1               Invalid CSS id               @HHA         
.MCSS20  ANOP  ,                                                   @HHA         
&SUB     SETA  2                      Partition start index        @HHA         
         AIF   (&MULT).MCSS22                                      @HHA         
&IP      SETA  N'&PARTITION           Number of elements in list   @HHA         
&PANUM   SETA  N'&PARTITION-1         Number of partitions         @HHA         
         AGO   .MCSS24                                             @HHA         
.MCSS22  ANOP  ,                                                   @HHA         
&IP      SETA  N'&PARTITION(&SUB1)    Number of elements in sublst @HHA         
&PANUM   SETA  N'&PARTITION(&SUB1)-1  Number of elements in sublst @HHA         
.MCSS24  ANOP  ,                                                   @HHA         
         AIF   (&CSSLI(&CSID(&SUB1)+1)).MCSSER3  Duplicate CSS id  @HHA         
&CSSLI(&CSID(&SUB1)+1) SETB 1         Indicate CSS id occurred     @HHA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.PART010 ANOP ,                                                    @LBA         
         AIF   (&PANUM GT &MAXSUB1).PARTE15                        @HHA         
         AIF   (&MULT).MCSS30                                      @HHA         
&PARTS   SETC  '&PARTITION(&SUB)'     Isolate partition name       @HHA         
&POS     SETC  '&SUB'                           sub entry position @HHA         
         AGO   .MCSS40                                             @HHA         
.MCSS30  ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PARTITION(&SUB1,&SUB)'    Isolate partition name  @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.')'       sub entry position @HHA         
.MCSS40  ANOP  ,                                                   @HHA         
         AIF   ('&PARTS' EQ '').PARTNXT    No partition spec'd     @HHC         
         AIF   (('&PARTS' NE '0') OR (&PANUM NE 1)).MCSS45         @HKA         
&PCSSM   SETA  &PCSSM+&CSSID                                       @HKA         
         AGO   .PARTNXT               Iterate                      @HKA         
.MCSS45  ANOP  ,                                                   @HKA         
         PARTTEST NAME=&PARTS,SUB=&POS                             @HHC         
         AIF   (NOT &$ERR).PART020    Continue of no error detected@LBA         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .PARTNXT               and continue                 @LBA         
.*                                                                              
.PART020 ANOP ,                                                    @LBA         
         AIF  (&PACT EQ &MAXSUB).PARTE01  Number of sublists > max @LBA         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition table              @LBA         
&PA(&PACT) SETC '&PARTS'              Save partition name          @HHC         
&CSS(&PACT) SETA &CSID(&SUB1)         Save CSS id                  @HHA         
&PAF(&PACT) SETA &PARF                Save PARTITION flag          @HHA         
.*                                                                              
.PARTNXT ANOP                         Process next partition       @LBA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA         
         AIF  (&SUB LE &IP).PART010   More partition's ...         @HHC         
.*                                                                              
&SUB1    SETA  &SUB1+1                Go to next CSS               @HHA         
         AIF  (&SUB1 LE &IC).MCSS09   More CSSs                    @HHA         
         AGO  .XPART1                 and continue                 @LBA         
.*                                                                              
.PARTE01 ANOP  ,                                                   @LBA         
         MNOTE 8,'054 PARTITION PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRI*        
               ES.'                                                @LBA         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART1                and continue                 @LBA         
.*                                                                              
.XPART1  ANOP  ,                                                   @LBA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PART parameter      (name,name,name,....)           *         
.*                         or     ((CSS(n),name1,...),....)       @HHC*         
.*                                                                    *         
.**********************************************************************         
&MAXSUB  SETA  128                    Maximum number of partitions @LGC         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
&CSSID   SETA  128                    Initialize partition CSS msk @HKA         
         AIF   ('&PART' EQ '').XPART2 PART parameter not spec'ed   @LBA         
         AIF   (('&PART' NE '') AND ('&PARTITION' NE '')).PARTE20  @HHA         
&IOCPF2  SETA &IOCPF2+&PARF           Indicate PARTITION specified @LTA         
.*                                                                              
&MULT    SETB  0                      Assume single list           @HHA         
&SUB1    SETA  1                      Start with first CSS         @HHA         
.PART500 ANOP  ,                                                   @HHA         
         AIF   ('&PART(&SUB1)'(1,5) EQ '(CSS(').MCSS100 XMP syntax @HHA         
&IC      SETA  1                      Only one CSS                 @HHA         
         AIF   ('&PART'(1,5) EQ '(CSS(').MCSS102 XMP               @HHA         
&MCSS    SETB  0                      SMP syntax                   @HHA         
&SUB     SETA  1                      1st entry is partition       @HHA         
&IP      SETA  N'&PART                Number of elements in sublst @HHA         
&PANUM   SETA  N'&PART                Number of elements in sublst @HHA         
         AGO   .PART510               Check partition entries      @HHA         
.MCSS100 ANOP  ,                                                   @HHA         
&IC      SETA  N'&PART                Number of CSS sublists       @HHA         
&MULT    SETB  1                      Multi-CSS list               @HHA         
.MCSS102 ANOP  ,                                                   @HHA         
         AIF   (&IC GT &MAXCSS).MCSSER0  Too many CSS sublists     @HHA         
&MCSS    SETB  1                      Indicate CSS specified       @HHA         
         AIF  (&MCSSP).MCSS103                                     @HHA         
&IOCPF2  SETA &IOCPF2+&CSSF           Indicate CSS specified       @HHA         
&MCSSP   SETB  1                      Indicate CSS spec w/ part    @HHA         
.MCSS103 ANOP  ,                                                   @HHA         
         AIF   (&MULT).MCSS109        Multi-list                   @HHA         
&PARTS   SETC  '&PART(1)'             Isolate CSS(n)               @HHA         
         AGO   .MCSS110                                            @HHA         
.MCSS109 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PART(&SUB1,1)'       Isolate CSS(n)               @HHA         
.MCSS110 ANOP  ,                      Loop over CSS sublists       @HHA         
         AIF   (K'&PARTS NE 6).MCSSER2                             @HHA         
         AIF   ('&PARTS'(1,4) NE 'CSS(').MCSSER2                   @HHA         
&CSSID   SETA  128                    Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  0                 Check for CSS 0              @HHA         
         AIF   ('&PARTS'(5,2) EQ '0)').MCSS120                     @HHA         
&CSSID   SETA  64                     Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  1                 Check for CSS 1              @HHA         
         AIF   ('&PARTS'(5,2) EQ '1)').MCSS120                     @HHA         
&CSSID   SETA  32                     Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  2                 Check for CSS 2              @HHA         
         AIF   ('&PARTS'(5,2) EQ '2)').MCSS120                     @HHA         
&CSSID   SETA  16                     Set CSS occurrence flag      @HKA         
&CSID(&SUB1)  SETA  3                 Check for CSS 3              @HHA         
         AIF   ('&PARTS'(5,2) EQ '3)').MCSS120                     @HHA         
&CSSID   SETA  8                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  4                 Check for CSS 4              @LGA         
         AIF   ('&PARTS'(5,2) EQ '4)').MCSS120                     @LGA         
&CSSID   SETA  4                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  5                 Check for CSS 5              @LGA         
         AIF   ('&PARTS'(5,2) EQ '5)').MCSS120                     @LGA         
&CSSID   SETA  2                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  6                 Check for CSS 6              @LGA         
         AIF   ('&PARTS'(5,2) EQ '6)').MCSS120                     @LGA         
&CSSID   SETA  1                      Set CSS occurrence flag      @LGA         
&CSID(&SUB1)  SETA  7                 Check for CSS 7              @LGA         
         AIF   ('&PARTS'(5,2) EQ '7)').MCSS120                     @LGA         
         AGO   .MCSSER1               Invalid CSS id               @HHA         
.MCSS120 ANOP  ,                                                   @HHA         
&SUB     SETA  2                      Partition start index        @HHA         
         AIF   (&MULT).MCSS122                                     @HHA         
&IP      SETA  N'&PART                Number of elements in list   @HHA         
&PANUM   SETA  N'&PART-1              Number of partitions         @HHA         
         AGO   .MCSS124                                            @HHA         
.MCSS122 ANOP  ,                                                   @HHA         
&IP      SETA  N'&PART(&SUB1)         Number of elements in sublst @HHA         
&PANUM   SETA  N'&PART(&SUB1)-1       Number of partitions         @HHA         
.MCSS124 ANOP  ,                                                   @HHA         
         AIF   (&CSSLI(&CSID(&SUB1)+1)).MCSSER3  Duplicate CSS id  @HHA         
&CSSLI(&CSID(&SUB1)+1) SETB 1         Indicate CSS id occurred     @HHA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.PART510 ANOP ,                                                    @LBA         
         AIF   (&PANUM GT &MAXSUB1).PARTE15                        @HHA         
         AIF   (&MULT).MCSS130                                     @HHA         
&PARTS   SETC  '&PART(&SUB)'          Isolate partition name       @HHA         
&POS     SETC  '&SUB'                           sub entry position @HHA         
         AGO   .MCSS140                                            @HHA         
.MCSS130 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&PART(&SUB1,&SUB)'    Isolate partition name       @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.')'       sub entry position @HHA         
.MCSS140 ANOP  ,                                                   @HHA         
         AIF   ('&PARTS' EQ '').PART550    No partition spec'd     @HHC         
         AIF   (('&PARTS' NE '0') OR (&PANUM NE 1)).MCSS145        @HKA         
&PCSSM   SETA  &PCSSM+&CSSID                                       @HKA         
         AGO   .PART550               Iterate                      @HKA         
.MCSS145 ANOP  ,                                                   @HKA         
         PARTTEST NAME=&PARTS,SUB=&POS  Validate part name         @HHC         
         AIF   (NOT &$ERR).PART520    Continue of no error detected@HHC         
&ERROR   SETB  1                      Otherwise indicate error     @LBA         
         AGO   .PART550               and continue                 @HHC         
.*                                                                              
.PART520 ANOP ,                                                    @LBA         
         AIF  (&PACT EQ &MAXSUB).PARTE10  Number of sublists > max @LBA         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition table              @LBA         
&PA(&PACT) SETC '&PARTS'              Save partition name          @HHC         
&CSS(&PACT) SETA &CSID(&SUB1)         Save CSS id                  @HHA         
&PAF(&PACT) SETA &PARF                Save PARTITION flag          @HHA         
.*                                                                              
.*                                                                              
.PART550 ANOP                         Process next partition       @HHC         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LBA         
         AIF  (&SUB LE &IP).PART510   More partition's ...         @HHC         
.*                                                                              
&SUB1    SETA  &SUB1+1                Go to next CSS               @HHA         
         AIF  (&SUB1 LE &IC).MCSS109  More CSSs                    @HHA         
         AGO  .XPART2                 and continue                 @LBA         
.*                                                                              
.PARTE10 ANOP  ,                                                   @LBA         
         MNOTE 8,'054 PART PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES.' *        
                                                                   @LBA         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART2                and continue                 @LBA         
.*                                                                              
.PARTE15 ANOP  ,                                                   @LBA         
         MNOTE 8,'054 PART PARAMETER EXCEEDS &MAXSUB1 PARTITION NAMES.'*        
                                                                   @LBA         
&ERROR   SETB  1                      Indicates error              @LBA         
         AGO   .XPART2                and continue                 @LBA         
.*                                                                              
.PARTE20 ANOP  ,                                                   @HHA         
         MNOTE 8,'051 PART PARAMETER AND PARTITION PARAMETER ARE MUTUAL*        
               LY EXCLUSIVE'.                                      @HHA         
&ERROR   SETB  1                      Indicates error              @HHA         
         AGO   .XPART2                and continue                 @HHA         
.*                                                                              
.MCSSER0 MNOTE 8,'045 PARTITION PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRI*        
               ES.'                                                @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART2                and exit                     @HHA         
.*                                                                              
.MCSSER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF PARTTION PARAMETER IS *        
               INVALID.'                                           @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART2                and exit                     @HHA         
.*                                                                              
.MCSSER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF PARTITION PARAMETE*        
               R HAS AN INVALID FORMAT.'                           @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART2                and exit                     @HHA         
.*                                                                              
.MCSSER3 MNOTE 8,'045 DUPLICATE CSS ID &CSID(&SUB1) IN &PARTITION PARAM*        
               ETER.'                                              @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART2                and exit                     @HHA         
.*                                                                              
.*                                                                              
.XPART2  ANOP  ,                                                   @LBA         
.*                                                                              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate NOTPART parameter   (name,name,name,....)           *         
.*                  or            ((CSS(n),name1,...),...)        @HHC*         
.*                                                                    *         
.**********************************************************************         
&MAXSUB  SETA  128                    Maximum number of partitions @LGC         
&MAXCSS  SETA  8                      Maximum number of CSS        @LGC         
         AIF   ('&NOTPART' EQ '').XPART3 NOTPART not specified     @LTA         
         AIF   (NOT (&MCSS) AND                                        *        
               (('&PART' NE '') OR ('&PARTITION' NE '')) AND           *        
               ('&NOTPART' NE '')).NPRTE02  invalid combination    @HHC         
&IOCPF2  SETA &IOCPF2+&NPAF           Indicate NOTPART specified   @LTA         
.*                                                                              
&MULT    SETB  0                      Assume single list           @HHA         
&SUB1    SETA  1                      Start with first CSS         @HHA         
.NPRT500 ANOP  ,                                                   @HHA         
         AIF   ('&NOTPART(&SUB1)'(1,5) EQ '(CSS(').MCSSN00 XMP     @HHA         
&IC      SETA  1                      Only one CSS                 @HHA         
         AIF   ('&NOTPART'(1,5) EQ '(CSS(').MCSSN02 XMP            @HHA         
         AIF   ((('&PART' NE '') OR ('&PARTITION' NE '')) AND          *        
               ('&NOTPART' NE '')).NPRTE02  invalid combination    @LTA         
&MCSS    SETB  0                      SMP syntax                   @HHA         
&SUB     SETA  1                      1st entry is partition       @HHA         
&IP      SETA  N'&NOTPART             Number of elements in sublst @HHA         
&PANUM   SETA  N'&NOTPART             Number of partitions         @HHA         
         AGO   .NPRT110               Check partition entries      @HHA         
.MCSSN00 ANOP  ,                                                   @HHA         
&IC      SETA  N'&NOTPART             Number of CSS sublists       @HHA         
&MULT    SETB  1                      Multi-CSS list               @HHA         
.MCSSN02 ANOP  ,                                                   @HHA         
         AIF   (&IC GT &MAXCSS).MCSNER0  Too many CSS sublists     @HHA         
&MCSS    SETB  1                      Indicate CSS specified       @HHA         
         AIF  (&MCSSP).MCSSN03        IOCP flag already set        @HHA         
&IOCPF2  SETA &IOCPF2+&CSSF           Indicate CSS specified       @HHA         
&MCSSP   SETB  1                      Indicate CSS w/ part         @HHA         
.MCSSN03 ANOP  ,                      Loop over CSS sublists       @HHA         
         AIF   (&MULT).MCSSN09        Multi-list                   @HHA         
&PARTS   SETC  '&NOTPART(1)'          Isolate CSS(n)               @HHA         
         AGO   .MCSSN10                                            @HHA         
.MCSSN09 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&NOTPART(&SUB1,1)'    Isolate CSS(n)               @HHA         
.MCSSN10 ANOP  ,                                                   @HHA         
         AIF   (K'&PARTS NE 6).MCSNER2                             @HHA         
         AIF   ('&PARTS'(1,4) NE 'CSS(').MCSNER2                   @HHA         
&CSID(&SUB1)  SETA  0                 Check for CSS 0              @HHA         
         AIF   ('&PARTS'(5,2) EQ '0)').MCSSN20                     @HHA         
&CSID(&SUB1)  SETA  1                 Check for CSS 1              @HHA         
         AIF   ('&PARTS'(5,2) EQ '1)').MCSSN20                     @HHA         
&CSID(&SUB1)  SETA  2                 Check for CSS 2              @HHA         
         AIF   ('&PARTS'(5,2) EQ '2)').MCSSN20                     @HHA         
&CSID(&SUB1)  SETA  3                 Check for CSS 3              @HHA         
         AIF   ('&PARTS'(5,2) EQ '3)').MCSSN20                     @HHA         
&CSID(&SUB1)  SETA  4                 Check for CSS 4              @LGA         
         AIF   ('&PARTS'(5,2) EQ '4)').MCSSN20                     @LGA         
&CSID(&SUB1)  SETA  5                 Check for CSS 5              @LGA         
         AIF   ('&PARTS'(5,2) EQ '5)').MCSSN20                     @LGA         
&CSID(&SUB1)  SETA  6                 Check for CSS 6              @LGA         
         AIF   ('&PARTS'(5,2) EQ '6)').MCSSN20                     @LGA         
&CSID(&SUB1)  SETA  7                 Check for CSS 7              @LGA         
         AIF   ('&PARTS'(5,2) EQ '7)').MCSSN20                     @LGA         
         AGO   .MCSNER1               Invalid CSS id               @HHA         
.MCSSN20 ANOP  ,                                                   @HHA         
&SUB     SETA  2                      Partition start index        @HHA         
         AIF   (&MULT).MCSSN22                                     @HHA         
&IP      SETA  N'&NOTPART             Number of elements in list   @HHA         
&PANUM   SETA  N'&NOTPART-1           Number of partitions         @HHA         
         AGO   .MCSSN24                                            @HHA         
.MCSSN22 ANOP  ,                                                   @HHA         
&IP      SETA  N'&NOTPART(&SUB1)      Number of elements in sublst @HHA         
&PANUM   SETA  N'&NOTPART(&SUB1)-1    Number of partitions         @HHA         
.MCSSN24 ANOP  ,                                                   @HHA         
         AIF   (&CSSLI(&CSID(&SUB1)+1)).MCSNER3  Duplicate CSS id  @HHA         
&CSSLI(&CSID(&SUB1)+1) SETB 1         Indicate CSS id occurred     @HHA         
.*                                                                              
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.NPRT110 ANOP ,                                                    @LTA         
         AIF   (&PANUM GT &MAXSUB1).NPRTE03                        @HHA         
         AIF   (&MULT).MCSSN30                                     @HHA         
&PARTS   SETC  '&NOTPART(&SUB)'       Isolate partition name       @HHA         
&POS     SETC  '&SUB'                           sub entry position @HHA         
         AGO   .MCSSN40                                            @HHA         
.MCSSN30 ANOP  ,                                                   @HHA         
&PARTS   SETC  '&NOTPART(&SUB1,&SUB)'    Isolate partition name    @HHA         
&POS     SETC  '('.'&SUB1'.','.'&SUB'.')'       sub entry position @HHA         
.MCSSN40 ANOP  ,                                                   @HHA         
         AIF   ('&PARTS' EQ '').NPRT150    No partition spec'd     @HHC         
         PARTTEST NAME=&PARTS,SUB=&POS Validate part name          @HHC         
         AIF   (NOT &$ERR).NPRT120    Continue of no error detected@LTA         
&ERROR   SETB  1                      Otherwise indicate error     @LTA         
         AGO   .NPRT150               and continue                 @LTA         
.*                                                                              
.NPRT120 ANOP ,                                                    @LTA         
         AIF  (&PACT EQ &MAXSUB).NPRTE10  Number of sublists > max @LTA         
&PACT    SETA  &PACT+1                Increment  number of entries in  *        
                                      partition table              @LTA         
&PA(&PACT) SETC '&PARTS'              Save partition name          @HHC         
&CSS(&PACT) SETA &CSID(&SUB1)         Save CSS id                  @HHA         
&PAF(&PACT) SETA &NPAF                Save NOTPART flag            @HHA         
.*                                                                              
.NPRT150 ANOP                         Process next partition       @LTA         
&SUB     SETA &SUB+1                  Point to next sublist entry  @LTA         
         AIF  (&SUB LE &IP).NPRT110   More partition's ...         @HHC         
.*                                                                              
&SUB1    SETA  &SUB1+1                Go to next CSS               @HHA         
         AIF  (&SUB1 LE &IC).MCSSN09  More CSSs                    @HHA         
         AGO  .XPART3                 and continue                 @HHA         
.*                                                                              
.NPRTE10 ANOP  ,                                                   @LTA         
         MNOTE 8,'054 NOTPART PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES*        
               .'                                                  @LTA         
.*                                                                 @LTA         
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XPART3                and continue                 @LTA         
.*                                                                              
.NPRTE02 ANOP  ,                                                   @LTA         
         MNOTE 8,'051 NOTPART PARAMETER AND PARTITION PARAMETER ARE MUT*        
               UALLY EXCLUSIVE.'                                   @LTA         
.*                                                                 @LTA         
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XPART3                and continue                 @LTA         
.*                                                                              
.NPRTE03 ANOP  ,                                                   @LTA         
         MNOTE 8,'054 NOTPART PARAMETER EXCEECS &MAXSUB1 PARTITION NAME*        
               S.'                                                 @LTA         
.*                                                                 @LTA         
&ERROR   SETB  1                      Indicates error              @LTA         
         AGO   .XPART3                and continue                 @LTA         
.*                                                                              
.MCSNER0 MNOTE 8,'045 NOTPART PARAMETER EXCEEDS &MAXCSS SUBLIST ENTRIES*        
               .'                                                  @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART3                and exit                     @HHA         
.*                                                                              
.MCSNER1 MNOTE 8,'045 CSS ID in SUBLIST &SUB1 OF NOTPART PARAMETER IS I*        
               NVALID.'                                            @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART3                and exit                     @HHA         
.*                                                                              
.MCSNER2 MNOTE 8,'045 CSS FORMAT IN SUBLIST &SUB1 OF NOTPART PARAMETER *        
               HAS AN INVALID FORMAT.'                             @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART3                and exit                     @HHA         
.*                                                                              
.MCSNER3 MNOTE 8,'045 DUPLICATE CSS ID &CSID(&SUB1) IN NOTPART PARAMETE*        
               R.'                                                 @HHA         
&ERROR   SETB 1                        Indicate error              @HHA         
         AGO   .XPART3                and exit                     @HHA         
.*                                                                              
.*                                                                              
.XPART3  ANOP  ,                                                   @LTA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate DESC                0 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  32                 Maximum description length       @N3A         
         AIF   ('&DESC' EQ '').DENULL   DESC is null               @N3A         
         AIF   ('&DESC'(1,1) EQ '''').DELEN  Must be in quotes     @N3A         
.*                                   (Asmblr checks for end quote) @N3A         
         MNOTE 8,'008 DESC VALUE MUST BE ENCLOSED IN QUOTES.'      @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
         AGO   .EDESC                 Go to end of parameter       @N3A         
.DELEN   ANOP                                                      @N3A         
&DESCR   SETC  '&DESC'                Set description              @N3A         
&LEN     SETA  K'&DESC-2              Length of description        @N3A         
         AIF   (&LEN  LE 0).DENULL    Check for zero length        @N3A         
&DSC     SETC  '&DESC'(2,&LEN)                                     @L2A         
         STRLEN STRING=&DSC           Determine length of string   @L2A         
&LEN     SETA  &$STRLEN               Get string length back       @L2A         
         AIF   (&LEN  LE &L).EDESC    Less than maximum            @N3A         
         MNOTE 8,'033 DESC PARAMETER EXCEEDS &L CHARACTERS.'       @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
         AGO   .EDESC                 Go to end of parameter       @N3A         
.DENULL  ANOP                                                      @N3A         
&DESCR   SETC  ''' '''                Set to blank                 @N3A         
.EDESC   ANOP  ,                                                   @N3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate SERIAL              1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  10                     Maximum length               @N3A         
         AIF   ('&SERIAL' EQ '').ESERN    SERIAL is null           @N3A         
&SERR    SETC  '&SERIAL'                Set serial number          @M5A         
&LEN     SETA  K'&SERIAL              Length of description        @L2A         
         AIF   ('&SERIAL'(1,1) NE '''').SERLN  Not in quotes       @M5A         
&LEN     SETA  K'&SERIAL-2            Length of description        @N3A         
&SERR    SETC  '&SERIAL'(2,&LEN)        Set serial number          @M5A         
         STRLEN STRING=&SERR            Determine length           @M5A         
&LEN     SETA  &$STRLEN               Set length of string         @M5A         
.SERLN   ANOP  ,                                                   @M5A         
         AIF   (&LEN      LE &L).ESERN    Less than maximum        @M5A         
         MNOTE 8,'033 SERIAL PARAMETER EXCEEDS &L CHARACTERS.'     @N3A         
&ERROR   SETB  1                      Indicate error               @N3A         
.ESERN   ANOP  ,                                                   @N3A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate VOLSER              1 to &L EBCDIC characters       *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  6                      Maximum length               @C3A         
         AIF   ('&VOLSER' EQ '').EVOLN    VOLSER is null           @C3A         
&VOLS    SETC  '&VOLSER'                Set volume serial number   @C3A         
&LEN     SETA  K'&VOLSER              Length of volser             @L2A         
         AIF   ('&VOLSER'(1,1) NE '''').VOLLN  Not in quotes       @L2A         
&LEN     SETA  K'&VOLSER-2            Length of volser             @L2A         
&VOLS    SETC  '&VOLSER'(2,&LEN)        Set volser number          @L2A         
         STRLEN STRING=&VOLS            Determine length           @L2A         
&LEN     SETA  &$STRLEN               Set length of string         @L2A         
.VOLLN   ANOP  ,                                                   @L2A         
         AIF   (&LEN      LE &L).EVOLN    Less than maximum        @C3A         
         MNOTE 8,'033 VOLSER PARAMETER EXCEEDS &L CHARACTERS.'     @C3A         
&ERROR   SETB  1                      Indicate error               @C3A         
.EVOLN   ANOP  ,                                                   @C3A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate PPRCUSE             1 character                 @L7A*         
.*                                                                    *         
.**********************************************************************         
&L       SETA  1                      Maximum length               @L7A         
         AIF   ('&PPRCUSE' EQ '').EPPRCN  PPRCUSE is null          @L7A         
&LEN     SETA  K'&PPRCUSE             Length of PPRCUSE            @L7A         
         AIF   (&LEN EQ &L).EPPRCN                                 @L7A         
         MNOTE 8,'033 INVALID LENGTH OF PPRCUSE PARAMETER'         @L7A         
&ERROR   SETB  1                      Indicate error               @L7A         
.EPPRCN  ANOP  ,                                                   @L7A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate USERPRM    list of sublists                         *         
.*                           ((parmid,(value1,...),...)               *         
.*                           describing parameter id, (list of)   @M4A*         
.*                           parameter value(s)                   @M4A*         
.*                           for user-defined parameters          @M4A*         
.*                                                                    *         
.**********************************************************************         
.CKUSRP  ANOP                                                                   
&MAXSUB  SETA  32                      Max number of sublist entr. @M4A         
&L       SETA  10                      Maximum length of parm id   @M4A         
&L1      SETA  2                       Maximum length of sublist   @M4A         
         AIF  ('&USERPRM' EQ '').XUSRP   USERPRM not specified     @M4A         
         AIF  ('&USERPRM'(1,2) EQ '((').USRP100 Double parentheses @M4A         
&SINGLE  SETB 1                        Indicate single entry       @M4A         
&NUSRP   SETA 1                        Only 1 subentry             @M4A         
         AGO   .USRP105                                            @M4A         
.USRP100 ANOP  ,                                                   @M4A         
         AIF  (N'&USERPRM GT &MAXSUB).USRPE01 Higher number of         *        
                                       operands than in USERPRM    @M4A         
&NUSRP   SETA  N'&USERPRM              Set number of subentries    @M4A         
&SINGLE  SETB  0                       Indicate list               @M4A         
.USRP105 ANOP  ,                                                   @M4A         
&SUB     SETA  1                                                   @M4A         
.USRP110 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).USRP115                                   @M4A         
         AIF   ('&USERPRM(&SUB)' EQ '').USRPE06 Entry omitted      @M4A         
         AIF   (N'&USERPRM(&SUB) NE &L1).USRPE03 Sublist not 2 ent @M4A         
&UPRMID(&SUB)  SETC  '&USERPRM(&SUB,1)'       Save parameter id    @M4A         
         AGO   .USRP118                                            @M4A         
.USRP115 ANOP  ,                                                   @M4A         
         AIF   (N'&USERPRM NE &L1).USRPE03 Sublist not 2 entries   @M4A         
&UPRMID(&SUB)  SETC  '&USERPRM(1)'            Save parameter id    @M4A         
.USRP118 ANOP  ,                                                   @M4A         
         AIF   ('&UPRMID(&SUB)' EQ '').USRPE02  No parameter id    @M4A         
         AIF   (K'&UPRMID(&SUB) GT &L).USRPE05  Parm id > 10 chars @M4A         
.*                                                                 @M4A         
.USRP120 ANOP  ,                                                   @M4A         
&NDX     SETA  1                                                   @M4A         
         AIF   (&SINGLE).USRP125                                   @M4A         
.USRP122 ANOP  ,                                                   @M4A         
&AWK     SETA  (&SUB-1)*8+&NDX                   Position of value @M4A         
&UPRMVAL(&AWK) SETC  '&USERPRM(&SUB,2,&NDX)' Save parm value       @M4A         
         AIF   ('&UPRMVAL(&AWK)' EQ '').USRPE02                    @M4A         
         AIF   (&UPRMVLN(&SUB) GE K'&UPRMVAL(&AWK)).USRP123        @M4A         
&UPRMVLN(&SUB) SETA K'&UPRMVAL(&AWK)        Set value length       @M4A         
.USRP123 ANOP  ,                                                   @M4A         
&NDX     SETA  &NDX+1                                              @M4A         
         AIF   (&NDX LE N'&USERPRM(&SUB,2)).USRP122                @M4A         
         AGO   .USRP150                                            @M4A         
.USRP125 ANOP  ,                                                   @M4A         
&AWK     SETA  (&SUB-1)*8+&NDX                    Position of value@M4A         
&UPRMVAL(&AWK) SETC  '&USERPRM(2,&NDX)' Save parm value            @M4A         
         AIF   ('&UPRMVAL(&AWK)' EQ '').USRPE02                    @M4A         
         AIF   (&UPRMVLN(&SUB) GE K'&UPRMVAL(&AWK)).USRP130        @M4A         
&UPRMVLN(&SUB) SETA K'&UPRMVAL(&AWK)     Set value length          @M4A         
.USRP130 ANOP  ,                                                   @M4A         
&NDX     SETA  &NDX+1                                              @M4A         
         AIF   (&NDX LE N'&USERPRM(2)).USRP125                     @M4A         
.*                                                                 @M4A         
.USRP150 ANOP  ,                                                   @M4A         
&UPRMVCT(&SUB) SETA &NDX-1                  Set value count        @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
         AIF   (&SUB LE &NUSRP).USRP110 More user parameters       @M4A         
         AGO   .XUSRP                                              @M4A         
.*                                                                 @M4A         
.USRPE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 USERPRM PARAMETER EXCEEDS &MAXSUB ENTRIES.'  @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 PARAMETER ID OR VALUE REQUIRED IN SUBLIST ENTRY &*        
               SUB OF USERPRM PARAMTER.'                           @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 USERPRM PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN*        
                &L1 ENTRIES.'                                      @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 PARAMETER ID MUST NOT EXCEED &L CHARACTERS.'     *        
                                                                   @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.XUSRP   ANOP  ,                                                   @M4A         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found           
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr           
         DC    CL8'&UNIT'             Unit name specified (device type)         
         DC    H'0'                   UIM index for generic device              
         AIF   (&UNIADF EQ 1).YUNIAD  UNITADD specified                         
         DC    XL1'00'                UNITADD not specified, set to 0           
.*                                                                              
         AGO   .NUNIAD                                                          
.YUNIAD  ANOP                                                                   
         DC    XL1'&UNITADD'          UNITADD specified                         
.NUNIAD  ANOP                                                                   
         DC    AL1(0)                 Reserved                                  
         AIF   ('&DEVNUMBR' EQ '').NOIODVN DEVNUMBR not specified               
         DC    XL2'&DEVNUMBR'         DEVNUMBR                                  
         AGO   .EDEVNUM               Done with DEVNUMBR keyword                
.NOIODVN ANOP                                                                   
         DC    XL2'00'                DEVNUMBR  (not specified)                 
.EDEVNUM ANOP                                                                   
         DC    XL2'&ADDRESS(1)'       2 Hex Digit Device Address                
         AIF   (N'&ADDRESS EQ 2).GENACNT  Replication factor specified          
         DC    H'0'                   Number of multiple devices                
         DC    XL1'80'                UIM Internal flag byte                    
.*                                   Ifb = multiple devices defaulted           
         AGO   .EGADDR                Done with ADDRESS keyword                 
.GENACNT DC    H'&ADDRESS(2)'         Number of multiple devices                
         DC    XL1'00'                UIM Internal flag byte                    
.*                                   Ifb = multiple devices specified           
.EGADDR  ANOP                                                                   
         DC    XL1'00'                Reserved                                  
&AWK     SETA  N'&CUNUMBR-&CUASTRK    Number of entries in CUNUMBR list         
         AIF   (&AWK EQ 0).NOCUNUM    No CUNUMBR list                           
         DC    A(@C&CNO)              Pointer to CUNUMBR list                   
         AGO   .GENCCNT               Done with CUNUMBR pointer                 
.NOCUNUM DC    A(0)                   No CUNUMBR list                           
.GENCCNT DC    H'&AWK'                Number of entries in CUNUMBR list         
         ANOP                                                                   
&AWK     SETA  N'&FEATURE             Number of entries in FEATURE list         
         DC    H'&AWK'                Number of entries in FEATURE list         
         AIF   (N'&FEATURE EQ 0).NOFEATP  No FEATURE list                       
         DC    A(@F&CNO)              Pointer to FEATURE list                   
         AGO   .EGFEAT                Done with FEATURE count                   
.NOFEATP DC    A(0)                   No FEATURE list                           
.EGFEAT  ANOP                                                                   
         DC    AL1(&FLAG1)            Keyword flag byte 1                       
         DC    AL1(&FLAG2)            Keyword flag byte 2                       
         DC    AL1(0)                 Reserved for flags                        
         DC    AL1(0)                 Reserved for flags                        
         DC    AL4(0)                 Reserved for flags                        
         DC    AL1(&IOCPF1)           IOCP-only keyword flag byte               
         DC    AL1(&IOCPF2)           IOCP-only keyword flag byte2 @LTA         
         DC    AL2(0)                 Reserved for flags           @LTC         
         AIF   ('&MODEL' EQ '').NOMOD  MODEL not specified                      
         DC    CL4'&MODEL'            Model                                     
         AGO   .EGMODEL               Done with MODEL keyword                   
.NOMOD   DC    CL4' '                 Model (not specified)                     
.EGMODEL ANOP                                                                   
.NOEXP   ANOP                                                                   
         DC    AL1(&PFLAG)            Parameter flags                           
         DC    AL1(0)                 Reserved                                  
         AIF   ('&NUMSECT' EQ '').NONUM  NUMSECT not specified                  
         DC    H'&NUMSECT'            NUMSECT                                   
         AGO   .EGNUM                 Done with NUMSECT keyword                 
.NONUM   DC    H'0'                   NUMSECT (not specified)                   
.EGNUM   ANOP                                                                   
         AIF   ('&TCU' EQ '').NOTCU  TCU not specified                          
         DC    CL4'&TCU'              TCU                                       
         AGO   .EGTCU                 Done with TCU keyword                     
.NOTCU   DC    CL4' '                 TCU (not specified)                       
.EGTCU   ANOP                                                                   
         DC    AL2(&IPC)              Number of preferred paths    @HHC         
.*       AIF   ('&PATH' EQ '').NOPATH PATH not specified                        
.*       DC    XL1'&PATH'           Channel PATH id                             
.*       AGO   .EGPATH                Done with PATH keyword                    
.NOPATH  DC    XL1'00'                PATH (not specified)                      
.EGPATH  ANOP                                                                   
         AIF   ('&SETADDR' EQ '').NOSET  SETADDR not specified                  
         DC    AL1(&SETADDR)          SETADDR                                   
         AGO   .EGSET                 Done with SETADDR keyword                 
.NOSET   DC    AL1(0)                 SETADDR (not specified)                   
.EGSET   ANOP                                                                   
         AIF   ('&ADAPTER' EQ '').NOADAPT  ADAPTER not specified                
         DC    CL5'&ADAPTER'          Adapter                                   
         AGO   .EGADAPT               Done with ADAPTER keyword                 
.NOADAPT DC    CL5' '                 Adapter (not specified)                   
.EGADAPT ANOP                                                                   
         AIF   ('&SCHSET' EQ '').NOSCHST  SCHSET not specified     @HQA         
         DC    AL1(&SSC)              Subchannel set number        @HSC         
         AGO   .EGSCHST               Done with SCHSET keyword     @HQA         
.NOSCHST DC    AL1(0)                 Subchannel set number        @HQA         
.EGSCHST ANOP                                                      @HQA         
         AIF   ('&PCU' EQ '').NOPCU  PCU not specified                          
         DC    AL2(&PCU)              PCU number                                
         AGO   .EGPCU                 Done with PCU keyword                     
.NOPCU   DC    AL2(0)                 PCU number (not specified)                
.EGPCU   ANOP                                                                   
         DC    XL6'00'                Reserved - do not use        @LEC         
         AIF   (&NUSRP EQ 0).NOUSRP   No user parameters           @M4A         
&CWK     SETC  '@XL&CNO'              Label of extension area len  @M4A         
&CWK     DC    AL2(0)                 Length of extension area     @M4A         
         DC    A(@X&CNO)              Pointer to extension area    @M4A         
         AGO   .GENFEAS               branch to generate features  @M4A         
.NOUSRP  ANOP  ,                                                   @M4A         
         DC    AL2(0)                 Reserved - do not use                     
         DC    AL4(0)                 Reserved - do not use                     
.GENFEAS ANOP  ,                                                   @M4A         
         DC    XL8'00'                Feature bit string                        
         AIF   ('&OWNER' EQ '').NOOWNER No owner specified         @L2A         
         DC    CL8'&OWNER'            Owner identification                      
         AGO   .EGNOWNR               Branch to owner generated    @L2A         
.NOOWNER ANOP  ,                                                   @L2A         
         DC    CL8' '                 No owner idenfication        @L2A         
.EGNOWNR ANOP  ,                                                   @L2A         
.*                                                                              
         AIF   (&PACT EQ 0).NOPARTS   Partition list empty                      
         DC    A(@P&CNO)              Pointer to partition list    @LBA         
         AGO   .GENPACT               branch to continue           @LBA         
.NOPARTS DC    A(0)                   No partition list exists     @LBA         
.GENPACT DC    H'&PACT'               Number of entries in partition   *        
                                      list                         @LBA         
         AIF   ('&DESC' NE '' OR  '&SERIAL' NE '').NODSCP no list  @N3A         
         DC    AL2(0)                 Number of entries in device      *        
                                      description list             @N3C         
         DC    A(0)                   No device description list       *        
                                      exists                       @N3A         
         AGO   .EDSCP                                              @N3A         
.NODSCP  ANOP  ,                      No description list          @N3A         
         DC    AL2(1)                 Number of entries in device      *        
                                      description list             @N3C         
         DC    A(@D&CNO)              Address of description list  @N3A         
.EDSCP   ANOP  ,                      No description list          @N3A         
         DC    XL4'00'                Reserved                     @HSC         
         DC    AL1(&ISC)              Number of subchannel set IDs @HSA         
         AIF   ('&PPRCUSE' EQ '').NOPPRCU   No PPRCUSE specified   @L7A         
         DC    CL1'&PPRCUSE'          PPRC usage                   @L7A         
         AGO   .EPPRCU                                             @L7A         
.NOPPRCU DC    CL1' '                 No PPRC usage                @L7A         
.EPPRCU  ANOP  ,                                                   @L7A         
         DC    XL2'00'                Reserved                     @L7C         
         AIF   ('&VOLS' EQ '').NOVOLS    No VOLSER specified       @L2C         
         DC    CL6'&VOLS'             Volume serial number         @L2C         
         AGO   .EVOLS                                              @C3A         
.NOVOLS  DC    CL6' '                 No volume serial number      @C3A         
.EVOLS   ANOP  ,                                                   @C3A         
         DC    XL1'00'                Reserved                     @HKC         
         DC    AL1(&PCSSM)            CSS mask of null dev cand lst@HKA         
         AIF   (&PACT EQ 0).NOPART2   Partition list empty                      
         DC    A(@S&CNO)              Pointer to partition status  @HHA         
         AGO   .XNOPRT2               branch to continue           @LBA         
.NOPART2 DC    A(0)                   No partition list exists     @LBA         
.XNOPRT2 ANOP  ,                                                   @HHA         
         AIF   (&IPC EQ 0).NOPATH2    Path list is empty           @HHA         
         DC    A(@PT&CNO)             Pointer to path list         @HHA         
         AGO   .XNOPTH2               Branch to continue           @HHA         
.NOPATH2 DC    A(0)                   No path list exists          @HHA         
.XNOPTH2 ANOP  ,                                                   @HHA         
         AIF   (&ISC EQ 0).NOSCHS2    Subchannel set number empty  @HSA         
         DC    A(@SS&CNO)             Pointer to subchannel set lst@HSA         
         AGO   .XNOSCH2               Branch to continue           @HSA         
.NOSCHS2 DC    A(0)                   No subchannel set list exists@HSA         
.XNOSCH2 ANOP  ,                                                   @HSA         
.*                                                                              
.*                                                                              
&AWK     SETA  N'&CUNUMBR-&CUASTRK    Number of entries in CUNUMBR list         
         AIF   (&AWK EQ 0).EGCU       No CUNUMBR list                           
         SPACE 1                                                                
&SUB     SETA  1                      Point to first CUNUMBR                    
&CWK     SETC  '@C&CNO'               Label for first control unit              
.CUGEN   ANOP                                                                   
         AIF   ('&CUNUMBR(&SUB)'(1,1) EQ '*').EGCUL  Do not generate            
&CWK     DC    XL2'&CUNUMBR(&SUB)'    Control unit number                       
&CWK     SETC  ''                     Blank out the label                       
.EGCUL   ANOP                                                                   
&SUB     SETA &SUB+1                  Point to next sublist entry               
         AIF  (&SUB LE N'&CUNUMBR).CUGEN   Go insert next cu id                 
.EGCU    ANOP                                                                   
.*                                                                              
         AIF   (N'&FEATURE EQ 0).EGFEATX FEATURE list not specified@LBC         
         SPACE 1                                                                
&SUB     SETA  1                      Point to first FEATURE                    
&CWK     SETC  '@F&CNO'               Label for 1st FEATURE in list             
.FEATGEN ANOP                                                                   
&CWK     DC    CL10'&FEATURE(&SUB)'   Feature                                   
&CWK     SETC  ''                     Blank out label                           
&SUB     SETA  &SUB+1                 Points to next entry in array             
         AIF   (&SUB LE N'&FEATURE).FEATGEN  Processes next FEATURE             
.EGFEATX ANOP                                                      @LBA         
.*                                                                              
         AIF   (&PACT EQ 0).EGPART   Partition list empty          @LBA         
         SPACE 1                                                   @LBA         
*---------------- Device Partition Candidate List ---------------- @LBA         
&SUB     SETA  1                      Point to first partition     @LBA         
&CWK     SETC  '@P&CNO'               Label for first partition    @LBA         
.PARTGEN ANOP  ,                                                   @LBA         
&CWK     DC    CL8'&PA(&SUB)'         Partition                    @LBA         
&CWK     SETC  ''                     Blank out label              @LBA         
&SUB     SETA  &SUB+1                 Point to next entry in array              
         AIF   (&SUB LE &PACT).PARTGEN  Process next partition in list *        
                                                                   @LBA         
&SUB     SETA  1                      Point to first partition     @HHA         
&CWK     SETC  '@S&CNO'               Label for first partition    @HHA         
.STATGEN ANOP  ,                                                   @HHA         
&CWK     DC    AL1(&CSS(&SUB))        CSS id                       @HHA         
         DC    AL1(&PAF(&SUB))        Inclusion/exclusion flag     @HHA         
&CWK     SETC  ''                     Blank out label              @HHA         
&SUB     SETA  &SUB+1                 Point to next entry in array              
         AIF   (&SUB LE &PACT).STATGEN  Process next partition in list *        
                                                                   @HHA         
.EGPART  ANOP  ,                                                   @LBA         
.*                                                                              
         AIF   (&IPC EQ 0).EGPAT2    Path list empty               @HHA         
         SPACE 1                                                   @HHA         
*---------------- Preferred Channel Path list -------------------- @HHA         
&SUB     SETA  1                      Point to first path          @HHA         
&CWK     SETC  '@PT&CNO'              Label for first path         @HHA         
.PATHGEN ANOP  ,                                                   @HHA         
&CWK     DC    XL1'&PTH(&SUB)'        Preferred Channel path       @HHA         
         DC    AL1(&CSPID(&SUB))      CSS id                       @HHA         
&CWK     SETC  ''                     Blank out label              @HHA         
&SUB     SETA  &SUB+1                 Point to next entry in array @HHA         
         AIF   (&SUB LE &IPC).PATHGEN  Process next path in list   @HHA         
.EGPAT2  ANOP  ,                                                   @HHA         
.*                                                                              
         AIF   (&ISC EQ 0).EGSCH2    Subchannel set list empty     @HSA         
         SPACE 1                                                   @HSA         
*---------------- Subchannel set number list --------------------- @HSA         
&SUB     SETA  1                      Point to first path          @HHA         
&CWK     SETC  '@SS&CNO'              Label for first SCHS entry   @HSA         
.SCHSGEN ANOP  ,                                                   @HSA         
&CWK     DC    XL1'&SCH(&SUB)'        Subchannel set number        @HSA         
         DC    AL1(&SSPID(&SUB))      CSS id                       @HSA         
&CWK     SETC  ''                     Blank out label              @HSA         
&SUB     SETA  &SUB+1                 Point to next entry in array @HSA         
         AIF   (&SUB LE &ISC).SCHSGEN  Process next SCHSET in list @HSA         
.EGSCH2  ANOP  ,                                                   @HSA         
.*                                                                              
         AIF   ('&DESC' EQ '' AND '&SERIAL' EQ '').EDESCP empty    @N3A         
         SPACE 1                                                   @N3A         
*---------------- Device Description List  ----------------------- @N3A         
&CWK     SETC  '@D&CNO'               Label for first description  @N3A         
.DESCGEN ANOP  ,                                                   @N3A         
         AIF   ('&SERIAL' EQ '').NOSRN No serial number specified  @N3A         
&CWK     DC    CL10'&SERR'            Serial number                @N3A         
         AGO   .ESRNP                                              @N3A         
.NOSRN   ANOP  ,                      No serial number specified   @N3A         
&CWK     DC    CL10' '                Serial number                @N3A         
.ESRNP   ANOP  ,                                                   @N3A         
         DC    XL2'00'                Reserved                     @N3A         
         AIF   ('&DESC' EQ '').NODESCP No description              @N3A         
         DC    CL32&DESCR             Description                  @N3A         
         AGO   .EDESCP                                             @N3A         
.NODESCP ANOP  ,                      No description   specified   @N3A         
         DC    CL32' '                Description                  @N3A         
.EDESCP  ANOP  ,                                                   @N3A         
.*                                                                 @M4A         
.XPRMGEN ANOP                                                      @M4A         
         AIF   (&NUSRP EQ 0).XPRMEND                               @M4A         
&XLEN    SETA  0                      Initialize length of area    @M4A         
&CWK     SETC  '@X&CNO'               Label for 1st user parameter              
.*                                        list                     @M4A         
&CWK     DS    0F                     Start of user parameter list @M4A         
&SUB     SETA  1                      Address parameter            @M4A         
.XPRMID  ANOP  ,                                                   @M4A         
         DC    CL10'&UPRMID(&SUB)'     Parameter id                @M4A         
         DC    AL1(&UPRMVLN(&SUB))     Length of values            @M4A         
         DC    AL1(&UPRMVCT(&SUB))     number of values            @M4A         
&XLEN    SETA  &XLEN+12               Increment length of area     @M4A         
&NDX     SETA  1                      Point to 1st parameter value @M4A         
.XPRMVAL ANOP  ,                                                   @M4A         
&AWK     SETA  (&SUB-1)*8+&NDX                   Position of value @M4A         
         DC    CL&UPRMVLN(&SUB)'&UPRMVAL(&AWK)' Parameter value    @M4A         
&XLEN    SETA  &XLEN+&UPRMVLN(&SUB)   Increment length of area     @M4A         
&NDX     SETA  &NDX+1                 Point to next parm value     @M4A         
         AIF   (&NDX LE &UPRMVCT(&SUB)).XPRMVAL                    @M4A         
&SUB     SETA  &SUB+1                 Point to next parameter      @M4A         
         AIF   (&SUB LE &NUSRP).XPRMID More user parameters        @M4A         
&CWK     SETC  '@XL&CNO'              Label of extension area len  @M4A         
         ORG   &CWK                   Point to area length field   @M4A         
         DC    AL2(&XLEN)             Inserts extension area length@M4A         
         ORG   ,                                                   @M4A         
.XPRMEND ANOP  ,                                                   @M4A         
&CWK     SETC  ''                     Blank out label              @N3A         
.*                                                                              
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - HCDEND - LAST TEXT HEADER'                  
         MACRO  --  GENERATE LAST TEXT HEADER                                   
&SYMBOL  HCDEND                                                                 
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = HCDEND                                          */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Generate last Text Header                 */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL HCDEND                                               */         
*/*                                                                  */         
*/*01*  FUNCTION =  The HCDEND macro is used to provide the          */         
*/*                 final text header information for the end of     */         
*/*                 the text chain.                                  */         
*/*                                                                  */         
*/*01*  NOTES =                                                      */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT  =  None.                                              */         
*/*                                                                  */         
*/*01*  OUTPUT =  Common header information.                         */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
&SYMBOL  TXTHDR HCDEND                                                          
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - HCDSEP - SEPERATOR TEXT RECORD'             
         MACRO  --  GENERATE SEPERATOR TEXT HEADER                              
&SYMBOL  HCDSEP                                                                 
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = HCDSEP                                          */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Generate Separator Text Header            */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL HCDSEP                                               */         
*/*                                                                  */         
*/*01*  FUNCTION =  The HCDSEP macro is used to provide the          */         
*/*                 separator text header information for the        */         
*/*                 separation of IOCP and MVSCP/HCPRIO text chains. */         
*/*                                                                  */         
*/*01*  NOTES =                                                      */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT  =  None.                                              */         
*/*                                                                  */         
*/*01*  OUTPUT =  Common header information.                         */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
&SYMBOL  TXTHDR HCDSEP                                                          
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - NIPCON - NIP CONSOLE DEFINITION'            
         MACRO  --  PARSE NIPCON STATEMENT                                      
&SYMBOL  NIPCON &DEVNUM=                                                        
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = NIPCON                                          */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = NIP Console characteristics.              */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL NIPCON   DEVNUM= number ! (number<,number>...)       */         
*/*                                                                  */         
*/*01*  FUNCTION = Define a device as a NIP console.                 */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT = # DEVNUM= 3 or 4 Hex digit NIP console device number */         
*/*                                                                  */         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT = Internal text                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN               HCD statement number                      
         LCLA  &AWK                   Arithmetic work variable                  
         LCLA  &L                     Maximum or req'd operand length           
         LCLA  &MAXSUB                Maximum number of sublist entries         
         LCLA  &NDX                   Substring index                           
         LCLA  &SUB                   Sublist element number                    
         LCLB  &ERROR                 Error flag                                
         LCLC  &CNO                   EBCDIC version of &SYSITRN                
         LCLC  &CWK                   Character work variable                   
         ACTR  10000                  Set for infinite loop control             
.*                                                                              
&SYMBOL  TXTHDR NIPCON                Build header for NIPCON record            
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS60    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS60            and continue                     @P3A         
.*                                                                              
.XPOS60  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate DEVNUM              list of device numbers          *         
.*                                      3 or 4 Hex digits each        *         
.*                                                                    *         
.**********************************************************************         
.CKDEVNM ANOP                                                                   
&MAXSUB  SETA  63                     Maximum number of DEVNUM's                
&L       SETA  4                      Required DEVNUM length                    
         AIF   ('&DEVNUM' EQ '').NODEVNM    DEVNUM not specified                
         AIF   (N'&DEVNUM LE &MAXSUB).DVSUBLE Number of sublists                
        MNOTE 8,'015 DEVNUM PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES.'         
&ERROR   SETB  1                       Indicate error                           
.DVSUBLE ANOP                                                                   
&SUB     SETA 1                                                                 
.**********************************************************************         
.*       Loop to validate each sublist entry                          *         
.**********************************************************************         
.DVLOOP  ANOP                                                                   
         AIF   ('&DEVNUM(&SUB)' EQ '').DVNULL Null sublist entry                
         AIF (K'&DEVNUM(&SUB) EQ &L).DVNLEN     Number of digits                
         AIF (K'&DEVNUM(&SUB) EQ &L-1).DVNLEN   Number of digits-1              
&AWK     SETA  &L-1                                                             
         MNOTE 8,'022 DEVNUM PARAMETER SUBLIST ENTRY &SUB MUST BE &AWK *        
               OR &L DIGITS.'                                                   
&ERROR   SETB 1                       Indicate error                            
.DVNLEN  ANOP                                                                   
&NDX     SETA  1                      Points to 1st digit of number             
.*                                                                              
.*       Loop to validate each character in the device number                   
.DVLOOPB ANOP                                                                   
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LT 'A').BADDV    Bad char               
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LE 'F').GOODDV   Good  (A-F)            
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LT '0').BADDV    Bad char               
         AIF   ('&DEVNUM(&SUB)'(&NDX,1) LE '9').GOODDV   Good  (0-9)            
.BADDV   ANOP                           Invalid HEX digit                       
&CWK     SETC  '&DEVNUM(&SUB)'(&NDX,1)   Isolate invalid digit                  
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               FOR DEVNUM PARAMETER'                                            
&ERROR   SETB  1                      Indicates error                           
.GOODDV  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF   (&NDX LE K'&DEVNUM(&SUB)).DVLOOPB   Check next digit             
         AGO  .NXTDVNM                Process next DEVNUM number                
.DVNULL  MNOTE 8,'018 DEVNUM SUBLIST ENTRY &SUB IS MISSING.'                    
&ERROR   SETB 1                       Indicate error                            
.*                                                                              
.NXTDVNM ANOP                         Next device number                        
&SUB     SETA  &SUB+1                 Point to next sublist entry               
         AIF   (&SUB LE N'&DEVNUM).DVLOOP  More DEVNUM id's ...                 
         AGO   .GENTEXT               Generate internal text record             
.NODEVNM MNOTE 8,'002 DEVNUM KEYWORD NOT SPECIFIED.'                            
&ERROR   SETB  1                      Indicate error                            
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found           
&CNO     SETC  '&SYSITRN'             EBCDIC version of stmt number             
         DC    A(@D&CNO)              Pointer to DEVNUM list                    
&AWK     SETA  N'&DEVNUM              Number of entries in DEVNUM list          
         DC    H'&AWK'                Number of entries in DEVNUM list          
         DC    AL2(0)                 Reserved                                  
.*                                                                              
         SPACE 1                                                                
&SUB     SETA  1                      Point to first DEVNUM                     
&CWK     SETC  '@D&CNO'               Label for first DEVNUM                    
.DEVGEN  ANOP                                                                   
&CWK     DC    XL2'&DEVNUM(&SUB)'     NIPCON device number                      
&CWK     SETC  ''                     Blank out the label                       
&SUB     SETA &SUB+1                  Point to next sublist entry               
         AIF  (&SUB LE N'&DEVNUM).DEVGEN   Go insert next DEVNUM                
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - TXTHDR - INTERNAL TEXT HEADER'              
         MACRO  --  GENERATE TEXT HEADER INFORMATION                            
&SYMBOL  TXTHDR &MACNAME                                                        
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = TXTHDR                                          */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Generate header information.              */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL TXTHDR  MACNAME                                      */         
*/*                                                                  */         
*/*01*  FUNCTION =  The TXTHDR macro is used to provide common       */         
*/*                 header information for each of the internal      */         
*/*                 text records.                                    */         
*/*                                                                  */         
*/*01*  NOTES =  The maximum HCD statement number is 999999.         */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT = # MACNAME : 1-8 alphanumeric characters to be used   */         
*/*                     as identification for the internal text      */         
*/*                     record type.                                 */         
*/*             # - Required parameter                               */         
*/*                                                                  */         
*/*01*  OUTPUT =  Common header information.                         */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN               HCD statement number                      
         GBLA  &SYS1SEP               HCD statement number                      
         GBLB  &SEPFLAG               HCDSEP indicator flag                     
         LCLA  &STMTNO                Statement number                          
         LCLA  &FILENO                File number                               
         LCLC  &STMTYPE               HCD statement type                        
         LCLA  &AWK                   Arithmetic work variable                  
         LCLA  &NXTITRN               HCD statement no for next rec             
         LCLC  &CNO                   EBCDIC version of SYSITRN                 
         LCLC  &CWK                   Character work variable                   
         AIF   ('&MACNAME' EQ '').NONAME                                        
.*                                                                              
&SYSITRN SETA  &SYSITRN+1             Statement number of this record           
&STMTNO  SETA  &SYSITRN-&SYS1SEP   stmt. no. relative to separator              
         AIF   (&SYS1SEP LE 1).IOCP                                             
&FILENO  SETA  2                                                                
&STMTYPE SETC  'MVSCP OR HCPRIO'                                   @LEC         
         AGO   .NOTE                                                            
.IOCP    ANOP                                                                   
&FILENO  SETA  1                                                                
         AIF   ('&MACNAME' EQ 'HCDSEP').MVSCP                                   
         AIF   (&SEPFLAG EQ 1).MVSCP                                            
&STMTYPE SETC  'IOCP/MVSCP'                                                     
         AGO   .NOTE                                                            
.MVSCP   ANOP                                                                   
&STMTYPE SETC  'MVSCP OR HCPRIO'                                   @LEC         
.NOTE    ANOP                                                                   
         MNOTE *,' &STMTNO IS THE PREVIOUS &STMTYPE STATEMENT NUMBER'           
.*                                                                              
         MNOTE ' '                                                              
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr           
@T&CNO   DS    0F                     Internal text record                      
         AIF   ('&SYMBOL' EQ '').NOSYM  NO SYMBOL SPECIFIED                     
&SYMBOL  EQU   *                                                                
.NOSYM   ANOP                                                                   
         DC    CL8'&MACNAME'          Internal text record type                 
&AWK     SETA  6-K'&STMTNO         Number of leading blanks needed              
&CWK     SETC  '      '(1,&AWK)        for HCD statement number                 
         DC    CL6'&CWK.&STMTNO'      HCD statement number                      
         DC    CL1' '                 Reserved                                  
         DC    CL1'&FILENO'           File number                               
         AIF   ('&MACNAME' EQ 'HCDEND').GEN                                     
&NXTITRN SETA  &SYSITRN+1             Statement number for next record          
         DC    A(@T&NXTITRN)          Ptr to next internal text record          
         DC    F'0'                   Reserved                                  
         DC    F'4'                   For function use             @HHC         
         SPACE 1                                                                
         AIF   ('&MACNAME' NE 'HCDSEP').EXIT                                    
&SYS1SEP SETA  &SYSITRN               stmt number for separator                 
&SEPFLAG SETB  1                      indicator for separator                   
         AGO   .EXIT                                                            
.GEN     ANOP                                                                   
         DC    A(0)                   Last internal text record                 
         DC    F'0'                   Reserved                                  
         DC    F'4'                   For component use            @HHC         
         AGO   .EXIT                                                            
.NONAME  MNOTE 16,'001 MACNAME OPERAND IS MISSING FROM TXTHDR MACRO STA*        
               TEMENT.'                                                         
.EXIT    ANOP                                                                   
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - CMT    - INTERNAL TEXT HEADER'              
         MACRO  --  GENERATE COMMENT INFORMATION                                
&SYMBOL  CMT   &CMTTXT                                                          
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = CMT                                             */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Generate CMT internal text record.        */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*             CMT     string                                       */         
*/*                                                                  */         
*/*01*  FUNCTION =  The CMT macro is used to provide special         */         
*/*                 comment information.                             */         
*/*                                                                  */         
*/*01*  NOTES =  The maximum HCD statement number is 999999.         */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT = # text    : 1-63 character string enclosed in quotes.*/         
*/*             # - Required parameter                               */         
*/*                                                                  */         
*/*01*  OUTPUT =  CMT internal text record.                          */         
*/*                                                              @HHA*/         
*/********************************************************************/         
*/*                                                                             
.*                                                                 @HHA         
.SKIP    ANOP                                                      @HHA         
         GBLA  &SYSITRN               HCD statement number         @HHA         
         LCLA  &AWK                   Arithmetic work variable     @HHA         
         LCLC  &CNO                   EBCDIC version of SYSITRN    @HHA         
         LCLC  &CWK                   Character work variable      @HHA         
&SYMBOL  TXTHDR CMT               Build header for CMT record      @HHA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
&AWK     SETA  K'&CMTTXT-2                                         @HHA         
         AIF   (&AWK EQ 0).EXIT            No positional parameter @HHA         
.GEN     ANOP                                                      @HHA         
         DC    AL2(0)                 Reserved                     @HHA         
         DC    AL2(&AWK)              Length of CMT data           @HHA         
         DC    CL96&CMTTXT            Value of CMT data            @HHA         
         DC    XL12'00'               Reserved                     @HHA         
.EXIT    ANOP                                                      @HHA         
         MEND                                                      @HHA         
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - UNITNAME - UNITNAME DEFINITION'             
         MACRO  --  PARSE UNITNAME MACRO                                        
&SYMBOL  UNITNAME &NAME=,&UNIT=,&VIO=,&TOKEN=,&DEVPREF=            @L2C         
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = UNITNAME                                        */         
*/*                                                                  */         
*/*02*  DESCRIPTIVE NAME = Generate UNITNAME characteristics         */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       LABEL UNITNAME NAME=name                                   */         
*/*                      DEVPREF=device preference value         @L2A*/         
*/*                      UNIT=device number ! (devnum,devnum...) !   */         
*/*                           ((devnum),(devnum)...) !               */         
*/*                           ((devnum,devcount)...)                 */         
*/*                      VIO=NO ! YES                            @N3C*/         
*/*                      TOKEN=nnnn                              @P6A*/         
*/*                                                                  */         
*/*01*  FUNCTION = Describes esoteric names and VIO eligibility.     */         
*/*                                                                  */         
*/*01*  NOTES =  A list of device numbers may be specified on a      */         
*/*              single UNITNAME macro instruction.  Multiple        */         
*/*              UNITNAME macros may be issued with the same NAME.   */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*02*    RESTRICTIONS = Only 255 characters may be specified for    */         
*/*                      a keyword value.                            */         
*/*                                                                  */         
*/*01*  INPUT = # NAME= 1 to 8 character esoteric name.              */         
*/*               DEVPREF= A decimal number in the range from    @L2A*/         
*/*                     1 to 99999                               @L2A*/         
*/*               UNIT= list of device numbers (3 or 4 hex digits)   */         
*/*                     and replication factors (3 decimal digits).  */         
*/*                     The devcount (replication factor) indicates  */         
*/*                     successive device numbers.                   */         
*/*               VIO=  NO ! YES                                 @N3C*/         
*/*               TOKEN= is the token to be assigned to the      @P6A*/         
*/*                      esoteric. Must be a decimal number in   @P6A*/         
*/*                      the range from 1 -  8.999.              @P6A*/         
*/*             # - Required keyword                                 */         
*/*                                                                  */         
*/*01*  OUTPUT = List of device numbers and replication factors.     */         
*/*                                                                  */         
*/*********************************************************************         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLA  &SYSITRN           HCD statement number                          
         GBLB  &$ERR              Global error flag                @P6A         
         GBLC  &CWK               Character work variable          @P6A         
.*                                                                              
         LCLA  &AWK               Arithmetic work variable                      
         LCLA  &COMMA             Index to comma in sublist entry               
         LCLA  &FLAG              Flag byte variable                            
         LCLA  &VIOF              Operand flag                                  
         LCLA  &VNIOF             Operand flag                     @N3A         
         LCLA  &L                 Maximum or required operand length            
         LCLA  &MAXDEV            Maximum number of device id's                 
         LCLA  &MAXVAL            Maximum value of operand         @P6A         
         LCLA  &ITOK              internal token value variable    @P6A         
         LCLA  &NDX               Substring index                               
         LCLA  &SUB               Sublist element number                        
         LCLB  &ERROR             Error flag                                    
         LCLB  &PAREN             Parentheses flag                              
         LCLC  &CNO               EBCDIC version of SYSITRN                     
         LCLC  &DEVNO(63)         Device numbers from UNIT sublist              
         LCLC  &DEVCNT(63)        Replication factor                            
         LCLC  &UNITD             Unit sublist entry (to parse)                 
         LCLC  &TOKVAL            Token value                      @P6A         
         ACTR  10000              Set for infinite loop control                 
.*                                                                              
&VIOF    SETA  128                VIO=YES specified                             
&VNIOF   SETA  64                 VIO=NO  specified                @N3A         
&SYMBOL  TXTHDR UNITNAME          Build header for UNITNAME record              
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS70    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS70            and continue                     @P3A         
.*                                                                              
.XPOS70  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                    *         
.*       Validate NAME                <= 8 characters                 *         
.*                                                                    *         
.**********************************************************************         
&L       SETA  8                      Maximum NAME length                       
         AIF   ('&NAME' EQ '').NONAME  NAME not specified                       
         AIF   (N'&NAME GT 1).SUBNAME   NAME is in sublist format               
         AIF   (K'&NAME LE &L).NMLEN    Length of NAME                          
         MNOTE 8,'033 NAME PARAMETER EXCEEDS &L CHARACTERS.'                    
&ERROR   SETB  1                      Indicates error                           
.NMLEN   ANOP                                                                   
&NDX     SETA  1                      Point to first character in NAME          
         AIF   ('&NAME'(&NDX,1) EQ '/').BADNM    Bad char (/)     @01A          
.*                                                                              
.*       Loop to validate each character in NAME operand                        
.NMLOOP  ANOP                                                                   
         AIF   ('&NAME'(&NDX,1) LT 'A').NMLOOPD  Special character              
         AIF   ('&NAME'(&NDX,1) LE 'I').GOODNM   Good character (A-I)           
         AIF   ('&NAME'(&NDX,1) LT 'J').BADNM                                   
         AIF   ('&NAME'(&NDX,1) LE 'R').GOODNM   Good character (J-R)           
         AIF   ('&NAME'(&NDX,1) LT 'S').BADNM                                   
         AIF   ('&NAME'(&NDX,1) LE 'Z').GOODNM   Good character (S-Z)           
         AIF   ('&NAME'(&NDX,1) LT '0').BADNM                                   
         AIF   ('&NAME'(&NDX,1) LE '9').GOODNM   Good character (0-9)           
.NMLOOPD ANOP                                                                   
         AIF   ('&NAME'(&NDX,1) EQ '$').GOODNM   Good character ($)             
         AIF   ('&NAME'(&NDX,1) EQ '#').GOODNM   Good character (#)             
         AIF   ('&NAME'(&NDX,1) EQ '@').GOODNM   Good character (@)             
         AIF   ('&NAME'(&NDX,1) EQ '/').GOODNM   Good character (/)             
         AIF   ('&NAME'(&NDX,1) EQ '-').GOODNM   Good character (-)             
.BADNM   ANOP                                                                   
&CWK     SETC  '&NAME'(&NDX,1)        Isolate invalid character                 
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN NAME PARAMETER.'            
&ERROR   SETB  1                      Indicates error                           
.GOODNM  ANOP                                                                   
&NDX     SETA  &NDX+1                 Next character of name                    
         AIF   (&NDX LE K'&NAME).NMLOOP   Loop if more chars                    
         AGO   .CKUNIT                Check UNIT keyword                        
.*                                                                              
.SUBNAME MNOTE 8,'014 NAME PARAMETER MAY NOT BE A SUBLIST.'                     
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKUNIT                Check UNIT keyword                        
.NONAME  MNOTE 8,'002 NAME KEYWORD NOT SPECIFIED.'                              
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*                                                                    *         
.*       Validate UNIT                <= &MAXDEV devices              *         
.*                                                                    *         
.**********************************************************************         
.CKUNIT  ANOP                                                                   
&MAXDEV  SETA  63                     Maximum number of device id's             
         AIF   ('&UNIT' EQ '').CKVIO         UNIT not specified                 
         AIF   (N'&UNIT LE &MAXDEV).UNSUBL   Number of sublists                 
         MNOTE 8,'015 UNIT PARAMETER EXCEEDS &MAXDEV SUBLIST ENTRIES.'          
&ERROR   SETB  1                      Indicate error                            
.UNSUBL  ANOP                         Process each sublist                      
&SUB     SETA  1                      First sublist                             
.**********************************************************************         
.*       Loop to check each element in the UNIT sublist               *         
.**********************************************************************         
.UNLOOP  ANOP                                                                   
&L       SETA  4                      Max. device number length                 
&PAREN   SETB  0                      Indicate parentheses not used             
&NDX     SETA  1                      Point to first digit of number            
&UNITD   SETC  '&UNIT(&SUB)'          Isolate sublist entry                     
         AIF   ('&UNIT(&SUB)' EQ '').UNNULL   Null sublist entry                
         AIF   ('&UNITD'(1,1) NE '(').UNNLOOP First char not '('                
         AIF   (K'&UNITD EQ 2).UNNULL  No operands within parens '()'           
&PAREN   SETB  1                      Indicate parentheses are used             
&NDX     SETA  2                      Point past parenthesis                    
.*                                                                              
.*       Loop to validate each character in the device number                   
.*                                                                              
.UNNLOOP ANOP                         Device number validity loop               
         AIF   ('&UNITD'(&NDX,1) EQ ',').SETUNIT    End of number               
         AIF   ('&UNITD'(&NDX,1) EQ ')').SETUNIT    End of number               
         AIF   ('&UNITD'(&NDX,1) LT 'A').BADUNDN    Non-hex digit               
         AIF   ('&UNITD'(&NDX,1) LE 'F').GOODDN     Good digit (A-F)            
         AIF   ('&UNITD'(&NDX,1) LT '0').BADUNDN    Non-hex digit               
         AIF   ('&UNITD'(&NDX,1) LE '9').GOODDN     Good digit (0-9)            
.BADUNDN ANOP                         Invalid HEX digit                         
&CWK     SETC  '&UNITD'(&NDX,1)       Isolate invalid digit                     
         MNOTE 8,'021 INVALID HEX DIGIT ''&CWK'' IN DEVICE NUMBER SUBLI*        
               ST ENTRY &SUB FOR UNIT PARAMETER.'                               
&ERROR   SETB  1                      Indicates error                           
.GOODDN  ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit                       
         AIF   (&NDX LE K'&UNITD).UNNLOOP Check next digit                      
.SETUNIT ANOP                                                                   
         AIF   (&PAREN EQ 0).NOPAREN  Parentheses not used                      
         AIF   (&NDX EQ 2).NODEVNO    Device number not specified '(,'          
         AIF   (&NDX GT &L+2).UNITLEN Too many digits in number                 
         AIF   (&NDX LT &L+1).UNITLEN Too few digits in number                  
         AIF   (&ERROR EQ 1).UNNSKIP  Skip insert if error encountered          
&DEVNO(&SUB) SETC '&UNITD'(2,&NDX-2)  Insert device number into array           
.UNNSKIP AIF   ('&UNITD'(&NDX,1) EQ ',').CKCNT  Go do devcount                  
         AIF   (&NDX EQ K'&UNITD ).NOCNT  Go insert default devcount            
         AGO   .UNNCOMA               Missing comma between sublists            
.*                                                                              
.NOPAREN ANOP                         Parentheses not used                      
         AIF   (&NDX GT &L+1).UNITLEN Too many digits in number                 
         AIF   (&NDX LT &L).UNITLEN   Too few digits in number                  
         AIF   (&ERROR EQ 1).NEXTSLE  Skip insert if error encountered          
&DEVNO(&SUB)  SETC '&UNIT(&SUB)'      Insert device number into array           
&DEVCNT(&SUB) SETC '1'                Use default replication factor            
         AGO   .NEXTSLE               Process next entry in sublist             
.*                                                                              
.UNITLEN ANOP                                                                   
&AWK     SETA  &L-1                                                             
         MNOTE 8,'022 UNIT PARAMETER DEVICE NUMBER SUBLIST ENTRY &SUB M*        
               UST BE &AWK OR &L DIGITS.'                                       
&ERROR   SETB  1                      Indicates error                           
         AGO   .CKCNT                 Go check replication factor               
.NODEVNO MNOTE 8,'017 DEVICE NUMBER REQUIRED IN SUBLIST ENTRY &SUB FOR *        
               UNIT PARAMETER.'                                                 
&ERROR   SETB  1                      Indicates error                           
.**********************************************************************         
.*       Validate replication factor                                  *         
.**********************************************************************         
.CKCNT   ANOP                         Check replication factor                  
&L       SETA  5                      Maximum replication factor length         
.*                                                                 @07C         
         AIF   (&PAREN EQ 0).NEXTSLE  Default replication factor set            
         AIF   ('&UNITD'(&NDX,1) NE ',').NEXTSLE  Bad length                    
&COMMA   SETA  &NDX                   Save position of comma                    
&NDX     SETA  &NDX+1                 First digit of number                     
         AIF   (&NDX EQ K'&UNITD).NOCNT  No 'count' after comma                 
.*                                                                              
.*       Loop to validate each digit in the replication factor                  
.*                                                                              
.UNCLOOP ANOP                         Check device replication factor           
         AIF   ('&UNITD'(&NDX,1) EQ ',').OPCNT   Too many operands              
         AIF   ('&UNITD'(&NDX,1) EQ ')').SETUNUM  End of digit                  
         AIF   ('&UNITD'(&NDX,1) LT '0').BADCNT   Not decimal                   
         AIF   ('&UNITD'(&NDX,1) LE '9').GOODCNT  Decimal                       
.BADCNT  ANOP                         Invalid DECIMAL digit                     
&CWK     SETC  '&UNITD'(&NDX,1)       Isolate invalid digit                     
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN REPLICATION FAC*        
               TOR SUBLIST ENTRY &SUB FOR UNIT PARAMETER.'                      
&ERROR   SETB  1                      Indicates error                           
.GOODCNT ANOP                                                                   
&NDX     SETA  &NDX+1                 Point to next digit in dev cnt            
         AIF   (&NDX LE K'&UNITD).UNCLOOP  Check next digit                     
.*                                                                              
.SETUNUM AIF   (&NDX NE K'&UNITD).UNNCOMA  Extra chars after ')'                
         AIF   (&NDX GT &COMMA+&L+1).UNDCLEN  Count exceeds max length          
         AIF   (&NDX EQ &COMMA+1).NOCNT   Null entry, default                   
         AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry             
&DEVCNT(&SUB) SETC '&UNITD'(&COMMA+1,&NDX-&COMMA-1) Replication factor          
         AIF   ('&DEVCNT(&SUB)' GE '1').NEXTSLE Invalid if less than 1          
         MNOTE  8,'041 UNIT PARAMETER REPLICATION FACTOR SUBLIST ENTRY *        
               &SUB VALUE MUST BE GREATER THAN 0.'                              
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Go process next sublist entry             
.NOCNT   AIF   (&NDX NE K'&UNITD).UNNCOMA  Missing comma                        
         AIF   (&ERROR EQ 1).NEXTSLE  Go process next sublist entry             
&DEVCNT(&SUB) SETC '1'                Use default devcount                      
         AGO   .NEXTSLE               Process next entry in sublist             
.UNDCLEN MNOTE  8,'023 UNIT PARAMETER REPLICATION FACTOR SUBLIST ENTRY *        
               &SUB EXCEEDS &L DIGITS.'                                         
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Go process next sublist entry             
.OPCNT   MNOTE 8,'016 UNIT SUBLIST ENTRY &SUB EXCEEDS 2 OPERANDS.'              
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Process next entry in sublist             
.**********************************************************************         
.*       Issue MNOTE and set up to process next sublist entry         *         
.**********************************************************************         
.UNNCOMA MNOTE 8,'019 UNIT SUBLIST ENTRY &SUB IS MISSING A COMMA.'              
&ERROR   SETB  1                      Indicates error                           
         AGO   .NEXTSLE               Process next entry in sublist             
.UNNULL  MNOTE 8,'018 UNIT SUBLIST ENTRY &SUB IS MISSING.'                      
&ERROR   SETB  1                      Indicates error                           
.*                                                                              
.NEXTSLE ANOP                         Process next sublist entry                
&SUB     SETA  &SUB+1                 Points to next sublist entry              
         AIF   (&SUB LE N'&UNIT).UNLOOP     Another entry to process...         
.**********************************************************************         
.*                                                                    *         
.*       Validate VIO                 NO ! YES                        *         
.*                                                                    *         
.**********************************************************************         
.CKVIO   ANOP                                                                   
         AIF   ('&VIO' EQ '').XVIO        VIO not specified        @P6C         
         AIF   ('&VIO' EQ 'NO').VIONO     NO specified             @N3C         
         AIF   ('&VIO' EQ 'N').VIONO      NO specified             @N3C         
&FLAG    SETA  &FLAG+&VIOF               Indicate VIO=YES specified             
         AIF   ('&VIO' EQ 'YES').XVIO     Valid VIO operand (YES)  @P6C         
         AIF   ('&VIO' EQ 'Y').VIOWRN     Valid VIO operand (YES)               
         MNOTE 8,'043 VIO VALUE MUST BE YES OR NO.'                             
&ERROR   SETB  1                      Indicates error                           
         AGO   .XVIO                 Generate internal text record @P6C         
.VIONO   ANOP                                                      @N3A         
&FLAG    SETA  &FLAG+&VNIOF              Indicate VIO=NO specified @N3A         
         AIF   ('&VIO' EQ 'N').VIOWRN    N specified               @N3A         
         AGO   .XVIO                  Generate internal text       @P6C         
.VIOWRN  MNOTE 0,'043 VIO VALUE SHOULD BE YES OR NO.'                           
.*                                                                              
.XVIO    ANOP                                                      @P6A         
.**********************************************************************         
.*                                                                    *         
.*       Validate TOKEN               1 - 4 Decimal digits            *         
.*                                    Range: 1 - 8999                 *         
.*                                                                    *         
.**********************************************************************         
.CKTOKEN ANOP                                                      @P6A         
&ITOK    SETA  0                      No Token specified           @P6A         
&L       SETA  4                      Maximum TOKEN length         @P6A         
&MAXVAL  SETA  8999                   Maximum TOKEN value          @P6A         
         AIF   ('&TOKEN' EQ '').XTOKEN   TOKEN not specified       @P6A         
         AIF   (N'&TOKEN GT 1).TOKE1    TOKEN is in sublist format @P6A         
         AIF   (K'&TOKEN GT &L).TOKE3  Number of digits > maximum  @P6A         
.*                                                                              
&TOKVAL  SETC  '&TOKEN'               Isolate token value          @P6A         
         DECIMAL  STRING=&TOKVAL      Verify if decimal            @P6A         
         AIF   (&$ERR).TOKE4          Report error, if encountered @P6A         
         AIF   (&TOKEN LE 0 OR &TOKEN GT &MAXVAL).TOKE2  wrong ]   @P6A         
.*                                                                              
&ITOK    SETA  &TOKVAL                Save token value             @P6A         
         AGO   .XTOKEN                Check next keyword           @P6A         
.*                                                                              
.TOKE1   ANOP  ,                                                   @P6A         
         MNOTE 8,'014 TOKEN PARAMETER MAY NOT BE A SUBLIST.'       @P6A         
&ERROR   SETB  1                      Indicates error              @P6A         
         AGO   .XTOKEN                Check next keyword           @P6A         
.*                                                                              
.TOKE2   ANOP  ,                                                   @P6A         
         MNOTE 8,'042 TOKEN VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.' *        
                                                                   @P6A         
&ERROR   SETB  1                      Indicates error                           
         AGO   .XTOKEN                Check next keyword           @P6A         
.*                                                                              
.TOKE3   ANOP  ,                                                   @P6A         
         MNOTE 8,'023 TOKEN PARAMETER EXCEEDS &L DIGITS.'          @P6A         
&ERROR   SETB  1                      Indicates error              @P6A         
         AGO   .XTOKEN                Check next keyword           @P6A         
.*                                                                              
.TOKE4   ANOP                         Invalid DECIMAL digit        @P6A         
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN TOKEN PARAMETER*        
               .'                                                               
&ERROR   SETB  1                      Indicates error              @P6A         
         AGO   .XTOKEN                Check next keyword           @P6A         
.*                                                                              
.XTOKEN  ANOP  ,                                                   @P6A         
.**********************************************************************         
.*                                                                    *         
.*       Validate DEVPREF             1 - 6 Decimal digits            *         
.*                                    Range: 1 - 999999               *         
.*                                                                    *         
.**********************************************************************         
.CKDEVP  ANOP                                                      @L2A         
.*                                                                              
&L       SETA  6                      Maximum DEVPREF length       @L2A         
&MAXVAL  SETA  999999                 Maximum DEVPREF value        @L2A         
         AIF   ('&DEVPREF' EQ '').XDEVP DEVPREF not specified      @L2A         
         AIF   ('&TOKEN' NE '').DEVPE05  TOKEN is not allowed      @L2A         
         AIF   (N'&DEVPREF GT 1).DEVPE01 DEVPREF in sublist format @L2A         
         AIF   (K'&DEVPREF GT &L).DEVPE03 Number  digits > maximum @L2A         
.*                                                                              
&TOKVAL  SETC  '&DEVPREF'             Isolate preference value     @L2A         
         DECIMAL  STRING=&TOKVAL      Verify if decimal            @L2A         
         AIF   (&$ERR).DEVPE04        Report error, if encountered @L2A         
         AIF   (&DEVPREF LE 0 OR &DEVPREF GT &MAXVAL).DEVPE02      @L2A         
.*                                                                              
&ITOK    SETA  &TOKVAL                Save preference value        @L2A         
         AGO   .XDEVP                 Check next keyword           @L2A         
.*                                                                              
.DEVPE01 ANOP  ,                                                   @L2A         
         MNOTE 8,'014 DEVPREF PARAMETER MAY NOT BE A SUBLIST.'     @L2A         
&ERROR   SETB  1                      Indicates error              @L2A         
         AGO   .XDEVP                 Check next keyword           @L2A         
.*                                                                              
.DEVPE02 ANOP  ,                                                   @L2A         
         MNOTE 8,'042 DEVPREF MUST BE A NUMBER FROM 1 TO &MAXVAL.'     *        
                                                                   @L2A         
&ERROR   SETB  1                      Indicates error                           
         AGO   .XDEVP                 Check next keyword           @L2A         
.*                                                                              
.DEVPE03 ANOP  ,                                                   @L2A         
         MNOTE 8,'023 DEVPREF PARAMETER EXCEEDS &L DIGITS.'        @L2A         
&ERROR   SETB  1                      Indicates error              @L2A         
         AGO   .XDEVP                 Check next keyword           @L2A         
.*                                                                              
.DEVPE04 ANOP                         Invalid DECIMAL digit        @L2A         
         MNOTE 8,'021 INVALID DECIMAL DIGIT ''&CWK'' IN DEVPREF PARAMET*        
               ER.'                                                             
&ERROR   SETB  1                      Indicates error              @L2A         
         AGO   .XDEVP                 Check next keyword           @L2A         
.*                                                                              
.DEVPE05 ANOP  ,                                                   @L2A         
         MNOTE 8,'051 TOKEN PARAMETER AND DEVPREF PARAMETER ARE MUTUALL*        
               Y EXCLUSIVE.'                                       @L2A         
&ERROR   SETB  1                      Indicates error              @L2A         
         AGO   .XDEVP                 and continue                 @L2A         
.*                                                                              
.XDEVP   ANOP  ,                                                   @L2A         
.**********************************************************************         
.*                                                                    *         
.*       Generate internal text record                                *         
.*                                                                    *         
.**********************************************************************         
.GENTEXT ANOP                                                                   
&L       SETA  4                      Max. device number length                 
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been found           
         DC    CL8'&NAME'             Esoteric name                             
         AIF   ('&UNIT' EQ '').NOUNITP  No UNIT list                            
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement nbr           
         DC    A(@U&CNO)              Pointer to UNIT list                      
         AGO   .UNITCNT               Generate UNIT count                       
.NOUNITP ANOP                                                                   
         DC    A(0)                   No UNIT list                              
.UNITCNT ANOP                                                                   
&AWK     SETA  N'&UNIT                Number of entries in UNIT list            
         DC    H'&AWK'                Number of entries in UNIT list            
         DC    AL1(&FLAG)             Flag byte                                 
         DC    XL2'0000'              Alignment                    @03A         
         DC    AL3(&ITOK)             Esoteric token or preference @L2C         
         AIF   (N'&UNIT EQ 0).EXIT                                              
&SUB     SETA  1                      Point to UNIT array entry 1               
&CWK     SETC  '@U&CNO'               Label for 1st entry in UNIT list          
.GENLOOP ANOP                                                                   
         SPACE                                                                  
&CWK     DC    XL4'0000&DEVNO(&SUB)'  4 Digit Device number                     
         DC    H'&DEVCNT(&SUB)'       Replication factor                        
         DC    XL2'0000'              Reserved                                  
&CWK     SETC  ''                     Blank out label                           
&SUB     SETA  &SUB+1                 Points to next entry in array             
         AIF   (&SUB LE N'&UNIT).GENLOOP  Processes next entry in array         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++         
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++         
         TITLE 'HCD MACRO LISTING - PARTITION PARAMETER CHECKER '  @LBA         
         MACRO  --  Verify partition name                          @LBA         
         PARTTEST &NAME=,&SUB=                                     @LBA         
.*                                                                              
         AGO   .SKIP                                               @LBA         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = PARTTEST                                        */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Verify if passed partition name is correct*/         
*/*                        Partition name must be alphameric         */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       label  PARTTEST NAME=string,SUB=nnnn                       */         
*/*                                                                  */         
*/*01*  FUNCTION = Checks if the passed partition name is correct    */         
*/*                                                                  */         
*/*01*  NOTES =  None.                                               */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT =   NAME= 1 to 8 characters (passed partition name)    */         
*/*               SUB= nnn          sublist element number           */         
*/*                                                                  */         
*/*01*  OUTPUT = Global &$ERR indicating whether partition name is   */         
*/*              valid.                                              */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                 @LBA         
.SKIP    ANOP                                                      @LBA         
         GBLB  &$ERR                  Global error flag            @LBA         
         LCLA  &NDX                   Substring index              @LBA         
         LCLA  &L                     Maximum partition name length@LBA         
         LCLC  &CWK                   Character work variable      @LBA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*             Validate Partition name                                *         
.*                                                                    *         
.**********************************************************************         
&$ERR    SETB  0                      No error                     @LBA         
&NDX     SETA  1                      Points to 1st char of partition  *        
                                                                   @LBA         
&L       SETA  8                      Maximum length of partition name *        
                                                                   @LBA         
         AIF   (K'&NAME GT &L).PARTE01  report error, if partition name*        
                                        is too large               @LBA         
.*                                                                              
.*       Loop to validate each character of the PARTITION name                  
.*                                                                              
.PART010 ANOP                                                      @LBA         
         AIF   ('&NAME'(&NDX,1) EQ '_').PART030  (_) is hex 6D     @LJA         
         AIF   ('&NAME'(&NDX,1) LT 'A').PARTE02                    @LBA         
         AIF   ('&NAME'(&NDX,1) LE 'I').PART020  (A-I)             @LBA         
         AIF   ('&NAME'(&NDX,1) LT 'J').PARTE02                    @LBA         
         AIF   ('&NAME'(&NDX,1) LE 'R').PART020  (J-R)             @LBA         
         AIF   ('&NAME'(&NDX,1) LT 'S').PARTE02                    @LBA         
         AIF   ('&NAME'(&NDX,1) LE 'Z').PART020  (S-Z)             @LBA         
         AIF   (&NDX EQ 1).PARTE02                                 @LBA         
         AIF   ('&NAME'(&NDX,1) LT '0').PARTE02                    @LBA         
         AIF   ('&NAME'(&NDX,1) GT '9').PARTE02  (0-9)             @LBA         
.*                                                                              
.PART020 ANOP  ,                                                   @LBA         
&NDX     SETA  &NDX+1                 Point to next character      @LBA         
         AIF   (&NDX LE K'&NAME).PART010  Check next character     @LBA         
         AGO  .XPART                  and exit                     @LBA         
.*                                                                              
.PART030 ANOP  ,                                                   @LJA         
         AIF   (&NDX EQ 1).PARTE02    if first char it is error    @LJA         
         AIF   (&NDX GT 1).PART020    continue                     @LJA         
.*                                                                              
.PARTE01 ANOP  ,                                                   @LBA         
         MNOTE 8,'033 PART/NOTPART PARAMETER SUBLIST ENTRY &SUB EXCEEDS*        
                &L CHARACTERS.'                                    @09C         
&$ERR    SETB  1                      Indicate error               @LBA         
         AGO   .XPART                 and exit                     @LBA         
.*                                                                              
.PARTE02 ANOP  ,                                                   @LBA         
&CWK     SETC  '&NAME'(&NDX,1)        Isolate invalid character    @LBA         
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN SUBLIST ENTRY &SUB *        
                FOR PART/NOTPART PARAMETER.'                       @09C         
&$ERR    SETB  1                      Indicate error               @LBA         
         AGO   .XPART                 and exit                     @LBA         
.*                                                                              
.XPART   ANOP  ,                      End of validating partition  @LBA         
         MEND                                                      @LBA         
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++         
         TITLE 'HCD MACRO LISTING - DECIMAL TEST FOR PARAMETER '   @LBA         
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER            @LBA         
         DECIMAL &STRING=                                          @LBA         
.*                                                                              
         AGO   .SKIP                                               @LBA         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = DECIMAL                                         */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Test parameter if decimal                 */         
*/*                         valid values are 0 - 9 for each char     */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       label  DECIMAL  STRING=string                              */         
*/*                                                                  */         
*/*01*  FUNCTION = Checks if passed parameter is decimal             */         
*/*                                                                  */         
*/*01*  NOTES =  None.                                               */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT =   character string                                   */         
*/*                                                                  */         
*/*01*  OUTPUT = global variable &$ERR set true if error found,      */         
*/*              otherwise set false                                 */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.SKIP    ANOP                                                                   
         GBLB  &$ERR                  Error flag                   @LBA         
         GBLC  &CWK                   Character work variable      @LBA         
         LCLA  &NDX                   Substring index              @LBA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check the Input String                                       *         
.*                                                                    *         
.**********************************************************************         
&$ERR    SETB  0                      Assume no error              @LBA         
&NDX     SETA  1                      Points to 1st char of STRING @LBA         
.**********************************************************************         
.*       Loop to validate each character in Input string              *         
.**********************************************************************         
.LOOP    ANOP                                                      @LBA         
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                   @LBA         
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid digit (0-9)   *        
                                                                   @LBA         
.*                                                                              
.BADCHA  ANOP                         Invalid character            @LBA         
&CWK     SETC  '&STRING'(&NDX,1)      Isolate invalid character    @LBA         
&$ERR    SETB  1                      Indicate error               @LBA         
         AGO   .ENDCK                 and exit                     @LBA         
.*                                                                              
.GOODCHA ANOP                                                      @LBA         
&NDX     SETA  &NDX+1                 Point to next digit          @LBA         
         AIF   (&NDX LE K'&STRING).LOOP    Check next digit        @LBA         
.*                                                                              
.ENDCK   ANOP                         End of checking parameter    @LBA         
         MEND                                                      @LBA         
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++         
         TITLE 'HCD MACRO LISTING - HEX TEST FOR PARAMETER '       @LBA         
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER            @LBA         
         HEXCHECK &STRING=                                         @LBA         
.*                                                                              
         AGO   .SKIP                                               @LBA         
*/********************************************************************/         
*/*                                                                  */         
*/*01*  MACRO NAME = HEXCHECK                                        */         
*/*                                                                  */         
*/*01*  DESCRIPTIVE NAME = Test parameter for hexadecimal            */         
*/*                                                                  */         
*/*01*  MACRO CALL =                                                 */         
*/*       label  HEXCHECK STRING=string                              */         
*/*                                                                  */         
*/*01*  FUNCTION = Checks an Input string to be hexadecimal          */         
*/*                                                                  */         
*/*01*  NOTES =  None.                                               */         
*/*                                                                  */         
*/*02*    DEPENDENCIES = None.                                       */         
*/*                                                                  */         
*/*01*  INPUT =   STRING=                                            */         
*/*                                                                  */         
*/*01*  OUPUT  = global variable &$ERR set true if error found,      */         
*/*              otherwise set false                                 */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                             
.*                                                                              
.SKIP    ANOP                                                                   
         GBLB  &$ERR                  Error flag                   @LBA         
         GBLB  &INTERR                Internal error flag          @LEA         
         GBLC  &CWK                   Character work variable      @LBA         
         LCLA  &NDX                   Substring index              @LBA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check the Input String                                       *         
.*                                                                    *         
.**********************************************************************         
&$ERR    SETB  0                      No error                     @LBA         
&INTERR  SETB  0                      Indicates no error           @LEA         
&NDX     SETA  1                      Points to 1st char of STRING @LBA         
.**********************************************************************         
.*       Loop to validate each character in Input string              *         
.**********************************************************************         
.LOOP    ANOP                                                      @LBA         
         AIF   ('&STRING'(&NDX,1) LT 'A').BADHEX    non-hex digit  @LBA         
         AIF   ('&STRING'(&NDX,1) LE 'F').GOODHEX  hex digit  (A-F)@LBA         
         AIF   ('&STRING'(&NDX,1) LT '0').BADHEX    non-hex digit  @LBA         
         AIF   ('&STRING'(&NDX,1) LE '9').GOODHEX  hex digit  (0-9)@LBA         
.*                                                                              
.BADHEX  ANOP                         Invalid character            @LBA         
&CWK     SETC  '&STRING'(&NDX,1)      Isolate invalid character    @LBA         
&$ERR    SETB  1                      Indicate error               @LBA         
&INTERR  SETB  1                      Indicates error              @LEA         
         AGO   .ENDCK                 and exit                     @LBA         
.*                                                                              
.GOODHEX ANOP                                                      @LBA         
&NDX     SETA  &NDX+1                 Point to next digit          @LBA         
         AIF   (&NDX LE K'&STRING).LOOP    Check next digit        @LBA         
.*                                                                              
.ENDCK   ANOP                         End of check                 @LBA         
         MEND                                                      @LBA         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - ALPHANUMERIC TEST FOR PARAMETER '           
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                         
         ALPHANUM &STRING=                                                      
.*                                                                              
         AGO   .SKIP                                             @LEA           
*/********************************************************************/         
*/*                                                              @LEA*/         
*/*01*  MACRO NAME = ALPHANUM                                    @LEA*/         
*/*                                                              @LEA*/         
*/*01*  DESCRIPTIVE NAME = Test parameter for alphanumeric       @LEA*/         
*/*                         valid values are A - Z   0 - 9       @LEA*/         
*/*                                                              @LEA*/         
*/*01*  MACRO CALL =                                             @LEA*/         
*/*       label  ALPHANUM INPUT= Character String                @LEA*/         
*/*                                                              @LEA*/         
*/*01*  FUNCTION = Checks an Input string to be alphanumeric     @LEA*/         
*/*                                                              @LEA*/         
*/*01*  NOTES =  None.                                           @LEA*/         
*/*                                                              @LEA*/         
*/*02*    DEPENDENCIES = None.                                   @LEA*/         
*/*                                                              @LEA*/         
*/*01*  INPUT =   character string                               @LEA*/         
*/*                                                              @LEA*/         
*/*01*  OUTPUT = OK                                              @LEA*/         
*/*                                                              @LEA*/         
*/********************************************************************/         
.*                                                               @LEA           
.SKIP    ANOP                                                    @LEA           
         GBLB  &INTERR                Internal error flag        @LEA           
         GBLC  &CWK                   Character work variable    @LEA           
         LCLA  &NDX                   Substring index            @LEA           
.*                                                               @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Check the Input String                                  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
&INTERR  SETB  0                      No error                   @LEA           
&NDX     SETA  1                      Points to 1st char of      @LEA           
.*                                    STRING                     @LEA           
.*********************************************************************          
.*       Loop to validate each character in Input string         @LEA           
.*********************************************************************          
.LOOP    ANOP                                                    @LEA           
         AIF   ('&STRING'(&NDX,1) LT 'A').BADCHA                 @LEA           
         AIF   ('&STRING'(&NDX,1) LE 'I').GOODCHA  Valid char    @LEA           
.*                                                 (A-I)         @LEA           
         AIF   ('&STRING'(&NDX,1) LT 'J').BADCHA                 @LEA           
         AIF   ('&STRING'(&NDX,1) LE 'R').GOODCHA  Valid char    @LEA           
.*                                                 (J-R)         @LEA           
         AIF   ('&STRING'(&NDX,1) LT 'S').BADCHA                 @LEA           
         AIF   ('&STRING'(&NDX,1) LE 'Z').GOODCHA  Valid char    @LEA           
.*                                                 (S-Z)         @LEA           
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                 @LEA           
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid char    @LEA           
.*                                                 (0-9)         @LEA           
.*                                                               @LEA           
.BADCHA  ANOP                                 Invalid character  @LEA           
&CWK     SETC  '&STRING'(&NDX,1)              Isolate invalid    @LEA           
&INTERR  SETB  1                              Indicates error    @LEA           
         AGO   .ENDCK                                                           
.*                                            character          @LEA           
.GOODCHA ANOP                                                    @LEA           
&NDX     SETA  &NDX+1                         Point to next digit@LEA           
         AIF   (&NDX LE K'&STRING).LOOP       Check next digit   @LEA           
.ENDCK   ANOP                                 End of check       @LEA           
         MEND                                                                   
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - ALPHANUMERIC TEST FOR PARAMETER '           
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                         
         ALPHA1NUM &STRING=                                                     
.*                                                                              
         AGO   .SKIP                                             @06A           
*/********************************************************************/         
*/*                                                              @06A*/         
*/*01*  MACRO NAME = ALPHA1NUM                                   @06A*/         
*/*                                                              @06A*/         
*/*01*  DESCRIPTIVE NAME = Test parameter for alphanumeric       @06A*/         
*/*                         valid values are A - Z   0 - 9       @06A*/         
*/*                        1.character must be alphabetic        @06A*/         
*/*                                                              @06A*/         
*/*01*  MACRO CALL =                                             @06A*/         
*/*       label  ALPHA1NUM INPUT= Character String               @06A*/         
*/*                                                              @06A*/         
*/*01*  FUNCTION = Checks an Input string to be alphanumeric     @06A*/         
*/*                first character alphabetic                    @06A*/         
*/*01*  NOTES =  None.                                           @06A*/         
*/*                                                              @06A*/         
*/*02*    DEPENDENCIES = None.                                   @06A*/         
*/*                                                              @06A*/         
*/*01*  INPUT =   character string                               @06A*/         
*/*                                                              @06A*/         
*/*01*  OUTPUT = OK                                              @06A*/         
*/*                                                              @06A*/         
*/********************************************************************/         
.*                                                               @06A           
.SKIP    ANOP                                                    @06A           
         GBLB  &INTERR                Internal error flag        @06A           
         GBLC  &CWK                   Character work variable    @06A           
         LCLA  &NDX                   Substring index            @06A           
.*                                                               @06A           
.*********************************************************************          
.*                                                               @06A*          
.*       Check the Input String                                  @06A*          
.*                                                               @06A*          
.*********************************************************************          
&INTERR  SETB  0                      No error                   @06A           
&NDX     SETA  1                      Points to 1st char of      @06A           
.*                                    STRING                     @06A           
.*********************************************************************          
.*       Loop to validate each character in Input string         @06A           
.********************************************************************           
.LOOP    ANOP                                                    @06A           
         AIF   ('&STRING'(&NDX,1) LT 'A').BADCHA                 @06A           
         AIF   ('&STRING'(&NDX,1) LE 'I').GOODCHA  Valid char    @06A           
.*                                                 (A-I)         @06A           
         AIF   ('&STRING'(&NDX,1) LT 'J').BADCHA                 @06A           
         AIF   ('&STRING'(&NDX,1) LE 'R').GOODCHA  Valid char    @06A           
.*                                                 (J-R)         @06A           
         AIF   ('&STRING'(&NDX,1) LT 'S').BADCHA                 @06A           
         AIF   ('&STRING'(&NDX,1) LE 'Z').GOODCHA  Valid char    @06A           
.*                                                 (S-Z)         @06A           
         AIF   (&NDX EQ 1).BADCHA  First char not alphabetic     @06A           
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                 @06A           
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid char    @06A           
.*                                                 (0-9)         @06A           
.*                                                               @06A           
.BADCHA  ANOP                                 Invalid character  @06A           
&CWK     SETC  '&STRING'(&NDX,1)              Isolate invalid    @06A           
&INTERR  SETB  1                              Indicates error    @06A           
         AGO   .ENDCK                                                           
.*                                            character          @06A           
.GOODCHA ANOP                                                    @06A           
&NDX     SETA  &NDX+1                         Point to next digit@06A           
         AIF   (&NDX LE K'&STRING).LOOP       Check next digit   @06A           
.ENDCK   ANOP                                 End of check       @06A           
         MEND                                                                   
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - ALPHANUMERIC TEST FOR PARAMETER '           
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                         
         ALPHANX  &STRING=                                                      
.*                                                                              
         AGO   .SKIP                                             @M4A           
*/********************************************************************/         
*/*                                                              @M4A*/         
*/*01*  MACRO NAME = ALPHANX                                     @M4A*/         
*/*                                                              @M4A*/         
*/*01*  DESCRIPTIVE NAME = Test parameter for alphanumeric       @M4A*/         
*/*                         valid values are A - Z   0 - 9       @M4A*/         
*/*                         and special values $,#,@             @M4A*/         
*/*                                                              @M4A*/         
*/*01*  MACRO CALL =                                             @M4A*/         
*/*       label  ALPHANX  STRING= character string               @M4A*/         
*/*                                                              @M4A*/         
*/*01*  FUNCTION = Checks an Input string to be alphanumeric     @M4A*/         
*/*                or special characters ($,#,@)                 @M4A*/         
*/*                                                              @M4A*/         
*/*01*  NOTES =  None.                                           @M4A*/         
*/*                                                              @M4A*/         
*/*02*    DEPENDENCIES = None.                                   @M4A*/         
*/*                                                              @M4A*/         
*/*01*  INPUT =   character string                               @M4A*/         
*/*                                                              @M4A*/         
*/*01*  OUTPUT = OK                                              @M4A*/         
*/*                                                              @M4A*/         
*/********************************************************************/         
.*                                                               @M4A           
.SKIP    ANOP                                                    @M4A           
         GBLB  &INTERR                Internal error flag        @M4A           
         GBLC  &CWK                   Character work variable    @M4A           
         LCLA  &NDX                   Substring index            @M4A           
.*                                                               @M4A           
.*********************************************************************          
.*                                                               @M4A*          
.*       Check the Input String                                  @M4A*          
.*                                                               @M4A*          
.*********************************************************************          
&INTERR  SETB  0                      No error                   @M4A           
&NDX     SETA  1                      Points to 1st char of      @M4A           
.*                                    STRING                     @M4A           
.*********************************************************************          
.*       Loop to validate each character in Input string         @M4A           
.*********************************************************************          
.LOOP    ANOP                                                    @M4A           
         AIF   ('&STRING'(&NDX,1) EQ '$').GOODCHA  Valid char    @M4A           
         AIF   ('&STRING'(&NDX,1) EQ '#').GOODCHA  Valid char    @M4A           
         AIF   ('&STRING'(&NDX,1) EQ '@').GOODCHA  Valid char    @M4A           
.*                                                  ($,#,@)      @M4A           
         AIF   ('&STRING'(&NDX,1) LT 'A').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE 'I').GOODCHA  Valid char    @M4A           
.*                                                 (A-I)         @M4A           
         AIF   ('&STRING'(&NDX,1) LT 'J').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE 'R').GOODCHA  Valid char    @M4A           
.*                                                 (J-R)         @M4A           
         AIF   ('&STRING'(&NDX,1) LT 'S').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE 'Z').GOODCHA  Valid char    @M4A           
.*                                                 (S-Z)         @M4A           
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid char    @M4A           
.*                                                 (0-9)         @M4A           
.*                                                               @M4A           
.BADCHA  ANOP                                 Invalid character  @M4A           
&CWK     SETC  '&STRING'(&NDX,1)              Isolate invalid    @M4A           
&INTERR  SETB  1                              Indicates error    @M4A           
         AGO   .ENDCK                                                           
.*                                            character          @M4A           
.GOODCHA ANOP                                                    @M4A           
&NDX     SETA  &NDX+1                         Point to next digit@M4A           
         AIF   (&NDX LE K'&STRING).LOOP       Check next digit   @M4A           
.ENDCK   ANOP                                 End of check       @M4A           
         MEND                                                                   
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - NAME TEST FOR PARAMETER '                   
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                         
         NAMETEST  &STRING=                                                     
.*                                                                              
         AGO   .SKIP                                             @M4A           
*/********************************************************************/         
*/*                                                              @M4A*/         
*/*01*  MACRO NAME = NAMETEST                                    @M4A*/         
*/*                                                              @M4A*/         
*/*01*  DESCRIPTIVE NAME = Test parameter for alphanumeric       @M4A*/         
*/*                         valid values are A - Z   0 - 9       @M4A*/         
*/*                         and special values $,#,@             @M4A*/         
*/*                        First character must be A-Z or $,#,@  @M4A*/         
*/*                                                              @M4A*/         
*/*01*  MACRO CALL =                                             @M4A*/         
*/*       label  NAMETEST STRING= character string               @M4A*/         
*/*                                                              @M4A*/         
*/*01*  FUNCTION = Checks an Input string to be name             @M4A*/         
*/*                (alphanumeric or special ($,#,@) characters,  @M4A*/         
*/*                 first character being alphabetic or special) @M4A*/         
*/*                                                              @M4A*/         
*/*01*  NOTES =  None.                                           @M4A*/         
*/*                                                              @M4A*/         
*/*02*    DEPENDENCIES = None.                                   @M4A*/         
*/*                                                              @M4A*/         
*/*01*  INPUT =   character string                               @M4A*/         
*/*                                                              @M4A*/         
*/*01*  OUTPUT = OK                                              @M4A*/         
*/*                                                              @M4A*/         
*/********************************************************************/         
.*                                                               @M4A           
.SKIP    ANOP                                                    @M4A           
         GBLB  &INTERR                Internal error flag        @M4A           
         GBLC  &CWK                   Character work variable    @M4A           
         LCLA  &NDX                   Substring index            @M4A           
.*                                                               @M4A           
.*********************************************************************          
.*                                                               @M4A*          
.*       Check the Input String                                  @M4A*          
.*                                                               @M4A*          
.*********************************************************************          
&INTERR  SETB  0                      No error                   @M4A           
&NDX     SETA  1                      Points to 1st char of      @M4A           
.*                                    STRING                     @M4A           
.*********************************************************************          
.*       Loop to validate each character in Input string         @M4A           
.*********************************************************************          
.LOOP    ANOP                                                    @M4A           
         AIF   ('&STRING'(&NDX,1) EQ '$').GOODCHA  Valid char    @M4A           
         AIF   ('&STRING'(&NDX,1) EQ '#').GOODCHA  Valid char    @M4A           
         AIF   ('&STRING'(&NDX,1) EQ '@').GOODCHA  Valid char    @M4A           
.*                                                  ($,#,@)      @M4A           
         AIF   ('&STRING'(&NDX,1) LT 'A').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE 'I').GOODCHA  Valid char    @M4A           
.*                                                 (A-I)         @M4A           
         AIF   ('&STRING'(&NDX,1) LT 'J').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE 'R').GOODCHA  Valid char    @M4A           
.*                                                 (J-R)         @M4A           
         AIF   ('&STRING'(&NDX,1) LT 'S').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE 'Z').GOODCHA  Valid char    @M4A           
.*                                                 (S-Z)         @M4A           
         AIF   (&NDX EQ 1).BADCHA  First char not alphabetic     @M4A           
         AIF   ('&STRING'(&NDX,1) LT '0').BADCHA                 @M4A           
         AIF   ('&STRING'(&NDX,1) LE '9').GOODCHA  Valid char    @M4A           
.*                                                 (0-9)         @M4A           
.*                                                               @M4A           
.BADCHA  ANOP                                 Invalid character  @M4A           
&CWK     SETC  '&STRING'(&NDX,1)              Isolate invalid    @M4A           
&INTERR  SETB  1                              Indicates error    @M4A           
         AGO   .ENDCK                                                           
.*                                            character          @M4A           
.GOODCHA ANOP                                                    @M4A           
&NDX     SETA  &NDX+1                         Point to next digit@M4A           
         AIF   (&NDX LE K'&STRING).LOOP       Check next digit   @M4A           
.ENDCK   ANOP                                 End of check       @M4A           
         MEND                                                                   
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - SPECIAL CHAR TEST FOR PARAMETER '           
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                         
         SPECIAL &STRING=                                                       
.*                                                                              
         AGO   .SKIP                                             @LEA           
*/********************************************************************/         
*/*                                                              @LEA*/         
*/*01*  MACRO NAME = SPECIAL                                     @LEA*/         
*/*                                                              @LEA*/         
*/*01*  DESCRIPTIVE NAME = Test parameter for special character  @LEA*/         
*/*                         valid values are  " $ # @ "          @LEA*/         
*/*                                                              @LEA*/         
*/*01*  MACRO CALL =                                             @LEA*/         
*/*       label  SPECIAL  INPUT= Character String                @LEA*/         
*/*                                                              @LEA*/         
*/*01*  FUNCTION = Checks an Input string to be a special        @LEA*/         
*/*                character                                     @LEA*/         
*/*                                                              @LEA*/         
*/*01*  NOTES =  None.                                           @LEA*/         
*/*                                                              @LEA*/         
*/*02*    DEPENDENCIES = None.                                   @LEA*/         
*/*                                                              @LEA*/         
*/*01*  INPUT =   STRING=                                        @LEA*/         
*/*                                                              @LEA*/         
*/*01*  OUTPUT = OK  (via global variable)                       @LEA*/         
*/*                                                              @LEA*/         
*/********************************************************************/         
.*                                                               @LEA           
.SKIP    ANOP                                                    @LEA           
         GBLB  &INTERR                Internal error flag        @LEA           
         GBLC  &CWK                   Character work variable    @LEA           
         LCLA  &NDX                   Substring index            @LEA           
.*                                                               @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Check the Input String                                  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
&INTERR  SETB  0                    No error                     @LEA           
&NDX     SETA  1                    Points to 1st char of STRING @LEA           
.*********************************************************************          
.*       Loop to validate each character in Input string         @LEA           
.*********************************************************************          
.LOOP    ANOP                                                    @LEA           
         AIF   ('&STRING'(&NDX,1) EQ '$').GOODSPE  Valid char $  @LEA           
         AIF   ('&STRING'(&NDX,1) EQ '#').GOODSPE  Valid char #  @LEA           
         AIF   ('&STRING'(&NDX,1) EQ '@').GOODSPE  Valid char @  @LEA           
.*                                                               @LEA           
.BADSPE  ANOP                               Invalid character    @LEA           
&CWK     SETC  '&STRING'(&NDX,1)            Isolate invalid char @LEA           
&INTERR  SETB  1                            Indicates error      @LEA           
         AGO   .ENDSP                                            @LEA           
.GOODSPE ANOP                                                    @LEA           
&NDX     SETA  &NDX+1                       Point to next digit  @LEA           
         AIF   (&NDX LE K'&STRING).LOOP     Check next digit     @LEA           
.ENDSP   ANOP                               End of check         @LEA           
         MEND                                                                   
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - SPECIAL2 CHAR TEST FOR PARAMETER'           
         MACRO  --  PARSE EACH CHARACTER OF A PARAMETER                         
         SPECIAL2 &STRING=                                                      
.*                                                                              
         AGO   .SKIP                                             @LEA           
*/********************************************************************/         
*/*                                                              @LEA*/         
*/*01*  MACRO NAME = SPECIAL2                                    @LEA*/         
*/*                                                              @LEA*/         
*/*01*  DESCRIPTIVE NAME = Test parameter for special character  @LEA*/         
*/*                         valid values are  " - : + _ "        @LEA*/         
*/*                                                              @LEA*/         
*/*01*  MACRO CALL =                                             @LEA*/         
*/*       label  SPECIAL  INPUT= Character String                @LEA*/         
*/*                                                              @LEA*/         
*/*01*  FUNCTION = Checks an Input string to be a special        @LEA*/         
*/*                character                                     @LEA*/         
*/*                                                              @LEA*/         
*/*01*  NOTES =  None.                                           @LEA*/         
*/*                                                              @LEA*/         
*/*02*    DEPENDENCIES = None.                                   @LEA*/         
*/*                                                              @LEA*/         
*/*01*  INPUT =   STRING=                                        @LEA*/         
*/*                                                              @LEA*/         
*/*01*  OUTPUT = OK  (via global variable)                       @LEA*/         
*/*                                                              @LEA*/         
*/********************************************************************/         
.SKIP    ANOP                                                    @LEA           
         GBLB  &INTERR                Internal error flag        @LEA           
         GBLC  &CWK                   Character work variable    @LEA           
         LCLA  &NDX                   Substring index            @LEA           
.*                                                               @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Check the Input String                                  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
&INTERR  SETB  0                    No error                     @LEA           
&NDX     SETA  1                    Points to 1st char of STRING @LEA           
.*********************************************************************          
.*       Loop to validate each character in Input string         @LEA           
.*********************************************************************          
.LOOP    ANOP                                                    @LEA           
         AIF   ('&STRING'(&NDX,1) EQ '-').GOODSP2  Valid char -  @LEA           
         AIF   ('&STRING'(&NDX,1) EQ ':').GOODSP2  Valid char :  @LEA           
         AIF   ('&STRING'(&NDX,1) EQ '+').GOODSP2  Valid char +  @LEA           
         AIF   ('&STRING'(&NDX,1) EQ '_').GOODSP2  Valid char _  @LEA           
.BADSP2  ANOP                               Invalid character    @LEA           
&CWK     SETC  '&STRING'(&NDX,1)            Isolate invalid char @LEA           
&INTERR  SETB  1                            Indicates error      @LEA           
         AGO   .ENDSP2                                           @LEA           
.GOODSP2 ANOP                                                    @LEA           
&NDX     SETA  &NDX+1                       Point to next digit  @LEA           
         AIF   (&NDX LE K'&STRING).LOOP     Check next digit     @LEA           
.ENDSP2  ANOP                               End of check         @LEA           
         MEND                                                                   
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - STRLEN DETERMINES LENGTH OF STRING'         
         MACRO  --  PARSE EACH CHARACTER OF A STRING                            
         STRLEN   &STRING=                                                      
.*                                                                              
         AGO   .SKIP                                             @L2A           
*/********************************************************************/         
*/*                                                              @L2A*/         
*/*01*  MACRO NAME = STRLEN                                      @L2A*/         
*/*                                                              @L2A*/         
*/*01*  DESCRIPTIVE NAME = Determines length of a parameter      @L2A*/         
*/*                         string                               @L2A*/         
*/*                                                              @L2A*/         
*/*01*  MACRO CALL =                                             @L2A*/         
*/*       label  STRLEN   INPUT= Character String                @L2A*/         
*/*                                                              @L2A*/         
*/*01*  FUNCTION = Determines length of input string             @L2A*/         
*/*                                                              @L2A*/         
*/*01*  NOTES =  None.                                           @L2A*/         
*/*                                                              @L2A*/         
*/*02*    DEPENDENCIES = None.                                   @L2A*/         
*/*                                                              @L2A*/         
*/*01*  INPUT =   STRING=                                        @L2A*/         
*/*                                                              @L2A*/         
*/*01*  OUTPUT = GBLLEN (via global variable)                    @L2A*/         
*/*                                                              @L2A*/         
*/********************************************************************/         
.SKIP    ANOP                                                    @L2A           
         GBLA  &$STRLEN               Length of string           @L2A           
         LCLA  &NDX                   Substring index            @L2A           
.*                                                               @L2A           
.*********************************************************************          
.*                                                               @L2A*          
.*       Check the Input String                                  @L2A*          
.*                                                               @L2A*          
.*********************************************************************          
&NDX     SETA  1                    Points to 1st char of STRING @L2A           
&$STRLEN SETA  0                            Initialize length    @L2A           
.*********************************************************************          
.*       Loop to validate each character in Input string         @L2A           
.*********************************************************************          
.LOOP    ANOP                                                    @L2A           
         AIF   (&NDX EQ K'&STRING).GOODST0                                      
         AIF   (('&STRING'(&NDX,2) EQ '''''') OR                       *        
               ('&STRING'(&NDX,2) EQ '&&')).GOODST1              @L2A           
.GOODST0 ANOP  ,                                                 @L2A           
&NDX     SETA  &NDX+1                       Increments to next   @L2A           
         AGO   .ENDSP1                                           @L2A           
.GOODST1 ANOP                                                    @L2A           
&NDX     SETA  &NDX+2                       Point to next digit  @L2A           
.ENDSP1  ANOP  ,                                                 @L2A           
&$STRLEN SETA  &$STRLEN+1                   Increment string len @L2A           
         AIF   (&NDX LE K'&STRING).LOOP     Check next digit     @L2A           
.ENDSP2  ANOP                               End of check         @L2A           
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - RDEVICE - REAL DEVICE DEFINITION'           
         MACRO  --  PARSE RDEVICE STATEMENT                                     
&SYMBOL  RDEVICE &ADAPTER=,&AFP=,&BASEADD=,&CHARS=,&CLASS=,            *        
               &CPNAME=,&CUTYPE=,&DEVNO=,&DEVTYPE=,&DPMSIZE=,          *        
               &DEST=,&FCB=,&FEATURE=,&FLASH=,&FOLD=,&FORM=,           *        
               &IMAGE=,&INDEX=,&MODEL=,&SEP=,&SETADDR=,&OFFLINE=,      *        
               &SHARED=,&ADDRESS=,&UIRATE=,&DYNAMIC=,&MARK=,&LIMIT=,   *        
               &MDC=,&USERPRM=,&EQID=,&SCHSET=                                  
.*                                                               @LYC           
         AGO   .SKIP                                             @LEA           
*/********************************************************************/         
*/*01*  MACRO NAME = RDEVICE                                     @LEA*/         
*/*                                                              @LEA*/         
*/*01*  DESCRIPTIVE NAME = Real I/O Device characteristics.      @LEA*/         
*/*                                                              @LEA*/         
*/*01*  MACRO CALL =                                             @LEA*/         
*/*       label  RDEVICE  ADAPTER= adapter                       @LEA*/         
*/*                       ADDRESS= A SYNONYM FOR DEVNO           @LEA*/         
*/*                       AFP=     YES ! NO                      @LEA*/         
*/*                       BASEADD= device number                 @LEA*/         
*/*                       CHARS=   name of default UCS buffer    @LEA*/         
*/*                                image                         @LEA*/         
*/*                       CLASS=   cl ! (cl<,cl>...) ! * ! NONE  @LEA*/         
*/*                       CPNAME=  name of emulation program     @LEA*/         
*/*                       CUTYPE=  control unit type and model   @LEA*/         
*/*                       DEST=    destination value(s)          @LEA*/         
*/*                       DEVNO=   number ! (number,nnn)         @LEA*/         
*/*                       DEVTYPE= device type                   @LEA*/         
*/*                       DPMSIZE= maximum queue size for 3800   @LEA*/         
*/*                       EQID=    device equivalency ID         @HYA*/         
*/*                       FCB=     name of default FCB image     @LEA*/         
*/*                       FEATURE= name ! (name<,name>...)       @LEA*/         
*/*                       FLASH=   name of flash overlay         @LEA*/         
*/*                       FOLD=    YES ! NO                      @LEA*/         
*/*                       FORM=    operform ! * ! STANDARD       @LEA*/         
*/*                       IMAGE=   name of image library         @LEA*/         
*/*                       INDEX=   printing start position       @LEA*/         
*/*                       MODEL=   model number                  @LEA*/         
*/*                       OFFLINE= YES ! NO                      @HIA*/         
*/*                       SEP=     YES ! NO                      @LEA*/         
*/*                       SETADDR= set address command           @LEA*/         
*/*                       SHARED=  YES ! NO                      @LEA*/         
*/*                       SCHSET=  subchannel set number         @LYA*/         
*/*                       UIRATE=  decimal value!DEFAULT!INFINITY@LEA*/         
*/*                       USERPRM= list of (parm id,parm val)    @HPA*/         
*/*                       DYNAMIC= YES ! NO                      @MWA*/         
*/*                       MARK   = YES ! NO                      @MWA*/         
*/*                       LIMIT  = N or 1 to 99999999            @MWA*/         
*/*                       MDC    = OFF ! DFLTON ! DFLTOFF        @MWA*/         
*/*                                                              @LEA*/         
*/*01*  FUNCTION = Describes:                                    @LEA*/         
*/*              - The real I/O device number                    @LEA*/         
*/*              - The device characteristics                    @LEA*/         
*/*                                                              @LEA*/         
*/*01*  NOTES =  None.                                           @LEA*/         
*/*                                                              @LEA*/         
*/*02*    DEPENDENCIES = None.                                   @LEA*/         
*/*                                                              @LEA*/         
*/*01*  INPUT =   ADAPTER= 1 to 5 alphanumeric Character         @LEA*/         
*/*               ADDRESS= a synonym for DEVNO                   @LEA*/         
*/*               AFP=     YES ! NO                              @LEA*/         
*/*               BASEADD= 1 to 4 hex digit device number        @LEA*/         
*/*               CHARS=   1 to 4 characters                     @LEA*/         
*/*               CLASS=   1 to 8 values, each consisting of 1   @LEA*/         
*/*                               alphanumeric Character         @LEA*/         
*/*                        or                                    @LEA*/         
*/*                          string of 1..8 alphanumeric         @LEA*/         
*/*                          characters                          @LEA*/         
*/*                        or                                    @LEA*/         
*/*                          the Keyword '*'                     @LEA*/         
*/*                        or                                    @LEA*/         
*/*                          the Keyword 'NONE'                  @LEA*/         
*/*               CPNAME=  1 to 8 alphanumeric character name    @LEA*/         
*/*               CUTYPE=  valid types are 3880-11 ! 3880-21     @LEA*/         
*/*               DEST=    1 to 4 values, each up to 8 alpha-    @LEA*/         
*/*                           numeric characters                 @LEA*/         
*/*                        It is only checked for correct number @LEA*/         
*/*                          of values (up to 4) and correct     @LEA*/         
*/*                          lenth of each operand (1...8)       @LEA*/         
*/*           #   DEVNO=   1 or 2 sublist entries:               @LEA*/         
*/*                          1 to 4 hex digit device number,     @LEA*/         
*/*                          followed by an optional 1 to 4      @LEA*/         
*/*                          decimal digit replication count     @LEA*/         
*/*           #   DEVTYPE= 1 to 8 alphanumeric characters        @LEA*/         
*/*               DPMSIZE= 1 decimal digit, range 1..9           @LEA*/         
*/*               EQID=    1 to 8 alhanumeric characters         @HYA*/         
*/*               FCB=     1 to 4 character name                 @LEA*/         
*/*               FEATURE= feature name list (1 - 10 characters) @LEA*/         
*/*               FLASH=   1 to 8 character name                 @LEA*/         
*/*               FOLD=    YES ! NO                              @LEA*/         
*/*               FORM=    1 to 8 character ! * ! STANDARD       @LEA*/         
*/*               IMAGE=   1 to 8 character name                 @LEA*/         
*/*               INDEX=   1 - 31                                @LEA*/         
*/*               MODEL=   1 to 4 alphameric characters          @LEA*/         
*/*               OFFLINE= YES ! NO                              @HIA*/         
*/*               SEP=     YES ! NO                              @LEA*/         
*/*               SETADDR= 0 - 4                                 @LEA*/         
*/*               SHARED=  YES ! NO                              @LEA*/         
*/*               SCHSET=  subchannel set number                 @LYA*/         
*/*               UIRATE=  decimal value                         @LEA*/         
*/*               USERPRM= list of (parm_id,parm_val)            @HPA*/         
*/*               DYNAMIC= YES ! NO                              @MWA*/         
*/*               MARK   = YES ! NO                              @MWA*/         
*/*               LIMIT  = N or 1 to 99999999                    @MWA*/         
*/*               MDC    = OFF ! DFLTON ! DFLTOFF                @MWA*/         
*/*                                                              @LEA*/         
*/*           #   - required Keyword                             @LEA*/         
*/*                                                              @LEA*/         
*/*01*  OUTPUT = Internal text                                   @LEA*/         
*/*                                                              @LEA*/         
*/********************************************************************/         
.*                                                                              
.SKIP    ANOP                                                    @LEA           
         GBLA  &SYSITRN               HCD statement number       @LEA           
         GBLB  &ERROR                 Error flag                 @LEA           
         GBLB  &INTERR                Internal error flag        @LEA           
         GBLC  &CWK                   Character work variable    @LEA           
         LCLB  &SUBLI                 CLASS in sublist indicator @LEA           
         LCLA  &AWK                   Arithmetic work variable   @LEA           
         LCLA  &L                     Max or req'd operand length@LEA           
         LCLA  &MAXSUB                Max nbr of sublist entries @LEA           
         LCLA  &MAXVAL                Maximum value of operand   @LEA           
         LCLA  &NDX                   Substring index            @LEA           
         LCLA  &NUSRP                 Number of user parameters  @HPA           
         LCLA  &IND                   Substring index            @LEA           
         LCLA  &PFLAG                 Parameter flags            @HIA           
         LCLA  &SSID                  subchannel set id          @LYA           
         LCLA  &OFFY                  OFFLINE=YES                @HIA           
         LCLA  &VFL2                  Parameter flags 2          @HIA           
         LCLA  &OFFL                  OFFLINE parameter          @HIA           
         LCLA  &SUB                   Sublist element number     @LEA           
         LCLA  &UPRMVLN(32)           Parameter value length     @HPA           
         LCLA  &UPRMVCT(32)           Parameter value count      @HPA           
         LCLA  &XPRMC                 Count of parameters        @LEA           
         LCLA  &XLEN                  Length of parameter        @LEA           
         LCLC  &PARM                  name of parameter for mnote@LEA           
         LCLC  &CKTY                  set type of digit          @LEA           
         LCLC  &CNO                   EBCDIC version of SYSITRN  @LEA           
         GBLC  &ADDR                  Common name for &ADDRESS   @LEA           
.*                                       and  &DEVNO             @LEA           
         GBLC  &DVNO                  current DEVNO or ADDRESS   @LEA           
         GBLC  &REPL                  saved replication factor   @LEA           
         GBLC  &DEVTYP                changed DEVTYPE            @LEA           
         GBLC  &NEWDEST               changed DEST               @LEA           
         LCLC  &TEST                  variable for single char   @LEA           
.*                                    check                      @LEA           
         LCLC  &UPRMID(32)            Parameter id               @HPA           
         LCLC  &UPRMVAL(256)          Parameter values           @HPA           
         ACTR  10000                  Set for infinite loop      @LEA           
.*                                    control                    @LEA           
.*                                                                              
.*********************************************************************          
.*                                                               @LEA*          
.*       START PROCESSING RDEVICE STATEMENTS                     @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.*                                                               @LEA           
&PFLAG   SETA    0                    Initially no flag set      @HIA           
&SSID    SETA    0                    default subchannel set id  @LYA           
&VFL2    SETA    0                    Initially no flag set      @HIA           
&OFFY    SETA    128                  Set OFFLINE=YES flag       @HIA           
&OFFL    SETA    1                    Set OFFLINE parameter      @HIA           
&XPRMC   SETA    0                    initially no parameter     @LEA           
.*                                       specified               @LEA           
&XLEN    SETA    0                    initially extention length @HPA           
.*                                       is zero                 @HPA           
&SYMBOL  TXTHDR RDEVICE               Build header for RDEVICE                  
.*                                    record                     @LEA           
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS80    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS80            and continue                     @P3A         
.*                                                                              
.XPOS80  ANOP  ,                                                   @P3A         
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate ADAPTER             1 - 5 characters           @LEA*          
.*                                    A - Z and 0 - 9            @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKADA   ANOP                                                    @LEA           
&PARM    SETC  'ADAPTER'                 Set parameter for mnote @LEA           
&L       SETA  5                         Maximum ADAPTER length  @LEA           
         AIF   ('&ADAPTER' EQ '').ENDADA ADAPTER not specified   @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                          parameters           @LEA           
         AIF   (N'&ADAPTER GT 1).ADASUB  ADAPTER is in sublist   @LEA           
.*                                          format               @LEA           
         AIF   (K'&ADAPTER LE &L).ADALEN Number of characters    @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDADA                                           @LEA           
.ADALEN  ANOP                                                    @LEA           
&XLEN    SETA  &XLEN+5                   Increment length of     @LEA           
.*                                          parameters           @LEA           
         ALPHANUM STRING=&ADAPTER        check ADAPTER to be     @LEA           
.*                                          alphanumeric         @LEA           
         AIF   (&INTERR).ADAERR          invalid character found @LEA           
         AGO   .ENDADA                                           @LEA           
.ADAERR  ANOP                                                    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER'            
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDADA                                           @LEA           
.*                                                               @LEA           
.ADASUB  ANOP                                                    @LEA           
         MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.*                                                               @LEA           
.ENDADA  ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate DEST           checked is only                 @LEA*          
.*                                - valid number of operands (4) @LEA*          
.*                                - valid length of operand  (8) @LEA*          
.*********************************************************************          
.CKDEST  ANOP                                                    @LEA           
&PARM    SETC  'DEST'                    Set parameter for mnote @LEA           
         AIF   ('&DEST' EQ '').DEEND     DEST not specified      @LEA           
&COUNT   SETA  N'&DEST                   Save number of operands @LEA           
&SUB     SETA  1                         Point to 1st DEST       @LEA           
.*                                          operand              @LEA           
&MAXSUB  SETA  4                         Maximum number of       @LEA           
.*                                          operands             @LEA           
&L       SETA  8                         Length of DEST operand  @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                          parameters           @LEA           
         AIF   ('&DEST' EQ '*').VALID    Valid operand           @LEA           
         AIF   ('&DEST' EQ 'OFF').VALID  Valid operand           @LEA           
         AIF   (N'&DEST GE 1).DELOOP     Operand is in sublist   @LEA           
.*                                          format               @LEA           
.DELOOP  ANOP                                                    @LEA           
         AIF   (N'&DEST GT &MAXSUB).DE1OP     Too many operands  @LEA           
.********************************************************************           
.*       Loop to validate each DEST operand                      @LEA           
.********************************************************************           
.DELOOPB ANOP                                                    @LEA           
&NDX     SETA  1                                                 @LEA           
         AIF   ('&DEST(&SUB)' EQ '').DENULL   Empty operand      @LEA           
         AIF   (K'&DEST(&SUB) LE &L).NXTDE    Correct operand    @LEA           
.*                                               length          @LEA           
         MNOTE 8,'033 &PARM PARAMETER SUBLIST ENTRY ''&SUB'' EXCEEDS   C        
               &L CHARACTERS.'                                   @LEA           
&ERROR   SETB  1                         Indicate error          @LEA           
.NXTDE   ANOP                            Proceed to next operand @LEA           
&SUB     SETA  &SUB+1                    Points to next sublist  @LEA           
         AIF   (&SUB LE N'&DEST).DELOOPB                         @LEA           
         AGO   .DEEND1                                           @LEA           
.DENULL  ANOP                                                    @LEA           
         MNOTE 8,'018 &PARM SUBLIST ENTRY ''&SUB'' MISSING.'     @LEA           
&ERROR   SETB  1                         Indicate error          @LEA           
         AGO   .DEEND                                            @LEA           
.DE1OP   ANOP                                                    @LEA           
         MNOTE 8,'015 &PARM PARAMETER EXCEEDS ''&MAXSUB'' SUBLIST ENTRI*        
               ES.'                                              @LEA           
&ERROR   SETB  1                         Indicate error          @LEA           
         AGO   .DEEND                                            @LEA           
.VALID   ANOP                                                    @LEA           
&XLEN    SETA  &XLEN+&L                  Length of parameter     @LEA           
.*                                          entry                @LEA           
         AGO   .DEEND                                            @LEA           
.DEEND1  ANOP                                                    @LEA           
&XLEN    SETA  &XLEN+(&COUNT*&L)         Increment parameter len @LEA           
.DEEND   ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate DEVNO        (number         , count)          @LEA*          
.*            or ADDRESS        1..4 hex digit , 1..4 dec digit  @LEA*          
.*                              required       , optional        @LEA*          
.********************************************************************           
.CKDEVN  ANOP                                                    @LEA           
&PARM    SETC  'DEVNO/ADDRESS'       Set message parameter       @LEA           
&MAXSUB  SETA  2                     Maximum number of operands  @LEA           
         AIF   ('&DEVNO' EQ '' AND '&ADDRESS' EQ '').NOADDR      @LEA           
         AIF   ('&DEVNO' NE '' AND '&ADDRESS' NE '').INVCOM      @LEA           
         AIF   ('&DEVNO' EQ '').CKADDR  Keyword ADDRESS spec     @LEA           
         AGO   .CKDEV1                  Keyword DEVNO specified  @LEA           
.CKADDR  ANOP                                                    @LEA           
         AIF   (N'&ADDRESS GT &MAXSUB).ADOPER Too many operands  @LEA           
&ADDR    SETC  '&ADDRESS'                Save wohle operand      @LEA           
&DVNO    SETC  '&ADDRESS(1)'             Save DEVICE NUMBER      @LEA           
&REPL    SETC  '&ADDRESS(2)'             Replication factor      @LEA           
         AGO   .CKDEV                    Check Address           @LEA           
.*                                                                              
.CKDEV1  ANOP                                                    @LEA           
         AIF   (N'&DEVNO GT &MAXSUB).ADOPER   Too many operands  @LEA           
&ADDR    SETC  '&DEVNO'                  Save whole operand      @LEA           
&DVNO    SETC  '&DEVNO(1)'               Save DEVICE NUMBER      @LEA           
&REPL    SETC  '&DEVNO(2)'               Save Replication factor @LEA           
.*                                                                              
.CKDEV   ANOP                                                                   
         AIF   ('&DVNO' EQ '' AND '&REPL' NE '').NODEVNO                        
&L       SETA  4                         Maximum length of device@LEA           
.*                                          number               @LEA           
         AIF   (K'&DVNO LE &L ).DNLEN     Number of digits       @LEA           
         MNOTE 8,'022 &PARM PARAMETER DEVICE NUMBER SUBLIST ENTRY MAY B*        
               E UP TO &L DIGITS.'                               @LEA           
&ERROR   SETB  1                              Indicates error    @LEA           
.DNLEN   ANOP                                                    @LEA           
&NDX     SETA  1                              Points to 1st      @LEA           
.*                                            digit of device no @LEA           
.*********************************************************************          
.*       Loop to validate each digit in the device number (DEVNO)@LEA           
.*********************************************************************          
.DNLOOP  ANOP                                                    @LEA           
&CKTY    SETC 'HEX'                     set type of digit        @LEA           
         HEXCHECK STRING=&DVNO          check DEVNO to be hex    @LEA           
         AIF   (&INTERR).DEVERR          DEVNO not hex           @LEA           
         AGO   .CKACNT                   Go check replication    @LEA           
.*                                         factor                @LEA           
.DEVERR  ANOP                                                    @LEA           
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER'          
&ERROR   SETB  1                              Indicates error    @LEA           
         AGO   .ENDDEV                                           @LEA           
.*                                                               @LEA           
.NODEVNO MNOTE 8,'017 DEVICE NUMBER REQUIRED IN SUBLIST ENTRY FOR &PARM*        
                 PARAMETER.'                                     @LEA           
&ERROR   SETB  1                              Indicates error    @LEA           
         AGO   .ENDDEV                                           @LEA           
.*********************************************************************          
.*                             Validate replication factor       @LEA*          
.*********************************************************************          
.CKACNT  ANOP                                                    @LEA           
&L       SETA  4                      Maximum replication factor @LEA           
.*                                           length              @LEA           
&MAXVAL  SETA  4095                   Maximum replication factor @LEA           
         AIF   ('&REPL' EQ '').ENDDEV        Count not specified @LEA           
         AIF   (K'&REPL LE &L ).DCLEN        Number of digits    @LEA           
         MNOTE 8,'023 &PARM PARAMETER REPLICATION FACTOR SUBLIST ENTRY *        
               EXCEEDS &L DIGITS.'                               @LEA           
&ERROR   SETB  1                              Indicates error    @LEA           
.DCLEN   ANOP                                                    @LEA           
&NDX     SETA  1                         Points to 1st digit of  @LEA           
.*                                         device count          @LEA           
         AIF   ('&REPL' LT '1').NOTZERO    Invalid if less       @LEA           
.*                                                than 1         @LEA           
.*********************************************************************          
.*       Loop to validate each digit in the replication factor   @LEA           
.*********************************************************************          
.DCLOOP  ANOP                                                    @LEA           
&CKTY    SETC 'DECIMAL'                 set type of digit        @LEA           
         AIF   ('&REPL'(&NDX,1) LT '0').BADDC   Not decimal      @LEA           
         AIF   ('&REPL'(&NDX,1) LE '9').GOODDC  Good digit (0-9) @LEA           
.*                                                               @LEA           
.BADDC   ANOP                         Invalid DECIMAL digit      @LEA           
&CWK     SETC  '&REPL'(&NDX,1)        Isolate invalid digit      @LEA           
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN REPLICATION FACTO*        
               R SUBLIST ENTRY FOR &PARM PARAMETER.'             @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
&AWK     SETA  1                         Indicate invalid digit  @LEA           
.GOODDC  ANOP                                                    @LEA           
&NDX     SETA  &NDX+1                 Points to next digit in    @LEA           
.*                                         device count          @LEA           
         AIF   (&NDX LE K'&REPL).DCLOOP    Check next digit      @LEA           
         AIF   (&AWK EQ 1).ENDDEV                                @LEA           
         AIF   (&REPL GE 1 AND &REPL LE &MAXVAL).ENDDEV          @LEA           
.*                                                               @LEA           
         MNOTE 8,'042 &PARM PARAMETER REPLICATION FACTOR VALUE MUST BE *        
               A NUMBER FROM 1 TO &MAXVAL.'                      @LEA           
&ERROR   SETB  1                      Indicates error            @LEA           
         AGO   .ENDDEV                Check next keyword         @LEA           
.NOTZERO MNOTE 8,'041 &PARM PARAMETER REPLICATION FACTOR VALUE MUST BE *        
               GREATER THAN 0.'                                  @LEA           
&ERROR   SETB  1                      Indicates error            @LEA           
         AGO   .ENDDEV                Check next keyword         @LEA           
.ADOPER  MNOTE 8,'015 &PARM PARAMETER EXCEEDS ''&MAXSUB'' SUBLIST ENTRI*        
               ES.'                                              @LEA           
.*                                                               @LEA           
&ERROR   SETB  1                      Indicates error            @LEA           
         AGO   .ENDDEV                Check next keyword         @LEA           
.NOADDR  MNOTE 8,'002 &PARM KEYWORD NOT SPECIFIED.'              @LEA           
&ERROR   SETB  1                      Indicates error            @LEA           
         AGO   .ENDDEV                                           @LEA           
.INVCOM  MNOTE 8,'001 INVALID COMBINATION OF OPERANDS.'          @LEA           
&ERROR   SETB  1                              Indicates error    @LEA           
         AGO   .ENDDEV                                           @LEA           
.ENDDEV  ANOP                         Check next keyword         @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate DEVTYPE             1 - 8 characters           @LEA*          
.*                required            A - Z  0 - 9               @LEA*          
.*********************************************************************          
.CKDEVT  ANOP                                                    @LEA           
&PARM    SETC  'DEVTYPE'                 Set parameter for mnote @LEA           
&L       SETA  8                          Maximum DEVTYPE length @LEA           
&DEVTYP  SETC  '&DEVTYPE'                 Save Devicetype        @LEA           
         AIF   ('&DEVTYPE' EQ '').NODEVT  DEVTYPE not specified  @LEA           
         AIF   (N'&DEVTYPE GT 1).SUBUNIT  DEVTYPE is in sublist  @LEA           
.*                                           format              @LEA           
         AIF   (K'&DEVTYPE LE &L).DEVCHAR maximum Number of      @LEA           
.*                                           Characters          @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDDEVT                  Check next keyword      @LEA           
.SUBUNIT MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDDEVT                  Check next keyword      @LEA           
.NODEVT  MNOTE 8,'002 &PARM KEYWORD NOT SPECIFIED.'              @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDDEVT                  Check next keyword      @LEA           
.DEVCHAR ANOP                                                    @LEA           
         AIF   ('&DEVTYPE' EQ 'FB-512').FBCH1 if FB-512          @LEA           
         ALPHANUM STRING=&DEVTYPE        Check the characters    @LEA           
         AIF   (&INTERR).INVCHAR         Invalid characters found@LEA           
         AIF   ('&DEVTYPE' EQ '3330').DEVCH1  if Devicetype 3330 @LEA           
         AIF   ('&DEVTYPE' EQ '3350').CUCH    if Devicetype 3350 @LEA           
         AGO   .ENDDEVT                  Check next Keyword      @LEA           
.DEVCH1  ANOP                                                                   
         AIF   ('&FEATURE' EQ 'VUA').DEVCH2   and FEATURE = VUA  @LEA           
         AGO   .ENDDEVT                  Check next Keyword      @LEA           
.DEVCH2  ANOP                                                                   
&DEVTYP  SETC  '3330V'                     change DEVICE TYPE    @LEA           
         AGO   .ENDDEVT                  Check next Keyword      @LEA           
.FBCH1   ANOP                                                                   
&DEVTYP  SETC  'FB512'                     change DEVICE TYPE    @LEA           
         AGO   .ENDDEVT                  Check next Keyword      @LEA           
.*                                                                              
.CUCH    AIF   ('&CUTYPE' EQ '3880-11').CU0P   if CU = 3880-11   @LEA           
         AIF   ('&CUTYPE' EQ '3880-21').CU1P   if CU = 3880-21   @LEA           
         AGO   .ENDDEVT                                          @LEA           
.CU0P    ANOP                                                    @LEA           
&DEVTYP  SETC  '3350P'                   Change DEVTYP to 3350P  @LEA           
         AGO   .ENDDEVT                  Check next Keyword      @LEA           
.CU1P    ANOP                                                    @LEA           
&DEVTYP  SETC  '3351P'                   Change DEVTYP to 3351P  @LEA           
         AGO   .ENDDEVT                  Check next Keyword      @LEA           
.*                                                                              
.INVCHAR ANOP                                                    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicate error          @LEA           
.ENDDEVT ANOP                                                    @LEA   10918099
.*********************************************************************          
.*                                                               @LYA*          
.*       Validate SCHSET              1 Decimal digit            @LYA*          
.*                                    Range: 0 - 3               @LYA*          
.*                                                               @LYA*          
.*********************************************************************          
.CKSSID  ANOP                                                                   
&PARM    SETC  'SCHSET'                  Set parameter for mnote                
&L       SETA  1                         Maximum SCHSET length                  
&MAXVAL  SETA  3                         Maximum SCHSET value                   
         AIF   ('&SCHSET' EQ '').ENDSS   SCHSET not specified                   
&SSID    SETA  &SCHSET                                                          
.ENDSS   ANOP                            Check next keyword                     
.*********************************************************************  10919099
.*                                                               @LEA*  10920099
.*       Validate AFP                 NO ! YES                   @LEA*  10921099
.*                                                               @LEA*  10922099
.*********************************************************************          
.CKAFP   ANOP                                                    @LEA           
&PARM    SETC  'AFP'                     Set parameter for mnote @LEA           
         AIF   ('&AFP' EQ '').ENDAFP     AFP not specified       @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA           
.*                                            parameters         @LEA           
.CKAFP1  ANOP                                                    @LEA           
         AIF   ('&AFP' EQ 'NO').ENDAFP   Default (NO) specified  @LEA           
         AIF   ('&AFP' EQ 'N').ENDAFP    Default (NO) specified  @LEA           
         AIF   ('&AFP' EQ 'YES').ENDAFP  AFP=YES specified       @LEA           
         AIF   ('&AFP' EQ 'Y').ENDAFP    AFP=Y   specified       @LEA           
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDAFP                   Check next keyword      @LEA           
.ENDAFP  ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate FEATURE        1...n sublist entries  each     @LEA*          
.*                               1...10 character (A - Z  0 - 9) @LEA*          
.*********************************************************************          
.CKFEAT  ANOP                                                    @LEA           
&PARM    SETC  'FEATURE'                 Set parameter for mnote @LEA           
&L       SETA  10                        Maximum FEATURE length  @LEA           
         AIF   ('&FEATURE' EQ '').FEEND  FEATURE not specified   @LEA           
&SUB     SETA  1                                                 @LEA           
.*********************************************************************          
.*       Loop to check each element in the FEATURE sublist       @LEA           
.**********************************************************************         
.FELOOP  ANOP                                                    @LEA           
         AIF   ('&FEATURE(&SUB)' EQ '').FENULL     Null sublist  @LEA           
.*                                                    entry      @LEA           
         AIF   (K'&FEATURE(&SUB) LE &L).NEXTFEA    Number of     @LEA           
.*                                                    characters @LEA           
         MNOTE 8,'033 &PARM PARAMETER SUBLIST ENTRY ''&SUB'' EXCEEDS   C        
               &L CHARACTERS.'                                   @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .NEXTFEA                  Process next entry in   @LEA           
.*                                           sublist             @LEA           
.FENULL  MNOTE 8,'018 &PARM SUBLIST ENTRY ''&SUB'' IS MISSING.'  @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.NEXTFEA ANOP                            Process next FEATURE    @LEA           
&SUB     SETA  &SUB+1                    Points to next sublist  @LEA           
.*                                                    entry      @LEA           
         AIF   (&SUB LE N'&FEATURE).FELOOP  Another FEATURE left @LEA           
.FEEND   ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate MODEL               1 - 4 characters           @LEA*          
.*                                    A - Z  0 - 9               @LEA*          
.*********************************************************************          
.CKMOD   ANOP                                                    @LEA           
&PARM    SETC  'MODEL'                   Set parameter for mnote @LEA           
&L       SETA  4                         Maximum MODEL length    @LEA           
         AIF   ('&MODEL' EQ '').MODEND   Model not specified     @LEA           
         AIF   (N'&MODEL GT 1).SUBMOD    Model is in sublist     @LEA           
.*                                           format              @LEA           
         AIF   (K'&MODEL LE &L).MODCHAR  maximum Number of       @LEA           
.*                                           Characters          @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .MODEND                   Check next keyword      @LEA           
.SUBMOD  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .MODEND                   Check next keyword      @LEA           
.MODCHAR ANOP                                                    @LEA           
         ALPHANUM STRING=&MODEL          Check the characters    @LEA           
         AIF   (&INTERR).CHERR           Invalid Character found @LEA           
         AGO   .MODEND                 Proceed with next Keyword @LEA           
.CHERR   MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicates error         @LEA           
.*                                                               @LEA           
.MODEND  ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @HYA*          
.*       Validate EQID                1 - 8 characters           @HYA*          
.*                                    A - Z  0 - 9               @HYA*          
.*********************************************************************          
.CKEQD   ANOP                                                    @HYA           
&PARM    SETC  'EQID'                    Set parameter for mnote @HYA           
&L       SETA  8                         Maximum MODEL length    @HYA           
         AIF   ('&EQID' EQ '').EQDEND    EQID  not specified     @HYA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @HYA           
.*                                            parameters         @HYA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @HYA           
.*                                            parameters         @HYA           
         AIF   (N'&EQID GT 1).SUBEQD     EQID  is in sublist     @HYA           
.*                                           format              @HYA           
         AIF   (K'&EQID LE &L).EQDCHAR   maximum Number of       @HYA           
.*                                           Characters          @HYA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @HYA           
&ERROR   SETB  1                         Indicates error         @HYA           
         AGO   .EQDEND                   Check next keyword      @HYA           
.SUBEQD  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @HYA           
&ERROR   SETB  1                         Indicates error         @HYA           
         AGO   .EQDEND                   Check next keyword      @HYA           
.EQDCHAR ANOP                                                    @HYA           
         ALPHANUM STRING=&EQID           Check the characters    @HYA           
         AIF   (&INTERR).CHERR1          Invalid Character found @HYA           
         AGO   .EQDEND                 Proceed with next Keyword @HYA           
.CHERR1  MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicates error         @HYA           
.*                                                               @HYA           
.EQDEND  ANOP                            Check next keyword      @HYA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate INDEX               1 - 2 Decimal digits       @LEA*          
.*                                    Range: 1 - 31              @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKINDEX ANOP                                                    @LEA           
&PARM    SETC  'INDEX'                   Set parameter for mnote @LEA           
&L       SETA  2                         Maximum INDEX length    @LEA           
&MAXVAL  SETA  31                        Maximum INDEX value     @LEA           
         AIF   ('&INDEX' EQ '').ENDINX   INDEX not specified     @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                             parameters        @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                             parameters        @LEA           
         AIF   (N'&INDEX GT 1).SUBNUM    INDEX is in sublist     @LEA           
.*                                             format            @LEA           
         AIF   (K'&INDEX LE &L).NUMCK    Number of digits        @LEA           
         MNOTE 8,'023 &PARM PARAMETER EXCEEDS &L DIGITS.'        @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.NUMCK   ANOP                                                    @LEA           
&NDX     SETA  1                         Points to 1st digit of  @LEA           
.*                                          INDEX parameter      @LEA           
.*********************************************************************          
.*       Loop to validate each character in INDEX                @LEA           
.*********************************************************************          
.NUMLOOP ANOP                                                    @LEA           
&CKTY    SETC  'DECIMAL'                  Type of digit          @LEA           
         AIF   ('&INDEX'(&NDX,1) LT '0').BADNUM     Not decimal  @LEA           
         AIF   ('&INDEX'(&NDX,1) LE '9').GOODNUM    Valid digit  @LEA           
.*                                                     (0-9)     @LEA           
.BADNUM  ANOP                            Invalid DECIMAL digit   @LEA           
&CWK     SETC  '&INDEX'(&NDX,1)          Isolate invalid digit   @LEA           
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER.'         
.*                                                               @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.GOODNUM ANOP                                                    @LEA           
&NDX     SETA  &NDX+1                    Point to next digit     @LEA           
         AIF   (&NDX LE K'&INDEX).NUMLOOP  Check next digit      @LEA           
.*                                                               @LEA           
         AIF   (&INDEX GE 1 AND &INDEX LE &MAXVAL).ENDINX        @LEA           
.*                                                   Valid value @LEA           
         MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'          
.*                                                               @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDINX                   Check next keyword      @LEA           
.SUBNUM  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDINX  ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate UIRATE              1 - 2 Decimal digits       @LEA*          
.*                                    Range: 1 - 62500           @LEA*          
.*                                      or                       @LEA*          
.*                                    - INFINITY                 @LEA*          
.*                                    - DEFAULT                  @LEA*          
.*********************************************************************          
.CKUIRAT ANOP                                                    @LEA           
&PARM    SETC  'UIRATE'                  Set parameter for mnote @LEA           
&L       SETA  5                         Maximum UIRATE length   @LEA           
&MAXVAL  SETA  62500                     Maximum UIRATE value    @LEA           
         AIF   ('&UIRATE' EQ '').ENDUIR  UIRATE not specified    @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                             parameters        @LEA           
&XLEN    SETA  &XLEN+K'&UIRATE           Increment length of     @LEA           
.*                                             parameters        @LEA           
         AIF   ('&UIRATE' EQ 'DEFAULT').ENDUIR DEFAULT specified @LEA           
         AIF   ('&UIRATE' EQ 'INFINITY').ENDUIR INFINITY spec.   @LEA           
         AIF   (N'&UIRATE GT 1).SUBNUMU  UIRATE is in sublist    @LEA           
.*                                             format            @LEA           
         AIF   (K'&UIRATE LE &L).NUMCKU  Number of digits        @LEA           
         MNOTE 8,'023 &PARM PARAMETER EXCEEDS &L DIGITS.'        @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.NUMCKU  ANOP                                                    @LEA           
&NDX     SETA  1                         Points to 1st digit of  @LEA           
.*                                          UIRATE parameter     @LEA           
.*********************************************************************          
.*       Loop to validate each character in UIRATE               @LEA           
.*********************************************************************          
.NUMLOPU ANOP                                                    @LEA           
&CKTY    SETC  'DECIMAL'                  Type of digit          @LEA           
         AIF   ('&UIRATE'(&NDX,1) LT '0').BADNUMU   Not decimal  @LEA           
         AIF   ('&UIRATE'(&NDX,1) LE '9').GOODNUU   Valid digit  @LEA           
.*                                                     (0-9)     @LEA           
.BADNUMU ANOP                            Invalid DECIMAL digit   @LEA           
&CWK     SETC  '&UIRATE'(&NDX,1)         Isolate invalid digit   @LEA           
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER.'         
.*                                                               @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.GOODNUU ANOP                                                    @LEA           
&NDX     SETA  &NDX+1                    Point to next digit     @LEA           
         AIF   (&NDX LE K'&UIRATE).NUMLOPU Check next digit      @LEA           
.*                                                               @LEA           
         AIF   (&UIRATE GE 1 AND &UIRATE LE &MAXVAL).ENDUIR      @LEA           
.*                                                   Valid value @LEA           
         MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'          
.*                                                               @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDUIR                   Check next keyword      @LEA           
.SUBNUMU MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDUIR  ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate SHARED              NO ! YES                   @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKSHAR  ANOP                                                    @LEA           
&PARM    SETC  'SHARED'                  Set parameter for mnote @LEA           
         AIF   ('&SHARED' EQ '').ENDSHA  SHARED not specified    @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                              parameters       @LEA           
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA           
.*                                              parameters       @LEA           
         AIF   ('&SHARED' EQ 'NO').ENDSHA  Default (NO) specified@LEA           
         AIF   ('&SHARED' EQ 'N').ENDSHA   Default (NO) specified@LEA           
         AIF   ('&SHARED' EQ 'YES').ENDSHA SHARED=YES specified  @LEA           
         AIF   ('&SHARED' EQ 'Y').ENDSHA   SHARED=Y    specified @LEA           
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDSHA                   Check next keyword      @LEA           
.ENDSHA  ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate FOLD                NO ! YES                   @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKFOLD  ANOP                                                    @LEA           
&PARM    SETC  'FOLD'                    Set parameter for mnote @LEA           
         AIF   ('&FOLD' EQ '').ENDFO     FOLD not specified      @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                              parameters       @LEA           
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA           
.*                                              parameters       @LEA           
.CKFLD1  ANOP                                                    @LEA           
         AIF   ('&FOLD' EQ 'NO').ENDFO   Default (NO) specified  @LEA           
         AIF   ('&FOLD' EQ 'N').ENDFO    Default (NO) specified  @LEA           
         AIF   ('&FOLD' EQ 'YES').ENDFO  FOLD=YES specified      @LEA           
         AIF   ('&FOLD' EQ 'Y').ENDFO    FOLD=Y   specified      @LEA           
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDFO                    Check next keyword      @LEA           
.ENDFO   ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @MWA*          
.*       Validate DYNAMIC             NO ! YES                   @MWA*          
.*                                                               @MWA*          
.*********************************************************************          
.CKDYNM  ANOP                                                    @MWA           
&PARM    SETC  'DYNAMIC'                 Set parameter for mnote @MWA           
         AIF   ('&DYNAMIC' EQ '').ENDDYN DYNAMIC not specified   @MWA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @MWA           
.*                                              parameters       @MWA           
&XLEN    SETA  &XLEN+3                   Increment length of     @MWA           
.*                                              parameters       @MWA           
.CKDYN1  ANOP                                                    @MWA           
         AIF   ('&DYNAMIC' EQ 'NO').ENDDYN Default (NO) specified@MWA           
         AIF   ('&DYNAMIC' EQ 'N').ENDDYN  Default (NO) specified@MWA           
         AIF   ('&DYNAMIC' EQ 'YES').ENDDYN YES specified        @MWA           
         AIF   ('&DYNAMIC' EQ 'Y').ENDDYN   Y   specified        @MWA           
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @MWA           
&ERROR   SETB  1                         Indicates error         @MWA           
         AGO   .ENDDYN                   Check next keyword      @MWA           
.ENDDYN  ANOP                                                    @MWA           
.*********************************************************************          
.*                                                               @HIA*          
.*       Validate OFFLINE             NO ! YES                   @HIA*          
.*                                                               @HIA*          
.*********************************************************************          
.CKOFFL  ANOP                                                    @HIA           
&PARM    SETC  'OFFLINE'                 Set parameter for mnote @HIA           
         AIF   ('&OFFLINE' EQ '').ENDOFF OFFLINE not specified   @HIA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @MWA           
.*                                              parameters       @MWA           
&XLEN    SETA  &XLEN+3                   Increment length of     @MWA           
.*                                              parameters       @MWA           
.CKOFF1  ANOP                                                    @HIA           
&VFL2    SETA  &VFL2+&OFFL               Set OFFLINE parameter   @HIA           
         AIF   ('&OFFLINE' EQ 'NO').ENDOFF Default (NO) specified@HIA           
         AIF   ('&OFFLINE' EQ 'N').ENDOFF  Default (NO) specified@HIA           
         AIF   ('&OFFLINE' EQ 'YES').SETOFF YES specified        @HIA           
         AIF   ('&OFFLINE' EQ 'Y').SETOFF   Y   specified        @HIA           
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @HIA           
&ERROR   SETB  1                         Indicates error         @HIA           
         AGO   .ENDOFF                   Check next keyword      @HIA           
.SETOFF  ANOP  ,                                                 @HIA           
&PFLAG   SETA  &PFLAG+&OFFY              Set OFFLINE=YES         @HIA           
.ENDOFF  ANOP                                                    @HIA           
.*********************************************************************          
.*                                                               @MWA*          
.*       Validate MARK                NO ! YES                   @MWA*          
.*                                                               @MWA*          
.*********************************************************************          
.CKMRK   ANOP                                                    @MWA           
&PARM    SETC  'MARK'                    Set parameter for mnote @MWA           
         AIF   ('&MARK' EQ '').ENDMRK    MARK not specified      @MWA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @MWA           
.*                                              parameters       @MWA           
&XLEN    SETA  &XLEN+3                   Increment length of     @MWA           
.*                                              parameters       @MWA           
.CKMRK1  ANOP                                                    @MWA           
         AIF   ('&MARK' EQ 'NO').ENDMRK  Default (NO) specified  @MWA           
         AIF   ('&MARK' EQ 'N').ENDMRK   Default (NO) specified  @MWA           
         AIF   ('&MARK' EQ 'YES').ENDMRK MARK=YES specified      @MWA           
         AIF   ('&MARK' EQ 'Y').ENDMRK   MARK=Y   specified      @MWA           
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @MWA           
&ERROR   SETB  1                         Indicates error         @MWA           
         AGO   .ENDMRK                   Check next keyword      @MWA           
.ENDMRK  ANOP                                                    @MWA           
.*********************************************************************          
.*                                                               @MWA*          
.*       Validate MDC                 OFF ! DFLTON ! DFLTOFF     @MWA*          
.*                                                               @MWA*          
.*********************************************************************          
.CKMDC   ANOP                                                    @MWA           
&PARM    SETC  'MDC'                     Set parameter for mnote @MWA           
         AIF   ('&MDC' EQ '').ENDMDC     MDC not specified       @MWA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @MWA           
.*                                              parameters       @MWA           
&XLEN    SETA  &XLEN+7                   Increment length of     @MWA           
.*                                              parameters       @MWA           
.CKMDC1  ANOP                                                    @MWA           
         AIF   ('&MDC' EQ 'DFLTOFF').ENDMDC   DFLTON specified   @MWA           
         AIF   ('&MDC' EQ 'DFLTON').ENDMDC    DFLTON specified   @MWA           
         AIF   ('&MDC' EQ 'OFF').ENDMDC       MDC=OFF specified  @MWA           
         MNOTE 8,'043 &PARM VALUE MUST BE OFF,DFLTOFF or DFLTON' @MWA           
&ERROR   SETB  1                         Indicates error         @MWA           
         AGO   .ENDMDC                   Check next keyword      @MWA           
.ENDMDC  ANOP                                                    @MWA           
.*********************************************************************          
.*                                                               @MWA*          
.*       Validate LIMIT               N   ! 1 to 9999999999      @MWA*          
.*                                                               @MWA*          
.*********************************************************************          
.CKLIM   ANOP                                                    @MWA           
&PARM    SETC  'LIMIT'                   Set parameter for mnote @MWA           
&L       SETA  10                        Maximum LIMIT  length   @MWA           
         AIF   ('&LIMIT' EQ '').ENDLIM   LIMIT not specified     @MWA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @MWA           
.*                                              parameters       @MWA           
&XLEN    SETA  &XLEN+K'&LIMIT            Increment length of     @MWA           
.*                                              parameters       @MWA           
.CKLIMIT1 ANOP                                                   @MWA           
         AIF   ('&LIMIT' EQ 'N').ENDLIM  Default (N) specified   @MWA           
         AIF   (N'&LIMIT  GT 1).SUBNUML  LIMIT  is in sublist    @MWA           
.*                                             format            @MWA           
         AIF   (K'&LIMIT  LE &L).NUMCKL  Number of digits        @MWA           
         MNOTE 8,'023 &PARM PARAMETER EXCEEDS &L DIGITS.'        @MWA           
&ERROR   SETB  1                         Indicates error         @MWA           
.NUMCKL  ANOP                                                    @MWA           
&NDX     SETA  1                         Points to 1st digit of  @MWA           
.*                                          LIMIT  parameter     @MWA           
.*********************************************************************          
.*       Loop to validate each character in LIMIT                @MWA           
.*********************************************************************          
.NUMLOPL ANOP                                                    @MWA           
&CKLM    SETC  'DECIMAL'                  Type of digit          @MWA           
         AIF   ('&LIMIT'(&NDX,1) LT '0').BADNUML    Not decimal  @MWA           
         AIF   ('&LIMIT'(&NDX,1) LE '9').GOODNUL    Valid digit  @MWA           
.*                                                     (0-9)     @MWA           
.BADNUML ANOP                            Invalid DECIMAL digit   @MWA           
&CWK     SETC  '&LIMIT'(&NDX,1)          Isolate invalid digit   @MWA           
         MNOTE 8,'021 INVALID &CKLM DIGIT ''&CWK'' IN &PARM PARAMETER.'         
.*                                                               @MWA           
&ERROR   SETB  1                         Indicates error         @MWA           
.GOODNUL ANOP                                                    @MWA           
&NDX     SETA  &NDX+1                    Point to next digit     @MWA           
         AIF   (&NDX LE K'&LIMIT).NUMLOPL Check next digit       @MWA           
.*                                                               @MWA           
         AGO   .ENDLIM                   Check next keyword      @MWA           
.SUBNUML MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @MWA           
&ERROR   SETB  1                         Indicates error         @MWA           
.ENDLIM  ANOP                            Check next keyword      @MWA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate SEP                 NO ! YES                   @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKSEP   ANOP                                                    @LEA           
&PARM    SETC  'SEP'                     Set parameter for mnote @LEA           
         AIF   ('&SEP' EQ '').ENDSEP     SEP not specified       @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                              parameters       @LEA           
&XLEN    SETA  &XLEN+3                   Increment length of     @LEA           
.*                                              parameters       @LEA           
         AIF   ('&SEP' EQ 'NO').ENDSEP   SEP=NO specified        @LEA           
         AIF   ('&SEP' EQ 'N').ENDSEP    SEP=N specified         @LEA           
         AIF   ('&SEP' EQ 'YES').ENDSEP  SEP=YES specified       @LEA           
         AIF   ('&SEP' EQ 'Y').ENDSEP    SEP=Y       specified   @LEA           
         MNOTE 8,'043 &PARM VALUE MUST BE YES, Y, NO or N'       @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDSEP                   Check next keyword      @LEA           
.ENDSEP  ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate DPMSIZE           1 decimal number from 1 to 9 @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKDPM   ANOP                                                    @LEA           
&PARM    SETC  'DPMSIZE'                 Set parameter for mnote @LEA           
&L       SETA  1                         Maximum DPMSIZE length  @LEA           
&MAXVAL  SETA  9                         Maximum DPMSIZE value   @LEA           
         AIF   ('&DPMSIZE' EQ '').ENDDPM DPMSIZE not specified   @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&DPMSIZE GT 1).SUBDPM  DPMSIZE is in sublist   @LEA           
.*                                               format          @LEA           
         AIF   (K'&DPMSIZE LE &L).DPMLEN Number of digits        @LEA           
         MNOTE 8,'023 &PARM PARAMETER EXCEEDS &L DIGIT.'         @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDDPM                                           @LEA           
.DPMLEN  ANOP                                                    @LEA           
.*********************************************************************          
.*       validate digit in DPMSIZE                               @LEA           
.*********************************************************************          
         AIF   (&DPMSIZE GE 1 AND &DPMSIZE LE &MAXVAL).ENDDPM    @LEA           
         MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 1 TO &MAXVAL.'          
.*                                                               @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
         AGO   .ENDDPM                   Check next keyword      @LEA           
.SUBDPM  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDDPM  ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate SETADDR             1 decimal value from 0 to 4@LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKSETA  ANOP                                                    @LEA           
&PARM    SETC  'SETADDR'                 Set parameter for mnote @LEA           
&MAXVAL  SETA  4                         Maximum SETADDR value   @LEA           
         AIF   ('&SETADDR' EQ '').ENDAD  SETADDR not specified   @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+1                   Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&SETADDR GT 1).SUBADD  SETADDR is in sublist   @LEA           
.*                                            format             @LEA           
         AIF   ('&SETADDR' LT '0').BADSET    Invalid value       @LEA           
         AIF   (&SETADDR LE &MAXVAL).ENDAD   Valid value         @LEA           
.BADSET  MNOTE 8,'042 &PARM VALUE MUST BE A NUMBER FROM 0 TO &MAXVAL.'          
.*                                                               @LEA           
&ERROR   SETB  1                         Indicate error          @LEA           
         AGO   .ENDAD                    Check next keyword      @LEA           
.SUBADD  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDAD   ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate BASEADD        1 to 4 hex digit device number  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKBASE  ANOP                                                    @LEA           
&PARM    SETC  'BASEADD'                 Set parameter for mnote @LEA           
&L       SETA  4                           Maximum BASEADD length@LEA           
         AIF   ('&BASEADD' EQ '').ENDBASE  BASEADD not specified @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF (N'&BASEADD GT 1).DVSUBLE   Operand is in sublist   @LEA           
.*                                            format             @LEA           
         AIF (K'&BASEADD LT 1).DVIDBAD   Bad length of BASEADD   @LEA           
         AIF (K'&BASEADD LE &L).DVIDLEN  Correct length          @LEA           
.*                                                               @LEA           
.DVIDBAD ANOP                                                    @LEA           
         MNOTE 8,'022 &PARM PARAMETER MUST BE &L DIGITS.'        @LEA           
&ERROR   SETB 1                          Indicate error          @LEA           
.DVIDLEN ANOP                                                    @LEA           
         HEXCHECK STRING=&BASEADD        Check the digits        @LEA           
         AIF   (&INTERR).BASERR          Isolate invalid char    @LEA           
         AGO   .ENDBASE                                          @LEA           
.BASERR  ANOP                                                    @LEA           
&CKTY    SETC  'HEX'                      Set Type of digit      @LEA           
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER.'         
&ERROR   SETB  1                         Indicate error          @LEA           
         AGO   .ENDBASE                                          @LEA           
.*                                                               @LEA           
.DVSUBLE MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicate error          @LEA           
.ENDBASE ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate CHARS           1..4 characters                @LEA*          
.*                                A-Z,0-9,all special character  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKCHARS ANOP                                                    @LEA           
&PARM    SETC  'CHARS'                   Set parameter for mnote @LEA           
&L       SETA  4                         Maximum CHAR length     @LEA           
         AIF   ('&CHARS' EQ '').ENDCHAR  CHARS not specified     @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&CHARS GT 1).SUBCHAR   CHARS is in sublist     @LEA           
.*                                            format             @LEA           
         AIF   (K'&CHARS LE &L).CHLEN    Length of CHARS         @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.CHLEN   ANOP                            check all chars         @LEA           
&IND     SETA  1                         Point to first character@LEA           
.CHLOOP  ANOP                                                    @LEA           
&TEST    SETC  '&CHARS'(&IND,1)          prepare one character   @LEA           
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA           
         AIF   (&INTERR).SPECI           not alphanumeric        @LEA           
         AGO   .GOODCH                   valid character         @LEA           
.SPECI   ANOP                                                    @LEA           
         SPECIAL STRING=&TEST            Check for special char  @LEA           
         AIF   (&INTERR).SP2CH           not special character   @LEA           
         AGO   .GOODCH                   valid character         @LEA           
.SP2CH   ANOP                                                    @LEA           
         SPECIAL2 STRING=&TEST           Check for special2 char @LEA           
         AIF   (&INTERR).BADCH           invalid character       @LEA           
         AGO   .GOODCH                   valid character         @LEA           
.BADCH   ANOP                                                    @LEA           
&CWK     SETC  '&CHARS'(&IND,1)          Isolate invalid char    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicates error         @LEA           
.*                                                               @LEA           
.GOODCH  ANOP                                                    @LEA           
&IND     SETA  &IND+1                    Next character of CHARS @LEA           
         AIF   (&IND LE K'&CHARS).CHLOOP  Loop if more chars     @LEA           
         AGO   .ENDCHAR                 Proceed with next keyword@LEA           
.SUBCHAR MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDCHAR ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate FCB             1..4 characters                @LEA*          
.*                                A-Z,0-9,all special character  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKFCB   ANOP                                                    @LEA           
&PARM    SETC  'FCB'                     Set parameter for mnote @LEA           
&L       SETA  4                         Maximum FCB  length     @LEA           
         AIF   ('&FCB' EQ '').ENDFCB     FCB not specified       @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&FCB GT 1).SUBFCB      FCB is in sublist format@LEA           
         AIF   (K'&FCB LE &L).FCLEN      Length of FCB           @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.FCLEN   ANOP                                                    @LEA           
&IND     SETA  1                         Point to first character@LEA           
.*********************************************************************          
.*       Loop to validate each character in FCB operand          @LEA           
.*********************************************************************          
.FCLOOP  ANOP                                                    @LEA           
&TEST    SETC  '&FCB'(&IND,1)            Prepare one character   @LEA           
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA           
         AIF   (&INTERR).SPECIFC         not alphanumeric char   @LEA           
         AGO   .GOODFC                   valid character         @LEA           
.SPECIFC ANOP                                                    @LEA           
         SPECIAL STRING=&TEST            check for special char  @LEA           
         AIF   (&INTERR).SP2FCB          no special character    @LEA           
         AGO   .GOODFC                   valid character         @LEA           
.SP2FCB  ANOP                                                    @LEA           
         SPECIAL2 STRING=&TEST           check for special2 char @LEA           
         AIF   (&INTERR).BADFC           invalid character       @LEA           
         AGO   .GOODFC                   valid character         @LEA           
.BADFC   ANOP                                                    @LEA           
&CWK     SETC  '&FCB'(&IND,1)            Isolate invalid char    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicates error         @LEA           
.*                                                               @LEA           
.GOODFC  ANOP                                                    @LEA           
&IND     SETA  &IND+1                    Next character of FCB   @LEA           
         AIF   (&IND LE K'&FCB).FCLOOP   Loop if more FCB        @LEA           
         AGO   .ENDFCB                  Proceed with next keyword@LEA           
.SUBFCB  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDFCB  ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate FORM            1..8 characters                @LEA*          
.*                                A-Z,0-9,all special character  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKFORM  ANOP                                                    @LEA           
&PARM    SETC  'FORM'                    Set parameter for mnote @LEA           
&L       SETA  8                         Maximum FORM length     @LEA           
         AIF   ('&FORM' EQ '').ENDFORM   FORM not specified      @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&FORM GT 1).SUBFORM    FORM is in sublist      @LEA           
.*                                            format             @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (K'&FORM LE &L).FOLEN     Length of FORM          @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.FOLEN   ANOP                                                    @LEA           
         AIF   ('&FORM' EQ '*').ENDFORM  Valid FORM              @LEA           
         AIF   ('&FORM' EQ 'STANDARD').ENDFORM  Valid FORM       @LEA           
&IND     SETA  1                         Point to first character@LEA           
.*********************************************************************          
.*       Loop to validate each character in FORM operand         @LEA           
.*********************************************************************          
.FOLOOP  ANOP                                                    @LEA           
&TEST    SETC  '&FORM'(&IND,1)           Prepare first character @LEA           
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA           
         AIF   (&INTERR).SPECIFO         not alphnumeric         @LEA           
         AGO   .GOODFO                   valid character         @LEA           
.SPECIFO ANOP                                                    @LEA           
         SPECIAL STRING=&TEST            check for special char  @LEA           
         AIF   (&INTERR).SP2FO           no special character    @LEA           
         AGO   .GOODFO                   valid character         @LEA           
.SP2FO   ANOP                                                    @LEA           
         SPECIAL2 STRING=&TEST           check for special char  @LEA           
         AIF   (&INTERR).BADFO           invalid character       @LEA           
         AGO   .GOODFO                   valid character         @LEA           
.BADFO   ANOP                                                    @LEA           
&CWK     SETC  '&FORM'(&IND,1)           Isolate invalid char    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
.*                                                               @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.GOODFO  ANOP                                                    @LEA           
&IND     SETA  &IND+1                    Next character of FORM  @LEA           
         AIF   (&IND LE K'&FORM).FOLOOP  Loop if more FORM       @LEA           
         AGO   .ENDFORM                 Proceed with next keyword@LEA           
.*                                                               @LEA           
.SUBFORM MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDFORM ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate IMAGE          1..8 characters                 @LEA*          
.*                               A-Z,0-9,all special character   @LEA*          
.*********************************************************************          
.CKIMAG  ANOP                                                    @LEA           
&PARM    SETC  'IMAGE'                   Set parameter for mnote @LEA           
&L       SETA  8                         Maximum IMAGE length    @LEA           
         AIF   ('&IMAGE' EQ '').ENDIM    IMAGE not specified     @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&IMAGE GT 1).SUBIMAG   IMAGE is in sublist     @LEA           
.*                                            format                            
         AIF   (K'&IMAGE LE &L).IMLEN    Length of IMAGE         @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.IMLEN   ANOP                                                    @LEA           
&IND     SETA  1                         Point to first character@LEA           
.*********************************************************************          
.*       Loop to validate each character in IMAGE operand        @LEA           
.*********************************************************************          
.IMLOOP  ANOP                                                    @LEA           
&TEST    SETC  '&IMAGE'(&IND,1)          prepare one character   @LEA           
         ALPHANUM STRING=&TEST           check for alphanumeric  @LEA           
         AIF   (&INTERR).SPECIM          no alphanumeric char    @LEA           
         AGO   .GOODIM                   valid character         @LEA           
.SPECIM  ANOP                                                    @LEA           
         SPECIAL STRING=&TEST            check for special char  @LEA           
         AIF   (&INTERR).SP2IM           no special character    @LEA           
         AGO   .GOODIM                   valid character         @LEA           
.SP2IM   ANOP                                                    @LEA           
         SPECIAL2 STRING=&TEST           check for special2 char @LEA           
         AIF   (&INTERR).BADIM           invalid character       @LEA           
         AGO   .GOODIM                   valid character         @LEA           
.BADIM   ANOP                                                    @LEA           
&CWK     SETC  '&IMAGE'(&IND,1)          Isolate invalid char    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicates error         @LEA           
.GOODIM  ANOP                                                    @LEA           
&IND     SETA  &IND+1                    Next character of IMAGE @LEA           
         AIF   (&IND LE K'&IMAGE).IMLOOP  Loop if more characters@LEA           
         AGO   .ENDIM                   Proceed with next keyword@LEA           
.*                                                               @LEA           
.SUBIMAG MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDIM   ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate FLASH           1..8 characters                @LEA*          
.*                                A-Z,0-9,all special character  @LEA*          
.*********************************************************************          
.CKFLA   ANOP                                                    @LEA           
&PARM    SETC  'FLASH'                   Set parameter for mnote @LEA           
&L       SETA  8                         Maximum FLASH length    @LEA           
         AIF   ('&FLASH' EQ '').ENDFLA   FLASH not specified     @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&FLASH GT 1).SUBFLA    FLASH is in sublist     @LEA           
.*                                            format             @LEA           
         AIF   (K'&FLASH LE &L).FLLEN    Length of FLASH         @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.FLLEN   ANOP                                                    @LEA           
&IND     SETA  1                         Point to first character@LEA           
.*********************************************************************          
.*       Loop to validate each character in FLASH operand        @LEA           
.*********************************************************************          
.FLLOOP  ANOP                                                    @LEA           
&TEST    SETC  '&FLASH'(&IND,1)          Prepare one character   @LEA           
         ALPHANUM STRING=&TEST           Check for aphlanumeric  @LEA           
         AIF   (&INTERR).SPECFLA         no alphanumeric char    @LEA           
         AGO   .GOODFL                   valid character         @LEA           
.SPECFLA SPECIAL STRING=&TEST            check for special char  @LEA           
         AIF   (&INTERR).SP2FL           no special character    @LEA           
         AGO   .GOODFL                   valid character         @LEA           
.SP2FL   SPECIAL2 STRING=&TEST           check for special char  @LEA           
         AIF   (&INTERR).BADFL           invalid character       @LEA           
         AGO   .GOODFL                   valid character         @LEA           
.BADFL   ANOP                                                    @LEA           
&CWK     SETC  '&FLASH'(&IND,1)          Isolate invalid char    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicates error         @LEA           
.GOODFL  ANOP                                                    @LEA           
&IND     SETA  &IND+1                    Next character of FLASH @LEA           
         AIF   (&IND LE K'&FLASH).FLLOOP Loop if more characters @LEA           
         AGO   .ENDFLA                  Proceed with next keyword@LEA           
.*                                                               @LEA           
.SUBFLA  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDFLA  ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate CPNAME          1..8 characters                @LEA*          
.*                                A-Z,0-9,all special character  @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.CKCPN   ANOP                                                    @LEA           
&PARM    SETC  'CPNAME'                  Set parameter for mnote @LEA           
&L       SETA  8                         Maximum CPNAME length   @LEA           
         AIF   ('&CPNAME' EQ '').ENDCPN  CPNAME not specified    @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
&XLEN    SETA  &XLEN+&L                  Increment length of     @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&CPNAME GT 1).SUBCPN   CPNAME is in sublist    @LEA           
.*                                            format             @LEA           
         AIF   (K'&CPNAME LE &L).CPLEN   Length of CPNAME        @LEA           
         MNOTE 8,'033 &PARM PARAMETER EXCEEDS &L CHARACTERS.'    @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.CPLEN   ANOP                                                    @LEA           
&IND     SETA  1                         Point to 1st character  @LEA           
.**********************************************************************         
.*       Loop to validate each character in CPNAME operand       @LEA           
.**********************************************************************         
.CPLOOP  ANOP                                                    @LEA           
&TEST    SETC  '&CPNAME'(&IND,1)         Prepare one character   @LEA           
         ALPHANUM STRING=&TEST           Check for alphanumeric  @LEA           
         AIF   (&INTERR).SPECCP          no alphanumeric char    @LEA           
         AGO   .GOODCP                   valid character         @LEA           
.SPECCP  ANOP                                                    @LEA           
         SPECIAL STRING=&TEST            Check for special char  @LEA           
         AIF   (&INTERR).SP2CP           invalid character       @LEA           
         AGO   .GOODCP                   valid character         @LEA           
.SP2CP   ANOP                                                    @LEA           
         SPECIAL2 STRING=&TEST           Check for special2 char @LEA           
         AIF   (&INTERR).BADCP           invalid character       @LEA           
         AGO   .GOODCP                   valid character         @LEA           
.BADCP   ANOP                                                    @LEA           
&CWK     SETC  '&CPNAME'(&IND,1)         Isolate invalid char    @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                         Indicates error         @LEA           
.GOODCP  ANOP                                                    @LEA           
&IND     SETA  &IND+1                    Next character of CPNAME@LEA           
         AIF   (&IND LE K'&CPNAME).CPLOOP Loop if more characters@LEA           
         AGO   .ENDCPN                  Proceed with next keyword@LEA           
.*                                                               @LEA           
.SUBCPN  MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'     @LEA           
&ERROR   SETB  1                         Indicates error         @LEA           
.ENDCPN  ANOP                            Check next keyword      @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Validate CLASS                                          @LEA*          
.*********************************************************************          
.CKCLASS ANOP                                                    @LEA           
&PARM    SETC  'CLASS'                   Set parameter for mnote @LEA           
         AIF   ('&CLASS' EQ '').ENDCLAS CLASS not specified      @LEA           
&IND     SETA  1                     Point to 1st CLASS value if @LEA           
.*                                          1...8 characters     @LEA           
&SUB     SETA  1                     Point to 1st CLASS operand  @LEA           
&MAXSUB  SETA  8                     Maximum number of operands  @LEA           
&XPRMC   SETA  &XPRMC+1                  Increment count of      @LEA           
.*                                            parameters         @LEA           
         AIF   (N'&CLASS GT 1).CLLEN2     Operand is in sublist  @LEA           
&XLEN    SETA  &XLEN+8                   Increment length of     @LEA           
.*                                            parameters         @LEA           
         AGO   .CLLEND                                           @LEA           
.CLLEN2  ANOP                             Operand is in sublist  @LEA           
&XLEN    SETA  &XLEN+N'&CLASS            Increment length of     @LEA           
.*                                            parameters         @LEA           
.CLLEND  ANOP                             Operand length is set  @LEA           
         AIF   (K'&CLASS LT 1).NCL1NR    No CLASS given          @LEA           
         AIF   ('&CLASS' EQ '*').VALCL1    Valid CLASS parameter @LEA           
         AIF   ('&CLASS(&SUB)' EQ '*').VALCL1    Valid parameter @LEA           
         AIF   ('&CLASS' EQ 'NONE').VALCL2 Valid CLASS parameter @LEA           
         AIF   (N'&CLASS GT 1).CLLOOP     Operand is in sublist  @LEA           
         AIF   (K'&CLASS LE &MAXSUB).CL8CL    1....8 chars       @LEA           
         AGO   .ENDCLAS                                          @LEA           
.*                                                               @LEA           
.CLLOOP  ANOP                                                    @LEA           
&L       SETA  1                         Length of CLASS operand @LEA           
&SUBLI   SETB  1                         Indicate sublist format @LEA           
         AIF   (N'&CLASS GT &MAXSUB).CL1OP     Too many operands @LEA           
.*********************************************************************          
.*       Loop to validate each CLASS operand                     @LEA           
.*********************************************************************          
.CLLOOPB ANOP                                                    @LEA           
         AIF   ('&CLASS(&SUB)' EQ '').CLNULL  Empty operand      @LEA           
         AIF   (N'&CLASS EQ 1).CL8CL          one oper in subli  @LEA           
         AIF   (K'&CLASS(&SUB) EQ &L).CLSUB   Correct operand    @LEA           
.*                                                length         @LEA           
         AIF   (&SUBLI).SUBLIM               if sublist format   @LEA           
.SUBLIM  MNOTE 8,'033 &PARM PARAMETER SUBLIST ENTRY &SUB EXCEEDS &L CHA*        
               RACTERS.'                                         @LEA           
&ERROR   SETB  1                        Indicate error           @LEA           
         AGO   .ENDCLAS                                          @LEA           
.*                                                               @LEA           
.CLSUB   ANOP                           Proceed here if sublist  @LEA           
.*                                            format             @LEA           
&TEST    SETC  '&CLASS(&SUB)'           Prepare first sublist    @LEA           
.*                                            entry              @LEA           
         AGO   .CLLEN                                            @LEA           
.CL8CL   ANOP                                                    @LEA           
&SUBLI   SETB  0                                                 @LEA           
.*       AIF   (K'&CLASS GT &MAXSUB).CL8ER  more than 1..8 chars @LEA           
         AIF   (K'&CLASS(&SUB) GT &MAXSUB).CL8ER                 @LEA           
&TEST    SETC  '&CLASS'(&IND,1)          Prepare first character @LEA           
         AIF   ('&TEST' EQ '(').GOODCL                           @LEA           
         AIF   ('&TEST' EQ ')').ENDCLAS                          @LEA           
.CLLEN   ANOP                                                    @LEA           
         ALPHANUM STRING=&TEST             check for alphanumeric@LEA           
         AIF   (&INTERR).SPECI1              if not found        @LEA           
         AGO   .GOODCL                             Valid operand @LEA           
.SPECI1  ANOP                                                    @LEA           
         SPECIAL STRING=&TEST              check for $,#,@ chars @LEA           
         AIF   (&INTERR).SPECI2              if not found        @LEA           
         AGO   .GOODCL                             Valid operand @LEA           
.SPECI2  ANOP                                                    @LEA           
         SPECIAL2 STRING=&TEST             check for +,-,_,: char@LEA           
         AIF   (&INTERR).BADCL               Invalid character   @LEA           
         AGO   .GOODCL                             Valid operand @LEA           
.CLNULL  ANOP                                                    @LEA           
         MNOTE 8,'018 &PARM SUBLIST ENTRY &SUB MISSING.'         @LEA           
&ERROR   SETB  1                                                 @LEA           
         AGO  .GOODCL                                            @LEA           
.BADCL   ANOP                                                    @LEA           
         AIF  (&SUBLI).SUBMSG          if sublist format         @LEA           
.*                                             indication        @LEA           
.*                                      - goto sublist message   @LEA           
         MNOTE 8,'031 INVALID CHARACTER ''&CWK'' IN &PARM PARAMETER.'           
&ERROR   SETB  1                                                 @LEA           
         AGO  .GOODCL                                            @LEA           
.*                                                               @LEA           
.SUBMSG  MNOTE 8,'031 INVALID CHARACTER ''&CLASS(&SUB)'' IN SUBLIST ENT*        
               RY &SUB for &PARM PARAMETER.'                     @LEA           
&ERROR   SETB  1                                                 @LEA           
.GOODCL  ANOP                                                    @LEA           
&SUB     SETA  &SUB+1                  Proceed to next operand   @LEA           
&IND     SETA  &IND+1                  Proceed to next char in   @LEA           
.*                                        string                 @LEA           
         AIF   (&SUBLI).MOORSUB        if sublist format indicat @LEA           
         AGO   .MOORCHA                                          @LEA           
.MOORSUB AIF   (&SUB LE N'&CLASS).CLLOOPB  proceed with next     @LEA           
.*                                           sublist entry       @LEA           
         AGO  .ENDCLAS                                           @LEA           
.MOORCHA ANOP                                                    @LEA           
         AIF   (&IND LE K'&CLASS).CL8CL   proceed with next char @LEA           
         AGO  .ENDCLAS                                           @LEA           
.CL1OP   MNOTE 8,'015 &PARM PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES.'         
&ERROR   SETB  1                       Indicate error            @LEA           
         AGO   .ENDCLAS                                          @LEA           
.NCL1NR  MNOTE 8,'018 &PARM SUBLIST ENTRY &SUB MISSING.'         @LEA           
&ERROR   SETB  1                       Indicate error            @LEA           
         AGO   .ENDCLAS                                          @LEA           
.CL8ER   MNOTE 8,'033 &PARM PARAMETER EXCEEDS ''&MAXSUB'' CHARACTERS.'          
&ERROR   SETB  1                       Indicate error            @LEA           
         AGO   .ENDCLAS                                          @LEA           
.VALCL1  ANOP                                                    @LEA           
.*&XLEN    SETA  &XLEN+1                 Increment length of     @LEA           
.*                                            parameters         @LEA           
         AGO   .ENDCLAS                                          @LEA           
.VALCL2  ANOP                                                    @LEA           
.*&XLEN    SETA  &XLEN+N'&CLASS          Increment length of     @LEA           
.*                                            parameters         @LEA           
.ENDCLAS ANOP                                                    @LEA           
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Validate USERPRM    list of sublists                         *         
.*                           ((parmid,(value1,...),...)               *         
.*                           describing parameter id, (list of)   @M4A*         
.*                           parameter value(s)                   @M4A*         
.*                           for user-defined parameters          @M4A*         
.*                                                                    *         
.**********************************************************************         
.CKUSRP  ANOP                                                                   
&MAXSUB  SETA  32                      Max number of sublist entr. @M4A         
&L       SETA  10                      Maximum length of parm id   @M4A         
&L1      SETA  2                       Maximum length of sublist   @M4A         
         AIF  ('&USERPRM' EQ '').XUSRP   USERPRM not specified     @M4A         
         AIF  ('&USERPRM'(1,2) EQ '((').USRP100 Double parentheses @M4A         
&SINGLE  SETB 1                        Indicate single entry       @M4A         
&NUSRP   SETA 1                        Only 1 subentry             @M4A         
         AGO   .USRP105                                            @M4A         
.USRP100 ANOP  ,                                                   @M4A         
         AIF  (N'&USERPRM GT &MAXSUB).USRPE01 Higher number of         *        
                                       operands than in USERPRM    @M4A         
&NUSRP   SETA  N'&USERPRM              Set number of subentries    @M4A         
&SINGLE  SETB  0                       Indicate list               @M4A         
.USRP105 ANOP  ,                                                   @M4A         
&SUB     SETA  1                                                   @M4A         
.USRP110 ANOP  ,                                                   @M4A         
         AIF   (&SINGLE).USRP115                                   @M4A         
         AIF   ('&USERPRM(&SUB)' EQ '').USRPE06 Entry omitted      @M4A         
         AIF   (N'&USERPRM(&SUB) NE &L1).USRPE03 Sublist not 2 ent @M4A         
&UPRMID(&SUB)  SETC  '&USERPRM(&SUB,1)'       Save parameter id    @M4A         
         AGO   .USRP118                                            @M4A         
.USRP115 ANOP  ,                                                   @M4A         
         AIF   (N'&USERPRM NE &L1).USRPE03 Sublist not 2 entries   @M4A         
&UPRMID(&SUB)  SETC  '&USERPRM(1)'            Save parameter id    @M4A         
.USRP118 ANOP  ,                                                   @M4A         
         AIF   ('&UPRMID(&SUB)' EQ '').USRPE02  No parameter id    @M4A         
         AIF   (K'&UPRMID(&SUB) GT &L).USRPE05  Parm id > 10 chars @M4A         
.*                                                                 @M4A         
.USRP120 ANOP  ,                                                   @M4A         
&NDX     SETA  1                                                   @M4A         
         AIF   (&SINGLE).USRP125                                   @M4A         
.USRP122 ANOP  ,                                                   @M4A         
&AWK     SETA  (&SUB-1)*8+&NDX                   Position of value @M4A         
&UPRMVAL(&AWK) SETC  '&USERPRM(&SUB,2,&NDX)' Save parm value       @M4A         
         AIF   ('&UPRMVAL(&AWK)' EQ '').USRPE02                    @M4A         
         AIF   (&UPRMVLN(&SUB) GE K'&UPRMVAL(&AWK)).USRP123        @M4A         
&UPRMVLN(&SUB) SETA K'&UPRMVAL(&AWK)        Set value length       @M4A         
.USRP123 ANOP  ,                                                   @M4A         
&NDX     SETA  &NDX+1                                              @M4A         
         AIF   (&NDX LE N'&USERPRM(&SUB,2)).USRP122                @M4A         
         AGO   .USRP150                                            @M4A         
.USRP125 ANOP  ,                                                   @M4A         
&AWK     SETA  (&SUB-1)*8+&NDX                    Position of value@M4A         
&UPRMVAL(&AWK) SETC  '&USERPRM(2,&NDX)' Save parm value            @M4A         
         AIF   ('&UPRMVAL(&AWK)' EQ '').USRPE02                    @M4A         
         AIF   (&UPRMVLN(&SUB) GE K'&UPRMVAL(&AWK)).USRP130        @M4A         
&UPRMVLN(&SUB) SETA K'&UPRMVAL(&AWK)     Set value length          @M4A         
.USRP130 ANOP  ,                                                   @M4A         
&NDX     SETA  &NDX+1                                              @M4A         
         AIF   (&NDX LE N'&USERPRM(2)).USRP125                     @M4A         
.*                                                                 @M4A         
.USRP150 ANOP  ,                                                   @M4A         
&UPRMVCT(&SUB) SETA &NDX-1                  Set value count        @M4A         
&SUB     SETA  &SUB+1                  Point to next sublist entry @M4A         
         AIF   (&SUB LE &NUSRP).USRP110 More user parameters       @M4A         
         AGO   .XUSRP                                              @M4A         
.*                                                                 @M4A         
.USRPE01 ANOP  ,                                                   @M4A         
         MNOTE 8,'045 USERPRM PARAMETER EXCEEDS &MAXSUB ENTRIES.'  @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE02 ANOP  ,                                                   @M4A         
         MNOTE 8,'017 PARAMETER ID OR VALUE REQUIRED IN SUBLIST ENTRY &*        
               SUB OF USERPRM PARAMTER.'                           @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE03 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 USERPRM PARAMETER SUBLIST ENTRY &SUB MUST CONTAIN*        
                &L1 ENTRIES.'                                      @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE04 ANOP  ,                                                   @M4A         
         MNOTE 8,'047 INVALID HEX DIGIT ''&CWK'' IN SUBLIST ENTRY &SUB *        
               OF SWPORT PARAMETER.'                               @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.USRPE05 ANOP  ,                                                   @M4A         
         MNOTE 8,'022 PARAMETER ID MUST NOT EXCEED &L CHARACTERS.'     *        
                                                                   @M4A         
&ERROR   SETB  1                       Indicates error             @M4A         
         AGO   .XUSRP                  and continue                @M4A         
.*                                                                 @M4A         
.XUSRP   ANOP  ,                                                   @M4A         
.*                                                                              
.*                                                               @LEA           
.EXTLEN  ANOP                      calculate length of variable  @LEA           
.*                                       extension area          @LEA           
&XPRMC   SETA  &XPRMC*12           multiply for each parameter   @LEA           
.*                                   the header (about 10 bytes) @LEA           
&XLEN    SETA  &XLEN+&XPRMC                                      @LEA           
.ENDEXT  ANOP                                                    @LEA           
.*********************************************************************          
.*                                                               @LEA*          
.*       Generate internal text record                           @LEA*          
.*                                                               @LEA*          
.*********************************************************************          
.GENTEXT ANOP                                                    @LEA           
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been                 
.*                                       found                   @LEA           
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement               
.*                                       number                  @LEA           
         AIF   ('&DEVTYPE' NE 'ICA').SKPICA if device type ICA   @LEA           
&DEVTYP  SETC  '&DEVTYPE&ADAPTER'     Build VM device type       @LEA           
.SKPICA  ANOP                                                    @LEA           
         DC    CL8'&DEVTYP'           Device type specified      @LEA           
.ENDICA  ANOP                                                    @LEA           
         DC    H'0'                   Reserved                   @LEA           
         DC    XL1'00'                UNITADD not specified,                    
.*                                       set to 0                @LEA           
         DC    AL1(0)                 Reserved                   @LEA           
         DC    XL2'00'                DEVNUMBR  (not specified)  @LEA           
.*                                                                              
         AIF   ('&DEVNO' EQ '').GENAD                            @LEA           
         DC    XL2'&DEVNO(1)'         2 Hex Digit Device Address @LEA           
         AIF   (N'&DEVNO EQ 2).GENDCNT  Repl fact specified      @LEA           
         DC    H'0'                   Number of multiple devices @LEA           
         DC    XL1'80'                UIM Internal flag byte     @LEA           
         AGO   .EGADDR                                           @LEA           
.GENDCNT DC    H'&DEVNO(2)'           Number of multiple devices @LEA           
         DC    XL1'00'                UIM Internal flag byte     @LEA           
         AGO   .EGADDR                                           @LEA           
.*                                                                              
.GENAD   DC    XL2'&ADDRESS(1)'       2 Hex Digit Device Address @LEA           
         AIF   (N'&ADDRESS EQ 2).GENACNT  Replication factor                    
.*                                       specified               @LEA           
         DC    H'0'                   Number of multiple devices @LEA           
         DC    XL1'80'                UIM Internal flag byte     @LEA           
.*                                   Ifb = multiple devices defaulted           
         AGO   .EGADDR                Done with ADDRESS keyword  @LEA           
.GENACNT DC    H'&ADDRESS(2)'         Number of multiple devices @LEA           
         DC    XL1'00'                UIM Internal flag byte     @LEA           
.*                                   Ifb = multiple devices specified           
.EGADDR  ANOP                                                    @LEA           
         DC    XL1'00'                Reserved                   @LEA           
         DC    A(0)                   No CUNUMBR list            @LEA           
         DC    H'0'                   Number of entries in                      
*                                         CUNUMBR list           @LEA           
         AIF   (N'&FEATURE EQ 0).NOFEATP  No FEATURE list        @LEA           
         AIF   ('&FEATURE' EQ 'VUA').NOFEATP   or FEATURE = VUA  @LEA           
&AWK     SETA  N'&FEATURE             Number of entries in                      
.*                                        FEATURE list           @LEA           
         DC    H'&AWK'                Number of entries in                      
*                                         FEATURE list           @LEA           
         DC    A(@F&CNO)              Pointer to FEATURE list    @LEA           
         AGO   .EGFEAT                Done with FEATURE count    @LEA           
.NOFEATP DC    H'0'                   No entries in FEATURE list @LEA           
         DC    A(0)                   No FEATURE list            @LEA           
.EGFEAT  ANOP                                                    @LEA           
         DC    XL1'00'                Flag bytes not for VM      @HIC           
         DC    AL1(&VFL2)             Set OFFLINE flag           @HIA           
         DC    XL6'00'                Flag bytes not for VM      @HIC           
         DC    AL1(0)                 IOCP-only keyword flag byte@LEA           
         DC    AL3(0)                 Reserved for flags         @LEA           
         AIF   ('&MODEL' EQ '').NOMOD  MODEL not specified       @LEA           
         DC    CL4'&MODEL'            Model                      @LEA           
         AGO   .EGMODEL               Done with MODEL keyword    @LEA           
.NOMOD   DC    CL4' '                 Model (not specified)      @LEA           
.EGMODEL ANOP                                                    @LEA           
         DC    AL1(&PFLAG)            Parameter flags            @HIC           
         DC    AL1(0)                 Reserved                   @LEA           
         DC    H'0'                   NUMSECT (only for MVS)     @LEA           
         DC    CL4' '                 TCU (only for MVS)         @LEA           
         DC    AL2(0)                 Reserved                   @LEA           
         DC    XL1'00'                PATH (only for MVS)        @LEA           
         DC    AL1(0)                 SETADDR (only for MVS)     @LEA           
         DC    CL5' '                 Adapter (only for MVS)     @LEA           
         DC    AL1(&SSID)             IODVSSID subchannel set id @LYA           
         DC    AL2(0)                 PCU number (only for MVS)  @LEA           
         DC    AL4(0)                 PPVA area                  @LEA           
         DC    XL2'00'                Reserved                   @LEA           
&CWK     SETC  '@XL&CNO'              Label of extension area len  @HPA         
&CWK     DC    AL2(&XLEN)             Length of extension area     @HPA         
         AIF   ((&XLEN EQ 0) AND (&NUSRP EQ 0)).NOXPP                           
.*                                    No additional parameters   @HPC           
.*                                        specified              @LEA           
         DC    AL4(@P&CNO)            Address of parameter list  @LEA           
         AGO   .EGXPP                                            @LEA           
.NOXPP   ANOP                                                    @LEA           
         DC    A(0)                   Address of parameter list  @LEA           
.EGXPP   ANOP                                                    @LEA           
         DC    XL8'00'                Feature bit string         @LEA           
         DC    CL8' '                 Owner identification       @LEA           
.*                                                               @LEA           
         DC    A(0)                   Partition list             @LBA           
         DC    H'0'                   Number of entries in partition   *        
                                      list                         @LBA         
         DC    AL2(0)                 Reserved                     @LBA         
         DS    CL32                   Reserved                   @LEA           
.*                                                               @LEA           
         AIF   (N'&FEATURE EQ 0).XPRMGEN FEATURE list not spec   @LEA           
         AIF   ('&FEATURE' EQ 'VUA').XPRMGEN   or FEATURE = VUA  @LEA           
         SPACE 1                                                 @LEA           
&SUB     SETA  1                      Point to first FEATURE     @LEA           
&CWK     SETC  '@F&CNO'               Label for 1st FEATURE in                  
.*                                        list                   @LEA           
.FEATGEN ANOP                                                    @LEA           
&CWK     DC    CL10'&FEATURE(&SUB)'   Feature                    @LEA           
&CWK     SETC  ''                     Blank out label            @LEA           
&SUB     SETA  &SUB+1                 Points to next entry in                   
.*                                         array                 @LEA           
         AIF   (&SUB LE N'&FEATURE).FEATGEN     Processes next                  
.*                                                  FEATURE      @LEA           
.XPRMGEN ANOP                                                    @LEA           
         AIF   ((&XPRMC EQ 0 ) AND (&NUSRP EQ 0)).XPRMEND        @HPC           
*        AIF   (&XPRMC EQ 0).XPRMGN1                             @HPC           
&CWK     SETC  '@P&CNO'               Label for 1st PARAMETER in                
.*                                        list                   @LEA           
&CWK     DS    0F                     Start of parameter list    @LEA           
         AIF   (&XPRMC EQ 0).XPRMGN1                             @HPC           
         AIF   ('&ADAPTER' EQ '').NOADPT  no ADAPTER specified   @LEA           
         DC    CL10'ADAPTER'                                     @LEA           
         DC    AL1(5)                                            @LEA           
         DC    AL1(1)                                            @LEA           
         DC    CL5'&ADAPTER'          insert ADAPTER             @LEA           
.NOADPT  ANOP                                                    @LEA           
         AIF   ('&BASEADD' EQ '').NOBASE  no BASEADD specified   @LEA           
         DC    CL10'BASEADD'                                     @LEA           
         DC    AL1(4)                                            @LEA           
         DC    AL1(1)                                            @LEA           
         DC    CL4'&BASEADD'          insert BASEADD             @LEA           
.NOBASE  ANOP                                                    @LEA           
         AIF   ('&CHARS' EQ '').NOCHRS  no CHARS specified       @LEA           
         DC    CL10'CHARS'                                       @LEA           
         DC    AL1(4)                                            @LEA           
         DC    AL1(1)                                            @LEA           
         DC    CL4'&CHARS'            INSERT CHARS               @LEA           
.NOCHRS  ANOP                                                    @LEA           
         AIF   ('&CLASS' EQ '').NOCLASS no CLASS specified       @LEA           
         AIF   (N'&CLASS GT 1).GCLASSL CLASS list                @LEA           
.GCL8C   DC    CL10'CLASS'             Keyword                   @LEA           
         DC    AL1(8)                  Length of values          @LEA           
         DC    AL1(1)                  number of values          @LEA           
         DC    CL8'&CLASS(1)'         insert CLASS               @LEA           
         AGO   .NOCLASS                                          @LEA           
.GCLASSL ANOP                                                    @LEA           
&SUB     SETA  1                  point to first sublist entry   @LEA           
         DC    CL10'CLASS'             Keyword                   @LEA           
         DC    AL1(1)                  length                    @LEA           
&AWK     SETA  N'&CLASS                                          @LEA           
         DC    AL1(&AWK)               number of values          @LEA           
.CLASSGN ANOP                                                    @LEA           
         DC    CL1'&CLASS(&SUB)'      insert CLASS               @LEA           
&SUB     SETA  &SUB+1                 point to next sublist entry@LEA           
         AIF   (&SUB LE N'&CLASS).CLASSGN  process remaining                    
.*                                           entries             @LEA           
         AIF   (N'&CLASS EQ 8).NOCLASS                           @LEA           
.NOCLASS ANOP                                                    @LEA           
         AIF   ('&DEST' EQ '').NODEST     no DEST specified      @LEA           
         AIF   (N'&DEST GE 1).DESTL       DEST list              @LEA           
         DC    CL10'DEST'              Keyword                   @LEA           
         DC    AL1(8)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL8'&DEST'            insert DEST                 @LEA           
         AGO   .NODEST                                           @LEA           
.DESTL   ANOP                                                    @LEA           
&AWK     SETA  N'&DEST                  set number of values     @LEA           
         DC    CL10'DEST'              Keyword                   @LEA           
         DC    AL1(8)                  Length                    @LEA           
         DC    AL1(&AWK)               Number of values          @LEA           
&SUB     SETA  1                    point to first sublist entry @LEA           
.DESTGN  ANOP                                                    @LEA           
         DC    CL8'&DEST(&SUB)'      insert DEST                 @LEA           
&SUB     SETA  &SUB+1                point to next sublist entry @LEA           
         AIF   (&SUB LE N'&DEST).DESTGN  process remaining                      
.*                                            entries            @LEA           
         AIF   (N'&DEST EQ 4).NODEST                             @LEA           
.NODEST  ANOP                                                    @LEA           
         AIF   ('&CPNAME' EQ '').NOCPNM  no CPNAME specified     @LEA           
         DC    CL10'CPNAME'            Keyword                   @LEA           
         DC    AL1(8)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL8'&CPNAME'          insert CPNAME               @LEA           
.NOCPNM  ANOP                                                    @LEA           
         AIF   ('&DPMSIZE' EQ '').NODPMS  no DPMSIZE specified   @LEA           
         DC    CL10'DPMSIZE'           Keyword                   @LEA           
         DC    AL1(1)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL1'&DPMSIZE'         insert DPMSIZE              @LEA           
.NODPMS  ANOP                                                    @LEA           
         AIF   ('&FCB' EQ '').NOFCB2  no FCB specified           @LEA           
         DC    CL10'FCB'               Keyword                   @LEA           
         DC    AL1(4)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL4'&FCB'            insert FCB                   @LEA           
.NOFCB2  ANOP                                                    @LEA           
         AIF   ('&AFP' EQ '').NOAFP   no AFP specified           @LEA           
         DC    CL10'AFP'               Keyword                   @LEA           
         DC    AL1(3)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL3'&AFP'            insert AFP                   @LEA           
.NOAFP   ANOP                                                    @LEA           
         AIF   ('&FLASH' EQ '').NOFLASH no FLASH specified       @LEA           
         DC    CL10'FLASH'             Keyword                   @LEA           
         DC    AL1(8)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL8'&FLASH'           insert FLASH                @LEA           
.NOFLASH ANOP                                                    @LEA           
         AIF   ('&FOLD' EQ '').NOFOLD  no FOLD specified         @LEA           
         DC    CL10'FOLD'              Keyword                   @LEA           
         DC    AL1(3)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL3'&FOLD'            insert FOLD                 @LEA           
.NOFOLD  ANOP                                                    @LEA           
         AIF   ('&FORM' EQ '').NOFORM2 no FORM specified         @LEA           
         DC    CL10'FORM'              Keyword                   @LEA           
         DC    AL1(8)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL8'&FORM'            insert FORM                 @LEA           
.NOFORM2 ANOP                                                    @LEA           
         AIF   ('&DYNAMIC' EQ '').NODYNM2 no DYNAMIC specified   @MWA           
         DC    CL10'DYNAMIC'           Keyword                   @MWA           
         DC    AL1(3)                  Length                    @MWA           
         DC    AL1(1)                  Number of values          @MWA           
         DC    CL3'&DYNAMIC'         insert DYNAMIC              @MWA           
.NODYNM2 ANOP                                                    @MWA           
         AIF   ('&OFFLINE' EQ '').NOOFFL2 no OFFLINE specified   @HIA           
         DC    CL10'OFFLINE'           Keyword                   @HIA           
         DC    AL1(3)                  Length                    @HIA           
         DC    AL1(1)                  Number of values          @HIA           
         DC    CL3'&OFFLINE'         insert OFFLINE              @HIA           
.NOOFFL2 ANOP                                                    @HIA           
         AIF   ('&MARK' EQ '').NOMARK  no MARK specified         @MWA           
         DC    CL10'MARK'              Keyword                   @MWA           
         DC    AL1(3)                  Length                    @MWA           
         DC    AL1(1)                  Number of values          @MWA           
         DC    CL3'&MARK'            insert MARK                 @MWA           
.NOMARK  ANOP                                                    @MWA           
         AIF   ('&LIMIT' EQ '').NOLIMIT no LIMIT specified       @MWA           
&AWK     SETA  K'&LIMIT                                          @MWA           
         DC    CL10'LIMIT'             Keyword                   @MWA           
         DC    AL1(&AWK)               Length                    @MWA           
         DC    AL1(1)                  Number of values          @MWA           
         DC    CL&AWK'&LIMIT'        insert LIMIT                @MWA           
.NOLIMIT ANOP                                                    @MWA           
         AIF   ('&MDC' EQ '').NOMDC    no MDC   specified        @MWA           
         DC    CL10'MDC'               Keyword                   @MWA           
         DC    AL1(7)                  Length                    @MWA           
         DC    AL1(1)                  Number of values          @MWA           
         DC    CL7'&MDC'             insert MDC                  @MWA           
.NOMDC   ANOP                                                    @MWA           
         AIF   ('&EQID' EQ '').NOEQD   no EQID  specified        @HYA           
         DC    CL10'EQID'              Keyword                   @HYA           
         DC    AL1(8)                  Length                    @HYA           
         DC    AL1(1)                  Number of values          @HYA           
         DC    CL8'&EQID'            insert EQID                 @HYA           
.NOEQD   ANOP                                                    @HYA           
         AIF   ('&IMAGE' EQ '').NOIMAG2 no IMAGE specified       @LEA           
         DC    CL10'IMAGE'             Keyword                   @LEA           
         DC    AL1(8)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL8'&IMAGE'           insert IMAGE                @LEA           
.NOIMAG2 ANOP                                                    @LEA           
         AIF   ('&INDEX' EQ '').NOINDX  no INDEX specified       @LEA           
         DC    CL10'INDEX'             Keyword                   @LEA           
         DC    AL1(2)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL2'&INDEX'           insert INDEX                @LEA           
.NOINDX  ANOP                                                    @LEA           
         AIF   ('&UIRATE' EQ '').NOUIRA no UIRATE specified      @LEA           
&AWK     SETA  K'&UIRATE                                                        
         DC    CL10'UIRATE'            Keyword                   @LEA           
         DC    AL1(&AWK)               Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL&AWK'&UIRATE'       insert UIRATE               @LEA           
.NOUIRA  ANOP                                                    @LEA           
         AIF   ('&SETADDR' EQ '').NOSETA  no SETADDR specified   @LEA           
         DC    CL10'SETADDR'           Keyword                   @LEA           
         DC    AL1(1)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL1'&SETADDR'         insert SETADDR              @LEA           
.NOSETA  ANOP                                                    @LEA           
         AIF   ('&SEP' EQ '').NOSEP   no SEP specified           @LEA           
         DC    CL10'SEP'               Keyword                   @LEA           
         DC    AL1(3)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL3'&SEP'             insert SEP                  @LEA           
.NOSEP   ANOP                                                    @LEA           
         AIF   ('&SHARED' EQ '').NOSHR   no SHARED specified     @LEA           
         DC    CL10'SHARED'            Keyword                   @LEA           
         DC    AL1(3)                  Length                    @LEA           
         DC    AL1(1)                  Number of values          @LEA           
         DC    CL3'&SHARED'          insert SHARED               @LEA           
.NOSHR   ANOP                                                    @LEA           
.XPRMGN1 ANOP                                                      @HPA         
         AIF   (&NUSRP EQ 0).XPRMEND                               @HPA         
&SUB     SETA  1                      Address parameter            @HPA         
.XPRMID  ANOP  ,                                                   @HPA         
         DC    CL10'&UPRMID(&SUB)'     Parameter id                @HPA         
         DC    AL1(&UPRMVLN(&SUB))     Length of values            @HPA         
         DC    AL1(&UPRMVCT(&SUB))     number of values            @HPA         
&XLEN    SETA  &XLEN+12               Increment length of area     @HPA         
&NDX     SETA  1                      Point to 1st parameter value @HPA         
.XPRMVAL ANOP  ,                                                   @HPA         
&AWK     SETA  (&SUB-1)*8+&NDX                   Position of value @HPA         
         DC    CL&UPRMVLN(&SUB)'&UPRMVAL(&AWK)' Parameter value    @HPA         
&XLEN    SETA  &XLEN+&UPRMVLN(&SUB)   Increment length of area     @HPA         
&NDX     SETA  &NDX+1                 Point to next parm value     @HPA         
         AIF   (&NDX LE &UPRMVCT(&SUB)).XPRMVAL                    @HPA         
&SUB     SETA  &SUB+1                 Point to next parameter      @HPA         
         AIF   (&SUB LE &NUSRP).XPRMID More user parameters        @HPA         
&CWK     SETC  '@XL&CNO'              Label of extension area len  @HPA         
         ORG   &CWK                   Point to area length field   @HPA         
         DC    AL2(&XLEN)             Inserts extension area length@HPA         
         ORG   ,                                                   @HPA         
.XPRMEND ANOP  ,                                                   @HPA         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to              
         MNOTE ' '                     occur if NOGEN specified                 
         MEND                                                                   
*/*==================================================================*/         
*/*==================================================================*/         
         TITLE 'HCD MACRO LISTING - RIOGEN - REAL CONSOLE DEFINITION'           
         MACRO  --  PARSE RIOGEN STATEMENT                                      
&SYMBOL  RIOGEN &CONS=,&ALTCONS=                                                
         AGO   .SKIP                                                            
*/********************************************************************/         
*/*                                                              @LEA*/         
*/*01*  MACRO NAME = RIOGEN                                      @LEA*/         
*/*                                                              @LEA*/         
*/*01*  DESCRIPTIVE NAME = Define system console characteristics @LEA*/         
*/*                                                              @LEA*/         
*/*01*  MACRO CALL =                                             @LEA*/         
*/*       label RIOGEN   CONS=number                             @LEA*/         
*/*                           <,ALTCONS=(number<,number...>)>    @LEA*/         
*/*                                                              @LEA*/         
*/*01*  FUNCTION = Define a device as a system console.          @LEA*/         
*/*                                                              @LEA*/         
*/*02*    DEPENDENCIES = None.                                   @LEA*/         
*/*                                                              @LEA*/         
*/*01*  INPUT = # CONS    = 1 to 4 Hex digit                     @LEA*/         
*/                          primary VM console device number     @LEA*/         
*/*               ALTCONS = 1 to 4 hex digit                     @LEA*/         
*/*                         list of up to 31 alternate VM console@LEA*/         
*/*                          device numbers                      @LEA*/         
*/*                                                              @LEA*/         
*/*             # - Required keyword                             @LEA*/         
*/*                                                              @LEA*/         
*/*01*  OUTPUT = Internal text                                   @LEA*/         
*/*                                                              @LEA*/         
*/********************************************************************/         
.*                                                                 @LEA         
.SKIP    ANOP                                                      @LEA         
         GBLA  &SYSITRN               HCD statement number         @LEA         
         LCLA  &AWK                   Arithmetic work variable     @LEA         
         LCLA  &L                     Max or req'd operand length  @LEA         
         LCLA  &MAXSUB                Max nubr of sublst entries   @LEA         
         LCLA  &NDX                   Substring index              @LEA         
         LCLA  &SUB                   Sublist element number       @LEA         
         LCLB  &ERROR                 Error flag                   @LEA         
         LCLC  &CNO                   EBCDIC version of &SYSITRN   @LEA         
         LCLC  &CWK                   Character work variable      @LEA         
         LCLC  &PARM                  Character work variable      @LEA         
         LCLC  &CKTY                  set type of digit            @LEA         
         ACTR  10000                  Set for infinite loop ctlr   @LEA         
.*                                                                 @LEA         
&SYMBOL  TXTHDR RIOGEN              Build header for RIOGEN rec    @LEA         
.*                                                                              
.**********************************************************************         
.*                                                                    *         
.*       Check if unrecognized parameters are specified               *         
.*                                                                    *         
.**********************************************************************         
         AIF   (N'&SYSLIST EQ 0).XPOS90    No positional parameter @P3A         
         MNOTE 8,'052 UNRECOGNIZED PARAMETER: &SYSLIST(1).'        @P3A         
&ERROR   SETB  1                  Indicate error                   @P3A         
         AGO   .XPOS90            and continue                     @P3A         
.*                                                                              
.XPOS90  ANOP  ,                                                   @P3A         
.**********************************************************************         
.*                                                                 @LEA         
.*       Validate CONS                list of device numbers       @LEA         
.*                                     up to 4 Hex digits each     @LEA         
.*                required                                         @LEA         
.**********************************************************************         
.CKCONS  ANOP                                                      @LEA         
&PARM    SETC  'CONS'                    Parameter for mnote       @LEA         
&L       SETA  4                         Required CONS length      @LEA         
         AIF   ('&CONS' EQ '').NOCONS    CONS not specified        @LEA         
         AIF   (N'&CONS GT 1).SUBL    Operand is in sublist format @LEA         
.*                                                                 @LEA         
         AIF   (K'&CONS LT 1).CONSBAD   Bad length of CONS         @LEA         
         AIF   (K'&CONS LE &L).CONSLEN  Correct length of CONS     @LEA         
         AGO   .CONSBAD                 Invalid length of CONS     @LEA         
.CONSLEN ANOP                                                      @LEA         
.*                                                                 @LEA         
&NDX     SETA  1                      Points to 1st digit of number@LEA         
.**********************************************************************         
.*       Loop to validate each digit in the device number CONS     @LEA         
.*                                                                 @LEA         
.**********************************************************************         
.CNLOOPB ANOP                                                      @LEA         
&CKTY    SETC 'HEX'                     set type of digit          @LEA         
         AIF   ('&CONS'(&NDX,1) LT 'A').BADCN   Bad char           @LEA         
         AIF   ('&CONS'(&NDX,1) LE 'F').GOODCN  Good  (A-F)        @LEA         
         AIF   ('&CONS'(&NDX,1) LT '0').BADCN   Bad char           @LEA         
         AIF   ('&CONS'(&NDX,1) LE '9').GOODCN  Good  (0-9)        @LEA         
.BADCN   ANOP                           Invalid HEX digit          @LEA         
&CWK     SETC  '&CONS'(&NDX,1)          Isolate invalid digit      @LEA         
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN &PARM PARAMETER'          
.*                                                                 @LEA         
&ERROR   SETB  1                      Indicates error              @LEA         
.GOODCN  ANOP                                                      @LEA         
&NDX     SETA  &NDX+1                 Point to next digit          @LEA         
         AIF   (&NDX LE K'&CONS).CNLOOPB  Check next digit         @LEA         
.**********************************************************************         
.*                                                                 @LEA         
.*       Validate ALTCONS       list of up to 31 VM console device @LEA         
.*                              numbers                            @LEA         
.*                                                                 @LEA         
.**********************************************************************         
.CKALTCO ANOP                                                      @LEA         
&PARM    SETC  'ALTCONS'                                           @LEA         
&MAXSUB  SETA  31                     Maximum number of ALTCONS's  @LEA         
         AIF   ('&ALTCONS' EQ '').GENTEXT   ALTCONS not specified  @LEA         
         AIF   (N'&ALTCONS LE &MAXSUB).CONSUBL Number of sublists  @LEA         
         MNOTE 8,'015 &PARM PARAMETER EXCEEDS &MAXSUB SUBLIST ENTRIES  *        
               .'                                                  @LEA         
&ERROR   SETB  1                       Indicate error              @LEA         
         AGO   .ENDCONS                                            @LEA         
.CONSUBL ANOP                                                      @LEA         
&SUB     SETA 1                                                    @LEA         
.**********************************************************************         
.*       Loop to validate each sublist entry                       @LEA         
.**********************************************************************         
.DVLOOP  ANOP                                                      @LEA         
         AIF   ('&ALTCONS(&SUB)' EQ '').DVNULL Null sublist entry  @LEA         
         AIF   (K'&ALTCONS(&SUB) LT 1).DVNBAD    Number of digits  @LEA         
         AIF   (K'&ALTCONS(&SUB) LE &L).DVNLEN  Number of digits   @LEA         
.DVNBAD  ANOP                                                      @LEA         
         MNOTE 8,'022 &PARM PARAMETER SUBLIST ENTRY &SUB MUST BE 1 TO  *        
                &L DIGITS.'                                        @LEA         
&ERROR   SETB  1                       Indicate error              @LEA         
.DVNLEN  ANOP                                                      @LEA         
&NDX     SETA  1                      Points to 1st digit of number@LEA         
.*                                                                 @LEA         
.**********************************************************************         
.*      Loop to validate each character in the device number       @LEA         
.*                                                    of ALTCONS   @LEA         
.**********************************************************************         
.DVLOOPB ANOP                                                      @LEA         
&CKTY    SETC 'HEX'                     set type of digit          @LEA         
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LT 'A').BADDV   Bad char  @LEA         
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LE 'F').GOODDV  Good (A-F)@LEA         
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LT '0').BADDV   Bad char  @LEA         
         AIF   ('&ALTCONS(&SUB)'(&NDX,1) LE '9').GOODDV  Good (0-9)@LEA         
.BADDV   ANOP                           Invalid HEX digit          @LEA         
&CWK     SETC  '&ALTCONS(&SUB)'(&NDX,1)  Isolate invalid digit     @LEA         
         MNOTE 8,'021 INVALID &CKTY DIGIT ''&CWK'' IN SUBLIST ENTRY &SU*        
               B FOR &PARM PARAMETER'                              @LEA         
&ERROR   SETB  1                      Indicates error              @LEA         
.GOODDV  ANOP                                                      @LEA         
&NDX     SETA  &NDX+1                 Point to next digit          @LEA         
         AIF   (&NDX LE K'&ALTCONS(&SUB)).DVLOOPB  Check next digit@LEA         
         AGO  .NXTDVNM                Process next ALTCONS number  @LEA         
.DVNULL  MNOTE 8,'018 &PARM SUBLIST ENTRY &SUB IS MISSING.'        @LEA         
&ERROR   SETB  1                       Indicate error              @LEA         
.*                                                                 @LEA         
.NXTDVNM ANOP                         Next device number           @LEA         
&SUB     SETA  &SUB+1                 Point to next sublist entry  @LEA         
         AIF   (&SUB LE N'&ALTCONS).DVLOOP  More ALTCONS ids  ...  @LEA         
         AGO   .GENTEXT               Generate internal text record@LEA         
.*                                                                 @LEA         
.NOCONS  MNOTE 8,'002 &PARM KEYWORD NOT SPECIFIED.'                @LEA         
&ERROR   SETB  1                      Indicate error               @LEA         
         AGO   .ENDCONS                                            @LEA         
.SUBL    ANOP                                                      @LEA         
         MNOTE 8,'014 &PARM PARAMETER MAY NOT BE A SUBLIST.'       @LEA         
&ERROR   SETB  1                       Indicate error              @LEA         
         AGO   .ENDCONS                                            @LEA         
.CONSBAD ANOP                                                      @LEA         
         MNOTE 8,'022 &PARM PARAMETER MUST BE 1 TO &L HEX DIGITS.' @LEA         
&ERROR   SETB  1                       Indicate error              @LEA         
         AGO   .ENDCONS                                            @LEA         
.ENDCONS ANOP                                                      @LEA         
.**********************************************************************         
.*                                                                 @LEA         
.*       Generate internal text record                             @LEA         
.*                                                                 @LEA         
.**********************************************************************         
.GENTEXT ANOP                                                      @LEA         
         AIF   (&ERROR EQ 1).EXIT     Exit if an error has been    @LEA         
.*                                               found             @LEA         
&CNO     SETC  '&SYSITRN'             EBCDIC version of statement  @LEA         
.*                                               number            @LEA         
         DC    A(@D&CNO)              Pointer to DEVNUM list       @LEA         
&AWK     SETA  N'&ALTCONS+1           Number of entries in list    @LEA         
         DC    H'&AWK'                Number of entries in DEVNUM  @LEA         
.*                                               list              @LEA         
         DC    AL2(0)                 Reserved                     @LEA         
.*                                                                 @LEA         
         SPACE 1                                                   @LEA         
&CWK     SETC  '@D&CNO'               Label for first console      @LEA         
&CWK     DC    XL2'&CONS'             CONS device number           @LEA         
         AIF   (N'&ALTCONS EQ 0).EXIT ALTCONS omitted              @LEA         
&SUB     SETA  1                      Point to first ALTCONS       @LEA         
.CONGEN  ANOP                                                      @LEA         
         DC    XL2'&ALTCONS(&SUB)'    ALTCONS device number        @LEA         
&SUB     SETA  &SUB+1                  Point to next sublist entry @LEA         
         AIF   (&SUB LE N'&ALTCONS).CONGEN  Go insert next ALTCONS @LEA         
.EXIT    MNOTE ' '                    Null MNOTES allow spacing to @LEA         
         MNOTE ' '                     occur if NOGEN specified    @LEA         
         MEND                                                      @LEA         
