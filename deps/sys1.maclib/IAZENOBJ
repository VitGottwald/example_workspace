         MACRO -- IAZENOBJ -- SPOOL Encryption object                   00010000
         IAZENOBJ                                                       00020000
****** START OF SPECIFICATIONS *******************************          00030000
.****PROPRIETARY STATEMENT************************************          00040000
.*01* PROPRIETARY STATEMENT:                                 *          00050000
.*                                                           *          00060000
.*   LICENSED MATERIALS-PROPERTY OF IBM                      *          00070000
.*   5650-ZOS Copyright IBM Corp. 2019, 2021                 *          00080000
.*                                                           *          00090000
.*   STATUS:  HBB77D0                                        *          00100000
.*                                                           *          00110000
.****END-OF-PROPRIETARY-STATEMENT*****************************          00120000
*                                                            *          00130000
*01* DESCRIPTIVE NAME:  SPOOL Encryption object              *          00140000
*02*  ACRONYM:  IAZENOBJ                                     *          00150000
*                                                            * @Z25LENZ 00160000
*01* MACRO NAME:  IAZENOBJ                                   *          00170000
*                                                            *          00180000
*01* DSECT NAME:  IAZENOBJ                                   *          00190000
*01* LABEL PREFIX:  EN                                       * @Z25LENZ 00200000
*                                                            *          00210000
*01* COMPONENT ID:  JES Common (SC141)                       *          00220000
*                                                            *          00230000
*01* EXTERNAL CLASSIFICATION: PSPI                           *          00240000
*01* END OF EXTERNAL CLASSIFICATION:                         *          00250000
*                                                            *          00260000
*01* EYE-CATCHER: ENCRYPTS                                   *          00270000
*02*  OFFSET: ENCCID                                         *          00280000
*02*  LENGTH: L'ENCCID                                       *          00290000
*                                                            *          00300000
*01* STORAGE ATTRIBUTES:                                     *          00310000
*02*  SUBPOOL: 0                                             *          00320000
*02*  KEY:  1                                                *          00330000
*02*  RESIDENCY:                                             *          00340000
*     Virtual and real storage are in 64 bit storage in the  *          00350000
*     private storage of the JES2 address space.             *          00360000
*                                                            *          00370000
*01* SIZE:                                                   *          00380000
*                                                            *          00390000
*     See ENCSIZE                                            *          00400000
*                                                            *          00410000
*01* CREATED BY:                                             *          00420000
*                                                            *          00430000
*     IAZENOPR - oper=setup                                  *          00440000
*                                                            *          00450000
*01* POINTED TO BY:                                          *          00460000
*                                                            *          00470000
*     Pointer retuned by oper=setup. Caller responsible      *          00480000
*     for storing and eventually freeing.                    *          00490000
*                                                            *          00500000
*01* SERIALIZATION:                                          *          00510000
*                                                            *          00520000
*     Responsibility of caller                               *          00530000
*                                                            *          00540000
*01* FUNCTION:                                               *          00550000
*                                                            *          00560000
*     The IAZENOBJ provides the mapping of the object        *          00570000
*     used to compress and/or encrypt SPOOL data sets. The   *          00580000
*     scope of this object is up to the object owner.        *          00590000
*     Two flavors of object which are put and get.           * @Z25LENZ 00600000
*                                                            * @Z25LENZ 00605000
*01* METHOD OF ACCESS:                                       *          00610000
*                                                            *          00620000
*02*  ASM:                                                   *          00630000
*      IAZENOPR macro                                        *          00640000
*                                                            *          00650000
*02*  PL/X:                                                  *          00660000
*      None                                                  *          00670000
*                                                            *          00680000
*01* USED BY:                                                *          00690000
*                                                            *          00700000
*                                                            *          00710000
*01* DELETED BY:                                             *          00720000
*                                                            *          00730000
*     IAZENOPR - oper=cleanup                                *          00740000
*                                                            *          00750000
*01* FREQUENCY:                                              *          00760000
*                                                            *          00770000
*    -One encryption object per setup invocation.            *          00780000
*    -Object resides in 64 K storage                         *          00790000
*                                                            *          00800000
*                                                            *          00810000
****** END OF SPECIFICATIONS *********************************          00820000
         EJECT                                                          00830000
*********************************************************************   00840000
*01* CHANGE ACTIVITY:                                               *   00850000
*                                                                   *   00860000
* $Z25LENZ=ENCRYPT  HBB77D0 190416 SJS:  SPOOL Encryption phase 3     * 00865000
* $Z25LBAS=BASEQ    HBB77D0 210205 BWT:  Rollup and misc tweaks       * 00866000
*                                                                   *   00875000
*********************************************************************   00880000
         EJECT ,                                                        00890000
ENCOBJ   DSECT                     SPOOL encryption object              00900000
ENCCID   DC    CL8'ENCRYPTS'       Control block identifier             00910000
         SPACE 1                                                        00920000
*********************************************************************   00930000
*              Object level definition                              *   00940000
*********************************************************************   00950000
         SPACE 1                                                        00960000
ENCOBTYP DS    XL1                 Object type                          00970000
ENCPUT   EQU   1                     Put                                00980000
ENCGET   EQU   2                     Get                                00990000
ENCDEBUG DS    XL1                 Debug mode                  @Z25LENZ 00995000
         SPACE 1                                                        01000000
*------------------------------------------------------------* @Z25LENZ 01002000
*        The following fields only relevant for PUT object   * @Z25LENZ 01004000
*------------------------------------------------------------* @Z25LENZ 01006000
         SPACE 1                                               @Z25LENZ 01008000
ENCDATM  DS    B                   Actions - data BLK content  @Z25LENZ 01010000
ENCCOMPR EQU   B'10000000'         Compression directed        @Z25LENZ 01020000
ENCENCRY EQU   B'01000000'         Encryption directed         @Z25LENZ 01030000
         DS    XL1                 Reserved/alignment          @Z25LENZ 01040000
         SPACE 1                                                        01050000
ENCENMET DS    H                   Encryption method                    01060000
ENCCOMET DS    H                   Compression method                   01070000
ENCDSKEY DS    CL64                Key label                            01080000
ENCDSLEN DS    H                   Key length                           01100000
ENCVERTK DS    XL16                Verification token supplied @Z25LENZC01120000
                                    oper=setup                 @Z25LENZ 01122000
ENCHIST  DS    B                   Object history              @Z25LENZ 01125000
ENCHFLG1 EQU   B'10000000'         Software inflate used       @Z25LENZ 01126000
         DS    XL257               Reserved/alignment          @Z25LENZ 01127000
         EJECT ,                                                        01130000
**************************************************************          01140000
*        Logical and data block section                      *          01150000
*                                                            *          01160000
* ------> Logical block                                      *          01170000
*          Contains uncompressed and/or unencrypted records  *          01180000
*                                                            *          01190000
*       ! Data/Log !       !          !            !       ! *          01200000
*       ! BLK HDR  ! Rec5  ! Rec6     ! Rec7       ! Rec8  ! *          01210000
*       !__________!_______!__________!____________!_______! *          01220000
*         1st rec                                            *          01230000
*         #recs                                              *          01240000
*         Lengths                                            *          01250000
*                                                            *          01260000
*        ENBLKHDR                                            *          01270000
*                                                            *          01280000
*  Internal view of a record within logical block. May       *          01290000
*  span logical blocks.                                      *          01300000
*                                                            *          01310000
*   F                                                        *          01320000
*   L  1st                                                   *          01330000
*   A  Span                                        Record    *          01340000
* ! G !Len ! REC_LEN  ! INFO_LEN !   REC_INFO    ! data    ! *          01350000
* !___!____!__________!__________!_______________!_________! *          01360000
*   1   2    4 byte      1 byte   caller defined   1-32768   *          01370000
*                                                            *          01380000
*   <--------Record header-------><----Record Data---------> *          01390000
*                                                            *          01400000
*       ENRECHDR dsect in IAZENOBJ                           *          01410000
*                                                            *          01420000
*       Caller defined information size can be up to 31      *          01430000
*       bytes long.                                          *          01440000
*                                                            *          01450000
*                                                            *          01460000
* ------>  Data block  -> Contains compressed and/or         *          01470000
*          block          encrypted data (records)           *          01480000
*                                                            *          01490000
*                                                            *          01500000
*       ! Data/Log ! Compressed and/or encrypted record(s) ! *          01510000
*       ! BLK HDR  !                                       ! *          01520000
*       !__________!_______________________________________! *          01530000
*                                                            *          01540000
*       ENBLKHDR dsect in IAZENOBJ                           *          01550000
*                                                            *          01560000
**************************************************************          01570000
         SPACE 1                                                        01580000
         DS    0D                  Alignment                            01590000
ENLOGB1  DS    AD                  Ptr to logical block #1              01600000
ENLOGB2  DS    AD                  Ptr to logical block #2              01610000
ENDATB1  DS    AD                  Ptr to data block #1                 01620000
ENDATB2  DS    AD                  Ptr to data block #2                 01630000
         SPACE 1                                               @Z25LENZ 01640000
         DS    XL32                Reserved                    @Z25LENZ 01645000
*------------------------------------------------------------*          01650000
*                                                            * @Z25LENZ 01655000
*        Logical block flag:                                 * @Z25LENZ 01660000
*                                                            * @Z25LENZ 01665000
*        Note: Only one logical block active at a time       *          01670000
*              for put type object. May have two active for  *          01680000
*              get type object. Active denotes record data.  * @Z25LENZ 01690000
*                                                            * @Z25LENZ 01700000
*------------------------------------------------------------*          01710000
         SPACE 1                                                        01720000
ENCLGFLG DS    B                   Logical block flag                   01730000
ENCL1ACT EQU   B'10000000'         Logical block #1 active              01740000
ENCL2ACT EQU   B'01000000'         Logical block #2 active              01750000
         SPACE 1                                                        01760000
*------------------------------------------------------------*          01770000
*        Data block flag                                     *          01780000
*------------------------------------------------------------*          01790000
         SPACE 1                                                        01800000
ENDATFLG DS    B                   Data block flag                      01810000
ENDT1OUT EQU   B'10000000'         Block 1 checked out                  01820000
ENDT2OUT EQU   B'01000000'         Block 2 checked out                  01830000
         DS    XL14                Reserved for future use     @Z25LENZ 01840000
         EJECT ,                                                        01850000
**************************************************************          01860000
*                                                            *          01870000
*        Active logical block(s) information:                *          01880000
*                                                            *          01890000
*          Information in this section only valid if ...     *          01900000
*            -- ENCL1ACT -> Logical block #1 active          *          01910000
*                                                            *          01920000
*          In the case of get object two logical blocks may  *          01930000
*          be active. In this case the information below     *          01940000
*          is object level and the composite of the two      *          01950000
*          logical blocks if both are active.                * @Z25LENZ 01960000
*                                                            *          01970000
**************************************************************          01980000
         SPACE 1                                                        01990000
         DS    0D                  Alignment                            02000000
ENLOGINF DS    XL256               Allows clear of entire      @Z25LENZC02010000
                                    section                    @Z25LENZ 02020000
         ORG   ENLOGINF                                                 02030000
ENC1SREC DS    D                   Put - First record          @Z25LENZC02040000
                                    number in logical blk.             C02050000
                                    This is relative from              C02060000
                                    start of data set where            C02070000
                                    the first is 1.                    C02080000
                                   Get - First record number           C02090000
                                    in first active block.             C02100000
                                    This is relative from              C02110000
                                    start of data set where            C02120000
                                    the first is 1. Note:              C02130000
                                    Get may have two active            C02140000
                                    blocks.                    @Z25LENZ 02150000
ENC#RECS DS    F                   Put - current number of             C02160000
                                    records availble in                C02170000
                                    logical blk (1). Number            C02180000
                                    of records that have been          C02190000
                                    put.                               C02200000
                                   Get - not relevant          @Z25LENZ 02210000
ENCBLREC DS    F                   Get - number of records in          C02250000
                                    blocks or blocks if 2.             C02260000
                                    Static - only changes              C02270000
                                    via primeblk.                       02280000
         DS    XL16                Reserved for future use     @Z25LENZC02290000
                                    section                    @Z25LENZ 02300000
         SPACE 1                                                        02310000
**************************************************************          02320000
*                                                            *          02330000
*        Cursor information for active logical block(s).     * @Z25LENZ 02340000
*        Put object - only one block Get - up to two         * @Z25LENZ 02350000
*        Note: record number denotes number from start of    *          02360000
*              active logical block(s).                      * @Z25LENZ 02370000
*                                                            * @Z25LENZ 02380000
*        Valid fields for get object:                        *          02390000
*          ENCLGBLK                                          *          02400000
*          ENCACTAD                                          *          02410000
*          ENCNEXT                                           *          02420000
*          ENCCUR#                                           *          02430000
*                                                            *          02440000
*        Valid fields for put object:                        *          02450000
*          ENCNEXT                                           *          02460000
*                                                            *          02470000
**************************************************************          02480000
         SPACE 1                                                        02490000
         DS    0D                  Alignment                            02500000
ENCLGBLK DS    F                   Active logical blk number           C02510000
                                    containing record that             C02520000
                                    cursor is positioned to.           C02530000
                                    Put object - not really    @Z25LENZC02540000
                                     relevant since only 1     @Z25LENZC02545000
                                    Get object - 1 or 2        @Z25LENZ 02550000
ENCACTAD DS    AD                  Active block address                C02560000
                                    Put object - not really    @Z25LENZC02570000
                                    relevant since only 1      @Z25LENZ 02575000
ENCNEXT  DS    AD                  PTR - Cursor position to            C02580000
                                    next record:                       C02590000
                                      - getrec - next record           C02600000
                                        to get                         C02610000
                                      - putrec - area to               C02620000
                                        put next record                 02630000
         DS    AD                  Reserved                    @Z25LENZ 02631000
ENCCUR#  DS    F                   Only pertains to Get type           C02640000
                                    object. Relative record            C02650000
                                    associated with cursor.            C02660000
                                    Relative from start of             C02670000
                                    first active logical blk.          C02680000
                                    For get there can be two           C02690000
                                    active blocks. Always      @Z25LENZC02700000
                                    starts at 1.               @Z25LENZ 02705000
ENCURLST DS    AD                  Last set cursor position    @Z25LENZ 02710000
ENLOGSIZ EQU   *-ENLOGINF          Length of active logical    @Z25LENZC02711000
                                    block section              @Z25LENZ 02712000
ENACTRES EQU   (L'ENLOGINF-ENLOGSIZ) Reserved space left       @Z25LENZ 02713000
         SPACE 1                                               @Z25LENZ 02714000
         DS    XL(ENACTRES)        Reserved space              @Z25LENZ 02715000
         ORG ,                                                 @Z25LENZ 02800000
         DS    0D                  Alignment                            02810000
         EJECT ,                                               @Z25LENZ 02831000
************************************************************** @Z25LENZ 02832000
*        IAZENSER (Encryption/Compression) service - work    * @Z25LENZ 02833000
*        area specified by oper=<type>.There is a common     * @Z25LENZ 02834000
*        used by all operations followed by operation        * @Z25LENZ 02834100
*        specific area. Each are 256 bytes in length.        * @Z25LENZ 02834400
************************************************************** @Z25LENZ 02835000
         SPACE 1                                               @Z25LENZ 02836000
         DS    0LQ                 Quadword alignment          @Z25LENZ 02838000
ENCWRKAR DS    XL256               Common work area for all    @Z25LENZ 02840000
         ORG   ENCWRKAR             operations                 @Z25LENZ 02850000
         SPACE 1                                                        02860000
*------------------------------------------------------------*          02870000
*        Work area ...                                       *          02880000
*        information common to one or more oper=             * @Z25LENZ 02890000
*------------------------------------------------------------*          02900000
         SPACE 1                                                        02910000
ENCALASC DS    XL8                 Caller ASC mode                      02920000
ENCDATAB DS    AD                  Address of compressed       @Z25LENZC02922000
                                    and/or encrypted data      @Z25LENZC02924000
                                    block. Zero pointer        @Z25LENZC02926000
                                    denotes none.              @Z25LENZ 02928000
ENCOMPRE DS    F                   Length of logical BLK               C02930000
                                    after compression  -               C02940000
                                    includes prepended header           02950000
ENCNUMBY DS    F                   PUT object - used by        @Z25LENZC02960000
                                    subroutine ENENCRPT to     @Z25LENZC02970000
                                    determine minimal size     @Z25LENZC02980000
                                    once compression and/or    @Z25LENZC02990000
                                    encryption performed.      @SJ2LEN  02995000
         DS    XL8                 Reserved/alignment          @Z25LENZ 02995100
         SPACE 1                                               @Z25LENZ 02995200
*------------------------------------------------------------* @Z25LENZ 02995400
*        Fields CPYDIST, CPYNUMR and CPYLELEN MUST stay in   * @Z25LENZ 02995600
*        order and on QWORD boundary to assure atomic        * @Z25LENZ 02995800
*        update.                                               @Z25LENZ 02996000
*------------------------------------------------------------* @Z25LENZ 02996200
         SPACE 1                                               @Z25LENZ 02996400
         DS    0LQ                 Quadword alignment          @Z25LENZ 02996600
CPYDIST  DS    XL8                 Copy - ENDD1ST (Log block)  @Z25LENZ 02996800
CPYNUMR  DS    XL4                 Copy - ENDNUMR (Log block)  @Z25LENZ 02997000
CPYLELEN DS    XL4                 Copy - ENLGLEN (log block)  @Z25LENZ 02997200
ENCALLER DS    A                   Caller address              @Z25LENZ 02997400
         SPACE 1                                               @Z25LENZ 02997600
ENCREGS1 DS    AD                  Register save area 1        @Z25LENZ 02997800
ENCREGS2 DS    AD                  Register save area 2        @Z25LENZ 02998000
ENCONLEN EQU   *-ENCWRKAR          Current length of common    @Z25LENZC02998200
                                    work area                  @Z25LENZ 02998400
ENCOMRES EQU   (L'ENCWRKAR-ENCONLEN) Reserved space left       @Z25LENZ 02998600
         DS    XL(ENCOMRES)        Common reserved area        @Z25LENZ 02998800
         EJECT ,                                               @Z25LENZ 02999000
************************************************************** @Z25LENZ 02999200
*        Call specific work area                             * @Z25LENZ 02999400
************************************************************** @Z25LENZ 02999600
         SPACE 1                                               @Z25LENZ 02999800
         DS    0D                  Alignment                   @Z25LENZ 03000000
ENCALWRK DS    XL(256)             Call specific work area     @Z25LENZ 03000200
         SPACE 1                                               @Z25LENZ 03000800
*------------------------------------------------------------* @Z25LENZ 03001600
*        Oper=setup work area                                * @Z25LENZ 03002400
*------------------------------------------------------------* @Z25LENZ 03003200
         SPACE 1                                               @Z25LENZ 03004000
         ORG   ENCALWRK                                        @Z25LENZ 03004800
ENSENKEY DS    XL16                Encrypted key verification  @Z25LENZC03005600
                                    value                      @Z25LENZ 03006400
ENDECKEY DS    XL16                Decrypted key verification  @Z25LENZC03007200
                                    value                      @Z25LENZ 03008000
ENBCFXC@ DS    AD                  BCFXCRYP address            @Z25LENZ 03008800
         SPACE 1                                                        03010000
*------------------------------------------------------------*          03020000
*        Oper=putrec work area                               *          03030000
*------------------------------------------------------------*          03040000
         SPACE 1                                                        03050000
         ORG   ENCALWRK                                                 03060000
ENPLASTB DS    AD                  Last byte in logical                C03070000
                                    block one                           03080000
         DS    F                   Reserved                    @Z25LENZ 03090000
ENPUTMO1 DS    F                   Bytes of record data in             C03110000
                                    initial move. Could include        C03120000
                                    carriage control           @Z25LBAS 03130000
ENPUTSPN DS    F                   Spanned record - bytes              C03140000
                                    in 2nd span                         03150000
ENPDATS# DS    D                   Dataset record number       @Z25LENZC03160000
                                    associated with spanner    @Z25LENZ 03170000
ENPUTFL1 DS    B                   PUTREC flag                          03180000
ENPUTSPA EQU   B'10000000'         The put spans two logical           C03190000
                                    blocks                              03200000
ENPUTRTN EQU   B'01000000'         Compress and/or encrypt             C03210000
                                    logical blk and return it          C03220000
                                    to caller.                          03230000
ENPUTCAR DS    XL1                 Copy of carriage control    @Z25LENZC03232000
                                    character supplied by      @Z25LENZC03234000
                                    caller                     @Z25LENZ 03236000
         SPACE 1                                                        03240000
*------------------------------------------------------------*          03250000
*        Oper=getrec work area                               *          03260000
*------------------------------------------------------------*          03270000
         SPACE 1                                                        03280000
         ORG   ENCALWRK                                                 03290000
EN1STSPN DS    F                   Bytes of record data in             C03300000
                                    initial move. Spanner               03310000
EN2NDSPN DS    F                   Spanned record - bytes              C03320000
                                    in 2nd move. Spanner                03330000
ENGETTOT DS    F                   Total record length -               C03340000
                                   Record hdr + record info            C03350000
                                   length + record data len             03360000
ENGDALEN DS    F                   Length of data record to    @Z25LENZC03363000
                                    move                       @Z25LENZ 03366000
ENGETFL1 DS    B                   GETREC flag                          03370000
ENGETSPA EQU   B'10000000'         The record spans a                  C03380000
                                    logical block                       03390000
ENSIZEOK EQU   B'01000000'         Caller supplied data        @Z25LENZC03392000
                                    buffer is large enough     @Z25LENZC03394000
                                    to contain entire data     @Z25LENZC03396000
                                    record                     @Z25LENZ 03398000
ENGADDCR EQU   B'00100000'         Add carriage control '00'X  @Z25LENZC03398100
                                    onto the front of returned @Z25LENZC03398400
                                    record                     @Z25LENZ 03398700
ENGSKPCR EQU   B'00010000'         Skip moving CCTL from data  @Z25LENZC03399000
                                    record to user buffer      @Z25LENZ 03399300
         EJECT ,                                                        03400000
*------------------------------------------------------------*          03410000
*        Oper=primeblk work area                             *          03420000
*------------------------------------------------------------*          03430000
         SPACE 1                                                        03440000
         ORG   ENCALWRK                                                 03450000
ENPRECNM DS    F                   For ENPRMFL1 -> EN1STBYE            C03460000
                                    this is number of records          C03470000
                                    in logical block #1 before         C03480000
                                    going away                          03490000
ENPDATBL DS    AD                  Address of data block table         C03500000
                                    entry                               03510000
ENPRMFL1 DS    B                   PRIMEBLK flag                        03520000
ENPDATB1 EQU   B'10000000'         Supplied prime blk                  C03530000
                                    will become 1st log blk             03540000
ENPDATB2 EQU   B'01000000'         Supplied prime blk                  C03550000
                                    will become 2nd log blk             03560000
EN1STBYE EQU   B'00100000'         Former 1st logical blk              C03570000
                                    going away and supplied            C03580000
                                    prime blk becomes 2nd log          C03590000
                                    block. Former 2nd becomes          C03600000
                                    1st.                                03610000
ENPCURSE EQU   B'00010000'         Cursor must be set                   03620000
ENPCLEAR EQU   B'00001000'         Supplied blk was in clear            03630000
         SPACE 1                                                        03640000
*------------------------------------------------------------*          03650000
*        Oper=replrec work area                              *          03660000
*------------------------------------------------------------*          03670000
         SPACE 1                                                        03680000
         ORG   ENCALWRK                                                 03690000
ENRLOGBK DS    F                   Logical block record found          C03700000
                                    in - 1 or 2. Only for get          C03710000
                                    type object.                        03720000
ENRWRKAR DS    F                   General work area for       @Z25LENZC03723000
                                    stuff                      @Z25LENZ 03726000
ENRCARCH DS    XL1                 Copy of carriage control            C03730000
                                    character supplied                  03740000
         SPACE 1                                               @Z25LENZ 03741000
*------------------------------------------------------------* @Z25LENZ 03742000
*        Oper=point work area                                * @Z25LENZ 03743000
*------------------------------------------------------------* @Z25LENZ 03744000
         SPACE 1                                               @Z25LENZ 03745000
         ORG   ENCALWRK                                        @Z25LENZ 03746000
ENPOFLAG DS    B                   Point flag                  @Z25LENZ 03747000
ENPLUS1  EQU   B'10000000'         Position to last record +1  @Z25LENZ 03748000
         ORG ,                                                 @Z25LENZ 03750000
         EJECT ,                                                        03770000
**************************************************************          03780000
*        Calling and work areas for ICSF (CRYTO) services    * @Z25LENZ 03790000
*        used by IAZENSER.These area are used by BCFXCRYP.   * @Z25LENZ 03795000
*        encryption service.                                 * @Z25LENZ 03796000
**************************************************************          03800000
         SPACE 1                                                        03810000
           ORG ,                                               @Z25LENZ 03820000
           DS    0D                Alignment                            03830000
CRYPI_AREA DS    XL(CRYPI_LEN_C)   Calling sturcture which     @Z25LENZC03840000
                                    will contain wrapped key   @Z25LENZ 03850000
           DS    0D                Alignment                            03860000
CRYPV_AREA DS    XL(CRYPV_LEN_C)   Calling structure for       @Z25LENZC03870000
                                    encipher and decipher              C03880000
                                    data                       @Z25LENZ 03890000
           DS    0D                Alignment                   @Z25LENZ 03891000
CRYP_WORKA DS    XL(CRYP_WORKA_SIZE) CRYPx work area           @Z25LENZ 03894000
CSNEKRR@   DS    AD                CSNEKRR2 address                     03900000
CSNSERVI   DS    B                 External encryption         @Z25LENZC03910000
                                    flags. Scope is setup      @Z25LENZC03920000
                                    and used to determine      @Z25LENZC03921000
                                    if FLUSH_STATS required.   @Z25LENZ 03924000
CSINITED   EQU   B'10000000'       Encryption service          @Z25LENZC03930000
                                    initialized via BCFCRYPT   @Z25LENZ 03940000
         EJECT ,                                                        04060000
*-----------------------------------------------------------*           04070000
*        Following for CSNEKRR2 module. This module given   *  @Z25LENZ 04080000
*        supplied key label will return wrapped (cipher)    *  @Z25LENZ 04090000
*        key.                                               *  @Z25LENZ 04095000
*-----------------------------------------------------------*           04100000
         SPACE 1                                                        04110000
                    DS   0F        Alignment                            04120000
CSN_RETCODE         DS   F         CSNBKRR2 return code                 04130000
CSN_RSNCODE         DS   F         CSNBKRR2 reason code                 04140000
CSN_EXIT_DATA_LEN   DS   F         Len of exit data -> 0                04150000
CSN_EXIT_DATA       DS   C         Exit data - none -'0'B               04160000
CSN_RULE_ARRAY_CNT  DS   F         # of keywords supplied=2             04170000
CSN_RULE_ARRY_ENT1  DS   CL(8)     Rule #1                     @Z25LENZ 04180000
CSN_RULE_ARRY_ENT2  DS   CL(8)     Rule #2                              04190000
CSN_KEYLABEL        DS   CL(64)    Key label (input)                    04200000
CSNELST             DS   15AD      Parm list                   @Z25LENZ 04201000
* BCFPARM  BCFXCRYP  MF=L          Parm list                   @Z25LENZ 04202000
BCFPARM             DS   2AD                                   @Z25LENZ 04203000
                    DS   XL16      Reserved                    @Z25LENZ 04204000
         ORG ,                                                 @Z25LENZ 04205000
         EJECT ,                                               @Z25LENZ 04210600
*************************************************************  @Z25LENZ 04210800
*                                                           *  @Z25LENZ 04211000
*        Various fields used by compression service.        *  @Z25LENZ 04211200
*                                                           *  @Z25LENZ 04211400
*         -- FPZ4PRB service - check for the required       *  @Z25LENZ 04211600
*            hardware and software needed for zEDC.         *  @Z25LENZ 04211800
*                                                           *  @Z25LENZ 04212000
*         -- FPZ4ABC service - Submit compression request   *  @Z25LENZ 04212200
*            to deflate or inflate data.                    *  @Z25LENZ 04212400
*                                                           *  @Z25LENZ 04212600
*************************************************************  @Z25LENZ 04212800
         SPACE 1                                               @Z25LENZ 04213000
*-----------------------------------------------------------*  @Z25LENZ 04213200
*        FPZ4PRB service                                       @Z25LENZ 04213400
*-----------------------------------------------------------*  @Z25LENZ 04213600
         SPACE 1                                               @Z25LENZ 04213800
         DS    0D                  Alignment                   @Z25LENZ 04213900
ApplId              DS   F         Application ID              @Z25LENZ 04214000
PrbFlags            DS   D         Options for FPZ4PRB         @Z25LENZC04214200
                                    service                    @Z25LENZ 04214400
NumDevices          DS   F         The number of devices       @Z25LENZC04214600
                                    available                  @Z25LENZ 04214800
ReturnCode          DS   F         Return code from service    @Z25LENZ 04215000
ReasonCode          DS   F         Reason code from service    @Z25LENZ 04215200
                    DS   XL16      Reserved                    @Z25LENZ 04215300
         SPACE 1                                               @Z25LENZ 04215400
*-----------------------------------------------------------*  @Z25LENZ 04215600
*        FPZ4ABC service                                       @Z25LENZ 04215800
*-----------------------------------------------------------*  @Z25LENZ 04216000
         SPACE 1                                               @Z25LENZ 04216200
         DS    0D                  Alignment                   @Z25LENZ 04216300
AbcFlags            DS   D         Options for the FPZ4ABC     @Z25LENZC04216400
                                    service                    @Z25LENZ 04216600
RzvToken            DS   CL(16)    The rendezvous token        @Z25LENZ 04216800
InputRmrToken       DS   CL(8)     The region memory           @Z25LENZC04217000
                                    registration (RMR) token   @Z25LENZ 04217200
OutputRmrToken      DS   CL(8)     Output RMR token            @Z25LENZ 04217400
Input@              DS   AD        Pointer to input string     @Z25LENZ 04217600
Output@             DS   AD        Pointer to outout string    @Z25LENZ 04217800
InputLength         DS   D         Length of input             @Z25LENZ 04218000
OutputLength        DS   D         Length of output            @Z25LENZ 04218200
GeneratedOutputLen  DS   D         How much output was         @Z25LENZC04218400
                                    generated and stored at    @Z25LENZC04218600
                                    Output@                    @Z25LENZ 04218800
                    DS   XL16      Reserved                    @Z25LENZ 04219200
ENCBASSZ EQU   *-ENCOBJ            Base object size                     04220000
         EJECT ,                                                        04230000
**************************************************************          04240000
*        Reason Codes:                                       * @Z25LENZ 04245000
*        Below is the call communication area between macro  *          04250000
*        IAZENOPR and back end service IAZENSER.             * @Z25LENZ 04260000
*        Requested operation is communicated and result      *          04270000
*        returned in R15 (Return code) and R0 (Reason code). * @Z25LENZ 04280000
**************************************************************          04300000
         SPACE 1                                                        04310000
ENCCALL  DS    0D                  Call sturcture                       04320000
ENCOPER  DS    XL1                 Operation requested                  04330000
OBJSIZ   EQU   1                     objsiz                             04340000
SETUPE   EQU   2                     setup                     @Z25LENZ 04350000
CLEANUP  EQU   3                     cleanup                            04360000
PUTRECO  EQU   4                     putrec                             04370000
GETBLK   EQU   5                     getblk                             04380000
RTNBLK   EQU   6                     rtnblk                             04390000
PRIMEBL  EQU   7                     primeblk                           04400000
GETRECO  EQU   8                     getrec                             04410000
REPLREC  EQU   9                     replrec                            04420000
QUERY    EQU   10                    query                              04430000
POINT    EQU   11                    point                              04440000
ENDREQ   EQU   12                    endreq                             04450000
FLUSH    EQU   13                    flush                              04460000
         DS    XL15                Reserved for future use              04470000
         DS    0D                    Alignment                          04480000
ENCOBPTR DS    AD                  PTR to object                        04490000
         DS    XL4                 Reserved                    @Z25LENZ 04500000
ENREASON DS    F                   Reason code (see below)     @Z25LENZ 04510000
         EJECT ,                                               @Z25LENZ 04512000
************************************************************** @Z25LENZ 04515000
*        Operation input/output parmeters for all oper=.     * @Z25LENZ 04518000
************************************************************** @Z25LENZ 04521000
         SPACE 1                                               @Z25LENZ 04524000
         DS    0D                  Alignment                            04530000
ENCPARMS DS    CL256               Iput/output area            @Z25LENZ 04540000
         EJECT ,                                                        04690000
**************************************************************          04700000
*        SETUP                                               *          04710000
*        oper= setup                                         *          04720000
**************************************************************          04730000
         SPACE 1                                                        04740000
         ORG   ENCPARMS            Start of setup unique parms          04750000
SETLABEL DS    CL64                Key label                            04760000
         SPACE 1                                                        04770000
SETVERIN DS    XL16                Input verification key              C04780000
                                    to be encrypted and        @Z25LENZC04790000
                                    verified. Used to verify   @Z25LENZC04800000
                                    wrapped (cipher) key       @Z25LENZ 04803000
SETENTOK DS    XL16                Encrypted verification key. @Z25LENZC04806000
                                    Output/Input field. If     @Z25LENZC04810000
                                    supplied it shall be       @Z25LENZC04812000
                                    verified. If not supplied  @Z25LENZC04815000
                                    it shall be returned.      @Z25LENZC04815300
                                    Used to verify no encrypt  @Z25LENZC04816000
                                    problems for a data set    @Z25LENZC04816700
                                    for put and associated     @Z25LENZC04817400
                                    get object. Referred to as @Z25LENZC04818100
                                    canary value (coal mine).  @Z25LENZ 04818800
SETMETH  DS    H                   Encryption method           @Z25LENZ 04820000
SETENMET EQU   2                   Allowed encryption method   @Z25LENZ 04822000
         DS    H                   Reserved                    @Z25LENZ 04825000
SETCOMP  DS    H                   Compression method          @Z25LENZ 04830000
SETCMMET EQU   1                   Allowed compression method  @Z25LENZ 04832000
         DS    H                   Reserved                    @Z25LENZ 04835000
SETKYWRP DS    AD                  Key wrap routine address             04840000
SETKYLEN DS    H                   Key label length                     04850000
SETOBTYP DS    XL1                 Type of object - (put               C04860000
                                    or get) see equate values          C04870000
                                    for ENCOBTYP                        04880000
SETDATM  DS    XL1                 Type data block contents -          C04890000
                                    compress/encrypt or both.  @Z25LENZC04900000
                                    or in the clear.           @Z25LENZ 04910000
ENCCOMP  EQU   1                   Compression requested       @Z25LENZ 04911000
ENCENCR  EQU   2                   Encryption requested        @Z25LENZ 04912000
ENCBOTH  EQU   3                   Compression and encryption  @Z25LENZ 04913000
ENCCLEAR EQU   4                   Send data in clear          @Z25LENZ 04914000
         SPACE 1                                               @Z25LENZ 04915000
SETDEBUG DS    XL1                 Debug option - '00'x -              C04920000
                                    denotes OFF. '01'x ->              C04930000
                                    ON.                                 04940000
DEBUGON  EQU   1                   Debug is on                 @Z25LENZ 04950000
DEBUGOFF EQU   0                   Debug is off                @Z25LENZ 04960000
SETICSF  DS    XL1                 ICSF service should be used @Z25LENZC04970000
                                    to verify callers access   @Z25LENZC04980000
                                    supplied key label.        @Z25LENZ 04990000
ICSFYES  EQU   1                   Use ICSF                    @Z25LENZ 05000000
ICSFNO   EQU   0                   Do not use ICSF             @Z25LENZ 05010000
SETENVER DS    XL1                 Encrypted verification key  @Z25LENZ 05020000
ENVERNO  EQU   0                   Encrypt verfication key NO  @Z25LENZ 05030000
ENVERYES EQU   1                   Encrypt verfication key YES @Z25LENZ 05040000
         EJECT ,                                                        05050000
**************************************************************          05060000
*        CLEANUP                                             *          05070000
*        oper= cleanup                                       *          05080000
**************************************************************          05090000
         SPACE 1                                                        05100000
         ORG   ENCPARMS            Start of cleanup unique             C05110000
                                    input parms                         05120000
         EJECT ,                                                        05130000
**************************************************************          05140000
*        PUTREC                                              *          05150000
*        oper= putrec                                        *          05160000
**************************************************************          05170000
         SPACE 1                                                        05180000
         ORG   ENCPARMS            Start of putrec input parms          05190000
PUTREC   DS    AD                  PTR to record to be put     @Z25LENZ 05200000
PUTINFO  DS    AD                  PTR to record information           C05240000
                                    (LRC, etc.) to be                  C05250000
                                    prepended to the front of          C05260000
                                    record.                    @Z25LENZ 05270000
PUTCARRC DS    AD                  PTR to carriage cont char           C05310000
                                    in user supplied buffer             05320000
PUTDAREC DS    AD                  Address of data record              C05330000
                                    in logical block           @Z25LENZ 05340000
PUTRECNM DS    D                   Record number (data set)    @Z25LENZ 05350000
PUTRELEN DS    F                   Length of actual data rec            05360000
PUTINLEN DS    F                   Length of record info               C05370000
                                    pointed to by PUTINFO.              05380000
PUTCRYES DS    XL1                 01 -> Carriage control              C05430000
                                    has been specified                  05440000
PUTCAKEY DS    XL1                 Caller key to be used for   @Z25LENZC05442000
                                    record move.               @Z25LENZ 05444000
         DS    XL2                 Alignment                   @Z25LENZ 05446000
         SPACE 1                                                        05450000
*------------------------------------------------------------*          05460000
*        Return values when RC = 8                           * @Z25LENZ 05470000
*------------------------------------------------------------*          05480000
         SPACE 1                                                        05490000
PUTDATAB DS    AD                  Address of compressed               C05510000
                                    and/or encrypted data              C05520000
                                    block.                              05530000
PUTREC#  DS    FD                  Record number associated    @Z25LENZC05532000
                                    with record just put       @Z25LENZ 05535000
PUTRFLG  DS    B                   Flag                        @Z25LENZ 05536000
PUTRFRST EQU   B'10000000'         Record put is first record  @Z25LENZC05537000
                                    record within logical blk  @Z25LENZ 05538000
         EJECT ,                                                        05540000
**************************************************************          05550000
*        GETBLK - check out data block                       *          05560000
*        oper= getblk                                        *          05570000
**************************************************************          05580000
         SPACE 1                                                        05590000
         ORG   ENCPARMS            Start of getblk input               C05600000
                                    parms                               05610000
         SPACE 1                                                        05620000
*------------------------------------------------------------*          05630000
*        Return values when RC = 0                           * @Z25LENZ 05640000
*------------------------------------------------------------*          05650000
GETDATAB DS    AD                  Address of checked out              C05670000
                                    data block.                         05680000
         EJECT ,                                                        05690000
**************************************************************          05700000
*        Return block - return block addresses to caller     *          05710000
*        oper= rtnblk                                        *          05720000
**************************************************************          05730000
         SPACE 1                                                        05740000
         ORG   ENCPARMS            RTNBLK input parms                   05750000
RTN_PTR  DS    AD                  Addr of data BLK                     05760000
         SPACE 1                                                        05770000
*------------------------------------------------------------*          05780000
*        Return values when RC = 8                           * @Z25LENZ 05790000
*------------------------------------------------------------*          05800000
         SPACE 1                                                        05810000
RTNDATAB DS    AD                  Address of compressed               C05830000
                                    and/or encrypted data              C05840000
                                    block.                              05850000
         EJECT ,                                                        05860000
**************************************************************          05870000
*        PRIME BLOCK - checkin data block                    *          05880000
*        oper= primeblk                                      *          05890000
**************************************************************          05900000
         SPACE 1                                                        05910000
         ORG   ENCPARMS            PRIMEBLK input parms                 05920000
PRIM_PTR DS    AD                  Address of data block               C05930000
                                    containing compressed,             C05940000
                                    and/or encrypted data.              05950000
PRIPOINT DS    F                   If primeblk successful -            C05960000
                                    then set cursor to this            C05970000
                                    relative record number.            C05980000
                                    Hex zero denotes none.              05990000
PRICUYES DS    XL1                 01 -> PRIPOINT has been             C06000000
                                    specified                           06010000
PRIRESET DS    XL1                 01 -> RESET= has been               C06020000
                                    specified                           06030000
         EJECT ,                                                        06040000
**************************************************************          06050000
*        GET RECORD - Get next logical record                *          06060000
*        oper= getrec                                        *          06070000
**************************************************************          06080000
         SPACE 1                                                        06090000
         ORG   ENCPARMS            GETREC input parms                   06100000
GETREC   DS    AD                  PTR to area where record            C06110000
                                    will be deposited                   06120000
GETINFO  DS    AD                  PTR to area where record            C06130000
                                    info (LRC, etc) will               C06140000
                                    be deposited                        06150000
GETINREC DS    F                   Length of area in which to          C06180000
                                    deposit data record                 06190000
GETCAKEY DS    XL1                 Caller Key for access to    @Z25LENZC06192000
                                    record                     @Z25LENZ 06194000
GETWFITS DS    XL1                 If specified then return    @Z25LENZC06196000
                                    what fits in supplied      @Z25LENZC06196800
                                    buffer and increment       @Z25LENZC06197600
                                    cursor                     @Z25LENZ 06198400
GETCCTL  DS    XL1                 Carriage control option     @Z25LBAS 06198600
GETASIS  EQU   X'00'               Return CCTL as is. The      @Z25LENZC06198800
                                    default.                   @Z25LENZ 06199000
GETALWAY EQU   X'01'               Always return carriage      @Z25LBASC06199200
                                    control                    @Z25LBAS 06199300
GETNEVER EQU   X'02'               Never return carriage       @Z25LBASC06199400
                                    carriage control           @Z25LBAS 06199500
         DS    XL1                 Alignment                   @Z25LENZ 06199600
         SPACE 1                                                        06200000
*------------------------------------------------------------*          06210000
*        Return values when RC = 0                           * @Z25LENZ 06220000
*           -- All values below                              * @Z25LENZ 06221000
*        Return values when RC = 4 and reason code ENNTOSHO  * @Z25LENZ 06222000
*        -> output buffer is too small.                      * @Z25LENZ 06223000
*           -- GETRECL  (need record buffer this big)        * @Z25LENZ 06224000
*           -- GETRFLG -> GETRECTL                           * @Z25LENZ 06225000
*------------------------------------------------------------*          06230000
         SPACE 1                                                        06240000
GETRECL  DS    F                   Length of record data       @Z25LENZC06260000
                                    returned if RC = 0. If     @Z25LENZC06261000
                                    RC = 4 and RC = ENNTOSHO   @Z25LENZC06262000
                                    then this a size of buffer @Z25LENZC06263000
                                    needed to house returned   @Z25LENZC06264000
                                    data.                      @Z25LENZ 06265000
GETINFOL DS    F                   Len of REC_INFO returned             06270000
GETREC#  DS    FD                  Dataset record number assoc @Z25LENZC06273000
                                    with returned record       @Z25LENZ 06276000
GETRFLG  DS    B                   Flag                        @Z25LENZ 06277000
GETRFRST EQU   B'10000000'         Record returned was first   @Z25LENZC06278000
                                    rec within containing      @Z25LENZC06279000
                                    logical block              @Z25LENZ 06279500
GETRECTL EQU   B'01000000'         Record as stored in object  @Z25LENZC06279600
                                    had/has carriage control   @Z25LENZ 06279700
         EJECT ,                                                        06280000
**************************************************************          06290000
*        REPLACE RECORD - Replace logical record             *          06300000
*        oper= replrec parms                                 *          06310000
**************************************************************          06320000
         SPACE 1                                                        06330000
         ORG   ENCPARMS            REPLREC input parms                  06340000
REPREC   DS    AD                  PTR to area containing              C06350000
                                    record contents.           @Z25LENZ 06360000
REPCARRC DS    AD                  PTR to carriage control             C06400000
                                    character                           06410000
RERECLEN DS    F                   Data record length                   06420000
REPRECNM DS    F                   Relative record number to           C06450000
                                    record to replace.                 C06460000
                                    Relative to start object.           06470000
REPCRYES DS    XL1                 01 -> Carriage control              C06480000
                                    has been specified                  06490000
REPCAKEY DS    XL1                 Caller key used to access   @Z25LENZC06492000
                                    record                     @Z25LENZ 06495000
         EJECT ,                                                        06500000
**************************************************************          06510000
*        QUERY object                                        *          06520000
*        oper= query                                         *          06530000
**************************************************************          06540000
         SPACE 1                                                        06550000
         ORG   ENCPARMS            QUERY input parms                    06560000
         SPACE 1                                                        06570000
*------------------------------------------------------------*          06580000
*        Return values when RC = 0                           * @Z25LENZ 06590000
*------------------------------------------------------------*          06600000
         SPACE 1                                                        06610000
ENGQTYPE DS    F                   Type of object                      C06630000
                                    0 -> Put                           C06640000
                                    1 -> Get                            06650000
         SPACE 1                                                        06660000
ENGQCURP DS    F                   Cursor positioned                   C06670000
                                    0 -> No                            C06680000
                                    1 -> Yes                            06690000
         SPACE 1                                                        06700000
ENGQSPAN DS    F                   Cursor positioned to spanner        C06710000
                                    0 -> No                            C06720000
                                    1 -> Yes                           C06730000
                                   Only valid for get object            06740000
         SPACE 1                                                        06750000
ENGQCARR DS    F                   Cursor positioned to record         C06760000
                                   with carriage control               C06770000
                                   prepended to record data            C06780000
                                    0 -> No                            C06790000
                                    1 -> Yes                           C06800000
                                   Only valid for get object            06810000
         SPACE 1                                                        06820000
ENGQACT# DS    F                   Block (1 or 2) cursor is            C06830000
                                    active in. Always 1 for            C06840000
                                    put type object.                    06850000
         SPACE 1                                                        06860000
ENGQBLK# DS    F                   Number of active logical            C06870000
                                    blks in object. Get object         C06880000
                                    - 1 or 2. Put object - 1.          C06890000
                                    Note: Value of 0 denotes           C06900000
                                    no records - object empty.          06910000
         SPACE 1                                                        06920000
ENGQ1ST# DS    D                   First record # in logical   @Z25LENZC06930000
                                    block or in case of get            C06940000
                                    object may be blocks.              C06950000
                                    # is relative to start of          C06960000
                                    data set with first being          C06970000
                                    1.                         @Z25LENZ 06980000
         SPACE 1                                                        06990000
ENGQNUMR DS    F                   Put object - number of              C07000000
                                    records which have been            C07010000
                                    put via putrec.                    C07020000
                                   Get object - number                 C07030000
                                    records left to get                C07040000
                                    via getrec                         C07050000
                                   If cursor not positioned            C07060000
                                    then number returned is 0.          07070000
         SPACE 1                                                        07080000
ENCQCUR# DS    F                   Cursor position -> rec#.            C07090000
                                   Relative record number              C07100000
                                    of next record to put              C07110000
                                    or next to get. Relative           C07120000
                                    starting from 1st record           C07130000
                                    in object - always                 C07140000
                                    starting at 1. Zero                C07150000
                                    is returned if cursor              C07160000
                                    not positioned.                     07170000
         SPACE 1                                                        07180000
ENCQTOTR DS    F                   Get object - Total number           C07190000
                                    of records in object               C07200000
                                    illregardless of cursor            C07210000
                                    position. OPER=point is            C07220000
                                    valid to any one of these          C07230000
                                    records.                            07240000
ENQRECIN DS    XL(16)              Rec info of record that     @Z25LENZC07240400
                                    cursor is positioned to.   @Z25LENZC07240800
                                    Valid for get object and   @Z25LENZC07241200
                                    when cursor is positioned  @Z25LENZC07241600
                                    (ENGQCURP=1).              @Z25LENZ 07242000
ENQRECLN DS    XL1                 Length of record info       @Z25LENZC07242400
                                    returned in ENQRECIN above @Z25LENZ 07242800
ENQQFLG1 DS    B                   GET flag - Only valid if    @Z25LENZC07243200
                                    get object (ENGQTYPE=1)    @Z25LENZC07243600
                                    and cursor positioned      @Z25LENZC07244000
                                    (ENGQCURP=1).              @Z25LENZ 07244400
ENFL1SPN EQU   B'10000000'         Cursor positioned at        @Z25LENZC07244800
                                    SPANNER.  2nd span is not  @Z25LENZC07245200
                                    contained within object.   @Z25LENZC07245600
                                    In this scenario an oper=  @Z25LENZC07246000
                                    getreco() would RTN=8.     @Z25LENZ 07246400
ENFL1CTL EQU   B'01000000'         Cursor positioned (may or   @Z25LENZC07246800
                                    may not be spanner) and    @Z25LENZC07247200
                                    has CCTL. Variable         @Z25LENZC07247600
                                    ENCQCCTL contains CCTL.    @Z25LENZ 07248000
ENCQCCTL DS    CL1                 Carriage control char if    @Z25LENZC07248400
                                    ENQQFLG1 -> ENFL1CTL       @Z25LENZ 07248800
         EJECT ,                                                        07250000
**************************************************************          07260000
*        POINT     - Set object cursor to this record        *          07270000
*        oper= point                                         *          07280000
**************************************************************          07290000
         SPACE 1                                                        07300000
         ORG   ENCPARMS            POINT input parms                    07310000
POINTPOS DS    F                   Record to postion cursor            C07320000
                                    to                                  07330000
POINTSPC DS    XL1                 01 -> POINTPOS has been     @Z25LENZC07332000
                                    specified                  @Z25LENZ 07335000
POINTLST DS    XL1                 01 -> option LASTB has      @Z25LENZC07336000
                                    been specified             @Z25LENZ 07337000
         EJECT ,                                                        07340000
**************************************************************          07350000
*        ENDREQ    - flush put (logical block) and keep      *          07360000
*                    contents                                *          07370000
*        oper= endreq                                        *          07380000
**************************************************************          07390000
         SPACE 1                                                        07400000
         ORG   ENCPARMS            ENDREQ input parms                   07410000
         SPACE 1                                                        07420000
*------------------------------------------------------------*          07430000
*        Return values when ENDREQ (return code) = 0         *          07440000
*------------------------------------------------------------*          07450000
         SPACE 1                                                        07460000
ENREQR0  DS    AD                  Pointer to data block. May          C07480000
                                    be zero if logical block           C07490000
                                    contained no records                07500000
         EJECT ,                                                        07510000
**************************************************************          07520000
*        FLUSH     - flush put (logical block)               *          07530000
*                                                            *          07540000
*        oper= flush                                         *          07550000
**************************************************************          07560000
         SPACE 1                                                        07570000
         ORG   ENCPARMS            Flush input parms                    07580000
         SPACE 1                                                        07590000
*------------------------------------------------------------*          07600000
*        Return values when FLUSH (return code) = 0          *          07610000
*------------------------------------------------------------*          07620000
         SPACE 1                                                        07630000
ENFLUR0  DS    AD                  Pointer to data block. May          C07650000
                                    be zero if logical block           C07660000
                                    contained no records                07670000
         ORG ,                                                 @Z25LENZ 07680000
         SPACE 1                                                        08920000
*------------------------------------------------------------*          08930000
*        Save Area for Subroutines called by IAZENSER        *          08940000
*------------------------------------------------------------*          08950000
         SPACE 1                                                        08960000
         DS    0D                  Alignment                   @Z25LENZ 08965000
ENSSAVE  DS    18FD                F4SA format (144 bytes)              08970000
         EJECT ,                                               @Z25LENZ 08970200
*------------------------------------------------------------* @Z25LENZ 08970400
*        Object diagnostic work area                         * @Z25LENZ 08970600
*          - Diagnostic header                               * @Z25LENZ 08970800
*          - Flight recorder                                 * @Z25LENZ 08971000
*------------------------------------------------------------* @Z25LENZ 08971200
         SPACE 1                                               @Z25LENZ 08971400
         DS    0LQ                 Quadword alignment          @Z25LENZ 08971600
ENCDIAGL EQU   (L'ENDIAGHD+L'ENDFLIGT) Diag area length        @Z25LENZ 08971800
ENCDIAG  DS    CL(ENCDIAGL)        Diag area                   @Z25LENZ 08972000
         ORG   ENCDIAG                                         @Z25LENZ 08972200
ENDIAGHD DS    CL256               Diag header                 @Z25LENZ 08972400
         ORG   ENDIAGHD            Diag header definition      @Z25LENZ 08972600
ENFLGEN  DS    AD                  Addr next flight recorder   @Z25LENZC08972800
                                    entry to use               @Z25LENZ 08973000
ENFLGNUM DS    F                   Relative number of next     @Z25LENZC08973200
                                    flight recorder entry to   @Z25LENZC08973400
                                    use (1-10)                 @Z25LENZ 08973600
ENHDRES  DS    XL244               Diag header reserved        @Z25LENZ 08973800
ENDFLIGT DS    XL(ENFLISIZ*ENFLINUM) Flight recorder entries   @Z25LENZ 08974000
ENFLISIZ EQU   64                  Size of a flight recorder   @Z25LENZC08974200
                                    entry                      @Z25LENZ 08974400
ENFLINUM EQU   256                 Number of flight recorder   @Z25LENZC08974600
                                    entires                    @Z25LENZ 08974800
ENCNBSIZ EQU   *-ENCOBJ            ENCOBJ size without blocks  @Z25LENZ 08975000
         EJECT ,                                                        08980000
**************************************************************          08990000
*        Block repository ...                                *          09000000
**************************************************************          09010000
         DS    0LQ                 Quadword alignment          @Z25LENZ 09015000
EN0GUARD DS    XL(64)              Guard for block1 underrun            09020000
ENBLOCK1 DS    XL(32768)           Block 1                              09030000
EN1GUARD DS    XL(64)              Guard for block1 overrun             09040000
ENBLOCK2 DS    XL(32768)           Block 2                              09050000
EN2GUARD DS    XL(64)              Guard for block2 overrun             09060000
ENBLOCK3 DS    XL(32768)           Block 3                              09070000
EN3GUARD DS    XL(64)              Guard for block3 overrun             09080000
ENBLOCK4 DS    XL(32768)           Block 4                              09090000
EN4GUARD DS    XL(64)              Guard for block4 overrun             09090200
         EJECT ,                                                        09090400
************************************************************** @Z25LENZ 09090600
*        Reason codes returned on operation success and      * @Z25LENZ 09090800
*        and failure. Reason codes are returned in R0.       * @Z25LENZ 09091000
************************************************************** @Z25LENZ 09091200
         SPACE 1                                               @Z25LENZ 09091400
ENSUCC   EQU   0                  Processing successful        @Z25LENZC09091600
                                  (All operations)             @Z25LENZ 09091800
ENTYPE   EQU   4                  Bad object type specified    @Z25LENZC09092000
                                   OPER=SETUP                  @Z25LENZ 09092200
ENDATATY EQU   8                  Bad data type (comp!         @Z25LENZC09092400
                                   encry!both) OPER=SETUP      @Z25LENZ 09092600
ENENMETH EQU   12                 Encryption method zero       @Z25LENZC09092800
                                   OPER=SETUP                  @Z25LENZ 09093000
ENCOMETH EQU   16                 Compression method zero      @Z25LENZC09093200
                                   OPER=SETUP                  @Z25LENZ 09093400
ENOKEYLN EQU   20                 DSKEYLABL length must be     @Z25LENZC09093600
                                   greater than 0              @Z25LENZC09093800
                                   OPER=SETUP                  @Z25LENZ 09094000
ENDKEYZE EQU   24                 Key label all x'00'.         @Z25LENZC09094200
                                   Only oper=setup.            @Z25LENZ 09094400
ENDKEYBL EQU   28                 Key label all blanks         @Z25LENZC09094600
                                   Only oper=setup.            @Z25LENZ 09094800
ENCKYWRP EQU   32                 Key wrap routine address     @Z25LENZC09095000
                                   required for oper=setup     @Z25LENZ 09095200
ENNOREGI EQU   36                 Supplied key label is not    @Z25LENZC09095400
                                   registered with ICSF.       @Z25LENZC09095600
                                   Only oper=setup.            @Z25LENZ 09095800
ENKEYZER EQU   40                 Verification token was       @Z25LENZC09096000
                                   all hex zeroes. OPER=       @Z25LENZC09096200
                                   SETUP.                      @Z25LENZ 09096400
ENKEYBLK EQU   44                 Verification token was       @Z25LENZC09096600
                                   all blanks. OPER=SETUP.     @Z25LENZ 09096800
ENVERERR EQU   48                 Could not encrypt and        @Z25LENZC09097000
                                   decrypt verification token  @Z25LENZC09097200
                                   with wrapped key. OPER=     @Z25LENZC09097400
                                   SETUP.                      @Z25LENZ 09097600
ENVERCAN EQU   52                 ENCRYPTED verification       @Z25LENZC09097800
                                   token on PUT did not match  @Z25LENZC09098000
                                   encrypted value on GET      @Z25LENZC09098200
                                   OPER=SETUP.                 @Z25LENZ 09098400
ENMISENV EQU   56                 Missing encrypted verify key @Z25LENZC09098600
                                   on get object.              @Z25LENZC09098800
                                   OPER=SETUP.                 @Z25LENZ 09099000
ENPUTRE  EQU   60                 Oper requires put object     @Z25LENZC09099200
                                   OPER=PUTREC!ENNREQ!FLUSH    @Z25LENZ 09099400
ENNOREC  EQU   64                 Record ptr is zero           @Z25LENZC09099600
                                   OPER=PUTREC!GETREC!REPLREC  @Z25LENZ 09099800
ENRECDLN EQU   68                 Record len cannot be < 0     @Z25LENZC09100000
                                   OPER=REPLREC                @Z25LENZ 09100200
ENRECBIG EQU   72                 Record length greater than   @Z25LENZC09100400
                                   32,768 not allowed.         @Z25LENZC09100600
                                   OPER=PUTREC                 @Z25LENZ 09100800
ENPREZER EQU   76                 Supplied record number       @Z25LENZC09101000
                                   must be greater than 0      @Z25LENZC09101200
                                   OPER=PUTREC!REPLREC         @Z25LENZ 09101400
ENNORECP EQU   80                 Record info PTR must be      @Z25LENZC09101600
                                   supplied                    @Z25LENZC09101800
                                   OPER=PUTREC!GETREC          @Z25LENZ 09102000
ENINREN0 EQU   84                 Record info length must be   @Z25LENZC09102200
                                   greater than 0              @Z25LENZC09102400
                                   OPER=PUTREC                 @Z25LENZ 09102600
ENINRECL EQU   88                 Record info length cannot be @Z25LENZC09102800
                                   greater than documented     @Z25LENZC09103000
                                   maximum (16).               @Z25LENZC09103200
                                   OPER=PUTREC                 @Z25LENZ 09103400
ENNPUTCH EQU   92                 Operation  not allowed when  @Z25LENZC09103600
                                   a data block is checked out @Z25LENZC09103800
                                   out.                        @Z25LENZC09104000
                                   OPER=PUTREC!REPLREC!POINT   @Z25LENZC09104200
                                   !PRIMEBLK with point (Put   @Z25LENZC09104400
                                   object)                     @Z25LENZ 09104600
ENPNTZER EQU   96                 Point must be > 0 and        @Z25LENZC09104800
                                   <= to total number of       @Z25LENZC09105000
                                   records in block or object. @Z25LENZC09105200
                                   OPER=PRIMEBLK!REPLREC!POINT @Z25LENZ 09105400
ENCARCNT EQU   100                Supplied carriage cntrl      @Z25LENZC09105600
                                   was '0'x.                   @Z25LENZC09105800
                                   OPER=PUTREC!REPLREC         @Z25LENZ 09106000
ENGETRE  EQU   104                Operation requires a get     @Z25LENZC09106200
                                   object.                     @Z25LENZC09106400
                                   OPER=GETBLK!GETREC          @Z25LENZ 09106600
ENBLKOUT EQU   108                Data block already checked   @Z25LENZC09106800
                                   out                         @Z25LENZC09107000
                                   OPER=GETBLK                 @Z25LENZ 09107200
ENNOOUT  EQU   112                Operation required checked   @Z25LENZC09107400
                                   out data block              @Z25LENZC09107600
                                   OPER=RTNBLK!PRIMEBLK        @Z25LENZ 09107800
ENDBZERO EQU   116                Supplied data blk pointer    @Z25LENZC09108000
                                   must not be zero            @Z25LENZC09108200
                                   OPER=RTNBLK!PRIMEBLK        @Z25LENZ 09108400
ENNOMATC EQU   120                Supplied block PTR does      @Z25LENZC09109200
                                   not match one checked out   @Z25LENZC09109400
                                   OPER=RTNBLK!PRIMEBLK        @Z25LENZ 09109600
ENPRIBLK EQU   124                Caller supplied data blk     @Z25LENZC09109800
                                   cannot be found.            @Z25LENZC09110000
                                   OPER=PRIMEBLK!RTNBLK        @Z25LENZ 09110200
ENPUTPNT EQU   128                Point must be specified      @Z25LENZC09110400
                                   with put object.            @Z25LENZC09110600
                                   OPER=PRIMEBLK               @Z25LENZ 09110800
ENPRIPNT EQU   132                Specified point is out       @Z25LENZC09111000
                                   of range.                   @Z25LENZC09111200
                                   OPER=PRIMEBLK!POINT         @Z25LENZ 09111400
ENDBEYEC EQU   136                Data block eye catcher       @Z25LENZC09111600
                                   is not correct              @Z25LENZC09111800
                                   OPER=PRIMEBLK               @Z25LENZ 09112000
ENRECEOD EQU   140                EOD - End of data - no records       C09112200
                                   available.                  @Z25LENZC09112400
                                   OPER=GETREC                 @Z25LENZ 09112600
ENNOCURS EQU   144                Cursor is not positioned     @Z25LENZC09112800
                                   OPER=PUTREC.                @Z25LENZ 09113000
ENNTOSHO EQU   148                Supplied deposit area too    @Z25LENZC09113200
                                   small to contain actual     @Z25LENZC09113400
                                   data record.                @Z25LENZC09113600
                                   OPER=GETREC.                @Z25LENZ 09113800
ENACTLOG EQU   152                Operation requires existing  @Z25LENZC09114000
                                   records in object for get   @Z25LENZC09114200
                                   object. Or point to empty   @Z25LENZC09114400
                                   put object and point was    @Z25LENZC09114600
                                   not one.                    @Z25LENZC09114800
                                   OPER=REPLREC!POINT          @Z25LENZ 09115000
ENLESSTH EQU   156                Record number supplied less  @Z25LENZC09115200
                                   than 1st record in object.  @Z25LENZC09115400
                                   OPER=REPLREC.               @Z25LENZ 09115600
RESERVE1 EQU   160                Reserved                     @Z25LENZ 09115800
ENINVLEN EQU   164                Supplied replace record      @Z25LENZC09116000
                                   length does not match       @Z25LENZC09116200
                                   actual record length        @Z25LENZC09116400
                                   OPER=REPLREC.               @Z25LENZ 09116600
ENCARR#1 EQU   168                Carriage control specified   @Z25LENZC09116800
                                   on oper= and record does    @Z25LENZC09117000
                                   not have carriage control   @Z25LBASC09117200
                                   OPER=REPLREC.               @Z25LBAS 09117400
ENCARR#2 EQU   172                Carriage control was not     @Z25LENZC09117600
                                   specified on oper= and      @Z25LENZC09117800
                                   record has carriage control @Z25LENZC09118000
                                   OPER=REPLREC.               @Z25LENZ 09118200
ENCNOOBJ EQU   176                No object was passed         @Z25LENZ 09118400
ENCBADOP EQU   180                Not a supported oper=        @Z25LENZ 09118600
ENOBJEYE EQU   184                Encryption object eye-       @Z25LENZC09118800
                                   catcher is not correct      @Z25LENZ 09119000
ENPRMPUT EQU   188                Last record in logical block @Z25LENZC09119200
                                   is a spanner - cannot       @Z25LENZC09119400
                                   point beyond this           @Z25LENZ 09120400
ENPOIGET EQU   192                Point must be specified with @Z25LENZC09121400
                                   get object                  @Z25LENZC09122400
                                   oper=point()                @Z25LENZ 09123400
ENBADDBG EQU   196                Supplied debug value must    @Z25LENZC09124400
                                   be '00'x or '01'x.          @Z25LENZ 09125400
**************************************************************          09126400
*        Other useful equates used by the service            *          09130000
**************************************************************          09140000
         SPACE 1                                                        09150000
ENOPSPEC EQU   1                  Optional parm specified               09160000
ENOPNOSP EQU   0                  Optional parm not spec                09170000
ENBLKSIZ EQU   X'8000'            Block size plus header       @Z25LENZ 09180000
ENBLKDAT EQU   X'8000'-1          Max data stored in a block   @Z25LENZ 09181000
ENNOHDR  EQU   ENBLKSIZ-ENBLKLEN-1 Block size minus header -1  @Z25LENZ 09182000
ENRCDEYE EQU   C'R'               Record eye catcher - 'R'     @Z25LENZ 09184000
ENBLKEYE EQU   C'B'               Block eye catcher - 'B'      @Z25LENZ 09186000
EN33KWRD EQU   8448               Number of words in 33K       @Z25LENZ 09188000
ENCHEX0  EQU   X'00'              Hex 0                        @Z25LENZ 09189000
         SPACE 1                                                        09190000
*------------------------------------------------------------*          09200000
*        02A ABEND reason codes. These are also documented   *          09210000
*        in $HASPEQU. Codes here should sync with $HASPEQU.  *          09220000
*------------------------------------------------------------*          09230000
         SPACE 1                                                        09240000
ENABRE6C EQU   X'6C'               Data BLK #2 protocal error           09250000
ENABRE70 EQU   X'70'               Data BLK #1 protocal error           09260000
ENABRE74 EQU   X'74'               Cursor logical blk#1 error           09270000
ENABRE78 EQU   X'78'               Record eye catcher error             09280000
ENABRE7C EQU   X'7C'               Data BLK #2 span error               09290000
ENABRE80 EQU   X'80'               Data BLK and record hdr             C09300000
                                    mismatch error                      09310000
ENABRE84 EQU   X'84'               Record # negative error              09320000
ENABRE88 EQU   X'88'               Logical block #2 not                C09330000
                                    active error                        09340000
ENABRE8C EQU   X'8C'               Logical BLK #2 is active            C09350000
                                    error                               09360000
ENABRE90 EQU   X'90'               Guard 0 corruption                   09370000
ENABRE94 EQU   X'94'               Guard 1 corruption                   09380000
ENABRE98 EQU   X'98'               Guard 2 corruption                   09390000
ENABRE9C EQU   X'9C'               Guard 3 corruption                   09400000
ENABREA0 EQU   X'A0'               Guard 4 corruption                   09410000
ENABREA4 EQU   X'A4'               Logical BLK2 active                 C09420000
                                    and BLK1 not                        09430000
ENABREA8 EQU   X'A8'               Oper=setup and BCFXCRYP             C09440000
                                    failed initing CRYPI                09450000
ENABREAC EQU   X'AC'               Encryption unexpectedly     @Z25LENZC09450200
                                    failed                     @Z25LENZ 09450400
ENABREB0 EQU   X'B0'               Decryption unexpectedly     @Z25LENZC09450600
                                    failed                     @Z25LENZ 09450800
ENABREB4 EQU   X'B4'               Encryption of key token     @Z25LENZC09451000
                                    value failed               @Z25LENZ 09451200
ENABREB8 EQU   X'B8'               Decryption of key token     @Z25LENZC09451400
                                    value failed               @Z25LENZ 09451600
ENABREBC EQU   X'BC'               getrec() - cursor record    @Z25LENZC09451800
                                    number greater than        @Z25LENZC09452000
                                    number of records in       @Z25LENZC09452200
                                    object                     @Z25LENZ 09452400
ENABREC0 EQU   X'C0'               getrec() - cursor           @Z25LENZC09452600
                                    record number greater      @Z25LENZC09452800
                                    than number of records     @Z25LENZC09453000
                                    in block #1 - yet object   @Z25LENZC09453200
                                    states cursor is in        @Z25LENZC09453400
                                    block #1                   @Z25LENZ 09453600
ENABREC4 EQU   X'C4'               getrec() - logical blk #2   @Z25LENZC09453800
                                    not active or is active    @Z25LENZC09454000
                                    and has no records.        @Z25LENZ 09454200
ENABREC8 EQU   X'C8'               De-compress - bad return    @Z25LENZC09454400
                                    code from decompress       @Z25LENZC09454600
                                    service.                   @Z25LENZ 09454800
ENABRECC EQU   X'CC'               replrec() - spanner and not @Z25LENZC09455000
                                    a get type object.         @Z25LENZ 09455200
ENABLENT EQU   X'D0'               ENENCRPT - bad length       @Z25LENZC09455400
                                    passed to this routine     @Z25LENZ 09455600
ENABBADL EQU   X'D4'               ENDECRPT routine - deflate  @Z25LENZC09455800
                                    - inflate mismatch         @Z25LENZ 09456000
ENGETUNE EQU   X'D8'               Unexpected return code      @Z25LENZC09456200
                                    from oper=getreco          @Z25LENZ 09456400
ENGBLUNE EQU   X'DC'               Unexpected return code      @Z25LENZC09456600
                                    from oper=getblk           @Z25LENZ 09456800
ENPBLUNE EQU   X'E0'               Unexpected return code      @Z25LENZC09457000
                                    from oper=primeblk         @Z25LENZ 09457200
*B02ARDC EQU   X'E4'               Unexpected return code      @Z25LENZC09457400
                                    from oper=putrec           @Z25LENZ 09457600
*B02ARE0 EQU   X'E8'               Unexpected return code      @Z25LENZC09457800
                                    from oper=rtnblk           @Z25LENZ 09458000
*B02ARE4 EQU   X'EC'               Unexpected return code      @Z25LENZC09458200
                                    from oper=flush            @Z25LENZ 09458400
*B02ARE8 EQU   X'F0'               Unexpected return code      @Z25LENZC09458600
                                    from oper=endreq           @Z25LENZ 09458800
ENPNACTE EQU   X'F4'               Logical block #1 active -   @Z25LENZC09459000
                                    but it has no records.     @Z25LENZC09459200
                                    From oper=point.           @Z25LENZ 09459400
ENBADSUM EQU   X'F8'               Bad data block checksum     @Z25LENZC09459600
                                    encountered by             @Z25LENZC09459800
                                    oper=primeblk              @Z25LENZ 09460000
ENPRBCNT EQU   X'FC'               Logical block has           @Z25LENZC09460200
                                    bad ENDNUMR. Field         @Z25LENZC09460400
                                    ENDD1ST (Dataset rec #     @Z25LENZC09460600
                                    assoc with 1st rec         @Z25LENZC09460800
                                    starting in block) was     @Z25LENZC09461000
                                    zero. Due to this ENDNUMR  @Z25LENZC09461200
                                    should have been 0 and it  @Z25LENZC09461400
                                    was not. oper=primeblk.    @Z25LENZ 09461600
ENPRBCN2 EQU   X'100'              Logical block has           @Z25LENZC09461800
                                    bad ENDNUMR. Field         @Z25LENZC09462000
                                    ENDD1ST (Dataset rec #     @Z25LENZC09462200
                                    assoc with 1st rec         @Z25LENZC09462400
                                    starting in block) was non @Z25LENZC09462600
                                    zero. Due to this ENDNUMR  @Z25LENZC09462800
                                    should have been non zero  @Z25LENZC09463000
                                    and it was not. oper=      @Z25LENZC09463200
                                    primeblk.                  @Z25LENZ 09463400
ENPBADSP EQU   X'104'              Logical block denotes       @Z25LENZC09463600
                                    spanner and data block     @Z25LENZC09463800
                                    does not. oper=primeblk.   @Z25LENZ 09464000
ENPMISNM EQU   X'108'              Logical block spanner       @Z25LENZC09464200
                                    and data block starts with @Z25LENZC09464400
                                    2nd span - but record      @Z25LENZC09464600
                                    number associated with 2nd @Z25LENZC09464800
                                    span do not match.         @Z25LENZC09465000
                                    oper=primeblk.             @Z25LENZ 09465200
ENPBADS2 EQU   X'10C'              Logical block denotes it    @Z25LENZC09465400
                                    does not end in spanner    @Z25LENZC09465600
                                    and data block starts      @Z25LENZC09465800
                                    with 2nd span.             @Z25LENZC09466000
                                    oper=primeblk.             @Z25LENZ 09466200
ENPBADNU EQU   X'110'              Given logical BLK the       @Z25LENZC09466400
                                    next record number for     @Z25LENZC09466600
                                    supplied data block did    @Z25LENZC09466800
                                    not match. Record          @Z25LENZC09467000
                                    continuity is broke.       @Z25LENZC09467200
                                    oper=primeblk.             @Z25LENZ 09473600
ENPDACNT EQU   X'114'              Supplied data block had     @Z25LENZC09473700
                                    bad ENDNUMR. Field         @Z25LENZC09473800
                                    ENDD1ST (Dataset rec #     @Z25LENZC09473900
                                    assoc with 1st rec         @Z25LENZC09474000
                                    starting in block) was     @Z25LENZC09474100
                                    zero. Due to this ENDNUMR  @Z25LENZC09474200
                                    should have been 0 and it  @Z25LENZC09474300
                                    was not. oper=primeblk.    @Z25LENZ 09474400
ENPDACN2 EQU   X'118'              Supplied data block had     @Z25LENZC09474500
                                    bad ENDNUMR. Field         @Z25LENZC09474600
                                    ENDD1ST (Dataset rec #     @Z25LENZC09474700
                                    assoc with 1st rec         @Z25LENZC09474800
                                    starting in block) was non @Z25LENZC09474900
                                    zero. Due to this ENDNUMR  @Z25LENZC09475000
                                    should have been non zero  @Z25LENZC09475100
                                    and it was not. oper=      @Z25LENZC09475200
                                    primeblk.                  @Z25LENZ 09475300
**************************************************************          09480000
*        End of SPOOL Encryption Object                      *          09490000
**************************************************************          09500000
         SPACE 1                                                        09510000
ENCCASIZ EQU   *-ENCCALL           Call structure size                  09520000
ENCOBSIZ EQU   *-ENCOBJ            Size of object                       09530000
         EJECT ,                                               @Z25LENZ 09730000
************************************************************** @Z25LENZ 09930000
*        DSECTS used by service                              * @Z25LENZ 10130000
*                                                            * @Z25LENZ 10330000
*          -- Encryption DSECTs (CRYPI and CRYPV) and more   * @Z25LENZ 10530000
*                                                            * @Z25LENZ 10730000
*          -- ENBLKHDR                                       * @Z25LENZ 10830000
*             Data and logical block header                  * @Z25LENZ 10930000
*                                                            * @Z25LENZ 11030000
*          -- ENRECHDR                                       * @Z25LENZ 11130000
*             Record header                                  * @Z25LENZ 11230000
*                                                            * @Z25LENZ 11330000
************************************************************** @Z25LENZ 11350000
         EJECT ,                                               @Z25LENZ 11370000
************************************************************** @Z25LENZ 11390000
*        Encryption DSECTs and structures used by service    * @Z25LENZ 11410000
************************************************************** @Z25LENZ 11431500
         SPACE 1                                               @Z25LENZ 11433500
         BCFZCRYP DSECT=YES,LIST=YES                           @Z25LENZ 11435500
         EJECT ,                                                        11440000
**************************************************************          11450000
*                                                            *          11460000
*        Block header                                        *          11470000
*                                                            *          11480000
*        Prepended on front of logical and also data block   *          11490000
*        returned to caller. The header is never compressed  *          11500000
*        and/or encrypted - travels in the clear.            *          11510000
*                                                            *          11520000
*        Pictorial view of header is as follows:             *          11530000
*                                                            *          11540000
*                                                            * @Z25LENZ 11550000
* !Eye!V!F!R!Len !Len !Chk!Rec#!Num !Len!Rec#!Line!Page! R ! * @Z25LENZ 11580000
* !Cat!e!L!s!as  !of  !sum!of  !of  !as !of  !cnt !cnt ! s ! * @Z25LENZ 11590000
* !che!r!A!v!data!2nd !   !1st !recs!lgl!2nd !    !    ! v ! * @Z25LENZ 11600000
* !er ! !G! !blk !span!   !rec !    !blk!span!    !    !   ! * @Z25LENZ 11610000
* !--------------------------------------------------------! *          11620000
*                                                            *          11630000
**************************************************************          11640000
         SPACE 1                                                        11650000
ENBLKHDR DSECT                     Data/Logical block header            11660000
ENDDEYE  DC    CL1'B'              Eye catcher -Logical/data           C11670000
                                    block                               11680000
ENDVER   DC    AL1(1)              Version                     @Z25LENZ 11685000
ENDFLAG1 DS    B                   Flag1                                11690000
ENDCOMPE EQU   B'10000000'         Data block is compressed             11700000
ENDENCRY EQU   B'01000000'         Data block is encrypted              11710000
ENDLASTP EQU   B'00100000'         Last record is partial              C11720000
                                    (spanner)                           11730000
ENDFIRSP EQU   B'00010000'         First chunk of data                 C11740000
                                    following block header             C11750000
                                    is partial - 2nd span of           C11760000
                                    a spanner.                          11770000
ENDPAD   EQU   B'00001000'         Data has been blank padded  @Z25LENZ 11772000
ENDHDLEN DC    AL1(ENBLKLEN)       Length of header            @Z25LENZ 11772200
ENDLENG  DS    XL4                 Length of data block        @Z25LENZC11772400
                                    excluding prepended        @Z25LENZC11772600
                                    block header. This is      @Z25LENZC11772800
                                    after compression and/or   @Z25LENZC11773000
                                    encryption. This length    @Z25LENZC11773200
                                    + '30'x for header is the  @Z25LENZC11773400
                                    length that must be        @Z25LENZC11773600
                                    written and read from      @Z25LENZC11773800
                                    SPOOL. The block header    @Z25LENZC11774000
                                    is always in the clear.    @Z25LENZC11774200
                                    If ENDFLAG1 -> ENDPAD then @Z25LENZC11774400
                                    this value includes pad    @Z25LENZC11774600
                                    length.                    @Z25LENZ 11774800
ENDLENGT DS    XL4                 If ENDFLAG1-> ENDFIRSP -    @Z25LENZC11775000
                                    this is length of 2nd      @Z25LENZC11775200
                                    record span.               @Z25LENZ 11775400
ENDCKSUM DS    XL4                 Checksum of data block      @Z25LENZC11775600
                                    after encryption/          @Z25LENZC11775800
                                    compression. This includes @Z25LENZC11776000
                                    block header with zeroed   @Z25LENZC11776200
                                    checksum value. Only valid @Z25LENZC11776400
                                    in debug mode.             @Z25LENZ 11776600
ENDLEN1  EQU   *-ENBLKHDR          Non-atomic move len 1       @Z25LENZ 11778500
         SPACE 1                                               @Z25LENZ 11778600
ENATOMIC DS    0LQ                 Quadword alignment          @Z25LENZ 11778800
ENDHDRQ  DS    0CL16               Start of atomic section     @Z25LENZ 11779200
ENDD1ST  DS    XL8                 Data set record # assoc     @Z25LENZC11780000
                                    with 1st record starting   @Z25LENZC11790000
                                    in block. Not a 2nd span.  @Z25LENZ 11800000
ENDNUMR  DS    XL4                 Number records in block     @Z25LENZ 11810000
ENLGLEN  DS    XL4                 Length of logical block     @Z25LENZC11820000
                                    before any compression     @Z25LENZC11825000
                                    and/or encryption. Does    @Z25LENZC11830000
                                    not include length of      @Z25LENZC11832000
                                    prepended header.          @Z25LENZ 11835000
END2STR  EQU   *-ENBLKHDR          Offset of non-atomic2       @Z25LENZ 11836000
         SPACE 1                                               @Z25LENZ 11840000
END2NDNM DS    XL8                 If ENDFLAG1-> ENDFIRSP -    @Z25LENZC11850000
                                    this is the data set               C11860000
                                    record number associated           C11870000
                                    with 2nd span.             @Z25LENZ 11880000
         SPACE 1                                               @Z25LENZ 11881000
ENDPADA  DS    XL1                 If ENDFLAG1 -> ENDPAD then  @Z25LENZC11881200
                                    this value represents #    @Z25LENZC11881400
                                    bytes in PAD               @Z25LENZ 11881600
ENDLCNT  DS    XL7                 DS line count up to this point       11882000
ENDPCNT  DS    XL8                 DS page count up to this point       11883000
         SPACE 1                                               @Z25LENZ 11884000
         DS    XL8                 Reserved                    @Z25LENZ 11955000
ENDLEN2  EQU   *-END2NDNM          Non-atomic move length 2    @Z25LENZ 11956000
ENBLKLEN EQU   *-ENBLKHDR          Length of data block hdr             11960000
         EJECT ,                                                        11970000
**************************************************************          11980000
*                                                            *          11990000
*        A logical block contains records. Each record has   *          12000000
*        the following 8 bytes prepended to the front of     *          12010000
*        the record. Followng these fields are REC_INFO      *          12020000
*        and record data containing caller data.             *          12030000
*                                                            *          12040000
*  Internal view of a record within logical block. May       *          12050000
*  span logical blocks.                                      *          12060000
*                                                            *          12070000
*   F                                                        *          12080000
*   L  1st                                                   *          12090000
*   A  Span                                        Record    *          12100000
* ! G !Len ! REC_LEN  ! INFO_LEN !   REC_INFO    ! data    ! *          12110000
* !___!____!__________!__________!_______________!_________! *          12120000
*   1   2    4 byte      1 byte   caller defined   1-32768   *          12130000
*                                                            *          12140000
*   <--------Record header-------><----Record Data---------> *          12150000
*                                                            *          12160000
*       ENRECHDR dsect in IAZENOBJ                           *          12170000
*                                                            *          12180000
**************************************************************          12190000
         SPACE 1                                                        12200000
ENRECHDR DSECT                     Logical record header                12210000
ENRECEYE DS    CL1'R'              Eye catcher                          12220000
ENRECFLG DS    B                   Record flag                          12230000
ENRECSPN EQU   B'10000000'         Record is a spanner -               C12240000
                                    spans logical blocks                12250000
ENRECCAR EQU   B'01000000'         Record data has prepended           C12260000
                                    carriage control char               12270000
ENSPNSIZ DS    XL2                 If spanner - #bytes in              C12280000
                                    first record portion                12290000
ENRECLEN DS    XL2                 Length of record data                12300000
ENINFLEN DS    XL1                 Length of record info                12310000
ENRHDLEN EQU   *-ENRECHDR          Length of record header              12320000
         EJECT ,                                                        12330000
**************************************************************          12340000
*        Record description information - LRC etc            *          12350000
**************************************************************          12360000
         SPACE 1                                                        12370000
ENRECDES DSECT                     Record description DSECT             12380000
ENDECRIP DS    XL16                Record description info             C12390000
                                    - contents are defined by          C12400000
                                    caller. Supplied on putrec         C12410000
                                    along with length. Will be         C12420000
                                    prepended to supplied              C12430000
                                    record.                             12440000
ENCNMAXL EQU   *-ENDECRIP          Max length of record                C12450000
                                    information                         12460000
ENOVERHD EQU   ENBLKLEN+ENRHDLEN+ENCNMAXL+10 Record overhead   @Z25LENZC12470000
                                    for a single record within @Z25LENZC12480000
                                    a logical block excluding          C12490000
                                    the record data which              C12500000
                                    could be 32768. The value          C12510000
                                    is Data blk header + fixed         C12520000
                                    length of record HDR +             C12530000
                                    maximun record information @Z25LENZ 12540000
         MEND                                                           99999999
