*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLVECTR                              -01/13/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Local Vector Services                         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1993, 2017                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77B0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLVECTR service is invoked by users of the IXLCACHE or    * 00002100
*      IXLLSTE/IXLLSTM/IXLLSTC services to perform one of the         * 00002200
*      following functions:                                           * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      1.  MODIFYVECTORSIZE: to change the number of entries in the   * 00002600
*          user's local vector.  This modifies the number of          * 00002700
*          monitored objects (comprised of list headers and/or the    * 00002800
*          user's event queue),  or local cache data items, which can * 00002900
*          be concurrently monitored by the connector.  Note that     * 00003000
*          MODIFYVECTORSIZE cannot be used to delete the local vector * 00003100
*          by modifying its size to zero.                             * 00003200
*                                                                     * 00003300
*                                                                     * 00003400
*      2.  LTVECENTRIES: to load and test a range of vector entries   * 00003500
*          associated with a local vector for either a list or cache  * 00003600
*          structure.  The output from this function is a bit string  * 00003700
*          with one bit per vector entry, starting with the specified * 00003800
*          vector index and continuing until either 32 bits are       * 00003900
*          loaded,  or the end of the vector is reached.  The bits in * 00004000
*          the bit string are interpreted as follows:                 * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*          o   0 - the vector entry corresponding to this bit         * 00004400
*              position indicates that the monitored list or event    * 00004500
*              queue is NONEMPTY, or if the list is being monitored   * 00004600
*              for full/not-full transitions, then the vector entry   * 00004700
*              indicates that the list is NONFULL (list vector), or   * 00004800
*              that the local cache entry is INVALID (cache vector)   * 00004900
*                                                                     * 00005000
*          o   1 - the vector entry corresponding to this bit         * 00005100
*              position indicates that the monitored list or event    * 00005200
*              queue is EMPTY, or if the list is being monitored for  * 00005300
*              full/not-full transitions, then the vector entry       * 00005400
*              indicates that the list is FULL (list vector), or that * 00005500
*              the local cache entry is VALID (cache vector)          * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*      3.  TESTLISTSTATE: to test the empty/nonempty state of a list  * 00006100
*          header or event queue in a list structure.  When the       * 00006200
*          CFLEVEL of the coupling facility in which a list structure * 00006300
*          is allocated is CFLEVEL=22 or higher, TESTLISTSTATE allows * 00006400
*          you to test a particular list to determine whether that    * 00006500
*          list is full (list count limit for entries or elements has * 00006600
*          been reached) or not-full (list count limit for entries or * 00006700
*          elements has not been reached).                            * 00006800
*                                                                     * 00006900
*          The connector must have previously registered a monitoring * 00007000
*          interest in the list header or his event queue, and        * 00007100
*          associated the list header or event queue with an index    * 00007200
*          into the local vector.                                     * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*      4.  TESTLOCALCACHE: to test for cache coherency and validation * 00007600
*          of cache buffers.                                          * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*          o   TESTLOCALCACHE: To validate cache coherency only.      * 00008000
*              Validate=Yes and no VectorIndex specified.             * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*          o   TESTLOCALCACHE: to test the validity of a              * 00008400
*              locally-cached data item in which the user may have a  * 00008500
*              registered interest with validation of cache           * 00008600
*              coherency. Validate=Yes and VectorIndex specified.     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*          o   TESTLOCALCACHE: to test the validity of a              * 00009000
*              locally-cached data item in which the user may have a  * 00009100
*              registered interest. Validate=NO and VectorIndex       * 00009200
*              specified.                                             * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00009900
*                                                                     * 00010000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00010100
*                                                                     * 00010200
*01* ENVIRONMENT:                                                     * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*      Dispatchable unit mode: Task or SRB mode.                      * 00010600
*                                                                     * 00010700
*      Minimum authorization: Supervisor State is required for the    * 00010800
*                        MODIFYVECTORSIZE function.  The              * 00010900
*                        LTVECENTRIES, TESTLISTSTATE, TESTLOCALCACHE  * 00011000
*                        functions may be invoked by either           * 00011100
*                        Supervisor State or Problem State programs.  * 00011200
*                                                                     * 00011300
*      AMODE:            31-bit.                                      * 00011400
*                                                                     * 00011500
*      ASC mode:         Primary or Access Register.                  * 00011600
*                                                                     * 00011700
*                        Addressability notes:                        * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*                        1.  Access Register mode invokers must       * 00012100
*                            specify SYSSTATE ASCENV=AR prior to      * 00012200
*                            invoking this macro.                     * 00012300
*                                                                     * 00012400
*                        2.  All data areas passed to this interface  * 00012500
*                            must be in primary addressable storage.  * 00012600
*                            No secondary space storage or ALET       * 00012700
*                            qualified storage allowed.               * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*      Serialization:    Enabled or Disabled.  Enabled callers must   * 00013200
*                        hold no locks.  Disabled callers may hold no * 00013300
*                        locks other than the CPU lock.               * 00013400
*                                                                     * 00013500
*      Restrictions:     None                                         * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00014000
*                      GR2-GR13    Undefined                          * 00014100
*                      GR14-GR15   Reserved                           * 00014200
*                                                                     * 00014300
*Basing notes:                                                        * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*.   This is a register interface that uses registers 2-5 or 2-6      * 00014700
*   depending on type of the request. Therefore these registers may   * 00014800
*   not be used as base registers. DOING SO MAY CAUSE UNPREDICTABLE   * 00014900
*   RESULTS.                                                          * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*01* OUTPUT REGISTERS: GR0-GR1     Unpredictable                      * 00015400
*                      GR2-GR13    Unchanged                          * 00015500
*                      GR14        Unpredictable                      * 00015600
*                      GR15        return code                        * 00015700
*                                                                     * 00015800
*01* SYNTAX:                                                          * 00015900
*                                                                     * 00016000
*Ýxlabel¨  IXLVECTR     VECTORTOKEN=xvectortoken                      * 00016100
*                      ,WORKAREA=xworkarea                            * 00016200
*                    Ð ,REQUEST=MODIFYVECTORSIZE                      * 00016300
*                    !     ,VECTORLEN=xvectorlen                      * 00016400
*                    !     ,ACTUALVECLEN=xactualveclen                * 00016500
*                    !   ÐÝ,BRANCHTABLE=NO¨                           * 00016600
*                    !   ¿Ý,BRANCHTABLE=YES                           * 00016700
*                    !         ,MODIFYDONE=xmodifydone                * 00016800
*                    !         ,LESSTHAN=xlessthan                    * 00016900
*                    !         ,NOSTORAGE=xnostorage                  * 00017000
*                    !         ,INVALIDTOKN=xinvalidtokn              * 00017100
*                    !         ,INVALIDLEN=xinvalidlen¨               * 00017200
*                    Ô ,REQUEST=LTVECENTRIES                          * 00017300
*                    !     ,VECTORINDEX=xvectorindex                  * 00017400
*                    !     ,BITSTRING=xbitstring                      * 00017500
*                    !   ÐÝ,BRANCHTABLE=NO¨                           * 00017600
*                    !   ¿Ý,BRANCHTABLE=YES                           * 00017700
*                    !       Ð ,ALLEMPVAL=xallempval                  * 00017800
*                    !       ¿ ,ALLEMPVALFULL                         * 00017900
*                    !                        =xallempvalfull         * 00018000
*                    !       Ð ,SOMENEINV=xsomeneinv                  * 00018100
*                    !       ¿ ,SOMENEINVNF=xsomeneinvnf              * 00018200
*                    !         ,INDXINVALID=xindxinvalid              * 00018300
*                    !         ,INVALIDTOKN=xinvalidtokn¨             * 00018400
*                    Ô ,REQUEST=TESTLISTSTATE                         * 00018500
*                    !     ,VECTORINDEX=xvectorindex                  * 00018600
*                    !   ÐÝ,BRANCHTABLE=NO¨                           * 00018700
*                    !   ¿Ý,BRANCHTABLE=YES                           * 00018800
*                    !       Ð ,LSTEMPTY=xlstempty                    * 00018900
*                    !       ¿ ,LSTFULL=xlstfull                      * 00019000
*                    !       Ð ,LSTNONEMPTY=xlstnonempty              * 00019100
*                    !       ¿ ,LSTNONFULL=xlstnonfull                * 00019200
*                    !         ,INDXINVALID=xindxinvalid              * 00019300
*                    !         ,INVALIDTOKN=xinvalidtokn¨             * 00019400
*                    ¿ ,REQUEST=TESTLOCALCACHE                        * 00019500
*                        ÐÝ,VALIDATE=YES                              * 00019600
*                        !    Ý,VECTORINDEX                           * 00019700
*                        !                  =»xvectorindex!NO_VECTORI * 00019800
*                        !                  NDEXº¨¨                   * 00019900
*                        ¿Ý,VALIDATE=NO                               * 00020000
*                              ,VECTORINDEX=xvectorindex¨             * 00020100
*                     Ý,RETCODE=xretcode¨                             * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*      Where:                                                         * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*      Ýxlabel¨                                                       * 00020800
*          is an optional symbol, starting in column 1, that is the   * 00020900
*          name on the IXLVECTR macro invocation.  The name must      * 00021000
*          conform to the rules for an ordinary assembler language    * 00021100
*          symbol.                                                    * 00021200
*          DEFAULT: No name.                                          * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*      VECTORTOKEN=xvectortoken                                       * 00021800
*          is the name (RS-type), or address in register (2)-(12), of * 00021900
*          a required 12 character input field that specifies the     * 00022000
*          list notification or cache vector token that uniquely      * 00022100
*          identifies the local vector associated with the user's     * 00022200
*          connection to the structure.  The local vector was         * 00022300
*          initially created by the IXLCONN service, if requested,    * 00022400
*          and the vector token was returned in the Connect Answer    * 00022500
*          Area.  The vector token passed on this interface must      * 00022600
*          reside in primary addressable storage.                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*      WORKAREA=xworkarea                                             * 00023200
*          is the name (RS-type), or address in register (2)-(12), of * 00023300
*          a required 20 character input identifies an area to be     * 00023400
*          used as a register save area.  Registers 2-5 are saved for * 00023500
*          requests MODIFYVECTORSIZE, TESTLISTSTATE, TESTLOCALCACHE   * 00023600
*          VALIDATE=NO.  Registers 2-6 are saved for request both     * 00023700
*          kinds of the TESTLOCALCACHE VALIDATE=YES request           * 00023800
*          (VectorIndex and No_VectorIndex), and for the LTVECENTRIES * 00023900
*          function.  The area passed on this interface must reside   * 00024000
*          in primary addressable storage.                            * 00024100
*                                                                     * 00024200
*          NOTE: The Workarea may not be based on a register that can * 00024300
*          be destroyed by this interface. The workarea must be on a  * 00024400
*          Word boundary.                                             * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*      REQUEST=»MODIFYVECTORSIZE!LTVECENTRIES!TESTLISTSTATE!TESTLOCAL * 00025000
*          CACHEº                                                     * 00025100
*          is a required keyword input that specifies the function    * 00025200
*          which is to be performed.                                  * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*          REQUEST=MODIFYVECTORSIZE                                   * 00025700
*              request to modify the size of the user's local vector, * 00025800
*              and thus either the number of monitored objects        * 00025900
*              (comprised of list list headers and/or the user's      * 00026000
*              event queue) which may be concurrently monitored for   * 00026100
*              empty/nonempty state,  or the number of cache data     * 00026200
*              items whose registration information may be            * 00026300
*              concurrently maintained locally.  Note that            * 00026400
*              MODIFYVECTORSIZE cannot be used to delete the local    * 00026500
*              vector by modifying its size to zero.                  * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*              VECTORLEN=xvectorlen                                   * 00027000
*                  is the name (RS-type), or address in register      * 00027100
*                  (2)-(12), of a required fullword input field that  * 00027200
*                  specifies the target number of entries which are   * 00027300
*                  requested for the user's vector.  This may be      * 00027400
*                  greater than or less than the number of entries    * 00027500
*                  currently in the vector: the request will attempt  * 00027600
*                  to expand or contract the user's vector            * 00027700
*                  accordingly.  However,  the size specified must be * 00027800
*                  greater than zero.                                 * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*              ACTUALVECLEN=xactualveclen                             * 00028400
*                  is the name (RS-type), or address in register      * 00028500
*                  (2)-(12), of a required fullword output field that * 00028600
*                  returns the actual size of the local vector which  * 00028700
*                  was obtained by the IXLVECTR service.  When        * 00028800
*                  expanding a local vector, it may not be possible   * 00028900
*                  to expand the vector to the requested target size. * 00029000
*                  In this case,  the actual size which was obtained  * 00029100
*                  is returned.  If the vector length is invalid the  * 00029200
*                  ActualVecLen value is irrelevant.                  * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*              ÝBRANCHTABLE=»NO!YESº¨                                 * 00029800
*                  is an optional keyword input                       * 00029900
*                                                                     * 00030000
*                  DEFAULT: NO                                        * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                  ÝBRANCHTABLE=NO¨                                   * 00030400
*                      indicates that a branch table is not to be     * 00030500
*                      generated.                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                  ÝBRANCHTABLE=YES                                   * 00030900
*                      indicates that a branch table is to be         * 00031000
*                      generated.                                     * 00031100
*                                                                     * 00031200
*                      NOTE: When BRANCHTABLE=YES is specified the    * 00031300
*                      return code will only be available in register * 00031400
*                      15.                                            * 00031500
*                      DEFAULT: NO                                    * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                      MODIFYDONE=xmodifydone                         * 00032000
*                          is the name (RS-type) of a required        * 00032100
*                          character input field that contains the    * 00032200
*                          label to branch to if the vector was       * 00032300
*                          defined as requested.                      * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                      LESSTHAN=xlessthan                             * 00032900
*                          is the name (RS-type) of a required        * 00033000
*                          character input field that contains the    * 00033100
*                          label to branch to if storage could not be * 00033200
*                          obtained to define a vector of the         * 00033300
*                          requested target size. ACTUALVECLEN        * 00033400
*                          contains the actual size of the vector.    * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                      NOSTORAGE=xnostorage                           * 00034000
*                          is the name (RS-type) of a required        * 00034100
*                          character input field that contains the    * 00034200
*                          label to branch to if storage could not be * 00034300
*                          obtained to increase the vector length.    * 00034400
*                          The vector remains at its original size.   * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                      INVALIDTOKN=xinvalidtokn                       * 00035000
*                          is the name (RS-type) of a required        * 00035100
*                          character input field that contains the    * 00035200
*                          label to branch to if the specified vector * 00035300
*                          token is not valid.                        * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                      INVALIDLEN=xinvalidlen¨                        * 00035900
*                          is the name (RS-type) of a required        * 00036000
*                          character input field that contains the    * 00036100
*                          label to branch to if the specified        * 00036200
*                          VECTORLEN is in error.                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*          REQUEST=LTVECENTRIES                                       * 00037100
*              request to load and test a range of vector entries for * 00037200
*              either a list or cache vector.                         * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*              VECTORINDEX=xvectorindex                               * 00037700
*                  is the name (RS-type), or address in register      * 00037800
*                  (2)-(12), of a required fullword input field that  * 00037900
*                  specifies the starting index of the range of       * 00038000
*                  vector entries which are to be loaded and tested.  * 00038100
*                  The index specified must be evenly divisible by    * 00038200
*                  32.  Up to 32 vector entries will be loaded and    * 00038300
*                  tested,  depending on whether the end of the       * 00038400
*                  vector is reached.                                 * 00038500
*                                                                     * 00038600
*                  NOTE: The vector index for a given vector of size  * 00038700
*                  N goes from 0 to N-1.                              * 00038800
*                                                                     * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*              BITSTRING=xbitstring                                   * 00039300
*                  is the name (RS-type), or address in register      * 00039400
*                  (2)-(12), of a required 32 bit output field that   * 00039500
*                  returns the bit string containing vector entry     * 00039600
*                  state information for the range of vector entries. * 00039700
*                  The bits in the bit string are interpreted as      * 00039800
*                  follows:                                           * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                  o   0 - the vector entry corresponding to this bit * 00040200
*                      position indicates that the monitored list is  * 00040300
*                      NONEMPTY (when monitoring for empty/non-empty) * 00040400
*                      or NONFULL (when monitoring for full/non-full) * 00040500
*                      or that the monitored event queue is NONEMPTY  * 00040600
*                      (list vector), or that the local cache entry   * 00040700
*                      is INVALID (cache vector)                      * 00040800
*                                                                     * 00040900
*                  o   1 - the vector entry corresponding to this bit * 00041000
*                      position indicates that the monitored list is  * 00041100
*                      EMPTY (when monitoring for empty/non-empty) or * 00041200
*                      FULL (when monitoring for full/non-full) or    * 00041300
*                      that the monitored event queue is EMPTY (list  * 00041400
*                      vector), or that the local cache entry is      * 00041500
*                      VALID (cache vector)                           * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*              ÝBRANCHTABLE=»NO!YESº¨                                 * 00042300
*                  is an optional keyword input                       * 00042400
*                                                                     * 00042500
*                  DEFAULT: NO                                        * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                  ÝBRANCHTABLE=NO¨                                   * 00042900
*                      indicates that a branch table is not to be     * 00043000
*                      generated.                                     * 00043100
*                                                                     * 00043200
*                                                                     * 00043300
*                  ÝBRANCHTABLE=YES                                   * 00043400
*                      indicates that a branch table is to be         * 00043500
*                      generated.                                     * 00043600
*                                                                     * 00043700
*                      NOTE: When BRANCHTABLE=YES is specified the    * 00043800
*                      return code will only be available in register * 00043900
*                      15.                                            * 00044000
*                      DEFAULT: NO                                    * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                      The following is a set of mutually exclusive   * 00044500
*                      keys.  This set is required; only one key must * 00044600
*                      be specified.                                  * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                      ALLEMPVAL=xallempval                           * 00045000
*                          belongs to a set of mutually exclusive     * 00045100
*                          keys. It is the name (RS-type), or address * 00045200
*                          in register (2)-(12), of a character input * 00045300
*                          field that contains the label to branch to * 00045400
*                          if all monitored objects (comprising of    * 00045500
*                          lists and/or the user's event queue) in    * 00045600
*                          the range of vector entries are EMPTY      * 00045700
*                          (list vector),  or if all local cache      * 00045800
*                          entries in the range of vector entries are * 00045900
*                          VALID (cache vector).                      * 00046000
*                                                                     * 00046100
*                          ALLEMPVAL is mutually exclusive with       * 00046200
*                          SOMENEINVNF.                               * 00046300
*                                                                     * 00046400
*                      ALLEMPVALFULL=xallempvalfull                   * 00046500
*                          belongs to a set of mutually exclusive     * 00046600
*                          keys. It is the name (RS-type), or address * 00046700
*                          in register (2)-(12), of a character input * 00046800
*                          field that contains the label to branch to * 00046900
*                          if all monitored objects (comprising of    * 00047000
*                          lists and/or the user's event queue) in    * 00047100
*                          the range of vector entries are EMPTY when * 00047200
*                          monitoring for empty/non-empty state or    * 00047300
*                          FULL when monitoring a list for            * 00047400
*                          full/non-full state (list notification     * 00047500
*                          vector), or if all local cache entries in  * 00047600
*                          the range of vector entries are VALID      * 00047700
*                          (cache vector).                            * 00047800
*                                                                     * 00047900
*                          ALLEMPVALFULL is mutually exclusive with   * 00048000
*                          SOMENEINV.                                 * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                      End of a set of mutually exclusive required    * 00048500
*                      keys.                                          * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                      The following is a set of mutually exclusive   * 00049000
*                      keys.  This set is required; only one key must * 00049100
*                      be specified.                                  * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                      SOMENEINV=xsomeneinv                           * 00049500
*                          belongs to a set of mutually exclusive     * 00049600
*                          keys. It is the name (RS-type), or address * 00049700
*                          in register (2)-(12), of a character input * 00049800
*                          field that contains the label to branch to * 00049900
*                          if some monitored object (comprising of    * 00050000
*                          lists and/or the user's event queue) in    * 00050100
*                          the range of vector entries is NONEMPTY    * 00050200
*                          (list vector),  or if some local cache     * 00050300
*                          entry in the range of vector entries is    * 00050400
*                          INVALID (cache vector).                    * 00050500
*                                                                     * 00050600
*                          SOMENEINV is mutually exclusive with       * 00050700
*                          ALLEMPVALFULL.                             * 00050800
*                                                                     * 00050900
*                      SOMENEINVNF=xsomeneinvnf                       * 00051000
*                          belongs to a set of mutually exclusive     * 00051100
*                          keys. It is the name (RS-type), or address * 00051200
*                          in register (2)-(12), of a character input * 00051300
*                          field that contains the label to branch to * 00051400
*                          if some monitored object (comprising of    * 00051500
*                          lists and/or the user's event queue) in    * 00051600
*                          the range of vector entries is NON-EMPTY   * 00051700
*                          when monitoring for empty/non-empty state  * 00051800
*                          or NON-FULL when monitoring a list for     * 00051900
*                          full/non-full state (list notification     * 00052000
*                          vector), or if some local cache entry in   * 00052100
*                          the range of vector entries is INVALID     * 00052200
*                          (cache vector).                            * 00052300
*                                                                     * 00052400
*                          SOMENEINVNF is mutually exclusive with     * 00052500
*                          ALLEMPVAL.                                 * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*                      End of a set of mutually exclusive required    * 00053100
*                      keys.                                          * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                      INDXINVALID=xindxinvalid                       * 00053600
*                          is the name (RS-type) of a required        * 00053700
*                          character input field that contains the    * 00053800
*                          label to branch to if the vector index     * 00053900
*                          specified is not a valid vector index      * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                      INVALIDTOKN=xinvalidtokn¨                      * 00054500
*                          is the name (RS-type) of a required        * 00054600
*                          character input field that contains the    * 00054700
*                          label to branch to if the vector token is  * 00054800
*                          not valid.                                 * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*          REQUEST=TESTLISTSTATE                                      * 00055700
*              request to test whether a monitored list header in a   * 00055800
*              list structure,  or a monitored event queue in a list  * 00055900
*              structure, is empty or nonempty.                       * 00056000
*                                                                     * 00056100
*              For monitored lists in a list structure, TESTLISTSTATE * 00056200
*              can be used to determine whether a list is in the full * 00056300
*              or nonfull state based on the established list entry   * 00056400
*              or element limits.                                     * 00056500
*                                                                     * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*              VECTORINDEX=xvectorindex                               * 00056900
*                  is the name (RS-type), or address in register      * 00057000
*                  (2)-(12), of a required fullword input field that  * 00057100
*                  specifies the list vector index number which is    * 00057200
*                  associated with the list header or event queue for * 00057300
*                  which the empty/nonempty state information or      * 00057400
*                  full/nonfull state information is requested.  The  * 00057500
*                  association between a list header and the type of  * 00057600
*                  list monitoring requested (empty/nonempty or       * 00057700
*                  full/nonfull) or event queue and a list vector     * 00057800
*                  index number was made at the time the connector    * 00057900
*                  registered for list monitoring or event queue      * 00058000
*                  monitoring via the IXLLSTC service.                * 00058100
*                                                                     * 00058200
*                  NOTE: The vector index for a given vector of size  * 00058300
*                  N goes from 0 to N-1.                              * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*              ÝBRANCHTABLE=»NO!YESº¨                                 * 00058900
*                  is an optional keyword input                       * 00059000
*                                                                     * 00059100
*                  DEFAULT: NO                                        * 00059200
*                                                                     * 00059300
*                                                                     * 00059400
*                  ÝBRANCHTABLE=NO¨                                   * 00059500
*                      indicates that a branch table is not to be     * 00059600
*                      generated.                                     * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*                  ÝBRANCHTABLE=YES                                   * 00060000
*                      indicates that a branch table is to be         * 00060100
*                      generated.                                     * 00060200
*                                                                     * 00060300
*                      NOTE: When BRANCHTABLE=YES is specified the    * 00060400
*                      return code will only be available in register * 00060500
*                      15.                                            * 00060600
*                      DEFAULT: NO                                    * 00060700
*                                                                     * 00060800
*                                                                     * 00060900
*                      The following is a set of mutually exclusive   * 00061000
*                      keys.  This set is required; only one key must * 00061100
*                      be specified.                                  * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*                      LSTEMPTY=xlstempty                             * 00061500
*                          belongs to a set of mutually exclusive     * 00061600
*                          keys. It is the name (RS-type), or address * 00061700
*                          in register (2)-(12), of a character input * 00061800
*                          field that contains the label to branch to * 00061900
*                          if the list or event queue is empty.       * 00062000
*                                                                     * 00062100
*                          LSTEMPTY is mutually exclusive with        * 00062200
*                          LSTNONFULL.                                * 00062300
*                                                                     * 00062400
*                      LSTFULL=xlstfull                               * 00062500
*                          belongs to a set of mutually exclusive     * 00062600
*                          keys. It is the name (RS-type), or address * 00062700
*                          in register (2)-(12), of a character input * 00062800
*                          field that contains the label to branch to * 00062900
*                          if the list is full.                       * 00063000
*                                                                     * 00063100
*                          LSTFULL is mutually exclusive with         * 00063200
*                          LSTNONEMPTY.                               * 00063300
*                                                                     * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*                      End of a set of mutually exclusive required    * 00063700
*                      keys.                                          * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*                      The following is a set of mutually exclusive   * 00064200
*                      keys.  This set is required; only one key must * 00064300
*                      be specified.                                  * 00064400
*                                                                     * 00064500
*                                                                     * 00064600
*                      LSTNONEMPTY=xlstnonempty                       * 00064700
*                          belongs to a set of mutually exclusive     * 00064800
*                          keys. It is the name (RS-type), or address * 00064900
*                          in register (2)-(12), of a character input * 00065000
*                          field that contains the label to branch to * 00065100
*                          if the list or event queue is non-empty.   * 00065200
*                                                                     * 00065300
*                          LSTNONEMPTY is mutually exclusive with     * 00065400
*                          LSTFULL.                                   * 00065500
*                                                                     * 00065600
*                      LSTNONFULL=xlstnonfull                         * 00065700
*                          belongs to a set of mutually exclusive     * 00065800
*                          keys. It is the name (RS-type), or address * 00065900
*                          in register (2)-(12), of a character input * 00066000
*                          field that contains the label to branch to * 00066100
*                          if the list is non-full.                   * 00066200
*                                                                     * 00066300
*                          LSTNONFULL is mutually exclusive with      * 00066400
*                          LSTEMPTY.                                  * 00066500
*                                                                     * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*                      End of a set of mutually exclusive required    * 00066900
*                      keys.                                          * 00067000
*                                                                     * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*                      INDXINVALID=xindxinvalid                       * 00067400
*                          is the name (RS-type) of a required        * 00067500
*                          character input field that contains the    * 00067600
*                          label to branch to if the vector index     * 00067700
*                          specified is not a valid vector index in   * 00067800
*                          the user's current local list notification * 00067900
*                          vector.                                    * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                                                                     * 00068300
*                                                                     * 00068400
*                      INVALIDTOKN=xinvalidtokn¨                      * 00068500
*                          is the name (RS-type) of a required        * 00068600
*                          character input field that contains the    * 00068700
*                          label to branch to if the vector token is  * 00068800
*                          not valid.                                 * 00068900
*                                                                     * 00069000
*                                                                     * 00069100
*                                                                     * 00069200
*                                                                     * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*          REQUEST=TESTLOCALCACHE                                     * 00069700
*              request to test the validity of a locally-cached data  * 00069800
*              item or cache coherency.                               * 00069900
*                                                                     * 00070000
*              NOTE: The TESTLOCALCACHE request does not provide a    * 00070100
*              built in branch table mechanism.                       * 00070200
*                                                                     * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*              ÝVALIDATE=»YES!NOº¨                                    * 00070600
*                  is an optional keyword input                       * 00070700
*                                                                     * 00070800
*                  DEFAULT: YES                                       * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*                  ÝVALIDATE=YES                                      * 00071200
*                      indicates that a validation of connectivity to * 00071300
*                      the facility containing the cache structure    * 00071400
*                      will be performed.                             * 00071500
*                                                                     * 00071600
*                      NOTE: If the VectorIndex is not specified with * 00071700
*                      this option, only cache coherency will be      * 00071800
*                      validated.                                     * 00071900
*                                                                     * 00072000
*                                                                     * 00072100
*                                                                     * 00072200
*                      ÝVECTORINDEX=»xvectorindex!NO_VECTORINDEXº¨¨   * 00072300
*                                                                     * 00072400
*                          is the name (RS-type), or address in       * 00072500
*                          register (2)-(12), of an optional fullword * 00072600
*                          input field that identifies the local      * 00072700
*                          cache vector index number which is         * 00072800
*                          associated with the a cached page. The     * 00072900
*                          association between the local cache vector * 00073000
*                          index number and the particular cache data * 00073100
*                          item whose validity is being checked,  was * 00073200
*                          established at the time that the connector * 00073300
*                          performed an IXLCACHE command which caused * 00073400
*                          interest to be registered for the data     * 00073500
*                          item.                                      * 00073600
*                                                                     * 00073700
*                          NOTE: The vector index for a given vector  * 00073800
*                          of size N goes from 0 to N-1.              * 00073900
*                          DEFAULT: NO_VECTORINDEX                    * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                  ÝVALIDATE=NO                                       * 00074400
*                      indicates that a validation of connectivity to * 00074500
*                      the facility containing the cache structure    * 00074600
*                      will not be performed.                         * 00074700
*                                                                     * 00074800
*                      DEFAULT: YES                                   * 00074900
*                                                                     * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                      VECTORINDEX=xvectorindex¨                      * 00075400
*                          is the name (RS-type), or address in       * 00075500
*                          register (2)-(12), of a required fullword  * 00075600
*                          input field that identifies the local      * 00075700
*                          cache vector index number which is         * 00075800
*                          associated with the a cached page. The     * 00075900
*                          association between the local cache vector * 00076000
*                          index number and the particular cache data * 00076100
*                          item whose validity is being checked,  was * 00076200
*                          established at the time that the connector * 00076300
*                          performed an IXLCACHE command which caused * 00076400
*                          interest to be registered for the data     * 00076500
*                          item.                                      * 00076600
*                                                                     * 00076700
*                          NOTE: The vector index for a given vector  * 00076800
*                          of size N goes from 0 to N-1.              * 00076900
*                                                                     * 00077000
*                                                                     * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*      ÝRETCODE=xretcode¨                                             * 00078200
*          is the name (RS-type) of an optional fullword output       * 00078300
*          variable, or register (2)-(12) or (15), into which the     * 00078400
*          return code is to be copied from GPR 15.  If you specify   * 00078500
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00078600
*          the value will be left in GPR 15.                          * 00078700
*                                                                     * 00078800
*                                                                     * 00078900
*                                                                     * 00079000
*01* RETURN CODES:                                                    * 00079100
*                                                                     * 00079200
*                                                                     * 00079300
*                 Results are communicated via a return code in the   * 00079400
*                 return code variable or register 15. If             * 00079500
*                 BRANCHTABLE=YES is specified the return code will   * 00079600
*                 only be available in register 15. All return codes  * 00079700
*                 are represented in hexadecimal values. Return code  * 00079800
*                 constants are defined within IXLYCON.               * 00079900
*                                                                     * 00080000
*                                                                     * 00080100
*                 o   Return codes from the MODIFYVECTORSIZE request: * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*                     0         IxlRetCodeModifyDone:  Vector defined * 00080500
*                               as requested                          * 00080600
*                                                                     * 00080700
*                     4         IxlRetCodeLessThan:  Actual vector    * 00080800
*                               size is less than requested.          * 00080900
*                               ActualVecLen contains the current     * 00081000
*                               actual vector size.                   * 00081100
*                                                                     * 00081200
*                     8         IxlRetCodeNoStorage:  Storage could   * 00081300
*                               not be obtained to increase vector    * 00081400
*                               size.                                 * 00081500
*                                                                     * 00081600
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00081700
*                               is not valid.                         * 00081800
*                                                                     * 00081900
*                     10        IxlRetCodeInvalidLen:  Vector length  * 00082000
*                               is not valid.                         * 00082100
*                                                                     * 00082200
*                                                                     * 00082300
*                                                                     * 00082400
*                 o   Return codes from the LTVECENTRIES request:     * 00082500
*                                                                     * 00082600
*                                                                     * 00082700
*                     0         IxlRetCodeAllEmpVal:  All monitored   * 00082800
*                               objects (comprised of lists and/or    * 00082900
*                               the user's event queue) in the range  * 00083000
*                               of vector entries are empty (list     * 00083100
*                               vector), or all local cache entries   * 00083200
*                               in the range of vector entries are    * 00083300
*                               valid (cache vector)                  * 00083400
*                                                                     * 00083500
*                     0         IxlRetCodeAllEmpValFull:  All         * 00083600
*                               monitored objects (comprising of      * 00083700
*                               lists and/or the user's event queue)  * 00083800
*                               in the range of vector entries are    * 00083900
*                               EMPTY when monitoring for             * 00084000
*                               empty/non-empty state or FULL when    * 00084100
*                               monitoring a list for full/non-full   * 00084200
*                               state (list notification vector), or  * 00084300
*                               all local cache entries in the range  * 00084400
*                               of vector entries are valid (cache    * 00084500
*                               vector)                               * 00084600
*                                                                     * 00084700
*                     4         IxlRetCodeSomeNeInv:  Some monitored  * 00084800
*                               object (comprising of lists and/or    * 00084900
*                               the user's event queue) in the range  * 00085000
*                               of vector entries is nonempty (list   * 00085100
*                               vector), or some local cache entry in * 00085200
*                               the range of vector entries is        * 00085300
*                               invalid (cache vector)                * 00085400
*                                                                     * 00085500
*                     4         IxlRetCodeSomeNeInvNf:  Some          * 00085600
*                               monitored object (comprised of lists  * 00085700
*                               and/or the user's event queue) in the * 00085800
*                               range of vector entries is NON-EMPTY  * 00085900
*                               when monitoring for empty/non-empty   * 00086000
*                               state or NON-FULL when monitoring a   * 00086100
*                               list for full/non-full state (list    * 00086200
*                               notification vector), or some local   * 00086300
*                               cache entry in the range of vector    * 00086400
*                               entries is INVALID (cache vector)     * 00086500
*                                                                     * 00086600
*                     8         IxlRetCodeIndxInvalid:  Vector index  * 00086700
*                               is not valid.  The vector index may   * 00086800
*                               be beyond the end of the              * 00086900
*                               currently-defined vector,  or not     * 00087000
*                               evenly divisible by 32.               * 00087100
*                                                                     * 00087200
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00087300
*                               is not valid.                         * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                                                                     * 00087700
*                 o   Return codes from the TESTLISTSTATE request:    * 00087800
*                                                                     * 00087900
*                                                                     * 00088000
*                     0         IxlRetCodeLstEmpty:  List or event    * 00088100
*                               queue is empty.                       * 00088200
*                                                                     * 00088300
*                     0         IxlRetCodeLstFull:  The monitored     * 00088400
*                               list is in the full state.            * 00088500
*                                                                     * 00088600
*                     4         IxlRetCodeLstNonEmpty:  List or event * 00088700
*                               queue is nonempty.                    * 00088800
*                                                                     * 00088900
*                     4         IxlRetCodeLstNonFull:  The monitored  * 00089000
*                               list is in the non-full state.        * 00089100
*                                                                     * 00089200
*                     8         IxlRetCodeIndxInvalid:  Vector index  * 00089300
*                               is not valid.                         * 00089400
*                                                                     * 00089500
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00089600
*                               is not valid.                         * 00089700
*                                                                     * 00089800
*                                                                     * 00089900
*                                                                     * 00090000
*                 o   Return codes from request TESTLOCALCACHE        * 00090100
*                     VALIDATE=YES/NO with VectorIndex specified:     * 00090200
*                                                                     * 00090300
*                                                                     * 00090400
*                     0         IxlRetCodeBufValid:  Locally cached   * 00090500
*                               data item is valid                    * 00090600
*                                                                     * 00090700
*                     4         IxlRetCodeBufNotValid:  Locally       * 00090800
*                               cached data item is not valid         * 00090900
*                                                                     * 00091000
*                     8         IxlRetCodeIndxInvalid:  Vector index  * 00091100
*                               is not valid                          * 00091200
*                                                                     * 00091300
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00091400
*                               is not valid                          * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*                                                                     * 00091800
*                 o   Return codes from the request TESTLOCALCACHE    * 00091900
*                     VALIDATE=YES with VECTORINDEX not specified:    * 00092000
*                                                                     * 00092100
*                                                                     * 00092200
*                     0         IxlRetCodeConnected:  Cache coherent. * 00092300
*                                                                     * 00092400
*                     4         IxlRetCodeNotConnected:  Cache not    * 00092500
*                               coherent.                             * 00092600
*                                                                     * 00092700
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00092800
*                               is not valid                          * 00092900
*                                                                     * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*                                                                     * 00093600
*01* REASON CODES:  None.                                             * 00093700
*                                                                     * 00093800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00093900
*                                                                     * 00094000
*02*   PROCESSOR:  ASSEM                                              * 00094100
*                                                                     * 00094200
*01* COMPONENT:  SCIXL                                                * 00094300
*                                                                     * 00094400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00094500
*                                                                     * 00094600
*01* MACRO USAGE NOTES:                                               * 00094700
*                                                                     * 00094800
*                                                                     * 00094900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00095000
*        global macro variable.  Any value other than 'NO' will       * 00095100
*        result in the macro expansion being printed.  The default is * 00095200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00095300
*        variable should be set.                                      * 00095400
*                                                                     * 00095500
*                    GBLC &ZPRINT                                     * 00095600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00095700
*                                                                     * 00095800
*                                                                     * 00095900
*                                                                     * 00096000
*01* CHANGE ACTIVITY:                                                 * 00096100
*                                                                     * 00096200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00096300
*                                                                     * 00096400
*    $L0=SYSLKSMG HBB5510 901207 PD00EG:  Initial Release as IXLTLCE  * 00096500
*    $L1=SYSLKSMG HBB5510 920406 PD00EG:  Initial Release as IXLVECTR * 00096600
*    $P1=PIG0873  HBB5510 921105 PD00EG:  macro phase warning         * 00096700
*                                         message.                    * 00096800
*    $D1=DIG0018  HBB5510 921105 PD00EG:  >4k changes.                * 00096900
*    $D2=DIG0038  HBB5510 930325 PD00EG:  Test cache coherency only.  * 00097000
*    $P2=PIG1061  HBB5510 930325 PD00EG:  ModifyVector to length 0.   * 00097100
*    $P3=PIG2242  HBB5510 930909 PD00EG:  documentation changes.      * 00097200
*    $P4=PIG2473  HBB5510 930909 PD00EG:  No asm returncode.          * 00097300
*    $P5=PIG2475  HBB5510 930909 PD00EG:  documentation changes.      * 00097400
*    $P6=PIG2968  HBB5510 930909 PD00EG:  documentation changes.      * 00097500
*    $P7=PIG5178  HBB5510 940301 PD00FR:  Performance                 * 00097600
*    $01=OW16854  HBB5510 951120 PD00FR:  Correct output area         * 00097700
*                                         processing                  * 00097800
*    $02=OW15589  HBB5520 950712 PD00FR:  Event monitoring support    * 00097900
*    $03=OA05538  HBB7707 031114 PD00GX:  Documentation changes.      * 00098000
*    $L2=LSTNOT   HBB77B0 150323 PD00C9:  List Notification           * 00098100
*                                         Enhancements                * 00098200
****** END OF SPECIFICATIONS *****************************************/ 00098300
*/********************************************************************* 00098400
         MACRO                                                          00098500
&XLABEL  IXLVECTR &VECTORTOKEN=,&WORKAREA=,&REQUEST=,&VECTORLEN=,      *00098600
               &ACTUALVECLEN=,&BRANCHTABLE=,&MODIFYDONE=,&LESSTHAN=,   *00098700
               &NOSTORAGE=,&INVALIDTOKN=,&INVALIDLEN=,&VECTORINDEX=,   *00098800
               &BITSTRING=,&ALLEMPVAL=,&ALLEMPVALFULL=,&SOMENEINV=,    *00098900
               &SOMENEINVNF=,&INDXINVALID=,&LSTEMPTY=,&LSTFULL=,       *00099000
               &LSTNONEMPTY=,&LSTNONFULL=,&VALIDATE=,&RETCODE=          00099100
.*                                                                      00099200
*                      MACDATE -01/13/18-<0>                            00099300
.*                                                                      00099400
.*******************************************************************    00099500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00099600
.*******************************************************************    00099700
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00099800
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00099900
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00100000
.*                                                                      00100100
                      GBLC  &ZIXLVECTR  YES=MACRO USED AT LEAST ONCE    00100200
.*******************************************************************    00100300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00100400
.*******************************************************************    00100500
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00100600
                      LCLC  &ZCNDX      SYSNDX CHARACTERS               00100700
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00100800
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00100900
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00101000
                      LCLA  &ZAWRK      USED AS A WORK AREA             00101100
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00101200
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00101300
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00101400
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00101500
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00101600
                      LCLC  &ZMAC_G     "G" or null                     00101700
&ZMAC_G               SETC  ''                                          00101800
                      LCLC  &ZMAC_LR                                    00101900
&ZMAC_LR              SETC  'LR'                                        00102000
                      LCLC  &ZMAC_L                                     00102100
&ZMAC_L               SETC  'L'                                         00102200
                      LCLC  &ZMAC_ST                                    00102300
&ZMAC_ST              SETC  'ST'                                        00102400
                      LCLC  &ZMAC_LLGT                                  00102500
&ZMAC_LLGT            SETC  'L'                                         00102600
                      LCLC  &ZMAC_LGR                                   00102700
&ZMAC_LGR             SETC  'LR'                                        00102800
                      LCLC  &ZMAC_LG                                    00102900
&ZMAC_LG              SETC  'L'                                         00103000
                      LCLC  &ZMAC_STG                                   00103100
&ZMAC_STG             SETC  'ST'                                        00103200
                      LCLA  &ZMACRET    MACRO RETURN CODE               00103300
&ZMACRET              SETA  0           ASSUME NO ERRORS                00103400
.*                                                                      00103500
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00103600
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00103700
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00103800
                      LCLC  &ZENDBASEPL         End of base PL          00103900
.*******************************************************************    00104000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00104100
.*******************************************************************    00104200
                      LCLC  &XVECTORTOKEN       ++ NAME                 00104300
                      LCLC  &XWORKAREA  ++ NAME                         00104400
                      LCLC  &XREQUEST   ++ VALUE                        00104500
                      LCLC  &XVECTORLEN         ++ NAME                 00104600
                      LCLC  &XACTUALVECLEN      ++ NAME                 00104700
                      LCLC  &XBRANCHTABLE       ++ VALUE                00104800
                      LCLC  &XMODIFYDONE        ++ NAME                 00104900
                      LCLC  &XLESSTHAN  ++ NAME                         00105000
                      LCLC  &XNOSTORAGE         ++ NAME                 00105100
                      LCLC  &XINVALIDTOKN       ++ NAME                 00105200
                      LCLC  &XINVALIDLEN        ++ NAME                 00105300
                      LCLC  &XVECTORINDEX       ++ NAME                 00105400
                      LCLC  &XBITSTRING         ++ NAME                 00105500
                      LCLC  &XALLEVORALLEVF     ++ NAME                 00105600
                      LCLC  &XALLEMPVAL         ++ NAME                 00105700
                      LCLC  &XALLEMPVALFULL     ++ NAME                 00105800
                      LCLC  &XNEINVORNEINVNF    ++ NAME                 00105900
                      LCLC  &XSOMENEINV         ++ NAME                 00106000
                      LCLC  &XSOMENEINVNF       ++ NAME                 00106100
                      LCLC  &XINDXINVALID       ++ NAME                 00106200
                      LCLC  &XEMPTYFULL         ++ NAME                 00106300
                      LCLC  &XLSTEMPTY  ++ NAME                         00106400
                      LCLC  &XLSTFULL   ++ NAME                         00106500
                      LCLC  &XNOEMPTYNOFULL     ++ NAME                 00106600
                      LCLC  &XLSTNONEMPTY       ++ NAME                 00106700
                      LCLC  &XLSTNONFULL        ++ NAME                 00106800
                      LCLC  &XVALIDATE  ++ VALUE                        00106900
                      LCLC  &XRETCODE   ++ NAME                         00107000
.*******************************************************************    00107100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00107200
.*******************************************************************    00107300
                      LCLC  &ZXVECTORTOKEN      ++ INPUT NAME           00107400
                      LCLC  &ZXWORKAREA         ++ INPUT NAME           00107500
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  00107600
                      LCLC  &ZXVECTORLEN        ++ INPUT NAME           00107700
                      LCLC  &ZXACTUALVECLEN     ++ OUTPUT NAME          00107800
                      LCLC  &ZXBRANCHTABLE      ++ INPUT VALUE          00107900
                      LCLC  &ZXMODIFYDONE       ++ INPUT NAME           00108000
                      LCLC  &ZXLESSTHAN         ++ INPUT NAME           00108100
                      LCLC  &ZXNOSTORAGE        ++ INPUT NAME           00108200
                      LCLC  &ZXINVALIDTOKN      ++ INPUT NAME           00108300
                      LCLC  &ZXINVALIDLEN       ++ INPUT NAME           00108400
                      LCLC  &ZXVECTORINDEX      ++ INPUT NAME           00108500
                      LCLC  &ZXBITSTRING        ++ OUTPUT NAME          00108600
                      LCLC  &ZXALLEVORALLEVF    ++ INPUT NAME           00108700
                      LCLC  &ZXALLEMPVAL        ++ INPUT NAME           00108800
                      LCLC  &ZXALLEMPVALFULL    ++ INPUT NAME           00108900
                      LCLC  &ZXNEINVORNEINVNF   ++ INPUT NAME           00109000
                      LCLC  &ZXSOMENEINV        ++ INPUT NAME           00109100
                      LCLC  &ZXSOMENEINVNF      ++ INPUT NAME           00109200
                      LCLC  &ZXINDXINVALID      ++ INPUT NAME           00109300
                      LCLC  &ZXEMPTYFULL        ++ INPUT NAME           00109400
                      LCLC  &ZXLSTEMPTY         ++ INPUT NAME           00109500
                      LCLC  &ZXLSTFULL  ++ INPUT NAME                   00109600
                      LCLC  &ZXNOEMPTYNOFULL    ++ INPUT NAME           00109700
                      LCLC  &ZXLSTNONEMPTY      ++ INPUT NAME           00109800
                      LCLC  &ZXLSTNONFULL       ++ INPUT NAME           00109900
                      LCLC  &ZXVALIDATE         ++ INPUT VALUE          00110000
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00110100
.********************************************************************   00110200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00110300
.********************************************************************   00110400
                      ACTR  10000                                       00110500
.*----------------------------------------------------------------***   00110600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00110700
                      AIF   (N'&VECTORTOKEN LE 1).ZG2A  CK NUM          00110800
&ZMS                  SETC  '"VECTORTOKEN='                             00110900
&ZMS                  SETC  '&ZMS.&VECTORTOKEN"'                        00111000
&ZMS                  SETC  '&ZMS "VECTORTOKEN"'                        00111100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00111200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00111300
.ZG2A                 ANOP  ,                                           00111400
.*-------------------------------------------------------------------   00111500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00111600
&ZXVECTORTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00111700
&XVECTORTOKEN         SETC  '&VECTORTOKEN(1)'   SET XVARIABLE           00111800
                      AIF   (N'&VECTORTOKEN GT 1).ZG2B  MULTI           00111900
&XVECTORTOKEN         SETC  '&VECTORTOKEN'      SET XVARIABLE           00112000
.ZG2B                 AIF   (K'&VECTORTOKEN(1) GT 0).ZG2C               00112100
&ZXVECTORTOKEN        SETC  ''          RESET IN/OUTPUT                 00112200
&ZMS                  SETC  ' '                                         00112300
&ZMS                  SETC  '&ZMS "VECTORTOKEN" KEY AND ITS'            00112400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00112500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00112600
.ZG2C                 ANOP  ,                                           00112700
.*-------------------------------------------------------------------   00112800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00112900
                      AIF   (K'&ZXVECTORTOKEN LE 0).ZG2R  NOT I/O       00113000
                      AIF   ('&XVECTORTOKEN'(1,1) NE '(').ZG2R          00113100
&ZCGPR                SETC  '&XVECTORTOKEN'(2,K'&XVECTORTOKEN-2)        00113200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 00113300
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        00113400
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      00113500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00113600
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    00113700
.ZG2P                 ANOP  ,                                           00113800
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         00113900
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      00114000
                      AIF   ('&ZCGPR' LE '12').ZG2R                     00114100
.ZG2Q                 ANOP  ,                                           00114200
&ZMS                  SETC  '"VECTORTOKEN='                             00114300
&ZMS                  SETC  '&ZMS.&VECTORTOKEN"'                        00114400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00114500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00114600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00114700
.ZG2R                 ANOP  ,                                           00114800
.*----------------------------------------------------------------***   00114900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00115000
                      AIF   (N'&WORKAREA LE 1).ZG5A  CK NUM             00115100
&ZMS                  SETC  '"WORKAREA='                                00115200
&ZMS                  SETC  '&ZMS.&WORKAREA"'                           00115300
&ZMS                  SETC  '&ZMS "WORKAREA"'                           00115400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00115500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00115600
.ZG5A                 ANOP  ,                                           00115700
.*-------------------------------------------------------------------   00115800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00115900
&ZXWORKAREA           SETC  'INPUT'     SET IN/OUTPUT                   00116000
&XWORKAREA            SETC  '&WORKAREA(1)'      SET XVARIABLE           00116100
                      AIF   (N'&WORKAREA GT 1).ZG5B  MULTI              00116200
&XWORKAREA            SETC  '&WORKAREA'         SET XVARIABLE           00116300
.ZG5B                 AIF   (K'&WORKAREA(1) GT 0).ZG5C                  00116400
&ZXWORKAREA           SETC  ''          RESET IN/OUTPUT                 00116500
&ZMS                  SETC  ' '                                         00116600
&ZMS                  SETC  '&ZMS "WORKAREA" KEY AND ITS'               00116700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00116800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00116900
.ZG5C                 ANOP  ,                                           00117000
.*-------------------------------------------------------------------   00117100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00117200
                      AIF   (K'&ZXWORKAREA LE 0).ZG5R  NOT I/O          00117300
                      AIF   ('&XWORKAREA'(1,1) NE '(').ZG5R             00117400
&ZCGPR                SETC  '&XWORKAREA'(2,K'&XWORKAREA-2)              00117500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                 00117600
                      AIF   (K'&ZCGPR GT 2).ZG5Q                        00117700
                      AIF   ('&ZCGPR' EQ '0').ZG5Q                      00117800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00117900
                      AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME    00118000
.ZG5P                 ANOP  ,                                           00118100
                      AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC         00118200
                      AIF   ('&ZCGPR' LT '2').ZG5Q                      00118300
                      AIF   ('&ZCGPR' LE '12').ZG5R                     00118400
.ZG5Q                 ANOP  ,                                           00118500
&ZMS                  SETC  '"WORKAREA='                                00118600
&ZMS                  SETC  '&ZMS.&WORKAREA"'                           00118700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00118800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00118900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00119000
.ZG5R                 ANOP  ,                                           00119100
.*------------------------------------------------------------------    00119200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119300
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            00119400
.*-------------------------------------------------------------------   00119500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119600
.ZG9                  ANOP  ,                                           00119700
                      AIF   (K'&REQUEST(1) LE 0).ZG9A                   00119800
&ZTLC                 SETC 'MODIFYVECTORSIZE'                           00119900
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG36             00120000
&XREQUEST             SETC  'MODIFYVECTORSIZE'  SET KEYWORD             00120100
                      AIF   (N'&REQUEST LE 1).ZG9A  CK NUM              00120200
&ZMS                  SETC  '"REQUEST='                                 00120300
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00120400
&ZMS                  SETC  '&ZMS "REQUEST"'                            00120500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00120600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00120700
.ZG9A                 ANOP  ,                                           00120800
.*------------------------------------------------------------------    00120900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00121000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00121100
.ZG9A0                AIF   (K'&VECTORINDEX LE 0).ZG9A1  OK             00121200
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00121300
.ZG9A1                AIF   (K'&BITSTRING LE 0).ZG9A2  OK               00121400
&ZCVAL                SETC '&ZCVAL BITSTRING'   INCORRECT KEY USED      00121500
.ZG9A2                AIF   (K'&ALLEMPVAL LE 0).ZG9A3  OK               00121600
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00121700
.ZG9A3                AIF   (K'&ALLEMPVALFULL LE 0).ZG9A4  OK           00121800
&ZCVAL                SETC '&ZCVAL ALLEMPVALFULL'  INCORRECT KEY USED   00121900
.ZG9A4                AIF   (K'&SOMENEINV LE 0).ZG9A5  OK               00122000
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00122100
.ZG9A5                AIF   (K'&SOMENEINVNF LE 0).ZG9A6  OK             00122200
&ZCVAL                SETC '&ZCVAL SOMENEINVNF'  INCORRECT KEY USED     00122300
.ZG9A6                AIF   (K'&INDXINVALID LE 0).ZG9A7  OK             00122400
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00122500
.ZG9A7                AIF   (K'&LSTEMPTY LE 0).ZG9A8  OK                00122600
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00122700
.ZG9A8                AIF   (K'&LSTFULL LE 0).ZG9A9  OK                 00122800
&ZCVAL                SETC '&ZCVAL LSTFULL'     INCORRECT KEY USED      00122900
.ZG9A9                AIF   (K'&LSTNONEMPTY LE 0).ZG9A10  OK            00123000
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00123100
.ZG9A10               AIF   (K'&LSTNONFULL LE 0).ZG9A11  OK             00123200
&ZCVAL                SETC '&ZCVAL LSTNONFULL'  INCORRECT KEY USED      00123300
.ZG9A11               AIF   (K'&VALIDATE LE 0).ZG9A12  OK               00123400
&ZCVAL                SETC '&ZCVAL VALIDATE'    INCORRECT KEY USED      00123500
.ZG9A12               AIF   (K'&ZCVAL LE 0).ZG9A13  OK                  00123600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00123700
&ZMS                  SETC  '"REQUEST'                                  00123800
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00123900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00124000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00124100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00124200
.ZG9A13               ANOP  ,                                           00124300
.*----------------------------------------------------------------***   00124400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00124500
                      AIF   (N'&VECTORLEN LE 1).ZG11A  CK NUM           00124600
&ZMS                  SETC  '"VECTORLEN='                               00124700
&ZMS                  SETC  '&ZMS.&VECTORLEN"'                          00124800
&ZMS                  SETC  '&ZMS "VECTORLEN"'                          00124900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00125000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00125100
.ZG11A                ANOP  ,                                           00125200
.*-------------------------------------------------------------------   00125300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00125400
&ZXVECTORLEN          SETC  'INPUT'     SET IN/OUTPUT                   00125500
&XVECTORLEN           SETC  '&VECTORLEN(1)'     SET XVARIABLE           00125600
                      AIF   (N'&VECTORLEN GT 1).ZG11B  MULTI            00125700
&XVECTORLEN           SETC  '&VECTORLEN'        SET XVARIABLE           00125800
.ZG11B                AIF   (K'&VECTORLEN(1) GT 0).ZG11C                00125900
&ZXVECTORLEN          SETC  ''          RESET IN/OUTPUT                 00126000
&ZMS                  SETC  ' '                                         00126100
&ZMS                  SETC  '&ZMS "VECTORLEN" KEY AND ITS'              00126200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00126300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00126400
.ZG11C                ANOP  ,                                           00126500
.*-------------------------------------------------------------------   00126600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00126700
                      AIF   (K'&ZXVECTORLEN LE 0).ZG11R  NOT I/O        00126800
                      AIF   ('&XVECTORLEN'(1,1) NE '(').ZG11R           00126900
&ZCGPR                SETC  '&XVECTORLEN'(2,K'&XVECTORLEN-2)            00127000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                00127100
                      AIF   (K'&ZCGPR GT 2).ZG11Q                       00127200
                      AIF   ('&ZCGPR' EQ '0').ZG11Q                     00127300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00127400
                      AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME   00127500
.ZG11P                ANOP  ,                                           00127600
                      AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC        00127700
                      AIF   ('&ZCGPR' LT '2').ZG11Q                     00127800
                      AIF   ('&ZCGPR' LE '12').ZG11R                    00127900
.ZG11Q                ANOP  ,                                           00128000
&ZMS                  SETC  '"VECTORLEN='                               00128100
&ZMS                  SETC  '&ZMS.&VECTORLEN"'                          00128200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00128300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00128400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00128500
.ZG11R                ANOP  ,                                           00128600
.*----------------------------------------------------------------***   00128700
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00128800
                      AIF   (N'&ACTUALVECLEN LE 1).ZG14A  CK NUM        00128900
&ZMS                  SETC  '"ACTUALVECLEN='                            00129000
&ZMS                  SETC  '&ZMS.&ACTUALVECLEN"'                       00129100
&ZMS                  SETC  '&ZMS "ACTUALVECLEN"'                       00129200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00129300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00129400
.ZG14A                ANOP  ,                                           00129500
.*-------------------------------------------------------------------   00129600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00129700
&ZXACTUALVECLEN       SETC  'OUTPUT'    SET IN/OUTPUT                   00129800
&XACTUALVECLEN        SETC  '&ACTUALVECLEN(1)'  SET XVARIABLE           00129900
                      AIF   (N'&ACTUALVECLEN GT 1).ZG14B  MULTI         00130000
&XACTUALVECLEN        SETC  '&ACTUALVECLEN'     SET XVARIABLE           00130100
.ZG14B                AIF   (K'&ACTUALVECLEN(1) GT 0).ZG14C             00130200
&ZXACTUALVECLEN       SETC  ''          RESET IN/OUTPUT                 00130300
&ZMS                  SETC  ' '                                         00130400
&ZMS                  SETC  '&ZMS "ACTUALVECLEN" KEY AND ITS'           00130500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00130600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00130700
.ZG14C                ANOP  ,                                           00130800
.*-------------------------------------------------------------------   00130900
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00131000
                      AIF   (K'&ZXACTUALVECLEN LE 0).ZG14R  NOT I/O     00131100
                      AIF   ('&XACTUALVECLEN'(1,1) NE '(').ZG14R        00131200
&ZCGPR                SETC  '&XACTUALVECLEN'(2,K'&XACTUALVECLEN-2)      00131300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                00131400
                      AIF   (K'&ZCGPR GT 2).ZG14Q                       00131500
                      AIF   ('&ZCGPR' EQ '0').ZG14Q                     00131600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00131700
                      AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME   00131800
.ZG14P                ANOP  ,                                           00131900
                      AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC        00132000
                      AIF   ('&ZCGPR' LT '2').ZG14Q                     00132100
                      AIF   ('&ZCGPR' LE '12').ZG14R                    00132200
.ZG14Q                ANOP  ,                                           00132300
&ZMS                  SETC  '"ACTUALVECLEN='                            00132400
&ZMS                  SETC  '&ZMS.&ACTUALVECLEN"'                       00132500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00132600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00132700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00132800
.ZG14R                ANOP  ,                                           00132900
.*------------------------------------------------------------------    00133000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133100
&XBRANCHTABLE         SETC  ''          INITIALIZE XVARIABLE            00133200
.*-------------------------------------------------------------------   00133300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133400
.ZG18                 ANOP  ,                                           00133500
                      AIF   (K'&BRANCHTABLE(1) LE 0).ZG18A              00133600
&ZTLC                 SETC 'NO'                                         00133700
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG19         00133800
&XBRANCHTABLE         SETC  'NO'        SET KEYWORD                     00133900
                      AIF   (N'&BRANCHTABLE LE 1).ZG18A  CK NUM         00134000
&ZMS                  SETC  '"BRANCHTABLE='                             00134100
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00134200
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00134300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00134400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00134500
.ZG18A                ANOP  ,                                           00134600
.*------------------------------------------------------------------    00134700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00134800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00134900
.ZG18A0               AIF   (K'&MODIFYDONE LE 0).ZG18A1  OK             00135000
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00135100
.ZG18A1               AIF   (K'&LESSTHAN LE 0).ZG18A2  OK               00135200
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00135300
.ZG18A2               AIF   (K'&NOSTORAGE LE 0).ZG18A3  OK              00135400
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00135500
.ZG18A3               AIF   (K'&INVALIDTOKN LE 0).ZG18A4  OK            00135600
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00135700
.ZG18A4               AIF   (K'&INVALIDLEN LE 0).ZG18A5  OK             00135800
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00135900
.ZG18A5               AIF   (K'&ZCVAL LE 0).ZG18A6  OK                  00136000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00136100
&ZMS                  SETC  '"BRANCHTABLE'                              00136200
&ZMS                  SETC  '&ZMS.=&BRANCHTABLE"'                       00136300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00136400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00136500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00136600
.ZG18A6               ANOP  ,                                           00136700
.*-------------------------------------------------------------------   00136800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00136900
.ZG19                 ANOP  ,                                           00137000
&ZTLC                 SETC 'YES'                                        00137100
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG35         00137200
&XBRANCHTABLE         SETC  'YES'       SET KEYWORD                     00137300
                      AIF   (N'&BRANCHTABLE LE 1).ZG19A  CK NUM         00137400
&ZMS                  SETC  '"BRANCHTABLE='                             00137500
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00137600
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00137700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00137800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00137900
.ZG19A                ANOP  ,                                           00138000
.*----------------------------------------------------------------***   00138100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00138200
                      AIF   (N'&MODIFYDONE LE 1).ZG21A  CK NUM          00138300
&ZMS                  SETC  '"MODIFYDONE='                              00138400
&ZMS                  SETC  '&ZMS.&MODIFYDONE"'                         00138500
&ZMS                  SETC  '&ZMS "MODIFYDONE"'                         00138600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00138700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00138800
.ZG21A                ANOP  ,                                           00138900
.*-------------------------------------------------------------------   00139000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00139100
&ZXMODIFYDONE         SETC  'INPUT'     SET IN/OUTPUT                   00139200
&XMODIFYDONE          SETC  '&MODIFYDONE(1)'    SET XVARIABLE           00139300
                      AIF   (N'&MODIFYDONE GT 1).ZG21B  MULTI           00139400
&XMODIFYDONE          SETC  '&MODIFYDONE'       SET XVARIABLE           00139500
.ZG21B                AIF   (K'&MODIFYDONE(1) GT 0).ZG21C               00139600
&ZXMODIFYDONE         SETC  ''          RESET IN/OUTPUT                 00139700
&ZMS                  SETC  ' '                                         00139800
&ZMS                  SETC  '&ZMS "MODIFYDONE" KEY AND ITS'             00139900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00140000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00140100
.ZG21C                ANOP  ,                                           00140200
.*-------------------------------------------------------------------   00140300
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00140400
                      AIF   (K'&ZXMODIFYDONE LE 0).ZG21P  NOT I/O       00140500
                      AIF   ('&XMODIFYDONE'(1,1) NE '(').ZG21P          00140600
&ZXMODIFYDONE         SETC  ''          RESET IN/OUTPUT                 00140700
&ZMS                  SETC  '"MODIFYDONE='                              00140800
&ZMS                  SETC  '&ZMS.&MODIFYDONE"'                         00140900
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00141000
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00141100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00141200
.ZG21P                ANOP  ,                                           00141300
.*----------------------------------------------------------------***   00141400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00141500
                      AIF   (N'&LESSTHAN LE 1).ZG24A  CK NUM            00141600
&ZMS                  SETC  '"LESSTHAN='                                00141700
&ZMS                  SETC  '&ZMS.&LESSTHAN"'                           00141800
&ZMS                  SETC  '&ZMS "LESSTHAN"'                           00141900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00142000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00142100
.ZG24A                ANOP  ,                                           00142200
.*-------------------------------------------------------------------   00142300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00142400
&ZXLESSTHAN           SETC  'INPUT'     SET IN/OUTPUT                   00142500
&XLESSTHAN            SETC  '&LESSTHAN(1)'      SET XVARIABLE           00142600
                      AIF   (N'&LESSTHAN GT 1).ZG24B  MULTI             00142700
&XLESSTHAN            SETC  '&LESSTHAN'         SET XVARIABLE           00142800
.ZG24B                AIF   (K'&LESSTHAN(1) GT 0).ZG24C                 00142900
&ZXLESSTHAN           SETC  ''          RESET IN/OUTPUT                 00143000
&ZMS                  SETC  ' '                                         00143100
&ZMS                  SETC  '&ZMS "LESSTHAN" KEY AND ITS'               00143200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00143300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00143400
.ZG24C                ANOP  ,                                           00143500
.*-------------------------------------------------------------------   00143600
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00143700
                      AIF   (K'&ZXLESSTHAN LE 0).ZG24P  NOT I/O         00143800
                      AIF   ('&XLESSTHAN'(1,1) NE '(').ZG24P            00143900
&ZXLESSTHAN           SETC  ''          RESET IN/OUTPUT                 00144000
&ZMS                  SETC  '"LESSTHAN='                                00144100
&ZMS                  SETC  '&ZMS.&LESSTHAN"'                           00144200
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00144300
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00144400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00144500
.ZG24P                ANOP  ,                                           00144600
.*----------------------------------------------------------------***   00144700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00144800
                      AIF   (N'&NOSTORAGE LE 1).ZG27A  CK NUM           00144900
&ZMS                  SETC  '"NOSTORAGE='                               00145000
&ZMS                  SETC  '&ZMS.&NOSTORAGE"'                          00145100
&ZMS                  SETC  '&ZMS "NOSTORAGE"'                          00145200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00145300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00145400
.ZG27A                ANOP  ,                                           00145500
.*-------------------------------------------------------------------   00145600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00145700
&ZXNOSTORAGE          SETC  'INPUT'     SET IN/OUTPUT                   00145800
&XNOSTORAGE           SETC  '&NOSTORAGE(1)'     SET XVARIABLE           00145900
                      AIF   (N'&NOSTORAGE GT 1).ZG27B  MULTI            00146000
&XNOSTORAGE           SETC  '&NOSTORAGE'        SET XVARIABLE           00146100
.ZG27B                AIF   (K'&NOSTORAGE(1) GT 0).ZG27C                00146200
&ZXNOSTORAGE          SETC  ''          RESET IN/OUTPUT                 00146300
&ZMS                  SETC  ' '                                         00146400
&ZMS                  SETC  '&ZMS "NOSTORAGE" KEY AND ITS'              00146500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00146600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00146700
.ZG27C                ANOP  ,                                           00146800
.*-------------------------------------------------------------------   00146900
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00147000
                      AIF   (K'&ZXNOSTORAGE LE 0).ZG27P  NOT I/O        00147100
                      AIF   ('&XNOSTORAGE'(1,1) NE '(').ZG27P           00147200
&ZXNOSTORAGE          SETC  ''          RESET IN/OUTPUT                 00147300
&ZMS                  SETC  '"NOSTORAGE='                               00147400
&ZMS                  SETC  '&ZMS.&NOSTORAGE"'                          00147500
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00147600
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00147700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00147800
.ZG27P                ANOP  ,                                           00147900
.*----------------------------------------------------------------***   00148000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00148100
                      AIF   (N'&INVALIDTOKN LE 1).ZG30A  CK NUM         00148200
&ZMS                  SETC  '"INVALIDTOKN='                             00148300
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00148400
&ZMS                  SETC  '&ZMS "INVALIDTOKN"'                        00148500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00148600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00148700
.ZG30A                ANOP  ,                                           00148800
.*-------------------------------------------------------------------   00148900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00149000
&ZXINVALIDTOKN        SETC  'INPUT'     SET IN/OUTPUT                   00149100
&XINVALIDTOKN         SETC  '&INVALIDTOKN(1)'   SET XVARIABLE           00149200
                      AIF   (N'&INVALIDTOKN GT 1).ZG30B  MULTI          00149300
&XINVALIDTOKN         SETC  '&INVALIDTOKN'      SET XVARIABLE           00149400
.ZG30B                AIF   (K'&INVALIDTOKN(1) GT 0).ZG30C              00149500
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00149600
&ZMS                  SETC  ' '                                         00149700
&ZMS                  SETC  '&ZMS "INVALIDTOKN" KEY AND ITS'            00149800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00149900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00150000
.ZG30C                ANOP  ,                                           00150100
.*-------------------------------------------------------------------   00150200
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00150300
                      AIF   (K'&ZXINVALIDTOKN LE 0).ZG30P  NOT I/O      00150400
                      AIF   ('&XINVALIDTOKN'(1,1) NE '(').ZG30P         00150500
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00150600
&ZMS                  SETC  '"INVALIDTOKN='                             00150700
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00150800
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00150900
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00151000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00151100
.ZG30P                ANOP  ,                                           00151200
.*----------------------------------------------------------------***   00151300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00151400
                      AIF   (N'&INVALIDLEN LE 1).ZG33A  CK NUM          00151500
&ZMS                  SETC  '"INVALIDLEN='                              00151600
&ZMS                  SETC  '&ZMS.&INVALIDLEN"'                         00151700
&ZMS                  SETC  '&ZMS "INVALIDLEN"'                         00151800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00151900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00152000
.ZG33A                ANOP  ,                                           00152100
.*-------------------------------------------------------------------   00152200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00152300
&ZXINVALIDLEN         SETC  'INPUT'     SET IN/OUTPUT                   00152400
&XINVALIDLEN          SETC  '&INVALIDLEN(1)'    SET XVARIABLE           00152500
                      AIF   (N'&INVALIDLEN GT 1).ZG33B  MULTI           00152600
&XINVALIDLEN          SETC  '&INVALIDLEN'       SET XVARIABLE           00152700
.ZG33B                AIF   (K'&INVALIDLEN(1) GT 0).ZG33C               00152800
&ZXINVALIDLEN         SETC  ''          RESET IN/OUTPUT                 00152900
&ZMS                  SETC  ' '                                         00153000
&ZMS                  SETC  '&ZMS "INVALIDLEN" KEY AND ITS'             00153100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00153200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00153300
.ZG33C                ANOP  ,                                           00153400
.*-------------------------------------------------------------------   00153500
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00153600
                      AIF   (K'&ZXINVALIDLEN LE 0).ZG33P  NOT I/O       00153700
                      AIF   ('&XINVALIDLEN'(1,1) NE '(').ZG33P          00153800
&ZXINVALIDLEN         SETC  ''          RESET IN/OUTPUT                 00153900
&ZMS                  SETC  '"INVALIDLEN='                              00154000
&ZMS                  SETC  '&ZMS.&INVALIDLEN"'                         00154100
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00154200
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00154300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00154400
.ZG33P                ANOP  ,                                           00154500
.*------------------------------------------------------------------    00154600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00154700
.ZG35                 ANOP  ,                                           00154800
&ZXBRANCHTABLE        SETC  'INPUT'     SET IN/OUTPUT                   00154900
                      AIF   (K'&XBRANCHTABLE GT 0).ZG35E  VALID ARG     00155000
                      AIF   (T'&BRANCHTABLE EQ 'O').ZG35D  OMITTED      00155100
&ZASYSLNDX            SETA  0                                           00155200
.ZG35A                ANOP  ,           POSITIONAL MACRO KEY            00155300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00155400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG35C            00155500
&ZTLC                 SETC 'BRANCHTABLE'                                00155600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG35A   00155700
.ZG35B                ANOP  ,                                           00155800
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00155900
&ZMS                  SETC  'THE "BRANCHTABLE" KEY'                     00156000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00156100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00156200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00156300
                      AGO   .ZG35E                                      00156400
.ZG35C                ANOP  ,                                           00156500
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00156600
&ZMS                  SETC  '"BRANCHTABLE='                             00156700
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00156800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00156900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00157000
&ZMS                  SETC  '&ZMS "NO"'                                 00157100
&ZMS                  SETC  '&ZMS OR "YES".'                            00157200
                      MNOTE 8,' &ZMS '                                  00157300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00157400
                      AGO   .ZG35E                                      00157500
.ZG35D                ANOP  ,                                           00157600
&XBRANCHTABLE         SETC  'NO'        SET DEFAULT KEYWORD             00157700
.ZG35E                ANOP  ,                                           00157800
.*-------------------------------------------------------------------   00157900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00158000
.ZG36                 ANOP  ,                                           00158100
&ZTLC                 SETC 'LTVECENTRIES'                               00158200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG62             00158300
&XREQUEST             SETC  'LTVECENTRIES'      SET KEYWORD             00158400
                      AIF   (N'&REQUEST LE 1).ZG36A  CK NUM             00158500
&ZMS                  SETC  '"REQUEST='                                 00158600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00158700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00158800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00158900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00159000
.ZG36A                ANOP  ,                                           00159100
.*------------------------------------------------------------------    00159200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00159300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00159400
.ZG36A0               AIF   (K'&VECTORLEN LE 0).ZG36A1  OK              00159500
&ZCVAL                SETC '&ZCVAL VECTORLEN'   INCORRECT KEY USED      00159600
.ZG36A1               AIF   (K'&ACTUALVECLEN LE 0).ZG36A2  OK           00159700
&ZCVAL                SETC '&ZCVAL ACTUALVECLEN'  INCORRECT KEY USED    00159800
.ZG36A2               AIF   (K'&MODIFYDONE LE 0).ZG36A3  OK             00159900
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00160000
.ZG36A3               AIF   (K'&LESSTHAN LE 0).ZG36A4  OK               00160100
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00160200
.ZG36A4               AIF   (K'&NOSTORAGE LE 0).ZG36A5  OK              00160300
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00160400
.ZG36A5               AIF   (K'&INVALIDLEN LE 0).ZG36A6  OK             00160500
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00160600
.ZG36A6               AIF   (K'&LSTEMPTY LE 0).ZG36A7  OK               00160700
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00160800
.ZG36A7               AIF   (K'&LSTFULL LE 0).ZG36A8  OK                00160900
&ZCVAL                SETC '&ZCVAL LSTFULL'     INCORRECT KEY USED      00161000
.ZG36A8               AIF   (K'&LSTNONEMPTY LE 0).ZG36A9  OK            00161100
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00161200
.ZG36A9               AIF   (K'&LSTNONFULL LE 0).ZG36A10  OK            00161300
&ZCVAL                SETC '&ZCVAL LSTNONFULL'  INCORRECT KEY USED      00161400
.ZG36A10              AIF   (K'&VALIDATE LE 0).ZG36A11  OK              00161500
&ZCVAL                SETC '&ZCVAL VALIDATE'    INCORRECT KEY USED      00161600
.ZG36A11              AIF   (K'&ZCVAL LE 0).ZG36A12  OK                 00161700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00161800
&ZMS                  SETC  '"REQUEST'                                  00161900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00162000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00162100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00162200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00162300
.ZG36A12              ANOP  ,                                           00162400
.*----------------------------------------------------------------***   00162500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00162600
                      AIF   (N'&VECTORINDEX LE 1).ZG38A  CK NUM         00162700
&ZMS                  SETC  '"VECTORINDEX='                             00162800
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00162900
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00163000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00163100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00163200
.ZG38A                ANOP  ,                                           00163300
.*-------------------------------------------------------------------   00163400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00163500
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00163600
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00163700
                      AIF   (N'&VECTORINDEX GT 1).ZG38B  MULTI          00163800
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00163900
.ZG38B                AIF   (K'&VECTORINDEX(1) GT 0).ZG38C              00164000
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00164100
&ZMS                  SETC  ' '                                         00164200
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00164300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00164400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00164500
.ZG38C                ANOP  ,                                           00164600
.*-------------------------------------------------------------------   00164700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00164800
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG38R  NOT I/O      00164900
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG38R         00165000
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00165100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                00165200
                      AIF   (K'&ZCGPR GT 2).ZG38Q                       00165300
                      AIF   ('&ZCGPR' EQ '0').ZG38Q                     00165400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00165500
                      AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME   00165600
.ZG38P                ANOP  ,                                           00165700
                      AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC        00165800
                      AIF   ('&ZCGPR' LT '2').ZG38Q                     00165900
                      AIF   ('&ZCGPR' LE '12').ZG38R                    00166000
.ZG38Q                ANOP  ,                                           00166100
&ZMS                  SETC  '"VECTORINDEX='                             00166200
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00166300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00166400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00166500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00166600
.ZG38R                ANOP  ,                                           00166700
.*----------------------------------------------------------------***   00166800
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00166900
                      AIF   (N'&BITSTRING LE 1).ZG41A  CK NUM           00167000
&ZMS                  SETC  '"BITSTRING='                               00167100
&ZMS                  SETC  '&ZMS.&BITSTRING"'                          00167200
&ZMS                  SETC  '&ZMS "BITSTRING"'                          00167300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00167400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00167500
.ZG41A                ANOP  ,                                           00167600
.*-------------------------------------------------------------------   00167700
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00167800
&ZXBITSTRING          SETC  'OUTPUT'    SET IN/OUTPUT                   00167900
&XBITSTRING           SETC  '&BITSTRING(1)'     SET XVARIABLE           00168000
                      AIF   (N'&BITSTRING GT 1).ZG41B  MULTI            00168100
&XBITSTRING           SETC  '&BITSTRING'        SET XVARIABLE           00168200
.ZG41B                AIF   (K'&BITSTRING(1) GT 0).ZG41C                00168300
&ZXBITSTRING          SETC  ''          RESET IN/OUTPUT                 00168400
&ZMS                  SETC  ' '                                         00168500
&ZMS                  SETC  '&ZMS "BITSTRING" KEY AND ITS'              00168600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00168700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00168800
.ZG41C                ANOP  ,                                           00168900
.*-------------------------------------------------------------------   00169000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00169100
                      AIF   (K'&ZXBITSTRING LE 0).ZG41R  NOT I/O        00169200
                      AIF   ('&XBITSTRING'(1,1) NE '(').ZG41R           00169300
&ZCGPR                SETC  '&XBITSTRING'(2,K'&XBITSTRING-2)            00169400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                00169500
                      AIF   (K'&ZCGPR GT 2).ZG41Q                       00169600
                      AIF   ('&ZCGPR' EQ '0').ZG41Q                     00169700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00169800
                      AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME   00169900
.ZG41P                ANOP  ,                                           00170000
                      AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC        00170100
                      AIF   ('&ZCGPR' LT '2').ZG41Q                     00170200
                      AIF   ('&ZCGPR' LE '12').ZG41R                    00170300
.ZG41Q                ANOP  ,                                           00170400
&ZMS                  SETC  '"BITSTRING='                               00170500
&ZMS                  SETC  '&ZMS.&BITSTRING"'                          00170600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00170700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00170800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00170900
.ZG41R                ANOP  ,                                           00171000
.*------------------------------------------------------------------    00171100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171200
&XBRANCHTABLE         SETC  ''          INITIALIZE XVARIABLE            00171300
.*-------------------------------------------------------------------   00171400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171500
.ZG45                 ANOP  ,                                           00171600
                      AIF   (K'&BRANCHTABLE(1) LE 0).ZG45A              00171700
&ZTLC                 SETC 'NO'                                         00171800
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG46         00171900
&XBRANCHTABLE         SETC  'NO'        SET KEYWORD                     00172000
                      AIF   (N'&BRANCHTABLE LE 1).ZG45A  CK NUM         00172100
&ZMS                  SETC  '"BRANCHTABLE='                             00172200
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00172300
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00172400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00172500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00172600
.ZG45A                ANOP  ,                                           00172700
.*------------------------------------------------------------------    00172800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00172900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00173000
.ZG45A0               AIF   (K'&ALLEMPVAL LE 0).ZG45A1  OK              00173100
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00173200
.ZG45A1               AIF   (K'&ALLEMPVALFULL LE 0).ZG45A2  OK          00173300
&ZCVAL                SETC '&ZCVAL ALLEMPVALFULL'  INCORRECT KEY USED   00173400
.ZG45A2               AIF   (K'&SOMENEINV LE 0).ZG45A3  OK              00173500
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00173600
.ZG45A3               AIF   (K'&SOMENEINVNF LE 0).ZG45A4  OK            00173700
&ZCVAL                SETC '&ZCVAL SOMENEINVNF'  INCORRECT KEY USED     00173800
.ZG45A4               AIF   (K'&INDXINVALID LE 0).ZG45A5  OK            00173900
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00174000
.ZG45A5               AIF   (K'&INVALIDTOKN LE 0).ZG45A6  OK            00174100
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00174200
.ZG45A6               AIF   (K'&ZCVAL LE 0).ZG45A7  OK                  00174300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00174400
&ZMS                  SETC  '"BRANCHTABLE'                              00174500
&ZMS                  SETC  '&ZMS.=&BRANCHTABLE"'                       00174600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00174700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00174800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00174900
.ZG45A7               ANOP  ,                                           00175000
.*-------------------------------------------------------------------   00175100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00175200
.ZG46                 ANOP  ,                                           00175300
&ZTLC                 SETC 'YES'                                        00175400
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG61         00175500
&XBRANCHTABLE         SETC  'YES'       SET KEYWORD                     00175600
                      AIF   (N'&BRANCHTABLE LE 1).ZG46A  CK NUM         00175700
&ZMS                  SETC  '"BRANCHTABLE='                             00175800
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00175900
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00176000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00176100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00176200
.ZG46A                ANOP  ,                                           00176300
.*----------------------------------------------------------------***   00176400
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00176500
&XALLEVORALLEVF       SETC  ''          INITIALIZE XVARIABLE            00176600
                      AIF   (K'&ALLEMPVAL LE 0).ZG48C                   00176700
&ZXALLEVORALLEVF      SETC  'INPUT'     SET IN/OUTPUT                   00176800
&XALLEVORALLEVF       SETC  'ALLEMPVAL'         SET XVARIABLE           00176900
&ZXALLEMPVAL          SETC  'INPUT'     SET IN/OUTPUT                   00177000
&XALLEMPVAL           SETC  '&ALLEMPVAL(1)'     SET XVARIABLE PARM      00177100
                      AIF   (N'&ALLEMPVAL GT 1).ZG48A                   00177200
&XALLEMPVAL           SETC  '&ALLEMPVAL'        SET XVARIABLE PARM      00177300
.ZG48A                AIF   (N'&ALLEMPVAL LE 1).ZG48B  CK NUM           00177400
&ZMS                  SETC  '"ALLEMPVAL='                               00177500
&ZMS                  SETC  '&ZMS.&ALLEMPVAL"'                          00177600
&ZMS                  SETC  '&ZMS "ALLEMPVAL"'                          00177700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00177800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00177900
.ZG48B                AIF   (K'&XALLEMPVAL GT 0).ZG48C  ONE PARM        00178000
&ZXALLEVORALLEVF      SETC  ''          RESET IN/OUTPUT                 00178100
&ZXALLEMPVAL          SETC  ''          RESET IN/OUTPUT                 00178200
&ZMS                  SETC  ' '                                         00178300
&ZMS                  SETC  '&ZMS "ALLEMPVAL" KEY AND ITS'              00178400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00178500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00178600
.ZG48C                ANOP  ,                                           00178700
.*----------------------------------------------------------------***   00178800
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00178900
                      AIF   (K'&ALLEMPVALFULL LE 0).ZG49D  NO ME KEY    00179000
                      AIF   (N'&ALLEMPVALFULL LE 1).ZG49A  CK NUM       00179100
&ZMS                  SETC  '"ALLEMPVALFULL='                           00179200
&ZMS                  SETC  '&ZMS.&ALLEMPVALFULL"'                      00179300
&ZMS                  SETC  '&ZMS "ALLEMPVALFULL"'                      00179400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00179500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00179600
.ZG49A                AIF   (K'&XALLEVORALLEVF LE 0).ZG49B              00179700
&ZMS                  SETC  '"ALLEMPVALFULL'                            00179800
&ZMS                  SETC  '&ZMS.=&ALLEMPVALFULL"'                     00179900
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00180000
&ZMS                  SETC  '&ZMS "&XALLEVORALLEVF"'                    00180100
                      MNOTE 8,' &ZMS KEY.'                              00180200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00180300
                      AGO   .ZG49D                                      00180400
.*                                                                      00180500
.ZG49B                ANOP  ,                                           00180600
&ZXALLEVORALLEVF      SETC  'INPUT'     SET IN/OUTPUT                   00180700
&XALLEVORALLEVF       SETC  'ALLEMPVALFULL'     SET XVARIABLE           00180800
&ZXALLEMPVALFULL      SETC  'INPUT'     SET IN/OUTPUT                   00180900
&XALLEMPVALFULL       SETC  '&ALLEMPVALFULL(1)'  SET XVARIABLE PARM     00181000
                      AIF   (N'&ALLEMPVALFULL GT 1).ZG49C               00181100
&XALLEMPVALFULL       SETC  '&ALLEMPVALFULL'    SET XVARIABLE PARM      00181200
.ZG49C                AIF   (K'&XALLEMPVALFULL GT 0).ZG49D  ONE PARM    00181300
&ZXALLEVORALLEVF      SETC  ''          RESET IN/OUTPUT                 00181400
&ZXALLEMPVALFULL      SETC  ''          RESET IN/OUTPUT                 00181500
&ZMS                  SETC  ' '                                         00181600
&ZMS                  SETC  '&ZMS "ALLEMPVALFULL" KEY AND ITS'          00181700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00181800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00181900
.ZG49D                ANOP  ,                                           00182000
.*------------------------------------------------------------------    00182100
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00182200
                      AIF   (K'&XALLEVORALLEVF GT 0).ZG50B              00182300
&ZXALLEVORALLEVF      SETC  ''          RESET IN/OUTPUT                 00182400
&ZXALLEMPVAL          SETC  ''          RESET IN/OUTPUT                 00182500
&XALLEVORALLEVF       SETC  ''          ENSURE NULL                     00182600
&XALLEMPVAL           SETC  ''          ENSURE NULL                     00182700
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00182800
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00182900
&ZMS                  SETC  '&ZMS REQUIRED:'                            00183000
&ZMS                  SETC  '&ZMS "ALLEMPVAL"'  VALID ME KEY            00183100
&ZMS                  SETC  '&ZMS OR "ALLEMPVALFULL".'  VALID ME KEY    00183200
                      MNOTE 8,' &ZMS '                                  00183300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00183400
.ZG50B                ANOP  ,                                           00183500
.*-------------------------------------------------------------------   00183600
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00183700
.ZG48ZY  AIF    ('&XALLEVORALLEVF' NE 'ALLEMPVAL').ZG49ZY               00183800
.*-------------------------------------------------------------------   00183900
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00184000
                      AIF   (K'&ZXALLEMPVAL LE 0).ZG48R  NOT I/O        00184100
                      AIF   ('&XALLEMPVAL'(1,1) NE '(').ZG48R           00184200
&ZCGPR                SETC  '&XALLEMPVAL'(2,K'&XALLEMPVAL-2)            00184300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                00184400
                      AIF   (K'&ZCGPR GT 2).ZG48Q                       00184500
                      AIF   ('&ZCGPR' EQ '0').ZG48Q                     00184600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00184700
                      AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME   00184800
.ZG48P                ANOP  ,                                           00184900
                      AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC        00185000
                      AIF   ('&ZCGPR' LT '2').ZG48Q                     00185100
                      AIF   ('&ZCGPR' LE '12').ZG48R                    00185200
.ZG48Q                ANOP  ,                                           00185300
&ZMS                  SETC  '"ALLEMPVAL='                               00185400
&ZMS                  SETC  '&ZMS.&ALLEMPVAL"'                          00185500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00185600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00185700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00185800
.ZG48R                ANOP  ,                                           00185900
.*-------------------------------------------------------------------   00186000
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00186100
.ZG49ZY  AIF    ('&XALLEVORALLEVF' NE 'ALLEMPVALFULL').ZG50ZY           00186200
.*-------------------------------------------------------------------   00186300
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00186400
                      AIF   (K'&ZXALLEMPVALFULL LE 0).ZG49R  NOT I/O    00186500
                      AIF   ('&XALLEMPVALFULL'(1,1) NE '(').ZG49R       00186600
&ZCGPR                SETC  '&XALLEMPVALFULL'(2,K'&XALLEMPVALFULL-2)    00186700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                00186800
                      AIF   (K'&ZCGPR GT 2).ZG49Q                       00186900
                      AIF   ('&ZCGPR' EQ '0').ZG49Q                     00187000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00187100
                      AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME   00187200
.ZG49P                ANOP  ,                                           00187300
                      AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC        00187400
                      AIF   ('&ZCGPR' LT '2').ZG49Q                     00187500
                      AIF   ('&ZCGPR' LE '12').ZG49R                    00187600
.ZG49Q                ANOP  ,                                           00187700
&ZMS                  SETC  '"ALLEMPVALFULL='                           00187800
&ZMS                  SETC  '&ZMS.&ALLEMPVALFULL"'                      00187900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00188000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00188100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00188200
.ZG49R                ANOP  ,                                           00188300
.*-------------------------------------------------------------------   00188400
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00188500
.ZG50ZY               ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00188600
.*----------------------------------------------------------------***   00188700
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00188800
&XNEINVORNEINVNF      SETC  ''          INITIALIZE XVARIABLE            00188900
                      AIF   (K'&SOMENEINV LE 0).ZG52C                   00189000
&ZXNEINVORNEINVNF     SETC  'INPUT'     SET IN/OUTPUT                   00189100
&XNEINVORNEINVNF      SETC  'SOMENEINV'         SET XVARIABLE           00189200
&ZXSOMENEINV          SETC  'INPUT'     SET IN/OUTPUT                   00189300
&XSOMENEINV           SETC  '&SOMENEINV(1)'     SET XVARIABLE PARM      00189400
                      AIF   (N'&SOMENEINV GT 1).ZG52A                   00189500
&XSOMENEINV           SETC  '&SOMENEINV'        SET XVARIABLE PARM      00189600
.ZG52A                AIF   (N'&SOMENEINV LE 1).ZG52B  CK NUM           00189700
&ZMS                  SETC  '"SOMENEINV='                               00189800
&ZMS                  SETC  '&ZMS.&SOMENEINV"'                          00189900
&ZMS                  SETC  '&ZMS "SOMENEINV"'                          00190000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00190100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00190200
.ZG52B                AIF   (K'&XSOMENEINV GT 0).ZG52C  ONE PARM        00190300
&ZXNEINVORNEINVNF     SETC  ''          RESET IN/OUTPUT                 00190400
&ZXSOMENEINV          SETC  ''          RESET IN/OUTPUT                 00190500
&ZMS                  SETC  ' '                                         00190600
&ZMS                  SETC  '&ZMS "SOMENEINV" KEY AND ITS'              00190700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00190800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00190900
.ZG52C                ANOP  ,                                           00191000
.*----------------------------------------------------------------***   00191100
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00191200
                      AIF   (K'&SOMENEINVNF LE 0).ZG53D  NO ME KEY      00191300
                      AIF   (N'&SOMENEINVNF LE 1).ZG53A  CK NUM         00191400
&ZMS                  SETC  '"SOMENEINVNF='                             00191500
&ZMS                  SETC  '&ZMS.&SOMENEINVNF"'                        00191600
&ZMS                  SETC  '&ZMS "SOMENEINVNF"'                        00191700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00191800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00191900
.ZG53A                AIF   (K'&XNEINVORNEINVNF LE 0).ZG53B             00192000
&ZMS                  SETC  '"SOMENEINVNF'                              00192100
&ZMS                  SETC  '&ZMS.=&SOMENEINVNF"'                       00192200
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00192300
&ZMS                  SETC  '&ZMS "&XNEINVORNEINVNF"'                   00192400
                      MNOTE 8,' &ZMS KEY.'                              00192500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00192600
                      AGO   .ZG53D                                      00192700
.*                                                                      00192800
.ZG53B                ANOP  ,                                           00192900
&ZXNEINVORNEINVNF     SETC  'INPUT'     SET IN/OUTPUT                   00193000
&XNEINVORNEINVNF      SETC  'SOMENEINVNF'       SET XVARIABLE           00193100
&ZXSOMENEINVNF        SETC  'INPUT'     SET IN/OUTPUT                   00193200
&XSOMENEINVNF         SETC  '&SOMENEINVNF(1)'   SET XVARIABLE PARM      00193300
                      AIF   (N'&SOMENEINVNF GT 1).ZG53C                 00193400
&XSOMENEINVNF         SETC  '&SOMENEINVNF'      SET XVARIABLE PARM      00193500
.ZG53C                AIF   (K'&XSOMENEINVNF GT 0).ZG53D  ONE PARM      00193600
&ZXNEINVORNEINVNF     SETC  ''          RESET IN/OUTPUT                 00193700
&ZXSOMENEINVNF        SETC  ''          RESET IN/OUTPUT                 00193800
&ZMS                  SETC  ' '                                         00193900
&ZMS                  SETC  '&ZMS "SOMENEINVNF" KEY AND ITS'            00194000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00194100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00194200
.ZG53D                ANOP  ,                                           00194300
.*------------------------------------------------------------------    00194400
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00194500
                      AIF   (K'&XNEINVORNEINVNF GT 0).ZG54B             00194600
&ZXNEINVORNEINVNF     SETC  ''          RESET IN/OUTPUT                 00194700
&ZXSOMENEINV          SETC  ''          RESET IN/OUTPUT                 00194800
&XNEINVORNEINVNF      SETC  ''          ENSURE NULL                     00194900
&XSOMENEINV           SETC  ''          ENSURE NULL                     00195000
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00195100
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00195200
&ZMS                  SETC  '&ZMS REQUIRED:'                            00195300
&ZMS                  SETC  '&ZMS "SOMENEINV"'  VALID ME KEY            00195400
&ZMS                  SETC  '&ZMS OR "SOMENEINVNF".'  VALID ME KEY      00195500
                      MNOTE 8,' &ZMS '                                  00195600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00195700
.ZG54B                ANOP  ,                                           00195800
.*-------------------------------------------------------------------   00195900
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00196000
.ZG52ZY  AIF    ('&XNEINVORNEINVNF' NE 'SOMENEINV').ZG53ZY              00196100
.*-------------------------------------------------------------------   00196200
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00196300
                      AIF   (K'&ZXSOMENEINV LE 0).ZG52R  NOT I/O        00196400
                      AIF   ('&XSOMENEINV'(1,1) NE '(').ZG52R           00196500
&ZCGPR                SETC  '&XSOMENEINV'(2,K'&XSOMENEINV-2)            00196600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                00196700
                      AIF   (K'&ZCGPR GT 2).ZG52Q                       00196800
                      AIF   ('&ZCGPR' EQ '0').ZG52Q                     00196900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00197000
                      AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME   00197100
.ZG52P                ANOP  ,                                           00197200
                      AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC        00197300
                      AIF   ('&ZCGPR' LT '2').ZG52Q                     00197400
                      AIF   ('&ZCGPR' LE '12').ZG52R                    00197500
.ZG52Q                ANOP  ,                                           00197600
&ZMS                  SETC  '"SOMENEINV='                               00197700
&ZMS                  SETC  '&ZMS.&SOMENEINV"'                          00197800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00197900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00198000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00198100
.ZG52R                ANOP  ,                                           00198200
.*-------------------------------------------------------------------   00198300
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00198400
.ZG53ZY  AIF    ('&XNEINVORNEINVNF' NE 'SOMENEINVNF').ZG54ZY            00198500
.*-------------------------------------------------------------------   00198600
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00198700
                      AIF   (K'&ZXSOMENEINVNF LE 0).ZG53R  NOT I/O      00198800
                      AIF   ('&XSOMENEINVNF'(1,1) NE '(').ZG53R         00198900
&ZCGPR                SETC  '&XSOMENEINVNF'(2,K'&XSOMENEINVNF-2)        00199000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                00199100
                      AIF   (K'&ZCGPR GT 2).ZG53Q                       00199200
                      AIF   ('&ZCGPR' EQ '0').ZG53Q                     00199300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00199400
                      AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME   00199500
.ZG53P                ANOP  ,                                           00199600
                      AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC        00199700
                      AIF   ('&ZCGPR' LT '2').ZG53Q                     00199800
                      AIF   ('&ZCGPR' LE '12').ZG53R                    00199900
.ZG53Q                ANOP  ,                                           00200000
&ZMS                  SETC  '"SOMENEINVNF='                             00200100
&ZMS                  SETC  '&ZMS.&SOMENEINVNF"'                        00200200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00200300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00200400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00200500
.ZG53R                ANOP  ,                                           00200600
.*-------------------------------------------------------------------   00200700
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00200800
.ZG54ZY               ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00200900
.*----------------------------------------------------------------***   00201000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00201100
                      AIF   (N'&INDXINVALID LE 1).ZG56A  CK NUM         00201200
&ZMS                  SETC  '"INDXINVALID='                             00201300
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00201400
&ZMS                  SETC  '&ZMS "INDXINVALID"'                        00201500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00201600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00201700
.ZG56A                ANOP  ,                                           00201800
.*-------------------------------------------------------------------   00201900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00202000
&ZXINDXINVALID        SETC  'INPUT'     SET IN/OUTPUT                   00202100
&XINDXINVALID         SETC  '&INDXINVALID(1)'   SET XVARIABLE           00202200
                      AIF   (N'&INDXINVALID GT 1).ZG56B  MULTI          00202300
&XINDXINVALID         SETC  '&INDXINVALID'      SET XVARIABLE           00202400
.ZG56B                AIF   (K'&INDXINVALID(1) GT 0).ZG56C              00202500
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00202600
&ZMS                  SETC  ' '                                         00202700
&ZMS                  SETC  '&ZMS "INDXINVALID" KEY AND ITS'            00202800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00202900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00203000
.ZG56C                ANOP  ,                                           00203100
.*-------------------------------------------------------------------   00203200
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00203300
                      AIF   (K'&ZXINDXINVALID LE 0).ZG56P  NOT I/O      00203400
                      AIF   ('&XINDXINVALID'(1,1) NE '(').ZG56P         00203500
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00203600
&ZMS                  SETC  '"INDXINVALID='                             00203700
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00203800
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00203900
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00204000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00204100
.ZG56P                ANOP  ,                                           00204200
.*----------------------------------------------------------------***   00204300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00204400
                      AIF   (N'&INVALIDTOKN LE 1).ZG59A  CK NUM         00204500
&ZMS                  SETC  '"INVALIDTOKN='                             00204600
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00204700
&ZMS                  SETC  '&ZMS "INVALIDTOKN"'                        00204800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00204900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00205000
.ZG59A                ANOP  ,                                           00205100
.*-------------------------------------------------------------------   00205200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00205300
&ZXINVALIDTOKN        SETC  'INPUT'     SET IN/OUTPUT                   00205400
&XINVALIDTOKN         SETC  '&INVALIDTOKN(1)'   SET XVARIABLE           00205500
                      AIF   (N'&INVALIDTOKN GT 1).ZG59B  MULTI          00205600
&XINVALIDTOKN         SETC  '&INVALIDTOKN'      SET XVARIABLE           00205700
.ZG59B                AIF   (K'&INVALIDTOKN(1) GT 0).ZG59C              00205800
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00205900
&ZMS                  SETC  ' '                                         00206000
&ZMS                  SETC  '&ZMS "INVALIDTOKN" KEY AND ITS'            00206100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00206200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00206300
.ZG59C                ANOP  ,                                           00206400
.*-------------------------------------------------------------------   00206500
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00206600
                      AIF   (K'&ZXINVALIDTOKN LE 0).ZG59P  NOT I/O      00206700
                      AIF   ('&XINVALIDTOKN'(1,1) NE '(').ZG59P         00206800
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00206900
&ZMS                  SETC  '"INVALIDTOKN='                             00207000
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00207100
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00207200
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00207300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00207400
.ZG59P                ANOP  ,                                           00207500
.*------------------------------------------------------------------    00207600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00207700
.ZG61                 ANOP  ,                                           00207800
&ZXBRANCHTABLE        SETC  'INPUT'     SET IN/OUTPUT                   00207900
                      AIF   (K'&XBRANCHTABLE GT 0).ZG61E  VALID ARG     00208000
                      AIF   (T'&BRANCHTABLE EQ 'O').ZG61D  OMITTED      00208100
&ZASYSLNDX            SETA  0                                           00208200
.ZG61A                ANOP  ,           POSITIONAL MACRO KEY            00208300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00208400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG61C            00208500
&ZTLC                 SETC 'BRANCHTABLE'                                00208600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG61A   00208700
.ZG61B                ANOP  ,                                           00208800
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00208900
&ZMS                  SETC  'THE "BRANCHTABLE" KEY'                     00209000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00209100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00209200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00209300
                      AGO   .ZG61E                                      00209400
.ZG61C                ANOP  ,                                           00209500
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00209600
&ZMS                  SETC  '"BRANCHTABLE='                             00209700
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00209800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00209900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00210000
&ZMS                  SETC  '&ZMS "NO"'                                 00210100
&ZMS                  SETC  '&ZMS OR "YES".'                            00210200
                      MNOTE 8,' &ZMS '                                  00210300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00210400
                      AGO   .ZG61E                                      00210500
.ZG61D                ANOP  ,                                           00210600
&XBRANCHTABLE         SETC  'NO'        SET DEFAULT KEYWORD             00210700
.ZG61E                ANOP  ,                                           00210800
.*-------------------------------------------------------------------   00210900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211000
.ZG62                 ANOP  ,                                           00211100
&ZTLC                 SETC 'TESTLISTSTATE'                              00211200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG85             00211300
&XREQUEST             SETC  'TESTLISTSTATE'     SET KEYWORD             00211400
                      AIF   (N'&REQUEST LE 1).ZG62A  CK NUM             00211500
&ZMS                  SETC  '"REQUEST='                                 00211600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00211700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00211800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00211900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00212000
.ZG62A                ANOP  ,                                           00212100
.*------------------------------------------------------------------    00212200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00212300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00212400
.ZG62A0               AIF   (K'&VECTORLEN LE 0).ZG62A1  OK              00212500
&ZCVAL                SETC '&ZCVAL VECTORLEN'   INCORRECT KEY USED      00212600
.ZG62A1               AIF   (K'&ACTUALVECLEN LE 0).ZG62A2  OK           00212700
&ZCVAL                SETC '&ZCVAL ACTUALVECLEN'  INCORRECT KEY USED    00212800
.ZG62A2               AIF   (K'&MODIFYDONE LE 0).ZG62A3  OK             00212900
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00213000
.ZG62A3               AIF   (K'&LESSTHAN LE 0).ZG62A4  OK               00213100
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00213200
.ZG62A4               AIF   (K'&NOSTORAGE LE 0).ZG62A5  OK              00213300
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00213400
.ZG62A5               AIF   (K'&INVALIDLEN LE 0).ZG62A6  OK             00213500
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00213600
.ZG62A6               AIF   (K'&BITSTRING LE 0).ZG62A7  OK              00213700
&ZCVAL                SETC '&ZCVAL BITSTRING'   INCORRECT KEY USED      00213800
.ZG62A7               AIF   (K'&ALLEMPVAL LE 0).ZG62A8  OK              00213900
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00214000
.ZG62A8               AIF   (K'&ALLEMPVALFULL LE 0).ZG62A9  OK          00214100
&ZCVAL                SETC '&ZCVAL ALLEMPVALFULL'  INCORRECT KEY USED   00214200
.ZG62A9               AIF   (K'&SOMENEINV LE 0).ZG62A10  OK             00214300
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00214400
.ZG62A10              AIF   (K'&SOMENEINVNF LE 0).ZG62A11  OK           00214500
&ZCVAL                SETC '&ZCVAL SOMENEINVNF'  INCORRECT KEY USED     00214600
.ZG62A11              AIF   (K'&VALIDATE LE 0).ZG62A12  OK              00214700
&ZCVAL                SETC '&ZCVAL VALIDATE'    INCORRECT KEY USED      00214800
.ZG62A12              AIF   (K'&ZCVAL LE 0).ZG62A13  OK                 00214900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00215000
&ZMS                  SETC  '"REQUEST'                                  00215100
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00215200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00215300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00215400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00215500
.ZG62A13              ANOP  ,                                           00215600
.*----------------------------------------------------------------***   00215700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00215800
                      AIF   (N'&VECTORINDEX LE 1).ZG64A  CK NUM         00215900
&ZMS                  SETC  '"VECTORINDEX='                             00216000
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00216100
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00216200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00216300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00216400
.ZG64A                ANOP  ,                                           00216500
.*-------------------------------------------------------------------   00216600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00216700
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00216800
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00216900
                      AIF   (N'&VECTORINDEX GT 1).ZG64B  MULTI          00217000
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00217100
.ZG64B                AIF   (K'&VECTORINDEX(1) GT 0).ZG64C              00217200
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00217300
&ZMS                  SETC  ' '                                         00217400
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00217500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00217600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00217700
.ZG64C                ANOP  ,                                           00217800
.*-------------------------------------------------------------------   00217900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00218000
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG64R  NOT I/O      00218100
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG64R         00218200
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00218300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG64P                00218400
                      AIF   (K'&ZCGPR GT 2).ZG64Q                       00218500
                      AIF   ('&ZCGPR' EQ '0').ZG64Q                     00218600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00218700
                      AIF   (T'&ZCGPR NE 'N').ZG64Q  INVALID REG NAME   00218800
.ZG64P                ANOP  ,                                           00218900
                      AIF   (T'&ZCGPR NE 'N').ZG64R  NON NUMERIC        00219000
                      AIF   ('&ZCGPR' LT '2').ZG64Q                     00219100
                      AIF   ('&ZCGPR' LE '12').ZG64R                    00219200
.ZG64Q                ANOP  ,                                           00219300
&ZMS                  SETC  '"VECTORINDEX='                             00219400
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00219500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00219600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00219700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00219800
.ZG64R                ANOP  ,                                           00219900
.*------------------------------------------------------------------    00220000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220100
&XBRANCHTABLE         SETC  ''          INITIALIZE XVARIABLE            00220200
.*-------------------------------------------------------------------   00220300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220400
.ZG68                 ANOP  ,                                           00220500
                      AIF   (K'&BRANCHTABLE(1) LE 0).ZG68A              00220600
&ZTLC                 SETC 'NO'                                         00220700
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG69         00220800
&XBRANCHTABLE         SETC  'NO'        SET KEYWORD                     00220900
                      AIF   (N'&BRANCHTABLE LE 1).ZG68A  CK NUM         00221000
&ZMS                  SETC  '"BRANCHTABLE='                             00221100
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00221200
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00221300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00221400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00221500
.ZG68A                ANOP  ,                                           00221600
.*------------------------------------------------------------------    00221700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00221800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00221900
.ZG68A0               AIF   (K'&LSTEMPTY LE 0).ZG68A1  OK               00222000
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00222100
.ZG68A1               AIF   (K'&LSTFULL LE 0).ZG68A2  OK                00222200
&ZCVAL                SETC '&ZCVAL LSTFULL'     INCORRECT KEY USED      00222300
.ZG68A2               AIF   (K'&LSTNONEMPTY LE 0).ZG68A3  OK            00222400
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00222500
.ZG68A3               AIF   (K'&LSTNONFULL LE 0).ZG68A4  OK             00222600
&ZCVAL                SETC '&ZCVAL LSTNONFULL'  INCORRECT KEY USED      00222700
.ZG68A4               AIF   (K'&INDXINVALID LE 0).ZG68A5  OK            00222800
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00222900
.ZG68A5               AIF   (K'&INVALIDTOKN LE 0).ZG68A6  OK            00223000
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00223100
.ZG68A6               AIF   (K'&ZCVAL LE 0).ZG68A7  OK                  00223200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00223300
&ZMS                  SETC  '"BRANCHTABLE'                              00223400
&ZMS                  SETC  '&ZMS.=&BRANCHTABLE"'                       00223500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00223600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00223700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00223800
.ZG68A7               ANOP  ,                                           00223900
.*-------------------------------------------------------------------   00224000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00224100
.ZG69                 ANOP  ,                                           00224200
&ZTLC                 SETC 'YES'                                        00224300
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG84         00224400
&XBRANCHTABLE         SETC  'YES'       SET KEYWORD                     00224500
                      AIF   (N'&BRANCHTABLE LE 1).ZG69A  CK NUM         00224600
&ZMS                  SETC  '"BRANCHTABLE='                             00224700
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00224800
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00224900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00225000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00225100
.ZG69A                ANOP  ,                                           00225200
.*----------------------------------------------------------------***   00225300
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00225400
&XEMPTYFULL           SETC  ''          INITIALIZE XVARIABLE            00225500
                      AIF   (K'&LSTEMPTY LE 0).ZG71C                    00225600
&ZXEMPTYFULL          SETC  'INPUT'     SET IN/OUTPUT                   00225700
&XEMPTYFULL           SETC  'LSTEMPTY'  SET XVARIABLE                   00225800
&ZXLSTEMPTY           SETC  'INPUT'     SET IN/OUTPUT                   00225900
&XLSTEMPTY            SETC  '&LSTEMPTY(1)'      SET XVARIABLE PARM      00226000
                      AIF   (N'&LSTEMPTY GT 1).ZG71A                    00226100
&XLSTEMPTY            SETC  '&LSTEMPTY'         SET XVARIABLE PARM      00226200
.ZG71A                AIF   (N'&LSTEMPTY LE 1).ZG71B  CK NUM            00226300
&ZMS                  SETC  '"LSTEMPTY='                                00226400
&ZMS                  SETC  '&ZMS.&LSTEMPTY"'                           00226500
&ZMS                  SETC  '&ZMS "LSTEMPTY"'                           00226600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00226700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00226800
.ZG71B                AIF   (K'&XLSTEMPTY GT 0).ZG71C  ONE PARM         00226900
&ZXEMPTYFULL          SETC  ''          RESET IN/OUTPUT                 00227000
&ZXLSTEMPTY           SETC  ''          RESET IN/OUTPUT                 00227100
&ZMS                  SETC  ' '                                         00227200
&ZMS                  SETC  '&ZMS "LSTEMPTY" KEY AND ITS'               00227300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00227400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00227500
.ZG71C                ANOP  ,                                           00227600
.*----------------------------------------------------------------***   00227700
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00227800
                      AIF   (K'&LSTFULL LE 0).ZG72D  NO ME KEY          00227900
                      AIF   (N'&LSTFULL LE 1).ZG72A  CK NUM             00228000
&ZMS                  SETC  '"LSTFULL='                                 00228100
&ZMS                  SETC  '&ZMS.&LSTFULL"'                            00228200
&ZMS                  SETC  '&ZMS "LSTFULL"'                            00228300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00228400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00228500
.ZG72A                AIF   (K'&XEMPTYFULL LE 0).ZG72B                  00228600
&ZMS                  SETC  '"LSTFULL'                                  00228700
&ZMS                  SETC  '&ZMS.=&LSTFULL"'                           00228800
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00228900
&ZMS                  SETC  '&ZMS "&XEMPTYFULL"'                        00229000
                      MNOTE 8,' &ZMS KEY.'                              00229100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00229200
                      AGO   .ZG72D                                      00229300
.*                                                                      00229400
.ZG72B                ANOP  ,                                           00229500
&ZXEMPTYFULL          SETC  'INPUT'     SET IN/OUTPUT                   00229600
&XEMPTYFULL           SETC  'LSTFULL'   SET XVARIABLE                   00229700
&ZXLSTFULL            SETC  'INPUT'     SET IN/OUTPUT                   00229800
&XLSTFULL             SETC  '&LSTFULL(1)'       SET XVARIABLE PARM      00229900
                      AIF   (N'&LSTFULL GT 1).ZG72C                     00230000
&XLSTFULL             SETC  '&LSTFULL'  SET XVARIABLE PARM              00230100
.ZG72C                AIF   (K'&XLSTFULL GT 0).ZG72D  ONE PARM          00230200
&ZXEMPTYFULL          SETC  ''          RESET IN/OUTPUT                 00230300
&ZXLSTFULL            SETC  ''          RESET IN/OUTPUT                 00230400
&ZMS                  SETC  ' '                                         00230500
&ZMS                  SETC  '&ZMS "LSTFULL" KEY AND ITS'                00230600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00230700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00230800
.ZG72D                ANOP  ,                                           00230900
.*------------------------------------------------------------------    00231000
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00231100
                      AIF   (K'&XEMPTYFULL GT 0).ZG73B                  00231200
&ZXEMPTYFULL          SETC  ''          RESET IN/OUTPUT                 00231300
&ZXLSTEMPTY           SETC  ''          RESET IN/OUTPUT                 00231400
&XEMPTYFULL           SETC  ''          ENSURE NULL                     00231500
&XLSTEMPTY            SETC  ''          ENSURE NULL                     00231600
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00231700
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00231800
&ZMS                  SETC  '&ZMS REQUIRED:'                            00231900
&ZMS                  SETC  '&ZMS "LSTEMPTY"'   VALID ME KEY            00232000
&ZMS                  SETC  '&ZMS OR "LSTFULL".'  VALID ME KEY          00232100
                      MNOTE 8,' &ZMS '                                  00232200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00232300
.ZG73B                ANOP  ,                                           00232400
.*-------------------------------------------------------------------   00232500
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00232600
.ZG71ZY  AIF    ('&XEMPTYFULL' NE 'LSTEMPTY').ZG72ZY                    00232700
.*-------------------------------------------------------------------   00232800
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00232900
                      AIF   (K'&ZXLSTEMPTY LE 0).ZG71R  NOT I/O         00233000
                      AIF   ('&XLSTEMPTY'(1,1) NE '(').ZG71R            00233100
&ZCGPR                SETC  '&XLSTEMPTY'(2,K'&XLSTEMPTY-2)              00233200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                00233300
                      AIF   (K'&ZCGPR GT 2).ZG71Q                       00233400
                      AIF   ('&ZCGPR' EQ '0').ZG71Q                     00233500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00233600
                      AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME   00233700
.ZG71P                ANOP  ,                                           00233800
                      AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC        00233900
                      AIF   ('&ZCGPR' LT '2').ZG71Q                     00234000
                      AIF   ('&ZCGPR' LE '12').ZG71R                    00234100
.ZG71Q                ANOP  ,                                           00234200
&ZMS                  SETC  '"LSTEMPTY='                                00234300
&ZMS                  SETC  '&ZMS.&LSTEMPTY"'                           00234400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00234500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00234600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00234700
.ZG71R                ANOP  ,                                           00234800
.*-------------------------------------------------------------------   00234900
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00235000
.ZG72ZY  AIF    ('&XEMPTYFULL' NE 'LSTFULL').ZG73ZY                     00235100
.*-------------------------------------------------------------------   00235200
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00235300
                      AIF   (K'&ZXLSTFULL LE 0).ZG72R  NOT I/O          00235400
                      AIF   ('&XLSTFULL'(1,1) NE '(').ZG72R             00235500
&ZCGPR                SETC  '&XLSTFULL'(2,K'&XLSTFULL-2)                00235600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                00235700
                      AIF   (K'&ZCGPR GT 2).ZG72Q                       00235800
                      AIF   ('&ZCGPR' EQ '0').ZG72Q                     00235900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00236000
                      AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME   00236100
.ZG72P                ANOP  ,                                           00236200
                      AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC        00236300
                      AIF   ('&ZCGPR' LT '2').ZG72Q                     00236400
                      AIF   ('&ZCGPR' LE '12').ZG72R                    00236500
.ZG72Q                ANOP  ,                                           00236600
&ZMS                  SETC  '"LSTFULL='                                 00236700
&ZMS                  SETC  '&ZMS.&LSTFULL"'                            00236800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00236900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00237000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00237100
.ZG72R                ANOP  ,                                           00237200
.*-------------------------------------------------------------------   00237300
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00237400
.ZG73ZY               ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00237500
.*----------------------------------------------------------------***   00237600
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00237700
&XNOEMPTYNOFULL       SETC  ''          INITIALIZE XVARIABLE            00237800
                      AIF   (K'&LSTNONEMPTY LE 0).ZG75C                 00237900
&ZXNOEMPTYNOFULL      SETC  'INPUT'     SET IN/OUTPUT                   00238000
&XNOEMPTYNOFULL       SETC  'LSTNONEMPTY'       SET XVARIABLE           00238100
&ZXLSTNONEMPTY        SETC  'INPUT'     SET IN/OUTPUT                   00238200
&XLSTNONEMPTY         SETC  '&LSTNONEMPTY(1)'   SET XVARIABLE PARM      00238300
                      AIF   (N'&LSTNONEMPTY GT 1).ZG75A                 00238400
&XLSTNONEMPTY         SETC  '&LSTNONEMPTY'      SET XVARIABLE PARM      00238500
.ZG75A                AIF   (N'&LSTNONEMPTY LE 1).ZG75B  CK NUM         00238600
&ZMS                  SETC  '"LSTNONEMPTY='                             00238700
&ZMS                  SETC  '&ZMS.&LSTNONEMPTY"'                        00238800
&ZMS                  SETC  '&ZMS "LSTNONEMPTY"'                        00238900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00239000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00239100
.ZG75B                AIF   (K'&XLSTNONEMPTY GT 0).ZG75C  ONE PARM      00239200
&ZXNOEMPTYNOFULL      SETC  ''          RESET IN/OUTPUT                 00239300
&ZXLSTNONEMPTY        SETC  ''          RESET IN/OUTPUT                 00239400
&ZMS                  SETC  ' '                                         00239500
&ZMS                  SETC  '&ZMS "LSTNONEMPTY" KEY AND ITS'            00239600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00239700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00239800
.ZG75C                ANOP  ,                                           00239900
.*----------------------------------------------------------------***   00240000
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00240100
                      AIF   (K'&LSTNONFULL LE 0).ZG76D  NO ME KEY       00240200
                      AIF   (N'&LSTNONFULL LE 1).ZG76A  CK NUM          00240300
&ZMS                  SETC  '"LSTNONFULL='                              00240400
&ZMS                  SETC  '&ZMS.&LSTNONFULL"'                         00240500
&ZMS                  SETC  '&ZMS "LSTNONFULL"'                         00240600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00240700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00240800
.ZG76A                AIF   (K'&XNOEMPTYNOFULL LE 0).ZG76B              00240900
&ZMS                  SETC  '"LSTNONFULL'                               00241000
&ZMS                  SETC  '&ZMS.=&LSTNONFULL"'                        00241100
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00241200
&ZMS                  SETC  '&ZMS "&XNOEMPTYNOFULL"'                    00241300
                      MNOTE 8,' &ZMS KEY.'                              00241400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00241500
                      AGO   .ZG76D                                      00241600
.*                                                                      00241700
.ZG76B                ANOP  ,                                           00241800
&ZXNOEMPTYNOFULL      SETC  'INPUT'     SET IN/OUTPUT                   00241900
&XNOEMPTYNOFULL       SETC  'LSTNONFULL'        SET XVARIABLE           00242000
&ZXLSTNONFULL         SETC  'INPUT'     SET IN/OUTPUT                   00242100
&XLSTNONFULL          SETC  '&LSTNONFULL(1)'    SET XVARIABLE PARM      00242200
                      AIF   (N'&LSTNONFULL GT 1).ZG76C                  00242300
&XLSTNONFULL          SETC  '&LSTNONFULL'       SET XVARIABLE PARM      00242400
.ZG76C                AIF   (K'&XLSTNONFULL GT 0).ZG76D  ONE PARM       00242500
&ZXNOEMPTYNOFULL      SETC  ''          RESET IN/OUTPUT                 00242600
&ZXLSTNONFULL         SETC  ''          RESET IN/OUTPUT                 00242700
&ZMS                  SETC  ' '                                         00242800
&ZMS                  SETC  '&ZMS "LSTNONFULL" KEY AND ITS'             00242900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00243000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00243100
.ZG76D                ANOP  ,                                           00243200
.*------------------------------------------------------------------    00243300
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00243400
                      AIF   (K'&XNOEMPTYNOFULL GT 0).ZG77B              00243500
&ZXNOEMPTYNOFULL      SETC  ''          RESET IN/OUTPUT                 00243600
&ZXLSTNONEMPTY        SETC  ''          RESET IN/OUTPUT                 00243700
&XNOEMPTYNOFULL       SETC  ''          ENSURE NULL                     00243800
&XLSTNONEMPTY         SETC  ''          ENSURE NULL                     00243900
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00244000
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00244100
&ZMS                  SETC  '&ZMS REQUIRED:'                            00244200
&ZMS                  SETC  '&ZMS "LSTNONEMPTY"'  VALID ME KEY          00244300
&ZMS                  SETC  '&ZMS OR "LSTNONFULL".'  VALID ME KEY       00244400
                      MNOTE 8,' &ZMS '                                  00244500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00244600
.ZG77B                ANOP  ,                                           00244700
.*-------------------------------------------------------------------   00244800
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00244900
.ZG75ZY  AIF    ('&XNOEMPTYNOFULL' NE 'LSTNONEMPTY').ZG76ZY             00245000
.*-------------------------------------------------------------------   00245100
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00245200
                      AIF   (K'&ZXLSTNONEMPTY LE 0).ZG75R  NOT I/O      00245300
                      AIF   ('&XLSTNONEMPTY'(1,1) NE '(').ZG75R         00245400
&ZCGPR                SETC  '&XLSTNONEMPTY'(2,K'&XLSTNONEMPTY-2)        00245500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG75P                00245600
                      AIF   (K'&ZCGPR GT 2).ZG75Q                       00245700
                      AIF   ('&ZCGPR' EQ '0').ZG75Q                     00245800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00245900
                      AIF   (T'&ZCGPR NE 'N').ZG75Q  INVALID REG NAME   00246000
.ZG75P                ANOP  ,                                           00246100
                      AIF   (T'&ZCGPR NE 'N').ZG75R  NON NUMERIC        00246200
                      AIF   ('&ZCGPR' LT '2').ZG75Q                     00246300
                      AIF   ('&ZCGPR' LE '12').ZG75R                    00246400
.ZG75Q                ANOP  ,                                           00246500
&ZMS                  SETC  '"LSTNONEMPTY='                             00246600
&ZMS                  SETC  '&ZMS.&LSTNONEMPTY"'                        00246700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00246800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00246900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00247000
.ZG75R                ANOP  ,                                           00247100
.*-------------------------------------------------------------------   00247200
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00247300
.ZG76ZY  AIF    ('&XNOEMPTYNOFULL' NE 'LSTNONFULL').ZG77ZY              00247400
.*-------------------------------------------------------------------   00247500
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00247600
                      AIF   (K'&ZXLSTNONFULL LE 0).ZG76R  NOT I/O       00247700
                      AIF   ('&XLSTNONFULL'(1,1) NE '(').ZG76R          00247800
&ZCGPR                SETC  '&XLSTNONFULL'(2,K'&XLSTNONFULL-2)          00247900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                00248000
                      AIF   (K'&ZCGPR GT 2).ZG76Q                       00248100
                      AIF   ('&ZCGPR' EQ '0').ZG76Q                     00248200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00248300
                      AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME   00248400
.ZG76P                ANOP  ,                                           00248500
                      AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC        00248600
                      AIF   ('&ZCGPR' LT '2').ZG76Q                     00248700
                      AIF   ('&ZCGPR' LE '12').ZG76R                    00248800
.ZG76Q                ANOP  ,                                           00248900
&ZMS                  SETC  '"LSTNONFULL='                              00249000
&ZMS                  SETC  '&ZMS.&LSTNONFULL"'                         00249100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00249200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00249300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00249400
.ZG76R                ANOP  ,                                           00249500
.*-------------------------------------------------------------------   00249600
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00249700
.ZG77ZY               ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00249800
.*----------------------------------------------------------------***   00249900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00250000
                      AIF   (N'&INDXINVALID LE 1).ZG79A  CK NUM         00250100
&ZMS                  SETC  '"INDXINVALID='                             00250200
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00250300
&ZMS                  SETC  '&ZMS "INDXINVALID"'                        00250400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00250500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00250600
.ZG79A                ANOP  ,                                           00250700
.*-------------------------------------------------------------------   00250800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00250900
&ZXINDXINVALID        SETC  'INPUT'     SET IN/OUTPUT                   00251000
&XINDXINVALID         SETC  '&INDXINVALID(1)'   SET XVARIABLE           00251100
                      AIF   (N'&INDXINVALID GT 1).ZG79B  MULTI          00251200
&XINDXINVALID         SETC  '&INDXINVALID'      SET XVARIABLE           00251300
.ZG79B                AIF   (K'&INDXINVALID(1) GT 0).ZG79C              00251400
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00251500
&ZMS                  SETC  ' '                                         00251600
&ZMS                  SETC  '&ZMS "INDXINVALID" KEY AND ITS'            00251700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00251800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00251900
.ZG79C                ANOP  ,                                           00252000
.*-------------------------------------------------------------------   00252100
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00252200
                      AIF   (K'&ZXINDXINVALID LE 0).ZG79P  NOT I/O      00252300
                      AIF   ('&XINDXINVALID'(1,1) NE '(').ZG79P         00252400
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00252500
&ZMS                  SETC  '"INDXINVALID='                             00252600
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00252700
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00252800
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00252900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00253000
.ZG79P                ANOP  ,                                           00253100
.*----------------------------------------------------------------***   00253200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00253300
                      AIF   (N'&INVALIDTOKN LE 1).ZG82A  CK NUM         00253400
&ZMS                  SETC  '"INVALIDTOKN='                             00253500
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00253600
&ZMS                  SETC  '&ZMS "INVALIDTOKN"'                        00253700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00253800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00253900
.ZG82A                ANOP  ,                                           00254000
.*-------------------------------------------------------------------   00254100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00254200
&ZXINVALIDTOKN        SETC  'INPUT'     SET IN/OUTPUT                   00254300
&XINVALIDTOKN         SETC  '&INVALIDTOKN(1)'   SET XVARIABLE           00254400
                      AIF   (N'&INVALIDTOKN GT 1).ZG82B  MULTI          00254500
&XINVALIDTOKN         SETC  '&INVALIDTOKN'      SET XVARIABLE           00254600
.ZG82B                AIF   (K'&INVALIDTOKN(1) GT 0).ZG82C              00254700
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00254800
&ZMS                  SETC  ' '                                         00254900
&ZMS                  SETC  '&ZMS "INVALIDTOKN" KEY AND ITS'            00255000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00255100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00255200
.ZG82C                ANOP  ,                                           00255300
.*-------------------------------------------------------------------   00255400
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00255500
                      AIF   (K'&ZXINVALIDTOKN LE 0).ZG82P  NOT I/O      00255600
                      AIF   ('&XINVALIDTOKN'(1,1) NE '(').ZG82P         00255700
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00255800
&ZMS                  SETC  '"INVALIDTOKN='                             00255900
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00256000
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00256100
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00256200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00256300
.ZG82P                ANOP  ,                                           00256400
.*------------------------------------------------------------------    00256500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00256600
.ZG84                 ANOP  ,                                           00256700
&ZXBRANCHTABLE        SETC  'INPUT'     SET IN/OUTPUT                   00256800
                      AIF   (K'&XBRANCHTABLE GT 0).ZG84E  VALID ARG     00256900
                      AIF   (T'&BRANCHTABLE EQ 'O').ZG84D  OMITTED      00257000
&ZASYSLNDX            SETA  0                                           00257100
.ZG84A                ANOP  ,           POSITIONAL MACRO KEY            00257200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00257300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG84C            00257400
&ZTLC                 SETC 'BRANCHTABLE'                                00257500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG84A   00257600
.ZG84B                ANOP  ,                                           00257700
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00257800
&ZMS                  SETC  'THE "BRANCHTABLE" KEY'                     00257900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00258000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00258100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00258200
                      AGO   .ZG84E                                      00258300
.ZG84C                ANOP  ,                                           00258400
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00258500
&ZMS                  SETC  '"BRANCHTABLE='                             00258600
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00258700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00258800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00258900
&ZMS                  SETC  '&ZMS "NO"'                                 00259000
&ZMS                  SETC  '&ZMS OR "YES".'                            00259100
                      MNOTE 8,' &ZMS '                                  00259200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00259300
                      AGO   .ZG84E                                      00259400
.ZG84D                ANOP  ,                                           00259500
&XBRANCHTABLE         SETC  'NO'        SET DEFAULT KEYWORD             00259600
.ZG84E                ANOP  ,                                           00259700
.*-------------------------------------------------------------------   00259800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00259900
.ZG85                 ANOP  ,                                           00260000
&ZTLC                 SETC 'TESTLOCALCACHE'                             00260100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG97             00260200
&XREQUEST             SETC  'TESTLOCALCACHE'    SET KEYWORD             00260300
                      AIF   (N'&REQUEST LE 1).ZG85A  CK NUM             00260400
&ZMS                  SETC  '"REQUEST='                                 00260500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00260600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00260700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00260800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00260900
.ZG85A                ANOP  ,                                           00261000
.*------------------------------------------------------------------    00261100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00261200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00261300
.ZG85A0               AIF   (K'&VECTORLEN LE 0).ZG85A1  OK              00261400
&ZCVAL                SETC '&ZCVAL VECTORLEN'   INCORRECT KEY USED      00261500
.ZG85A1               AIF   (K'&ACTUALVECLEN LE 0).ZG85A2  OK           00261600
&ZCVAL                SETC '&ZCVAL ACTUALVECLEN'  INCORRECT KEY USED    00261700
.ZG85A2               AIF   (K'&BRANCHTABLE LE 0).ZG85A3  OK            00261800
&ZCVAL                SETC '&ZCVAL BRANCHTABLE'  INCORRECT KEY USED     00261900
.ZG85A3               AIF   (K'&MODIFYDONE LE 0).ZG85A4  OK             00262000
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00262100
.ZG85A4               AIF   (K'&LESSTHAN LE 0).ZG85A5  OK               00262200
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00262300
.ZG85A5               AIF   (K'&NOSTORAGE LE 0).ZG85A6  OK              00262400
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00262500
.ZG85A6               AIF   (K'&INVALIDTOKN LE 0).ZG85A7  OK            00262600
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00262700
.ZG85A7               AIF   (K'&INVALIDLEN LE 0).ZG85A8  OK             00262800
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00262900
.ZG85A8               AIF   (K'&BITSTRING LE 0).ZG85A9  OK              00263000
&ZCVAL                SETC '&ZCVAL BITSTRING'   INCORRECT KEY USED      00263100
.ZG85A9               AIF   (K'&ALLEMPVAL LE 0).ZG85A10  OK             00263200
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00263300
.ZG85A10              AIF   (K'&ALLEMPVALFULL LE 0).ZG85A11  OK         00263400
&ZCVAL                SETC '&ZCVAL ALLEMPVALFULL'  INCORRECT KEY USED   00263500
.ZG85A11              AIF   (K'&SOMENEINV LE 0).ZG85A12  OK             00263600
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00263700
.ZG85A12              AIF   (K'&SOMENEINVNF LE 0).ZG85A13  OK           00263800
&ZCVAL                SETC '&ZCVAL SOMENEINVNF'  INCORRECT KEY USED     00263900
.ZG85A13              AIF   (K'&INDXINVALID LE 0).ZG85A14  OK           00264000
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00264100
.ZG85A14              AIF   (K'&LSTEMPTY LE 0).ZG85A15  OK              00264200
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00264300
.ZG85A15              AIF   (K'&LSTFULL LE 0).ZG85A16  OK               00264400
&ZCVAL                SETC '&ZCVAL LSTFULL'     INCORRECT KEY USED      00264500
.ZG85A16              AIF   (K'&LSTNONEMPTY LE 0).ZG85A17  OK           00264600
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00264700
.ZG85A17              AIF   (K'&LSTNONFULL LE 0).ZG85A18  OK            00264800
&ZCVAL                SETC '&ZCVAL LSTNONFULL'  INCORRECT KEY USED      00264900
.ZG85A18              AIF   (K'&ZCVAL LE 0).ZG85A19  OK                 00265000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00265100
                      AIF  (K'&ZCVAL LE 160).ZG85A19A                   00265200
&ZCVAL                SETC '&ZCVAL'(1,160)                              00265300
&ZCVAL                SETC '&ZCVAL....'                                 00265400
.ZG85A19A             ANOP                                              00265500
&ZMS                  SETC  '"REQUEST'                                  00265600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00265700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00265800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00265900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00266000
.ZG85A19              ANOP  ,                                           00266100
.*------------------------------------------------------------------    00266200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00266300
&XVALIDATE            SETC  ''          INITIALIZE XVARIABLE            00266400
.*-------------------------------------------------------------------   00266500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00266600
.ZG88                 ANOP  ,                                           00266700
                      AIF   (K'&VALIDATE(1) LE 0).ZG88A                 00266800
&ZTLC                 SETC 'YES'                                        00266900
                      AIF   ('&VALIDATE(1)' NE '&ZTLC').ZG92            00267000
&XVALIDATE            SETC  'YES'       SET KEYWORD                     00267100
                      AIF   (N'&VALIDATE LE 1).ZG88A  CK NUM            00267200
&ZMS                  SETC  '"VALIDATE='                                00267300
&ZMS                  SETC  '&ZMS.&VALIDATE"'                           00267400
&ZMS                  SETC  '&ZMS "VALIDATE"'                           00267500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00267600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00267700
.ZG88A                ANOP  ,                                           00267800
.*----------------------------------------------------------------***   00267900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00268000
                      AIF   (N'&VECTORINDEX LE 1).ZG90A  CK NUM         00268100
&ZMS                  SETC  '"VECTORINDEX='                             00268200
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00268300
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00268400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00268500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00268600
.ZG90A                ANOP  ,                                           00268700
.*-------------------------------------------------------------------   00268800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00268900
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00269000
&XVECTORINDEX         SETC  'NO_VECTORINDEX'                            00269100
                      AIF   (K'&VECTORINDEX(1) LE 0).ZG90B  PARM        00269200
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00269300
                      AIF   (N'&VECTORINDEX GT 1).ZG90B  MULTI          00269400
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00269500
.ZG90B                ANOP  ,                                           00269600
.*-------------------------------------------------------------------   00269700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00269800
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG90R  NOT I/O      00269900
         AIF   ('&XVECTORINDEX' EQ 'NO_VECTORINDEX').ZG90R              00270000
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG90R         00270100
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00270200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                00270300
                      AIF   (K'&ZCGPR GT 2).ZG90Q                       00270400
                      AIF   ('&ZCGPR' EQ '0').ZG90Q                     00270500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00270600
                      AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME   00270700
.ZG90P                ANOP  ,                                           00270800
                      AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC        00270900
                      AIF   ('&ZCGPR' LT '2').ZG90Q                     00271000
                      AIF   ('&ZCGPR' LE '12').ZG90R                    00271100
.ZG90Q                ANOP  ,                                           00271200
&ZMS                  SETC  '"VECTORINDEX='                             00271300
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00271400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00271500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00271600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00271700
.ZG90R                ANOP  ,                                           00271800
.*-------------------------------------------------------------------   00271900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00272000
.ZG92                 ANOP  ,                                           00272100
&ZTLC                 SETC 'NO'                                         00272200
                      AIF   ('&VALIDATE(1)' NE '&ZTLC').ZG96            00272300
&XVALIDATE            SETC  'NO'        SET KEYWORD                     00272400
                      AIF   (N'&VALIDATE LE 1).ZG92A  CK NUM            00272500
&ZMS                  SETC  '"VALIDATE='                                00272600
&ZMS                  SETC  '&ZMS.&VALIDATE"'                           00272700
&ZMS                  SETC  '&ZMS "VALIDATE"'                           00272800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00272900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00273000
.ZG92A                ANOP  ,                                           00273100
.*----------------------------------------------------------------***   00273200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00273300
                      AIF   (N'&VECTORINDEX LE 1).ZG94A  CK NUM         00273400
&ZMS                  SETC  '"VECTORINDEX='                             00273500
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00273600
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00273700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00273800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00273900
.ZG94A                ANOP  ,                                           00274000
.*-------------------------------------------------------------------   00274100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00274200
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00274300
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00274400
                      AIF   (N'&VECTORINDEX GT 1).ZG94B  MULTI          00274500
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00274600
.ZG94B                AIF   (K'&VECTORINDEX(1) GT 0).ZG94C              00274700
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00274800
&ZMS                  SETC  ' '                                         00274900
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00275000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00275100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00275200
.ZG94C                ANOP  ,                                           00275300
.*-------------------------------------------------------------------   00275400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00275500
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG94R  NOT I/O      00275600
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG94R         00275700
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00275800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG94P                00275900
                      AIF   (K'&ZCGPR GT 2).ZG94Q                       00276000
                      AIF   ('&ZCGPR' EQ '0').ZG94Q                     00276100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00276200
                      AIF   (T'&ZCGPR NE 'N').ZG94Q  INVALID REG NAME   00276300
.ZG94P                ANOP  ,                                           00276400
                      AIF   (T'&ZCGPR NE 'N').ZG94R  NON NUMERIC        00276500
                      AIF   ('&ZCGPR' LT '2').ZG94Q                     00276600
                      AIF   ('&ZCGPR' LE '12').ZG94R                    00276700
.ZG94Q                ANOP  ,                                           00276800
&ZMS                  SETC  '"VECTORINDEX='                             00276900
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00277000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00277100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00277200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00277300
.ZG94R                ANOP  ,                                           00277400
.*------------------------------------------------------------------    00277500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00277600
.ZG96                 ANOP  ,                                           00277700
&ZXVALIDATE           SETC  'INPUT'     SET IN/OUTPUT                   00277800
                      AIF   (K'&XVALIDATE GT 0).ZG96E  VALID ARG        00277900
                      AIF   (T'&VALIDATE EQ 'O').ZG96D  OMITTED         00278000
&ZASYSLNDX            SETA  0                                           00278100
.ZG96A                ANOP  ,           POSITIONAL MACRO KEY            00278200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00278300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG96C            00278400
&ZTLC                 SETC 'VALIDATE'                                   00278500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG96A   00278600
.ZG96B                ANOP  ,                                           00278700
&ZXVALIDATE           SETC  ''          RESET IN/OUTPUT                 00278800
&ZMS                  SETC  'THE "VALIDATE" KEY'                        00278900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00279000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00279100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00279200
                      AGO   .ZG96E                                      00279300
.ZG96C                ANOP  ,                                           00279400
&ZXVALIDATE           SETC  ''          RESET IN/OUTPUT                 00279500
&ZMS                  SETC  '"VALIDATE='                                00279600
&ZMS                  SETC  '&ZMS.&VALIDATE"'                           00279700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00279800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00279900
&ZMS                  SETC  '&ZMS "YES"'                                00280000
&ZMS                  SETC  '&ZMS OR "NO".'                             00280100
                      MNOTE 8,' &ZMS '                                  00280200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00280300
                      AGO   .ZG96E                                      00280400
.ZG96D                ANOP  ,                                           00280500
&XVALIDATE            SETC  'YES'       SET DEFAULT KEYWORD             00280600
.ZG96E                ANOP  ,                                           00280700
.*------------------------------------------------------------------    00280800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00280900
.ZG97                 ANOP  ,                                           00281000
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   00281100
                      AIF   (K'&XREQUEST GT 0).ZG97E  VALID ARG         00281200
                      AIF   (T'&REQUEST EQ 'O').ZG97D  OMITTED          00281300
&ZASYSLNDX            SETA  0                                           00281400
.ZG97A                ANOP  ,           POSITIONAL MACRO KEY            00281500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00281600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG97C            00281700
&ZTLC                 SETC 'REQUEST'                                    00281800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG97A   00281900
.ZG97B                ANOP  ,                                           00282000
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00282100
&ZMS                  SETC  'THE "REQUEST" KEY'                         00282200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00282300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00282400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00282500
                      AGO   .ZG97E                                      00282600
.ZG97C                ANOP  ,                                           00282700
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00282800
&ZMS                  SETC  '"REQUEST='                                 00282900
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00283000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00283100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00283200
&ZMS                  SETC  '&ZMS "MODIFYVECTORSIZE",'                  00283300
&ZMS                  SETC  '&ZMS "LTVECENTRIES",'                      00283400
&ZMS                  SETC  '&ZMS "TESTLISTSTATE",'                     00283500
&ZMS                  SETC  '&ZMS OR "TESTLOCALCACHE".'                 00283600
                      MNOTE 8,' &ZMS '                                  00283700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00283800
                      AGO   .ZG97E                                      00283900
.ZG97D                ANOP  ,                                           00284000
&XREQUEST             SETC  'MODIFYVECTORSIZE'  SET DEFAULT KEYWORD     00284100
.ZG97E                ANOP  ,                                           00284200
.*------------------------------------------------------------------    00284300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00284400
                      AIF   (K'&REQUEST(1) GT 0).ZG97F  PARM            00284500
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             00284600
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00284700
&ZMS                  SETC  'THE'                                       00284800
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS'                00284900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00285000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00285100
&ZMS                  SETC  '&ZMS "MODIFYVECTORSIZE",'                  00285200
&ZMS                  SETC  '&ZMS "LTVECENTRIES",'                      00285300
&ZMS                  SETC  '&ZMS "TESTLISTSTATE",'                     00285400
&ZMS                  SETC  '&ZMS OR "TESTLOCALCACHE".'                 00285500
                      MNOTE 8,' &ZMS '                                  00285600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00285700
.ZG97F                ANOP  ,                                           00285800
.*----------------------------------------------------------------***   00285900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00286000
                      AIF   (N'&RETCODE LE 1).ZG99A  CK NUM             00286100
&ZMS                  SETC  '"RETCODE='                                 00286200
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00286300
&ZMS                  SETC  '&ZMS "RETCODE"'                            00286400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00286500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00286600
.ZG99A                ANOP  ,                                           00286700
.*-------------------------------------------------------------------   00286800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00286900
                      AIF   (K'&RETCODE(1) LE 0).ZG99C  NO PARM         00287000
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      00287100
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           00287200
                      AIF   (N'&RETCODE GT 1).ZG99C                     00287300
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   00287400
.ZG99C                ANOP  ,                                           00287500
.*-------------------------------------------------------------------   00287600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00287700
                      AIF   (K'&ZXRETCODE LE 0).ZG99R  NOT I/O          00287800
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG99R             00287900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00288000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                00288100
                      AIF   (K'&ZCGPR GT 2).ZG99Q                       00288200
                      AIF   ('&ZCGPR' EQ '0').ZG99Q                     00288300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00288400
                      AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME   00288500
.ZG99P                ANOP  ,                                           00288600
                      AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC        00288700
                      AIF   ('&ZCGPR' EQ '15').ZG99R                    00288800
                      AIF   ('&ZCGPR' LT '2').ZG99Q                     00288900
                      AIF   ('&ZCGPR' LE '12').ZG99R                    00289000
.ZG99Q                ANOP  ,                                           00289100
&ZMS                  SETC  '"RETCODE='                                 00289200
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00289300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00289400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'    00289500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00289600
.ZG99R                ANOP  ,                                           00289700
.******************************************************************     00289800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00289900
.******************************************************************     00290000
                      ACTR  10000                                       00290100
.*----------------------------------------------------------------***   00290200
.***AH.P02 EXTRA POSITIONALS                                            00290300
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        00290400
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        00290500
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    00290600
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     00290700
.ZGLISTX1             ANOP  ,                                           00290800
&ZCVAL                SETC  ''          ERROR FIELD                     00290900
&ZAWRK                SETA  0           POSITIONAL NUMBER               00291000
.ZGLIST2              ANOP  ,                                           00291100
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 00291200
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        00291300
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             00291400
                      AGO   .ZGLIST2                                    00291500
.*                                                                      00291600
.ZGLIST3              ANOP  ,                                           00291700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          00291800
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'                   00291900
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             00292000
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      00292100
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              00292200
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      00292300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00292400
.ZGLISTX              ANOP  ,                                           00292500
&ZASYSLNDX            SETA  0                                           00292600
.*******************************************************************    00292700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00292800
.*******************************************************************    00292900
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        00293000
.*******************************************************************    00293100
.***AE.01  START OF IXLVECTR MACRO CODE                                 00293200
.*******************************************************************    00293300
                      LCLC  &M0M0001                 NAME               00293400
&M0M0001              SETC  '&XLABEL'                SET NAME           00293500
                      AIF   (K'&XLABEL NE 0).XLAB2                      00293600
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       00293700
.*                                                                      00293800
.XLAB2                ANOP  ,                                           00293900
&M0M0001 DS    0H                             IXLVECTR-0                00294000
.*******************************************************************    00294100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00294200
.*******************************************************************    00294300
              PUSH  PRINT                                               00294400
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  00294500
                      PRINT OFF         ++ PR01                         00294600
                      AGO   .ZPRNTXX                                    00294700
.ZPRINTX              PRINT ON                                          00294800
.ZPRNTXX              ANOP  ,                                           00294900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00295000
         LCLC  &ZYES                      CHARACTER TOO LONG VARIABLE   00295100
         LCLC  &ZNO                       CHARACTER TOO LONG VARIABLE   00295200
         LCLC  &PVPASM                    CHARACTER TOO LONG VARIABLE   00295300
&BRREG   SETC '(15)'                                                    00295400
&ZYES    SETC 'YES'                                                     00295500
.********************************************************************   00295600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00295700
.********************************************************************   00295800
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL  @D1A   00295900
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  00296000
.*                                                                      00296100
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  00296200
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   00296300
                      SPLEVEL  TEST                                     00296400
.ZSYS2                ANOP  ,                                           00296500
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       00296600
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       00296700
                      SYSSTATE TEST                                     00296800
                      AGO   .ZSYS4                                      00296900
.ZSYS3                ANOP  ,                                           00297000
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         00297100
.ZSYS4                ANOP  ,                                           00297200
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC1  SYSTATE PRIMARY    00297300
         SAC  0                                                         00297400
.SETUPPRIMARYASC1 ANOP ,                                                00297500
.LOADTKN AIF  ('&VECTORTOKEN='(1,1) EQ '(').DHS1                        00297600
         LA   1,&VECTORTOKEN                                            00297700
         AGO  .DHS2                                                     00297800
.DHS1    ANOP ,                                                         00297900
         LR   1,&VECTORTOKEN                                            00298000
.DHS2    ANOP ,                                                         00298100
.REQ1    AIF   ('&REQUEST(1)' NE 'MODIFYVECTORSIZE').REQ2               00298200
.SAVE1   AIF  ('&WORKAREA='(1,1) EQ '(').GLK11                          00298300
         STM  2,5,&WORKAREA                                             00298400
         AGO  .GLK21                                                    00298500
.GLK11   ANOP ,                                                         00298600
         STM  2,5,0&WORKAREA                                            00298700
.GLK21   ANOP ,                                                         00298800
         AIF  ('&VECTORLEN='(1,1) EQ '(').PVP5                          00298900
         L    4,&VECTORLEN                                              00299000
         AGO  .PVP6                                                     00299100
.PVP5    ANOP ,                                                         00299200
         L    4,0&VECTORLEN                                             00299300
.PVP6    ANOP ,                                                         00299400
         L     15,16(0,0)              Get CVT address                  00299500
         L     15,140(15,0)            Get ECVT address                 00299600
         L     15,256(15,0)            Get Xrat address                 00299700
         L     15,52(15,0)             Get entry-point address          00299800
         BALR  14,15                   Branch to routine                00299900
         LR    0,4                                                      00300000
.RSTOR1  AIF  ('&WORKAREA='(1,1) EQ '(').GLK31                          00300100
         LM   2,5,&WORKAREA                                             00300200
         AGO  .GLK41                                                    00300300
.GLK31   ANOP ,                                                         00300400
         LM   2,5,0&WORKAREA                                            00300500
.GLK41   ANOP ,                                                         00300600
         AIF  ('&ACTUALVECLEN='(1,1) EQ '(').RET5                       00300700
         ST   0,&ACTUALVECLEN                                    @01C   00300800
         AGO  .MVS1                                                     00300900
.RET5    ANOP ,                                                         00301000
         ST   0,0&ACTUALVECLEN                                   @01C   00301100
.MVS1    ANOP ,                                                         00301200
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC2  SYSTATE PRIMARY    00301300
         SAC  512                                                       00301400
.SETUPPRIMARYASC2 ANOP ,                                                00301500
         AIF   ('&BRANCHTABLE(1)' NE '&ZYES').MVS2                      00301600
&PVPASM  SETC  'PVPASM'                                                 00301700
&PVPASM  SETC  '&PVPASM&SYSNDX'                                         00301800
&PVPASM2 SETC '&PVPASM&BRREG'                                           00301900
         B    &PVPASM2                                                  00302000
&PVPASM  DS   0H                                                        00302100
         B    &MODIFYDONE                                               00302200
         B    &LESSTHAN                                                 00302300
         B    &NOSTORAGE                                                00302400
         B    &INVALIDTOKN                                              00302500
         B    &INVALIDLEN                                               00302600
.MVS2    AGO  .ZEND                                                     00302700
.REQ2    AIF   ('&REQUEST(1)' NE 'TESTLISTSTATE').REQ2B                 00302800
.SAVE2   AIF  ('&WORKAREA='(1,1) EQ '(').GLK12                          00302900
         STM  2,5,&WORKAREA                                             00303000
         AGO  .GLK22                                                    00303100
.GLK12   ANOP ,                                                         00303200
         STM  2,5,0&WORKAREA                                            00303300
.GLK22   ANOP ,                                                         00303400
         AIF  ('&VECTORINDEX='(1,1) EQ '(').PVP7                        00303500
         L    4,&VECTORINDEX                                            00303600
         AGO  .PVP8                                                     00303700
.PVP7    ANOP ,                                                         00303800
         L    4,0&VECTORINDEX                                           00303900
.PVP8    ANOP ,                                                         00304000
         L     15,16(0,0)              Get CVT address                  00304100
         L     15,140(15,0)            Get ECVT address                 00304200
         L     15,256(15,0)            Get Xrat address                 00304300
         L     15,56(15,0)             Get entry-point address          00304400
         BALR  14,15                   Branch to routine                00304500
.RSTOR2  AIF  ('&WORKAREA='(1,1) EQ '(').GLK32                          00304600
         LM   2,5,&WORKAREA                                             00304700
         AGO  .GLK42                                                    00304800
.GLK32   ANOP ,                                                         00304900
         LM   2,5,0&WORKAREA                                            00305000
.GLK42   ANOP ,                                                         00305100
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC3  SYSTATE PRIMARY    00305200
         SAC  512                                                       00305300
.SETUPPRIMARYASC3 ANOP ,                                                00305400
         AIF   ('&BRANCHTABLE(1)' NE '&ZYES').TLS1                      00305500
.*                                                                      00305600
.* LSTEMPTY/LSTNONFULL, LSTFULL/LSTNONEMPTY mutually exclusive test     00305700
.*                                                                      00305800
         AIF   (('&LSTEMPTY' NE '' AND '&LSTNONFULL' NE '') OR         *00305900
                ('&LSTFULL'  NE '' AND                                 *00306000
                 '&LSTNONEMPTY' NE '')).LABELERR1                       00306100
         AGO .LABELOK1                                                  00306200
.LABELERR1 ANOP ,                                                       00306300
.*                                                                      00306400
         AIF   ('&LSTEMPTY' NE '').LABELERR2                            00306500
         MNOTE 8,'IXLVECTR --> LSTFULL=&XLSTFULL is mutually exclusive *00306600
               with LSTNONEMPTY=&XLSTNONEMPTY'                          00306700
&ZMACRET SETA  8                                                        00306800
         AGO  .ZEND                                                     00306900
.LABELERR2 ANOP ,                                                       00307000
         MNOTE 8,'IXLVECTR --> LSTEMPTY=&XLSTEMPTY is mutually exclusiv*00307100
               e with LSTNONFULL=&XLSTNONFULL'                          00307200
&ZMACRET SETA  8                                                        00307300
         AGO  .ZEND                                                     00307400
.*                                                                      00307500
.LABELOK1  ANOP ,                                                       00307600
.*                                                                      00307700
.*                                                                      00307800
.* set up branch table for TESTLISTSTATE                           @L2A 00307900
.*                                                                      00308000
         AIF    ('&XEMPTYFULL' EQ 'LSTEMPTY').BRTAB1                    00308100
&XEMPTYFULL           SETC  '&LSTFULL(1)'                               00308200
         AGO  .BRTAB2                                                   00308300
.BRTAB1  ANOP ,                                                         00308400
&XEMPTYFULL           SETC  '&LSTEMPTY(1)'                              00308500
.*                                                                      00308600
.BRTAB2  ANOP ,                                                         00308700
&XEMPTYFULL           SETC  UPPER('&XEMPTYFULL')                        00308800
.*                                                                      00308900
         AIF    ('&XNOEMPTYNOFULL' EQ 'LSTNONEMPTY').BRTAB3             00309000
&XNOEMPTYNOFULL       SETC  '&LSTNONFULL(1)'                            00309100
         AGO  .BRTAB4                                                   00309200
.BRTAB3  ANOP ,                                                         00309300
&XNOEMPTYNOFULL       SETC  '&LSTNONEMPTY(1)'                           00309400
.*                                                                      00309500
.BRTAB4  ANOP ,                                                         00309600
&PVPASM  SETC  'PVPASM'                                                 00309700
&PVPASM  SETC  '&PVPASM&SYSNDX'                                         00309800
&PVPASM2 SETC '&PVPASM&BRREG'                                           00309900
         B    &PVPASM2                                                  00310000
&PVPASM  DS   0H                                                        00310100
         B    &XEMPTYFULL                                          @L2C 00310200
         B    &XNOEMPTYNOFULL                                      @L2C 00310300
         B    &INDXINVALID                                              00310400
         B    &INVALIDTOKN                                              00310500
.TLS1    AGO  .ZEND                                                     00310600
.REQ2B   AIF   ('&REQUEST(1)' NE 'LTVECENTRIES').REQ3                   00310700
.SAVE2B  AIF  ('&WORKAREA='(1,1) EQ '(').GLK12B                         00310800
         STM  2,6,&WORKAREA                                             00310900
         AGO  .GLK22B                                                   00311000
.GLK12B  ANOP ,                                                         00311100
         STM  2,6,0&WORKAREA                                            00311200
.GLK22B  ANOP ,                                                         00311300
         AIF  ('&VECTORINDEX='(1,1) EQ '(').PVP7B                       00311400
         L    4,&VECTORINDEX                                            00311500
         AGO  .PVP8B                                                    00311600
.PVP7B   ANOP ,                                                         00311700
         L    4,0&VECTORINDEX                                           00311800
.PVP8B   ANOP ,                                                         00311900
         L     15,16(0,0)              Get CVT address                  00312000
         L     15,140(15,0)            Get ECVT address                 00312100
         L     15,256(15,0)            Get Xrat address                 00312200
         L     15,76(15,0)             Get entry-point address          00312300
         BALR  14,15                   Branch to routine                00312400
         LR    0,4                                              @01A    00312500
         AIF  ('&WORKAREA='(1,1) EQ '(').GLK32B                 @01M    00312600
         LM   2,6,&WORKAREA                                     @01M    00312700
         AGO  .GLK42B                                           @01M    00312800
.GLK32B  ANOP ,                                                 @01M    00312900
         LM   2,6,0&WORKAREA                                    @01M    00313000
.GLK42B  ANOP ,                                                 @01M    00313100
.RSTOR2B AIF  ('&BITSTRING='(1,1) EQ '(').RET5B                         00313200
         ST   0,&BITSTRING                                      @01C    00313300
         AGO  .MVS1B                                                    00313400
.RET5B   ANOP ,                                                         00313500
         ST   0,0&BITSTRING                                     @01C    00313600
.MVS1B   ANOP ,                                                         00313700
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC3B SYSTATE PRIMARY    00313800
         SAC  512                                                       00313900
.SETUPPRIMARYASC3B ANOP ,                                               00314000
         AIF   ('&BRANCHTABLE(1)' NE '&ZYES').TLS1B                     00314100
.*                                                                      00314200
.* ALLEMPVAL/SOMENEINVNF, ALLEMPVALFULL/SOMENEINV                       00314300
.* mutually exclusive test                                         @L2A 00314400
.*                                                                      00314500
         AIF   (('&ALLEMPVAL' NE '' AND '&SOMENEINVNF' NE '') OR       *00314600
                ('&ALLEMPVALFULL' NE '' AND                            *00314700
                 '&SOMENEINV' NE '')).LABELERR3                         00314800
         AGO .LABELOK2                                                  00314900
.LABELERR3 ANOP ,                                                       00315000
.*                                                                      00315100
         AIF   ('&ALLEMPVAL' NE '').LABELERR4                           00315200
         MNOTE 8,'IXLVECTR --> ALLEMPVALFULL=&XALLEMPVALFULL is mutuall*00315300
               y exclusive with SOMENEINV=&XSOMENEINV'                  00315400
&ZMACRET SETA  8                                                        00315500
         AGO  .ZEND                                                     00315600
.LABELERR4 ANOP ,                                                       00315700
         MNOTE 8,'IXLVECTR --> ALLEMPVAL=&XALLEMPVAL is mutually exclus*00315800
               ive with SOMENEINVNF=&XSOMENEINVNF'                      00315900
&ZMACRET SETA  8                                                        00316000
         AGO  .ZEND                                                     00316100
.*                                                                      00316200
.LABELOK2  ANOP ,                                                       00316300
.*                                                                      00316400
.*                                                                      00316500
.* set up branch table for LTVECENTRIES                            @L2A 00316600
.*                                                                      00316700
.*           xAllEVorAllEVF                                             00316800
         AIF    ('&XALLEVORALLEVF' EQ 'ALLEMPVAL').BRTAB5               00316900
&XALLEVORALLEVF       SETC  '&ALLEMPVALFULL(1)'                         00317000
         AGO  .BRTAB6                                                   00317100
.BRTAB5  ANOP ,                                                         00317200
&XALLEVORALLEVF       SETC  '&ALLEMPVAL(1)'                             00317300
.*                                                                      00317400
.BRTAB6  ANOP ,                                                         00317500
&XALLEVORALLEVF       SETC  UPPER('&XALLEVORALLEVF')                    00317600
.*                                                                      00317700
.*           xNeInvOrNeInvNf                                            00317800
         AIF    ('&XNEINVORNEINVNF' EQ 'SOMENEINV').BRTAB7              00317900
&XNEINVORNEINVNF      SETC  '&SOMENEINVNF(1)'                           00318000
         AGO  .BRTAB8                                                   00318100
.BRTAB7  ANOP ,                                                         00318200
&XNEINVORNEINVNF      SETC  '&SOMENEINV(1)'                             00318300
.*                                                                      00318400
.BRTAB8  ANOP ,                                                         00318500
.*                                                                      00318600
&PVPASM  SETC  'PVPASM'                                                 00318700
&PVPASM  SETC  '&PVPASM&SYSNDX'                                         00318800
&PVPASM2 SETC '&PVPASM&BRREG'                                           00318900
         B    &PVPASM2                                                  00319000
&PVPASM  DS   0H                                                        00319100
         B    &XALLEVORALLEVF                                      @L2C 00319200
         B    &XNEINVORNEINVNF                                     @L2C 00319300
         B    &INDXINVALID                                              00319400
         B    &INVALIDTOKN                                              00319500
.TLS1B   AGO  .ZEND                                                     00319600
.REQ3    AIF   ('&REQUEST(1)' NE 'TESTLOCALCACHE').REQ4                 00319700
         AIF   ('&XVALIDATE' NE '&ZYES').VALNO                          00319800
.VALYES  AIF   (K'&VECTORINDEX LE 0).REQ4                       @D2C    00319900
.SAVE3   AIF  ('&WORKAREA='(1,1) EQ '(').GLK13                          00320000
         STM  2,6,&WORKAREA                                             00320100
         AGO  .GLK23                                                    00320200
.GLK13   ANOP ,                                                         00320300
         STM  2,6,0&WORKAREA                                            00320400
.GLK23   ANOP ,                                                         00320500
         AIF  ('&VECTORINDEX='(1,1) EQ '(').PVP9                        00320600
         L    4,&VECTORINDEX                                            00320700
         AGO  .PVP0                                                     00320800
.PVP9    ANOP ,                                                         00320900
         L    4,0&VECTORINDEX                                           00321000
.PVP0    ANOP ,                                                         00321100
         L     15,16(0,0)              Get CVT address                  00321200
         L     15,140(15,0)            Get ECVT address                 00321300
         L     15,256(15,0)            Get Xrat address                 00321400
         L     15,64(15,0)             Get entry-point address          00321500
         BALR  14,15                   Branch to routine                00321600
.RESTR3  AIF  ('&WORKAREA='(1,1) EQ '(').GLK33                          00321700
         LM   2,6,&WORKAREA                                             00321800
         AGO  .GLK43                                                    00321900
.GLK33   ANOP ,                                                         00322000
         LM   2,6,0&WORKAREA                                            00322100
.GLK43   ANOP ,                                                         00322200
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC4  SYSTATE PRIMARY    00322300
         SAC  512                                                       00322400
.SETUPPRIMARYASC4 ANOP ,                                                00322500
         AGO   .ZEND                   GO TO THE END             @D2C   00322600
.VALNO   ANOP ,                                                         00322700
.SAVE4   AIF  ('&WORKAREA='(1,1) EQ '(').GLK14                          00322800
         STM  2,5,&WORKAREA                                             00322900
         AGO  .GLK24                                                    00323000
.GLK14   ANOP ,                                                         00323100
         STM  2,5,0&WORKAREA                                            00323200
.GLK24   ANOP ,                                                         00323300
         AIF  ('&VECTORINDEX='(1,1) EQ '(').DHS3                        00323400
         L    4,&VECTORINDEX                                            00323500
         AGO  .DHS4                                                     00323600
.DHS3    ANOP ,                                                         00323700
         L    4,0&VECTORINDEX                                           00323800
.DHS4    ANOP ,                                                         00323900
         L     15,16(0,0)              Get CVT address                  00324000
         L     15,140(15,0)            Get ECVT address                 00324100
         L     15,256(15,0)            Get Xrat address                 00324200
         L     15,60(15,0)             Get entry-point address          00324300
         BALR  14,15                   Branch to routine                00324400
.RESTR4  AIF  ('&WORKAREA='(1,1) EQ '(').GLK34                          00324500
         LM   2,5,&WORKAREA                                             00324600
         AGO  .GLK44                                                    00324700
.GLK34   ANOP ,                                                         00324800
         LM   2,5,0&WORKAREA                                            00324900
.GLK44   ANOP ,                                                         00325000
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC5  SYSTATE PRIMARY    00325100
         SAC  512                                                       00325200
.SETUPPRIMARYASC5 ANOP ,                                                00325300
         AGO  .ZEND                   GO TO THE END             @D2C    00325400
.REQ4    ANOP ,                                                @D2A     00325500
.SAVE5   AIF  ('&WORKAREA='(1,1) EQ '(').GLK15                 @D2A     00325600
         STM  2,6,&WORKAREA                                    @D2A     00325700
         AGO  .GLK25                                           @D2A     00325800
.GLK15   ANOP ,                                                @D2A     00325900
         STM  2,6,0&WORKAREA                                   @D2A     00326000
.GLK25   ANOP ,                                                @D2A     00326100
         L     15,16(0,0)              Get CVT address         @D2A     00326200
         L     15,140(15,0)            Get ECVT address        @D2A     00326300
         L     15,256(15,0)            Get Xrat address        @D2A     00326400
         L     15,72(15,0)             Get entry-point address @D2A     00326500
         BALR  14,15                   Branch to routine       @D2A     00326600
.RESTR5  AIF  ('&WORKAREA='(1,1) EQ '(').GLK35                 @D2A     00326700
         LM   2,6,&WORKAREA                                    @D2A     00326800
         AGO  .GLK45                                           @D2A     00326900
.GLK35   ANOP ,                                                @D2A     00327000
         LM   2,6,0&WORKAREA                                   @D2A     00327100
.GLK45   ANOP ,                                                @D2A     00327200
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC6 SYSTATE  PRIMARY    00327300
         SAC  512                                              @D2A     00327400
.SETUPPRIMARYASC6 ANOP ,                                                00327500
.ZEND    ANOP ,                                                         00327600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00327700
.********************************************************************   00327800
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00327900
.********************************************************************   00328000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00328100
                      LCLA  &ZOPN1         INVOCATION INDEX             00328200
                      LCLC  &ZOPL(4095)    LABEL                        00328300
                      LCLC  &ZOPO(4095)    OPERATION                    00328400
                      LCLC  &ZOPV(4095)    VALUE                        00328500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00328600
.*                                                                      00328700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00328800
.*******************************************************************    00328900
.***AO.X02  RETURN CODE PROCESSING                                      00329000
.*******************************************************************    00329100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00329200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00329300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00329400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00329500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00329600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00329700
&ZOPN                 SETA  &ZOPN+1                                     00329800
&ZOPL(&ZOPN)          SETC  ' '                                         00329900
&ZOPO(&ZOPN)          SETC  'ST'                                        00330000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00330100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00330200
                      AGO   .ZMRETX                                     00330300
.*                                                                      00330400
.ZMRET2               ANOP  ,                                           00330500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00330600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00330700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00330800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00330900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00331000
&ZOPN                 SETA  &ZOPN+1                                     00331100
&ZOPL(&ZOPN)          SETC  ' '                                         00331200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00331300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00331400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00331500
.ZMRETX               ANOP  ,                                           00331600
.*******************************************************************    00331700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00331800
.*******************************************************************    00331900
                      ACTR  10000                                       00332000
.*                                                                      00332100
                      LCLA  &ZLC           COLUMN POSITION              00332200
                      LCLA  &ZOPX          LIST TABLE INDEX             00332300
                      LCLC  &ZLL           LABEL                        00332400
                      LCLC  &ZLOP          OPERATION                    00332500
                      LCLC  &ZLV           VALUE                        00332600
                      LCLC  &ZLD           DESCRIPTION                  00332700
.*                                                                      00332800
&ZOPX                 SETA  1                                           00332900
.*******************************************************************    00333000
.***AP.X01  FORMAT GENERATED CODE                                       00333100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00333200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00333300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00333400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00333500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00333600
                      AIF   (K'&ZLD LE 0).ZL51                          00333700
&ZLC                  SETA  35             COMMENT COLUMN               00333800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00333900
&ZLC                  SETA  33             COMMENT COLUMN               00334000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00334100
&ZLV                  SETC  '&ZLV'.' '                                  00334200
                      AGO   .ZL31                                       00334300
.*                                                                      00334400
.ZL41                 ANOP  ,                                           00334500
&ZLV                  SETC  '&ZLV'.' '                                  00334600
.ZL51                 ANOP  ,                                           00334700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00334800
.*                                                                      00334900
&ZLL     &ZLOP &ZLV                                                     00335000
.*                                                                      00335100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00335200
                      AGO   .ZL21          CONTINUE LOOPING             00335300
.*                                                                      00335400
.ZLX1                 ANOP  ,                                           00335500
.*******************************************************************    00335600
.***AP.X02  END OF IXLVECTR MACRO                                       00335700
&ZIXLVECTR            SETC  'YES'          SET IXLVECTR USED            00335800
         POP   PRINT                                                    00335900
*                                            IXLVECTR-0                 00336000
         SPACE 1                                                        00336100
.ZLX2                 ANOP  ,                                           00336200
         MEND                                                           00336300
**********************************************************************/ 00336400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00336500
*%IXLVECTR: MACRO KEYS(VECTORTOKEN,WORKAREA,REQUEST,VECTORLEN,          00336600
*                 ACTUALVECLEN,BRANCHTABLE,MODIFYDONE,LESSTHAN,         00336700
*                 NOSTORAGE,INVALIDTOKN,INVALIDLEN,VECTORINDEX,         00336800
*                 BITSTRING,ALLEMPVAL,ALLEMPVALFULL,SOMENEINV,          00336900
*                 SOMENEINVNF,INDXINVALID,LSTEMPTY,LSTFULL,             00337000
*                 LSTNONEMPTY,LSTNONFULL,VALIDATE,RETCODE);             00337100
*  ANS('?'!!MACLABEL!!' '!!'IXLVECTP '!!MACLIST!!                       00337200
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00337300
*%END IXLVECTR;                                                         00337400
