*                                                                       00001000
* %DCL BPXYINFY_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE BPXYINFY_INCLUDED;                                        00003000
* %IF BPXYINFY_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 21168. CBGEN compile date 21138         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         BPXYINFY &DSECT=YES,&LIST=YES,&TITLE=YES,&INOTIFY_EVENT=YES    00009000
         GBLC  &BPXYINFY_INCLUDED                                       00010000
         GBLC  &ZCBPRINT                                                00011000
&BPXYINFY_INCLUDED SETC 'YES'                                           00012000
         AIF   ('&LIST' EQ 'NONE').P0                                   00013000
         AIF   ('&TITLE' EQ 'NO').P5                                    00014000
 TITLE   'BPXYINFY  - INOTIFY event structure for syscall             '*00015000
                                                                        00016000
.P5      ANOP                                                           00017000
**/ ;                                                                   00018000
*/****START OF SPECIFICATIONS****************************************** 00019000
*    $MAC (BPXYINFY) COMP(SCPX1) PROD(BPX):                             00020000
*01* MACRO NAME: BPXYINFY                                               00021000
*01* DSECT NAME: N/A                                                    00022000
*01* DESCRIPTIVE NAME: INOTIFY event structure for syscall              00023000
*02*   ACRONYM: INFY                                                    00024000
**/                                                                     00025000
*/*01* PROPRIETARY STATEMENT=                                        */ 00026000
*/***PROPRIETARY_STATEMENT********************************************/ 00027000
*/*                                                                  */ 00028000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00029000
*/* 5650-ZOS COPYRIGHT IBM CORP. 2021                                */ 00030000
*/*                                                                  */ 00031000
*/* STATUS= HBB77D0                                                  */ 00032000
*/*                                                                  */ 00033000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00034000
*/*                                                                     00035000
*                                                                       00036000
*01* EXTERNAL CLASSIFICATION:  PI                                       00037000
*01* END OF EXTERNAL CLASSIFICATION:                                    00038000
*                                                                       00039000
*01* FUNCTION: Define inotify structures                                00040000
*                                                                       00041000
*                                                                       00042000
*                                                                       00043000
*01* METHOD OF ACCESS:                                                  00044000
*02*   PL/X:                                                            00045000
*         %INCLUDE SYSLIB(BPXYINFY)                                     00046000
*         By default, the INOTIFY is based on INFYPTR.                  00047000
*         If other basing is desired, use %INOTIFYBASE='BASED(XXXXXX)'. 00048000
*         If %INOTIFYBASE is defaulted, a declare for INFYPTR is        00049000
*         generated.                                                    00050000
*                                                                       00051000
*         If VIA basing is required, specify %INOTIFYVIA='VIA(YYYYYY)'. 00052000
*         If %INOTIFYVIA='VIA(INOTIFYALET)' is specified, a declare for 00053000
*         INOTIFYALET is generated.                                     00054000
*02*   ASM:                                                             00055000
*         With DSECT=NO, storage is allocated in line                   00056000
*         and addressability is provided thru that DSECT or CSECT.      00057000
*                                                                       00058000
*         With DSECT=YES, a DSECT is produced and "USING INFYFD,reg"    00059000
*         is required for addressability.  Here "reg" contains the      00060000
*         address of inotify()EV#LENGTH bytes of storage.               00061000
*         The default is DSECT=YES.                                     00062000
*                                                                       00063000
*01* SIZE: INOTIFYEV#LENGTH                                             00064000
*            INOTIFY_EVENT -- X'0010' bytes                             00065000
*                                                                       00066000
*01* POINTED TO BY: N/A                                                 00067000
*                                                                       00068000
*01* CREATED BY: invoker of inotify()()                                 00069000
*                                                                       00070000
*01* DELETED BY: invoker of inotify()()                                 00071000
*                                                                       00072000
*01* STORAGE ATTRIBUTES:                                                00073000
*02*   SUBPOOL: N/A                                                     00074000
*02*   KEY:     N/A                                                     00075000
*02*   RESIDENCY: Primary address space                                 00076000
*                                                                       00077000
*01* FREQUENCY:                                                         00078000
*01*                                                                    00079000
*                                                                       00080000
*01* SERIALIZATION: None                                                00081000
*                                                                       00082000
*01* DEPENDENCIES: None                                                 00083000
*                                                                       00084000
*                                                                       00085000
*01* COMPONENT: z/OS UNIX (SCPX1)                                       00086000
*                                                                       00087000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00088000
*                                                                       00089000
*01* EYE-CATCHER: None                                                  00090000
*02*   OFFSET:                                                          00091000
*02*   LENGTH:                                                          00092000
*                                                                       00093000
*01* CHANGE-ACTIVITY:                                                   00094000
*                                                                       00095000
* $D0=WI402735, HBB77D0, 210224, PETN: inotify() Initial version        00096000
*                                                                       00097000
****END OF SPECIFICATIONS*********************************************/ 00098000
*% /*                                                                   00099000
.P0      ANOP                                                           00100000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00101000
         AIF   ('&LIST' EQ 'YES').P2                                    00102000
.P1      ANOP                                                           00103000
         PUSH  PRINT                                                    00104000
         PRINT OFF                                                      00105000
.P2      ANOP                                                           00106000
         AIF   ('&INOTIFY_EVENT' EQ 'NO').L0002                         00107000
         AIF   ('&DSECT' EQ 'YES').L0003                                00108000
         AIF   ('&INOTIFY_EVENT' NE 'YES').L0002                        00109000
.L0003   ANOP                                                           00110000
*                                                                       00111000
* ********************************************************************  00112000
* * Start of inotify() Events control block                          *  00113000
* ********************************************************************  00114000
*                                                                       00115000
*                                                                       00116000
         AIF   ('&DSECT' EQ 'YES').L0004                                00117000
INOTIFY_EVENT DS 0F                                                     00118000
         AGO   .L0005                                                   00119000
.L0004   ANOP                                                           00120000
INOTIFY_EVENT DSECT                                                     00121000
.L0005   ANOP                                                           00122000
INOTIFY_FD DS  F                                                        00123000
INOTIFY_EVENTS DS BL4    Event mask                                     00124000
INOTIFY_COOKIE DS F                                                     00125000
INOTIFY_LENGTH DS F                                                     00126000
INOTIFY_NAME DS 0C                                                      00127000
*                                                                       00128000
* ********************************************************************  00129000
* * Constants and error codes                                        *  00130000
* ********************************************************************  00131000
*                                                                       00132000
*                                                                       00133000
INOTIFYID_0TO3 EQU C'INOT' This is the first 4-byte segment of an      *00134000
                         8-byte constant. Eyecatcher                    00135000
INOTIFYID_4TO7 EQU C'IFY ' This is the second 4-byte segment of an     *00136000
                         8-byte constant. Eyecatcher                    00137000
INOTIFYEV#LEN EQU 16     Struct                                         00138000
IN_NONBLOCK EQU 4        NonBlock                                       00139000
IN_CLOEXEC EQU 2         Close Exec                                     00140000
*                                                                       00141000
*   The following are events that user-space can watch for using        00142000
*   the inotify_add_watch system call.                                  00143000
*                                                                       00144000
*                                                                       00145000
IN_ACCESS EQU  X'00000001' File was accessed                            00146000
IN_MODIFY EQU  X'00000002' File was modified                            00147000
IN_ATTRIB EQU  X'00000004' Metadata changed                             00148000
IN_CLOSE_WRITE EQU X'00000008' Metadata changed                         00149000
IN_CLOSE_NOWRITE EQU X'00000010' Unwrittable close                      00150000
IN_OPEN  EQU   X'00000020' File was opened                              00151000
IN_MOVED_FROM EQU X'00000040' File moved from X                         00152000
IN_MOVED_TO EQU X'00000080' File moved to Y                             00153000
IN_CREATE EQU  X'00000100' Subfile created                              00154000
IN_DELETE EQU  X'00000200' Subfile deleted                              00155000
IN_DELETE_SELF EQU X'00000400' Self was deleted                         00156000
IN_MOVE_SELF EQU X'00000800' Self was moved                             00157000
*                                                                       00158000
*   The following are events that are sent as needed to any watch.      00159000
*                                                                       00160000
*                                                                       00161000
IN_UNMOUNT EQU X'00002000' Fs unmounted                                 00162000
IN_Q_OVERFLOW EQU X'00004000' Event queued ovrfl                        00163000
IN_IGNORED EQU X'00008000' File was ignored                             00164000
*                                                                       00165000
*   Helper events                                                       00166000
*                                                                       00167000
*                                                                       00168000
IN_CLOSE EQU   X'00000018' In close events                              00169000
IN_MOVE  EQU   X'000000C0' Move from or to                              00170000
*                                                                       00171000
*   Special flags                                                       00172000
*                  Only watch the path if it is a directory             00173000
*                                                                       00174000
*                                                                       00175000
IN_ONLYDIR EQU X'01000000' Watch dir path                               00176000
IN_DONT_FOLLOW EQU X'02000000' Dont follow sym link                     00177000
*                                                                       00178000
*                  Exclude events on unlinked objects                   00179000
*                                                                       00180000
*                                                                       00181000
IN_EXCL_UNLINK EQU X'04000000' Exclude events                           00182000
IN_MASK_CREATE EQU X'10000000' Only create watches                      00183000
*                                                                       00184000
*                  Add to the mask of an already existing watch         00185000
*                                                                       00186000
*                                                                       00187000
IN_MASK_ADD EQU X'20000000' Add to mask                                 00188000
IN_ISDIR EQU   X'40000000' Event against dir                            00189000
IN_ONESHOT EQU X'80000000' Only sent once                               00190000
IN_ALL_EVENTS EQU X'00000FFF' All events                                00191000
INOTIFY_EVENT_LEN EQU *-INOTIFY_EVENT                                   00192000
.L0002   ANOP                                                           00193000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00194000
         AIF   ('&LIST' EQ 'YES').P4                                    00195000
.P3      ANOP                                                           00196000
         POP   PRINT                                                    00197000
.P4      ANOP                                                           00198000
.P_EXIT  ANOP                                                           00199000
         MEND                                                           00200000
**/ ;                                                                   00201000
* %BPXYINFY_INCLUDED = 'YES';                                           00202000
* %DCL ZCBPRINT CHAR EXT;                                               00203000
* %DEACTIVATE ZCBPRINT;                                                 00204000
* %DCL BPXYINFY_LIST CHAR EXT;                                          00205000
* %DEACTIVATE BPXYINFY_LIST;                                            00206000
* %IF BPXYINFY_LIST = 'NO' !                                            00207000
*    ZCBPRINT = 'NO' %THEN                                              00208000
* %DO;                                                                  00209000
*   @LIST PUSH NOECHO;                                                  00210000
*   @LIST NOASSEMBLE NOECHO;                                            00211000
*   @LIST OFF C NOECHO;                                                 00212000
* %END;                                                                 00213000
*/* Start of PL/X Source                                             */ 00214000
* %DCL ASABEGIN_AMODE CHAR EXTERNAL;                                    00215000
* %DCL PTR_64 CHAR EXTERNAL;                                            00216000
* %IF INOTIFYBASE= '' %THEN                                             00217000
*   %DO;                                                                00218000
*     %INOTIFYBASE = 'BASED(INFYPTR)'; ]     Default basing to INFYPTR  00219000
*   %END;                                                               00220000
* %IF TRANSLATE(INOTIFYBASE)='BASED(INFYPTR)' %THEN                     00221000
*   %DO;                                                                00222000
*    %IF ASABEGIN_AMODE='64' ! PTR_64='YES'                             00223000
*     %THEN                                                             00224000
*     %DO;                                                              00225000
*       DCL INFYPTR Ptr(64);                                            00226000
*     %END;                                                             00227000
*    %ELSE                                                              00228000
*     %DO;                                                              00229000
*       DCL INFYPTR Ptr(31);                                            00230000
*     %END;                                                             00231000
*   %END;                                                               00232000
* %IF TRANSLATE(INOTIFYVIA)='VIA(INOTIFYALET)' %THEN                    00233000
*   %DO;                                                                00234000
*     DCL INOTIFYAlet FIXED(32);                                        00235000
*   %END;                                                               00236000
*/********************************************************************/ 00237000
*/* Start of inotify() Events control block                          */ 00238000
*/********************************************************************/ 00239000
*Declare                                                                00240000
* 1 INOTIFY_Event INOTIFYBASE INOTIFYVIA,                               00241000
*  3 INOTIFY_fd     Fixed(31),                                          00242000
*  3 INOTIFY_Events Bit(32),      ] Event mask                          00243000
*  3 INOTIFY_Cookie Fixed(32),                                          00244000
*  3 INOTIFY_Length Fixed(32),                                          00245000
*  3 INOTIFY_Name   CHAR(0);                                            00246000
*                                                                       00247000
*/********************************************************************/ 00248000
*/* Constants and error codes                                        */ 00249000
*/********************************************************************/ 00250000
*DECLARE                                                                00251000
* INOTIFYID     Char(8)   Constant('INOTIFY '),  ] Eyecatcher           00252000
* INOTIFYEV#LEN Fixed(32) Constant(Length(INOTIFY_Event)),] Struct      00253000
*                                                                       00254000
* IN_NONBLOCK   Fixed(32) Constant('00000004'X), ]NonBlock              00255000
* IN_CLOEXEC    Fixed(32) Constant('00000002'X), ]Close Exec            00256000
*                                                                       00257000
*/* The following are events that user-space can watch for using    */  00258000
*/* the inotify_add_watch system call.                              */  00259000
* IN_ACCESS        BIT(32) Constant('00000001'X), ]File was accessed    00260000
* IN_MODIFY        BIT(32) Constant('00000002'X), ]File was modified    00261000
* IN_ATTRIB        BIT(32) Constant('00000004'X), ]Metadata changed     00262000
* IN_CLOSE_WRITE   BIT(32) Constant('00000008'X), ]Metadata changed     00263000
* IN_CLOSE_NOWRITE BIT(32) Constant('00000010'X), ]Unwrittable close    00264000
* IN_OPEN          BIT(32) Constant('00000020'X), ]File was opened      00265000
* IN_MOVED_FROM    BIT(32) Constant('00000040'X), ]File moved from X    00266000
* IN_MOVED_TO      BIT(32) Constant('00000080'X), ]File moved to Y      00267000
* IN_CREATE        BIT(32) Constant('00000100'X), ]Subfile created      00268000
* IN_DELETE        BIT(32) Constant('00000200'X), ]Subfile deleted      00269000
* IN_DELETE_SELF   BIT(32) Constant('00000400'X), ]Self was deleted     00270000
* IN_MOVE_SELF     BIT(32) Constant('00000800'X), ]Self was moved       00271000
*                                                                       00272000
*/* The following are events that are sent as needed to any watch.  */  00273000
* IN_UNMOUNT       BIT(32) Constant('00002000'X), ]Fs unmounted         00274000
* IN_Q_OVERFLOW    BIT(32) Constant('00004000'X), ]Event queued ovrfl   00275000
* IN_IGNORED       BIT(32) Constant('00008000'X), ]File was ignored     00276000
*                                                                       00277000
*/* Helper events */                                                    00278000
* IN_CLOSE         BIT(32) Constant('00000018'X), ]In close events      00279000
* IN_MOVE          BIT(32) Constant('000000C0'X), ]Move from or to      00280000
*                                                                       00281000
*/* Special flags */                                                    00282000
*/*                Only watch the path if it is a directory         */  00283000
* IN_ONLYDIR     BIT(32) Constant('01000000'X), ]Watch dir path         00284000
* IN_DONT_FOLLOW BIT(32) Constant('02000000'X), ]Dont follow sym link   00285000
*/*                Exclude events on unlinked objects               */  00286000
* IN_EXCL_UNLINK BIT(32) Constant('04000000'X), ]Exclude events         00287000
* IN_MASK_CREATE BIT(32) Constant('10000000'X), ]Only create watches    00288000
*/*                Add to the mask of an already existing watch     */  00289000
* IN_MASK_ADD    BIT(32) Constant('20000000'X), ]Add to mask            00290000
* IN_ISDIR       BIT(32) Constant('40000000'X), ]Event against dir      00291000
* IN_ONESHOT     BIT(32) Constant('80000000'X), ]Only sent once         00292000
* IN_ALL_EVENTS  BIT(32) Constant('00000FFF'X); ]All events             00293000
*/* End of PL/X Source                                               */ 00294000
* %IF BPXYINFY_LIST = 'NO' !                                            00295000
*    ZCBPRINT = 'NO' %THEN                                              00296000
* %DO;                                                                  00297000
*   @LIST POP NOECHO;                                                   00298000
* %END;                                                                 00299000
* %END;                                                                 00300000
