*                                                                       00001000
* %DCL CSVEXRET_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE CSVEXRET_INCLUDED;                                        00003000
* %IF CSVEXRET_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 16171. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         CSVEXRET &DSECT=YES,&LIST=YES,&TITLE=YES,&EXRET=YES,          *00009000
               &EXRET1=COND                                             00010000
         GBLC  &CSVEXRET_INCLUDED                                       00011000
         GBLC  &ZCBPRINT                                                00012000
&CSVEXRET_INCLUDED SETC 'YES'                                           00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'CSVEXRET  - Exit Return information area                   '  00016000
.P5      ANOP                                                           00017000
**/ CSVEXRET_1:;                                                        00018000
*/* START OF SPECIFICATIONS ******************************************* 00019000
*                                                                       00020000
*01* MACRO NAME:  CSVEXRET                                              00021000
*                                                                       00022000
*01* DESCRIPTIVE NAME:  Exit Return information area                    00023000
*02*  ACRONYM:  EXRET                                                   00024000
*                                                                       00025000
*01* PROPRIETARY STATEMENT=                                           * 00026000
***PROPRIETARY_STATEMENT*********************************************** 00027000
*                                                                     * 00028000
*                                                                     * 00029000
*   LICENSED MATERIALS - PROPERTY OF IBM                              * 00030000
*   5650-ZOS COPYRIGHT IBM CORP. 1993, 2017                           * 00031000
*                                                                     * 00032000
*   STATUS= HBB77B0                                                   * 00033000
*                                                                     * 00034000
***END_OF_PROPRIETARY_STATEMENT**************************************** 00035000
*                                                                       00036000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00037000
*01* END OF EXTERNAL CLASSIFICATION:                                    00038000
*                                                                       00039000
*01* DSECT NAME:                                                        00040000
*     EXRET                                                             00041000
*     EXRET1                                                            00042000
*                                                                       00043000
*01* COMPONENT:  Contents Supervision (SC1CJ)                           00044000
*                                                                       00045000
*01* EYE-CATCHER:  NONE                                                 00046000
*                                                                       00047000
*01* STORAGE ATTRIBUTES:                                                00048000
*02*  SUBPOOL:  Caller-supplied                                         00049000
*02*  KEY:  Caller-supplied                                             00050000
*02*  RESIDENCY:  Caller-supplied                                       00051000
*                                                                       00052000
*01* SIZE:  Variable                                                    00053000
*                EXRET  -- X'0018' bytes                                00054000
*                EXRET1 -- X'0020' bytes                                00055000
*                                                                       00056000
*01* CREATED BY:                                                        00057000
*      Caller, passed as parameter on RETINFO keyword                   00058000
*      on CSVDYNEX REQUEST=CALL or CSVDYNEX REQUEST=RECOVER             00059000
*                                                                       00060000
*01* POINTED TO BY:                                                     00061000
*     CSVDYNEX parameter list                                           00062000
*                                                                       00063000
*01* SERIALIZATION:                                                     00064000
*     None required                                                     00065000
*                                                                       00066000
*01* FUNCTION:                                                          00067000
*02* Maps the data returned by the CSVDYNEX macro, CALL or RECOVER      00068000
*    request.                                                           00069000
*                                                                       00070000
*02* The caller indicates, via the ExretVer keyword, whether            00071000
*    entries are mapped by EXRET (the default,                          00072000
*    ExretVer=0) or EXRET1 (ExretVer=1).                                00073000
*                                                                       00074000
*02* The returned information consists of a header (EXRETHDR/EXRET1HDR) 00075000
*    which helps to indicate how many entries (EXRETINFO/EXRET1INFO)    00076000
*    follow. Those entries are contiguous (e.g., entry 2 immediately    00077000
*    follows entry 1 when more than one entry is returned).             00078000
*                                                                       00079000
*01* METHOD OF ACCESS:                                                  00080000
*02*  ASM:                                                              00081000
*      CSVEXRET                                                         00082000
*           DSECT=YES!NO  -- Request DSECT definition                   00083000
*           EXRET=YES!NO!COND -- Request return information mapping.    00084000
*                            USING on EXRET                             00085000
*           EXRET1=YES!NO!COND -- Request version 1 return information  00086000
*                            mapping. Specify ExretVER=1 on CSVDYNEX.   00087000
*                            USING on EXRET1                            00088000
*     Default: DSECT=YES,EXRET=YES,EXRET1=COND                          00089000
*     Notes: name=YES  => expand                                        00090000
*            name=NO   => do not expand                                 00091000
*            name=COND => expand only if DSECT=YES                      00092000
*02*  PL/AS:                                                            00093000
*      %INCLUDE SYSLIB(CSVEXRET)                                        00094000
*                                                                       00095000
*01* DELETED BY:  Caller                                                00096000
*                                                                       00097000
*01* FREQUENCY:  Created for response to CSVDYNEX REQUEST=CALL or       00098000
*                CSVDYNEX REQUEST=RECOVER                               00099000
*                                                                       00100000
*01* DEPENDENCIES:                                                      00101000
*02*             EXRETHDR must match EXRET1HDR                          00102000
*02*             EXRETINFO must be the first n bytes of EXRET1INFO      00103000
*                (so only add new things at the end)                    00104000
*                                                                       00105000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00106000
*                                                                       00107000
*01* CHANGE ACTIVITY:                                                   00108000
*   $L0=PE2STCBG ,HBB5510,920101,PD00XB: Return information             00109000
*   $L1=PE2STCSV ,HBB5510,920101,PD00XB: Return information             00110000
*   $01=OW10893  ,HBB5520,950110,PD00XB: AnyKey, POS                    00111000
*   $02=OW10893  ,HBB5520,940801,PD00XB: ExretVer support               00112000
*   $03=OW10893  ,HBB5520,940801,PD00XB: ExaaVer support                00113000
*   $P1=PUX0051  ,HBB6605,970630,PD00KC: Fix change activity            00114000
*   $P2=PVT0010  ,HBB6606,980114,PD00XZ: Remove CSVDYNEXRSNBADESPIE     00115000
*                 HBB6606 980303 PD00KC: Fix CDPI errors with           00116000
*                                        proprietary statement          00117000
*   $L2=LONGSYM   HBB77A0,130430,PD00XB: EXAAM3                         00118000
*   $L3=RMODE64   HBB77B0 150901 PD00XB: KeepFirst / KeepLast           00119000
*                                                                       00120000
* END OF SPECIFICATIONS *********************************************/  00121000
*% /*                                                                   00122000
.P0      ANOP                                                           00123000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00124000
         AIF   ('&LIST' EQ 'YES').P2                                    00125000
.P1      ANOP                                                           00126000
         PUSH  PRINT                                                    00127000
         PRINT OFF                                                      00128000
.P2      ANOP                                                           00129000
         AIF   ('&EXRET' EQ 'NO').L0002                                 00130000
         AIF   ('&DSECT' EQ 'YES').L0003                                00131000
         AIF   ('&EXRET' NE 'YES').L0002                                00132000
EXRET    DS    0F                                                       00133000
         AGO   .L0004                                                   00134000
.L0003   ANOP                                                           00135000
EXRET    DSECT                                                          00136000
.L0004   ANOP                                                           00137000
EXRETHDR DS    CL8                                                      00138000
         ORG   EXRETHDR                                                 00139000
EXRET#RET DS   F         Number of modules for which information is    *00140000
                         returned. When RETINFO=LAST, RETINFO=LOWEST,  *00141000
                         or RETINFO=HIGHEST is specified, this         *00142000
                         indicates how many modules were called, since *00143000
                         information about only one is returned.        00144000
EXRET#REM DS   F         Number of modules remaining for which         *00145000
                         information was not returned. This field will *00146000
                         be 0 for REQUEST=RECOVER.                      00147000
EXRETINFO DS   CL16      Return information entry                       00148000
         ORG   EXRETINFO                                                00149000
EXRETFLAGS DS  B         Return flags                                   00150000
*  Bit definitions:                                                     00151000
EXRETABEND EQU X'80'     Indicates that the called module abended       00152000
EXRETRECOVERFLAGS DS B   Output from the RECOVER function. This is not *00153000
                         set for the CALL function.                     00154000
*  Bit definitions:                                                     00155000
EXRETRECERRORBEFOREINIT EQU X'80' Error occurred before initialization *00156000
                         completed. It is likely that the input        *00157000
                         WorkArea was not valid.                        00158000
EXRETRECEXITMODINCONTROL EQU X'40' Error occurred within an exit       *00159000
                         module.                                        00160000
EXRETRECACCRUB EQU X'20' Error occurred while accessing RUB area        00161000
EXRETRECACCRETAREA EQU X'10' Error occurred while accessing RetArea     00162000
EXRETRECACCPLIST EQU X'08' Error occurred while accessing parameter    *00163000
                         list                                           00164000
EXRETRECPRECALLRTNINCONTROL EQU X'04' Error occurred within the        *00165000
                         precall routine 050201                         00166000
         DS    CL2       Reserved                                       00167000
EXRETREGS DS   CL12      Information from regs                          00168000
         ORG   EXRETREGS                                                00169000
EXRETCODE DS   F         Return code, if bit ExretAbend is off          00170000
         ORG   EXRETCODE                                                00171000
EXRETABENDCODE DS F      Abend code, if bit ExretAbend is on. Its      *00172000
                         format matches that of SDWACMPC                00173000
EXRETRSN DS    F         Reason code, if bit ExretAbend is off          00174000
         ORG   EXRETRSN                                                 00175000
EXRETABENDRSNCODE DS F   Abend reason code, if bit ExretAbend is on     00176000
EXRETR1  DS    F         Return value in R1 from exit, if bit          *00177000
                         ExretAbend is off                              00178000
EXRET_LEN EQU  *-EXRET                                                  00179000
.L0002   ANOP                                                           00180000
         AIF   ('&EXRET1' EQ 'NO').L0005                                00181000
         AIF   ('&DSECT' EQ 'YES').L0006                                00182000
         AIF   ('&EXRET1' NE 'YES').L0005                               00183000
EXRET1   DS    0F                                                       00184000
         AGO   .L0007                                                   00185000
.L0006   ANOP                                                           00186000
EXRET1   DSECT                                                          00187000
.L0007   ANOP                                                           00188000
EXRET1HDR DS   CL8                                                      00189000
         ORG   EXRET1HDR                                                00190000
EXRET1#RET DS  F         Number of modules for which information is    *00191000
                         returned. When RETINFO=LAST, RETINFO=LOWEST,  *00192000
                         or RETINFO=HIGHEST is specified, this         *00193000
                         indicates how many modules were called, since *00194000
                         information about only one is returned.        00195000
EXRET1#REM DS  F         Number of modules remaining for which         *00196000
                         information was not returned. This field will *00197000
                         be 0 for REQUEST=RECOVER.                      00198000
EXRET1INFO DS  CL24      Return information entry                       00199000
         ORG   EXRET1INFO                                               00200000
EXRET1FLAGS DS B         Return flags                                   00201000
*  Bit definitions:                                                     00202000
EXRET1ABEND EQU X'80'    Indicates that the called module abended       00203000
EXRET1RECOVERFLAGS DS B  Output from the RECOVER function. This is not *00204000
                         set for the CALL function.                     00205000
*  Bit definitions:                                                     00206000
EXRET1RECERRORBEFOREINIT EQU X'80' Error occurred before               *00207000
                         initialization completed. It is likely that   *00208000
                         the input WorkArea was not valid.              00209000
EXRET1RECEXITMODINCONTROL EQU X'40' Error occurred within an exit      *00210000
                         module.                                        00211000
EXRET1RECACCRUB EQU X'20' Error occurred while accessing RUB area       00212000
EXRET1RECACCRETAREA EQU X'10' Error occurred while accessing RetArea    00213000
EXRET1RECACCPLIST EQU X'08' Error occurred while accessing parameter   *00214000
                         list                                           00215000
EXRET1RECPRECALLRTNINCONTROL EQU X'04' Error occurred within the       *00216000
                         precall routine 050201                         00217000
         DS    CL2       Reserved                                       00218000
EXRET1REGS DS  CL12      Information from regs                          00219000
         ORG   EXRET1REGS                                               00220000
EXRET1CODE DS  F         Return code, if bit ExRet1Abend is off         00221000
         ORG   EXRET1CODE                                               00222000
EXRET1ABENDCODE DS F     Abend code, if bit ExRet1Abend is on. Its     *00223000
                         format matches that of SDWACMPC                00224000
EXRET1RSN DS   F         Reason code, if bit ExRet1Abend is off         00225000
         ORG   EXRET1RSN                                                00226000
EXRET1ABENDRSNCODE DS F  Abend reason code, if bit ExRet1Abend is on    00227000
EXRET1R1 DS    F         Return value in R1 from exit, if bit          *00228000
                         ExRet1Abend is off                             00229000
EXRET1MODNAME DS CL8     Name of the exit routine when 1st word not    *00230000
                         all 0's 050201                                 00231000
         ORG   EXRET1MODNAME                                            00232000
EXRET1PRECALLINDICATOR DS CL4 When all 0's, the next word contains the *00233000
                         address of the precall routine, and the       *00234000
                         precall routine was in control 050201          00235000
EXRET1PRECALLROUTINEADDR DS A The address of the precall routine       *00236000
                         050201                                         00237000
*                                                                       00238000
*    *****************************************************************  00239000
*    *                                                               *  00240000
*    * General constants for CSVDYNEX                                   00241000
*    *                                                               *  00242000
*    *****************************************************************  00243000
*                                                                       00244000
*                                                                       00245000
CSVDYNEX_PRECALL_CALL EQU 0 Return code from the precall routine       *00246000
                         indicating to call the exit routine 050201     00247000
CSVDYNEX_PRECALL_NOCALL EQU 8 Return code from the precall routine     *00248000
                         indicating not to call the exit routine       *00249000
                         050201                                         00250000
*                                                                       00251000
*    *****************************************************************  00252000
*    *                                                               *  00253000
*    * Return Code / Reason code constants for CSVDYNEX                 00254000
*    * It is guaranteed that no reason code will be reused (i.e., the*  00255000
*    * same reason code will not be used for more than one return    *  00256000
*    * code).                                                           00257000
*    * Also note carefully that bits 0-15 of the reason code may     *  00258000
*    * contain component-diagnostic data and must not be assumed to  *  00259000
*    * be 0.                                                            00260000
*    *                                                               *  00261000
*    *****************************************************************  00262000
*                                                                       00263000
*                                                                       00264000
CSVDYNEXRSNCODEMASK EQU X'0000FFFF' Use this mask to isolate the non   *00265000
                         component-diagnostic portion of the reason    *00266000
                         code.                                          00267000
CSVDYNEXRC_OK EQU 0      Return code 0, success                         00268000
CSVDYNEXRC_WARN EQU 4    Return code 4, warning                         00269000
*                                                                       00270000
*    *****************************************************************  00271000
*    *                                                               *  00272000
*    * Reason codes for RC=4                                            00273000
*    *                                                               *  00274000
*    *****************************************************************  00275000
*                                                                       00276000
*                                                                       00277000
CSVDYNEXRSNALREADYEXISTS EQU X'00000401' The exit or module already    *00278000
                         exists                                         00279000
CSVDYNEXRSNDOESNOTEXIST EQU X'00000402' The module or exit does not    *00280000
                         exist.                                         00281000
CSVDYNEXRSNNOTALLDATARETURNED EQU X'00000403' For LIST, the provided   *00282000
                         output area was not large enough to contain   *00283000
                         all the data.                                  00284000
CSVDYNEXRSNNOMODULES EQU X'00000406' For CALL or QUERY no modules were *00285000
                         associated with the exit.                      00286000
CSVDYNEXRSNMOREMODULES EQU X'00000407' For CALL, there are more        *00287000
                         modules to be called for this exit. The call  *00288000
                         process stopped because the return area was   *00289000
                         not large enough to contain data for all the  *00290000
                         modules.                                       00291000
CSVDYNEXRSNUSERKEYDELETENOFORCE EQU X'00000408'                         00292000
*                                                                       00293000
*                                      User Key FastPath module (or     00294000
*                                      AnyKey FastPath module) delete   00295000
*                                      was specified without            00296000
*                                      FORCE=YES. Exit has been         00297000
*                                      deactivated but storage has      00298000
*                                      not been freed.                  00299000
*                                                                       00300000
CSVDYNEXRSNQUERYNOTFOUND EQU X'00000409' For REQUEST=QUERY, the exit   *00301000
                         name was not found.                            00302000
CSVDYNEXRSNIMPLICITLYDEFINED EQU X'0000040A' For REQUEST=QUERY, the    *00303000
                         exit was implicitly defined by virtue of      *00304000
                         having either its attributes set or modules   *00305000
                         added to it.                                   00306000
CSVDYNEXRC_INVPARM EQU 8 Return code 8, invalid parameter               00307000
*                                                                       00308000
*    *****************************************************************  00309000
*    *                                                               *  00310000
*    * Reason codes for RC=8                                            00311000
*    *                                                               *  00312000
*    *****************************************************************  00313000
*                                                                       00314000
*                                                                       00315000
CSVDYNEXRSNBADPARMLIST EQU X'00000801' Error while accessing parameter *00316000
                         list                                           00317000
CSVDYNEXRSNSRBMODE EQU X'00000802' Caller was in SRB mode               00318000
CSVDYNEXRSNNOTENABLED EQU X'00000803' Caller was not enabled            00319000
CSVDYNEXRSNNOTAUTHORIZED EQU X'00000804' Caller was not authorized      00320000
CSVDYNEXRSNHOMENOTPRIMARY EQU X'00000805' HASN ^= PASN                  00321000
CSVDYNEXRSNBADANSAREAALET EQU X'00000806' ALET of ANSAREA was not      *00322000
                         acceptable                                     00323000
CSVDYNEXRSNBADANSAREA EQU X'00000807' Error while accessing ANSAREA     00324000
CSVDYNEXRSNBADANSLEN EQU X'00000808' ANSLEN was not at least as long   *00325000
                         as EXAAHDR mapped by CSVEXAA.                  00326000
CSVDYNEXRSNBADREQUESTTYPE EQU X'00000809' Parameter list contains an   *00327000
                         incorrect request type. Possible overlay.      00328000
CSVDYNEXRSNBADESTAE EQU X'0000080A' ESTAE recovery could not be        *00329000
                         established. Possibly the caller had an EUT   *00330000
                         FRR.                                           00331000
CSVDYNEXRSNRESERVEDNOT0 EQU X'0000080B' Parameter list contains a      *00332000
                         non-0 value in a reserved field. Possible     *00333000
                         overlay.                                       00334000
CSVDYNEXRSNBADPARMLISTALET EQU X'0000080D' ALET of parameter list was  *00335000
                         not acceptable.                                00336000
CSVDYNEXRSNBADVERSION EQU X'0000080E' Parameter list contains an       *00337000
                         incorrect version number. Possible overlay.    00338000
CSVDYNEXRSNLOCKED EQU X'0000080F' Caller held a system lock.            00339000
CSVDYNEXRSNNOFASTPATH EQU X'00000814' The exit was not defined to      *00340000
                         allow fastpath calls                           00341000
CSVDYNEXRSNBADDSNAREA EQU X'00000815' Error while accessing area       *00342000
                         containing DSN                                 00343000
CSVDYNEXRSNBADRETAREA EQU X'00000816' Error while accessing RETAREA     00344000
CSVDYNEXRSNBADWORKAREA EQU X'00000817' Error while accessing WORKAREA   00345000
CSVDYNEXRSNBADOPEN EQU X'00000818' Unable to open supplied data set.    00346000
CSVDYNEXRSNEXITNAMENOTFOUND EQU X'00000819' EXITNAME does not exist     00347000
CSVDYNEXRSNBADRETLEN EQU X'0000081A' RETLEN was not at least as large  *00348000
                         as EXRETHDR plus one EXRETINFO entry           00349000
CSVDYNEXRSNREG2INRUB EQU X'0000081B' RUB indicated to set reg 2. Not   *00350000
                         allowed when exit allows AMODE 24 (i.e., the  *00351000
                         exit is defined as AMODE=24 or                *00352000
                         AMODE=DEFINED).                                00353000
CSVDYNEXRSNMODULENOTFOUND EQU X'0000081C' Requested module was not     *00354000
                         found.                                         00355000
CSVDYNEXRSNNORESMGR EQU X'0000081D' Unable to establish resource       *00356000
                         manager needed to track the persistence       *00357000
                         requirement of the exit.                       00358000
CSVDYNEXRSNBADNEXTTOKEN EQU X'0000081E' NEXTTOKEN is incorrect          00359000
CSVDYNEXRSNWORKAREABADDATA EQU X'0000081F' WORKAREA contains incorrect *00360000
                         data                                           00361000
CSVDYNEXRSNBADDSNAMEALET EQU X'00000820' ALET of area containing DSN   *00362000
                         is not acceptable                              00363000
CSVDYNEXRSNBADRETAREAALET EQU X'00000821' ALET of RETAREA is not       *00364000
                         acceptable                                     00365000
CSVDYNEXRSNBADEXITNAME EQU X'00000822' EXITNAME begins with blank or   *00366000
                         hex zero                                       00367000
CSVDYNEXRSNBADMODNAME EQU X'00000823' MODNAME begins with blank or hex *00368000
                         zero                                           00369000
CSVDYNEXRSNBADRUB EQU X'00000824' Error accessing RUB                   00370000
CSVDYNEXRSNBADRUBALET EQU X'00000825' ALET of RUB is not acceptable     00371000
CSVDYNEXRSNBADSDWA EQU X'00000826' Error accessing SDWA provided on    *00372000
                         CSVDYNEX REQUEST=RECOVER                       00373000
CSVDYNEXRSNBADAMODE EQU X'00000827' Exit is 31, module is 24 or vice   *00374000
                         versa                                          00375000
CSVDYNEXRSNBADKEY EQU X'00000828' Key is not 0-15 for DEFINE or        *00376000
                         caller's key does not match defined key for   *00377000
                         CALL.                                          00378000
CSVDYNEXRSNBADALLOC EQU X'00000829' Unable to allocate requested data  *00379000
                         set                                            00380000
CSVDYNEXRSNNOTREENTRANT EQU X'0000082A' Module is not reentrant         00381000
CSVDYNEXRSNNODYNALLOC EQU X'0000082B' Dsname specified when dynamic    *00382000
                         allocation is not yet allowed by the system    00383000
CSVDYNEXRSNBADABENDCONSEC EQU X'0000082C' AbendConsec=YES is not       *00384000
                         allowed for fast path user key exit            00385000
CSVDYNEXRSNNOTAPFAUTHORIZED EQU X'0000082E' Specified data set was not *00386000
                         APF authorized, so unable to load from it.     00387000
CSVDYNEXRSNREG3WITHLINKSTACKNO EQU X'0000082F' Request=CALL with       *00388000
                         LINKSTACK(NO) specified reg(3) in the RUB      00389000
CSVDYNEXRSNBADEXAAVER EQU X'00000830' EXAAVER field in parameter list  *00390000
                         has an incorrect value                         00391000
CSVDYNEXRSNANYKEYNOTRENT EQU X'00000831' Request=DEFINE with           *00392000
                         ANYKEY=YES but not REENTRANT=REQ               00393000
CSVDYNEXRSNBADPOS EQU X'00000832' POS value is incorrect.               00394000
CSVDYNEXRSNBADEXRETVER EQU X'00000833' EXRETVER field in parameter     *00395000
                         list has an incorrect value                    00396000
CSVDYNEXRSNTASKNOTBELOWINITIATOR EQU X'00000834'                        00397000
*                                                                       00398000
*                                      Task is not valid for            00399000
*                                      LOCAL=YES. It must be the        00400000
*                                      jobstep-program task or a        00401000
*                                      descendant of that task.         00402000
*                                      050201                           00403000
*                                                                       00404000
CSVDYNEXRSNNOPRECALLWA EQU X'00000835' REQUEST=CALL with FASTPATH=YES  *00405000
                         was issued for an exit for which a precall    *00406000
                         routine was defined, but no workarea was      *00407000
                         provided via the PRECALLWA parameter 050201    00408000
CSVDYNEXRSNDELETEWITHOUTFORCE EQU X'00000836' A DELETE request that    *00409000
                         did not specify FORCE=YES was made for an     *00410000
                         exit routine that was added with FORCE=YES.   *00411000
                         The request is rejected. If you are sure that *00412000
                         the exit routine can be deleted from the      *00413000
                         exit, also taking into consideration if this  *00414000
                         is a User Key FastPath (or AnyKey FastPath)   *00415000
                         exit which also requires FORCE=YES, request   *00416000
                         the DELETE function again, specifying         *00417000
                         FORCE=YES                                      00418000
CSVDYNEXRSNKEEPFIRSTNOTUNIQUE EQU X'00000837' ADD KEEPFIRST was        *00419000
                         requested but this exit already has an exit   *00420000
                         routine with that attribute.                   00421000
CSVDYNEXRSNKEEPLASTNOTUNIQUE EQU X'00000838' ADD KEEPLAST was          *00422000
                         requested but this exit already has an exit   *00423000
                         routine with that attribute.                   00424000
CSVDYNEXRSNFIRSTBUTKEEPFIRST EQU X'00000839' ADD FIRST was requested   *00425000
                         but this exit already has an exit routine     *00426000
                         with the KEEPFIRST attribute.                  00427000
CSVDYNEXRSNLASTBUTKEEPLAST EQU X'0000083A' ADD LAST was requested but  *00428000
                         this exit already has an exit routine with    *00429000
                         the KEEPLAST attribute.                        00430000
CSVDYNEXRSNMODULEABOVE2G EQU X'0000083B' Module is above 2G.            00431000
CSVDYNEXRC_ENV EQU 12    Return code 12, environmental error            00432000
*                                                                       00433000
*    *****************************************************************  00434000
*    *                                                               *  00435000
*    * Reason codes for RC=12                                           00436000
*    *                                                               *  00437000
*    *****************************************************************  00438000
*                                                                       00439000
*                                                                       00440000
CSVDYNEXRSNFUNCTIONNOTAVAILABLE EQU X'00000C01'                         00441000
*                                                                       00442000
*                                                                       00443000
*                                                                       00444000
CSVDYNEXRSNNOSTORAGE EQU X'00000C02' Storage was not available for a   *00445000
                         system control block or for containing the    *00446000
                         exit module.                                   00447000
CSVDYNEXRSNONEMODULEONLY EQU X'00000C03' The single module allowed by  *00448000
                         this exit has already been associated with    *00449000
                         that exit. The newly requested module cannot  *00450000
                         also be associated with that exit.             00451000
CSVDYNEXRSNNOTIMPLICITLYDEFINED EQU X'00000C04'                         00452000
*                                                                       00453000
*                                      An operator UNDEFINE request     00454000
*                                      was requested but the exit had   00455000
*                                      been explicitly defined. The     00456000
*                                      request is denied.               00457000
*                                                                       00458000
CSVDYNEXRC_COMPERROR EQU 16 Unknown, unexpected error                   00459000
*                                                                       00460000
*    *****************************************************************  00461000
*    *                                                               *  00462000
*    * Reason codes for RC=16                                           00463000
*    *                                                               *  00464000
*    *****************************************************************  00465000
*                                                                       00466000
*                                    *                                  00467000
*                                                                       00468000
CSVDYNEXRSNCOMPERROR EQU X'00001001' System error encountered by       *00469000
                         component.                                     00470000
EXRET1_LEN EQU *-EXRET1                                                 00471000
.L0005   ANOP                                                           00472000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00473000
         AIF   ('&LIST' EQ 'YES').P4                                    00474000
.P3      ANOP                                                           00475000
         POP   PRINT                                                    00476000
.P4      ANOP                                                           00477000
.P_EXIT  ANOP                                                           00478000
         MEND                                                           00479000
**/ CSVEXRET_2:;                                                        00480000
* %CSVEXRET_INCLUDED = 'YES';                                           00481000
* %DCL ZCBPRINT CHAR EXT;                                               00482000
* %DEACTIVATE ZCBPRINT;                                                 00483000
* %DCL CSVEXRET_LIST CHAR EXT;                                          00484000
* %DEACTIVATE CSVEXRET_LIST;                                            00485000
* %IF CSVEXRET_LIST ^= 'NO' &                                           00486000
*    ZCBPRINT ^= 'NO' %THEN                                             00487000
*   %GOTO CSVEXRET_3;                                                   00488000
*   @LIST PUSH NOECHO;                                                  00489000
*   @LIST NOASSEMBLE NOECHO;                                            00490000
*   @LIST OFF C NOECHO;                                                 00491000
* %CSVEXRET_3:;                                                         00492000
*/* Start of PL/X Source                                             */ 00493000
*%IF EXRET_ALET = '' %THEN  /*                                   @L1A*/ 00494000
*  %EXRET_ALET = '0';      /*                                    @L1A*/ 00495000
*%EXRET_VIA='';             /*                                   @L1A*/ 00496000
*%IF EXRET_ALET^='0' %THEN   /*                                  @L1A*/ 00497000
*  %EXRET_VIA='VIA(EXRET_ALET)';    /*                           @L1A*/ 00498000
*DCL 1 EXRET BASED,                 /*                           @L1A*/ 00499000
*      2 EXRETHDR,                  /*                           @L1A*/ 00500000
*        3 EXRET#RET FIXED(32),   /* Number of modules for which        00501000
*               information is returned. When RETINFO=LAST,             00502000
*               RETINFO=LOWEST, or                                      00503000
*               RETINFO=HIGHEST is specified, this indicates how        00504000
*               many modules were called, since information about only  00505000
*               one is returned.                                 @L1A*/ 00506000
*        3 EXRET#REM FIXED(32),   /* Number of modules remaining for    00507000
*                            which information was not returned.        00508000
*                            This field will be 0 for REQUEST=RECOVER.  00509000
*                                                                @L1A*/ 00510000
*      2 EXRETINFO(*),              /* Return information entry  @L1A*/ 00511000
*        3 EXRETFLAGS BIT(8),       /* Return flags              @L1A*/ 00512000
*         4 EXRETABEND BIT(1),      /* Indicates that the called        00513000
*                                      module abended            @L1A*/ 00514000
*        3 ExRetRecoverFlags Bit(8),  /* Output from the                00515000
*                                      RECOVER function. This is not    00516000
*                                   set for the CALL function.   @L1A*/ 00517000
*         4 ExRetRecErrorBeforeInit Bit(1),  /* Error occurred before   00518000
*                initialization completed. It is likely that the        00519000
*                input WorkArea was not valid.                   @L1A*/ 00520000
*         4 ExRetRecExitModInControl Bit(1),  /* Error occurred         00521000
*                within an exit module.                          @L1A*/ 00522000
*         4 ExRetRecAccRUB Bit(1),  /* Error occurred                   00523000
*                while accessing RUB area                        @L1A*/ 00524000
*         4 ExRetRecAccRetArea Bit(1),  /* Error occurred               00525000
*                while accessing RetArea                         @L1A*/ 00526000
*         4 ExRetRecAccPlist Bit(1),  /* Error occurred                 00527000
*                while accessing parameter list                  @L1A*/ 00528000
*         4 ExRetRecPrecallRtnInControl Bit(1), /* Error occurred       00529000
*                within the precall routine                    050201*/ 00530000
*        3 * CHAR(2),               /* Reserved                  @L1A*/ 00531000
*        3 EXRETREGS,               /* Information from regs     @L1A*/ 00532000
*          4 EXRETCODE FIXED(32),   /* Return code, if bit              00533000
*                                      ExretAbend is off         @L1A*/ 00534000
*           5 EXRETAbendCode Fixed(32), /* Abend code, if bit           00535000
*                                      ExretAbend is on. Its format     00536000
*                                      matches that of SDWACMPC  @L1A*/ 00537000
*          4 EXRETRSN FIXED(32),    /* Reason code, if bit              00538000
*                                      ExretAbend is off         @L1A*/ 00539000
*           5 EXRETAbendRsnCode Fixed(32), /* Abend reason code, if     00540000
*                                      bit ExretAbend is on      @L1A*/ 00541000
*          4 EXRETR1 FIXED(32);     /* Return value in R1 from          00542000
*                                      exit, if bit                     00543000
*                                      ExretAbend is off         @L1A*/ 00544000
*DCL 1 EXRET1 BASED,                /*                           @02P*/ 00545000
*      2 EXRET1HDR,                 /*                           @02P*/ 00546000
*        3 EXRET1#RET FIXED(32),  /* Number of modules for which        00547000
*               information is returned. When RETINFO=LAST,             00548000
*               RETINFO=LOWEST, or                                      00549000
*               RETINFO=HIGHEST is specified, this indicates how        00550000
*               many modules were called, since information about only  00551000
*               one is returned.                                 @02P*/ 00552000
*        3 EXRET1#REM FIXED(32),  /* Number of modules remaining for    00553000
*                            which information was not returned.        00554000
*                            This field will be 0 for REQUEST=RECOVER.  00555000
*                                                                @02P*/ 00556000
*      2 EXRET1INFO(*),             /* Return information entry  @02P*/ 00557000
*        3 EXRET1FLAGS BIT(8),      /* Return flags              @02P*/ 00558000
*         4 EXRET1ABEND BIT(1),     /* Indicates that the called        00559000
*                                      module abended            @02P*/ 00560000
*        3 ExRet1RecoverFlags Bit(8), /* Output from the                00561000
*                                      RECOVER function. This is not    00562000
*                                   set for the CALL function.   @02P*/ 00563000
*         4 ExRet1RecErrorBeforeInit Bit(1), /* Error occurred before   00564000
*                initialization completed. It is likely that the        00565000
*                input WorkArea was not valid.                   @02P*/ 00566000
*         4 ExRet1RecExitModInControl Bit(1), /* Error occurred         00567000
*                within an exit module.                          @02P*/ 00568000
*         4 ExRet1RecAccRUB Bit(1), /* Error occurred                   00569000
*                while accessing RUB area                        @02P*/ 00570000
*         4 ExRet1RecAccRetArea Bit(1), /* Error occurred               00571000
*                while accessing RetArea                         @02P*/ 00572000
*         4 ExRet1RecAccPlist Bit(1), /* Error occurred                 00573000
*                while accessing parameter list                  @02P*/ 00574000
*         4 ExRet1RecPrecallRtnInControl Bit(1), /* Error occurred      00575000
*                within the precall routine                    050201*/ 00576000
*        3 * CHAR(2),               /* Reserved                  @02P*/ 00577000
*        3 ExRet1REGS,              /* Information from regs     @02P*/ 00578000
*          4 ExRet1CODE FIXED(32),  /* Return code, if bit              00579000
*                                      ExRet1Abend is off        @02P*/ 00580000
*           5 ExRet1AbendCode Fixed(32), /* Abend code, if bit          00581000
*                                      ExRet1Abend is on. Its format    00582000
*                                      matches that of SDWACMPC  @02P*/ 00583000
*          4 ExRet1RSN FIXED(32),   /* Reason code, if bit              00584000
*                                      ExRet1Abend is off        @02P*/ 00585000
*           5 ExRet1AbendRsnCode Fixed(32), /* Abend reason code, if    00586000
*                                      bit ExRet1Abend is on     @02P*/ 00587000
*          4 ExRet1R1 FIXED(32),    /* Return value in R1 from          00588000
*                                      exit, if bit                     00589000
*                                      ExRet1Abend is off        @02P*/ 00590000
*        3 ExRet1Modname CHAR(8) Bdy(Word)                              00591000
*                                   /* Name of the exit routine when    00592000
*                                      1st word not all 0's    050201*/ 00593000
*         ,5 ExRet1PrecallIndicator Char(4)  /* When all 0's, the       00594000
*                                      next word contains the address   00595000
*                                      of the precall routine, and the  00596000
*                                      precall routine was in control   00597000
*                                                              050201*/ 00598000
*         ,5 ExRet1PrecallRoutineAddr Ptr(31) /* The address of the     00599000
*                                      precall routine         050201*/ 00600000
*         ;                                                             00601000
*                                                                       00602000
*    /* General constants for CSVDYNEX                           @L1A*/ 00603000
*Dcl Csvdynex_Precall_Call Constant(0);  /* Return code from the        00604000
*                         precall routine indicating to call the        00605000
*                         exit routine                         050201*/ 00606000
*Dcl Csvdynex_Precall_NoCall Constant(8);  /* Return code from the      00607000
*                         precall routine indicating not to call the    00608000
*                         exit routine                         050201*/ 00609000
*                                                                       00610000
*    /* Return Code / Reason code constants for CSVDYNEX         @L1A*/ 00611000
*                                                                       00612000
*    /* It is guaranteed that                                           00613000
*       no reason code will be reused (i.e., the same reason code       00614000
*       will not be used for more than one return code).         @L1A*/ 00615000
*                                                                       00616000
*    /* Also note carefully that bits 0-15 of the reason code           00617000
*       may contain component-diagnostic data and must not be           00618000
*       assumed to be 0.                                         @L1A*/ 00619000
*                                                                       00620000
*Dcl CsvdynexRsnCodeMask Bit(32) Constant('0000FFFF'X); /* Use this     00621000
*               mask to isolate the non component-diagnostic            00622000
*               portion of the reason code.                      @L1A*/ 00623000
*DCL CsvdynexRC_OK Constant(0);     /* Return code 0, success    @L1A*/ 00624000
*DCL CsvdynexRC_WARN Constant(4);   /* Return code 4, warning    @L1A*/ 00625000
*    /* Reason codes for RC=4                                    @L1A*/ 00626000
*Dcl CsvdynexRsnAlreadyExists Bit(32) Constant('00000401'X); /* The     00627000
*                   exit or module already exists                @L1A*/ 00628000
*Dcl CsvdynexRsnDoesNotExist Bit(32) Constant('00000402'X); /* The      00629000
*                   module or exit does not exist.               @L1A*/ 00630000
*Dcl CsvdynexRsnNotAllDataReturned Bit(32) Constant('00000403'X); /*    00631000
*                   For LIST, the provided output area was              00632000
*                   not large enough to contain all the data.    @L1A*/ 00633000
*Dcl CsvdynexRsnNoModules Bit(32) Constant('00000406'X); /* For CALL    00634000
*                   or QUERY                                            00635000
*                   no modules were associated with the exit.    @L1A*/ 00636000
*Dcl CsvdynexRsnMoreModules Bit(32) Constant('00000407'X); /* For CALL, 00637000
*                   there are more modules to be called for this exit.  00638000
*                   The call process stopped because the return area    00639000
*                   was not large enough to contain data for all the    00640000
*                   modules.                                     @L1A*/ 00641000
*DCL CsvdynexRsnUserKeyDeleteNoForce Bit(32)                            00642000
*               Constant('00000408'X);  /* User Key FastPath module     00643000
*                   (or AnyKey FastPath module)                         00644000
*                   delete was specified without FORCE=YES. Exit has    00645000
*                   been deactivated but storage has not been freed.    00646000
*                                                                @01C*/ 00647000
*DCL CsvdynexRsnQueryNotFound Bit(32)                                   00648000
*               Constant('00000409'X);  /* For REQUEST=QUERY,           00649000
*                   the exit name was not found.                        00650000
*                                                                @L1A*/ 00651000
*DCL CsvdynexRsnImplicitlyDefined Bit(32)                               00652000
*               Constant('0000040A'X);  /* For REQUEST=QUERY,           00653000
*                  the exit was implicitly defined by virtue of having  00654000
*                  either its attributes set or modules added to it.    00655000
*                                                                @L1A*/ 00656000
*DCL CsvdynexRC_InvParm Constant(8); /* Return code 8,                  00657000
*                                      invalid parameter         @L1A*/ 00658000
*                                   /*                           @L1A*/ 00659000
*    /* Reason codes for RC=8                                    @L1A*/ 00660000
*Dcl CsvdynexRsnBadParmList Bit(32) Constant('00000801'X); /* Error     00661000
*                   while accessing parameter list               @L1A*/ 00662000
*Dcl CsvdynexRsnSRBMode Bit(32) Constant('00000802'X); /* Caller was    00663000
*                   in SRB mode                                  @L1A*/ 00664000
*Dcl CsvdynexRsnNotEnabled Bit(32) Constant('00000803'X); /* Caller     00665000
*                   was not enabled                              @L1A*/ 00666000
*Dcl CsvdynexRsnNotAuthorized Bit(32) Constant('00000804'X); /* Caller  00667000
*                   was not authorized                           @L1A*/ 00668000
*Dcl CsvdynexRsnHomeNotPrimary Bit(32) Constant('00000805'X); /*        00669000
*                   HASN ^= PASN                                 @L1A*/ 00670000
*Dcl CsvdynexRsnBadAnsareaALET Bit(32) Constant('00000806'X); /* ALET   00671000
*                   of ANSAREA was not acceptable                @L1A*/ 00672000
*Dcl CsvdynexRsnBadAnsarea Bit(32) Constant('00000807'X); /* Error      00673000
*                   while accessing ANSAREA                      @L1A*/ 00674000
*Dcl CsvdynexRsnBadAnsLen Bit(32) Constant('00000808'X); /* ANSLEN      00675000
*                   was not at least as long as EXAAHDR mapped by       00676000
*                   CSVEXAA.                                     @L1A*/ 00677000
*Dcl CsvdynexRsnBadRequestType Bit(32) Constant('00000809'X); /*        00678000
*                   Parameter list contains an incorrect request type.  00679000
*                   Possible overlay.                            @L1A*/ 00680000
*DCL CsvdynexRsnBadEstae Bit(32) Constant('0000080A'X); /* ESTAE        00681000
*                   recovery could not be established. Possibly the     00682000
*                   caller had an EUT FRR.                       @L1A*/ 00683000
*DCL CsvdynexRsnReservedNot0 Bit(32) Constant('0000080B'X); /*          00684000
*                   Parameter list contains a non-0 value in a reserved 00685000
*                   field. Possible overlay.                     @L1A*/ 00686000
*DCL CsvdynexRsnBadParmlistAlet Bit(32) Constant('0000080D'X); /* ALET  00687000
*                   of parameter list was not acceptable.        @L1A*/ 00688000
*DCL CsvdynexRsnBadVersion Bit(32) Constant('0000080E'X); /*            00689000
*                   Parameter list contains an incorrect version        00690000
*                   number. Possible overlay.                    @L1A*/ 00691000
*DCL CsvdynexRsnLocked Bit(32) Constant('0000080F'X);    /* Caller      00692000
*                   held a system lock.                          @L1A*/ 00693000
*DCL CsvdynexRsnNoFastPath Bit(32) Constant('00000814'X); /* The exit   00694000
*                   was not defined to allow fastpath calls      @L1A*/ 00695000
*DCL CsvdynexRsnBadDSNArea Bit(32) Constant('00000815'X); /* Error      00696000
*                   while accessing area containing DSN          @L1A*/ 00697000
*DCL CsvdynexRsnBadRetArea Bit(32) Constant('00000816'X); /* Error      00698000
*                   while accessing RETAREA                      @L1A*/ 00699000
*DCL CsvdynexRsnBadWorkArea Bit(32) Constant('00000817'X); /* Error     00700000
*                   while accessing WORKAREA                     @L1A*/ 00701000
*DCL CsvdynexRsnBadOpen    Bit(32) Constant('00000818'X); /* Unable     00702000
*                   to open supplied data set.                   @L1A*/ 00703000
*DCL CsvdynexRsnExitNameNotFound Bit(32)                                00704000
*               Constant('00000819'X);     /* EXITNAME does not         00705000
*                   exist                                        @L1A*/ 00706000
*DCL CsvdynexRsnBadRetLen Bit(32)                                       00707000
*               Constant('0000081A'X);     /* RETLEN was not at least   00708000
*                   as large as EXRETHDR plus one EXRETINFO entry       00709000
*                                                                @L1A*/ 00710000
*DCL CsvdynexRsnReg2InRUB Bit(32)                                       00711000
*               Constant('0000081B'X);     /* RUB indicated to set      00712000
*                   reg 2. Not allowed when exit allows AMODE 24        00713000
*                   (i.e., the exit is defined as AMODE=24 or           00714000
*                   AMODE=DEFINED).                              @L1A*/ 00715000
*DCL CsvdynexRsnModuleNotFound Bit(32)                                  00716000
*               Constant('0000081C'X);     /* Requested module          00717000
*                   was not found.                               @L1A*/ 00718000
*DCL CsvdynexRsnNoRESMGR Bit(32)                                        00719000
*               Constant('0000081D'X);     /* Unable to establish       00720000
*                   resource manager needed to track the persistence    00721000
*                   requirement of the exit.                     @L1A*/ 00722000
*DCL CsvdynexRsnBadNextToken Bit(32)                                    00723000
*               Constant('0000081E'X);     /* NEXTTOKEN is incorrect    00724000
*                                                                @L1A*/ 00725000
*DCL CsvdynexRsnWorkAreaBadData Bit(32)                                 00726000
*               Constant('0000081F'X);     /* WORKAREA contains         00727000
*                   incorrect data                               @L1A*/ 00728000
*DCL CsvdynexRsnBadDsnameALET Bit(32)                                   00729000
*               Constant('00000820'X);     /* ALET of area containing   00730000
*                   DSN is not acceptable                        @L1A*/ 00731000
*DCL CsvdynexRsnBadRetareaALET Bit(32)                                  00732000
*               Constant('00000821'X);     /* ALET of RETAREA           00733000
*                   is not acceptable                            @L1A*/ 00734000
*DCL CsvdynexRsnBadExitName Bit(32)                                     00735000
*               Constant('00000822'X);     /* EXITNAME begins with      00736000
*                   blank or hex zero                            @L1A*/ 00737000
*DCL CsvdynexRsnBadModName Bit(32)                                      00738000
*               Constant('00000823'X);     /* MODNAME begins with       00739000
*                   blank or hex zero                            @L1A*/ 00740000
*DCL CsvdynexRsnBadRUB Bit(32)                                          00741000
*               Constant('00000824'X);     /* Error accessing RUB       00742000
*                                                                @L1A*/ 00743000
*DCL CsvdynexRsnBadRUBALET Bit(32)                                      00744000
*               Constant('00000825'X);     /* ALET of RUB               00745000
*                   is not acceptable                            @L1A*/ 00746000
*DCL CsvdynexRsnBadSDWA Bit(32)                                         00747000
*               Constant('00000826'X);     /* Error accessing SDWA      00748000
*                           provided on CSVDYNEX REQUEST=RECOVER @L1A*/ 00749000
*DCL CsvdynexRsnBadAmode Bit(32)                                        00750000
*               Constant('00000827'X);  /* Exit is 31, module is 24     00751000
*                                          or vice versa         @L1A*/ 00752000
*DCL CsvdynexRsnBadKey        Bit(32)                                   00753000
*               Constant('00000828'X);  /* Key is not 0-15 for DEFINE   00754000
*                   or caller's key does not match defined key          00755000
*                   for CALL.                                    @L1A*/ 00756000
*DCL CsvdynexRsnBadAlloc      Bit(32)                                   00757000
*               Constant('00000829'X);  /* Unable to allocate           00758000
*                   requested data set                           @L1A*/ 00759000
*DCL CsvdynexRsnNotReentrant  Bit(32)                                   00760000
*               Constant('0000082A'X);  /* Module is not reentrant      00761000
*                                                                @L1A*/ 00762000
*DCL CsvdynexRsnNoDynalloc Bit(32)                                      00763000
*               Constant('0000082B'X);  /* Dsname specified when        00764000
*               dynamic allocation is not yet allowed by the system     00765000
*                                                                @L1A*/ 00766000
*DCL CsvdynexRsnBadAbendConsec Bit(32)                                  00767000
*               Constant('0000082C'X);  /* AbendConsec=YES is not       00768000
*               allowed for fast path user key exit              @L1A*/ 00769000
*DCL CsvdynexRsnNotApfAuthorized Bit(32)                                00770000
*               Constant('0000082E'X);  /* Specified data set was not   00771000
*               APF authorized, so unable to load from it.       @L1A*/ 00772000
*DCL CsvdynexRsnReg3WithLinkstackNo Bit(32)                             00773000
*               Constant('0000082F'X);  /* Request=CALL with            00774000
*               LINKSTACK(NO) specified reg(3) in the RUB        @L1A*/ 00775000
*DCL CsvdynexRsnBadExaaver Bit(32)                                      00776000
*               Constant('00000830'X);  /* EXAAVER field in             00777000
*               parameter list has an incorrect value            @03A*/ 00778000
*DCL CsvdynexRsnAnyKeyNotRent Bit(32)                                   00779000
*               Constant('00000831'X);  /* Request=DEFINE with          00780000
*               ANYKEY=YES but not REENTRANT=REQ                 @01A*/ 00781000
*DCL CsvdynexRsnBadPos Bit(32)                                          00782000
*               Constant('00000832'X);  /* POS value is                 00783000
*               incorrect.                                       @01A*/ 00784000
*DCL CsvdynexRsnBadExretVer Bit(32)                                     00785000
*               Constant('00000833'X);  /* EXRETVER field in            00786000
*               parameter list has an incorrect value            @02A*/ 00787000
*DCL CsvdynexRsnTaskNotBelowInitiator Bit(32)                           00788000
*               Constant('00000834'X);  /* Task is not valid for        00789000
*               LOCAL=YES. It must be the jobstep-program task          00790000
*               or a descendant of that task.                  050201*/ 00791000
*DCL CsvdynexRsnNoPrecallWA Bit(32)                                     00792000
*               Constant('00000835'X);  /* REQUEST=CALL with            00793000
*               FASTPATH=YES was issued for an exit for which           00794000
*               a precall routine was defined, but no workarea          00795000
*               was provided via the PRECALLWA parameter       050201*/ 00796000
*DCL CsvdynexRsnDeleteWithoutForce BIT(32)                              00797000
*               Constant('00000836'X);  /* A DELETE request that did    00798000
*               not specify FORCE=YES was made for an exit routine      00799000
*               that was added with FORCE=YES. The request is rejected. 00800000
*               If you are sure that the exit routine can be deleted    00801000
*               from the exit, also taking into consideration           00802000
*               if this is a User Key FastPath (or AnyKey FastPath)     00803000
*               exit which also requires FORCE=YES,                     00804000
*               request the DELETE function again,                      00805000
*               specifying FORCE=YES                             @L2A*/ 00806000
*DCL CsvdynexRsnKeepFirstNotUnique BIT(32)                              00807000
*               Constant('00000837'X);  /* ADD KEEPFIRST was            00808000
*               requested but this exit already has an exit routine     00809000
*               with that attribute.                             @L3A*/ 00810000
*DCL CsvdynexRsnKeepLastNotUnique BIT(32)                               00811000
*               Constant('00000838'X);  /* ADD KEEPLAST was             00812000
*               requested but this exit already has an exit routine     00813000
*               with that attribute.                             @L3A*/ 00814000
*DCL CsvdynexRsnFirstButKeepFirst BIT(32)                               00815000
*               Constant('00000839'X);  /* ADD FIRST was requested but  00816000
*               this exit already has an exit routine with the          00817000
*               KEEPFIRST attribute.                             @L3A*/ 00818000
*DCL CsvdynexRsnLastButKeepLast BIT(32)                                 00819000
*               Constant('0000083A'X);  /* ADD LAST was requested but   00820000
*               this exit already has an exit routine with the          00821000
*               KEEPLAST attribute.                              @L3A*/ 00822000
*DCL CsvdynexRsnModuleAbove2G Bit(32)                                   00823000
*               Constant('0000083B'X);  /* Module is above 2G.   @L3A*/ 00824000
*DCL CsvdynexRC_Env Constant(12);   /* Return code 12,                  00825000
*                                      environmental error       @L1A*/ 00826000
*    /* Reason codes for RC=12                                   @L1A*/ 00827000
*Dcl CsvdynexRsnFunctionNotAvailable Bit(32) Constant('00000C01'X);     00828000
*                                   /*                           @L1A*/ 00829000
*DCL CsvdynexRsnNoStorage     Bit(32)                                   00830000
*               Constant('00000C02'X);  /* Storage was not available    00831000
*               for a system control block or for containing the        00832000
*               exit module.                                     @L1A*/ 00833000
*DCL CsvdynexRsnOneModuleOnly Bit(32)                                   00834000
*               Constant('00000C03'X);  /* The single module allowed    00835000
*               by this exit has already been associated with that      00836000
*               exit. The newly requested module cannot also            00837000
*               be associated with that exit.                    @L1A*/ 00838000
*DCL CsvdynexRsnNotImplicitlyDefined Bit(32)                            00839000
*               Constant('00000C04'X);  /* An operator UNDEFINE         00840000
*                   request was requested but the exit had been         00841000
*                   explicitly defined. The request is denied.   @L1A*/ 00842000
*                                                                       00843000
*DCL CsvdynexRC_CompError Constant(16); /* Unknown, unexpected          00844000
*                                      error                     @L1A*/ 00845000
*                                   /*                           @L1A*/ 00846000
*    /* Reason codes for RC=16                                   @L1A*/ 00847000
*                                   /*                           @L1A*/ 00848000
*Dcl CsvdynexRsnCompError Bit(32) Constant('00001001'X);  /*            00849000
*               System error encountered by component.           @L1A*/ 00850000
* @LOGIC;                                                               00851000
* #PRAGMA TOOL=CBGEN.                                                   00852000
* #USEORG.                                                              00853000
* #EPRAGMA.                                                             00854000
* @ENDLOGIC;                                                            00855000
*/* End of PL/X Source                                               */ 00856000
* %IF CSVEXRET_LIST ^= 'NO' &                                           00857000
*    ZCBPRINT ^= 'NO' %THEN                                             00858000
*   %GOTO CSVEXRET_4;                                                   00859000
*   @LIST POP NOECHO;                                                   00860000
* %CSVEXRET_4:;                                                         00861000
* %END;                                                                 00862000
